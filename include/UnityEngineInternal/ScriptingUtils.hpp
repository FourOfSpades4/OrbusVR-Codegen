// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Delegate
  class Delegate;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Completed forward declares
// Type namespace: UnityEngineInternal
namespace UnityEngineInternal {
  // Forward declaring type: ScriptingUtils
  class ScriptingUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngineInternal::ScriptingUtils);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngineInternal::ScriptingUtils*, "UnityEngineInternal", "ScriptingUtils");
// Type namespace: UnityEngineInternal
namespace UnityEngineInternal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngineInternal.ScriptingUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class ScriptingUtils : public ::Il2CppObject {
    public:
    // static public System.Delegate CreateDelegate(System.Type type, System.Reflection.MethodInfo methodInfo)
    // Offset: 0x283F934
    static ::System::Delegate* CreateDelegate(::System::Type* type, ::System::Reflection::MethodInfo* methodInfo);
  }; // UnityEngineInternal.ScriptingUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngineInternal::ScriptingUtils::CreateDelegate
// Il2CppName: CreateDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Delegate* (*)(::System::Type*, ::System::Reflection::MethodInfo*)>(&UnityEngineInternal::ScriptingUtils::CreateDelegate)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* methodInfo = &::il2cpp_utils::GetClassFromName("System.Reflection", "MethodInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngineInternal::ScriptingUtils*), "CreateDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type, methodInfo});
  }
};
