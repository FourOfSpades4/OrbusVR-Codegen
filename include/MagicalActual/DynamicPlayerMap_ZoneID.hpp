// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MagicalActual.DynamicPlayerMap
#include "MagicalActual/DynamicPlayerMap.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::DynamicPlayerMap::ZoneID, "MagicalActual", "DynamicPlayerMap/ZoneID");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.DynamicPlayerMap/ZoneID
  // [TokenAttribute] Offset: FFFFFFFF
  struct DynamicPlayerMap::ZoneID/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ZoneID
    constexpr ZoneID(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID Zone1
    static constexpr const int Zone1 = 0;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID Zone1
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_Zone1();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID Zone1
    static void _set_Zone1(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID Zone2
    static constexpr const int Zone2 = 1;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID Zone2
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_Zone2();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID Zone2
    static void _set_Zone2(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID Zone3
    static constexpr const int Zone3 = 2;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID Zone3
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_Zone3();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID Zone3
    static void _set_Zone3(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID Zone4
    static constexpr const int Zone4 = 3;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID Zone4
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_Zone4();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID Zone4
    static void _set_Zone4(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID Zone5
    static constexpr const int Zone5 = 4;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID Zone5
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_Zone5();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID Zone5
    static void _set_Zone5(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID Overworld
    static constexpr const int Overworld = 5;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID Overworld
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_Overworld();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID Overworld
    static void _set_Overworld(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID HighsteppeUpper
    static constexpr const int HighsteppeUpper = 6;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID HighsteppeUpper
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_HighsteppeUpper();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID HighsteppeUpper
    static void _set_HighsteppeUpper(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID HighsteppeLower
    static constexpr const int HighsteppeLower = 7;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID HighsteppeLower
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_HighsteppeLower();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID HighsteppeLower
    static void _set_HighsteppeLower(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone1
    static constexpr const int Minizone1 = 8;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone1
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_Minizone1();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone1
    static void _set_Minizone1(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone2
    static constexpr const int Minizone2 = 9;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone2
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_Minizone2();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone2
    static void _set_Minizone2(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone3
    static constexpr const int Minizone3 = 10;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone3
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_Minizone3();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone3
    static void _set_Minizone3(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // static field const value: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone4
    static constexpr const int Minizone4 = 11;
    // Get static field: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone4
    static ::MagicalActual::DynamicPlayerMap::ZoneID _get_Minizone4();
    // Set static field: static public MagicalActual.DynamicPlayerMap/ZoneID Minizone4
    static void _set_Minizone4(::MagicalActual::DynamicPlayerMap::ZoneID value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // MagicalActual.DynamicPlayerMap/ZoneID
  #pragma pack(pop)
  static check_size<sizeof(DynamicPlayerMap::ZoneID), 0 + sizeof(int)> __MagicalActual_DynamicPlayerMap_ZoneIDSizeCheck;
  static_assert(sizeof(DynamicPlayerMap::ZoneID) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
