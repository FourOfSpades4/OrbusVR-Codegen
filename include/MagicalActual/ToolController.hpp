// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OrbusTrackedController
  class OrbusTrackedController;
  // Forward declaring type: ClickedEventHandler
  class ClickedEventHandler;
  // Forward declaring type: PhysicsInteractable
  class PhysicsInteractable;
  // Forward declaring type: ClickedEventArgs
  struct ClickedEventArgs;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ToolController
  class ToolController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ToolController);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ToolController*, "MagicalActual", "ToolController");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0xC5
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ToolController
  // [TokenAttribute] Offset: FFFFFFFF
  class ToolController : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Events.UnityEvent MainTriggerClickEvent
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Events::UnityEvent* MainTriggerClickEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public UnityEngine.Events.UnityEvent MainTriggerUnclickEvent
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Events::UnityEvent* MainTriggerUnclickEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public UnityEngine.Events.UnityEvent MainGripClickEvent
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Events::UnityEvent* MainGripClickEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public UnityEngine.Events.UnityEvent MainGripUnclickEvent
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Events::UnityEvent* MainGripUnclickEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public UnityEngine.Events.UnityEvent OffhandTriggerClickEvent
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Events::UnityEvent* OffhandTriggerClickEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public UnityEngine.Events.UnityEvent OffhandTriggerUnclickEvent
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Events::UnityEvent* OffhandTriggerUnclickEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public UnityEngine.Events.UnityEvent OffhandGripClickEvent
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Events::UnityEvent* OffhandGripClickEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public UnityEngine.Events.UnityEvent OffhandGripUnclickEvent
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Events::UnityEvent* OffhandGripUnclickEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private OrbusTrackedController MLFAOLPJNIF
    // Size: 0x8
    // Offset: 0x58
    ::GlobalNamespace::OrbusTrackedController* MLFAOLPJNIF;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OrbusTrackedController*) == 0x8);
    // private OrbusTrackedController GNJHALGCEHE
    // Size: 0x8
    // Offset: 0x60
    ::GlobalNamespace::OrbusTrackedController* GNJHALGCEHE;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OrbusTrackedController*) == 0x8);
    // private UnityEngine.Transform BAHENOANEHA
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Transform* BAHENOANEHA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform LKCGHPCDEML
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Transform* LKCGHPCDEML;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private ClickedEventHandler AJDDOIGJNIJ
    // Size: 0x8
    // Offset: 0x78
    ::GlobalNamespace::ClickedEventHandler* AJDDOIGJNIJ;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler NHMNCBAEJJD
    // Size: 0x8
    // Offset: 0x80
    ::GlobalNamespace::ClickedEventHandler* NHMNCBAEJJD;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler BKHHPDICCFK
    // Size: 0x8
    // Offset: 0x88
    ::GlobalNamespace::ClickedEventHandler* BKHHPDICCFK;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler BOFOHLPDBHD
    // Size: 0x8
    // Offset: 0x90
    ::GlobalNamespace::ClickedEventHandler* BOFOHLPDBHD;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler ANAKCGBKFJH
    // Size: 0x8
    // Offset: 0x98
    ::GlobalNamespace::ClickedEventHandler* ANAKCGBKFJH;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler EIBIGHGAALL
    // Size: 0x8
    // Offset: 0xA0
    ::GlobalNamespace::ClickedEventHandler* EIBIGHGAALL;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler JFLHPHEMECF
    // Size: 0x8
    // Offset: 0xA8
    ::GlobalNamespace::ClickedEventHandler* JFLHPHEMECF;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler LKMJOIGFIKG
    // Size: 0x8
    // Offset: 0xB0
    ::GlobalNamespace::ClickedEventHandler* LKMJOIGFIKG;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE5810
    // private PhysicsInteractable <NPOPILONGLE>k__BackingField
    // Size: 0x8
    // Offset: 0xB8
    ::GlobalNamespace::PhysicsInteractable* NPOPILONGLE;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PhysicsInteractable*) == 0x8);
    // private System.Boolean ADMHDHJNACN
    // Size: 0x1
    // Offset: 0xC0
    bool ADMHDHJNACN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean ONMBIAIEAFA
    // Size: 0x1
    // Offset: 0xC1
    bool ONMBIAIEAFA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean INLLFFILHMC
    // Size: 0x1
    // Offset: 0xC2
    bool INLLFFILHMC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean JDAGHMIDGOL
    // Size: 0x1
    // Offset: 0xC3
    bool JDAGHMIDGOL;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean COKJDMPDNPH
    // Size: 0x1
    // Offset: 0xC4
    bool COKJDMPDNPH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Events.UnityEvent MainTriggerClickEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_MainTriggerClickEvent();
    // Get instance field reference: public UnityEngine.Events.UnityEvent MainTriggerUnclickEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_MainTriggerUnclickEvent();
    // Get instance field reference: public UnityEngine.Events.UnityEvent MainGripClickEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_MainGripClickEvent();
    // Get instance field reference: public UnityEngine.Events.UnityEvent MainGripUnclickEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_MainGripUnclickEvent();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OffhandTriggerClickEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_OffhandTriggerClickEvent();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OffhandTriggerUnclickEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_OffhandTriggerUnclickEvent();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OffhandGripClickEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_OffhandGripClickEvent();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OffhandGripUnclickEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_OffhandGripUnclickEvent();
    // Get instance field reference: private OrbusTrackedController MLFAOLPJNIF
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OrbusTrackedController*& dyn_MLFAOLPJNIF();
    // Get instance field reference: private OrbusTrackedController GNJHALGCEHE
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OrbusTrackedController*& dyn_GNJHALGCEHE();
    // Get instance field reference: private UnityEngine.Transform BAHENOANEHA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_BAHENOANEHA();
    // Get instance field reference: private UnityEngine.Transform LKCGHPCDEML
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_LKCGHPCDEML();
    // Get instance field reference: private ClickedEventHandler AJDDOIGJNIJ
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_AJDDOIGJNIJ();
    // Get instance field reference: private ClickedEventHandler NHMNCBAEJJD
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_NHMNCBAEJJD();
    // Get instance field reference: private ClickedEventHandler BKHHPDICCFK
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_BKHHPDICCFK();
    // Get instance field reference: private ClickedEventHandler BOFOHLPDBHD
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_BOFOHLPDBHD();
    // Get instance field reference: private ClickedEventHandler ANAKCGBKFJH
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_ANAKCGBKFJH();
    // Get instance field reference: private ClickedEventHandler EIBIGHGAALL
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_EIBIGHGAALL();
    // Get instance field reference: private ClickedEventHandler JFLHPHEMECF
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_JFLHPHEMECF();
    // Get instance field reference: private ClickedEventHandler LKMJOIGFIKG
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_LKMJOIGFIKG();
    // Get instance field reference: private PhysicsInteractable <NPOPILONGLE>k__BackingField
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PhysicsInteractable*& dyn_$NPOPILONGLE$k__BackingField();
    // Get instance field reference: private System.Boolean ADMHDHJNACN
    [[deprecated("Use field access instead!")]] bool& dyn_ADMHDHJNACN();
    // Get instance field reference: private System.Boolean ONMBIAIEAFA
    [[deprecated("Use field access instead!")]] bool& dyn_ONMBIAIEAFA();
    // Get instance field reference: private System.Boolean INLLFFILHMC
    [[deprecated("Use field access instead!")]] bool& dyn_INLLFFILHMC();
    // Get instance field reference: private System.Boolean JDAGHMIDGOL
    [[deprecated("Use field access instead!")]] bool& dyn_JDAGHMIDGOL();
    // Get instance field reference: private System.Boolean COKJDMPDNPH
    [[deprecated("Use field access instead!")]] bool& dyn_COKJDMPDNPH();
    // private System.Void PPKHOKCIJBL()
    // Offset: 0x13B7B8C
    void PPKHOKCIJBL();
    // private System.Void DPDDNOBAFIP()
    // Offset: 0x13B81D4
    void DPDDNOBAFIP();
    // private System.Void JMAMBNADFNJ(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B87D0
    void JMAMBNADFNJ(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void LMLIIEKCIEL(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B8810
    void LMLIIEKCIEL(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public PhysicsInteractable PHJAPEGHPEA()
    // Offset: 0x13B8788
    ::GlobalNamespace::PhysicsInteractable* PHJAPEGHPEA();
    // public System.Void InstantiateUnityEvents()
    // Offset: 0x13B884C
    void InstantiateUnityEvents();
    // public System.Void JLCFMFAJDFM()
    // Offset: 0x13B895C
    void JLCFMFAJDFM();
    // private System.Void JEJLNABOFEJ(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B8A6C
    void JEJLNABOFEJ(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void LIEGKIDBOKN(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B8AA8
    void LIEGKIDBOKN(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void NAEJCHILADL(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B8AE8
    void NAEJCHILADL(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void APJILABICIN(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B8B28
    void APJILABICIN(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void OJPAFHDJNMD(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B8B64
    void OJPAFHDJNMD(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void LNJMKADEJLB(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B8BA0
    void LNJMKADEJLB(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x13B8BDC
    void GHLPBOJJHNG();
    // private System.Void LDGNJKBHGEO(PhysicsInteractable MMMEIONJJFJ)
    // Offset: 0x13B8DC4
    void LDGNJKBHGEO(::GlobalNamespace::PhysicsInteractable* MMMEIONJJFJ);
    // public PhysicsInteractable DCNIHMLOFOD()
    // Offset: 0x13B8148
    ::GlobalNamespace::PhysicsInteractable* DCNIHMLOFOD();
    // private System.Void LJCBCJNPFOJ(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B8DCC
    void LJCBCJNPFOJ(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void Update()
    // Offset: 0x13B8E08
    void Update();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x13B93BC
    void AFIACGLCIPB();
    // private System.Void KGILGALAMEC(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B95A4
    void KGILGALAMEC(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public PhysicsInteractable get_myPhysicsInteractable()
    // Offset: 0x13B8150
    ::GlobalNamespace::PhysicsInteractable* get_myPhysicsInteractable();
    // private System.Void NDGLKFLINOD(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B8790
    void NDGLKFLINOD(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void MJAJEADPMDA(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B8158
    void MJAJEADPMDA(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void DDMHMHGDAHP(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B95E0
    void DDMHMHGDAHP(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void DJJPJCNGKMI(PhysicsInteractable MMMEIONJJFJ)
    // Offset: 0x13B8DBC
    void DJJPJCNGKMI(::GlobalNamespace::PhysicsInteractable* MMMEIONJJFJ);
    // private System.Void KEPKKEBPAJH(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B961C
    void KEPKKEBPAJH(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void HHPGICKLGGH(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B965C
    void HHPGICKLGGH(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void HOGOLGIPMFM(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B969C
    void HOGOLGIPMFM(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void JENOIOBAEPG()
    // Offset: 0x13B96DC
    void JENOIOBAEPG();
    // private System.Void Start()
    // Offset: 0x13B98BC
    void Start();
    // public System.Void MLKHOALBGMM()
    // Offset: 0x13B9A9C
    void MLKHOALBGMM();
    // private System.Void NJKMHMEHFDA(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B9BAC
    void NJKMHMEHFDA(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public System.Void .ctor()
    // Offset: 0x13B9BE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ToolController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ToolController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ToolController*, creationType>()));
    }
    // private System.Void LBIKOKCCILF()
    // Offset: 0x13B9BF0
    void LBIKOKCCILF();
    // private System.Void IAHKCHNHJID(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B8198
    void IAHKCHNHJID(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void LPFEFPGBEFE(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B9DD0
    void LPFEFPGBEFE(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public PhysicsInteractable HKJEBFIGNMO()
    // Offset: 0x13B8140
    ::GlobalNamespace::PhysicsInteractable* HKJEBFIGNMO();
    // private System.Void ILINPNPKBMO(PhysicsInteractable MMMEIONJJFJ)
    // Offset: 0x13B959C
    void ILINPNPKBMO(::GlobalNamespace::PhysicsInteractable* MMMEIONJJFJ);
    // private System.Void HBIAFNODJFD(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B9E0C
    void HBIAFNODJFD(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void GBAFKPPJHBI(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13B9E4C
    void GBAFKPPJHBI(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void KEBOKGFLFJA()
    // Offset: 0x13B9E8C
    void KEBOKGFLFJA();
    // private System.Void GBONJDEAFPD(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13BA440
    void GBONJDEAFPD(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
  }; // MagicalActual.ToolController
  #pragma pack(pop)
  static check_size<sizeof(ToolController), 196 + sizeof(bool)> __MagicalActual_ToolControllerSizeCheck;
  static_assert(sizeof(ToolController) == 0xC5);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ToolController::PPKHOKCIJBL
// Il2CppName: PPKHOKCIJBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::PPKHOKCIJBL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "PPKHOKCIJBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::DPDDNOBAFIP
// Il2CppName: DPDDNOBAFIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::DPDDNOBAFIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "DPDDNOBAFIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::JMAMBNADFNJ
// Il2CppName: JMAMBNADFNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::JMAMBNADFNJ)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "JMAMBNADFNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::LMLIIEKCIEL
// Il2CppName: LMLIIEKCIEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::LMLIIEKCIEL)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "LMLIIEKCIEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::PHJAPEGHPEA
// Il2CppName: PHJAPEGHPEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PhysicsInteractable* (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::PHJAPEGHPEA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "PHJAPEGHPEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::InstantiateUnityEvents
// Il2CppName: InstantiateUnityEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::InstantiateUnityEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "InstantiateUnityEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::JLCFMFAJDFM
// Il2CppName: JLCFMFAJDFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::JLCFMFAJDFM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "JLCFMFAJDFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::JEJLNABOFEJ
// Il2CppName: JEJLNABOFEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::JEJLNABOFEJ)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "JEJLNABOFEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::LIEGKIDBOKN
// Il2CppName: LIEGKIDBOKN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::LIEGKIDBOKN)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "LIEGKIDBOKN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::NAEJCHILADL
// Il2CppName: NAEJCHILADL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::NAEJCHILADL)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "NAEJCHILADL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::APJILABICIN
// Il2CppName: APJILABICIN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::APJILABICIN)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "APJILABICIN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::OJPAFHDJNMD
// Il2CppName: OJPAFHDJNMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::OJPAFHDJNMD)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "OJPAFHDJNMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::LNJMKADEJLB
// Il2CppName: LNJMKADEJLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::LNJMKADEJLB)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "LNJMKADEJLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::LDGNJKBHGEO
// Il2CppName: LDGNJKBHGEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::GlobalNamespace::PhysicsInteractable*)>(&MagicalActual::ToolController::LDGNJKBHGEO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("", "PhysicsInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "LDGNJKBHGEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::DCNIHMLOFOD
// Il2CppName: DCNIHMLOFOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PhysicsInteractable* (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::DCNIHMLOFOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "DCNIHMLOFOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::LJCBCJNPFOJ
// Il2CppName: LJCBCJNPFOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::LJCBCJNPFOJ)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "LJCBCJNPFOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::KGILGALAMEC
// Il2CppName: KGILGALAMEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::KGILGALAMEC)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "KGILGALAMEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::get_myPhysicsInteractable
// Il2CppName: get_myPhysicsInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PhysicsInteractable* (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::get_myPhysicsInteractable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "get_myPhysicsInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::NDGLKFLINOD
// Il2CppName: NDGLKFLINOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::NDGLKFLINOD)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "NDGLKFLINOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::MJAJEADPMDA
// Il2CppName: MJAJEADPMDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::MJAJEADPMDA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "MJAJEADPMDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::DDMHMHGDAHP
// Il2CppName: DDMHMHGDAHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::DDMHMHGDAHP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "DDMHMHGDAHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::DJJPJCNGKMI
// Il2CppName: DJJPJCNGKMI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::GlobalNamespace::PhysicsInteractable*)>(&MagicalActual::ToolController::DJJPJCNGKMI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("", "PhysicsInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "DJJPJCNGKMI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::KEPKKEBPAJH
// Il2CppName: KEPKKEBPAJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::KEPKKEBPAJH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "KEPKKEBPAJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::HHPGICKLGGH
// Il2CppName: HHPGICKLGGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::HHPGICKLGGH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "HHPGICKLGGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::HOGOLGIPMFM
// Il2CppName: HOGOLGIPMFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::HOGOLGIPMFM)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "HOGOLGIPMFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::MLKHOALBGMM
// Il2CppName: MLKHOALBGMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::MLKHOALBGMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "MLKHOALBGMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::NJKMHMEHFDA
// Il2CppName: NJKMHMEHFDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::NJKMHMEHFDA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "NJKMHMEHFDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ToolController::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::IAHKCHNHJID
// Il2CppName: IAHKCHNHJID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::IAHKCHNHJID)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "IAHKCHNHJID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::LPFEFPGBEFE
// Il2CppName: LPFEFPGBEFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::LPFEFPGBEFE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "LPFEFPGBEFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::HKJEBFIGNMO
// Il2CppName: HKJEBFIGNMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PhysicsInteractable* (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::HKJEBFIGNMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "HKJEBFIGNMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::ILINPNPKBMO
// Il2CppName: ILINPNPKBMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::GlobalNamespace::PhysicsInteractable*)>(&MagicalActual::ToolController::ILINPNPKBMO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("", "PhysicsInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "ILINPNPKBMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::HBIAFNODJFD
// Il2CppName: HBIAFNODJFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::HBIAFNODJFD)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "HBIAFNODJFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::GBAFKPPJHBI
// Il2CppName: GBAFKPPJHBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::GBAFKPPJHBI)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "GBAFKPPJHBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::KEBOKGFLFJA
// Il2CppName: KEBOKGFLFJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)()>(&MagicalActual::ToolController::KEBOKGFLFJA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "KEBOKGFLFJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ToolController::GBONJDEAFPD
// Il2CppName: GBONJDEAFPD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ToolController::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::ToolController::GBONJDEAFPD)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ToolController*), "GBONJDEAFPD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
