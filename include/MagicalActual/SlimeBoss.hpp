// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: SkinnedMeshRenderer
  class SkinnedMeshRenderer;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: SlimeBoss
  class SlimeBoss;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::SlimeBoss);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::SlimeBoss*, "MagicalActual", "SlimeBoss");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x64
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.SlimeBoss
  // [TokenAttribute] Offset: FFFFFFFF
  class SlimeBoss : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private UnityEngine.Color wetColor
    // Size: 0x10
    // Offset: 0x28
    ::UnityEngine::Color wetColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Boolean IEPHDBECKMH
    // Size: 0x1
    // Offset: 0x38
    bool IEPHDBECKMH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IEPHDBECKMH and: BIIBEOELIHH
    char __padding3[0x7] = {};
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private UnityEngine.SkinnedMeshRenderer myRenderer
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::SkinnedMeshRenderer* myRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::SkinnedMeshRenderer*) == 0x8);
    // private UnityEngine.Color IFPBJIALLDM
    // Size: 0x10
    // Offset: 0x50
    ::UnityEngine::Color IFPBJIALLDM;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Single KEJBPPFMLKJ
    // Size: 0x4
    // Offset: 0x60
    float KEJBPPFMLKJ;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private UnityEngine.Color wetColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_wetColor();
    // Get instance field reference: private System.Boolean IEPHDBECKMH
    [[deprecated("Use field access instead!")]] bool& dyn_IEPHDBECKMH();
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: private UnityEngine.SkinnedMeshRenderer myRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& dyn_myRenderer();
    // Get instance field reference: private UnityEngine.Color IFPBJIALLDM
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_IFPBJIALLDM();
    // Get instance field reference: private System.Single KEJBPPFMLKJ
    [[deprecated("Use field access instead!")]] float& dyn_KEJBPPFMLKJ();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x1078E30
    void GKIOLADOCOK();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x1078F7C
    void GPFBGGFPINB();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x10790C0
    void LBIKOKCCILF();
    // private System.Void MDHBNHLHENF(System.Object OMLPNCLFFMJ)
    // Offset: 0x107920C
    void MDHBNHLHENF(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void JJEJNGMIMOI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x10793A4
    void JJEJNGMIMOI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void EBKMGINMPPJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1079458
    void EBKMGINMPPJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x107950C
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void HMHFFICMOBB(System.Object OMLPNCLFFMJ)
    // Offset: 0x10795C0
    void HMHFFICMOBB(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void IKDGLCBOCJG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1079758
    void IKDGLCBOCJG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void APECFOKOAGG(System.Object OMLPNCLFFMJ)
    // Offset: 0x107980C
    void APECFOKOAGG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x10799A4
    void IDOCJGNLNFL();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x1079AE8
    void PFABJJGAOMM();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x1079C34
    void DGJGAFKDIDK();
    // public System.Void .ctor()
    // Offset: 0x1079D80
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SlimeBoss* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::SlimeBoss::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SlimeBoss*, creationType>()));
    }
    // public System.Void JOGPGAPOBBK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1079DD8
    void JOGPGAPOBBK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void OIPLBADJHFI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1079E8C
    void OIPLBADJHFI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void FNGLOIECKDG()
    // Offset: 0x1079F40
    void FNGLOIECKDG();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x107A08C
    void GHLPBOJJHNG();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x107A1D8
    void NEDFCIDMJBB();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x107A324
    void IPIFMKAGODD();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x107A470
    void HKINNMLBMMG();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x107A5BC
    void ABIHCGOKNCL();
    // public System.Void EBJDLAIJJJE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x107A708
    void EBJDLAIJJJE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void KJDEPIMMFNK(System.Object OMLPNCLFFMJ)
    // Offset: 0x107A7BC
    void KJDEPIMMFNK(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x107A954
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void KCGMGLFHADE(System.Object OMLPNCLFFMJ)
    // Offset: 0x107AA08
    void KCGMGLFHADE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NHADFEMILCC()
    // Offset: 0x107ABA0
    void NHADFEMILCC();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x107ACEC
    void BDEDGNGMHMN();
    // private System.Void Start()
    // Offset: 0x107AE38
    void Start();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x107AF84
    void KBDGAPMJGLG();
    // private System.Void ONLDPGAMPFG(System.Object OMLPNCLFFMJ)
    // Offset: 0x107B0D0
    void ONLDPGAMPFG(::Il2CppObject* OMLPNCLFFMJ);
  }; // MagicalActual.SlimeBoss
  #pragma pack(pop)
  static check_size<sizeof(SlimeBoss), 96 + sizeof(float)> __MagicalActual_SlimeBossSizeCheck;
  static_assert(sizeof(SlimeBoss) == 0x64);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::MDHBNHLHENF
// Il2CppName: MDHBNHLHENF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::Il2CppObject*)>(&MagicalActual::SlimeBoss::MDHBNHLHENF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "MDHBNHLHENF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::JJEJNGMIMOI
// Il2CppName: JJEJNGMIMOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SlimeBoss::JJEJNGMIMOI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "JJEJNGMIMOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::EBKMGINMPPJ
// Il2CppName: EBKMGINMPPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SlimeBoss::EBKMGINMPPJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "EBKMGINMPPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SlimeBoss::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::HMHFFICMOBB
// Il2CppName: HMHFFICMOBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::Il2CppObject*)>(&MagicalActual::SlimeBoss::HMHFFICMOBB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "HMHFFICMOBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::IKDGLCBOCJG
// Il2CppName: IKDGLCBOCJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SlimeBoss::IKDGLCBOCJG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "IKDGLCBOCJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::APECFOKOAGG
// Il2CppName: APECFOKOAGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::Il2CppObject*)>(&MagicalActual::SlimeBoss::APECFOKOAGG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "APECFOKOAGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::JOGPGAPOBBK
// Il2CppName: JOGPGAPOBBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SlimeBoss::JOGPGAPOBBK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "JOGPGAPOBBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::OIPLBADJHFI
// Il2CppName: OIPLBADJHFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SlimeBoss::OIPLBADJHFI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "OIPLBADJHFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::EBJDLAIJJJE
// Il2CppName: EBJDLAIJJJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SlimeBoss::EBJDLAIJJJE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "EBJDLAIJJJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::KJDEPIMMFNK
// Il2CppName: KJDEPIMMFNK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::Il2CppObject*)>(&MagicalActual::SlimeBoss::KJDEPIMMFNK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "KJDEPIMMFNK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SlimeBoss::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::KCGMGLFHADE
// Il2CppName: KCGMGLFHADE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::Il2CppObject*)>(&MagicalActual::SlimeBoss::KCGMGLFHADE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "KCGMGLFHADE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)()>(&MagicalActual::SlimeBoss::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SlimeBoss::ONLDPGAMPFG
// Il2CppName: ONLDPGAMPFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SlimeBoss::*)(::Il2CppObject*)>(&MagicalActual::SlimeBoss::ONLDPGAMPFG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SlimeBoss*), "ONLDPGAMPFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
