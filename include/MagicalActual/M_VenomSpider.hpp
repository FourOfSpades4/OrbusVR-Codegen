// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_VenomSpider
  class M_VenomSpider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_VenomSpider);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_VenomSpider*, "MagicalActual", "M_VenomSpider");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_VenomSpider
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD7478
  class M_VenomSpider : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // public System.Void ODPJOMMBBNH()
    // Offset: 0x2762CA4
    void ODPJOMMBBNH();
    // public System.Void GILLJBIMGNJ()
    // Offset: 0x2762CA8
    void GILLJBIMGNJ();
    // public System.Void OKMNODFKBGC()
    // Offset: 0x2762ECC
    void OKMNODFKBGC();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x2762ED0
    void GKIOLADOCOK();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x2762F28
    void PFABJJGAOMM();
    // public System.Void IFCLHIDPEEF()
    // Offset: 0x2762F80
    void IFCLHIDPEEF();
    // public System.Void Slash()
    // Offset: 0x2762F84
    void Slash();
    // public System.Void PFEKCPPIAMP()
    // Offset: 0x276319C
    void PFEKCPPIAMP();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x27631A0
    void CBMDGNKFPIO();
    // private System.Void NHADFEMILCC()
    // Offset: 0x27631F8
    void NHADFEMILCC();
    // public System.Void JFKKFKNHPFI()
    // Offset: 0x2763250
    void JFKKFKNHPFI();
    // public System.Void LOFODMGAOON()
    // Offset: 0x2763474
    void LOFODMGAOON();
    // public System.Void CEPPICBNJOI()
    // Offset: 0x2763478
    void CEPPICBNJOI();
    // public System.Void BFEOMBNEICE()
    // Offset: 0x276369C
    void BFEOMBNEICE();
    // private System.Void Start()
    // Offset: 0x27638C0
    void Start();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x2763918
    void DFCOAPEIKLN();
    // public System.Void PHMNKLJAEMC()
    // Offset: 0x2763970
    void PHMNKLJAEMC();
    // public System.Void IGKIECCGCIJ()
    // Offset: 0x2763B94
    void IGKIECCGCIJ();
    // private System.Void JNHNEBOHOIB()
    // Offset: 0x2763B98
    void JNHNEBOHOIB();
    // public System.Void BIIPJEPNIBH()
    // Offset: 0x2763BF0
    void BIIPJEPNIBH();
    // public System.Void DBOKLBMPMJO()
    // Offset: 0x2763E14
    void DBOKLBMPMJO();
    // public System.Void .ctor()
    // Offset: 0x2764038
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_VenomSpider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_VenomSpider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_VenomSpider*, creationType>()));
    }
    // public System.Void CKMMFINOPOL()
    // Offset: 0x2764090
    void CKMMFINOPOL();
    // private System.Void OJFAEAIKFED()
    // Offset: 0x2764094
    void OJFAEAIKFED();
    // public System.Void Summon()
    // Offset: 0x27640EC
    void Summon();
    // public System.Void PNLNOOIGCBK()
    // Offset: 0x27640F0
    void PNLNOOIGCBK();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x2764314
    void GPFBGGFPINB();
    // public System.Void OJOKODCPBJN()
    // Offset: 0x276436C
    void OJOKODCPBJN();
    // public System.Void JAEELOJAAOB()
    // Offset: 0x2764370
    void JAEELOJAAOB();
    // public System.Void ONAOCGEBGPC()
    // Offset: 0x2764374
    void ONAOCGEBGPC();
    // public System.Void MKAECMFKIEN()
    // Offset: 0x2764378
    void MKAECMFKIEN();
    // public System.Void HJKGJMLPPGG()
    // Offset: 0x276459C
    void HJKGJMLPPGG();
    // public System.Void EACDOJBLLKM()
    // Offset: 0x27645A0
    void EACDOJBLLKM();
    // public System.Void DBKPMHIABHD()
    // Offset: 0x27645A4
    void DBKPMHIABHD();
    // public System.Void AAHKCMIDEOK()
    // Offset: 0x27645A8
    void AAHKCMIDEOK();
    // public System.Void HLGKLABMHHD()
    // Offset: 0x27645AC
    void HLGKLABMHHD();
    // public System.Void CIGIPMPLKGF()
    // Offset: 0x27647D0
    void CIGIPMPLKGF();
    // public System.Void DGJONHNBMKA()
    // Offset: 0x27649F4
    void DGJONHNBMKA();
  }; // MagicalActual.M_VenomSpider
  #pragma pack(pop)
  static check_size<sizeof(M_VenomSpider), 40 + sizeof(::StringW)> __MagicalActual_M_VenomSpiderSizeCheck;
  static_assert(sizeof(M_VenomSpider) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::ODPJOMMBBNH
// Il2CppName: ODPJOMMBBNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::ODPJOMMBBNH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "ODPJOMMBBNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::GILLJBIMGNJ
// Il2CppName: GILLJBIMGNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::GILLJBIMGNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "GILLJBIMGNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::OKMNODFKBGC
// Il2CppName: OKMNODFKBGC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::OKMNODFKBGC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "OKMNODFKBGC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::IFCLHIDPEEF
// Il2CppName: IFCLHIDPEEF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::IFCLHIDPEEF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "IFCLHIDPEEF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::PFEKCPPIAMP
// Il2CppName: PFEKCPPIAMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::PFEKCPPIAMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "PFEKCPPIAMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::JFKKFKNHPFI
// Il2CppName: JFKKFKNHPFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::JFKKFKNHPFI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "JFKKFKNHPFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::LOFODMGAOON
// Il2CppName: LOFODMGAOON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::LOFODMGAOON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "LOFODMGAOON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::CEPPICBNJOI
// Il2CppName: CEPPICBNJOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::CEPPICBNJOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "CEPPICBNJOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::BFEOMBNEICE
// Il2CppName: BFEOMBNEICE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::BFEOMBNEICE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "BFEOMBNEICE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::PHMNKLJAEMC
// Il2CppName: PHMNKLJAEMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::PHMNKLJAEMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "PHMNKLJAEMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::IGKIECCGCIJ
// Il2CppName: IGKIECCGCIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::IGKIECCGCIJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "IGKIECCGCIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::JNHNEBOHOIB
// Il2CppName: JNHNEBOHOIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::JNHNEBOHOIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "JNHNEBOHOIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::BIIPJEPNIBH
// Il2CppName: BIIPJEPNIBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::BIIPJEPNIBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "BIIPJEPNIBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::DBOKLBMPMJO
// Il2CppName: DBOKLBMPMJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::DBOKLBMPMJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "DBOKLBMPMJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::CKMMFINOPOL
// Il2CppName: CKMMFINOPOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::CKMMFINOPOL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "CKMMFINOPOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::OJFAEAIKFED
// Il2CppName: OJFAEAIKFED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::OJFAEAIKFED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "OJFAEAIKFED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::Summon
// Il2CppName: Summon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::Summon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "Summon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::PNLNOOIGCBK
// Il2CppName: PNLNOOIGCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::PNLNOOIGCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "PNLNOOIGCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::OJOKODCPBJN
// Il2CppName: OJOKODCPBJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::OJOKODCPBJN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "OJOKODCPBJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::JAEELOJAAOB
// Il2CppName: JAEELOJAAOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::JAEELOJAAOB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "JAEELOJAAOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::ONAOCGEBGPC
// Il2CppName: ONAOCGEBGPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::ONAOCGEBGPC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "ONAOCGEBGPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::MKAECMFKIEN
// Il2CppName: MKAECMFKIEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::MKAECMFKIEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "MKAECMFKIEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::HJKGJMLPPGG
// Il2CppName: HJKGJMLPPGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::HJKGJMLPPGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "HJKGJMLPPGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::EACDOJBLLKM
// Il2CppName: EACDOJBLLKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::EACDOJBLLKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "EACDOJBLLKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::DBKPMHIABHD
// Il2CppName: DBKPMHIABHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::DBKPMHIABHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "DBKPMHIABHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::AAHKCMIDEOK
// Il2CppName: AAHKCMIDEOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::AAHKCMIDEOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "AAHKCMIDEOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::HLGKLABMHHD
// Il2CppName: HLGKLABMHHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::HLGKLABMHHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "HLGKLABMHHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::CIGIPMPLKGF
// Il2CppName: CIGIPMPLKGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::CIGIPMPLKGF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "CIGIPMPLKGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_VenomSpider::DGJONHNBMKA
// Il2CppName: DGJONHNBMKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_VenomSpider::*)()>(&MagicalActual::M_VenomSpider::DGJONHNBMKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_VenomSpider*), "DGJONHNBMKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
