// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: BoxCollider
  class BoxCollider;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: GamblerDeck
  class GamblerDeck;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::GamblerDeck);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::GamblerDeck*, "MagicalActual", "GamblerDeck");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.GamblerDeck
  // [TokenAttribute] Offset: FFFFFFFF
  class GamblerDeck : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // [CompilerGeneratedAttribute] Offset: 0xAE3440
    // private UnityEngine.BoxCollider <BGPHCJJGLAF>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::BoxCollider* BGPHCJJGLAF;
    // Field size check
    static_assert(sizeof(::UnityEngine::BoxCollider*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.BoxCollider <BGPHCJJGLAF>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::BoxCollider*& dyn_$BGPHCJJGLAF$k__BackingField();
    // public UnityEngine.BoxCollider BDAEBMBFEGG()
    // Offset: 0x158AB28
    ::UnityEngine::BoxCollider* BDAEBMBFEGG();
    // public System.Void .ctor()
    // Offset: 0x158AB30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GamblerDeck* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::GamblerDeck::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GamblerDeck*, creationType>()));
    }
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x158AB38
    void NNDKJCJFIAK();
    // private System.Void Awake()
    // Offset: 0x158AB3C
    void Awake();
    // private System.Void DLOLMCCKFOO(UnityEngine.BoxCollider MMMEIONJJFJ)
    // Offset: 0x158AB9C
    void DLOLMCCKFOO(::UnityEngine::BoxCollider* MMMEIONJJFJ);
    // public UnityEngine.BoxCollider ABMKIHPEEFM()
    // Offset: 0x158ABA4
    ::UnityEngine::BoxCollider* ABMKIHPEEFM();
    // public UnityEngine.BoxCollider BCOGPAIMGJD()
    // Offset: 0x158ABAC
    ::UnityEngine::BoxCollider* BCOGPAIMGJD();
    // private System.Void PGLLKECKJNJ(UnityEngine.BoxCollider MMMEIONJJFJ)
    // Offset: 0x158ABB4
    void PGLLKECKJNJ(::UnityEngine::BoxCollider* MMMEIONJJFJ);
    // public UnityEngine.BoxCollider JMIBEPMJKGE()
    // Offset: 0x158ABBC
    ::UnityEngine::BoxCollider* JMIBEPMJKGE();
    // public UnityEngine.BoxCollider MBCAFKDCPHF()
    // Offset: 0x158ABC4
    ::UnityEngine::BoxCollider* MBCAFKDCPHF();
    // private System.Void ADLGPKAIPAA()
    // Offset: 0x158ABCC
    void ADLGPKAIPAA();
    // public UnityEngine.BoxCollider get_deckCollider()
    // Offset: 0x158AC24
    ::UnityEngine::BoxCollider* get_deckCollider();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x158AC2C
    void CBMDGNKFPIO();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x158AC30
    void MLGBKBMHHLE();
    // private System.Void JBEJCKDIKIE()
    // Offset: 0x158AC34
    void JBEJCKDIKIE();
    // private System.Void IAFAODFOMDL(UnityEngine.BoxCollider MMMEIONJJFJ)
    // Offset: 0x158AB94
    void IAFAODFOMDL(::UnityEngine::BoxCollider* MMMEIONJJFJ);
    // private System.Void MEOCEGEFOAB(UnityEngine.BoxCollider MMMEIONJJFJ)
    // Offset: 0x158AC94
    void MEOCEGEFOAB(::UnityEngine::BoxCollider* MMMEIONJJFJ);
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x158AC9C
    void IDOCJGNLNFL();
    // public UnityEngine.BoxCollider MENIKFJKFOD()
    // Offset: 0x158ACA0
    ::UnityEngine::BoxCollider* MENIKFJKFOD();
    // private System.Void Start()
    // Offset: 0x158ACA8
    void Start();
    // public UnityEngine.BoxCollider EGCJGMONPAG()
    // Offset: 0x158ACAC
    ::UnityEngine::BoxCollider* EGCJGMONPAG();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x158ACB4
    void GKIOLADOCOK();
    // private System.Void KKEABMBACIC()
    // Offset: 0x158ACB8
    void KKEABMBACIC();
    // private System.Void PIPEODIIMMN(UnityEngine.BoxCollider MMMEIONJJFJ)
    // Offset: 0x158AC8C
    void PIPEODIIMMN(::UnityEngine::BoxCollider* MMMEIONJJFJ);
    // private System.Void KIFIDCKNANI(UnityEngine.BoxCollider MMMEIONJJFJ)
    // Offset: 0x158AD10
    void KIFIDCKNANI(::UnityEngine::BoxCollider* MMMEIONJJFJ);
    // private System.Void MHOKCJICCGP(UnityEngine.BoxCollider MMMEIONJJFJ)
    // Offset: 0x158AD18
    void MHOKCJICCGP(::UnityEngine::BoxCollider* MMMEIONJJFJ);
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x158AD20
    void BDEDGNGMHMN();
    // public UnityEngine.BoxCollider OKNMIBINANG()
    // Offset: 0x158AD24
    ::UnityEngine::BoxCollider* OKNMIBINANG();
  }; // MagicalActual.GamblerDeck
  #pragma pack(pop)
  static check_size<sizeof(GamblerDeck), 24 + sizeof(::UnityEngine::BoxCollider*)> __MagicalActual_GamblerDeckSizeCheck;
  static_assert(sizeof(GamblerDeck) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::BDAEBMBFEGG
// Il2CppName: BDAEBMBFEGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BoxCollider* (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::BDAEBMBFEGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "BDAEBMBFEGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::DLOLMCCKFOO
// Il2CppName: DLOLMCCKFOO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)(::UnityEngine::BoxCollider*)>(&MagicalActual::GamblerDeck::DLOLMCCKFOO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "BoxCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "DLOLMCCKFOO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::ABMKIHPEEFM
// Il2CppName: ABMKIHPEEFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BoxCollider* (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::ABMKIHPEEFM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "ABMKIHPEEFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::BCOGPAIMGJD
// Il2CppName: BCOGPAIMGJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BoxCollider* (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::BCOGPAIMGJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "BCOGPAIMGJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::PGLLKECKJNJ
// Il2CppName: PGLLKECKJNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)(::UnityEngine::BoxCollider*)>(&MagicalActual::GamblerDeck::PGLLKECKJNJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "BoxCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "PGLLKECKJNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::JMIBEPMJKGE
// Il2CppName: JMIBEPMJKGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BoxCollider* (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::JMIBEPMJKGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "JMIBEPMJKGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::MBCAFKDCPHF
// Il2CppName: MBCAFKDCPHF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BoxCollider* (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::MBCAFKDCPHF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "MBCAFKDCPHF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::ADLGPKAIPAA
// Il2CppName: ADLGPKAIPAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::ADLGPKAIPAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "ADLGPKAIPAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::get_deckCollider
// Il2CppName: get_deckCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BoxCollider* (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::get_deckCollider)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "get_deckCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::JBEJCKDIKIE
// Il2CppName: JBEJCKDIKIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::JBEJCKDIKIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "JBEJCKDIKIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::IAFAODFOMDL
// Il2CppName: IAFAODFOMDL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)(::UnityEngine::BoxCollider*)>(&MagicalActual::GamblerDeck::IAFAODFOMDL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "BoxCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "IAFAODFOMDL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::MEOCEGEFOAB
// Il2CppName: MEOCEGEFOAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)(::UnityEngine::BoxCollider*)>(&MagicalActual::GamblerDeck::MEOCEGEFOAB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "BoxCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "MEOCEGEFOAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::MENIKFJKFOD
// Il2CppName: MENIKFJKFOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BoxCollider* (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::MENIKFJKFOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "MENIKFJKFOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::EGCJGMONPAG
// Il2CppName: EGCJGMONPAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BoxCollider* (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::EGCJGMONPAG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "EGCJGMONPAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::KKEABMBACIC
// Il2CppName: KKEABMBACIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::KKEABMBACIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "KKEABMBACIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::PIPEODIIMMN
// Il2CppName: PIPEODIIMMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)(::UnityEngine::BoxCollider*)>(&MagicalActual::GamblerDeck::PIPEODIIMMN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "BoxCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "PIPEODIIMMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::KIFIDCKNANI
// Il2CppName: KIFIDCKNANI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)(::UnityEngine::BoxCollider*)>(&MagicalActual::GamblerDeck::KIFIDCKNANI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "BoxCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "KIFIDCKNANI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::MHOKCJICCGP
// Il2CppName: MHOKCJICCGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)(::UnityEngine::BoxCollider*)>(&MagicalActual::GamblerDeck::MHOKCJICCGP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "BoxCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "MHOKCJICCGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GamblerDeck::OKNMIBINANG
// Il2CppName: OKNMIBINANG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::BoxCollider* (MagicalActual::GamblerDeck::*)()>(&MagicalActual::GamblerDeck::OKNMIBINANG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GamblerDeck*), "OKNMIBINANG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
