// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TextMesh
  class TextMesh;
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ArtificingTile
  class ArtificingTile;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ArtificingTile);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ArtificingTile*, "MagicalActual", "ArtificingTile");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ArtificingTile
  // [TokenAttribute] Offset: FFFFFFFF
  class ArtificingTile : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.TextMesh HJGPCOAPGKJ
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::TextMesh* HJGPCOAPGKJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextMesh*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.TextMesh HJGPCOAPGKJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextMesh*& dyn_HJGPCOAPGKJ();
    // private System.Void JBABFFAFEJB(ExtUI.InventoryItemInstance KELIMBKDEEG)
    // Offset: 0x10CB994
    void JBABFFAFEJB(::ExtUI::InventoryItemInstance* KELIMBKDEEG);
    // private System.Void JNELNIGPBIM()
    // Offset: 0x10CBAA0
    void JNELNIGPBIM();
    // private System.Void KIPDPKEIOEO()
    // Offset: 0x10CBAF8
    void KIPDPKEIOEO();
    // private System.Void DAPFFOEMAAM()
    // Offset: 0x10CBB50
    void DAPFFOEMAAM();
    // private System.Void PGJDCLMPDLL(ExtUI.InventoryItemInstance KELIMBKDEEG)
    // Offset: 0x10CBBA8
    void PGJDCLMPDLL(::ExtUI::InventoryItemInstance* KELIMBKDEEG);
    // private System.Void JCJCMKPOAKK()
    // Offset: 0x10CBCB8
    void JCJCMKPOAKK();
    // private System.Void NDAOHLAOCDE()
    // Offset: 0x10CBD10
    void NDAOHLAOCDE();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x10CBD68
    void PFABJJGAOMM();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x10CBD6C
    void EPCHNEGNKNF();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x10CBD70
    void FNGLOIECKDG();
    // private System.Void BMALDPKJJPG()
    // Offset: 0x10CBD74
    void BMALDPKJJPG();
    // private System.Void BLFNCFBALHI(ExtUI.InventoryItemInstance KELIMBKDEEG)
    // Offset: 0x10CBDCC
    void BLFNCFBALHI(::ExtUI::InventoryItemInstance* KELIMBKDEEG);
    // private System.Void JABKBLKJDJP(ExtUI.InventoryItemInstance KELIMBKDEEG)
    // Offset: 0x10CBEDC
    void JABKBLKJDJP(::ExtUI::InventoryItemInstance* KELIMBKDEEG);
    // private System.Void OACMGPBCPEL()
    // Offset: 0x10CBFEC
    void OACMGPBCPEL();
    // private System.Void Start()
    // Offset: 0x10CBFF0
    void Start();
    // private System.Void JHFCDNHEFDM(ExtUI.InventoryItemInstance KELIMBKDEEG)
    // Offset: 0x10CBFF4
    void JHFCDNHEFDM(::ExtUI::InventoryItemInstance* KELIMBKDEEG);
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x10CC100
    void KBDGAPMJGLG();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x10CC104
    void KPOAAAHLGLA();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x10CC108
    void IPIFMKAGODD();
    // public System.Void .ctor()
    // Offset: 0x10CC10C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ArtificingTile* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ArtificingTile::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ArtificingTile*, creationType>()));
    }
    // private System.Void KGKKNFEMGAM()
    // Offset: 0x10CC114
    void KGKKNFEMGAM();
    // private System.Void LOPFAELKALE(ExtUI.InventoryItemInstance KELIMBKDEEG)
    // Offset: 0x10CC16C
    void LOPFAELKALE(::ExtUI::InventoryItemInstance* KELIMBKDEEG);
    // private System.Void HKINNMLBMMG()
    // Offset: 0x10CC27C
    void HKINNMLBMMG();
    // private System.Void GCCCEDHLFLC(ExtUI.InventoryItemInstance KELIMBKDEEG)
    // Offset: 0x10CC280
    void GCCCEDHLFLC(::ExtUI::InventoryItemInstance* KELIMBKDEEG);
    // private System.Void KKEABMBACIC()
    // Offset: 0x10CC390
    void KKEABMBACIC();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x10CC3E8
    void JENOIOBAEPG();
    // private System.Void CPBOIKIELOD(ExtUI.InventoryItemInstance KELIMBKDEEG)
    // Offset: 0x10CC3EC
    void CPBOIKIELOD(::ExtUI::InventoryItemInstance* KELIMBKDEEG);
    // private System.Void Awake()
    // Offset: 0x10CC4FC
    void Awake();
    // private System.Void IngredientItemAssigned(ExtUI.InventoryItemInstance KELIMBKDEEG)
    // Offset: 0x10CC554
    void IngredientItemAssigned(::ExtUI::InventoryItemInstance* KELIMBKDEEG);
    // private System.Void DGELIHGGOKB()
    // Offset: 0x10CC664
    void DGELIHGGOKB();
    // private System.Void HJKNEPMHGLG(ExtUI.InventoryItemInstance KELIMBKDEEG)
    // Offset: 0x10CC6BC
    void HJKNEPMHGLG(::ExtUI::InventoryItemInstance* KELIMBKDEEG);
    // private System.Void FPHBKHBCEKG(ExtUI.InventoryItemInstance KELIMBKDEEG)
    // Offset: 0x10CC7D0
    void FPHBKHBCEKG(::ExtUI::InventoryItemInstance* KELIMBKDEEG);
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x10CC8E4
    void BDEDGNGMHMN();
    // private System.Void APIMIOELFAJ()
    // Offset: 0x10CC8E8
    void APIMIOELFAJ();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x10CC8EC
    void GHLPBOJJHNG();
    // private System.Void IGIJBKHAMJH()
    // Offset: 0x10CC8F0
    void IGIJBKHAMJH();
  }; // MagicalActual.ArtificingTile
  #pragma pack(pop)
  static check_size<sizeof(ArtificingTile), 24 + sizeof(::UnityEngine::TextMesh*)> __MagicalActual_ArtificingTileSizeCheck;
  static_assert(sizeof(ArtificingTile) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::JBABFFAFEJB
// Il2CppName: JBABFFAFEJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::ArtificingTile::JBABFFAFEJB)> {
  static const MethodInfo* get() {
    static auto* KELIMBKDEEG = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "JBABFFAFEJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KELIMBKDEEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::JNELNIGPBIM
// Il2CppName: JNELNIGPBIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::JNELNIGPBIM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "JNELNIGPBIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::KIPDPKEIOEO
// Il2CppName: KIPDPKEIOEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::KIPDPKEIOEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "KIPDPKEIOEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::DAPFFOEMAAM
// Il2CppName: DAPFFOEMAAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::DAPFFOEMAAM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "DAPFFOEMAAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::PGJDCLMPDLL
// Il2CppName: PGJDCLMPDLL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::ArtificingTile::PGJDCLMPDLL)> {
  static const MethodInfo* get() {
    static auto* KELIMBKDEEG = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "PGJDCLMPDLL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KELIMBKDEEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::JCJCMKPOAKK
// Il2CppName: JCJCMKPOAKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::JCJCMKPOAKK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "JCJCMKPOAKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::NDAOHLAOCDE
// Il2CppName: NDAOHLAOCDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::NDAOHLAOCDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "NDAOHLAOCDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::BMALDPKJJPG
// Il2CppName: BMALDPKJJPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::BMALDPKJJPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "BMALDPKJJPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::BLFNCFBALHI
// Il2CppName: BLFNCFBALHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::ArtificingTile::BLFNCFBALHI)> {
  static const MethodInfo* get() {
    static auto* KELIMBKDEEG = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "BLFNCFBALHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KELIMBKDEEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::JABKBLKJDJP
// Il2CppName: JABKBLKJDJP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::ArtificingTile::JABKBLKJDJP)> {
  static const MethodInfo* get() {
    static auto* KELIMBKDEEG = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "JABKBLKJDJP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KELIMBKDEEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::JHFCDNHEFDM
// Il2CppName: JHFCDNHEFDM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::ArtificingTile::JHFCDNHEFDM)> {
  static const MethodInfo* get() {
    static auto* KELIMBKDEEG = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "JHFCDNHEFDM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KELIMBKDEEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::KGKKNFEMGAM
// Il2CppName: KGKKNFEMGAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::KGKKNFEMGAM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "KGKKNFEMGAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::LOPFAELKALE
// Il2CppName: LOPFAELKALE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::ArtificingTile::LOPFAELKALE)> {
  static const MethodInfo* get() {
    static auto* KELIMBKDEEG = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "LOPFAELKALE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KELIMBKDEEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::GCCCEDHLFLC
// Il2CppName: GCCCEDHLFLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::ArtificingTile::GCCCEDHLFLC)> {
  static const MethodInfo* get() {
    static auto* KELIMBKDEEG = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "GCCCEDHLFLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KELIMBKDEEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::KKEABMBACIC
// Il2CppName: KKEABMBACIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::KKEABMBACIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "KKEABMBACIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::CPBOIKIELOD
// Il2CppName: CPBOIKIELOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::ArtificingTile::CPBOIKIELOD)> {
  static const MethodInfo* get() {
    static auto* KELIMBKDEEG = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "CPBOIKIELOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KELIMBKDEEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::IngredientItemAssigned
// Il2CppName: IngredientItemAssigned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::ArtificingTile::IngredientItemAssigned)> {
  static const MethodInfo* get() {
    static auto* KELIMBKDEEG = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "IngredientItemAssigned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KELIMBKDEEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::DGELIHGGOKB
// Il2CppName: DGELIHGGOKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::DGELIHGGOKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "DGELIHGGOKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::HJKNEPMHGLG
// Il2CppName: HJKNEPMHGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::ArtificingTile::HJKNEPMHGLG)> {
  static const MethodInfo* get() {
    static auto* KELIMBKDEEG = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "HJKNEPMHGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KELIMBKDEEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::FPHBKHBCEKG
// Il2CppName: FPHBKHBCEKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::ArtificingTile::FPHBKHBCEKG)> {
  static const MethodInfo* get() {
    static auto* KELIMBKDEEG = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "FPHBKHBCEKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KELIMBKDEEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::APIMIOELFAJ
// Il2CppName: APIMIOELFAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::APIMIOELFAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "APIMIOELFAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArtificingTile::IGIJBKHAMJH
// Il2CppName: IGIJBKHAMJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArtificingTile::*)()>(&MagicalActual::ArtificingTile::IGIJBKHAMJH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArtificingTile*), "IGIJBKHAMJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
