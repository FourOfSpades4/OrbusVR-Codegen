// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: GenericChest
  class GenericChest;
  // Forward declaring type: ItemContainer
  class ItemContainer;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: ParticleSystem
  class ParticleSystem;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PetBreedingStation
  class PetBreedingStation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PetBreedingStation);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PetBreedingStation*, "MagicalActual", "PetBreedingStation");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x61
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PetBreedingStation
  // [TokenAttribute] Offset: FFFFFFFF
  class PetBreedingStation : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public UnityEngine.Transform[] petSlots
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::Transform*> petSlots;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Transform*>) == 0x8);
    // public MagicalActual.GenericChest myChest
    // Size: 0x8
    // Offset: 0x30
    ::MagicalActual::GenericChest* myChest;
    // Field size check
    static_assert(sizeof(::MagicalActual::GenericChest*) == 0x8);
    // private System.Single storageScale
    // Size: 0x4
    // Offset: 0x38
    float storageScale;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: storageScale and: breedingEffect
    char __padding4[0x4] = {};
    // private UnityEngine.ParticleSystem breedingEffect
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::ParticleSystem* breedingEffect;
    // Field size check
    static_assert(sizeof(::UnityEngine::ParticleSystem*) == 0x8);
    // private ExtUI.InventoryItemInstance[] BHDOHBEEEDD
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::ExtUI::InventoryItemInstance*> BHDOHBEEEDD;
    // Field size check
    static_assert(sizeof(::ArrayW<::ExtUI::InventoryItemInstance*>) == 0x8);
    // private UnityEngine.GameObject[] AIJGDGBGBCN
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<::UnityEngine::GameObject*> AIJGDGBGBCN;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // private MagicalActual.ItemContainer LNABACFKNBA
    // Size: 0x8
    // Offset: 0x58
    ::MagicalActual::ItemContainer* LNABACFKNBA;
    // Field size check
    static_assert(sizeof(::MagicalActual::ItemContainer*) == 0x8);
    // private System.Boolean MINBGAPDCDG
    // Size: 0x1
    // Offset: 0x60
    bool MINBGAPDCDG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public UnityEngine.Transform[] petSlots
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& dyn_petSlots();
    // Get instance field reference: public MagicalActual.GenericChest myChest
    [[deprecated("Use field access instead!")]] ::MagicalActual::GenericChest*& dyn_myChest();
    // Get instance field reference: private System.Single storageScale
    [[deprecated("Use field access instead!")]] float& dyn_storageScale();
    // Get instance field reference: private UnityEngine.ParticleSystem breedingEffect
    [[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& dyn_breedingEffect();
    // Get instance field reference: private ExtUI.InventoryItemInstance[] BHDOHBEEEDD
    [[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::InventoryItemInstance*>& dyn_BHDOHBEEEDD();
    // Get instance field reference: private UnityEngine.GameObject[] AIJGDGBGBCN
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_AIJGDGBGBCN();
    // Get instance field reference: private MagicalActual.ItemContainer LNABACFKNBA
    [[deprecated("Use field access instead!")]] ::MagicalActual::ItemContainer*& dyn_LNABACFKNBA();
    // Get instance field reference: private System.Boolean MINBGAPDCDG
    [[deprecated("Use field access instead!")]] bool& dyn_MINBGAPDCDG();
    // private System.Void Start()
    // Offset: 0x223B064
    void Start();
    // private System.Void BFFLEFJFAKG()
    // Offset: 0x223B180
    void BFFLEFJFAKG();
    // private System.Void APFIANLLLOE()
    // Offset: 0x223B068
    void APFIANLLLOE();
    // private System.Void BMPAMLHHDLC(System.Object OMLPNCLFFMJ)
    // Offset: 0x223B718
    void BMPAMLHHDLC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Awake()
    // Offset: 0x223B784
    void Awake();
    // private System.Void DBCBMMFMBCB()
    // Offset: 0x223B82C
    void DBCBMMFMBCB();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x223BE0C
    void MLGBKBMHHLE();
    // private System.Void ICBFACJBNPI()
    // Offset: 0x223BF28
    void ICBFACJBNPI();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x223BFD0
    void NNDKJCJFIAK();
    // private System.Void GPKNANLHLMJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x223BFD4
    void GPKNANLHLMJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MHIFAOHPJKA()
    // Offset: 0x223C158
    void MHIFAOHPJKA();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x223C738
    void PBEMGGBBDCK();
    // private System.Void MPKPGNJNLBO()
    // Offset: 0x223C73C
    void MPKPGNJNLBO();
    // private System.Void DetachedFromInterface()
    // Offset: 0x223C76C
    void DetachedFromInterface();
    // private System.Void AFIEAPHLKGH()
    // Offset: 0x223C79C
    void AFIEAPHLKGH();
    // private System.Void LMGJADIMGHC()
    // Offset: 0x223C7CC
    void LMGJADIMGHC();
    // private System.Void NAECHJEJAEG()
    // Offset: 0x223C91C
    void NAECHJEJAEG();
    // private System.Void BJJAJDLOCAN()
    // Offset: 0x223BE10
    void BJJAJDLOCAN();
    // private System.Void OHNJHMIPEOJ()
    // Offset: 0x223CEFC
    void OHNJHMIPEOJ();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x223CF2C
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void FIKFMJEELCM(MagicalActual.ItemContainer ADLACIABAGF)
    // Offset: 0x223CFE0
    void FIKFMJEELCM(::MagicalActual::ItemContainer* ADLACIABAGF);
    // private System.Void LBIKOKCCILF()
    // Offset: 0x223CFE4
    void LBIKOKCCILF();
    // private System.Void FFGPELFNMHK(MagicalActual.ItemContainer ADLACIABAGF)
    // Offset: 0x223CFE8
    void FFGPELFNMHK(::MagicalActual::ItemContainer* ADLACIABAGF);
    // public System.Void .ctor()
    // Offset: 0x223CFEC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PetBreedingStation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PetBreedingStation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PetBreedingStation*, creationType>()));
    }
    // private System.Void OKCGDOEIOGA()
    // Offset: 0x223D050
    void OKCGDOEIOGA();
    // private System.Void CODEKFLHLJG()
    // Offset: 0x223D0F8
    void CODEKFLHLJG();
    // private System.Void GJEMHCPDHEN(MagicalActual.ItemContainer ADLACIABAGF)
    // Offset: 0x223D248
    void GJEMHCPDHEN(::MagicalActual::ItemContainer* ADLACIABAGF);
    // private System.Void KJKPFMOIIDE()
    // Offset: 0x223D82C
    void KJKPFMOIIDE();
    // private System.Void OnDestroy()
    // Offset: 0x223DD94
    void OnDestroy();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x223DF04
    void GKIOLADOCOK();
    // private System.Void OEIOPGPDPAG()
    // Offset: 0x223DF08
    void OEIOPGPDPAG();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x223E078
    void FGIFGGNGKPK();
    // private System.Void OALELDGGPMB()
    // Offset: 0x223E07C
    void OALELDGGPMB();
    // private System.Void FMDLKIHMONO(System.Object OMLPNCLFFMJ)
    // Offset: 0x223E0AC
    void FMDLKIHMONO(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void ItemContainerInventoryChanged(MagicalActual.ItemContainer ADLACIABAGF)
    // Offset: 0x223E118
    void ItemContainerInventoryChanged(::MagicalActual::ItemContainer* ADLACIABAGF);
    // private System.Void EBHIEGMPBJE(System.Object OMLPNCLFFMJ)
    // Offset: 0x223E11C
    void EBHIEGMPBJE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void AKONOOIDPDA()
    // Offset: 0x223E188
    void AKONOOIDPDA();
    // private System.Void PEPFBJGFACB()
    // Offset: 0x223C040
    void PEPFBJGFACB();
    // private System.Void LNNIANDLAEG()
    // Offset: 0x223D24C
    void LNNIANDLAEG();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x223E230
    void OACMGPBCPEL();
    // private System.Void JHFNHJPONOB()
    // Offset: 0x223E234
    void JHFNHJPONOB();
  }; // MagicalActual.PetBreedingStation
  #pragma pack(pop)
  static check_size<sizeof(PetBreedingStation), 96 + sizeof(bool)> __MagicalActual_PetBreedingStationSizeCheck;
  static_assert(sizeof(PetBreedingStation) == 0x61);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::BFFLEFJFAKG
// Il2CppName: BFFLEFJFAKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::BFFLEFJFAKG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "BFFLEFJFAKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::APFIANLLLOE
// Il2CppName: APFIANLLLOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::APFIANLLLOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "APFIANLLLOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::BMPAMLHHDLC
// Il2CppName: BMPAMLHHDLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)(::Il2CppObject*)>(&MagicalActual::PetBreedingStation::BMPAMLHHDLC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "BMPAMLHHDLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::DBCBMMFMBCB
// Il2CppName: DBCBMMFMBCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::DBCBMMFMBCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "DBCBMMFMBCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::ICBFACJBNPI
// Il2CppName: ICBFACJBNPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::ICBFACJBNPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "ICBFACJBNPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::GPKNANLHLMJ
// Il2CppName: GPKNANLHLMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)(::Il2CppObject*)>(&MagicalActual::PetBreedingStation::GPKNANLHLMJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "GPKNANLHLMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::MHIFAOHPJKA
// Il2CppName: MHIFAOHPJKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::MHIFAOHPJKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "MHIFAOHPJKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::MPKPGNJNLBO
// Il2CppName: MPKPGNJNLBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::MPKPGNJNLBO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "MPKPGNJNLBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::DetachedFromInterface
// Il2CppName: DetachedFromInterface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::DetachedFromInterface)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "DetachedFromInterface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::AFIEAPHLKGH
// Il2CppName: AFIEAPHLKGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::AFIEAPHLKGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "AFIEAPHLKGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::LMGJADIMGHC
// Il2CppName: LMGJADIMGHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::LMGJADIMGHC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "LMGJADIMGHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::NAECHJEJAEG
// Il2CppName: NAECHJEJAEG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::NAECHJEJAEG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "NAECHJEJAEG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::BJJAJDLOCAN
// Il2CppName: BJJAJDLOCAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::BJJAJDLOCAN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "BJJAJDLOCAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::OHNJHMIPEOJ
// Il2CppName: OHNJHMIPEOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::OHNJHMIPEOJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "OHNJHMIPEOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PetBreedingStation::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::FIKFMJEELCM
// Il2CppName: FIKFMJEELCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)(::MagicalActual::ItemContainer*)>(&MagicalActual::PetBreedingStation::FIKFMJEELCM)> {
  static const MethodInfo* get() {
    static auto* ADLACIABAGF = &::il2cpp_utils::GetClassFromName("MagicalActual", "ItemContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "FIKFMJEELCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ADLACIABAGF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::FFGPELFNMHK
// Il2CppName: FFGPELFNMHK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)(::MagicalActual::ItemContainer*)>(&MagicalActual::PetBreedingStation::FFGPELFNMHK)> {
  static const MethodInfo* get() {
    static auto* ADLACIABAGF = &::il2cpp_utils::GetClassFromName("MagicalActual", "ItemContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "FFGPELFNMHK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ADLACIABAGF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::OKCGDOEIOGA
// Il2CppName: OKCGDOEIOGA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::OKCGDOEIOGA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "OKCGDOEIOGA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::CODEKFLHLJG
// Il2CppName: CODEKFLHLJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::CODEKFLHLJG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "CODEKFLHLJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::GJEMHCPDHEN
// Il2CppName: GJEMHCPDHEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)(::MagicalActual::ItemContainer*)>(&MagicalActual::PetBreedingStation::GJEMHCPDHEN)> {
  static const MethodInfo* get() {
    static auto* ADLACIABAGF = &::il2cpp_utils::GetClassFromName("MagicalActual", "ItemContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "GJEMHCPDHEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ADLACIABAGF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::KJKPFMOIIDE
// Il2CppName: KJKPFMOIIDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::KJKPFMOIIDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "KJKPFMOIIDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::OEIOPGPDPAG
// Il2CppName: OEIOPGPDPAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::OEIOPGPDPAG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "OEIOPGPDPAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::OALELDGGPMB
// Il2CppName: OALELDGGPMB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::OALELDGGPMB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "OALELDGGPMB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::FMDLKIHMONO
// Il2CppName: FMDLKIHMONO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)(::Il2CppObject*)>(&MagicalActual::PetBreedingStation::FMDLKIHMONO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "FMDLKIHMONO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::ItemContainerInventoryChanged
// Il2CppName: ItemContainerInventoryChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)(::MagicalActual::ItemContainer*)>(&MagicalActual::PetBreedingStation::ItemContainerInventoryChanged)> {
  static const MethodInfo* get() {
    static auto* ADLACIABAGF = &::il2cpp_utils::GetClassFromName("MagicalActual", "ItemContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "ItemContainerInventoryChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ADLACIABAGF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::EBHIEGMPBJE
// Il2CppName: EBHIEGMPBJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)(::Il2CppObject*)>(&MagicalActual::PetBreedingStation::EBHIEGMPBJE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "EBHIEGMPBJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::AKONOOIDPDA
// Il2CppName: AKONOOIDPDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::AKONOOIDPDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "AKONOOIDPDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::PEPFBJGFACB
// Il2CppName: PEPFBJGFACB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::PEPFBJGFACB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "PEPFBJGFACB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::LNNIANDLAEG
// Il2CppName: LNNIANDLAEG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::LNNIANDLAEG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "LNNIANDLAEG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PetBreedingStation::JHFNHJPONOB
// Il2CppName: JHFNHJPONOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PetBreedingStation::*)()>(&MagicalActual::PetBreedingStation::JHFNHJPONOB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PetBreedingStation*), "JHFNHJPONOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
