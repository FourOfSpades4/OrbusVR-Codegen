// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObFlt
#include "CodeStage/AntiCheat/ObscuredTypes/ObFlt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: Archer
  class Archer;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: BoxCollider
  class BoxCollider;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ArcherCriticalSpot
  class ArcherCriticalSpot;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ArcherCriticalSpot);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ArcherCriticalSpot*, "MagicalActual", "ArcherCriticalSpot");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0xA9
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ArcherCriticalSpot
  // [TokenAttribute] Offset: FFFFFFFF
  class ArcherCriticalSpot : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.Single GEBMCFKLLOB
    // Size: 0x4
    // Offset: 0x18
    float GEBMCFKLLOB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 NKEFHEBFINL
    // Size: 0xC
    // Offset: 0x1C
    ::UnityEngine::Vector3 NKEFHEBFINL;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public MagicalActual.Monster myMonster
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::Monster* myMonster;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public MagicalActual.Archer myArcher
    // Size: 0x8
    // Offset: 0x30
    ::MagicalActual::Archer* myArcher;
    // Field size check
    static_assert(sizeof(::MagicalActual::Archer*) == 0x8);
    // public System.Byte id
    // Size: 0x1
    // Offset: 0x38
    uint8_t id;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: id and: sphere
    char __padding4[0x7] = {};
    // private UnityEngine.Transform sphere
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Transform* sphere;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform DMNHBEIHGMA
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Transform* DMNHBEIHGMA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform KKOJLMPDGBN
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Transform* KKOJLMPDGBN;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform JJDMDLCCPDD
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Transform* JJDMDLCCPDD;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.BoxCollider GCIPNKCIPNG
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::BoxCollider* GCIPNKCIPNG;
    // Field size check
    static_assert(sizeof(::UnityEngine::BoxCollider*) == 0x8);
    // private System.Single CCDGMNCNOBB
    // Size: 0x4
    // Offset: 0x68
    float CCDGMNCNOBB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: CCDGMNCNOBB and: ICLBPOMENOJ
    char __padding10[0x4] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt ICLBPOMENOJ
    // Size: 0x19
    // Offset: 0x70
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt ICLBPOMENOJ;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: ICLBPOMENOJ and: KLEKBEANPFB
    char __padding11[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt KLEKBEANPFB
    // Size: 0x19
    // Offset: 0x90
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt KLEKBEANPFB;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Single GEBMCFKLLOB
    [[deprecated("Use field access instead!")]] float& dyn_GEBMCFKLLOB();
    // Get instance field reference: private UnityEngine.Vector3 NKEFHEBFINL
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_NKEFHEBFINL();
    // Get instance field reference: public MagicalActual.Monster myMonster
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_myMonster();
    // Get instance field reference: public MagicalActual.Archer myArcher
    [[deprecated("Use field access instead!")]] ::MagicalActual::Archer*& dyn_myArcher();
    // Get instance field reference: public System.Byte id
    [[deprecated("Use field access instead!")]] uint8_t& dyn_id();
    // Get instance field reference: private UnityEngine.Transform sphere
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_sphere();
    // Get instance field reference: private UnityEngine.Transform DMNHBEIHGMA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_DMNHBEIHGMA();
    // Get instance field reference: private UnityEngine.Transform KKOJLMPDGBN
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_KKOJLMPDGBN();
    // Get instance field reference: private UnityEngine.Transform JJDMDLCCPDD
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_JJDMDLCCPDD();
    // Get instance field reference: private UnityEngine.BoxCollider GCIPNKCIPNG
    [[deprecated("Use field access instead!")]] ::UnityEngine::BoxCollider*& dyn_GCIPNKCIPNG();
    // Get instance field reference: private System.Single CCDGMNCNOBB
    [[deprecated("Use field access instead!")]] float& dyn_CCDGMNCNOBB();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt ICLBPOMENOJ
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_ICLBPOMENOJ();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt KLEKBEANPFB
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_KLEKBEANPFB();
    // private System.Void KCEPMBHOMCD()
    // Offset: 0x199350C
    void KCEPMBHOMCD();
    // public System.Void OGGOBONPGCE(System.Single MMMEIONJJFJ)
    // Offset: 0x19939CC
    void OGGOBONPGCE(float MMMEIONJJFJ);
    // public System.Single FCJGJKOFDPP()
    // Offset: 0x1993A60
    float FCJGJKOFDPP();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x1993A68
    void LBIKOKCCILF();
    // public System.Single OIMEPOMFIAK()
    // Offset: 0x198FD8C
    float OIMEPOMFIAK();
    // private System.Void GBJGCIGEFKL()
    // Offset: 0x1993BBC
    void GBJGCIGEFKL();
    // private System.Void AGDFOIFHGGG()
    // Offset: 0x1993C48
    void AGDFOIFHGGG();
    // public System.Single get_Radius()
    // Offset: 0x198E110
    float get_Radius();
    // public System.Void JFDFJGJIFNE(System.Single MMMEIONJJFJ)
    // Offset: 0x19940F8
    void JFDFJGJIFNE(float MMMEIONJJFJ);
    // private System.Void NJCCFDONGHB()
    // Offset: 0x199418C
    void NJCCFDONGHB();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x1994218
    void CBMDGNKFPIO();
    // private System.Void NLIHHIKGAAK()
    // Offset: 0x1994100
    void NLIHHIKGAAK();
    // private System.Void LIGIILOPNJD()
    // Offset: 0x199436C
    void LIGIILOPNJD();
    // public System.Void FBCHDNOHNDP(System.Single MMMEIONJJFJ)
    // Offset: 0x19943F8
    void FBCHDNOHNDP(float MMMEIONJJFJ);
    // public System.Void OCBCACGCNKH(System.Single MMMEIONJJFJ)
    // Offset: 0x199448C
    void OCBCACGCNKH(float MMMEIONJJFJ);
    // private System.Void GFFBBJBBJFE()
    // Offset: 0x1994494
    void GFFBBJBBJFE();
    // public System.Single CADMMIKMJAI()
    // Offset: 0x1990EE8
    float CADMMIKMJAI();
    // private System.Void DMNMEKAJBNA()
    // Offset: 0x1994520
    void DMNMEKAJBNA();
    // private System.Void BPEFOMJJHKO()
    // Offset: 0x19949DC
    void BPEFOMJJHKO();
    // private System.Void JNEPNIDMKJO()
    // Offset: 0x1994E9C
    void JNEPNIDMKJO();
    // private System.Void AKNELKNEMHB()
    // Offset: 0x1994400
    void AKNELKNEMHB();
    // public System.Single BNKBPCPLGBJ()
    // Offset: 0x1994F28
    float BNKBPCPLGBJ();
    // private System.Void NBFJIDECMPF()
    // Offset: 0x1994F30
    void NBFJIDECMPF();
    // private System.Void MJKAGCAKHHO()
    // Offset: 0x1994FBC
    void MJKAGCAKHHO();
    // private System.Void NGCGKDPPDBG()
    // Offset: 0x199547C
    void NGCGKDPPDBG();
    // public System.Void set_Radius(System.Single MMMEIONJJFJ)
    // Offset: 0x199592C
    void set_Radius(float MMMEIONJJFJ);
    // public System.Void BGMANJBMAON(System.Single MMMEIONJJFJ)
    // Offset: 0x1995934
    void BGMANJBMAON(float MMMEIONJJFJ);
    // private System.Void DFDLDJMECOJ()
    // Offset: 0x19939D4
    void DFDLDJMECOJ();
    // private System.Void FBONHOOJHBG()
    // Offset: 0x199593C
    void FBONHOOJHBG();
    // public System.Void JANCHAOLLPM(System.Single MMMEIONJJFJ)
    // Offset: 0x1995A90
    void JANCHAOLLPM(float MMMEIONJJFJ);
    // public System.Single IBMAPHIJKEH()
    // Offset: 0x198EF48
    float IBMAPHIJKEH();
    // public System.Single AOBIKNOEPDB()
    // Offset: 0x1991ED0
    float AOBIKNOEPDB();
    // public System.Void LBGCCHEHPDI(System.Single MMMEIONJJFJ)
    // Offset: 0x1995A98
    void LBGCCHEHPDI(float MMMEIONJJFJ);
    // private System.Void BJMMJNDCPLF()
    // Offset: 0x1995AA0
    void BJMMJNDCPLF();
    // private System.Void FEIGDJNEHBG()
    // Offset: 0x1995F50
    void FEIGDJNEHBG();
    // private System.Void Update()
    // Offset: 0x1996410
    void Update();
    // public System.Void COECEIMPCHI(System.Single MMMEIONJJFJ)
    // Offset: 0x19968C4
    void COECEIMPCHI(float MMMEIONJJFJ);
    // private System.Void Start()
    // Offset: 0x19968CC
    void Start();
    // public System.Void LOMOBLEJAJF(System.Single MMMEIONJJFJ)
    // Offset: 0x1996A20
    void LOMOBLEJAJF(float MMMEIONJJFJ);
    // private System.Void GHBOEBHBEEJ()
    // Offset: 0x1996A28
    void GHBOEBHBEEJ();
    // public System.Void .ctor()
    // Offset: 0x1996ED8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ArcherCriticalSpot* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ArcherCriticalSpot::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ArcherCriticalSpot*, creationType>()));
    }
  }; // MagicalActual.ArcherCriticalSpot
  #pragma pack(pop)
  static check_size<sizeof(ArcherCriticalSpot), 144 + sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt)> __MagicalActual_ArcherCriticalSpotSizeCheck;
  static_assert(sizeof(ArcherCriticalSpot) == 0xA9);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::KCEPMBHOMCD
// Il2CppName: KCEPMBHOMCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::KCEPMBHOMCD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "KCEPMBHOMCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::OGGOBONPGCE
// Il2CppName: OGGOBONPGCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)(float)>(&MagicalActual::ArcherCriticalSpot::OGGOBONPGCE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "OGGOBONPGCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::FCJGJKOFDPP
// Il2CppName: FCJGJKOFDPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::FCJGJKOFDPP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "FCJGJKOFDPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::OIMEPOMFIAK
// Il2CppName: OIMEPOMFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::OIMEPOMFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "OIMEPOMFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::GBJGCIGEFKL
// Il2CppName: GBJGCIGEFKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::GBJGCIGEFKL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "GBJGCIGEFKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::AGDFOIFHGGG
// Il2CppName: AGDFOIFHGGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::AGDFOIFHGGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "AGDFOIFHGGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::get_Radius
// Il2CppName: get_Radius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::get_Radius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "get_Radius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::JFDFJGJIFNE
// Il2CppName: JFDFJGJIFNE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)(float)>(&MagicalActual::ArcherCriticalSpot::JFDFJGJIFNE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "JFDFJGJIFNE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::NJCCFDONGHB
// Il2CppName: NJCCFDONGHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::NJCCFDONGHB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "NJCCFDONGHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::NLIHHIKGAAK
// Il2CppName: NLIHHIKGAAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::NLIHHIKGAAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "NLIHHIKGAAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::LIGIILOPNJD
// Il2CppName: LIGIILOPNJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::LIGIILOPNJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "LIGIILOPNJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::FBCHDNOHNDP
// Il2CppName: FBCHDNOHNDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)(float)>(&MagicalActual::ArcherCriticalSpot::FBCHDNOHNDP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "FBCHDNOHNDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::OCBCACGCNKH
// Il2CppName: OCBCACGCNKH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)(float)>(&MagicalActual::ArcherCriticalSpot::OCBCACGCNKH)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "OCBCACGCNKH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::GFFBBJBBJFE
// Il2CppName: GFFBBJBBJFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::GFFBBJBBJFE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "GFFBBJBBJFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::CADMMIKMJAI
// Il2CppName: CADMMIKMJAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::CADMMIKMJAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "CADMMIKMJAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::DMNMEKAJBNA
// Il2CppName: DMNMEKAJBNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::DMNMEKAJBNA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "DMNMEKAJBNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::BPEFOMJJHKO
// Il2CppName: BPEFOMJJHKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::BPEFOMJJHKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "BPEFOMJJHKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::JNEPNIDMKJO
// Il2CppName: JNEPNIDMKJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::JNEPNIDMKJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "JNEPNIDMKJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::AKNELKNEMHB
// Il2CppName: AKNELKNEMHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::AKNELKNEMHB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "AKNELKNEMHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::BNKBPCPLGBJ
// Il2CppName: BNKBPCPLGBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::BNKBPCPLGBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "BNKBPCPLGBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::NBFJIDECMPF
// Il2CppName: NBFJIDECMPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::NBFJIDECMPF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "NBFJIDECMPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::MJKAGCAKHHO
// Il2CppName: MJKAGCAKHHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::MJKAGCAKHHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "MJKAGCAKHHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::NGCGKDPPDBG
// Il2CppName: NGCGKDPPDBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::NGCGKDPPDBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "NGCGKDPPDBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::set_Radius
// Il2CppName: set_Radius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)(float)>(&MagicalActual::ArcherCriticalSpot::set_Radius)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "set_Radius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::BGMANJBMAON
// Il2CppName: BGMANJBMAON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)(float)>(&MagicalActual::ArcherCriticalSpot::BGMANJBMAON)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "BGMANJBMAON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::DFDLDJMECOJ
// Il2CppName: DFDLDJMECOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::DFDLDJMECOJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "DFDLDJMECOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::FBONHOOJHBG
// Il2CppName: FBONHOOJHBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::FBONHOOJHBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "FBONHOOJHBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::JANCHAOLLPM
// Il2CppName: JANCHAOLLPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)(float)>(&MagicalActual::ArcherCriticalSpot::JANCHAOLLPM)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "JANCHAOLLPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::IBMAPHIJKEH
// Il2CppName: IBMAPHIJKEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::IBMAPHIJKEH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "IBMAPHIJKEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::AOBIKNOEPDB
// Il2CppName: AOBIKNOEPDB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::AOBIKNOEPDB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "AOBIKNOEPDB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::LBGCCHEHPDI
// Il2CppName: LBGCCHEHPDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)(float)>(&MagicalActual::ArcherCriticalSpot::LBGCCHEHPDI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "LBGCCHEHPDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::BJMMJNDCPLF
// Il2CppName: BJMMJNDCPLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::BJMMJNDCPLF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "BJMMJNDCPLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::FEIGDJNEHBG
// Il2CppName: FEIGDJNEHBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::FEIGDJNEHBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "FEIGDJNEHBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::COECEIMPCHI
// Il2CppName: COECEIMPCHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)(float)>(&MagicalActual::ArcherCriticalSpot::COECEIMPCHI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "COECEIMPCHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::LOMOBLEJAJF
// Il2CppName: LOMOBLEJAJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)(float)>(&MagicalActual::ArcherCriticalSpot::LOMOBLEJAJF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "LOMOBLEJAJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::GHBOEBHBEEJ
// Il2CppName: GHBOEBHBEEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArcherCriticalSpot::*)()>(&MagicalActual::ArcherCriticalSpot::GHBOEBHBEEJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArcherCriticalSpot*), "GHBOEBHBEEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArcherCriticalSpot::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
