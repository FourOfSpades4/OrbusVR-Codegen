// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Grabber
  class Grabber;
  // Forward declaring type: Crossbow
  class Crossbow;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Coroutine
  class Coroutine;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ClickedEventHandler
  class ClickedEventHandler;
  // Forward declaring type: ClickedEventArgs
  struct ClickedEventArgs;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: CrossbowInteractable
  class CrossbowInteractable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::CrossbowInteractable);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::CrossbowInteractable*, "MagicalActual", "CrossbowInteractable");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x94
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.CrossbowInteractable
  // [TokenAttribute] Offset: FFFFFFFF
  class CrossbowInteractable : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::CrossbowInteractable::$doInterpolateRotation$d__18
    class $doInterpolateRotation$d__18;
    public:
    // private MagicalActual.Grabber EKKGJEIEONH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Grabber* EKKGJEIEONH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Grabber*) == 0x8);
    // private MagicalActual.Grabber GJMKPJLCACC
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::Grabber* GJMKPJLCACC;
    // Field size check
    static_assert(sizeof(::MagicalActual::Grabber*) == 0x8);
    // private MagicalActual.Crossbow crossbowController
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::Crossbow* crossbowController;
    // Field size check
    static_assert(sizeof(::MagicalActual::Crossbow*) == 0x8);
    // public UnityEngine.Transform crossbowTransform
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Transform* crossbowTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform pivot
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Transform* pivot;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform leftHandGrab
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Transform* leftHandGrab;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform rightHandGrab
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Transform* rightHandGrab;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private System.Single grabOffset
    // Size: 0x4
    // Offset: 0x50
    float grabOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: grabOffset and: GLKKNJLMIJI
    char __padding7[0x4] = {};
    // private UnityEngine.Coroutine GLKKNJLMIJI
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Coroutine* GLKKNJLMIJI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private ClickedEventHandler MOHACFAMFIF
    // Size: 0x8
    // Offset: 0x60
    ::GlobalNamespace::ClickedEventHandler* MOHACFAMFIF;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // public System.Boolean isLocalControlled
    // Size: 0x1
    // Offset: 0x68
    bool isLocalControlled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isLocalControlled and: EFPGCEKDMJA
    char __padding10[0x3] = {};
    // private System.Single EFPGCEKDMJA
    // Size: 0x4
    // Offset: 0x6C
    float EFPGCEKDMJA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MLJONPGDIPL
    // Size: 0x4
    // Offset: 0x70
    float MLJONPGDIPL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Quaternion JNKPNBBNGHC
    // Size: 0x10
    // Offset: 0x74
    ::UnityEngine::Quaternion JNKPNBBNGHC;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private UnityEngine.Quaternion CKBLEIAFBCC
    // Size: 0x10
    // Offset: 0x84
    ::UnityEngine::Quaternion CKBLEIAFBCC;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Grabber EKKGJEIEONH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Grabber*& dyn_EKKGJEIEONH();
    // Get instance field reference: private MagicalActual.Grabber GJMKPJLCACC
    [[deprecated("Use field access instead!")]] ::MagicalActual::Grabber*& dyn_GJMKPJLCACC();
    // Get instance field reference: private MagicalActual.Crossbow crossbowController
    [[deprecated("Use field access instead!")]] ::MagicalActual::Crossbow*& dyn_crossbowController();
    // Get instance field reference: public UnityEngine.Transform crossbowTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_crossbowTransform();
    // Get instance field reference: private UnityEngine.Transform pivot
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_pivot();
    // Get instance field reference: private UnityEngine.Transform leftHandGrab
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_leftHandGrab();
    // Get instance field reference: private UnityEngine.Transform rightHandGrab
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_rightHandGrab();
    // Get instance field reference: private System.Single grabOffset
    [[deprecated("Use field access instead!")]] float& dyn_grabOffset();
    // Get instance field reference: private UnityEngine.Coroutine GLKKNJLMIJI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_GLKKNJLMIJI();
    // Get instance field reference: private ClickedEventHandler MOHACFAMFIF
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_MOHACFAMFIF();
    // Get instance field reference: public System.Boolean isLocalControlled
    [[deprecated("Use field access instead!")]] bool& dyn_isLocalControlled();
    // Get instance field reference: private System.Single EFPGCEKDMJA
    [[deprecated("Use field access instead!")]] float& dyn_EFPGCEKDMJA();
    // Get instance field reference: private System.Single MLJONPGDIPL
    [[deprecated("Use field access instead!")]] float& dyn_MLJONPGDIPL();
    // Get instance field reference: private UnityEngine.Quaternion JNKPNBBNGHC
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_JNKPNBBNGHC();
    // Get instance field reference: private UnityEngine.Quaternion CKBLEIAFBCC
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_CKBLEIAFBCC();
    // private System.Void POMPDJNJCJE(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x19AF12C
    void POMPDJNJCJE(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void ENIGECPOHND(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x19AF158
    void ENIGECPOHND(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public System.Void FIOHKAACGED()
    // Offset: 0x19AF184
    void FIOHKAACGED();
    // public System.Void .ctor()
    // Offset: 0x19AF23C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CrossbowInteractable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::CrossbowInteractable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CrossbowInteractable*, creationType>()));
    }
    // private System.Void AOOGMDMKPPO(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x19AF250
    void AOOGMDMKPPO(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void DHCNJHAMIJO()
    // Offset: 0x19AF27C
    void DHCNJHAMIJO();
    // private System.Void Start()
    // Offset: 0x19AF5F8
    void Start();
    // public System.Void LGDJEHLCPOM()
    // Offset: 0x19AF674
    void LGDJEHLCPOM();
    // private System.Void DPDDNOBAFIP()
    // Offset: 0x19AF728
    void DPDDNOBAFIP();
    // public System.Void ForceReleaseCrossbow()
    // Offset: 0x19A9A54
    void ForceReleaseCrossbow();
    // public System.Void DBBCFDBFIDD(UnityEngine.Quaternion NHDLHEDPKFH)
    // Offset: 0x19A8AB4
    void DBBCFDBFIDD(::UnityEngine::Quaternion NHDLHEDPKFH);
    // public System.Void FOOOEEBFDCO()
    // Offset: 0x19A9BDC
    void FOOOEEBFDCO();
    // private System.Collections.IEnumerator LPDCACKMFEO(UnityEngine.Quaternion NHDLHEDPKFH)
    // Offset: 0x19AFC0C
    ::System::Collections::IEnumerator* LPDCACKMFEO(::UnityEngine::Quaternion NHDLHEDPKFH);
    // private System.Void EBNFNLMHNGE()
    // Offset: 0x19AFCE8
    void EBNFNLMHNGE();
    // public System.Void MPAEJMIIJMB(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x19B0060
    void MPAEJMIIJMB(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void LKKJMFOCPPK(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x19B0298
    void LKKJMFOCPPK(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void doGripInteraction(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x19B04B8
    void doGripInteraction(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void doUnGripInteraction(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x19AFAA0
    void doUnGripInteraction(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void IFHJPPOELKK(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x19B085C
    void IFHJPPOELKK(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public System.Void InterpolateRotation(UnityEngine.Quaternion NHDLHEDPKFH)
    // Offset: 0x19AB4B4
    void InterpolateRotation(::UnityEngine::Quaternion NHDLHEDPKFH);
    // public System.Void GMOBJGJJFHL(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x19B0938
    void GMOBJGJJFHL(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void NFFEODGMIGN()
    // Offset: 0x19B0A78
    void NFFEODGMIGN();
    // private System.Void CHMCEGMCENL()
    // Offset: 0x19B0CE4
    void CHMCEGMCENL();
    // private System.Void Update()
    // Offset: 0x19B1060
    void Update();
    // public System.Void GMEHPLHGOPO()
    // Offset: 0x19AC84C
    void GMEHPLHGOPO();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x19B13CC
    void GPFBGGFPINB();
    // public System.Void FACIIMKIIIL(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x19B0B7C
    void FACIIMKIIIL(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void PlayerGrabbedCrossbow()
    // Offset: 0x19B06F0
    void PlayerGrabbedCrossbow();
    // public System.Void PlayerReleasedCrossbow()
    // Offset: 0x19B07A8
    void PlayerReleasedCrossbow();
    // public System.Void DHMKKAFANPM()
    // Offset: 0x19B0400
    void DHMKKAFANPM();
    // private System.Collections.IEnumerator KLPOMFIFEPK(UnityEngine.Quaternion NHDLHEDPKFH)
    // Offset: 0x19B0888
    ::System::Collections::IEnumerator* KLPOMFIFEPK(::UnityEngine::Quaternion NHDLHEDPKFH);
  }; // MagicalActual.CrossbowInteractable
  #pragma pack(pop)
  static check_size<sizeof(CrossbowInteractable), 132 + sizeof(::UnityEngine::Quaternion)> __MagicalActual_CrossbowInteractableSizeCheck;
  static_assert(sizeof(CrossbowInteractable) == 0x94);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::POMPDJNJCJE
// Il2CppName: POMPDJNJCJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::CrossbowInteractable::POMPDJNJCJE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "POMPDJNJCJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::ENIGECPOHND
// Il2CppName: ENIGECPOHND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::CrossbowInteractable::ENIGECPOHND)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "ENIGECPOHND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::FIOHKAACGED
// Il2CppName: FIOHKAACGED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::FIOHKAACGED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "FIOHKAACGED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::AOOGMDMKPPO
// Il2CppName: AOOGMDMKPPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::CrossbowInteractable::AOOGMDMKPPO)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "AOOGMDMKPPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::DHCNJHAMIJO
// Il2CppName: DHCNJHAMIJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::DHCNJHAMIJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "DHCNJHAMIJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::LGDJEHLCPOM
// Il2CppName: LGDJEHLCPOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::LGDJEHLCPOM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "LGDJEHLCPOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::DPDDNOBAFIP
// Il2CppName: DPDDNOBAFIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::DPDDNOBAFIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "DPDDNOBAFIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::ForceReleaseCrossbow
// Il2CppName: ForceReleaseCrossbow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::ForceReleaseCrossbow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "ForceReleaseCrossbow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::DBBCFDBFIDD
// Il2CppName: DBBCFDBFIDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::UnityEngine::Quaternion)>(&MagicalActual::CrossbowInteractable::DBBCFDBFIDD)> {
  static const MethodInfo* get() {
    static auto* NHDLHEDPKFH = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "DBBCFDBFIDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHDLHEDPKFH});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::FOOOEEBFDCO
// Il2CppName: FOOOEEBFDCO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::FOOOEEBFDCO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "FOOOEEBFDCO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::LPDCACKMFEO
// Il2CppName: LPDCACKMFEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::CrossbowInteractable::*)(::UnityEngine::Quaternion)>(&MagicalActual::CrossbowInteractable::LPDCACKMFEO)> {
  static const MethodInfo* get() {
    static auto* NHDLHEDPKFH = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "LPDCACKMFEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHDLHEDPKFH});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::EBNFNLMHNGE
// Il2CppName: EBNFNLMHNGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::EBNFNLMHNGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "EBNFNLMHNGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::MPAEJMIIJMB
// Il2CppName: MPAEJMIIJMB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::UnityEngine::GameObject*)>(&MagicalActual::CrossbowInteractable::MPAEJMIIJMB)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "MPAEJMIIJMB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::LKKJMFOCPPK
// Il2CppName: LKKJMFOCPPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::UnityEngine::GameObject*)>(&MagicalActual::CrossbowInteractable::LKKJMFOCPPK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "LKKJMFOCPPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::doGripInteraction
// Il2CppName: doGripInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::UnityEngine::GameObject*)>(&MagicalActual::CrossbowInteractable::doGripInteraction)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "doGripInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::doUnGripInteraction
// Il2CppName: doUnGripInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::UnityEngine::GameObject*)>(&MagicalActual::CrossbowInteractable::doUnGripInteraction)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "doUnGripInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::IFHJPPOELKK
// Il2CppName: IFHJPPOELKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::CrossbowInteractable::IFHJPPOELKK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "IFHJPPOELKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::InterpolateRotation
// Il2CppName: InterpolateRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::UnityEngine::Quaternion)>(&MagicalActual::CrossbowInteractable::InterpolateRotation)> {
  static const MethodInfo* get() {
    static auto* NHDLHEDPKFH = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "InterpolateRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHDLHEDPKFH});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::GMOBJGJJFHL
// Il2CppName: GMOBJGJJFHL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::UnityEngine::GameObject*)>(&MagicalActual::CrossbowInteractable::GMOBJGJJFHL)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "GMOBJGJJFHL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::NFFEODGMIGN
// Il2CppName: NFFEODGMIGN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::NFFEODGMIGN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "NFFEODGMIGN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::CHMCEGMCENL
// Il2CppName: CHMCEGMCENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::CHMCEGMCENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "CHMCEGMCENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::GMEHPLHGOPO
// Il2CppName: GMEHPLHGOPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::GMEHPLHGOPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "GMEHPLHGOPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::FACIIMKIIIL
// Il2CppName: FACIIMKIIIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)(::UnityEngine::GameObject*)>(&MagicalActual::CrossbowInteractable::FACIIMKIIIL)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "FACIIMKIIIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::PlayerGrabbedCrossbow
// Il2CppName: PlayerGrabbedCrossbow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::PlayerGrabbedCrossbow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "PlayerGrabbedCrossbow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::PlayerReleasedCrossbow
// Il2CppName: PlayerReleasedCrossbow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::PlayerReleasedCrossbow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "PlayerReleasedCrossbow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::DHMKKAFANPM
// Il2CppName: DHMKKAFANPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowInteractable::*)()>(&MagicalActual::CrossbowInteractable::DHMKKAFANPM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "DHMKKAFANPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowInteractable::KLPOMFIFEPK
// Il2CppName: KLPOMFIFEPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::CrossbowInteractable::*)(::UnityEngine::Quaternion)>(&MagicalActual::CrossbowInteractable::KLPOMFIFEPK)> {
  static const MethodInfo* get() {
    static auto* NHDLHEDPKFH = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowInteractable*), "KLPOMFIFEPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHDLHEDPKFH});
  }
};
