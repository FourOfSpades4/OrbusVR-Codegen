// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MagicalActual.Barbarian
#include "MagicalActual/Barbarian.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Barbarian::axeAbilityIdx, "MagicalActual", "Barbarian/axeAbilityIdx");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Barbarian/axeAbilityIdx
  // [TokenAttribute] Offset: FFFFFFFF
  struct Barbarian::axeAbilityIdx/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: axeAbilityIdx
    constexpr axeAbilityIdx(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public MagicalActual.Barbarian/axeAbilityIdx MIGMJAPHBLP
    static constexpr const int MIGMJAPHBLP = 3;
    // Get static field: static public MagicalActual.Barbarian/axeAbilityIdx MIGMJAPHBLP
    static ::MagicalActual::Barbarian::axeAbilityIdx _get_MIGMJAPHBLP();
    // Set static field: static public MagicalActual.Barbarian/axeAbilityIdx MIGMJAPHBLP
    static void _set_MIGMJAPHBLP(::MagicalActual::Barbarian::axeAbilityIdx value);
    // static field const value: static public MagicalActual.Barbarian/axeAbilityIdx NIJNOPEGAKH
    static constexpr const int NIJNOPEGAKH = 2;
    // Get static field: static public MagicalActual.Barbarian/axeAbilityIdx NIJNOPEGAKH
    static ::MagicalActual::Barbarian::axeAbilityIdx _get_NIJNOPEGAKH();
    // Set static field: static public MagicalActual.Barbarian/axeAbilityIdx NIJNOPEGAKH
    static void _set_NIJNOPEGAKH(::MagicalActual::Barbarian::axeAbilityIdx value);
    // static field const value: static public MagicalActual.Barbarian/axeAbilityIdx MBJDDONLKGM
    static constexpr const int MBJDDONLKGM = 1;
    // Get static field: static public MagicalActual.Barbarian/axeAbilityIdx MBJDDONLKGM
    static ::MagicalActual::Barbarian::axeAbilityIdx _get_MBJDDONLKGM();
    // Set static field: static public MagicalActual.Barbarian/axeAbilityIdx MBJDDONLKGM
    static void _set_MBJDDONLKGM(::MagicalActual::Barbarian::axeAbilityIdx value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // MagicalActual.Barbarian/axeAbilityIdx
  #pragma pack(pop)
  static check_size<sizeof(Barbarian::axeAbilityIdx), 0 + sizeof(int)> __MagicalActual_Barbarian_axeAbilityIdxSizeCheck;
  static_assert(sizeof(Barbarian::axeAbilityIdx) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
