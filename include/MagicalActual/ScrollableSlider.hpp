// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MagicalActual.ScrollableContent
#include "MagicalActual/ScrollableContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Slider
  class Slider;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ScrollableSlider
  class ScrollableSlider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ScrollableSlider);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ScrollableSlider*, "MagicalActual", "ScrollableSlider");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ScrollableSlider
  // [TokenAttribute] Offset: FFFFFFFF
  class ScrollableSlider : public ::MagicalActual::ScrollableContent {
    public:
    public:
    // private UnityEngine.UI.Slider slider
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UI::Slider* slider;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Slider*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.UI.Slider slider
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Slider*& dyn_slider();
    // public override System.Void GPDCNPHLONK(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0E14
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::GPDCNPHLONK(System.Single EDKKGFLKMAC)
    void GPDCNPHLONK(float EDKKGFLKMAC);
    // public override System.Void CHJPONPCLCM(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0E90
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::CHJPONPCLCM(System.Single EDKKGFLKMAC)
    void CHJPONPCLCM(float EDKKGFLKMAC);
    // public override System.Void GDBFDDPJJGG(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0F0C
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::GDBFDDPJJGG(System.Single EDKKGFLKMAC)
    void GDBFDDPJJGG(float EDKKGFLKMAC);
    // public override System.Void EPLNAFLPCGL(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0F88
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::EPLNAFLPCGL(System.Single EDKKGFLKMAC)
    void EPLNAFLPCGL(float EDKKGFLKMAC);
    // public override System.Void IAKJGGJLLMC(System.Single EDKKGFLKMAC)
    // Offset: 0x11F1004
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::IAKJGGJLLMC(System.Single EDKKGFLKMAC)
    void IAKJGGJLLMC(float EDKKGFLKMAC);
    // public override System.Void PKCBJCEDBNO(System.Single EDKKGFLKMAC)
    // Offset: 0x11F1080
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::PKCBJCEDBNO(System.Single EDKKGFLKMAC)
    void PKCBJCEDBNO(float EDKKGFLKMAC);
    // public override System.Void AFHJKBJEAPE(System.Single EDKKGFLKMAC)
    // Offset: 0x11F10FC
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::AFHJKBJEAPE(System.Single EDKKGFLKMAC)
    void AFHJKBJEAPE(float EDKKGFLKMAC);
    // public override System.Void JAKDAKHHDOO(System.Single EDKKGFLKMAC)
    // Offset: 0x11F1178
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::JAKDAKHHDOO(System.Single EDKKGFLKMAC)
    void JAKDAKHHDOO(float EDKKGFLKMAC);
    // public System.Void .ctor()
    // Offset: 0x11F11F4
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScrollableSlider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ScrollableSlider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScrollableSlider*, creationType>()));
    }
    // public override System.Void PELHFMFAICK(System.Single EDKKGFLKMAC)
    // Offset: 0x11F11FC
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::PELHFMFAICK(System.Single EDKKGFLKMAC)
    void PELHFMFAICK(float EDKKGFLKMAC);
    // public override System.Void ScrollBy(System.Single EDKKGFLKMAC)
    // Offset: 0x11F1278
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::ScrollBy(System.Single EDKKGFLKMAC)
    void ScrollBy(float EDKKGFLKMAC);
    // public override System.Void GOMABCGELJA(System.Single EDKKGFLKMAC)
    // Offset: 0x11F12F4
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::GOMABCGELJA(System.Single EDKKGFLKMAC)
    void GOMABCGELJA(float EDKKGFLKMAC);
    // public override System.Void HDALDABGKBO(System.Single EDKKGFLKMAC)
    // Offset: 0x11F1370
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::HDALDABGKBO(System.Single EDKKGFLKMAC)
    void HDALDABGKBO(float EDKKGFLKMAC);
    // public override System.Void DKEHCBCOOAE(System.Single EDKKGFLKMAC)
    // Offset: 0x11F13EC
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::DKEHCBCOOAE(System.Single EDKKGFLKMAC)
    void DKEHCBCOOAE(float EDKKGFLKMAC);
    // public override System.Void HKLIFELIEKO(System.Single EDKKGFLKMAC)
    // Offset: 0x11F1468
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::HKLIFELIEKO(System.Single EDKKGFLKMAC)
    void HKLIFELIEKO(float EDKKGFLKMAC);
    // public override System.Void MFOKNCAOIBB(System.Single EDKKGFLKMAC)
    // Offset: 0x11F14E4
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::MFOKNCAOIBB(System.Single EDKKGFLKMAC)
    void MFOKNCAOIBB(float EDKKGFLKMAC);
    // public override System.Void IIDOBLNJLDA(System.Single EDKKGFLKMAC)
    // Offset: 0x11F1560
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::IIDOBLNJLDA(System.Single EDKKGFLKMAC)
    void IIDOBLNJLDA(float EDKKGFLKMAC);
    // public override System.Void HIBBABBENMN(System.Single EDKKGFLKMAC)
    // Offset: 0x11F15DC
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::HIBBABBENMN(System.Single EDKKGFLKMAC)
    void HIBBABBENMN(float EDKKGFLKMAC);
    // public override System.Void BGGGHJHADJB(System.Single EDKKGFLKMAC)
    // Offset: 0x11F1658
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::BGGGHJHADJB(System.Single EDKKGFLKMAC)
    void BGGGHJHADJB(float EDKKGFLKMAC);
    // public override System.Void KDPGABFIFJE(System.Single EDKKGFLKMAC)
    // Offset: 0x11F16D4
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::KDPGABFIFJE(System.Single EDKKGFLKMAC)
    void KDPGABFIFJE(float EDKKGFLKMAC);
    // public override System.Void PEOFMACCGKI(System.Single EDKKGFLKMAC)
    // Offset: 0x11F1750
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::PEOFMACCGKI(System.Single EDKKGFLKMAC)
    void PEOFMACCGKI(float EDKKGFLKMAC);
    // public override System.Void MEJDJCDMMNN(System.Single EDKKGFLKMAC)
    // Offset: 0x11F17CC
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::MEJDJCDMMNN(System.Single EDKKGFLKMAC)
    void MEJDJCDMMNN(float EDKKGFLKMAC);
    // public override System.Void HJIKMKCDDDB(System.Single EDKKGFLKMAC)
    // Offset: 0x11F1848
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::HJIKMKCDDDB(System.Single EDKKGFLKMAC)
    void HJIKMKCDDDB(float EDKKGFLKMAC);
    // public override System.Void GFIMKBOIBDJ(System.Single EDKKGFLKMAC)
    // Offset: 0x11F18C4
    // Implemented from: MagicalActual.ScrollableContent
    // Base method: System.Void ScrollableContent::GFIMKBOIBDJ(System.Single EDKKGFLKMAC)
    void GFIMKBOIBDJ(float EDKKGFLKMAC);
  }; // MagicalActual.ScrollableSlider
  #pragma pack(pop)
  static check_size<sizeof(ScrollableSlider), 32 + sizeof(::UnityEngine::UI::Slider*)> __MagicalActual_ScrollableSliderSizeCheck;
  static_assert(sizeof(ScrollableSlider) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::GPDCNPHLONK
// Il2CppName: GPDCNPHLONK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::GPDCNPHLONK)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "GPDCNPHLONK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::CHJPONPCLCM
// Il2CppName: CHJPONPCLCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::CHJPONPCLCM)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "CHJPONPCLCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::GDBFDDPJJGG
// Il2CppName: GDBFDDPJJGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::GDBFDDPJJGG)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "GDBFDDPJJGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::EPLNAFLPCGL
// Il2CppName: EPLNAFLPCGL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::EPLNAFLPCGL)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "EPLNAFLPCGL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::IAKJGGJLLMC
// Il2CppName: IAKJGGJLLMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::IAKJGGJLLMC)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "IAKJGGJLLMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::PKCBJCEDBNO
// Il2CppName: PKCBJCEDBNO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::PKCBJCEDBNO)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "PKCBJCEDBNO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::AFHJKBJEAPE
// Il2CppName: AFHJKBJEAPE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::AFHJKBJEAPE)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "AFHJKBJEAPE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::JAKDAKHHDOO
// Il2CppName: JAKDAKHHDOO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::JAKDAKHHDOO)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "JAKDAKHHDOO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::PELHFMFAICK
// Il2CppName: PELHFMFAICK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::PELHFMFAICK)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "PELHFMFAICK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::ScrollBy
// Il2CppName: ScrollBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::ScrollBy)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "ScrollBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::GOMABCGELJA
// Il2CppName: GOMABCGELJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::GOMABCGELJA)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "GOMABCGELJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::HDALDABGKBO
// Il2CppName: HDALDABGKBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::HDALDABGKBO)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "HDALDABGKBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::DKEHCBCOOAE
// Il2CppName: DKEHCBCOOAE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::DKEHCBCOOAE)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "DKEHCBCOOAE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::HKLIFELIEKO
// Il2CppName: HKLIFELIEKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::HKLIFELIEKO)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "HKLIFELIEKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::MFOKNCAOIBB
// Il2CppName: MFOKNCAOIBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::MFOKNCAOIBB)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "MFOKNCAOIBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::IIDOBLNJLDA
// Il2CppName: IIDOBLNJLDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::IIDOBLNJLDA)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "IIDOBLNJLDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::HIBBABBENMN
// Il2CppName: HIBBABBENMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::HIBBABBENMN)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "HIBBABBENMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::BGGGHJHADJB
// Il2CppName: BGGGHJHADJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::BGGGHJHADJB)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "BGGGHJHADJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::KDPGABFIFJE
// Il2CppName: KDPGABFIFJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::KDPGABFIFJE)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "KDPGABFIFJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::PEOFMACCGKI
// Il2CppName: PEOFMACCGKI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::PEOFMACCGKI)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "PEOFMACCGKI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::MEJDJCDMMNN
// Il2CppName: MEJDJCDMMNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::MEJDJCDMMNN)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "MEJDJCDMMNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::HJIKMKCDDDB
// Il2CppName: HJIKMKCDDDB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::HJIKMKCDDDB)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "HJIKMKCDDDB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableSlider::GFIMKBOIBDJ
// Il2CppName: GFIMKBOIBDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableSlider::*)(float)>(&MagicalActual::ScrollableSlider::GFIMKBOIBDJ)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableSlider*), "GFIMKBOIBDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
