// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ArrowBobber
  class ArrowBobber;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ArrowBobber);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ArrowBobber*, "MagicalActual", "ArrowBobber");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ArrowBobber
  // [TokenAttribute] Offset: FFFFFFFF
  class ArrowBobber : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.Vector3 KCOKPGCNCLA
    // Size: 0xC
    // Offset: 0x18
    ::UnityEngine::Vector3 KCOKPGCNCLA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single PMMELAKIOLA
    // Size: 0x4
    // Offset: 0x24
    float PMMELAKIOLA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single ELKPHMKBBOI
    // Size: 0x4
    // Offset: 0x28
    float ELKPHMKBBOI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean BMBFKJKJHDK
    // Size: 0x1
    // Offset: 0x2C
    bool BMBFKJKJHDK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: BMBFKJKJHDK and: EAKMJGIJFGN
    char __padding3[0x3] = {};
    // private System.Single EAKMJGIJFGN
    // Size: 0x4
    // Offset: 0x30
    float EAKMJGIJFGN;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Vector3 KCOKPGCNCLA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_KCOKPGCNCLA();
    // Get instance field reference: private System.Single PMMELAKIOLA
    [[deprecated("Use field access instead!")]] float& dyn_PMMELAKIOLA();
    // Get instance field reference: private System.Single ELKPHMKBBOI
    [[deprecated("Use field access instead!")]] float& dyn_ELKPHMKBBOI();
    // Get instance field reference: private System.Boolean BMBFKJKJHDK
    [[deprecated("Use field access instead!")]] bool& dyn_BMBFKJKJHDK();
    // Get instance field reference: private System.Single EAKMJGIJFGN
    [[deprecated("Use field access instead!")]] float& dyn_EAKMJGIJFGN();
    // private System.Void DPDDNOBAFIP()
    // Offset: 0x1998860
    void DPDDNOBAFIP();
    // private System.Void FEIGDJNEHBG()
    // Offset: 0x1998AF0
    void FEIGDJNEHBG();
    // private System.Void MHHFAOGFAPO()
    // Offset: 0x1998D80
    void MHHFAOGFAPO();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x199900C
    void GKIOLADOCOK();
    // private System.Void GEJIJMPGALF()
    // Offset: 0x1999050
    void GEJIJMPGALF();
    // private System.Void LJOGIPIJIPF()
    // Offset: 0x19992DC
    void LJOGIPIJIPF();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x199956C
    void EPCHNEGNKNF();
    // private System.Void EBNFNLMHNGE()
    // Offset: 0x19995B0
    void EBNFNLMHNGE();
    // private System.Void KCEPMBHOMCD()
    // Offset: 0x1999840
    void KCEPMBHOMCD();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x1999AD4
    void DGJGAFKDIDK();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x1999B18
    void IPIFMKAGODD();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x1999B5C
    void EIIKFEMCNKM();
    // private System.Void Start()
    // Offset: 0x1999BA0
    void Start();
    // private System.Void GHBOEBHBEEJ()
    // Offset: 0x1999BE4
    void GHBOEBHBEEJ();
    // public System.Void .ctor()
    // Offset: 0x1999E74
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ArrowBobber* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ArrowBobber::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ArrowBobber*, creationType>()));
    }
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x1999E98
    void KPOAAAHLGLA();
    // private System.Void JEIAGCBHHHI()
    // Offset: 0x1999EDC
    void JEIAGCBHHHI();
    // private System.Void INJNMDOBFOI()
    // Offset: 0x199A164
    void INJNMDOBFOI();
    // private System.Void MGNEDHFLOCJ()
    // Offset: 0x199A3F0
    void MGNEDHFLOCJ();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x199A684
    void LPLGKBGLPOK();
    // private System.Void CHMCEGMCENL()
    // Offset: 0x199A6C8
    void CHMCEGMCENL();
    // private System.Void JJNHCABMBIH()
    // Offset: 0x199A954
    void JJNHCABMBIH();
    // private System.Void FMCFFLJCCCP()
    // Offset: 0x199ABE0
    void FMCFFLJCCCP();
    // private System.Void Update()
    // Offset: 0x199AE70
    void Update();
    // private System.Void CEGEBCFNLFC()
    // Offset: 0x199B0EC
    void CEGEBCFNLFC();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x199B37C
    void FGIFGGNGKPK();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x199B3C0
    void NNDKJCJFIAK();
    // private System.Void FBDBGKLFFOI()
    // Offset: 0x199B404
    void FBDBGKLFFOI();
  }; // MagicalActual.ArrowBobber
  #pragma pack(pop)
  static check_size<sizeof(ArrowBobber), 48 + sizeof(float)> __MagicalActual_ArrowBobberSizeCheck;
  static_assert(sizeof(ArrowBobber) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::DPDDNOBAFIP
// Il2CppName: DPDDNOBAFIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::DPDDNOBAFIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "DPDDNOBAFIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::FEIGDJNEHBG
// Il2CppName: FEIGDJNEHBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::FEIGDJNEHBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "FEIGDJNEHBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::MHHFAOGFAPO
// Il2CppName: MHHFAOGFAPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::MHHFAOGFAPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "MHHFAOGFAPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::GEJIJMPGALF
// Il2CppName: GEJIJMPGALF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::GEJIJMPGALF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "GEJIJMPGALF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::LJOGIPIJIPF
// Il2CppName: LJOGIPIJIPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::LJOGIPIJIPF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "LJOGIPIJIPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::EBNFNLMHNGE
// Il2CppName: EBNFNLMHNGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::EBNFNLMHNGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "EBNFNLMHNGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::KCEPMBHOMCD
// Il2CppName: KCEPMBHOMCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::KCEPMBHOMCD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "KCEPMBHOMCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::GHBOEBHBEEJ
// Il2CppName: GHBOEBHBEEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::GHBOEBHBEEJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "GHBOEBHBEEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::JEIAGCBHHHI
// Il2CppName: JEIAGCBHHHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::JEIAGCBHHHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "JEIAGCBHHHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::INJNMDOBFOI
// Il2CppName: INJNMDOBFOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::INJNMDOBFOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "INJNMDOBFOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::MGNEDHFLOCJ
// Il2CppName: MGNEDHFLOCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::MGNEDHFLOCJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "MGNEDHFLOCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::CHMCEGMCENL
// Il2CppName: CHMCEGMCENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::CHMCEGMCENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "CHMCEGMCENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::JJNHCABMBIH
// Il2CppName: JJNHCABMBIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::JJNHCABMBIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "JJNHCABMBIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::FMCFFLJCCCP
// Il2CppName: FMCFFLJCCCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::FMCFFLJCCCP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "FMCFFLJCCCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::CEGEBCFNLFC
// Il2CppName: CEGEBCFNLFC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::CEGEBCFNLFC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "CEGEBCFNLFC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ArrowBobber::FBDBGKLFFOI
// Il2CppName: FBDBGKLFFOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ArrowBobber::*)()>(&MagicalActual::ArrowBobber::FBDBGKLFFOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ArrowBobber*), "FBDBGKLFFOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
