// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerTool
  class PlayerTool;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: TraduFragment
  class TraduFragment;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::TraduFragment);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::TraduFragment*, "MagicalActual", "TraduFragment");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.TraduFragment
  // [TokenAttribute] Offset: FFFFFFFF
  class TraduFragment : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.PlayerTool FKJHGIFOJKD
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::PlayerTool* FKJHGIFOJKD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerTool*) == 0x8);
    // private System.Boolean IMAFJMEOHIF
    // Size: 0x1
    // Offset: 0x20
    bool IMAFJMEOHIF;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IMAFJMEOHIF and: MGIJGHBFFOO
    char __padding1[0x7] = {};
    // private UnityEngine.Transform MGIJGHBFFOO
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Transform* MGIJGHBFFOO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Collider[] JGOGJDHABHN
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::UnityEngine::Collider*> JGOGJDHABHN;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // private System.String ACNINLKMMKB
    // Size: 0x8
    // Offset: 0x38
    ::StringW ACNINLKMMKB;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject activateVfx
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* activateVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.PlayerTool FKJHGIFOJKD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerTool*& dyn_FKJHGIFOJKD();
    // Get instance field reference: private System.Boolean IMAFJMEOHIF
    [[deprecated("Use field access instead!")]] bool& dyn_IMAFJMEOHIF();
    // Get instance field reference: private UnityEngine.Transform MGIJGHBFFOO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_MGIJGHBFFOO();
    // Get instance field reference: private UnityEngine.Collider[] JGOGJDHABHN
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_JGOGJDHABHN();
    // Get instance field reference: private System.String ACNINLKMMKB
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ACNINLKMMKB();
    // Get instance field reference: public UnityEngine.GameObject activateVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_activateVfx();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x13BEA38
    void IPIFMKAGODD();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x13BEA90
    void FNGLOIECKDG();
    // private System.Void AHFBDLOBKCA()
    // Offset: 0x13BEAE8
    void AHFBDLOBKCA();
    // private System.Void AMGJNJLJIFO()
    // Offset: 0x13BEB70
    void AMGJNJLJIFO();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x13BEE04
    void NNDKJCJFIAK();
    // private System.Void CBHPPEEBAPF()
    // Offset: 0x13BEE5C
    void CBHPPEEBAPF();
    // private System.Void CAPGFLFKCLN(System.Byte KLIPNGBEELK)
    // Offset: 0x13BEEE4
    void CAPGFLFKCLN(uint8_t KLIPNGBEELK);
    // private System.Void NLOFBPNEFKD()
    // Offset: 0x13BF070
    void NLOFBPNEFKD();
    // private System.Void GAEGMNMBFCM(System.Byte KLIPNGBEELK)
    // Offset: 0x13BF0C8
    void GAEGMNMBFCM(uint8_t KLIPNGBEELK);
    // private System.Void AGOBDBDGJKD()
    // Offset: 0x13BF254
    void AGOBDBDGJKD();
    // public System.Void .ctor()
    // Offset: 0x13BF4E8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TraduFragment* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::TraduFragment::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TraduFragment*, creationType>()));
    }
    // private System.Void JFJCCNIMOPO()
    // Offset: 0x13BF460
    void JFJCCNIMOPO();
    // private System.Void JDJILFHNOGP()
    // Offset: 0x13BF540
    void JDJILFHNOGP();
    // private System.Void AIKBLNGPOON()
    // Offset: 0x13BF598
    void AIKBLNGPOON();
    // private System.Void CHEMMHEMDCB()
    // Offset: 0x13BF5F0
    void CHEMMHEMDCB();
    // private System.Void IOHCMGPOHBM(System.Byte KLIPNGBEELK)
    // Offset: 0x13BF7FC
    void IOHCMGPOHBM(uint8_t KLIPNGBEELK);
    // private System.Void FixedUpdate()
    // Offset: 0x13BF988
    void FixedUpdate();
    // private System.Void OAEPHGIOHAO()
    // Offset: 0x13BED7C
    void OAEPHGIOHAO();
    // private System.Void Start()
    // Offset: 0x13BFC14
    void Start();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x13BFC6C
    void HKINNMLBMMG();
    // private System.Void Awake()
    // Offset: 0x13BFCC4
    void Awake();
    // private System.Void FEAPFNNLNFG(System.Byte KLIPNGBEELK)
    // Offset: 0x13BFD1C
    void FEAPFNNLNFG(uint8_t KLIPNGBEELK);
    // private System.Void JCGIGLJIGOM()
    // Offset: 0x13BFEA8
    void JCGIGLJIGOM();
    // private System.Void SignalReceived(System.Byte KLIPNGBEELK)
    // Offset: 0x13BFF30
    void SignalReceived(uint8_t KLIPNGBEELK);
    // private System.Void EDJIILEFNPD()
    // Offset: 0x13C00B8
    void EDJIILEFNPD();
    // private System.Void FGGKEEKHDHN()
    // Offset: 0x13C0110
    void FGGKEEKHDHN();
    // private System.Void AFALAKLIBEB()
    // Offset: 0x13BFB8C
    void AFALAKLIBEB();
    // private System.Void JCJCMKPOAKK()
    // Offset: 0x13C032C
    void JCJCMKPOAKK();
    // private System.Void JPHNAIDIBKL()
    // Offset: 0x13C0384
    void JPHNAIDIBKL();
  }; // MagicalActual.TraduFragment
  #pragma pack(pop)
  static check_size<sizeof(TraduFragment), 64 + sizeof(::UnityEngine::GameObject*)> __MagicalActual_TraduFragmentSizeCheck;
  static_assert(sizeof(TraduFragment) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::TraduFragment::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::AHFBDLOBKCA
// Il2CppName: AHFBDLOBKCA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::AHFBDLOBKCA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "AHFBDLOBKCA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::AMGJNJLJIFO
// Il2CppName: AMGJNJLJIFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::AMGJNJLJIFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "AMGJNJLJIFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::CBHPPEEBAPF
// Il2CppName: CBHPPEEBAPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::CBHPPEEBAPF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "CBHPPEEBAPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::CAPGFLFKCLN
// Il2CppName: CAPGFLFKCLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)(uint8_t)>(&MagicalActual::TraduFragment::CAPGFLFKCLN)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "CAPGFLFKCLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::NLOFBPNEFKD
// Il2CppName: NLOFBPNEFKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::NLOFBPNEFKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "NLOFBPNEFKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::GAEGMNMBFCM
// Il2CppName: GAEGMNMBFCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)(uint8_t)>(&MagicalActual::TraduFragment::GAEGMNMBFCM)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "GAEGMNMBFCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::AGOBDBDGJKD
// Il2CppName: AGOBDBDGJKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::AGOBDBDGJKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "AGOBDBDGJKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::TraduFragment::JFJCCNIMOPO
// Il2CppName: JFJCCNIMOPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::JFJCCNIMOPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "JFJCCNIMOPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::JDJILFHNOGP
// Il2CppName: JDJILFHNOGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::JDJILFHNOGP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "JDJILFHNOGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::AIKBLNGPOON
// Il2CppName: AIKBLNGPOON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::AIKBLNGPOON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "AIKBLNGPOON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::CHEMMHEMDCB
// Il2CppName: CHEMMHEMDCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::CHEMMHEMDCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "CHEMMHEMDCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::IOHCMGPOHBM
// Il2CppName: IOHCMGPOHBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)(uint8_t)>(&MagicalActual::TraduFragment::IOHCMGPOHBM)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "IOHCMGPOHBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::OAEPHGIOHAO
// Il2CppName: OAEPHGIOHAO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::OAEPHGIOHAO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "OAEPHGIOHAO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::FEAPFNNLNFG
// Il2CppName: FEAPFNNLNFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)(uint8_t)>(&MagicalActual::TraduFragment::FEAPFNNLNFG)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "FEAPFNNLNFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::JCGIGLJIGOM
// Il2CppName: JCGIGLJIGOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::JCGIGLJIGOM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "JCGIGLJIGOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::SignalReceived
// Il2CppName: SignalReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)(uint8_t)>(&MagicalActual::TraduFragment::SignalReceived)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "SignalReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::EDJIILEFNPD
// Il2CppName: EDJIILEFNPD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::EDJIILEFNPD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "EDJIILEFNPD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::FGGKEEKHDHN
// Il2CppName: FGGKEEKHDHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::FGGKEEKHDHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "FGGKEEKHDHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::AFALAKLIBEB
// Il2CppName: AFALAKLIBEB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::AFALAKLIBEB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "AFALAKLIBEB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::JCJCMKPOAKK
// Il2CppName: JCJCMKPOAKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::JCJCMKPOAKK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "JCJCMKPOAKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TraduFragment::JPHNAIDIBKL
// Il2CppName: JPHNAIDIBKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TraduFragment::*)()>(&MagicalActual::TraduFragment::JPHNAIDIBKL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TraduFragment*), "JPHNAIDIBKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
