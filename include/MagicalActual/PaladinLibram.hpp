// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Paladin
  class Paladin;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PaladinLibram
  class PaladinLibram;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PaladinLibram);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PaladinLibram*, "MagicalActual", "PaladinLibram");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PaladinLibram
  // [TokenAttribute] Offset: FFFFFFFF
  class PaladinLibram : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.Single IGCMJJNOJBC
    // Size: 0x4
    // Offset: 0x18
    float IGCMJJNOJBC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single NKDFACNMJLN
    // Size: 0x4
    // Offset: 0x1C
    float NKDFACNMJLN;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean LENHGAGCIJC
    // Size: 0x1
    // Offset: 0x20
    bool LENHGAGCIJC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: LENHGAGCIJC and: OONFGJOBJEO
    char __padding2[0x7] = {};
    // private MagicalActual.Paladin OONFGJOBJEO
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::Paladin* OONFGJOBJEO;
    // Field size check
    static_assert(sizeof(::MagicalActual::Paladin*) == 0x8);
    // public System.Int32 libramId
    // Size: 0x4
    // Offset: 0x30
    int libramId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: libramId and: NBNKFBECLJG
    char __padding4[0x4] = {};
    // private UnityEngine.Animator NBNKFBECLJG
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Animator* NBNKFBECLJG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animator*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Single IGCMJJNOJBC
    [[deprecated("Use field access instead!")]] float& dyn_IGCMJJNOJBC();
    // Get instance field reference: private System.Single NKDFACNMJLN
    [[deprecated("Use field access instead!")]] float& dyn_NKDFACNMJLN();
    // Get instance field reference: private System.Boolean LENHGAGCIJC
    [[deprecated("Use field access instead!")]] bool& dyn_LENHGAGCIJC();
    // Get instance field reference: private MagicalActual.Paladin OONFGJOBJEO
    [[deprecated("Use field access instead!")]] ::MagicalActual::Paladin*& dyn_OONFGJOBJEO();
    // Get instance field reference: public System.Int32 libramId
    [[deprecated("Use field access instead!")]] int& dyn_libramId();
    // Get instance field reference: private UnityEngine.Animator NBNKFBECLJG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& dyn_NBNKFBECLJG();
    // private System.Void FOEGEJAMHBC()
    // Offset: 0x22322CC
    void FOEGEJAMHBC();
    // private System.Void BHBFEEJHKIH()
    // Offset: 0x22323A0
    void BHBFEEJHKIH();
    // private System.Void DBLHNPALFEG()
    // Offset: 0x2232550
    void DBLHNPALFEG();
    // private System.Void NLFOPEAGLDJ()
    // Offset: 0x2232630
    void NLFOPEAGLDJ();
    // private System.Void EMPNNPKBHFO()
    // Offset: 0x22327E4
    void EMPNNPKBHFO();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x22328C4
    void FNGLOIECKDG();
    // public System.Void .ctor()
    // Offset: 0x2232934
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PaladinLibram* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PaladinLibram::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PaladinLibram*, creationType>()));
    }
    // private System.Void FixedUpdate()
    // Offset: 0x2232944
    void FixedUpdate();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x2232AF0
    void EPCHNEGNKNF();
    // private System.Void PhysicsInteractableGrip()
    // Offset: 0x2232B60
    void PhysicsInteractableGrip();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x2232C34
    void KBDGAPMJGLG();
    // private System.Void PABPOCMFEJK()
    // Offset: 0x2232CA4
    void PABPOCMFEJK();
    // private System.Void KIBDIFDNGKF()
    // Offset: 0x2232D84
    void KIBDIFDNGKF();
    // private System.Void FALIOLCPAII()
    // Offset: 0x2232E64
    void FALIOLCPAII();
    // private System.Void GMGFCMJCALC()
    // Offset: 0x2232F38
    void GMGFCMJCALC();
    // private System.Void Start()
    // Offset: 0x2233018
    void Start();
    // private System.Void OBEBPGLHIHJ()
    // Offset: 0x2233088
    void OBEBPGLHIHJ();
    // private System.Void ECBJEKPINME()
    // Offset: 0x223316C
    void ECBJEKPINME();
    // private System.Void GPLMNLOCHNM()
    // Offset: 0x223324C
    void GPLMNLOCHNM();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x2233330
    void GECHLDPLPCC();
    // private System.Void NHADFEMILCC()
    // Offset: 0x22333A0
    void NHADFEMILCC();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x2233410
    void BDEDGNGMHMN();
    // private System.Void DDJINHIPKCE()
    // Offset: 0x2233480
    void DDJINHIPKCE();
    // private System.Void FKAAOMJGDAB()
    // Offset: 0x2233630
    void FKAAOMJGDAB();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x2233708
    void IDOCJGNLNFL();
    // private System.Void JCOEAIILOND()
    // Offset: 0x2233778
    void JCOEAIILOND();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x2233928
    void DGJGAFKDIDK();
    // private System.Void ANKCGGIBCAI()
    // Offset: 0x2233998
    void ANKCGGIBCAI();
    // private System.Void LODDPHAEIAD()
    // Offset: 0x2233B4C
    void LODDPHAEIAD();
    // private System.Void NAPGGGFOEKO()
    // Offset: 0x2233C2C
    void NAPGGGFOEKO();
    // private System.Void ICEGDGKAIIB()
    // Offset: 0x2233DE0
    void ICEGDGKAIIB();
    // private System.Void DGBCCNEEOGH()
    // Offset: 0x2233F94
    void DGBCCNEEOGH();
    // private System.Void PhysicsInteractableUngrip()
    // Offset: 0x2234070
    void PhysicsInteractableUngrip();
    // private System.Void EDHDFLHMDFG()
    // Offset: 0x223413C
    void EDHDFLHMDFG();
  }; // MagicalActual.PaladinLibram
  #pragma pack(pop)
  static check_size<sizeof(PaladinLibram), 56 + sizeof(::UnityEngine::Animator*)> __MagicalActual_PaladinLibramSizeCheck;
  static_assert(sizeof(PaladinLibram) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::FOEGEJAMHBC
// Il2CppName: FOEGEJAMHBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::FOEGEJAMHBC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "FOEGEJAMHBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::BHBFEEJHKIH
// Il2CppName: BHBFEEJHKIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::BHBFEEJHKIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "BHBFEEJHKIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::DBLHNPALFEG
// Il2CppName: DBLHNPALFEG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::DBLHNPALFEG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "DBLHNPALFEG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::NLFOPEAGLDJ
// Il2CppName: NLFOPEAGLDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::NLFOPEAGLDJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "NLFOPEAGLDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::EMPNNPKBHFO
// Il2CppName: EMPNNPKBHFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::EMPNNPKBHFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "EMPNNPKBHFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::PhysicsInteractableGrip
// Il2CppName: PhysicsInteractableGrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::PhysicsInteractableGrip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "PhysicsInteractableGrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::PABPOCMFEJK
// Il2CppName: PABPOCMFEJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::PABPOCMFEJK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "PABPOCMFEJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::KIBDIFDNGKF
// Il2CppName: KIBDIFDNGKF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::KIBDIFDNGKF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "KIBDIFDNGKF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::FALIOLCPAII
// Il2CppName: FALIOLCPAII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::FALIOLCPAII)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "FALIOLCPAII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::GMGFCMJCALC
// Il2CppName: GMGFCMJCALC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::GMGFCMJCALC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "GMGFCMJCALC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::OBEBPGLHIHJ
// Il2CppName: OBEBPGLHIHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::OBEBPGLHIHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "OBEBPGLHIHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::ECBJEKPINME
// Il2CppName: ECBJEKPINME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::ECBJEKPINME)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "ECBJEKPINME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::GPLMNLOCHNM
// Il2CppName: GPLMNLOCHNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::GPLMNLOCHNM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "GPLMNLOCHNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::DDJINHIPKCE
// Il2CppName: DDJINHIPKCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::DDJINHIPKCE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "DDJINHIPKCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::FKAAOMJGDAB
// Il2CppName: FKAAOMJGDAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::FKAAOMJGDAB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "FKAAOMJGDAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::JCOEAIILOND
// Il2CppName: JCOEAIILOND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::JCOEAIILOND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "JCOEAIILOND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::ANKCGGIBCAI
// Il2CppName: ANKCGGIBCAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::ANKCGGIBCAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "ANKCGGIBCAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::LODDPHAEIAD
// Il2CppName: LODDPHAEIAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::LODDPHAEIAD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "LODDPHAEIAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::NAPGGGFOEKO
// Il2CppName: NAPGGGFOEKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::NAPGGGFOEKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "NAPGGGFOEKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::ICEGDGKAIIB
// Il2CppName: ICEGDGKAIIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::ICEGDGKAIIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "ICEGDGKAIIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::DGBCCNEEOGH
// Il2CppName: DGBCCNEEOGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::DGBCCNEEOGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "DGBCCNEEOGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::PhysicsInteractableUngrip
// Il2CppName: PhysicsInteractableUngrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::PhysicsInteractableUngrip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "PhysicsInteractableUngrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PaladinLibram::EDHDFLHMDFG
// Il2CppName: EDHDFLHMDFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PaladinLibram::*)()>(&MagicalActual::PaladinLibram::EDHDFLHMDFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PaladinLibram*), "EDHDFLHMDFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
