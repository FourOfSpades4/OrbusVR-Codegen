// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: IPlayerClass
#include "GlobalNamespace/IPlayerClass.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObFlt
#include "CodeStage/AntiCheat/ObscuredTypes/ObFlt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: PlayerClass
  class PlayerClass;
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
  // Forward declaring type: PlayerCharacter
  class PlayerCharacter;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: BoxCollider
  class BoxCollider;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: BinaryWriter
  class BinaryWriter;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ClickedEventArgs
  struct ClickedEventArgs;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Paladin
  class Paladin;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Paladin);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Paladin*, "MagicalActual", "Paladin");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x46F
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Paladin
  // [TokenAttribute] Offset: FFFFFFFF
  class Paladin : public ::UnityEngine::MonoBehaviour/*, public ::GlobalNamespace::IPlayerClass*/ {
    public:
    // Nested type: ::MagicalActual::Paladin::$$c
    class $$c;
    // Nested type: ::MagicalActual::Paladin::$$c__DisplayClass136_0
    class $$c__DisplayClass136_0;
    // Nested type: ::MagicalActual::Paladin::$$c__DisplayClass137_0
    class $$c__DisplayClass137_0;
    // Nested type: ::MagicalActual::Paladin::$$c__DisplayClass137_1
    class $$c__DisplayClass137_1;
    // Nested type: ::MagicalActual::Paladin::$$c__DisplayClass137_2
    class $$c__DisplayClass137_2;
    // Nested type: ::MagicalActual::Paladin::$$c__DisplayClass137_3
    class $$c__DisplayClass137_3;
    // Nested type: ::MagicalActual::Paladin::$$c__DisplayClass140_0
    class $$c__DisplayClass140_0;
    // Nested type: ::MagicalActual::Paladin::$$c__DisplayClass140_1
    class $$c__DisplayClass140_1;
    // Nested type: ::MagicalActual::Paladin::$$c__DisplayClass141_0
    class $$c__DisplayClass141_0;
    // Nested type: ::MagicalActual::Paladin::$$c__DisplayClass141_1
    class $$c__DisplayClass141_1;
    // Nested type: ::MagicalActual::Paladin::$$c__DisplayClass144_0
    class $$c__DisplayClass144_0;
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private System.Boolean HNFCLAFDJBD
    // Size: 0x1
    // Offset: 0x28
    bool HNFCLAFDJBD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HNFCLAFDJBD and: FNINBDEICCD
    char __padding2[0x7] = {};
    // private MagicalActual.PlayerClass FNINBDEICCD
    // Size: 0x8
    // Offset: 0x30
    ::MagicalActual::PlayerClass* FNINBDEICCD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerClass*) == 0x8);
    // private MagicalActual.PlayerAvatar EENJNFDNJBD
    // Size: 0x8
    // Offset: 0x38
    ::MagicalActual::PlayerAvatar* EENJNFDNJBD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // private MagicalActual.PlayerCharacter HCFELEODBLD
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::PlayerCharacter* HCFELEODBLD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerCharacter*) == 0x8);
    // private UnityEngine.GameObject CCEMBLKGKLN
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* CCEMBLKGKLN;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject GKJEHAKEABK
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GameObject* GKJEHAKEABK;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Int32 KHIKJLICKKF
    // Size: 0x4
    // Offset: 0x58
    int KHIKJLICKKF;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 FJPBNPLIKHA
    // Size: 0x4
    // Offset: 0x5C
    int FJPBNPLIKHA;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.GameObject hammer
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::GameObject* hammer;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Rigidbody IKCECNHJOME
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Rigidbody* IKCECNHJOME;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // public UnityEngine.GameObject[] hitVfx
    // Size: 0x8
    // Offset: 0x70
    ::ArrayW<::UnityEngine::GameObject*> hitVfx;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject hemanVfx
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::GameObject* hemanVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject HDMKCGKJCLA
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::GameObject* HDMKCGKJCLA;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject PPJCBODBHOH
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::GameObject* PPJCBODBHOH;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject superVfx
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::GameObject* superVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject chargeVfx
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::GameObject* chargeVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean GCCMBLOGLBA
    // Size: 0x1
    // Offset: 0xA0
    bool GCCMBLOGLBA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GHBBMIFHKGO
    // Size: 0x1
    // Offset: 0xA1
    bool GHBBMIFHKGO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean HIKIBDCNDAA
    // Size: 0x1
    // Offset: 0xA2
    bool HIKIBDCNDAA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean IMNDEEOEOKA
    // Size: 0x1
    // Offset: 0xA3
    bool IMNDEEOEOKA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IMNDEEOEOKA and: NPJAMHKBLLM
    char __padding21[0x4] = {};
    // private UnityEngine.Collider[] NPJAMHKBLLM
    // Size: 0x8
    // Offset: 0xA8
    ::ArrayW<::UnityEngine::Collider*> NPJAMHKBLLM;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // public UnityEngine.GameObject collisionBoxPrefab
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::GameObject* collisionBoxPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt DKBAJEHLDMP
    // Size: 0x19
    // Offset: 0xB8
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt DKBAJEHLDMP;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: DKBAJEHLDMP and: OJHGBHCKPCB
    char __padding24[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt OJHGBHCKPCB
    // Size: 0x19
    // Offset: 0xD8
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt OJHGBHCKPCB;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: OJHGBHCKPCB and: EKMNMNLFENN
    char __padding25[0x7] = {};
    // private System.Boolean EKMNMNLFENN
    // Size: 0x1
    // Offset: 0xF8
    bool EKMNMNLFENN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: EKMNMNLFENN and: KBFBPJGLNMA
    char __padding26[0x7] = {};
    // private UnityEngine.GameObject KBFBPJGLNMA
    // Size: 0x8
    // Offset: 0x100
    ::UnityEngine::GameObject* KBFBPJGLNMA;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single OKGLIFFGAGE
    // Size: 0x4
    // Offset: 0x108
    float OKGLIFFGAGE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 AIKDIMABMDG
    // Size: 0xC
    // Offset: 0x10C
    ::UnityEngine::Vector3 AIKDIMABMDG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 FAIGECBHGJK
    // Size: 0xC
    // Offset: 0x118
    ::UnityEngine::Vector3 FAIGECBHGJK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: FAIGECBHGJK and: BGFIJNGFMFO
    char __padding30[0x4] = {};
    // private UnityEngine.GameObject BGFIJNGFMFO
    // Size: 0x8
    // Offset: 0x128
    ::UnityEngine::GameObject* BGFIJNGFMFO;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt LEGNJPIEHKE
    // Size: 0x19
    // Offset: 0x130
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt LEGNJPIEHKE;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: LEGNJPIEHKE and: PMGMDMHOPMP
    char __padding32[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt PMGMDMHOPMP
    // Size: 0x19
    // Offset: 0x150
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt PMGMDMHOPMP;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: PMGMDMHOPMP and: JGOGJDHABHN
    char __padding33[0x7] = {};
    // private UnityEngine.Collider[] JGOGJDHABHN
    // Size: 0x8
    // Offset: 0x170
    ::ArrayW<::UnityEngine::Collider*> JGOGJDHABHN;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // private UnityEngine.BoxCollider NMJBBEBJJJI
    // Size: 0x8
    // Offset: 0x178
    ::UnityEngine::BoxCollider* NMJBBEBJJJI;
    // Field size check
    static_assert(sizeof(::UnityEngine::BoxCollider*) == 0x8);
    // private System.Boolean PIOCBNGGDPO
    // Size: 0x1
    // Offset: 0x180
    bool PIOCBNGGDPO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean IMCHGJIABOI
    // Size: 0x1
    // Offset: 0x181
    bool IMCHGJIABOI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean MKEJECCLPIH
    // Size: 0x1
    // Offset: 0x182
    bool MKEJECCLPIH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean MKCFLGCJIDK
    // Size: 0x1
    // Offset: 0x183
    bool MKCFLGCJIDK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: MKCFLGCJIDK and: FECGNHPCECI
    char __padding39[0x4] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt FECGNHPCECI
    // Size: 0x19
    // Offset: 0x188
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt FECGNHPCECI;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: FECGNHPCECI and: HGBJEBCNNNC
    char __padding40[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt HGBJEBCNNNC
    // Size: 0x19
    // Offset: 0x1A8
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt HGBJEBCNNNC;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: HGBJEBCNNNC and: DFDJHPMMHFA
    char __padding41[0x7] = {};
    // private System.Boolean DFDJHPMMHFA
    // Size: 0x1
    // Offset: 0x1C8
    bool DFDJHPMMHFA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: DFDJHPMMHFA and: IKJANOHKIHC
    char __padding42[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt IKJANOHKIHC
    // Size: 0x19
    // Offset: 0x1D0
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt IKJANOHKIHC;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: IKJANOHKIHC and: EBFEFPEEDDI
    char __padding43[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt EBFEFPEEDDI
    // Size: 0x19
    // Offset: 0x1F0
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt EBFEFPEEDDI;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: EBFEFPEEDDI and: KFABFKFCNFO
    char __padding44[0x7] = {};
    // private UnityEngine.Vector3 KFABFKFCNFO
    // Size: 0xC
    // Offset: 0x210
    ::UnityEngine::Vector3 KFABFKFCNFO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 IDAHJMKDAII
    // Size: 0xC
    // Offset: 0x21C
    ::UnityEngine::Vector3 IDAHJMKDAII;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.GameObject globe1On
    // Size: 0x8
    // Offset: 0x228
    ::UnityEngine::GameObject* globe1On;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject globe2On
    // Size: 0x8
    // Offset: 0x230
    ::UnityEngine::GameObject* globe2On;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject globe3On
    // Size: 0x8
    // Offset: 0x238
    ::UnityEngine::GameObject* globe3On;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject globe4On
    // Size: 0x8
    // Offset: 0x240
    ::UnityEngine::GameObject* globe4On;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject globe5On
    // Size: 0x8
    // Offset: 0x248
    ::UnityEngine::GameObject* globe5On;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject globe1Off
    // Size: 0x8
    // Offset: 0x250
    ::UnityEngine::GameObject* globe1Off;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject globe2Off
    // Size: 0x8
    // Offset: 0x258
    ::UnityEngine::GameObject* globe2Off;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject globe3Off
    // Size: 0x8
    // Offset: 0x260
    ::UnityEngine::GameObject* globe3Off;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject globe4Off
    // Size: 0x8
    // Offset: 0x268
    ::UnityEngine::GameObject* globe4Off;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject globe5Off
    // Size: 0x8
    // Offset: 0x270
    ::UnityEngine::GameObject* globe5Off;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.UI.Image chargeAbilityIcon
    // Size: 0x8
    // Offset: 0x278
    ::UnityEngine::UI::Image* chargeAbilityIcon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // public UnityEngine.UI.Image pleaAbilityIcon
    // Size: 0x8
    // Offset: 0x280
    ::UnityEngine::UI::Image* pleaAbilityIcon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // public UnityEngine.UI.Image lightningBlastIcon
    // Size: 0x8
    // Offset: 0x288
    ::UnityEngine::UI::Image* lightningBlastIcon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // public UnityEngine.UI.Image chargeProtectionIcon
    // Size: 0x8
    // Offset: 0x290
    ::UnityEngine::UI::Image* chargeProtectionIcon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // public UnityEngine.GameObject useLibramVfx
    // Size: 0x8
    // Offset: 0x298
    ::UnityEngine::GameObject* useLibramVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject groundSlamVfx
    // Size: 0x8
    // Offset: 0x2A0
    ::UnityEngine::GameObject* groundSlamVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single CBGEPNHBAHC
    // Size: 0x4
    // Offset: 0x2A8
    float CBGEPNHBAHC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single EIIJMHFIODO
    // Size: 0x4
    // Offset: 0x2AC
    float EIIJMHFIODO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MILBKFKAMPD
    // Size: 0x4
    // Offset: 0x2B0
    float MILBKFKAMPD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single OIFNPMHPKDN
    // Size: 0x4
    // Offset: 0x2B4
    float OIFNPMHPKDN;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single FDMJGDPDIMA
    // Size: 0x4
    // Offset: 0x2B8
    float FDMJGDPDIMA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single FCCLGGOAGAB
    // Size: 0x4
    // Offset: 0x2BC
    float FCCLGGOAGAB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.UI.Image libramOneIcon
    // Size: 0x8
    // Offset: 0x2C0
    ::UnityEngine::UI::Image* libramOneIcon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // public UnityEngine.UI.Image libramTwoIcon
    // Size: 0x8
    // Offset: 0x2C8
    ::UnityEngine::UI::Image* libramTwoIcon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // public UnityEngine.UI.Image libramThreeIcon
    // Size: 0x8
    // Offset: 0x2D0
    ::UnityEngine::UI::Image* libramThreeIcon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // public UnityEngine.GameObject libramOne
    // Size: 0x8
    // Offset: 0x2D8
    ::UnityEngine::GameObject* libramOne;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject libramTwo
    // Size: 0x8
    // Offset: 0x2E0
    ::UnityEngine::GameObject* libramTwo;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject libramThree
    // Size: 0x8
    // Offset: 0x2E8
    ::UnityEngine::GameObject* libramThree;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject libramHolder
    // Size: 0x8
    // Offset: 0x2F0
    ::UnityEngine::GameObject* libramHolder;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject layOnHands
    // Size: 0x8
    // Offset: 0x2F8
    ::UnityEngine::GameObject* layOnHands;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject pleaOfDivinity
    // Size: 0x8
    // Offset: 0x300
    ::UnityEngine::GameObject* pleaOfDivinity;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject chargedShield
    // Size: 0x8
    // Offset: 0x308
    ::UnityEngine::GameObject* chargedShield;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.Single timeSinceGrippingSecondary
    // Size: 0x4
    // Offset: 0x310
    float timeSinceGrippingSecondary;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single castLayOnHandsAfter
    // Size: 0x4
    // Offset: 0x314
    float castLayOnHandsAfter;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single castPleaofDivinityAfter
    // Size: 0x4
    // Offset: 0x318
    float castPleaofDivinityAfter;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single timeSinceLightningBlast
    // Size: 0x4
    // Offset: 0x31C
    float timeSinceLightningBlast;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single lightningBlastEvery
    // Size: 0x4
    // Offset: 0x320
    float lightningBlastEvery;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean CBPBOIIMDJG
    // Size: 0x1
    // Offset: 0x324
    bool CBPBOIIMDJG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: CBPBOIIMDJG and: CKOGNIKBCNO
    char __padding84[0x3] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt CKOGNIKBCNO
    // Size: 0x19
    // Offset: 0x328
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt CKOGNIKBCNO;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: CKOGNIKBCNO and: GFFJIJHELOL
    char __padding85[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt GFFJIJHELOL
    // Size: 0x19
    // Offset: 0x348
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt GFFJIJHELOL;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: GFFJIJHELOL and: OIODGDKDKPE
    char __padding86[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt OIODGDKDKPE
    // Size: 0x19
    // Offset: 0x368
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt OIODGDKDKPE;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: OIODGDKDKPE and: DONKDIPIMPJ
    char __padding87[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt DONKDIPIMPJ
    // Size: 0x19
    // Offset: 0x388
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt DONKDIPIMPJ;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: DONKDIPIMPJ and: EJBONLOLNMP
    char __padding88[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt EJBONLOLNMP
    // Size: 0x19
    // Offset: 0x3A8
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt EJBONLOLNMP;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: EJBONLOLNMP and: NDPPMHBNGJG
    char __padding89[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt NDPPMHBNGJG
    // Size: 0x19
    // Offset: 0x3C8
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt NDPPMHBNGJG;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: NDPPMHBNGJG and: DGFCFCMHMMN
    char __padding90[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt DGFCFCMHMMN
    // Size: 0x19
    // Offset: 0x3E8
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt DGFCFCMHMMN;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: DGFCFCMHMMN and: GAEJBDLAPEK
    char __padding91[0x7] = {};
    // private UnityEngine.Vector3 GAEJBDLAPEK
    // Size: 0xC
    // Offset: 0x408
    ::UnityEngine::Vector3 GAEJBDLAPEK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: GAEJBDLAPEK and: hammerHud
    char __padding92[0x4] = {};
    // public UnityEngine.GameObject hammerHud
    // Size: 0x8
    // Offset: 0x418
    ::UnityEngine::GameObject* hammerHud;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean LFJKAKMDCGH
    // Size: 0x1
    // Offset: 0x420
    bool LFJKAKMDCGH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: LFJKAKMDCGH and: LLPCCMKIBCO
    char __padding94[0x3] = {};
    // private UnityEngine.Vector3 LLPCCMKIBCO
    // Size: 0xC
    // Offset: 0x424
    ::UnityEngine::Vector3 LLPCCMKIBCO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single JDCCDJBJENB
    // Size: 0x4
    // Offset: 0x430
    float JDCCDJBJENB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single KHKAPMNOHDB
    // Size: 0x4
    // Offset: 0x434
    float KHKAPMNOHDB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 LOPKHJPCOLL
    // Size: 0xC
    // Offset: 0x438
    ::UnityEngine::Vector3 LOPKHJPCOLL;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion DHNCNHMBJMO
    // Size: 0x10
    // Offset: 0x444
    ::UnityEngine::Quaternion DHNCNHMBJMO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private UnityEngine.Quaternion BIKKNBBEJOO
    // Size: 0x10
    // Offset: 0x454
    ::UnityEngine::Quaternion BIKKNBBEJOO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // [CompilerGeneratedAttribute] Offset: 0xAE3620
    // private System.Single <OOMHLMHDNOK>k__BackingField
    // Size: 0x4
    // Offset: 0x464
    float OOMHLMHDNOK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean layOnHandsReady
    // Size: 0x1
    // Offset: 0x468
    bool layOnHandsReady;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean hasTalent32
    // Size: 0x1
    // Offset: 0x469
    bool hasTalent32;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean hasTalent41
    // Size: 0x1
    // Offset: 0x46A
    bool hasTalent41;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean hasTalent42
    // Size: 0x1
    // Offset: 0x46B
    bool hasTalent42;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean hasTalent51
    // Size: 0x1
    // Offset: 0x46C
    bool hasTalent51;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean hasTalent52
    // Size: 0x1
    // Offset: 0x46D
    bool hasTalent52;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean pleaOfDivinityReady
    // Size: 0x1
    // Offset: 0x46E
    bool pleaOfDivinityReady;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IPlayerClass
    operator ::GlobalNamespace::IPlayerClass() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IPlayerClass*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private System.Boolean HNFCLAFDJBD
    [[deprecated("Use field access instead!")]] bool& dyn_HNFCLAFDJBD();
    // Get instance field reference: private MagicalActual.PlayerClass FNINBDEICCD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerClass*& dyn_FNINBDEICCD();
    // Get instance field reference: private MagicalActual.PlayerAvatar EENJNFDNJBD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_EENJNFDNJBD();
    // Get instance field reference: private MagicalActual.PlayerCharacter HCFELEODBLD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerCharacter*& dyn_HCFELEODBLD();
    // Get instance field reference: private UnityEngine.GameObject CCEMBLKGKLN
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_CCEMBLKGKLN();
    // Get instance field reference: private UnityEngine.GameObject GKJEHAKEABK
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_GKJEHAKEABK();
    // Get instance field reference: private System.Int32 KHIKJLICKKF
    [[deprecated("Use field access instead!")]] int& dyn_KHIKJLICKKF();
    // Get instance field reference: private System.Int32 FJPBNPLIKHA
    [[deprecated("Use field access instead!")]] int& dyn_FJPBNPLIKHA();
    // Get instance field reference: public UnityEngine.GameObject hammer
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_hammer();
    // Get instance field reference: private UnityEngine.Rigidbody IKCECNHJOME
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_IKCECNHJOME();
    // Get instance field reference: public UnityEngine.GameObject[] hitVfx
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_hitVfx();
    // Get instance field reference: public UnityEngine.GameObject hemanVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_hemanVfx();
    // Get instance field reference: private UnityEngine.GameObject HDMKCGKJCLA
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_HDMKCGKJCLA();
    // Get instance field reference: private UnityEngine.GameObject PPJCBODBHOH
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_PPJCBODBHOH();
    // Get instance field reference: public UnityEngine.GameObject superVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_superVfx();
    // Get instance field reference: public UnityEngine.GameObject chargeVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_chargeVfx();
    // Get instance field reference: private System.Boolean GCCMBLOGLBA
    [[deprecated("Use field access instead!")]] bool& dyn_GCCMBLOGLBA();
    // Get instance field reference: private System.Boolean GHBBMIFHKGO
    [[deprecated("Use field access instead!")]] bool& dyn_GHBBMIFHKGO();
    // Get instance field reference: private System.Boolean HIKIBDCNDAA
    [[deprecated("Use field access instead!")]] bool& dyn_HIKIBDCNDAA();
    // Get instance field reference: private System.Boolean IMNDEEOEOKA
    [[deprecated("Use field access instead!")]] bool& dyn_IMNDEEOEOKA();
    // Get instance field reference: private UnityEngine.Collider[] NPJAMHKBLLM
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_NPJAMHKBLLM();
    // Get instance field reference: public UnityEngine.GameObject collisionBoxPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_collisionBoxPrefab();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt DKBAJEHLDMP
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_DKBAJEHLDMP();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt OJHGBHCKPCB
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_OJHGBHCKPCB();
    // Get instance field reference: private System.Boolean EKMNMNLFENN
    [[deprecated("Use field access instead!")]] bool& dyn_EKMNMNLFENN();
    // Get instance field reference: private UnityEngine.GameObject KBFBPJGLNMA
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_KBFBPJGLNMA();
    // Get instance field reference: private System.Single OKGLIFFGAGE
    [[deprecated("Use field access instead!")]] float& dyn_OKGLIFFGAGE();
    // Get instance field reference: private UnityEngine.Vector3 AIKDIMABMDG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_AIKDIMABMDG();
    // Get instance field reference: private UnityEngine.Vector3 FAIGECBHGJK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_FAIGECBHGJK();
    // Get instance field reference: private UnityEngine.GameObject BGFIJNGFMFO
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_BGFIJNGFMFO();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt LEGNJPIEHKE
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_LEGNJPIEHKE();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt PMGMDMHOPMP
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_PMGMDMHOPMP();
    // Get instance field reference: private UnityEngine.Collider[] JGOGJDHABHN
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_JGOGJDHABHN();
    // Get instance field reference: private UnityEngine.BoxCollider NMJBBEBJJJI
    [[deprecated("Use field access instead!")]] ::UnityEngine::BoxCollider*& dyn_NMJBBEBJJJI();
    // Get instance field reference: private System.Boolean PIOCBNGGDPO
    [[deprecated("Use field access instead!")]] bool& dyn_PIOCBNGGDPO();
    // Get instance field reference: private System.Boolean IMCHGJIABOI
    [[deprecated("Use field access instead!")]] bool& dyn_IMCHGJIABOI();
    // Get instance field reference: private System.Boolean MKEJECCLPIH
    [[deprecated("Use field access instead!")]] bool& dyn_MKEJECCLPIH();
    // Get instance field reference: private System.Boolean MKCFLGCJIDK
    [[deprecated("Use field access instead!")]] bool& dyn_MKCFLGCJIDK();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt FECGNHPCECI
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_FECGNHPCECI();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt HGBJEBCNNNC
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_HGBJEBCNNNC();
    // Get instance field reference: private System.Boolean DFDJHPMMHFA
    [[deprecated("Use field access instead!")]] bool& dyn_DFDJHPMMHFA();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt IKJANOHKIHC
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_IKJANOHKIHC();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt EBFEFPEEDDI
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_EBFEFPEEDDI();
    // Get instance field reference: private UnityEngine.Vector3 KFABFKFCNFO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_KFABFKFCNFO();
    // Get instance field reference: private UnityEngine.Vector3 IDAHJMKDAII
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_IDAHJMKDAII();
    // Get instance field reference: public UnityEngine.GameObject globe1On
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_globe1On();
    // Get instance field reference: public UnityEngine.GameObject globe2On
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_globe2On();
    // Get instance field reference: public UnityEngine.GameObject globe3On
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_globe3On();
    // Get instance field reference: public UnityEngine.GameObject globe4On
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_globe4On();
    // Get instance field reference: public UnityEngine.GameObject globe5On
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_globe5On();
    // Get instance field reference: public UnityEngine.GameObject globe1Off
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_globe1Off();
    // Get instance field reference: public UnityEngine.GameObject globe2Off
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_globe2Off();
    // Get instance field reference: public UnityEngine.GameObject globe3Off
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_globe3Off();
    // Get instance field reference: public UnityEngine.GameObject globe4Off
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_globe4Off();
    // Get instance field reference: public UnityEngine.GameObject globe5Off
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_globe5Off();
    // Get instance field reference: public UnityEngine.UI.Image chargeAbilityIcon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_chargeAbilityIcon();
    // Get instance field reference: public UnityEngine.UI.Image pleaAbilityIcon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_pleaAbilityIcon();
    // Get instance field reference: public UnityEngine.UI.Image lightningBlastIcon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_lightningBlastIcon();
    // Get instance field reference: public UnityEngine.UI.Image chargeProtectionIcon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_chargeProtectionIcon();
    // Get instance field reference: public UnityEngine.GameObject useLibramVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_useLibramVfx();
    // Get instance field reference: public UnityEngine.GameObject groundSlamVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_groundSlamVfx();
    // Get instance field reference: private System.Single CBGEPNHBAHC
    [[deprecated("Use field access instead!")]] float& dyn_CBGEPNHBAHC();
    // Get instance field reference: private System.Single EIIJMHFIODO
    [[deprecated("Use field access instead!")]] float& dyn_EIIJMHFIODO();
    // Get instance field reference: private System.Single MILBKFKAMPD
    [[deprecated("Use field access instead!")]] float& dyn_MILBKFKAMPD();
    // Get instance field reference: private System.Single OIFNPMHPKDN
    [[deprecated("Use field access instead!")]] float& dyn_OIFNPMHPKDN();
    // Get instance field reference: private System.Single FDMJGDPDIMA
    [[deprecated("Use field access instead!")]] float& dyn_FDMJGDPDIMA();
    // Get instance field reference: private System.Single FCCLGGOAGAB
    [[deprecated("Use field access instead!")]] float& dyn_FCCLGGOAGAB();
    // Get instance field reference: public UnityEngine.UI.Image libramOneIcon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_libramOneIcon();
    // Get instance field reference: public UnityEngine.UI.Image libramTwoIcon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_libramTwoIcon();
    // Get instance field reference: public UnityEngine.UI.Image libramThreeIcon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_libramThreeIcon();
    // Get instance field reference: public UnityEngine.GameObject libramOne
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_libramOne();
    // Get instance field reference: public UnityEngine.GameObject libramTwo
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_libramTwo();
    // Get instance field reference: public UnityEngine.GameObject libramThree
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_libramThree();
    // Get instance field reference: public UnityEngine.GameObject libramHolder
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_libramHolder();
    // Get instance field reference: public UnityEngine.GameObject layOnHands
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_layOnHands();
    // Get instance field reference: public UnityEngine.GameObject pleaOfDivinity
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_pleaOfDivinity();
    // Get instance field reference: public UnityEngine.GameObject chargedShield
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_chargedShield();
    // Get instance field reference: public System.Single timeSinceGrippingSecondary
    [[deprecated("Use field access instead!")]] float& dyn_timeSinceGrippingSecondary();
    // Get instance field reference: public System.Single castLayOnHandsAfter
    [[deprecated("Use field access instead!")]] float& dyn_castLayOnHandsAfter();
    // Get instance field reference: public System.Single castPleaofDivinityAfter
    [[deprecated("Use field access instead!")]] float& dyn_castPleaofDivinityAfter();
    // Get instance field reference: public System.Single timeSinceLightningBlast
    [[deprecated("Use field access instead!")]] float& dyn_timeSinceLightningBlast();
    // Get instance field reference: public System.Single lightningBlastEvery
    [[deprecated("Use field access instead!")]] float& dyn_lightningBlastEvery();
    // Get instance field reference: private System.Boolean CBPBOIIMDJG
    [[deprecated("Use field access instead!")]] bool& dyn_CBPBOIIMDJG();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt CKOGNIKBCNO
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_CKOGNIKBCNO();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt GFFJIJHELOL
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_GFFJIJHELOL();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt OIODGDKDKPE
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_OIODGDKDKPE();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt DONKDIPIMPJ
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_DONKDIPIMPJ();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt EJBONLOLNMP
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_EJBONLOLNMP();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt NDPPMHBNGJG
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_NDPPMHBNGJG();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt DGFCFCMHMMN
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_DGFCFCMHMMN();
    // Get instance field reference: private UnityEngine.Vector3 GAEJBDLAPEK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_GAEJBDLAPEK();
    // Get instance field reference: public UnityEngine.GameObject hammerHud
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_hammerHud();
    // Get instance field reference: private System.Boolean LFJKAKMDCGH
    [[deprecated("Use field access instead!")]] bool& dyn_LFJKAKMDCGH();
    // Get instance field reference: private UnityEngine.Vector3 LLPCCMKIBCO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_LLPCCMKIBCO();
    // Get instance field reference: private System.Single JDCCDJBJENB
    [[deprecated("Use field access instead!")]] float& dyn_JDCCDJBJENB();
    // Get instance field reference: private System.Single KHKAPMNOHDB
    [[deprecated("Use field access instead!")]] float& dyn_KHKAPMNOHDB();
    // Get instance field reference: private UnityEngine.Vector3 LOPKHJPCOLL
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_LOPKHJPCOLL();
    // Get instance field reference: private UnityEngine.Quaternion DHNCNHMBJMO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_DHNCNHMBJMO();
    // Get instance field reference: private UnityEngine.Quaternion BIKKNBBEJOO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_BIKKNBBEJOO();
    // Get instance field reference: private System.Single <OOMHLMHDNOK>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$OOMHLMHDNOK$k__BackingField();
    // Get instance field reference: public System.Boolean layOnHandsReady
    [[deprecated("Use field access instead!")]] bool& dyn_layOnHandsReady();
    // Get instance field reference: public System.Boolean hasTalent32
    [[deprecated("Use field access instead!")]] bool& dyn_hasTalent32();
    // Get instance field reference: public System.Boolean hasTalent41
    [[deprecated("Use field access instead!")]] bool& dyn_hasTalent41();
    // Get instance field reference: public System.Boolean hasTalent42
    [[deprecated("Use field access instead!")]] bool& dyn_hasTalent42();
    // Get instance field reference: public System.Boolean hasTalent51
    [[deprecated("Use field access instead!")]] bool& dyn_hasTalent51();
    // Get instance field reference: public System.Boolean hasTalent52
    [[deprecated("Use field access instead!")]] bool& dyn_hasTalent52();
    // Get instance field reference: public System.Boolean pleaOfDivinityReady
    [[deprecated("Use field access instead!")]] bool& dyn_pleaOfDivinityReady();
    // private System.Void DisableSecondaryWeapon()
    // Offset: 0xFD3720
    void DisableSecondaryWeapon();
    // private System.Void PMIBPDFLKJG(System.Object OMLPNCLFFMJ)
    // Offset: 0xFD3730
    void PMIBPDFLKJG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Boolean CIBDJNJGODA()
    // Offset: 0xFD3A7C
    bool CIBDJNJGODA();
    // public UnityEngine.GameObject GetWeaponSkin()
    // Offset: 0xFD3C88
    ::UnityEngine::GameObject* GetWeaponSkin();
    // public System.Void PFDNDGOCKPK()
    // Offset: 0xFD3E00
    void PFDNDGOCKPK();
    // private System.Void CCBFJODGEMO(System.Object OMLPNCLFFMJ)
    // Offset: 0xFD43C4
    void CCBFJODGEMO(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void HMOLDKPHLJI()
    // Offset: 0xFD4458
    void HMOLDKPHLJI();
    // private System.Void EPKEGFKGAAK(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0xFD445C
    void EPKEGFKGAAK(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void MNDPONGKIBM(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xFD457C
    void MNDPONGKIBM(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void ENIGECPOHND(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xFD47B4
    void ENIGECPOHND(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void MMPDBOGHBEL(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xFD4F58
    void MMPDBOGHBEL(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void UpdateClassBar()
    // Offset: 0xFD5138
    void UpdateClassBar();
    // private System.Void JDDJPMLNFMH(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xFD5568
    void JDDJPMLNFMH(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public System.Void CastPleaOfDivinity()
    // Offset: 0xFD5D18
    void CastPleaOfDivinity();
    // public System.Void SuperStatusChange(System.Boolean AALBHOKGIOD)
    // Offset: 0xFD61C4
    void SuperStatusChange(bool AALBHOKGIOD);
    // private System.Void IEFJIANEJLL(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xFD6448
    void IEFJIANEJLL(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void KHHKDNFNGNN(System.Object OMLPNCLFFMJ)
    // Offset: 0xFD6DC0
    void KHHKDNFNGNN(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void EFFOJIOENND()
    // Offset: 0xFD709C
    void EFFOJIOENND();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0xFD75C4
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void BEAFHMDOEOL(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xFD7BFC
    void BEAFHMDOEOL(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void JDIFDFOGCGN()
    // Offset: 0xFD7D64
    void JDIFDFOGCGN();
    // private System.Void DEMNIOFLHAI(System.Single MMMEIONJJFJ)
    // Offset: 0xFD8044
    void DEMNIOFLHAI(float MMMEIONJJFJ);
    // public System.Void TriggerLibram(System.Int32 JBEIKCJDCIF)
    // Offset: 0xFD804C
    void TriggerLibram(int JBEIKCJDCIF);
    // public System.Void CastSuper()
    // Offset: 0xFD811C
    void CastSuper();
    // private System.Void FixedUpdate()
    // Offset: 0xFD86D4
    void FixedUpdate();
    // private System.Void JKGOPGCACAG(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xFDAF04
    void JKGOPGCACAG(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void HFIFFGEDJGH(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xFDB0EC
    void HFIFFGEDJGH(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void OPCCNGMPLPF()
    // Offset: 0xFD5990
    void OPCCNGMPLPF();
    // private System.Void BKAEOLMGHOM()
    // Offset: 0xFDBA40
    void BKAEOLMGHOM();
    // private System.Void HMPLFFGNBIO(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xFDBAA8
    void HMPLFFGNBIO(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public UnityEngine.GameObject DJLAJIDMMOC()
    // Offset: 0xFD744C
    ::UnityEngine::GameObject* DJLAJIDMMOC();
    // public System.Void GJALJGHAODK(System.Int32 JBEIKCJDCIF)
    // Offset: 0xFDBCDC
    void GJALJGHAODK(int JBEIKCJDCIF);
    // private System.Void FAHGPBCJIBI(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0xFDBDAC
    void FAHGPBCJIBI(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void DisablePrimaryWeapon()
    // Offset: 0xFDBECC
    void DisablePrimaryWeapon();
    // public System.Void MDALPNHFBBJ()
    // Offset: 0xFDBF34
    void MDALPNHFBBJ();
    // public System.Void ToggleAdjustWeapon()
    // Offset: 0xFDC10C
    void ToggleAdjustWeapon();
    // private System.Void BJBBOFANGHC(System.Object OMLPNCLFFMJ)
    // Offset: 0xFDC4BC
    void BJBBOFANGHC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Start()
    // Offset: 0xFDC554
    void Start();
    // private System.Void GBCHLGNALEH(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xFDCBAC
    void GBCHLGNALEH(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void DCIHIEPEKDG(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xFDCD68
    void DCIHIEPEKDG(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void IBLPNGBFOKH(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xFDD6DC
    void IBLPNGBFOKH(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void EAIMJAMLNJD(System.Boolean AALBHOKGIOD)
    // Offset: 0xFDD878
    void EAIMJAMLNJD(bool AALBHOKGIOD);
    // public System.Void AvatarEquipmentChanged()
    // Offset: 0xFDDB08
    void AvatarEquipmentChanged();
    // private System.Void CGPJDKNDDGH(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xFDDD84
    void CGPJDKNDDGH(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void PIBJEJOFODE(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xFDE1AC
    void PIBJEJOFODE(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void AIKNLDDNPDE(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0xFDE334
    void AIKNLDDNPDE(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void HLADAFPELPM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xFDE454
    void HLADAFPELPM(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void KHOMLKJBDGE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0xFDE62C
    void KHOMLKJBDGE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PNIDNAGIMLM(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0xFDEC74
    void PNIDNAGIMLM(::System::IO::BinaryWriter* FFJEENIEPJH);
    // public System.Void orbusNetCleanup(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0xFDED94
    void orbusNetCleanup(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Single get_chargePct()
    // Offset: 0xFD5560
    float get_chargePct();
    // private System.Void HDJIACEBICB(System.Object OMLPNCLFFMJ)
    // Offset: 0xFDEDCC
    void HDJIACEBICB(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void OnDestroy()
    // Offset: 0xFDEE50
    void OnDestroy();
    // private System.Void LPCECDKFDEJ(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0xFDF024
    void LPCECDKFDEJ(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void JBCEEHMNEFO(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xFDF144
    void JBCEEHMNEFO(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void EnablePrimaryWeapon()
    // Offset: 0xFDF388
    void EnablePrimaryWeapon();
    // public System.Void ClassDisabled()
    // Offset: 0xFDF408
    void ClassDisabled();
    // private System.Void APMJMBFOMOJ(System.Object OMLPNCLFFMJ)
    // Offset: 0xFDF494
    void APMJMBFOMOJ(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void JDPMDPAKLNB()
    // Offset: 0xFDF510
    void JDPMDPAKLNB();
    // public UnityEngine.GameObject GetWeaponObject()
    // Offset: 0xFD75BC
    ::UnityEngine::GameObject* GetWeaponObject();
    // public System.Void WeaponAdjusted()
    // Offset: 0xFDF78C
    void WeaponAdjusted();
    // private System.Void MMLFFOCEIKF(System.Single MMMEIONJJFJ)
    // Offset: 0xFD6F0C
    void MMLFFOCEIKF(float MMMEIONJJFJ);
    // private System.Void HKGLBBOMFCI(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xFDF790
    void HKGLBBOMFCI(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void EJJINILDHHE()
    // Offset: 0xFD4BDC
    void EJJINILDHHE();
    // public System.Void .ctor()
    // Offset: 0xFDF970
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Paladin* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Paladin::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Paladin*, creationType>()));
    }
    // public UnityEngine.GameObject ANIANLNAGME()
    // Offset: 0xFDFD00
    ::UnityEngine::GameObject* ANIANLNAGME();
    // private System.Int32 HHPBHAHNIMD(UnityEngine.Vector3 FGCMFDEJJAD)
    // Offset: 0xFDAB28
    int HHPBHAHNIMD(::UnityEngine::Vector3 FGCMFDEJJAD);
    // private System.Void CPEMEDGDGGN(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xFDFD08
    void CPEMEDGDGGN(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void EDCJCJMPHKB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xFDFEF4
    void EDCJCJMPHKB(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void SwitchWeaponHand(System.Byte DBJMBLGLHIH)
    // Offset: 0xFDC910
    void SwitchWeaponHand(uint8_t DBJMBLGLHIH);
    // public System.Void ClassEnabled()
    // Offset: 0xFE012C
    void ClassEnabled();
    // private System.Void MKLBHNFDNAP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xFE0280
    void MKLBHNFDNAP(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Int32 BLKAEDGCKJK(UnityEngine.Vector3 FGCMFDEJJAD)
    // Offset: 0xFE0468
    int BLKAEDGCKJK(::UnityEngine::Vector3 FGCMFDEJJAD);
    // public System.Void IMLIEBKEHKB()
    // Offset: 0xFE0848
    void IMLIEBKEHKB();
    // private System.Void Awake()
    // Offset: 0xFE0BB4
    void Awake();
    // public System.Void LNAEFCNGMLK()
    // Offset: 0xFE0D04
    void LNAEFCNGMLK();
    // private System.Void DAONAMDOIDK()
    // Offset: 0xFE0D90
    void DAONAMDOIDK();
    // private System.Void BLIPMFDPIOK()
    // Offset: 0xFD6F14
    void BLIPMFDPIOK();
    // private System.Void GKIOLADOCOK()
    // Offset: 0xFE0DA0
    void GKIOLADOCOK();
    // private System.Void NOILMDCNNNB(System.Object OMLPNCLFFMJ)
    // Offset: 0xFE116C
    void NOILMDCNNNB(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void EnableSecondaryWeapon()
    // Offset: 0xFE1204
    void EnableSecondaryWeapon();
    // private System.Void FLIAHIABNBA()
    // Offset: 0xFE12D0
    void FLIAHIABNBA();
    // private System.Void IEAKMOHIBDD()
    // Offset: 0xFD3AB4
    void IEAKMOHIBDD();
    // private System.Void NOAJAKMKCMI(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0xFE1390
    void NOAJAKMKCMI(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void DONNHLMAPHH(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xFE14B0
    void DONNHLMAPHH(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
  }; // MagicalActual.Paladin
  #pragma pack(pop)
  static check_size<sizeof(Paladin), 1134 + sizeof(bool)> __MagicalActual_PaladinSizeCheck;
  static_assert(sizeof(Paladin) == 0x46F);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Paladin::DisableSecondaryWeapon
// Il2CppName: DisableSecondaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::DisableSecondaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "DisableSecondaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::PMIBPDFLKJG
// Il2CppName: PMIBPDFLKJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*)>(&MagicalActual::Paladin::PMIBPDFLKJG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "PMIBPDFLKJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::CIBDJNJGODA
// Il2CppName: CIBDJNJGODA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::CIBDJNJGODA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "CIBDJNJGODA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::GetWeaponSkin
// Il2CppName: GetWeaponSkin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::GetWeaponSkin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "GetWeaponSkin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::PFDNDGOCKPK
// Il2CppName: PFDNDGOCKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::PFDNDGOCKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "PFDNDGOCKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::CCBFJODGEMO
// Il2CppName: CCBFJODGEMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*)>(&MagicalActual::Paladin::CCBFJODGEMO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "CCBFJODGEMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::HMOLDKPHLJI
// Il2CppName: HMOLDKPHLJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::HMOLDKPHLJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "HMOLDKPHLJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::EPKEGFKGAAK
// Il2CppName: EPKEGFKGAAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Paladin::EPKEGFKGAAK)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "EPKEGFKGAAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::MNDPONGKIBM
// Il2CppName: MNDPONGKIBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Paladin::MNDPONGKIBM)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "MNDPONGKIBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::ENIGECPOHND
// Il2CppName: ENIGECPOHND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Paladin::ENIGECPOHND)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "ENIGECPOHND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::MMPDBOGHBEL
// Il2CppName: MMPDBOGHBEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::Collections::ArrayList*)>(&MagicalActual::Paladin::MMPDBOGHBEL)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "MMPDBOGHBEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::UpdateClassBar
// Il2CppName: UpdateClassBar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::UpdateClassBar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "UpdateClassBar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::JDDJPMLNFMH
// Il2CppName: JDDJPMLNFMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Paladin::JDDJPMLNFMH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "JDDJPMLNFMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::CastPleaOfDivinity
// Il2CppName: CastPleaOfDivinity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::CastPleaOfDivinity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "CastPleaOfDivinity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::SuperStatusChange
// Il2CppName: SuperStatusChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(bool)>(&MagicalActual::Paladin::SuperStatusChange)> {
  static const MethodInfo* get() {
    static auto* AALBHOKGIOD = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "SuperStatusChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AALBHOKGIOD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::IEFJIANEJLL
// Il2CppName: IEFJIANEJLL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Paladin::IEFJIANEJLL)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "IEFJIANEJLL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::KHHKDNFNGNN
// Il2CppName: KHHKDNFNGNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*)>(&MagicalActual::Paladin::KHHKDNFNGNN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "KHHKDNFNGNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::EFFOJIOENND
// Il2CppName: EFFOJIOENND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::EFFOJIOENND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "EFFOJIOENND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Paladin::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::BEAFHMDOEOL
// Il2CppName: BEAFHMDOEOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::Collections::ArrayList*)>(&MagicalActual::Paladin::BEAFHMDOEOL)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "BEAFHMDOEOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::JDIFDFOGCGN
// Il2CppName: JDIFDFOGCGN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::JDIFDFOGCGN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "JDIFDFOGCGN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::DEMNIOFLHAI
// Il2CppName: DEMNIOFLHAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(float)>(&MagicalActual::Paladin::DEMNIOFLHAI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "DEMNIOFLHAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::TriggerLibram
// Il2CppName: TriggerLibram
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(int)>(&MagicalActual::Paladin::TriggerLibram)> {
  static const MethodInfo* get() {
    static auto* JBEIKCJDCIF = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "TriggerLibram", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JBEIKCJDCIF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::CastSuper
// Il2CppName: CastSuper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::CastSuper)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "CastSuper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::JKGOPGCACAG
// Il2CppName: JKGOPGCACAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::Collections::ArrayList*)>(&MagicalActual::Paladin::JKGOPGCACAG)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "JKGOPGCACAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::HFIFFGEDJGH
// Il2CppName: HFIFFGEDJGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Paladin::HFIFFGEDJGH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "HFIFFGEDJGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::OPCCNGMPLPF
// Il2CppName: OPCCNGMPLPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::OPCCNGMPLPF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "OPCCNGMPLPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::BKAEOLMGHOM
// Il2CppName: BKAEOLMGHOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::BKAEOLMGHOM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "BKAEOLMGHOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::HMPLFFGNBIO
// Il2CppName: HMPLFFGNBIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Paladin::HMPLFFGNBIO)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "HMPLFFGNBIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::DJLAJIDMMOC
// Il2CppName: DJLAJIDMMOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::DJLAJIDMMOC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "DJLAJIDMMOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::GJALJGHAODK
// Il2CppName: GJALJGHAODK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(int)>(&MagicalActual::Paladin::GJALJGHAODK)> {
  static const MethodInfo* get() {
    static auto* JBEIKCJDCIF = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "GJALJGHAODK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JBEIKCJDCIF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::FAHGPBCJIBI
// Il2CppName: FAHGPBCJIBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Paladin::FAHGPBCJIBI)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "FAHGPBCJIBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::DisablePrimaryWeapon
// Il2CppName: DisablePrimaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::DisablePrimaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "DisablePrimaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::MDALPNHFBBJ
// Il2CppName: MDALPNHFBBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::MDALPNHFBBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "MDALPNHFBBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::ToggleAdjustWeapon
// Il2CppName: ToggleAdjustWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::ToggleAdjustWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "ToggleAdjustWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::BJBBOFANGHC
// Il2CppName: BJBBOFANGHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*)>(&MagicalActual::Paladin::BJBBOFANGHC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "BJBBOFANGHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::GBCHLGNALEH
// Il2CppName: GBCHLGNALEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Paladin::GBCHLGNALEH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "GBCHLGNALEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::DCIHIEPEKDG
// Il2CppName: DCIHIEPEKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Paladin::DCIHIEPEKDG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "DCIHIEPEKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::IBLPNGBFOKH
// Il2CppName: IBLPNGBFOKH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::Collections::ArrayList*)>(&MagicalActual::Paladin::IBLPNGBFOKH)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "IBLPNGBFOKH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::EAIMJAMLNJD
// Il2CppName: EAIMJAMLNJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(bool)>(&MagicalActual::Paladin::EAIMJAMLNJD)> {
  static const MethodInfo* get() {
    static auto* AALBHOKGIOD = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "EAIMJAMLNJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AALBHOKGIOD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::AvatarEquipmentChanged
// Il2CppName: AvatarEquipmentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::AvatarEquipmentChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "AvatarEquipmentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::CGPJDKNDDGH
// Il2CppName: CGPJDKNDDGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Paladin::CGPJDKNDDGH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "CGPJDKNDDGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::PIBJEJOFODE
// Il2CppName: PIBJEJOFODE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::Collections::ArrayList*)>(&MagicalActual::Paladin::PIBJEJOFODE)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "PIBJEJOFODE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::AIKNLDDNPDE
// Il2CppName: AIKNLDDNPDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Paladin::AIKNLDDNPDE)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "AIKNLDDNPDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::HLADAFPELPM
// Il2CppName: HLADAFPELPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::Collections::ArrayList*)>(&MagicalActual::Paladin::HLADAFPELPM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "HLADAFPELPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::KHOMLKJBDGE
// Il2CppName: KHOMLKJBDGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Paladin::KHOMLKJBDGE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "KHOMLKJBDGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::PNIDNAGIMLM
// Il2CppName: PNIDNAGIMLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Paladin::PNIDNAGIMLM)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "PNIDNAGIMLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::orbusNetCleanup
// Il2CppName: orbusNetCleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Paladin::orbusNetCleanup)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "orbusNetCleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::get_chargePct
// Il2CppName: get_chargePct
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::get_chargePct)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "get_chargePct", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::HDJIACEBICB
// Il2CppName: HDJIACEBICB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*)>(&MagicalActual::Paladin::HDJIACEBICB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "HDJIACEBICB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::LPCECDKFDEJ
// Il2CppName: LPCECDKFDEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Paladin::LPCECDKFDEJ)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "LPCECDKFDEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::JBCEEHMNEFO
// Il2CppName: JBCEEHMNEFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::Collections::ArrayList*)>(&MagicalActual::Paladin::JBCEEHMNEFO)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "JBCEEHMNEFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::EnablePrimaryWeapon
// Il2CppName: EnablePrimaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::EnablePrimaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "EnablePrimaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::ClassDisabled
// Il2CppName: ClassDisabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::ClassDisabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "ClassDisabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::APMJMBFOMOJ
// Il2CppName: APMJMBFOMOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*)>(&MagicalActual::Paladin::APMJMBFOMOJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "APMJMBFOMOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::JDPMDPAKLNB
// Il2CppName: JDPMDPAKLNB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::JDPMDPAKLNB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "JDPMDPAKLNB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::GetWeaponObject
// Il2CppName: GetWeaponObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::GetWeaponObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "GetWeaponObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::WeaponAdjusted
// Il2CppName: WeaponAdjusted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::WeaponAdjusted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "WeaponAdjusted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::MMLFFOCEIKF
// Il2CppName: MMLFFOCEIKF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(float)>(&MagicalActual::Paladin::MMLFFOCEIKF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "MMLFFOCEIKF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::HKGLBBOMFCI
// Il2CppName: HKGLBBOMFCI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::Collections::ArrayList*)>(&MagicalActual::Paladin::HKGLBBOMFCI)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "HKGLBBOMFCI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::EJJINILDHHE
// Il2CppName: EJJINILDHHE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::EJJINILDHHE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "EJJINILDHHE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Paladin::ANIANLNAGME
// Il2CppName: ANIANLNAGME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::ANIANLNAGME)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "ANIANLNAGME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::HHPBHAHNIMD
// Il2CppName: HHPBHAHNIMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Paladin::*)(::UnityEngine::Vector3)>(&MagicalActual::Paladin::HHPBHAHNIMD)> {
  static const MethodInfo* get() {
    static auto* FGCMFDEJJAD = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "HHPBHAHNIMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FGCMFDEJJAD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::CPEMEDGDGGN
// Il2CppName: CPEMEDGDGGN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::Collections::ArrayList*)>(&MagicalActual::Paladin::CPEMEDGDGGN)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "CPEMEDGDGGN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::EDCJCJMPHKB
// Il2CppName: EDCJCJMPHKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::Collections::ArrayList*)>(&MagicalActual::Paladin::EDCJCJMPHKB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "EDCJCJMPHKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::SwitchWeaponHand
// Il2CppName: SwitchWeaponHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(uint8_t)>(&MagicalActual::Paladin::SwitchWeaponHand)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "SwitchWeaponHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::ClassEnabled
// Il2CppName: ClassEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::ClassEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "ClassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::MKLBHNFDNAP
// Il2CppName: MKLBHNFDNAP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::Collections::ArrayList*)>(&MagicalActual::Paladin::MKLBHNFDNAP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "MKLBHNFDNAP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::BLKAEDGCKJK
// Il2CppName: BLKAEDGCKJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Paladin::*)(::UnityEngine::Vector3)>(&MagicalActual::Paladin::BLKAEDGCKJK)> {
  static const MethodInfo* get() {
    static auto* FGCMFDEJJAD = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "BLKAEDGCKJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FGCMFDEJJAD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::IMLIEBKEHKB
// Il2CppName: IMLIEBKEHKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::IMLIEBKEHKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "IMLIEBKEHKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::LNAEFCNGMLK
// Il2CppName: LNAEFCNGMLK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::LNAEFCNGMLK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "LNAEFCNGMLK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::DAONAMDOIDK
// Il2CppName: DAONAMDOIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::DAONAMDOIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "DAONAMDOIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::BLIPMFDPIOK
// Il2CppName: BLIPMFDPIOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::BLIPMFDPIOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "BLIPMFDPIOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::NOILMDCNNNB
// Il2CppName: NOILMDCNNNB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*)>(&MagicalActual::Paladin::NOILMDCNNNB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "NOILMDCNNNB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::EnableSecondaryWeapon
// Il2CppName: EnableSecondaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::EnableSecondaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "EnableSecondaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::FLIAHIABNBA
// Il2CppName: FLIAHIABNBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::FLIAHIABNBA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "FLIAHIABNBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::IEAKMOHIBDD
// Il2CppName: IEAKMOHIBDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)()>(&MagicalActual::Paladin::IEAKMOHIBDD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "IEAKMOHIBDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::NOAJAKMKCMI
// Il2CppName: NOAJAKMKCMI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Paladin::NOAJAKMKCMI)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "NOAJAKMKCMI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Paladin::DONNHLMAPHH
// Il2CppName: DONNHLMAPHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Paladin::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Paladin::DONNHLMAPHH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Paladin*), "DONNHLMAPHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
