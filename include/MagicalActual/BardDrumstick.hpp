// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Bard
  class Bard;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: BardDrumstick
  class BardDrumstick;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::BardDrumstick);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::BardDrumstick*, "MagicalActual", "BardDrumstick");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x5D
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.BardDrumstick
  // [TokenAttribute] Offset: FFFFFFFF
  class BardDrumstick : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.Rigidbody GFAJNDECHEH
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rigidbody* GFAJNDECHEH;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private MagicalActual.Bard CFFNKEMJHGK
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::Bard* CFFNKEMJHGK;
    // Field size check
    static_assert(sizeof(::MagicalActual::Bard*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3100
    // private System.Boolean <MDJLKJKMKCI>k__BackingField
    // Size: 0x1
    // Offset: 0x28
    bool MDJLKJKMKCI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: MDJLKJKMKCI and: FCDNLCMGDPC
    char __padding2[0x3] = {};
    // private System.Single FCDNLCMGDPC
    // Size: 0x4
    // Offset: 0x2C
    float FCDNLCMGDPC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Collider[] JGOGJDHABHN
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<::UnityEngine::Collider*> JGOGJDHABHN;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // private UnityEngine.Transform JNBOAIGLFGP
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Transform* JNBOAIGLFGP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Vector3 KIHMHNKNFAE
    // Size: 0xC
    // Offset: 0x40
    ::UnityEngine::Vector3 KIHMHNKNFAE;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion GIKPHCEBBDE
    // Size: 0x10
    // Offset: 0x4C
    ::UnityEngine::Quaternion GIKPHCEBBDE;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private System.Boolean PPILDLMEGEP
    // Size: 0x1
    // Offset: 0x5C
    bool PPILDLMEGEP;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Rigidbody GFAJNDECHEH
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_GFAJNDECHEH();
    // Get instance field reference: private MagicalActual.Bard CFFNKEMJHGK
    [[deprecated("Use field access instead!")]] ::MagicalActual::Bard*& dyn_CFFNKEMJHGK();
    // Get instance field reference: private System.Boolean <MDJLKJKMKCI>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$MDJLKJKMKCI$k__BackingField();
    // Get instance field reference: private System.Single FCDNLCMGDPC
    [[deprecated("Use field access instead!")]] float& dyn_FCDNLCMGDPC();
    // Get instance field reference: private UnityEngine.Collider[] JGOGJDHABHN
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_JGOGJDHABHN();
    // Get instance field reference: private UnityEngine.Transform JNBOAIGLFGP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_JNBOAIGLFGP();
    // Get instance field reference: private UnityEngine.Vector3 KIHMHNKNFAE
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_KIHMHNKNFAE();
    // Get instance field reference: private UnityEngine.Quaternion GIKPHCEBBDE
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_GIKPHCEBBDE();
    // Get instance field reference: private System.Boolean PPILDLMEGEP
    [[deprecated("Use field access instead!")]] bool& dyn_PPILDLMEGEP();
    // public System.Boolean LNBIEFPLFJO()
    // Offset: 0x1C9C3F8
    bool LNBIEFPLFJO();
    // public System.Boolean MMMGKMJMMON()
    // Offset: 0x1C9C400
    bool MMMGKMJMMON();
    // private System.Void KGAFPFJHLGM(System.Boolean MMMEIONJJFJ)
    // Offset: 0x1C9C408
    void KGAFPFJHLGM(bool MMMEIONJJFJ);
    // private System.Void JPHNAIDIBKL()
    // Offset: 0x1C9C414
    void JPHNAIDIBKL();
    // public System.Boolean get_isBeingThrown()
    // Offset: 0x1C9C8E0
    bool get_isBeingThrown();
    // private System.Void JEDINCAJKLC()
    // Offset: 0x1C9C8E8
    void JEDINCAJKLC();
    // private System.Void MFGHKHNPOBH()
    // Offset: 0x1C9CDB4
    void MFGHKHNPOBH();
    // public System.Void .ctor()
    // Offset: 0x1C9CE24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BardDrumstick* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::BardDrumstick::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BardDrumstick*, creationType>()));
    }
    // public System.Void JNHBEJEPJBG()
    // Offset: 0x1C9C6A4
    void JNHBEJEPJBG();
    // public System.Void PDJJBOJNOCP()
    // Offset: 0x1C9CE2C
    void PDJJBOJNOCP();
    // private System.Void PLGKCAEOJHI()
    // Offset: 0x1C9D2A4
    void PLGKCAEOJHI();
    // public System.Void LFEMLOIFJBB()
    // Offset: 0x1C9D314
    void LFEMLOIFJBB();
    // private System.Void Start()
    // Offset: 0x1C9D55C
    void Start();
    // public System.Void OJLEGJOAJCH()
    // Offset: 0x1C9D5F8
    void OJLEGJOAJCH();
    // public System.Boolean FIHADHABHFM()
    // Offset: 0x1C9DA68
    bool FIHADHABHFM();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x1C9DA70
    void KPOAAAHLGLA();
    // public System.Void LDLOCGABHDN()
    // Offset: 0x1C9DB0C
    void LDLOCGABHDN();
    // private System.Void EEMBCPKCOIL()
    // Offset: 0x1C9DF88
    void EEMBCPKCOIL();
    // public System.Void NKOAMCOPCGL()
    // Offset: 0x1C9E220
    void NKOAMCOPCGL();
    // public System.Void ThrowMe()
    // Offset: 0x1C9E698
    void ThrowMe();
    // private System.Void Awake()
    // Offset: 0x1C9EB00
    void Awake();
    // public System.Boolean BAMPPBKDJPH()
    // Offset: 0x1C9DF80
    bool BAMPPBKDJPH();
    // public System.Boolean HFEANKFMEAF()
    // Offset: 0x1C9D29C
    bool HFEANKFMEAF();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x1C9EB8C
    void GKIOLADOCOK();
    // public System.Void AODAOEALJKB()
    // Offset: 0x1C9EC28
    void AODAOEALJKB();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x1C9EE64
    void IPIFMKAGODD();
    // private System.Void HDMHEDEGDFD()
    // Offset: 0x1C9EF00
    void HDMHEDEGDFD();
    // public System.Boolean GADOCECICIP()
    // Offset: 0x1C9E218
    bool GADOCECICIP();
    // private System.Void KHNMDPBBFAC()
    // Offset: 0x1C9EF8C
    void KHNMDPBBFAC();
    // private System.Void ONMMAPFCGAA()
    // Offset: 0x1C9EFFC
    void ONMMAPFCGAA();
    // public System.Void SnapBack()
    // Offset: 0x1C9F06C
    void SnapBack();
    // private System.Void ACCCOBOJGOM(System.Boolean MMMEIONJJFJ)
    // Offset: 0x1C9D550
    void ACCCOBOJGOM(bool MMMEIONJJFJ);
    // public System.Boolean BPEBNJCPCPP()
    // Offset: 0x1C9F2A8
    bool BPEBNJCPCPP();
    // public System.Void GFOGPFOOCMH()
    // Offset: 0x1C9CB78
    void GFOGPFOOCMH();
    // private System.Void NDAOHLAOCDE()
    // Offset: 0x1C9F2B0
    void NDAOHLAOCDE();
    // private System.Void FixedUpdate()
    // Offset: 0x1C9F33C
    void FixedUpdate();
    // public System.Void NAEMACGLFIN()
    // Offset: 0x1C9F5BC
    void NAEMACGLFIN();
    // private System.Void HJBGEKAHMFO()
    // Offset: 0x1C9FA34
    void HJBGEKAHMFO();
    // private System.Void FAINHAFJPBI()
    // Offset: 0x1C9FAA4
    void FAINHAFJPBI();
    // private System.Void CNBJHFMDCOE()
    // Offset: 0x1C9FB14
    void CNBJHFMDCOE();
  }; // MagicalActual.BardDrumstick
  #pragma pack(pop)
  static check_size<sizeof(BardDrumstick), 92 + sizeof(bool)> __MagicalActual_BardDrumstickSizeCheck;
  static_assert(sizeof(BardDrumstick) == 0x5D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::LNBIEFPLFJO
// Il2CppName: LNBIEFPLFJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::LNBIEFPLFJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "LNBIEFPLFJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::MMMGKMJMMON
// Il2CppName: MMMGKMJMMON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::MMMGKMJMMON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "MMMGKMJMMON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::KGAFPFJHLGM
// Il2CppName: KGAFPFJHLGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)(bool)>(&MagicalActual::BardDrumstick::KGAFPFJHLGM)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "KGAFPFJHLGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::JPHNAIDIBKL
// Il2CppName: JPHNAIDIBKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::JPHNAIDIBKL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "JPHNAIDIBKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::get_isBeingThrown
// Il2CppName: get_isBeingThrown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::get_isBeingThrown)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "get_isBeingThrown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::JEDINCAJKLC
// Il2CppName: JEDINCAJKLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::JEDINCAJKLC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "JEDINCAJKLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::MFGHKHNPOBH
// Il2CppName: MFGHKHNPOBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::MFGHKHNPOBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "MFGHKHNPOBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::JNHBEJEPJBG
// Il2CppName: JNHBEJEPJBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::JNHBEJEPJBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "JNHBEJEPJBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::PDJJBOJNOCP
// Il2CppName: PDJJBOJNOCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::PDJJBOJNOCP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "PDJJBOJNOCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::PLGKCAEOJHI
// Il2CppName: PLGKCAEOJHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::PLGKCAEOJHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "PLGKCAEOJHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::LFEMLOIFJBB
// Il2CppName: LFEMLOIFJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::LFEMLOIFJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "LFEMLOIFJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::OJLEGJOAJCH
// Il2CppName: OJLEGJOAJCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::OJLEGJOAJCH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "OJLEGJOAJCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::FIHADHABHFM
// Il2CppName: FIHADHABHFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::FIHADHABHFM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "FIHADHABHFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::LDLOCGABHDN
// Il2CppName: LDLOCGABHDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::LDLOCGABHDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "LDLOCGABHDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::EEMBCPKCOIL
// Il2CppName: EEMBCPKCOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::EEMBCPKCOIL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "EEMBCPKCOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::NKOAMCOPCGL
// Il2CppName: NKOAMCOPCGL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::NKOAMCOPCGL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "NKOAMCOPCGL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::ThrowMe
// Il2CppName: ThrowMe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::ThrowMe)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "ThrowMe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::BAMPPBKDJPH
// Il2CppName: BAMPPBKDJPH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::BAMPPBKDJPH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "BAMPPBKDJPH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::HFEANKFMEAF
// Il2CppName: HFEANKFMEAF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::HFEANKFMEAF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "HFEANKFMEAF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::AODAOEALJKB
// Il2CppName: AODAOEALJKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::AODAOEALJKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "AODAOEALJKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::HDMHEDEGDFD
// Il2CppName: HDMHEDEGDFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::HDMHEDEGDFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "HDMHEDEGDFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::GADOCECICIP
// Il2CppName: GADOCECICIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::GADOCECICIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "GADOCECICIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::KHNMDPBBFAC
// Il2CppName: KHNMDPBBFAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::KHNMDPBBFAC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "KHNMDPBBFAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::ONMMAPFCGAA
// Il2CppName: ONMMAPFCGAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::ONMMAPFCGAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "ONMMAPFCGAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::SnapBack
// Il2CppName: SnapBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::SnapBack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "SnapBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::ACCCOBOJGOM
// Il2CppName: ACCCOBOJGOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)(bool)>(&MagicalActual::BardDrumstick::ACCCOBOJGOM)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "ACCCOBOJGOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::BPEBNJCPCPP
// Il2CppName: BPEBNJCPCPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::BPEBNJCPCPP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "BPEBNJCPCPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::GFOGPFOOCMH
// Il2CppName: GFOGPFOOCMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::GFOGPFOOCMH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "GFOGPFOOCMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::NDAOHLAOCDE
// Il2CppName: NDAOHLAOCDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::NDAOHLAOCDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "NDAOHLAOCDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::NAEMACGLFIN
// Il2CppName: NAEMACGLFIN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::NAEMACGLFIN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "NAEMACGLFIN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::HJBGEKAHMFO
// Il2CppName: HJBGEKAHMFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::HJBGEKAHMFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "HJBGEKAHMFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::FAINHAFJPBI
// Il2CppName: FAINHAFJPBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::FAINHAFJPBI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "FAINHAFJPBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BardDrumstick::CNBJHFMDCOE
// Il2CppName: CNBJHFMDCOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BardDrumstick::*)()>(&MagicalActual::BardDrumstick::CNBJHFMDCOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BardDrumstick*), "CNBJHFMDCOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
