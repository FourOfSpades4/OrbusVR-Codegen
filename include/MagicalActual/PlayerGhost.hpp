// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: IPlayerClass
#include "GlobalNamespace/IPlayerClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
  // Forward declaring type: WorldMenu
  class WorldMenu;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SuperTextMesh
  class SuperTextMesh;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerGhost
  class PlayerGhost;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PlayerGhost);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PlayerGhost*, "MagicalActual", "PlayerGhost");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x5D
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PlayerGhost
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayerGhost : public ::UnityEngine::MonoBehaviour/*, public ::GlobalNamespace::IPlayerClass*/ {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.PlayerAvatar EENJNFDNJBD
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::PlayerAvatar* EENJNFDNJBD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // private MagicalActual.WorldMenu PFJDDCPLNNI
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::WorldMenu* PFJDDCPLNNI;
    // Field size check
    static_assert(sizeof(::MagicalActual::WorldMenu*) == 0x8);
    // private UnityEngine.Vector3 CLHAIFFHBBL
    // Size: 0xC
    // Offset: 0x30
    ::UnityEngine::Vector3 CLHAIFFHBBL;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: CLHAIFFHBBL and: IJJGNKLFGJN
    char __padding3[0x4] = {};
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public SuperTextMesh cooldownTimer
    // Size: 0x8
    // Offset: 0x48
    ::GlobalNamespace::SuperTextMesh* cooldownTimer;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SuperTextMesh*) == 0x8);
    // private System.Int32 FIBHNPCEGCM
    // Size: 0x4
    // Offset: 0x50
    int FIBHNPCEGCM;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single BKHKBDLAGGC
    // Size: 0x4
    // Offset: 0x54
    float BKHKBDLAGGC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single FHOLIDJBOLF
    // Size: 0x4
    // Offset: 0x58
    float FHOLIDJBOLF;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean BOIIJELHJDH
    // Size: 0x1
    // Offset: 0x5C
    bool BOIIJELHJDH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IPlayerClass
    operator ::GlobalNamespace::IPlayerClass() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IPlayerClass*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.PlayerAvatar EENJNFDNJBD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_EENJNFDNJBD();
    // Get instance field reference: private MagicalActual.WorldMenu PFJDDCPLNNI
    [[deprecated("Use field access instead!")]] ::MagicalActual::WorldMenu*& dyn_PFJDDCPLNNI();
    // Get instance field reference: private UnityEngine.Vector3 CLHAIFFHBBL
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_CLHAIFFHBBL();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public SuperTextMesh cooldownTimer
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& dyn_cooldownTimer();
    // Get instance field reference: private System.Int32 FIBHNPCEGCM
    [[deprecated("Use field access instead!")]] int& dyn_FIBHNPCEGCM();
    // Get instance field reference: private System.Single BKHKBDLAGGC
    [[deprecated("Use field access instead!")]] float& dyn_BKHKBDLAGGC();
    // Get instance field reference: private System.Single FHOLIDJBOLF
    [[deprecated("Use field access instead!")]] float& dyn_FHOLIDJBOLF();
    // Get instance field reference: private System.Boolean BOIIJELHJDH
    [[deprecated("Use field access instead!")]] bool& dyn_BOIIJELHJDH();
    // private System.Void Awake()
    // Offset: 0x11A52A4
    void Awake();
    // private System.Void OnDisable()
    // Offset: 0x11A52FC
    void OnDisable();
    // private System.Void JNLHMHFEHAO(System.Object OMLPNCLFFMJ)
    // Offset: 0x11A5414
    void JNLHMHFEHAO(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Start()
    // Offset: 0x11A55B4
    void Start();
    // public System.Void HBPNPCKBIBC()
    // Offset: 0x11A55B8
    void HBPNPCKBIBC();
    // private System.Void KHMOAMNJKPJ()
    // Offset: 0x11A55BC
    void KHMOAMNJKPJ();
    // public System.Void CINADLMPDOC(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x11A5634
    void CINADLMPDOC(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void CBIKBCKLNNK()
    // Offset: 0x11A566C
    void CBIKBCKLNNK();
    // public UnityEngine.GameObject CADDANPLKBL()
    // Offset: 0x11A56E4
    ::UnityEngine::GameObject* CADDANPLKBL();
    // public System.Void ToggleAdjustWeapon()
    // Offset: 0x11A56EC
    void ToggleAdjustWeapon();
    // private System.Void IPPCJCCAKEK()
    // Offset: 0x11A56F0
    void IPPCJCCAKEK();
    // private System.Void CDGMDIAAPNP()
    // Offset: 0x11A5804
    void CDGMDIAAPNP();
    // public System.Void orbusNetCleanup(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x11A591C
    void orbusNetCleanup(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void OAMOHIMHKEK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x11A5954
    void OAMOHIMHKEK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void .ctor()
    // Offset: 0x11A5A08
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerGhost* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PlayerGhost::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerGhost*, creationType>()));
    }
    // public System.Void JOGPGAPOBBK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x11A5AA4
    void JOGPGAPOBBK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JDKHHHAJFIH()
    // Offset: 0x11A5480
    void JDKHHHAJFIH();
    // public System.Void ClassEnabled()
    // Offset: 0x11A5B58
    void ClassEnabled();
    // public System.Void LFHOKDCFIGC()
    // Offset: 0x11A5D60
    void LFHOKDCFIGC();
    // public UnityEngine.GameObject GetWeaponObject()
    // Offset: 0x11A5F98
    ::UnityEngine::GameObject* GetWeaponObject();
    // private System.Void LIMHDANHPCN()
    // Offset: 0x11A5FA0
    void LIMHDANHPCN();
    // public System.Void PromptClickChoice(System.String ANCJMBHEDKF)
    // Offset: 0x11A6018
    void PromptClickChoice(::StringW ANCJMBHEDKF);
    // public System.Void ClassDisabled()
    // Offset: 0x11A609C
    void ClassDisabled();
    // public System.Void KBBBHPMIKNJ(System.String ANCJMBHEDKF)
    // Offset: 0x11A60A0
    void KBBBHPMIKNJ(::StringW ANCJMBHEDKF);
    // private System.Void APAPOGILFFG(MagicalActual.WorldMenu JCEAHGHCCPC)
    // Offset: 0x11A6124
    void APAPOGILFFG(::MagicalActual::WorldMenu* JCEAHGHCCPC);
    // private System.Void EnableSecondaryWeapon()
    // Offset: 0x11A625C
    void EnableSecondaryWeapon();
    // public System.Void WeaponAdjusted()
    // Offset: 0x11A62D4
    void WeaponAdjusted();
    // public System.Void HPCKLFFGPNO()
    // Offset: 0x11A62D8
    void HPCKLFFGPNO();
    // private System.Void KPMCFHLECEM()
    // Offset: 0x11A62DC
    void KPMCFHLECEM();
    // private System.Void OGHPBKBDICO(MagicalActual.WorldMenu JCEAHGHCCPC)
    // Offset: 0x11A6354
    void OGHPBKBDICO(::MagicalActual::WorldMenu* JCEAHGHCCPC);
    // private System.Void PCAIDMLLJFJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x11A648C
    void PCAIDMLLJFJ(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x11A64F8
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EnablePrimaryWeapon()
    // Offset: 0x11A65AC
    void EnablePrimaryWeapon();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x11A6624
    void GKIOLADOCOK();
    // public UnityEngine.GameObject GetWeaponSkin()
    // Offset: 0x11A6628
    ::UnityEngine::GameObject* GetWeaponSkin();
    // private System.Void NHJCNCOCOOO()
    // Offset: 0x11A6630
    void NHJCNCOCOOO();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x11A66A8
    void CBMDGNKFPIO();
    // private System.Void JPHEBENNLCB()
    // Offset: 0x11A67C0
    void JPHEBENNLCB();
    // private System.Void NJEBFACCBAF()
    // Offset: 0x11A66AC
    void NJEBFACCBAF();
    // private System.Void FixedUpdate()
    // Offset: 0x11A6DE8
    void FixedUpdate();
    // private System.Void PLOHMNANLEO(MagicalActual.WorldMenu JCEAHGHCCPC)
    // Offset: 0x11A73F4
    void PLOHMNANLEO(::MagicalActual::WorldMenu* JCEAHGHCCPC);
    // public System.Void DIBGCDOJEOH(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x11A7504
    void DIBGCDOJEOH(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void HLAILLDGEHP(System.Object OMLPNCLFFMJ)
    // Offset: 0x11A753C
    void HLAILLDGEHP(::Il2CppObject* OMLPNCLFFMJ);
  }; // MagicalActual.PlayerGhost
  #pragma pack(pop)
  static check_size<sizeof(PlayerGhost), 92 + sizeof(bool)> __MagicalActual_PlayerGhostSizeCheck;
  static_assert(sizeof(PlayerGhost) == 0x5D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::JNLHMHFEHAO
// Il2CppName: JNLHMHFEHAO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::Il2CppObject*)>(&MagicalActual::PlayerGhost::JNLHMHFEHAO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "JNLHMHFEHAO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::HBPNPCKBIBC
// Il2CppName: HBPNPCKBIBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::HBPNPCKBIBC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "HBPNPCKBIBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::KHMOAMNJKPJ
// Il2CppName: KHMOAMNJKPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::KHMOAMNJKPJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "KHMOAMNJKPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::CINADLMPDOC
// Il2CppName: CINADLMPDOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PlayerGhost::CINADLMPDOC)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "CINADLMPDOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::CBIKBCKLNNK
// Il2CppName: CBIKBCKLNNK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::CBIKBCKLNNK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "CBIKBCKLNNK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::CADDANPLKBL
// Il2CppName: CADDANPLKBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::CADDANPLKBL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "CADDANPLKBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::ToggleAdjustWeapon
// Il2CppName: ToggleAdjustWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::ToggleAdjustWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "ToggleAdjustWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::IPPCJCCAKEK
// Il2CppName: IPPCJCCAKEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::IPPCJCCAKEK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "IPPCJCCAKEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::CDGMDIAAPNP
// Il2CppName: CDGMDIAAPNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::CDGMDIAAPNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "CDGMDIAAPNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::orbusNetCleanup
// Il2CppName: orbusNetCleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PlayerGhost::orbusNetCleanup)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "orbusNetCleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::OAMOHIMHKEK
// Il2CppName: OAMOHIMHKEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PlayerGhost::OAMOHIMHKEK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "OAMOHIMHKEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::JOGPGAPOBBK
// Il2CppName: JOGPGAPOBBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PlayerGhost::JOGPGAPOBBK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "JOGPGAPOBBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::JDKHHHAJFIH
// Il2CppName: JDKHHHAJFIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::JDKHHHAJFIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "JDKHHHAJFIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::ClassEnabled
// Il2CppName: ClassEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::ClassEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "ClassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::LFHOKDCFIGC
// Il2CppName: LFHOKDCFIGC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::LFHOKDCFIGC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "LFHOKDCFIGC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::GetWeaponObject
// Il2CppName: GetWeaponObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::GetWeaponObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "GetWeaponObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::LIMHDANHPCN
// Il2CppName: LIMHDANHPCN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::LIMHDANHPCN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "LIMHDANHPCN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::PromptClickChoice
// Il2CppName: PromptClickChoice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::StringW)>(&MagicalActual::PlayerGhost::PromptClickChoice)> {
  static const MethodInfo* get() {
    static auto* ANCJMBHEDKF = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "PromptClickChoice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ANCJMBHEDKF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::ClassDisabled
// Il2CppName: ClassDisabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::ClassDisabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "ClassDisabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::KBBBHPMIKNJ
// Il2CppName: KBBBHPMIKNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::StringW)>(&MagicalActual::PlayerGhost::KBBBHPMIKNJ)> {
  static const MethodInfo* get() {
    static auto* ANCJMBHEDKF = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "KBBBHPMIKNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ANCJMBHEDKF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::APAPOGILFFG
// Il2CppName: APAPOGILFFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::MagicalActual::WorldMenu*)>(&MagicalActual::PlayerGhost::APAPOGILFFG)> {
  static const MethodInfo* get() {
    static auto* JCEAHGHCCPC = &::il2cpp_utils::GetClassFromName("MagicalActual", "WorldMenu")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "APAPOGILFFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JCEAHGHCCPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::EnableSecondaryWeapon
// Il2CppName: EnableSecondaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::EnableSecondaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "EnableSecondaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::WeaponAdjusted
// Il2CppName: WeaponAdjusted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::WeaponAdjusted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "WeaponAdjusted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::HPCKLFFGPNO
// Il2CppName: HPCKLFFGPNO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::HPCKLFFGPNO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "HPCKLFFGPNO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::KPMCFHLECEM
// Il2CppName: KPMCFHLECEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::KPMCFHLECEM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "KPMCFHLECEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::OGHPBKBDICO
// Il2CppName: OGHPBKBDICO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::MagicalActual::WorldMenu*)>(&MagicalActual::PlayerGhost::OGHPBKBDICO)> {
  static const MethodInfo* get() {
    static auto* JCEAHGHCCPC = &::il2cpp_utils::GetClassFromName("MagicalActual", "WorldMenu")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "OGHPBKBDICO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JCEAHGHCCPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::PCAIDMLLJFJ
// Il2CppName: PCAIDMLLJFJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::Il2CppObject*)>(&MagicalActual::PlayerGhost::PCAIDMLLJFJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "PCAIDMLLJFJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PlayerGhost::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::EnablePrimaryWeapon
// Il2CppName: EnablePrimaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::EnablePrimaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "EnablePrimaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::GetWeaponSkin
// Il2CppName: GetWeaponSkin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::GetWeaponSkin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "GetWeaponSkin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::NHJCNCOCOOO
// Il2CppName: NHJCNCOCOOO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::NHJCNCOCOOO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "NHJCNCOCOOO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::JPHEBENNLCB
// Il2CppName: JPHEBENNLCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::JPHEBENNLCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "JPHEBENNLCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::NJEBFACCBAF
// Il2CppName: NJEBFACCBAF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::NJEBFACCBAF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "NJEBFACCBAF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)()>(&MagicalActual::PlayerGhost::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::PLOHMNANLEO
// Il2CppName: PLOHMNANLEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::MagicalActual::WorldMenu*)>(&MagicalActual::PlayerGhost::PLOHMNANLEO)> {
  static const MethodInfo* get() {
    static auto* JCEAHGHCCPC = &::il2cpp_utils::GetClassFromName("MagicalActual", "WorldMenu")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "PLOHMNANLEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JCEAHGHCCPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::DIBGCDOJEOH
// Il2CppName: DIBGCDOJEOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PlayerGhost::DIBGCDOJEOH)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "DIBGCDOJEOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerGhost::HLAILLDGEHP
// Il2CppName: HLAILLDGEHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerGhost::*)(::Il2CppObject*)>(&MagicalActual::PlayerGhost::HLAILLDGEHP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerGhost*), "HLAILLDGEHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
