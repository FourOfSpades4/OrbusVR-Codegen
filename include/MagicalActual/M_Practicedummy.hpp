// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_Practicedummy
  class M_Practicedummy;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_Practicedummy);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_Practicedummy*, "MagicalActual", "M_Practicedummy");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_Practicedummy
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4904
  class M_Practicedummy : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean alwaysRegen
    // Size: 0x1
    // Offset: 0x30
    bool alwaysRegen;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public System.Boolean alwaysRegen
    [[deprecated("Use field access instead!")]] bool& dyn_alwaysRegen();
    // public System.Void IBMKENLAMGB()
    // Offset: 0x25EE794
    void IBMKENLAMGB();
    // private System.Void Awake()
    // Offset: 0x25EE9B8
    void Awake();
    // public System.Void KIBDAOLFNJM()
    // Offset: 0x25EEA10
    void KIBDAOLFNJM();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x25EEC30
    void MLGBKBMHHLE();
    // public System.Void FNECNNOKIOJ(System.Int32 ALMJJMPBGOK, System.Int32 KCDMGPPIMJP, System.Int32 PPIIOLDJENH)
    // Offset: 0x25EECE0
    void FNECNNOKIOJ(int ALMJJMPBGOK, int KCDMGPPIMJP, int PPIIOLDJENH);
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x25EEDF0
    void PBEMGGBBDCK();
    // private System.Void KGKKNFEMGAM()
    // Offset: 0x25EEEA0
    void KGKKNFEMGAM();
    // public System.Void JCOFJKJMOAA()
    // Offset: 0x25EEEF8
    void JCOFJKJMOAA();
    // public System.Void NHHIIEHJCFA()
    // Offset: 0x25EF11C
    void NHHIIEHJCFA();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x25EF33C
    void FNGLOIECKDG();
    // public System.Void IGFLJFGAAOE(System.Int32 ALMJJMPBGOK, System.Int32 KCDMGPPIMJP, System.Int32 PPIIOLDJENH)
    // Offset: 0x25EF3EC
    void IGFLJFGAAOE(int ALMJJMPBGOK, int KCDMGPPIMJP, int PPIIOLDJENH);
    // private System.Void BBEIKDBPFPA()
    // Offset: 0x25EF4FC
    void BBEIKDBPFPA();
    // public System.Void MonsterHitpointsChanged(System.Int32 ALMJJMPBGOK, System.Int32 KCDMGPPIMJP, System.Int32 PPIIOLDJENH)
    // Offset: 0x25EF570
    void MonsterHitpointsChanged(int ALMJJMPBGOK, int KCDMGPPIMJP, int PPIIOLDJENH);
    // public System.Void JMPBEJDKDGJ()
    // Offset: 0x25EF680
    void JMPBEJDKDGJ();
    // public System.Void GEEDMKBGFLG(System.Int32 ALMJJMPBGOK, System.Int32 KCDMGPPIMJP, System.Int32 PPIIOLDJENH)
    // Offset: 0x25EF8A4
    void GEEDMKBGFLG(int ALMJJMPBGOK, int KCDMGPPIMJP, int PPIIOLDJENH);
    // public System.Void GHHAMAIIFFG()
    // Offset: 0x25EF9B4
    void GHHAMAIIFFG();
    // private System.Void AIKBLNGPOON()
    // Offset: 0x25EFBD8
    void AIKBLNGPOON();
    // public System.Void KLPLAHINIGH()
    // Offset: 0x25EFC30
    void KLPLAHINIGH();
    // private System.Void MKBJMLMCLBP()
    // Offset: 0x25EFE54
    void MKBJMLMCLBP();
    // public System.Void ILLHMMCNGOG()
    // Offset: 0x25EFEC8
    void ILLHMMCNGOG();
    // private System.Void KGJJNLDHENL()
    // Offset: 0x25F00EC
    void KGJJNLDHENL();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x25F0144
    void OACMGPBCPEL();
    // public System.Void Slash()
    // Offset: 0x25F01F4
    void Slash();
    // private System.Void EKJEHMKIJAP()
    // Offset: 0x25F040C
    void EKJEHMKIJAP();
    // public System.Void .ctor()
    // Offset: 0x25F0480
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_Practicedummy* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_Practicedummy::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_Practicedummy*, creationType>()));
    }
    // private System.Void APIMIOELFAJ()
    // Offset: 0x25F04D8
    void APIMIOELFAJ();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x25F0588
    void KBDGAPMJGLG();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x25F0638
    void GHLPBOJJHNG();
    // private System.Void Start()
    // Offset: 0x25F06E8
    void Start();
    // public System.Void MOLGLKBCDBD(System.Int32 ALMJJMPBGOK, System.Int32 KCDMGPPIMJP, System.Int32 PPIIOLDJENH)
    // Offset: 0x25F0798
    void MOLGLKBCDBD(int ALMJJMPBGOK, int KCDMGPPIMJP, int PPIIOLDJENH);
    // private System.Void FNHKAIGMMLG()
    // Offset: 0x25F08A8
    void FNHKAIGMMLG();
    // private System.Void GCMCMLJPDLB()
    // Offset: 0x25F0900
    void GCMCMLJPDLB();
    // public System.Void KGHJBKMCKNJ(System.Int32 ALMJJMPBGOK, System.Int32 KCDMGPPIMJP, System.Int32 PPIIOLDJENH)
    // Offset: 0x25F0974
    void KGHJBKMCKNJ(int ALMJJMPBGOK, int KCDMGPPIMJP, int PPIIOLDJENH);
    // private System.Void ADLGPKAIPAA()
    // Offset: 0x25F0A84
    void ADLGPKAIPAA();
    // public System.Void GHAEMOGINPF(System.Int32 ALMJJMPBGOK, System.Int32 KCDMGPPIMJP, System.Int32 PPIIOLDJENH)
    // Offset: 0x25F0ADC
    void GHAEMOGINPF(int ALMJJMPBGOK, int KCDMGPPIMJP, int PPIIOLDJENH);
    // private System.Void NNDCJJKFOLD()
    // Offset: 0x25F0BEC
    void NNDCJJKFOLD();
    // private System.Void BMALDPKJJPG()
    // Offset: 0x25F0C60
    void BMALDPKJJPG();
    // public System.Void DIDADMBDAAK()
    // Offset: 0x25F0CB8
    void DIDADMBDAAK();
    // public System.Void BIIPJEPNIBH()
    // Offset: 0x25F0EDC
    void BIIPJEPNIBH();
    // private System.Void EDJIILEFNPD()
    // Offset: 0x25F1100
    void EDJIILEFNPD();
    // private System.Void EPEEPPKNMED()
    // Offset: 0x25F1158
    void EPEEPPKNMED();
    // private System.Void MAANKLPJHGB()
    // Offset: 0x25F11CC
    void MAANKLPJHGB();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x25F1240
    void NEDFCIDMJBB();
    // public System.Void HKJBGHNNGBH(System.Int32 ALMJJMPBGOK, System.Int32 KCDMGPPIMJP, System.Int32 PPIIOLDJENH)
    // Offset: 0x25F12F0
    void HKJBGHNNGBH(int ALMJJMPBGOK, int KCDMGPPIMJP, int PPIIOLDJENH);
  }; // MagicalActual.M_Practicedummy
  #pragma pack(pop)
  static check_size<sizeof(M_Practicedummy), 48 + sizeof(bool)> __MagicalActual_M_PracticedummySizeCheck;
  static_assert(sizeof(M_Practicedummy) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::IBMKENLAMGB
// Il2CppName: IBMKENLAMGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::IBMKENLAMGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "IBMKENLAMGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::KIBDAOLFNJM
// Il2CppName: KIBDAOLFNJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::KIBDAOLFNJM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "KIBDAOLFNJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::FNECNNOKIOJ
// Il2CppName: FNECNNOKIOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)(int, int, int)>(&MagicalActual::M_Practicedummy::FNECNNOKIOJ)> {
  static const MethodInfo* get() {
    static auto* ALMJJMPBGOK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* KCDMGPPIMJP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* PPIIOLDJENH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "FNECNNOKIOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALMJJMPBGOK, KCDMGPPIMJP, PPIIOLDJENH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::KGKKNFEMGAM
// Il2CppName: KGKKNFEMGAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::KGKKNFEMGAM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "KGKKNFEMGAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::JCOFJKJMOAA
// Il2CppName: JCOFJKJMOAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::JCOFJKJMOAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "JCOFJKJMOAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::NHHIIEHJCFA
// Il2CppName: NHHIIEHJCFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::NHHIIEHJCFA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "NHHIIEHJCFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::IGFLJFGAAOE
// Il2CppName: IGFLJFGAAOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)(int, int, int)>(&MagicalActual::M_Practicedummy::IGFLJFGAAOE)> {
  static const MethodInfo* get() {
    static auto* ALMJJMPBGOK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* KCDMGPPIMJP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* PPIIOLDJENH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "IGFLJFGAAOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALMJJMPBGOK, KCDMGPPIMJP, PPIIOLDJENH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::BBEIKDBPFPA
// Il2CppName: BBEIKDBPFPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::BBEIKDBPFPA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "BBEIKDBPFPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::MonsterHitpointsChanged
// Il2CppName: MonsterHitpointsChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)(int, int, int)>(&MagicalActual::M_Practicedummy::MonsterHitpointsChanged)> {
  static const MethodInfo* get() {
    static auto* ALMJJMPBGOK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* KCDMGPPIMJP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* PPIIOLDJENH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "MonsterHitpointsChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALMJJMPBGOK, KCDMGPPIMJP, PPIIOLDJENH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::JMPBEJDKDGJ
// Il2CppName: JMPBEJDKDGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::JMPBEJDKDGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "JMPBEJDKDGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::GEEDMKBGFLG
// Il2CppName: GEEDMKBGFLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)(int, int, int)>(&MagicalActual::M_Practicedummy::GEEDMKBGFLG)> {
  static const MethodInfo* get() {
    static auto* ALMJJMPBGOK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* KCDMGPPIMJP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* PPIIOLDJENH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "GEEDMKBGFLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALMJJMPBGOK, KCDMGPPIMJP, PPIIOLDJENH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::GHHAMAIIFFG
// Il2CppName: GHHAMAIIFFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::GHHAMAIIFFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "GHHAMAIIFFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::AIKBLNGPOON
// Il2CppName: AIKBLNGPOON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::AIKBLNGPOON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "AIKBLNGPOON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::KLPLAHINIGH
// Il2CppName: KLPLAHINIGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::KLPLAHINIGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "KLPLAHINIGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::MKBJMLMCLBP
// Il2CppName: MKBJMLMCLBP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::MKBJMLMCLBP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "MKBJMLMCLBP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::ILLHMMCNGOG
// Il2CppName: ILLHMMCNGOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::ILLHMMCNGOG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "ILLHMMCNGOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::KGJJNLDHENL
// Il2CppName: KGJJNLDHENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::KGJJNLDHENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "KGJJNLDHENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::EKJEHMKIJAP
// Il2CppName: EKJEHMKIJAP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::EKJEHMKIJAP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "EKJEHMKIJAP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::APIMIOELFAJ
// Il2CppName: APIMIOELFAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::APIMIOELFAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "APIMIOELFAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::MOLGLKBCDBD
// Il2CppName: MOLGLKBCDBD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)(int, int, int)>(&MagicalActual::M_Practicedummy::MOLGLKBCDBD)> {
  static const MethodInfo* get() {
    static auto* ALMJJMPBGOK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* KCDMGPPIMJP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* PPIIOLDJENH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "MOLGLKBCDBD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALMJJMPBGOK, KCDMGPPIMJP, PPIIOLDJENH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::FNHKAIGMMLG
// Il2CppName: FNHKAIGMMLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::FNHKAIGMMLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "FNHKAIGMMLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::GCMCMLJPDLB
// Il2CppName: GCMCMLJPDLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::GCMCMLJPDLB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "GCMCMLJPDLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::KGHJBKMCKNJ
// Il2CppName: KGHJBKMCKNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)(int, int, int)>(&MagicalActual::M_Practicedummy::KGHJBKMCKNJ)> {
  static const MethodInfo* get() {
    static auto* ALMJJMPBGOK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* KCDMGPPIMJP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* PPIIOLDJENH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "KGHJBKMCKNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALMJJMPBGOK, KCDMGPPIMJP, PPIIOLDJENH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::ADLGPKAIPAA
// Il2CppName: ADLGPKAIPAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::ADLGPKAIPAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "ADLGPKAIPAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::GHAEMOGINPF
// Il2CppName: GHAEMOGINPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)(int, int, int)>(&MagicalActual::M_Practicedummy::GHAEMOGINPF)> {
  static const MethodInfo* get() {
    static auto* ALMJJMPBGOK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* KCDMGPPIMJP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* PPIIOLDJENH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "GHAEMOGINPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALMJJMPBGOK, KCDMGPPIMJP, PPIIOLDJENH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::NNDCJJKFOLD
// Il2CppName: NNDCJJKFOLD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::NNDCJJKFOLD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "NNDCJJKFOLD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::BMALDPKJJPG
// Il2CppName: BMALDPKJJPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::BMALDPKJJPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "BMALDPKJJPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::DIDADMBDAAK
// Il2CppName: DIDADMBDAAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::DIDADMBDAAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "DIDADMBDAAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::BIIPJEPNIBH
// Il2CppName: BIIPJEPNIBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::BIIPJEPNIBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "BIIPJEPNIBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::EDJIILEFNPD
// Il2CppName: EDJIILEFNPD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::EDJIILEFNPD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "EDJIILEFNPD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::EPEEPPKNMED
// Il2CppName: EPEEPPKNMED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::EPEEPPKNMED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "EPEEPPKNMED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::MAANKLPJHGB
// Il2CppName: MAANKLPJHGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::MAANKLPJHGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "MAANKLPJHGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)()>(&MagicalActual::M_Practicedummy::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Practicedummy::HKJBGHNNGBH
// Il2CppName: HKJBGHNNGBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Practicedummy::*)(int, int, int)>(&MagicalActual::M_Practicedummy::HKJBGHNNGBH)> {
  static const MethodInfo* get() {
    static auto* ALMJJMPBGOK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* KCDMGPPIMJP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* PPIIOLDJENH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Practicedummy*), "HKJBGHNNGBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALMJJMPBGOK, KCDMGPPIMJP, PPIIOLDJENH});
  }
};
