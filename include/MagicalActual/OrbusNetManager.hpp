// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: MagicalActual.connectionProtocol
#include "MagicalActual/connectionProtocol.hpp"
// Including type: ENet.Host
#include "ENet/Host.hpp"
// Including type: ENet.Peer
#include "ENet/Peer.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerCharacter
  class PlayerCharacter;
  // Forward declaring type: PlayerEntity
  class PlayerEntity;
  // Forward declaring type: BoxCuller
  class BoxCuller;
  // Forward declaring type: DebugBox
  class DebugBox;
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: PrefabData
  class PrefabData;
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
}
// Forward declaring namespace: WebSocketSharp
namespace WebSocketSharp {
  // Forward declaring type: WebSocket
  class WebSocket;
  // Forward declaring type: CloseEventArgs
  class CloseEventArgs;
  // Forward declaring type: MessageEventArgs
  class MessageEventArgs;
  // Forward declaring type: ErrorEventArgs
  class ErrorEventArgs;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: Thread
  class Thread;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: Light
  class Light;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Cubemap
  class Cubemap;
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: ShaderVariantCollection
  class ShaderVariantCollection;
  // Forward declaring type: Sprite
  class Sprite;
  // Skipping declaration: Vector3 because it is already included!
  // Skipping declaration: Quaternion because it is already included!
  // Forward declaring type: Color
  struct Color;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: Funly::SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: TimeOfDayController
  class TimeOfDayController;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: Queue
  class Queue;
  // Skipping declaration: IEnumerator because it is already included!
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRScreenFade
  class OVRScreenFade;
  // Forward declaring type: PhysicsInteractable
  class PhysicsInteractable;
}
// Forward declaring namespace: HighlightPlus
namespace HighlightPlus {
  // Forward declaring type: HighlightProfile
  class HighlightProfile;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: StreamWriter
  class StreamWriter;
  // Forward declaring type: BinaryReader
  class BinaryReader;
  // Forward declaring type: BinaryWriter
  class BinaryWriter;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: UnhandledExceptionEventArgs
  class UnhandledExceptionEventArgs;
  // Forward declaring type: EventArgs
  class EventArgs;
  // Forward declaring type: Action
  class Action;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: OrbusNetManager
  class OrbusNetManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::OrbusNetManager);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::OrbusNetManager*, "MagicalActual", "OrbusNetManager");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x3C0
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.OrbusNetManager
  // [TokenAttribute] Offset: FFFFFFFF
  class OrbusNetManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::OrbusNetManager::FogInfo
    struct FogInfo;
    // Nested type: ::MagicalActual::OrbusNetManager::$FinishLoadingPool$d__189
    class $FinishLoadingPool$d__189;
    // Nested type: ::MagicalActual::OrbusNetManager::$AndroidLoadLevel$d__200
    class $AndroidLoadLevel$d__200;
    // Nested type: ::MagicalActual::OrbusNetManager::$AsyncWarmupScene$d__205
    class $AsyncWarmupScene$d__205;
    // Nested type: ::MagicalActual::OrbusNetManager::$$c
    class $$c;
    // Nested type: ::MagicalActual::OrbusNetManager::$sharpConnectionError$d__209
    class $sharpConnectionError$d__209;
    // Nested type: ::MagicalActual::OrbusNetManager::$handleTextMessage$d__210
    class $handleTextMessage$d__210;
    // Nested type: ::MagicalActual::OrbusNetManager::$handleBinaryMessage$d__211
    class $handleBinaryMessage$d__211;
    // Nested type: ::MagicalActual::OrbusNetManager::$$c__DisplayClass256_0
    class $$c__DisplayClass256_0;
    // Nested type: ::MagicalActual::OrbusNetManager::$doReturnToPool$d__281
    class $doReturnToPool$d__281;
    public:
    // private WebSocketSharp.WebSocket BGCDEILECMG
    // Size: 0x8
    // Offset: 0x18
    ::WebSocketSharp::WebSocket* BGCDEILECMG;
    // Field size check
    static_assert(sizeof(::WebSocketSharp::WebSocket*) == 0x8);
    // private System.Boolean KBMHPGPGIIA
    // Size: 0x1
    // Offset: 0x20
    bool KBMHPGPGIIA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: KBMHPGPGIIA and: EJJHNCDINIL
    char __padding1[0x3] = {};
    // private MagicalActual.connectionProtocol EJJHNCDINIL
    // Size: 0x4
    // Offset: 0x24
    ::MagicalActual::connectionProtocol EJJHNCDINIL;
    // Field size check
    static_assert(sizeof(::MagicalActual::connectionProtocol) == 0x4);
    // private System.Threading.Thread HMDMJKAAPKD
    // Size: 0x8
    // Offset: 0x28
    ::System::Threading::Thread* HMDMJKAAPKD;
    // Field size check
    static_assert(sizeof(::System::Threading::Thread*) == 0x8);
    // private System.Threading.Thread FHMHJGHHHJL
    // Size: 0x8
    // Offset: 0x30
    ::System::Threading::Thread* FHMHJGHHHJL;
    // Field size check
    static_assert(sizeof(::System::Threading::Thread*) == 0x8);
    // private System.Boolean CFKMAHCLOAO
    // Size: 0x1
    // Offset: 0x38
    bool CFKMAHCLOAO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean MLDDKDHBKNJ
    // Size: 0x1
    // Offset: 0x39
    bool MLDDKDHBKNJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: MLDDKDHBKNJ and: CPDOPKLGFOC
    char __padding6[0x6] = {};
    // private ENet.Host CPDOPKLGFOC
    // Size: 0x8
    // Offset: 0x40
    ::ENet::Host CPDOPKLGFOC;
    // Field size check
    static_assert(sizeof(::ENet::Host) == 0x8);
    // private ENet.Peer PCGAAFEJNLM
    // Size: 0x8
    // Offset: 0x48
    ::ENet::Peer PCGAAFEJNLM;
    // Field size check
    static_assert(sizeof(::ENet::Peer) == 0x8);
    // private System.Boolean MLHHMODNJDD
    // Size: 0x1
    // Offset: 0x50
    bool MLHHMODNJDD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: MLHHMODNJDD and: currentPlayer
    char __padding9[0x7] = {};
    // public MagicalActual.PlayerCharacter currentPlayer
    // Size: 0x8
    // Offset: 0x58
    ::MagicalActual::PlayerCharacter* currentPlayer;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerCharacter*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE49C8
    // private MagicalActual.PlayerEntity <FLGKCFDJJFG>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::MagicalActual::PlayerEntity* FLGKCFDJJFG;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerEntity*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE49D8
    // private MagicalActual.BoxCuller <AEAHOOIBOLP>k__BackingField
    // Size: 0x8
    // Offset: 0x68
    ::MagicalActual::BoxCuller* AEAHOOIBOLP;
    // Field size check
    static_assert(sizeof(::MagicalActual::BoxCuller*) == 0x8);
    // private UnityEngine.GameObject GLIPBBDKBFF
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::GameObject* GLIPBBDKBFF;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject JJDMDLCCPDD
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::GameObject* JJDMDLCCPDD;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject DEEKAEBCEIB
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::GameObject* DEEKAEBCEIB;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject NDMMAKECNBL
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::GameObject* NDMMAKECNBL;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.UInt16 MKHBBLCAEKE
    // Size: 0x2
    // Offset: 0x90
    uint16_t MKHBBLCAEKE;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // Padding between fields: MKHBBLCAEKE and: OJGKJMALGOE
    char __padding17[0x2] = {};
    // private System.Int32 OJGKJMALGOE
    // Size: 0x4
    // Offset: 0x94
    int OJGKJMALGOE;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Byte currentFrameTiming
    // Size: 0x1
    // Offset: 0x98
    uint8_t currentFrameTiming;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: currentFrameTiming and: CAAKGPNCNPH
    char __padding19[0x3] = {};
    // private System.Int32 CAAKGPNCNPH
    // Size: 0x4
    // Offset: 0x9C
    int CAAKGPNCNPH;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Collections.Generic.List`1<MagicalActual.DebugBox> AOKHPKBGHHM
    // Size: 0x8
    // Offset: 0xA0
    ::System::Collections::Generic::List_1<::MagicalActual::DebugBox*>* AOKHPKBGHHM;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::MagicalActual::DebugBox*>*) == 0x8);
    // private System.Collections.Generic.List`1<MagicalActual.NetEntity> HGFHOIPDOAE
    // Size: 0x8
    // Offset: 0xA8
    ::System::Collections::Generic::List_1<::MagicalActual::NetEntity*>* HGFHOIPDOAE;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::MagicalActual::NetEntity*>*) == 0x8);
    // private System.Single OFCMIAIDMKK
    // Size: 0x4
    // Offset: 0xB0
    float OFCMIAIDMKK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single AJLNEHINEKD
    // Size: 0x4
    // Offset: 0xB4
    float AJLNEHINEKD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 CLNPOMCKOHO
    // Size: 0x4
    // Offset: 0xB8
    int CLNPOMCKOHO;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single CJLJIFLFFID
    // Size: 0x4
    // Offset: 0xBC
    float CJLJIFLFFID;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MKANKHGHGGL
    // Size: 0x4
    // Offset: 0xC0
    float MKANKHGHGGL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: MKANKHGHGGL and: FNAOFKALOPC
    char __padding27[0x4] = {};
    // private System.Double FNAOFKALOPC
    // Size: 0x8
    // Offset: 0xC8
    double FNAOFKALOPC;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private System.Single OGLMPBOLIDH
    // Size: 0x4
    // Offset: 0xD0
    float OGLMPBOLIDH;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MCBMGOHODCM
    // Size: 0x4
    // Offset: 0xD4
    float MCBMGOHODCM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Int32 currentClientLatency
    // Size: 0x4
    // Offset: 0xD8
    int currentClientLatency;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: currentClientLatency and: serverClockOffset
    char __padding31[0x4] = {};
    // public System.Double serverClockOffset
    // Size: 0x8
    // Offset: 0xE0
    double serverClockOffset;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private System.String OGKBBIOHGCL
    // Size: 0x8
    // Offset: 0xE8
    ::StringW OGKBBIOHGCL;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.Rect EGNDJIMAGHE
    // Size: 0x10
    // Offset: 0xF0
    ::UnityEngine::Rect EGNDJIMAGHE;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // private System.Boolean MNFIHCKLIKM
    // Size: 0x1
    // Offset: 0x100
    bool MNFIHCKLIKM;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: MNFIHCKLIKM and: CNIJGCMKFLG
    char __padding35[0x7] = {};
    // private System.String CNIJGCMKFLG
    // Size: 0x8
    // Offset: 0x108
    ::StringW CNIJGCMKFLG;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean OGPKLDKHPPJ
    // Size: 0x1
    // Offset: 0x110
    bool OGPKLDKHPPJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: OGPKLDKHPPJ and: NIEGJDIEMBO
    char __padding37[0x7] = {};
    // private System.Threading.Thread NIEGJDIEMBO
    // Size: 0x8
    // Offset: 0x118
    ::System::Threading::Thread* NIEGJDIEMBO;
    // Field size check
    static_assert(sizeof(::System::Threading::Thread*) == 0x8);
    // private System.Boolean APNPHBNCJBP
    // Size: 0x1
    // Offset: 0x120
    bool APNPHBNCJBP;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean OOAMDEIMKFK
    // Size: 0x1
    // Offset: 0x121
    bool OOAMDEIMKFK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: OOAMDEIMKFK and: PNELKGEIJDF
    char __padding40[0x2] = {};
    // private System.UInt32 PNELKGEIJDF
    // Size: 0x4
    // Offset: 0x124
    uint PNELKGEIJDF;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.Boolean ILHKGBIPLHC
    // Size: 0x1
    // Offset: 0x128
    bool ILHKGBIPLHC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: ILHKGBIPLHC and: DPGNKLAAHMF
    char __padding42[0x7] = {};
    // private System.ArraySegment`1<System.Byte>[] DPGNKLAAHMF
    // Size: 0x8
    // Offset: 0x130
    ::ArrayW<::System::ArraySegment_1<uint8_t>> DPGNKLAAHMF;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::ArraySegment_1<uint8_t>>) == 0x8);
    // private System.Byte MCALDPOCDFI
    // Size: 0x1
    // Offset: 0x138
    uint8_t MCALDPOCDFI;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Boolean NLFAMPPCEGK
    // Size: 0x1
    // Offset: 0x139
    bool NLFAMPPCEGK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: NLFAMPPCEGK and: OICKBCMBPIP
    char __padding45[0x2] = {};
    // private System.Single OICKBCMBPIP
    // Size: 0x4
    // Offset: 0x13C
    float OICKBCMBPIP;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single NKIEHMIEDBO
    // Size: 0x4
    // Offset: 0x140
    float NKIEHMIEDBO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean ICIBCNNIJJC
    // Size: 0x1
    // Offset: 0x144
    bool ICIBCNNIJJC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean MDIHHIKNBFE
    // Size: 0x1
    // Offset: 0x145
    bool MDIHHIKNBFE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: MDIHHIKNBFE and: CPNMILCHOAL
    char __padding49[0x2] = {};
    // private System.String CPNMILCHOAL
    // Size: 0x8
    // Offset: 0x148
    ::StringW CPNMILCHOAL;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String OFFNEIGCLFM
    // Size: 0x8
    // Offset: 0x150
    ::StringW OFFNEIGCLFM;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String APKOFFFDCFH
    // Size: 0x8
    // Offset: 0x158
    ::StringW APKOFFFDCFH;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean EBEBINDBBJD
    // Size: 0x1
    // Offset: 0x160
    bool EBEBINDBBJD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: EBEBINDBBJD and: AJNLDKCIDBO
    char __padding53[0x7] = {};
    // private System.Double AJNLDKCIDBO
    // Size: 0x8
    // Offset: 0x168
    double AJNLDKCIDBO;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private System.Double LAGPNFMMAFC
    // Size: 0x8
    // Offset: 0x170
    double LAGPNFMMAFC;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private System.Int32 DPCCDOGCJCI
    // Size: 0x4
    // Offset: 0x178
    int DPCCDOGCJCI;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single ECHNFIKEJHG
    // Size: 0x4
    // Offset: 0x17C
    float ECHNFIKEJHG;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MLDFMOAEAAC
    // Size: 0x4
    // Offset: 0x180
    float MLDFMOAEAAC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single DKOLKGLEOBC
    // Size: 0x4
    // Offset: 0x184
    float DKOLKGLEOBC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean EJJHDDFIBPI
    // Size: 0x1
    // Offset: 0x188
    bool EJJHDDFIBPI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: EJJHDDFIBPI and: OCMNMIDLLOF
    char __padding60[0x7] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE4A08
    // private Funly.SkyStudio.TimeOfDayController <OCMNMIDLLOF>k__BackingField
    // Size: 0x8
    // Offset: 0x190
    ::Funly::SkyStudio::TimeOfDayController* OCMNMIDLLOF;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::TimeOfDayController*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE4A18
    // private System.Boolean <HLMEMKBIILO>k__BackingField
    // Size: 0x1
    // Offset: 0x198
    bool HLMEMKBIILO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HLMEMKBIILO and: ambientOverride
    char __padding62[0x7] = {};
    // public System.String ambientOverride
    // Size: 0x8
    // Offset: 0x1A0
    ::StringW ambientOverride;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean exitingAmbientZone
    // Size: 0x1
    // Offset: 0x1A8
    bool exitingAmbientZone;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: exitingAmbientZone and: fogOverride
    char __padding64[0x7] = {};
    // public System.String fogOverride
    // Size: 0x8
    // Offset: 0x1B0
    ::StringW fogOverride;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean exitingFogZone
    // Size: 0x1
    // Offset: 0x1B8
    bool exitingFogZone;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE4A28
    // private System.Boolean <DKFCPNFBDOP>k__BackingField
    // Size: 0x1
    // Offset: 0x1B9
    bool DKFCPNFBDOP;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean steamvr_loadlock
    // Size: 0x1
    // Offset: 0x1BA
    bool steamvr_loadlock;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: steamvr_loadlock and: EJALDDLCKBL
    char __padding68[0x5] = {};
    // private UnityEngine.AsyncOperation EJALDDLCKBL
    // Size: 0x8
    // Offset: 0x1C0
    ::UnityEngine::AsyncOperation* EJALDDLCKBL;
    // Field size check
    static_assert(sizeof(::UnityEngine::AsyncOperation*) == 0x8);
    // private System.Boolean OCKEHCLPPCC
    // Size: 0x1
    // Offset: 0x1C8
    bool OCKEHCLPPCC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean BGCBAJNLPJG
    // Size: 0x1
    // Offset: 0x1C9
    bool BGCBAJNLPJG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean AMCMFHKEPFB
    // Size: 0x1
    // Offset: 0x1CA
    bool AMCMFHKEPFB;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: AMCMFHKEPFB and: BELPAKLLNKK
    char __padding72[0x1] = {};
    // private System.Single BELPAKLLNKK
    // Size: 0x4
    // Offset: 0x1CC
    float BELPAKLLNKK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single ANIMDPBPFIN
    // Size: 0x4
    // Offset: 0x1D0
    float ANIMDPBPFIN;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: ANIMDPBPFIN and: DGLCDAAPAIA
    char __padding74[0x4] = {};
    // private System.String DGLCDAAPAIA
    // Size: 0x8
    // Offset: 0x1D8
    ::StringW DGLCDAAPAIA;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String KIPDGIFLKIA
    // Size: 0x8
    // Offset: 0x1E0
    ::StringW KIPDGIFLKIA;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String EKKKCDPNEHN
    // Size: 0x8
    // Offset: 0x1E8
    ::StringW EKKKCDPNEHN;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.GameObject[] FOCAPLMMGPI
    // Size: 0x8
    // Offset: 0x1F0
    ::ArrayW<::UnityEngine::GameObject*> FOCAPLMMGPI;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE4A38
    // private UnityEngine.GameObject <GJDKHPNEMIJ>k__BackingField
    // Size: 0x8
    // Offset: 0x1F8
    ::UnityEngine::GameObject* GJDKHPNEMIJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE4A48
    // private UnityEngine.GameObject <KMGNPALOBED>k__BackingField
    // Size: 0x8
    // Offset: 0x200
    ::UnityEngine::GameObject* KMGNPALOBED;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Collections.Queue PGAKGCJEELO
    // Size: 0x8
    // Offset: 0x208
    ::System::Collections::Queue* PGAKGCJEELO;
    // Field size check
    static_assert(sizeof(::System::Collections::Queue*) == 0x8);
    // private System.Collections.Queue GBEECEILIEL
    // Size: 0x8
    // Offset: 0x210
    ::System::Collections::Queue* GBEECEILIEL;
    // Field size check
    static_assert(sizeof(::System::Collections::Queue*) == 0x8);
    // private System.Collections.Queue DLBJFKAGHNG
    // Size: 0x8
    // Offset: 0x218
    ::System::Collections::Queue* DLBJFKAGHNG;
    // Field size check
    static_assert(sizeof(::System::Collections::Queue*) == 0x8);
    // private System.Int32 HLIOCGDMJFL
    // Size: 0x4
    // Offset: 0x220
    int HLIOCGDMJFL;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean ONDCFILEHOM
    // Size: 0x1
    // Offset: 0x224
    bool ONDCFILEHOM;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: ONDCFILEHOM and: LLKGNOOJHOO
    char __padding85[0x3] = {};
    // private System.Threading.Thread LLKGNOOJHOO
    // Size: 0x8
    // Offset: 0x228
    ::System::Threading::Thread* LLKGNOOJHOO;
    // Field size check
    static_assert(sizeof(::System::Threading::Thread*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE4A58
    // private System.Boolean <MJDHOAPOEOD>k__BackingField
    // Size: 0x1
    // Offset: 0x230
    bool MJDHOAPOEOD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean connectionLoadingStall
    // Size: 0x1
    // Offset: 0x231
    bool connectionLoadingStall;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean ignoreLoadStall
    // Size: 0x1
    // Offset: 0x232
    bool ignoreLoadStall;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean noTeleporting
    // Size: 0x1
    // Offset: 0x233
    bool noTeleporting;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Single NKGJDPJJBJO
    // Size: 0x4
    // Offset: 0x234
    float NKGJDPJJBJO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single OBAJDNPOAOG
    // Size: 0x4
    // Offset: 0x238
    float OBAJDNPOAOG;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single EENPDANNJLN
    // Size: 0x4
    // Offset: 0x23C
    float EENPDANNJLN;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single PBFMMNGMCGD
    // Size: 0x4
    // Offset: 0x240
    float PBFMMNGMCGD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MIFMABCJCPL
    // Size: 0x4
    // Offset: 0x244
    float MIFMABCJCPL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single ODNMKNCLEKM
    // Size: 0x4
    // Offset: 0x248
    float ODNMKNCLEKM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean ECFAHNHAOCG
    // Size: 0x1
    // Offset: 0x24C
    bool ECFAHNHAOCG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: ECFAHNHAOCG and: IONBCLDCHCI
    char __padding97[0x3] = {};
    // private System.Single IONBCLDCHCI
    // Size: 0x4
    // Offset: 0x250
    float IONBCLDCHCI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single EDGBAHENAMI
    // Size: 0x4
    // Offset: 0x254
    float EDGBAHENAMI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean AIDICDNHMCB
    // Size: 0x1
    // Offset: 0x258
    bool AIDICDNHMCB;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: AIDICDNHMCB and: BPABFGOONOJ
    char __padding100[0x7] = {};
    // private System.Collections.Generic.List`1<System.String> BPABFGOONOJ
    // Size: 0x8
    // Offset: 0x260
    ::System::Collections::Generic::List_1<::StringW>* BPABFGOONOJ;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public OVRScreenFade screenFader
    // Size: 0x8
    // Offset: 0x268
    ::GlobalNamespace::OVRScreenFade* screenFader;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OVRScreenFade*) == 0x8);
    // public UnityEngine.Texture2D defaultLoadingScreen
    // Size: 0x8
    // Offset: 0x270
    ::UnityEngine::Texture2D* defaultLoadingScreen;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // public System.Boolean expectingHardTransition
    // Size: 0x1
    // Offset: 0x278
    bool expectingHardTransition;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean lastTransitionBetweenSceneFiles
    // Size: 0x1
    // Offset: 0x279
    bool lastTransitionBetweenSceneFiles;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: lastTransitionBetweenSceneFiles and: MBDBNNDJPIF
    char __padding105[0x6] = {};
    // private System.Collections.Generic.Dictionary`2<System.String,PhysicsInteractable> MBDBNNDJPIF
    // Size: 0x8
    // Offset: 0x280
    ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::PhysicsInteractable*>* MBDBNNDJPIF;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::PhysicsInteractable*>*) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> preloadedPrefabs
    // Size: 0x8
    // Offset: 0x288
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>* preloadedPrefabs;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE4AA8
    // private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<UnityEngine.GameObject>> <OHCAHOPFFNM>k__BackingField
    // Size: 0x8
    // Offset: 0x290
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*>* OHCAHOPFFNM;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE4AB8
    // private System.Collections.Generic.List`1<System.String> <DIDAMKHOMMB>k__BackingField
    // Size: 0x8
    // Offset: 0x298
    ::System::Collections::Generic::List_1<::StringW>* DIDAMKHOMMB;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private System.Collections.Generic.List`1<System.String> NGEFDIDCJKO
    // Size: 0x8
    // Offset: 0x2A0
    ::System::Collections::Generic::List_1<::StringW>* NGEFDIDCJKO;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private System.Boolean IACGMFNKBCD
    // Size: 0x1
    // Offset: 0x2A8
    bool IACGMFNKBCD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IACGMFNKBCD and: defaultColorGrade
    char __padding111[0x7] = {};
    // public UnityEngine.Texture defaultColorGrade
    // Size: 0x8
    // Offset: 0x2B0
    ::UnityEngine::Texture* defaultColorGrade;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture*) == 0x8);
    // public UnityEngine.Texture loresightColorGrade
    // Size: 0x8
    // Offset: 0x2B8
    ::UnityEngine::Texture* loresightColorGrade;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture*) == 0x8);
    // public UnityEngine.Light undergroundDirectionalLight
    // Size: 0x8
    // Offset: 0x2C0
    ::UnityEngine::Light* undergroundDirectionalLight;
    // Field size check
    static_assert(sizeof(::UnityEngine::Light*) == 0x8);
    // public UnityEngine.GameObject graphyObject
    // Size: 0x8
    // Offset: 0x2C8
    ::UnityEngine::GameObject* graphyObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean IDEOHJDKNBF
    // Size: 0x1
    // Offset: 0x2D0
    bool IDEOHJDKNBF;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IDEOHJDKNBF and: DPFLHCHLEMO
    char __padding116[0x3] = {};
    // private System.Single DPFLHCHLEMO
    // Size: 0x4
    // Offset: 0x2D4
    float DPFLHCHLEMO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean CDOKJLFKIAD
    // Size: 0x1
    // Offset: 0x2D8
    bool CDOKJLFKIAD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: CDOKJLFKIAD and: dungeonSkybox
    char __padding118[0x7] = {};
    // public UnityEngine.Material dungeonSkybox
    // Size: 0x8
    // Offset: 0x2E0
    ::UnityEngine::Material* dungeonSkybox;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material dungeonDomeSkybox
    // Size: 0x8
    // Offset: 0x2E8
    ::UnityEngine::Material* dungeonDomeSkybox;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private System.Byte KNIBEHHKIGC
    // Size: 0x1
    // Offset: 0x2F0
    uint8_t KNIBEHHKIGC;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: KNIBEHHKIGC and: AOLFHEJIALO
    char __padding121[0x3] = {};
    // private System.Single AOLFHEJIALO
    // Size: 0x4
    // Offset: 0x2F4
    float AOLFHEJIALO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.Cubemap mobileSkyboxCubemap
    // Size: 0x8
    // Offset: 0x2F8
    ::UnityEngine::Cubemap* mobileSkyboxCubemap;
    // Field size check
    static_assert(sizeof(::UnityEngine::Cubemap*) == 0x8);
    // public UnityEngine.Camera skyboxCamera
    // Size: 0x8
    // Offset: 0x300
    ::UnityEngine::Camera* skyboxCamera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // public UnityEngine.Material complicatedSkyboxMaterial
    // Size: 0x8
    // Offset: 0x308
    ::UnityEngine::Material* complicatedSkyboxMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material simpleSkyboxMaterial
    // Size: 0x8
    // Offset: 0x310
    ::UnityEngine::Material* simpleSkyboxMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private System.Collections.Generic.List`1<System.String> MNJNHHMMJIM
    // Size: 0x8
    // Offset: 0x318
    ::System::Collections::Generic::List_1<::StringW>* MNJNHHMMJIM;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private System.Boolean HIBGFOOPEJN
    // Size: 0x1
    // Offset: 0x320
    bool HIBGFOOPEJN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HIBGFOOPEJN and: barIconMeshes
    char __padding128[0x7] = {};
    // public UnityEngine.Mesh[] barIconMeshes
    // Size: 0x8
    // Offset: 0x328
    ::ArrayW<::UnityEngine::Mesh*> barIconMeshes;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Mesh*>) == 0x8);
    // public UnityEngine.GameObject barDifficultyPrefab
    // Size: 0x8
    // Offset: 0x330
    ::UnityEngine::GameObject* barDifficultyPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single MNMCEKADMAN
    // Size: 0x4
    // Offset: 0x338
    float MNMCEKADMAN;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single LMNLKOFOMGG
    // Size: 0x4
    // Offset: 0x33C
    float LMNLKOFOMGG;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean waitingOnLevelLoadToComplete
    // Size: 0x1
    // Offset: 0x340
    bool waitingOnLevelLoadToComplete;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean waitingOnInitialPositionToBroadcast
    // Size: 0x1
    // Offset: 0x341
    bool waitingOnInitialPositionToBroadcast;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean waitingOnSubSceneLoad
    // Size: 0x1
    // Offset: 0x342
    bool waitingOnSubSceneLoad;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean triggeredLevelLoadFade
    // Size: 0x1
    // Offset: 0x343
    bool triggeredLevelLoadFade;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Single timeSinceReadyForFadeIn
    // Size: 0x4
    // Offset: 0x344
    float timeSinceReadyForFadeIn;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean movementLock
    // Size: 0x1
    // Offset: 0x348
    bool movementLock;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: movementLock and: HEAMDPAGCGH
    char __padding138[0x3] = {};
    // private System.Single HEAMDPAGCGH
    // Size: 0x4
    // Offset: 0x34C
    float HEAMDPAGCGH;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.GameObject preloadCamera
    // Size: 0x8
    // Offset: 0x350
    ::UnityEngine::GameObject* preloadCamera;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject usedEffectsPrefab
    // Size: 0x8
    // Offset: 0x358
    ::UnityEngine::GameObject* usedEffectsPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public HighlightPlus.HighlightProfile defaultHighlightProfile
    // Size: 0x8
    // Offset: 0x360
    ::HighlightPlus::HighlightProfile* defaultHighlightProfile;
    // Field size check
    static_assert(sizeof(::HighlightPlus::HighlightProfile*) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> classModules
    // Size: 0x8
    // Offset: 0x368
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>* classModules;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*) == 0x8);
    // public UnityEngine.ShaderVariantCollection defaultShaderCollection
    // Size: 0x8
    // Offset: 0x370
    ::UnityEngine::ShaderVariantCollection* defaultShaderCollection;
    // Field size check
    static_assert(sizeof(::UnityEngine::ShaderVariantCollection*) == 0x8);
    // private System.Single FDOCDFEBAJJ
    // Size: 0x4
    // Offset: 0x378
    float FDOCDFEBAJJ;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: FDOCDFEBAJJ and: LGBBGBNIGIH
    char __padding145[0x4] = {};
    // private System.IO.StreamWriter LGBBGBNIGIH
    // Size: 0x8
    // Offset: 0x380
    ::System::IO::StreamWriter* LGBBGBNIGIH;
    // Field size check
    static_assert(sizeof(::System::IO::StreamWriter*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.UInt16,MagicalActual.NetEntity> NMDMGMMFEDH
    // Size: 0x8
    // Offset: 0x388
    ::System::Collections::Generic::Dictionary_2<uint16_t, ::MagicalActual::NetEntity*>* NMDMGMMFEDH;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint16_t, ::MagicalActual::NetEntity*>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.Int32,MagicalActual.PrefabData> LMEHLCGJOOE
    // Size: 0x8
    // Offset: 0x390
    ::System::Collections::Generic::Dictionary_2<int, ::MagicalActual::PrefabData*>* LMEHLCGJOOE;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, ::MagicalActual::PrefabData*>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.Int32,System.String> GJJAAFBFGBI
    // Size: 0x8
    // Offset: 0x398
    ::System::Collections::Generic::Dictionary_2<int, ::StringW>* GJJAAFBFGBI;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<int, ::StringW>*) == 0x8);
    // public UnityEngine.Sprite[] statusIcons
    // Size: 0x8
    // Offset: 0x3A0
    ::ArrayW<::UnityEngine::Sprite*> statusIcons;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Sprite*>) == 0x8);
    // public System.UInt16 OTHERPLAYER_ENTITY_TYPE
    // Size: 0x2
    // Offset: 0x3A8
    uint16_t OTHERPLAYER_ENTITY_TYPE;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // Padding between fields: OTHERPLAYER_ENTITY_TYPE and: defaultMaterial
    char __padding151[0x6] = {};
    // public UnityEngine.Material defaultMaterial
    // Size: 0x8
    // Offset: 0x3B0
    ::UnityEngine::Material* defaultMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public System.Boolean isRaining
    // Size: 0x1
    // Offset: 0x3B8
    bool isRaining;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isRaining and: APNJKEHEDOM
    char __padding153[0x3] = {};
    // private System.Int32 APNJKEHEDOM
    // Size: 0x4
    // Offset: 0x3BC
    int APNJKEHEDOM;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static private MagicalActual.OrbusNetManager MMECOAJKONB
    static ::MagicalActual::OrbusNetManager* _get_MMECOAJKONB();
    // Set static field: static private MagicalActual.OrbusNetManager MMECOAJKONB
    static void _set_MMECOAJKONB(::MagicalActual::OrbusNetManager* value);
    // Get instance field reference: private WebSocketSharp.WebSocket BGCDEILECMG
    [[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocket*& dyn_BGCDEILECMG();
    // Get instance field reference: private System.Boolean KBMHPGPGIIA
    [[deprecated("Use field access instead!")]] bool& dyn_KBMHPGPGIIA();
    // Get instance field reference: private MagicalActual.connectionProtocol EJJHNCDINIL
    [[deprecated("Use field access instead!")]] ::MagicalActual::connectionProtocol& dyn_EJJHNCDINIL();
    // Get instance field reference: private System.Threading.Thread HMDMJKAAPKD
    [[deprecated("Use field access instead!")]] ::System::Threading::Thread*& dyn_HMDMJKAAPKD();
    // Get instance field reference: private System.Threading.Thread FHMHJGHHHJL
    [[deprecated("Use field access instead!")]] ::System::Threading::Thread*& dyn_FHMHJGHHHJL();
    // Get instance field reference: private System.Boolean CFKMAHCLOAO
    [[deprecated("Use field access instead!")]] bool& dyn_CFKMAHCLOAO();
    // Get instance field reference: private System.Boolean MLDDKDHBKNJ
    [[deprecated("Use field access instead!")]] bool& dyn_MLDDKDHBKNJ();
    // Get instance field reference: private ENet.Host CPDOPKLGFOC
    [[deprecated("Use field access instead!")]] ::ENet::Host& dyn_CPDOPKLGFOC();
    // Get instance field reference: private ENet.Peer PCGAAFEJNLM
    [[deprecated("Use field access instead!")]] ::ENet::Peer& dyn_PCGAAFEJNLM();
    // Get instance field reference: private System.Boolean MLHHMODNJDD
    [[deprecated("Use field access instead!")]] bool& dyn_MLHHMODNJDD();
    // Get instance field reference: public MagicalActual.PlayerCharacter currentPlayer
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerCharacter*& dyn_currentPlayer();
    // Get instance field reference: private MagicalActual.PlayerEntity <FLGKCFDJJFG>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerEntity*& dyn_$FLGKCFDJJFG$k__BackingField();
    // Get instance field reference: private MagicalActual.BoxCuller <AEAHOOIBOLP>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::BoxCuller*& dyn_$AEAHOOIBOLP$k__BackingField();
    // Get instance field reference: private UnityEngine.GameObject GLIPBBDKBFF
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_GLIPBBDKBFF();
    // Get instance field reference: private UnityEngine.GameObject JJDMDLCCPDD
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_JJDMDLCCPDD();
    // Get instance field reference: private UnityEngine.GameObject DEEKAEBCEIB
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_DEEKAEBCEIB();
    // Get instance field reference: private UnityEngine.GameObject NDMMAKECNBL
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_NDMMAKECNBL();
    // Get instance field reference: private System.UInt16 MKHBBLCAEKE
    [[deprecated("Use field access instead!")]] uint16_t& dyn_MKHBBLCAEKE();
    // Get instance field reference: private System.Int32 OJGKJMALGOE
    [[deprecated("Use field access instead!")]] int& dyn_OJGKJMALGOE();
    // Get instance field reference: public System.Byte currentFrameTiming
    [[deprecated("Use field access instead!")]] uint8_t& dyn_currentFrameTiming();
    // Get instance field reference: private System.Int32 CAAKGPNCNPH
    [[deprecated("Use field access instead!")]] int& dyn_CAAKGPNCNPH();
    // Get instance field reference: private System.Collections.Generic.List`1<MagicalActual.DebugBox> AOKHPKBGHHM
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::MagicalActual::DebugBox*>*& dyn_AOKHPKBGHHM();
    // Get instance field reference: private System.Collections.Generic.List`1<MagicalActual.NetEntity> HGFHOIPDOAE
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::MagicalActual::NetEntity*>*& dyn_HGFHOIPDOAE();
    // Get instance field reference: private System.Single OFCMIAIDMKK
    [[deprecated("Use field access instead!")]] float& dyn_OFCMIAIDMKK();
    // Get instance field reference: private System.Single AJLNEHINEKD
    [[deprecated("Use field access instead!")]] float& dyn_AJLNEHINEKD();
    // Get instance field reference: private System.Int32 CLNPOMCKOHO
    [[deprecated("Use field access instead!")]] int& dyn_CLNPOMCKOHO();
    // Get instance field reference: private System.Single CJLJIFLFFID
    [[deprecated("Use field access instead!")]] float& dyn_CJLJIFLFFID();
    // Get instance field reference: private System.Single MKANKHGHGGL
    [[deprecated("Use field access instead!")]] float& dyn_MKANKHGHGGL();
    // Get instance field reference: private System.Double FNAOFKALOPC
    [[deprecated("Use field access instead!")]] double& dyn_FNAOFKALOPC();
    // Get instance field reference: private System.Single OGLMPBOLIDH
    [[deprecated("Use field access instead!")]] float& dyn_OGLMPBOLIDH();
    // Get instance field reference: private System.Single MCBMGOHODCM
    [[deprecated("Use field access instead!")]] float& dyn_MCBMGOHODCM();
    // Get instance field reference: public System.Int32 currentClientLatency
    [[deprecated("Use field access instead!")]] int& dyn_currentClientLatency();
    // Get instance field reference: public System.Double serverClockOffset
    [[deprecated("Use field access instead!")]] double& dyn_serverClockOffset();
    // Get instance field reference: private System.String OGKBBIOHGCL
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OGKBBIOHGCL();
    // Get instance field reference: private UnityEngine.Rect EGNDJIMAGHE
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_EGNDJIMAGHE();
    // Get instance field reference: private System.Boolean MNFIHCKLIKM
    [[deprecated("Use field access instead!")]] bool& dyn_MNFIHCKLIKM();
    // Get instance field reference: private System.String CNIJGCMKFLG
    [[deprecated("Use field access instead!")]] ::StringW& dyn_CNIJGCMKFLG();
    // Get instance field reference: private System.Boolean OGPKLDKHPPJ
    [[deprecated("Use field access instead!")]] bool& dyn_OGPKLDKHPPJ();
    // Get instance field reference: private System.Threading.Thread NIEGJDIEMBO
    [[deprecated("Use field access instead!")]] ::System::Threading::Thread*& dyn_NIEGJDIEMBO();
    // Get instance field reference: private System.Boolean APNPHBNCJBP
    [[deprecated("Use field access instead!")]] bool& dyn_APNPHBNCJBP();
    // Get instance field reference: private System.Boolean OOAMDEIMKFK
    [[deprecated("Use field access instead!")]] bool& dyn_OOAMDEIMKFK();
    // Get instance field reference: private System.UInt32 PNELKGEIJDF
    [[deprecated("Use field access instead!")]] uint& dyn_PNELKGEIJDF();
    // Get instance field reference: private System.Boolean ILHKGBIPLHC
    [[deprecated("Use field access instead!")]] bool& dyn_ILHKGBIPLHC();
    // Get instance field reference: private System.ArraySegment`1<System.Byte>[] DPGNKLAAHMF
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::ArraySegment_1<uint8_t>>& dyn_DPGNKLAAHMF();
    // Get instance field reference: private System.Byte MCALDPOCDFI
    [[deprecated("Use field access instead!")]] uint8_t& dyn_MCALDPOCDFI();
    // Get instance field reference: private System.Boolean NLFAMPPCEGK
    [[deprecated("Use field access instead!")]] bool& dyn_NLFAMPPCEGK();
    // Get instance field reference: private System.Single OICKBCMBPIP
    [[deprecated("Use field access instead!")]] float& dyn_OICKBCMBPIP();
    // Get instance field reference: private System.Single NKIEHMIEDBO
    [[deprecated("Use field access instead!")]] float& dyn_NKIEHMIEDBO();
    // Get instance field reference: private System.Boolean ICIBCNNIJJC
    [[deprecated("Use field access instead!")]] bool& dyn_ICIBCNNIJJC();
    // Get instance field reference: private System.Boolean MDIHHIKNBFE
    [[deprecated("Use field access instead!")]] bool& dyn_MDIHHIKNBFE();
    // Get instance field reference: private System.String CPNMILCHOAL
    [[deprecated("Use field access instead!")]] ::StringW& dyn_CPNMILCHOAL();
    // Get instance field reference: private System.String OFFNEIGCLFM
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OFFNEIGCLFM();
    // Get instance field reference: private System.String APKOFFFDCFH
    [[deprecated("Use field access instead!")]] ::StringW& dyn_APKOFFFDCFH();
    // Get instance field reference: private System.Boolean EBEBINDBBJD
    [[deprecated("Use field access instead!")]] bool& dyn_EBEBINDBBJD();
    // Get instance field reference: private System.Double AJNLDKCIDBO
    [[deprecated("Use field access instead!")]] double& dyn_AJNLDKCIDBO();
    // Get instance field reference: private System.Double LAGPNFMMAFC
    [[deprecated("Use field access instead!")]] double& dyn_LAGPNFMMAFC();
    // Get instance field reference: private System.Int32 DPCCDOGCJCI
    [[deprecated("Use field access instead!")]] int& dyn_DPCCDOGCJCI();
    // Get instance field reference: private System.Single ECHNFIKEJHG
    [[deprecated("Use field access instead!")]] float& dyn_ECHNFIKEJHG();
    // Get instance field reference: private System.Single MLDFMOAEAAC
    [[deprecated("Use field access instead!")]] float& dyn_MLDFMOAEAAC();
    // Get instance field reference: private System.Single DKOLKGLEOBC
    [[deprecated("Use field access instead!")]] float& dyn_DKOLKGLEOBC();
    // Get instance field reference: private System.Boolean EJJHDDFIBPI
    [[deprecated("Use field access instead!")]] bool& dyn_EJJHDDFIBPI();
    // Get instance field reference: private Funly.SkyStudio.TimeOfDayController <OCMNMIDLLOF>k__BackingField
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::TimeOfDayController*& dyn_$OCMNMIDLLOF$k__BackingField();
    // Get instance field reference: private System.Boolean <HLMEMKBIILO>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$HLMEMKBIILO$k__BackingField();
    // Get instance field reference: public System.String ambientOverride
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ambientOverride();
    // Get instance field reference: public System.Boolean exitingAmbientZone
    [[deprecated("Use field access instead!")]] bool& dyn_exitingAmbientZone();
    // Get instance field reference: public System.String fogOverride
    [[deprecated("Use field access instead!")]] ::StringW& dyn_fogOverride();
    // Get instance field reference: public System.Boolean exitingFogZone
    [[deprecated("Use field access instead!")]] bool& dyn_exitingFogZone();
    // Get instance field reference: private System.Boolean <DKFCPNFBDOP>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$DKFCPNFBDOP$k__BackingField();
    // Get instance field reference: public System.Boolean steamvr_loadlock
    [[deprecated("Use field access instead!")]] bool& dyn_steamvr_loadlock();
    // Get instance field reference: private UnityEngine.AsyncOperation EJALDDLCKBL
    [[deprecated("Use field access instead!")]] ::UnityEngine::AsyncOperation*& dyn_EJALDDLCKBL();
    // Get instance field reference: private System.Boolean OCKEHCLPPCC
    [[deprecated("Use field access instead!")]] bool& dyn_OCKEHCLPPCC();
    // Get instance field reference: private System.Boolean BGCBAJNLPJG
    [[deprecated("Use field access instead!")]] bool& dyn_BGCBAJNLPJG();
    // Get instance field reference: private System.Boolean AMCMFHKEPFB
    [[deprecated("Use field access instead!")]] bool& dyn_AMCMFHKEPFB();
    // Get instance field reference: private System.Single BELPAKLLNKK
    [[deprecated("Use field access instead!")]] float& dyn_BELPAKLLNKK();
    // Get instance field reference: private System.Single ANIMDPBPFIN
    [[deprecated("Use field access instead!")]] float& dyn_ANIMDPBPFIN();
    // Get instance field reference: private System.String DGLCDAAPAIA
    [[deprecated("Use field access instead!")]] ::StringW& dyn_DGLCDAAPAIA();
    // Get instance field reference: private System.String KIPDGIFLKIA
    [[deprecated("Use field access instead!")]] ::StringW& dyn_KIPDGIFLKIA();
    // Get instance field reference: private System.String EKKKCDPNEHN
    [[deprecated("Use field access instead!")]] ::StringW& dyn_EKKKCDPNEHN();
    // Get instance field reference: private UnityEngine.GameObject[] FOCAPLMMGPI
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_FOCAPLMMGPI();
    // Get instance field reference: private UnityEngine.GameObject <GJDKHPNEMIJ>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_$GJDKHPNEMIJ$k__BackingField();
    // Get instance field reference: private UnityEngine.GameObject <KMGNPALOBED>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_$KMGNPALOBED$k__BackingField();
    // Get instance field reference: private System.Collections.Queue PGAKGCJEELO
    [[deprecated("Use field access instead!")]] ::System::Collections::Queue*& dyn_PGAKGCJEELO();
    // Get instance field reference: private System.Collections.Queue GBEECEILIEL
    [[deprecated("Use field access instead!")]] ::System::Collections::Queue*& dyn_GBEECEILIEL();
    // Get instance field reference: private System.Collections.Queue DLBJFKAGHNG
    [[deprecated("Use field access instead!")]] ::System::Collections::Queue*& dyn_DLBJFKAGHNG();
    // Get instance field reference: private System.Int32 HLIOCGDMJFL
    [[deprecated("Use field access instead!")]] int& dyn_HLIOCGDMJFL();
    // Get instance field reference: private System.Boolean ONDCFILEHOM
    [[deprecated("Use field access instead!")]] bool& dyn_ONDCFILEHOM();
    // Get instance field reference: private System.Threading.Thread LLKGNOOJHOO
    [[deprecated("Use field access instead!")]] ::System::Threading::Thread*& dyn_LLKGNOOJHOO();
    // Get instance field reference: private System.Boolean <MJDHOAPOEOD>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$MJDHOAPOEOD$k__BackingField();
    // Get instance field reference: public System.Boolean connectionLoadingStall
    [[deprecated("Use field access instead!")]] bool& dyn_connectionLoadingStall();
    // Get instance field reference: public System.Boolean ignoreLoadStall
    [[deprecated("Use field access instead!")]] bool& dyn_ignoreLoadStall();
    // Get instance field reference: public System.Boolean noTeleporting
    [[deprecated("Use field access instead!")]] bool& dyn_noTeleporting();
    // Get instance field reference: private System.Single NKGJDPJJBJO
    [[deprecated("Use field access instead!")]] float& dyn_NKGJDPJJBJO();
    // Get instance field reference: private System.Single OBAJDNPOAOG
    [[deprecated("Use field access instead!")]] float& dyn_OBAJDNPOAOG();
    // Get instance field reference: private System.Single EENPDANNJLN
    [[deprecated("Use field access instead!")]] float& dyn_EENPDANNJLN();
    // Get instance field reference: private System.Single PBFMMNGMCGD
    [[deprecated("Use field access instead!")]] float& dyn_PBFMMNGMCGD();
    // Get instance field reference: private System.Single MIFMABCJCPL
    [[deprecated("Use field access instead!")]] float& dyn_MIFMABCJCPL();
    // Get instance field reference: private System.Single ODNMKNCLEKM
    [[deprecated("Use field access instead!")]] float& dyn_ODNMKNCLEKM();
    // Get instance field reference: private System.Boolean ECFAHNHAOCG
    [[deprecated("Use field access instead!")]] bool& dyn_ECFAHNHAOCG();
    // Get instance field reference: private System.Single IONBCLDCHCI
    [[deprecated("Use field access instead!")]] float& dyn_IONBCLDCHCI();
    // Get instance field reference: private System.Single EDGBAHENAMI
    [[deprecated("Use field access instead!")]] float& dyn_EDGBAHENAMI();
    // Get instance field reference: private System.Boolean AIDICDNHMCB
    [[deprecated("Use field access instead!")]] bool& dyn_AIDICDNHMCB();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> BPABFGOONOJ
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_BPABFGOONOJ();
    // Get instance field reference: public OVRScreenFade screenFader
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OVRScreenFade*& dyn_screenFader();
    // Get instance field reference: public UnityEngine.Texture2D defaultLoadingScreen
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_defaultLoadingScreen();
    // Get instance field reference: public System.Boolean expectingHardTransition
    [[deprecated("Use field access instead!")]] bool& dyn_expectingHardTransition();
    // Get instance field reference: public System.Boolean lastTransitionBetweenSceneFiles
    [[deprecated("Use field access instead!")]] bool& dyn_lastTransitionBetweenSceneFiles();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,PhysicsInteractable> MBDBNNDJPIF
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::PhysicsInteractable*>*& dyn_MBDBNNDJPIF();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> preloadedPrefabs
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*& dyn_preloadedPrefabs();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<UnityEngine.GameObject>> <OHCAHOPFFNM>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*>*& dyn_$OHCAHOPFFNM$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> <DIDAMKHOMMB>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_$DIDAMKHOMMB$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> NGEFDIDCJKO
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_NGEFDIDCJKO();
    // Get instance field reference: private System.Boolean IACGMFNKBCD
    [[deprecated("Use field access instead!")]] bool& dyn_IACGMFNKBCD();
    // Get instance field reference: public UnityEngine.Texture defaultColorGrade
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& dyn_defaultColorGrade();
    // Get instance field reference: public UnityEngine.Texture loresightColorGrade
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& dyn_loresightColorGrade();
    // Get instance field reference: public UnityEngine.Light undergroundDirectionalLight
    [[deprecated("Use field access instead!")]] ::UnityEngine::Light*& dyn_undergroundDirectionalLight();
    // Get instance field reference: public UnityEngine.GameObject graphyObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_graphyObject();
    // Get instance field reference: private System.Boolean IDEOHJDKNBF
    [[deprecated("Use field access instead!")]] bool& dyn_IDEOHJDKNBF();
    // Get instance field reference: private System.Single DPFLHCHLEMO
    [[deprecated("Use field access instead!")]] float& dyn_DPFLHCHLEMO();
    // Get instance field reference: private System.Boolean CDOKJLFKIAD
    [[deprecated("Use field access instead!")]] bool& dyn_CDOKJLFKIAD();
    // Get instance field reference: public UnityEngine.Material dungeonSkybox
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_dungeonSkybox();
    // Get instance field reference: public UnityEngine.Material dungeonDomeSkybox
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_dungeonDomeSkybox();
    // Get instance field reference: private System.Byte KNIBEHHKIGC
    [[deprecated("Use field access instead!")]] uint8_t& dyn_KNIBEHHKIGC();
    // Get instance field reference: private System.Single AOLFHEJIALO
    [[deprecated("Use field access instead!")]] float& dyn_AOLFHEJIALO();
    // Get instance field reference: public UnityEngine.Cubemap mobileSkyboxCubemap
    [[deprecated("Use field access instead!")]] ::UnityEngine::Cubemap*& dyn_mobileSkyboxCubemap();
    // Get instance field reference: public UnityEngine.Camera skyboxCamera
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_skyboxCamera();
    // Get instance field reference: public UnityEngine.Material complicatedSkyboxMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_complicatedSkyboxMaterial();
    // Get instance field reference: public UnityEngine.Material simpleSkyboxMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_simpleSkyboxMaterial();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> MNJNHHMMJIM
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_MNJNHHMMJIM();
    // Get instance field reference: private System.Boolean HIBGFOOPEJN
    [[deprecated("Use field access instead!")]] bool& dyn_HIBGFOOPEJN();
    // Get instance field reference: public UnityEngine.Mesh[] barIconMeshes
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Mesh*>& dyn_barIconMeshes();
    // Get instance field reference: public UnityEngine.GameObject barDifficultyPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_barDifficultyPrefab();
    // Get instance field reference: private System.Single MNMCEKADMAN
    [[deprecated("Use field access instead!")]] float& dyn_MNMCEKADMAN();
    // Get instance field reference: private System.Single LMNLKOFOMGG
    [[deprecated("Use field access instead!")]] float& dyn_LMNLKOFOMGG();
    // Get instance field reference: public System.Boolean waitingOnLevelLoadToComplete
    [[deprecated("Use field access instead!")]] bool& dyn_waitingOnLevelLoadToComplete();
    // Get instance field reference: public System.Boolean waitingOnInitialPositionToBroadcast
    [[deprecated("Use field access instead!")]] bool& dyn_waitingOnInitialPositionToBroadcast();
    // Get instance field reference: public System.Boolean waitingOnSubSceneLoad
    [[deprecated("Use field access instead!")]] bool& dyn_waitingOnSubSceneLoad();
    // Get instance field reference: public System.Boolean triggeredLevelLoadFade
    [[deprecated("Use field access instead!")]] bool& dyn_triggeredLevelLoadFade();
    // Get instance field reference: public System.Single timeSinceReadyForFadeIn
    [[deprecated("Use field access instead!")]] float& dyn_timeSinceReadyForFadeIn();
    // Get instance field reference: public System.Boolean movementLock
    [[deprecated("Use field access instead!")]] bool& dyn_movementLock();
    // Get instance field reference: private System.Single HEAMDPAGCGH
    [[deprecated("Use field access instead!")]] float& dyn_HEAMDPAGCGH();
    // Get instance field reference: public UnityEngine.GameObject preloadCamera
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_preloadCamera();
    // Get instance field reference: public UnityEngine.GameObject usedEffectsPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_usedEffectsPrefab();
    // Get instance field reference: public HighlightPlus.HighlightProfile defaultHighlightProfile
    [[deprecated("Use field access instead!")]] ::HighlightPlus::HighlightProfile*& dyn_defaultHighlightProfile();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> classModules
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*& dyn_classModules();
    // Get instance field reference: public UnityEngine.ShaderVariantCollection defaultShaderCollection
    [[deprecated("Use field access instead!")]] ::UnityEngine::ShaderVariantCollection*& dyn_defaultShaderCollection();
    // Get instance field reference: private System.Single FDOCDFEBAJJ
    [[deprecated("Use field access instead!")]] float& dyn_FDOCDFEBAJJ();
    // Get instance field reference: private System.IO.StreamWriter LGBBGBNIGIH
    [[deprecated("Use field access instead!")]] ::System::IO::StreamWriter*& dyn_LGBBGBNIGIH();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.UInt16,MagicalActual.NetEntity> NMDMGMMFEDH
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint16_t, ::MagicalActual::NetEntity*>*& dyn_NMDMGMMFEDH();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Int32,MagicalActual.PrefabData> LMEHLCGJOOE
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::MagicalActual::PrefabData*>*& dyn_LMEHLCGJOOE();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Int32,System.String> GJJAAFBFGBI
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::StringW>*& dyn_GJJAAFBFGBI();
    // Get instance field reference: public UnityEngine.Sprite[] statusIcons
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Sprite*>& dyn_statusIcons();
    // Get instance field reference: public System.UInt16 OTHERPLAYER_ENTITY_TYPE
    [[deprecated("Use field access instead!")]] uint16_t& dyn_OTHERPLAYER_ENTITY_TYPE();
    // Get instance field reference: public UnityEngine.Material defaultMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_defaultMaterial();
    // Get instance field reference: public System.Boolean isRaining
    [[deprecated("Use field access instead!")]] bool& dyn_isRaining();
    // Get instance field reference: private System.Int32 APNJKEHEDOM
    [[deprecated("Use field access instead!")]] int& dyn_APNJKEHEDOM();
    // public System.Void RestartAndroid()
    // Offset: 0x28AC368
    void RestartAndroid();
    // public System.Void InjectionDetected()
    // Offset: 0x28ACBAC
    void InjectionDetected();
    // private System.Void GAAEOJPGKCE()
    // Offset: 0x28ACD4C
    void GAAEOJPGKCE();
    // private System.Void Update()
    // Offset: 0x28AD054
    void Update();
    // public MagicalActual.PlayerEntity get_myPlayerEntity()
    // Offset: 0x28ADCD4
    ::MagicalActual::PlayerEntity* get_myPlayerEntity();
    // private System.Void GFHHAPBLCEI(System.Object FOIEAOKBGLM, WebSocketSharp.CloseEventArgs LMKCFANDAKH)
    // Offset: 0x28ADCDC
    void GFHHAPBLCEI(::Il2CppObject* FOIEAOKBGLM, ::WebSocketSharp::CloseEventArgs* LMKCFANDAKH);
    // private System.Collections.IEnumerator NJPPHDAGKBM(System.String JAHFDBPFMFJ, System.Single DDFLLBIHANI)
    // Offset: 0x28ADE30
    ::System::Collections::IEnumerator* NJPPHDAGKBM(::StringW JAHFDBPFMFJ, float DDFLLBIHANI);
    // private System.Void CJLLOMAMJBL(System.Int32 KEPMJFPGCEJ)
    // Offset: 0x28ADEE4
    void CJLLOMAMJBL(int KEPMJFPGCEJ);
    // public System.Void ClearPrefabPool(System.String MEKIMDBFLED)
    // Offset: 0x28ADF8C
    void ClearPrefabPool(::StringW MEKIMDBFLED);
    // public System.Void SetUIFadeLevel(System.Single IJIKCCOHDAI)
    // Offset: 0x28AE174
    void SetUIFadeLevel(float IJIKCCOHDAI);
    // private System.Void LIBIKGDNKMK()
    // Offset: 0x28AE1B4
    void LIBIKGDNKMK();
    // public System.Void ShowLoadingScreen(System.String BFDCDELLCNB)
    // Offset: 0x28AEC28
    void ShowLoadingScreen(::StringW BFDCDELLCNB);
    // public System.Void SendVoicePackets(System.Byte[] OJJMMPLCOPI, System.Boolean CHBANFJBIJI)
    // Offset: 0x28AEE34
    void SendVoicePackets(::ArrayW<uint8_t> OJJMMPLCOPI, bool CHBANFJBIJI);
    // public System.Void GoIndoors()
    // Offset: 0x28AF138
    void GoIndoors();
    // public System.Void deRegisterLocalEntity(System.UInt16 JGFIJDCMHDB)
    // Offset: 0x28AF5E0
    void deRegisterLocalEntity(uint16_t JGFIJDCMHDB);
    // private System.Void PMCCHFKAOCJ(Funly.SkyStudio.TimeOfDayController MMMEIONJJFJ)
    // Offset: 0x28AF650
    void PMCCHFKAOCJ(::Funly::SkyStudio::TimeOfDayController* MMMEIONJJFJ);
    // public System.Void .ctor()
    // Offset: 0x28AF658
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OrbusNetManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::OrbusNetManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OrbusNetManager*, creationType>()));
    }
    // private System.Void PEBBNBEABAB()
    // Offset: 0x28AD84C
    void PEBBNBEABAB();
    // private System.Void AFFDOCGOEJD()
    // Offset: 0x28BF31C
    void AFFDOCGOEJD();
    // private System.Boolean FPCBICOAPID(System.IO.BinaryReader CBNPFJGIFIH)
    // Offset: 0x28BF69C
    bool FPCBICOAPID(::System::IO::BinaryReader* CBNPFJGIFIH);
    // public System.Void DoConnect()
    // Offset: 0x28C17D4
    void DoConnect();
    // public System.Void UpdateVoipFellowshipId(System.String LEAFBKPCGPL)
    // Offset: 0x28C1E78
    void UpdateVoipFellowshipId(::StringW LEAFBKPCGPL);
    // public UnityEngine.GameObject get_castingBarPrefab()
    // Offset: 0x28C1EE4
    ::UnityEngine::GameObject* get_castingBarPrefab();
    // private System.Void GNPMECBHOGB(System.Boolean GIBBHKNOAHN)
    // Offset: 0x28C1EEC
    void GNPMECBHOGB(bool GIBBHKNOAHN);
    // private System.Void CPAMIIGJCPB()
    // Offset: 0x28C201C
    void CPAMIIGJCPB();
    // public System.Void CJNEDOCLDCM(System.UInt16 JGFIJDCMHDB)
    // Offset: 0x28C2264
    void CJNEDOCLDCM(uint16_t JGFIJDCMHDB);
    // private System.Void DGAALJNPJAJ(System.IO.BinaryWriter FFJEENIEPJH, UnityEngine.GameObject IAAEPDKEFAA)
    // Offset: 0x28C22D4
    void DGAALJNPJAJ(::System::IO::BinaryWriter* FFJEENIEPJH, ::UnityEngine::GameObject* IAAEPDKEFAA);
    // public MagicalActual.BoxCuller get_myBoxCuller()
    // Offset: 0x28C2460
    ::MagicalActual::BoxCuller* get_myBoxCuller();
    // private System.Void HBCFEOBLKMH(System.String JAHFDBPFMFJ)
    // Offset: 0x28C2468
    void HBCFEOBLKMH(::StringW JAHFDBPFMFJ);
    // private System.Collections.IEnumerator LHKMLKJIJOF(System.String JAHFDBPFMFJ)
    // Offset: 0x28C26B4
    ::System::Collections::IEnumerator* LHKMLKJIJOF(::StringW JAHFDBPFMFJ);
    // public System.Void NotifyServerOfLoadIn()
    // Offset: 0x28C04C4
    void NotifyServerOfLoadIn();
    // public MagicalActual.OrbusNetManager/FogInfo GetRealFogSettings()
    // Offset: 0x28C274C
    ::MagicalActual::OrbusNetManager::FogInfo GetRealFogSettings();
    // public System.Void UpdateVoipShard(System.String KADPNIBGHFF)
    // Offset: 0x28C2AA8
    void UpdateVoipShard(::StringW KADPNIBGHFF);
    // public System.Void WarmupPrefabPool(System.String MEKIMDBFLED, System.Int32 PBCGJNPLCGC, System.Boolean FCMCEIJOCDA)
    // Offset: 0x28C2B14
    void WarmupPrefabPool(::StringW MEKIMDBFLED, int PBCGJNPLCGC, bool FCMCEIJOCDA);
    // public UnityEngine.GameObject GetPrefabFromPool(System.String MEKIMDBFLED)
    // Offset: 0x28C3374
    ::UnityEngine::GameObject* GetPrefabFromPool(::StringW MEKIMDBFLED);
    // public System.Void UpdateColorGrading()
    // Offset: 0x28C36CC
    void UpdateColorGrading();
    // public System.Boolean get_amUnderground()
    // Offset: 0x28C3878
    bool get_amUnderground();
    // private System.Void BPGFGJOBDKD(System.String JAHFDBPFMFJ)
    // Offset: 0x28C3880
    void BPGFGJOBDKD(::StringW JAHFDBPFMFJ);
    // private System.Collections.IEnumerator CAGKHPHGMKL(UnityEngine.GameObject BOHGAPNLIPA, System.String MEKIMDBFLED)
    // Offset: 0x28C465C
    ::System::Collections::IEnumerator* CAGKHPHGMKL(::UnityEngine::GameObject* BOHGAPNLIPA, ::StringW MEKIMDBFLED);
    // private System.Void AHONMDEGMDI(System.String JAHFDBPFMFJ)
    // Offset: 0x28BEAB4
    void AHONMDEGMDI(::StringW JAHFDBPFMFJ);
    // private System.Void HPOMNNFAKEE(System.String DJBHONBNHPD)
    // Offset: 0x28C46F4
    void HPOMNNFAKEE(::StringW DJBHONBNHPD);
    // public System.Void SetFocusFadeLevel(System.Single IJIKCCOHDAI)
    // Offset: 0x28C47C0
    void SetFocusFadeLevel(float IJIKCCOHDAI);
    // private System.Void CHNOCJCEDOD()
    // Offset: 0x28AE850
    void CHNOCJCEDOD();
    // private System.Void EKNGGFANHHH(System.Object FOIEAOKBGLM, System.UnhandledExceptionEventArgs LMKCFANDAKH)
    // Offset: 0x28C49A4
    void EKNGGFANHHH(::Il2CppObject* FOIEAOKBGLM, ::System::UnhandledExceptionEventArgs* LMKCFANDAKH);
    // private System.Int32 HBAAKMBLAOF()
    // Offset: 0x28AF108
    int HBAAKMBLAOF();
    // public System.Void ForceStopPlayerMovement()
    // Offset: 0x28C4484
    void ForceStopPlayerMovement();
    // static public MagicalActual.OrbusNetManager get_Instance()
    // Offset: 0x28AEB3C
    static ::MagicalActual::OrbusNetManager* get_Instance();
    // private System.Collections.IEnumerator HNFCFFAIIHJ(System.Single HHDOLAMABBP)
    // Offset: 0x28C4A48
    ::System::Collections::IEnumerator* HNFCFFAIIHJ(float HHDOLAMABBP);
    // public UnityEngine.GameObject get_buffPrefab()
    // Offset: 0x28C4AE0
    ::UnityEngine::GameObject* get_buffPrefab();
    // private System.Void HAIMHDKNACN(UnityEngine.GameObject MMMEIONJJFJ)
    // Offset: 0x28C4AE8
    void HAIMHDKNACN(::UnityEngine::GameObject* MMMEIONJJFJ);
    // private System.Void GKILDHMEBKP(System.Collections.Generic.List`1<System.String> MMMEIONJJFJ)
    // Offset: 0x28C4AF0
    void GKILDHMEBKP(::System::Collections::Generic::List_1<::StringW>* MMMEIONJJFJ);
    // public System.String JNOFIBLMJOG(System.IO.BinaryReader CBNPFJGIFIH)
    // Offset: 0x28C4AF8
    ::StringW JNOFIBLMJOG(::System::IO::BinaryReader* CBNPFJGIFIH);
    // public System.String GetCurrentZone()
    // Offset: 0x28C4B94
    ::StringW GetCurrentZone();
    // public System.Void HideLoadingScreen(System.String BFDCDELLCNB)
    // Offset: 0x28C4B9C
    void HideLoadingScreen(::StringW BFDCDELLCNB);
    // private System.Void PJBKKHFAPMC(System.String DJBHONBNHPD)
    // Offset: 0x28C4590
    void PJBKKHFAPMC(::StringW DJBHONBNHPD);
    // public System.Void SpeedHackDetected()
    // Offset: 0x28C4FA0
    void SpeedHackDetected();
    // private System.Void EJGPBAIACCG(System.UInt16 MKHBBLCAEKE, UnityEngine.Vector3 NHFBFBMNPFC, UnityEngine.Quaternion IBLGEHNNGPC)
    // Offset: 0x28C0174
    void EJGPBAIACCG(uint16_t MKHBBLCAEKE, ::UnityEngine::Vector3 NHFBFBMNPFC, ::UnityEngine::Quaternion IBLGEHNNGPC);
    // private System.Void MDCFIDNJCGI()
    // Offset: 0x28C5044
    void MDCFIDNJCGI();
    // private System.Boolean LGIJCJPHJJH(System.UInt16 FCBBFHFDOHN, MagicalActual.NetEntity CMLIHJCOINC, System.Byte FLBAJNFJKFL, System.IO.BinaryReader CBNPFJGIFIH)
    // Offset: 0x28C517C
    bool LGIJCJPHJJH(uint16_t FCBBFHFDOHN, ::MagicalActual::NetEntity* CMLIHJCOINC, uint8_t FLBAJNFJKFL, ::System::IO::BinaryReader* CBNPFJGIFIH);
    // public System.Void activatePrimaryScene(System.String PDHLPMBEIEG)
    // Offset: 0x28C5228
    void activatePrimaryScene(::StringW PDHLPMBEIEG);
    // public MagicalActual.PlayerEntity LBBFJACPBBM()
    // Offset: 0x28C4140
    ::MagicalActual::PlayerEntity* LBBFJACPBBM();
    // private System.Void NFNBDIOFGEM()
    // Offset: 0x28AE8D4
    void NFNBDIOFGEM();
    // public System.Void OverrideAmbientLight(System.String BHHGMPLHEDC, System.Boolean IDGIDMFOCHD)
    // Offset: 0x28C57BC
    void OverrideAmbientLight(::StringW BHHGMPLHEDC, bool IDGIDMFOCHD);
    // private System.Void KGGDBKKKBHO(System.Boolean MMMEIONJJFJ)
    // Offset: 0x28C57C4
    void KGGDBKKKBHO(bool MMMEIONJJFJ);
    // private System.Void CMMCJJBGJHF(System.UInt16 JJHCJDLHBDP, System.IO.BinaryReader CBNPFJGIFIH, System.Boolean GAJOGOBGMJO)
    // Offset: 0x28C57D0
    void CMMCJJBGJHF(uint16_t JJHCJDLHBDP, ::System::IO::BinaryReader* CBNPFJGIFIH, bool GAJOGOBGMJO);
    // private System.Void HABMACELOJF(UnityEngine.GameObject MMMEIONJJFJ)
    // Offset: 0x28C596C
    void HABMACELOJF(::UnityEngine::GameObject* MMMEIONJJFJ);
    // public PhysicsInteractable findNetworkPhysicsInteractable(System.String FFDDLJKBKME)
    // Offset: 0x28C5974
    ::GlobalNamespace::PhysicsInteractable* findNetworkPhysicsInteractable(::StringW FFDDLJKBKME);
    // private System.Void OnDisable()
    // Offset: 0x28C5A1C
    void OnDisable();
    // private System.Boolean LGIJCJPHJJH(System.UInt16 FCBBFHFDOHN, System.UInt16 JJHCJDLHBDP, System.IO.BinaryReader CBNPFJGIFIH)
    // Offset: 0x28C16B4
    bool LGIJCJPHJJH(uint16_t FCBBFHFDOHN, uint16_t JJHCJDLHBDP, ::System::IO::BinaryReader* CBNPFJGIFIH);
    // public UnityEngine.Color EDMOGNAENAM()
    // Offset: 0x28C5AAC
    ::UnityEngine::Color EDMOGNAENAM();
    // private System.Void ICMBAJLKAEL(MagicalActual.PlayerEntity MMMEIONJJFJ)
    // Offset: 0x28C503C
    void ICMBAJLKAEL(::MagicalActual::PlayerEntity* MMMEIONJJFJ);
    // public System.Void LAFKIBIFJPJ(PhysicsInteractable JIFHNBEKMLF)
    // Offset: 0x28C5C80
    void LAFKIBIFJPJ(::GlobalNamespace::PhysicsInteractable* JIFHNBEKMLF);
    // private System.Void EAHAMBHJAFA(System.Object FOIEAOKBGLM, WebSocketSharp.MessageEventArgs LMKCFANDAKH)
    // Offset: 0x28C5D64
    void EAHAMBHJAFA(::Il2CppObject* FOIEAOKBGLM, ::WebSocketSharp::MessageEventArgs* LMKCFANDAKH);
    // private System.Void DKFHNMCAPNL(System.String IDPHEOLKIMJ)
    // Offset: 0x28C4284
    void DKFHNMCAPNL(::StringW IDPHEOLKIMJ);
    // public System.Collections.IEnumerator AsyncWarmupScene()
    // Offset: 0x28C5E98
    ::System::Collections::IEnumerator* AsyncWarmupScene();
    // private System.Void BCIPBOFPCGO(System.Object FOIEAOKBGLM, WebSocketSharp.ErrorEventArgs LMKCFANDAKH)
    // Offset: 0x28C5F0C
    void BCIPBOFPCGO(::Il2CppObject* FOIEAOKBGLM, ::WebSocketSharp::ErrorEventArgs* LMKCFANDAKH);
    // private System.Void OnApplicationQuit()
    // Offset: 0x28C6034
    void OnApplicationQuit();
    // public System.Void JLJAPJHJBAG(System.String KADPNIBGHFF)
    // Offset: 0x28C40D4
    void JLJAPJHJBAG(::StringW KADPNIBGHFF);
    // private System.Void Awake()
    // Offset: 0x28C6038
    void Awake();
    // public System.Void ReturnToPool(UnityEngine.GameObject BOHGAPNLIPA, System.String MEKIMDBFLED)
    // Offset: 0x28C70C4
    void ReturnToPool(::UnityEngine::GameObject* BOHGAPNLIPA, ::StringW MEKIMDBFLED);
    // private System.Void HODGGMKPAEA(System.UInt16 JJHCJDLHBDP, System.IO.BinaryReader CBNPFJGIFIH)
    // Offset: 0x28C0C9C
    void HODGGMKPAEA(uint16_t JJHCJDLHBDP, ::System::IO::BinaryReader* CBNPFJGIFIH);
    // private System.Void CPCGBJGPJAE(System.Boolean MMMEIONJJFJ)
    // Offset: 0x28C70A0
    void CPCGBJGPJAE(bool MMMEIONJJFJ);
    // private System.Void FGDHIGDPPOA(System.Collections.Generic.List`1<System.String> MMMEIONJJFJ)
    // Offset: 0x28C7284
    void FGDHIGDPPOA(::System::Collections::Generic::List_1<::StringW>* MMMEIONJJFJ);
    // private System.Void NCNININNIBE(System.Object FOIEAOKBGLM, System.EventArgs LMKCFANDAKH)
    // Offset: 0x28C728C
    void NCNININNIBE(::Il2CppObject* FOIEAOKBGLM, ::System::EventArgs* LMKCFANDAKH);
    // public System.Void WriteToSecondaryLog(System.String JAHFDBPFMFJ)
    // Offset: 0x28C730C
    void WriteToSecondaryLog(::StringW JAHFDBPFMFJ);
    // public System.Int32 getComponentIdxByName(System.String JNHGHJPDLOF)
    // Offset: 0x28C7310
    int getComponentIdxByName(::StringW JNHGHJPDLOF);
    // public System.Boolean get_isLiveGame()
    // Offset: 0x28AD0E0
    bool get_isLiveGame();
    // private System.Void HLOEBIAPFMB(System.String JAHFDBPFMFJ)
    // Offset: 0x28C4800
    void HLOEBIAPFMB(::StringW JAHFDBPFMFJ);
    // public System.Void WarmupScene()
    // Offset: 0x28C7488
    void WarmupScene();
    // private System.Void ABHHGMNCIEN(System.Single BAENIGEDLMF, System.Boolean EFEDCDABDOC, System.Boolean HLBGBEPABMI)
    // Offset: 0x28C74B4
    void ABHHGMNCIEN(float BAENIGEDLMF, bool EFEDCDABDOC, bool HLBGBEPABMI);
    // public System.String ReadString(System.IO.BinaryReader CBNPFJGIFIH)
    // Offset: 0x28AEB8C
    ::StringW ReadString(::System::IO::BinaryReader* CBNPFJGIFIH);
    // private System.Void NJFOOPJOGGE(System.Single MGLLNCHALFE)
    // Offset: 0x28C79F0
    void NJFOOPJOGGE(float MGLLNCHALFE);
    // private System.Void OnApplicationPause(System.Boolean GIBBHKNOAHN)
    // Offset: 0x28C81D4
    void OnApplicationPause(bool GIBBHKNOAHN);
    // private System.Void OGJBIIKCCBB(System.UInt16 APOGAJNBFJI, System.IO.BinaryReader CBNPFJGIFIH)
    // Offset: 0x28BFDC0
    void OGJBIIKCCBB(uint16_t APOGAJNBFJI, ::System::IO::BinaryReader* CBNPFJGIFIH);
    // public System.Void WriteString(System.IO.BinaryWriter FFJEENIEPJH, System.String GPHABJCOGLH)
    // Offset: 0x28C260C
    void WriteString(::System::IO::BinaryWriter* FFJEENIEPJH, ::StringW GPHABJCOGLH);
    // private System.Void OEOMNHFJFCH(Funly.SkyStudio.TimeOfDayController MMMEIONJJFJ)
    // Offset: 0x28C82F8
    void OEOMNHFJFCH(::Funly::SkyStudio::TimeOfDayController* MMMEIONJJFJ);
    // private System.Void Start()
    // Offset: 0x28C8300
    void Start();
    // private System.Void PNCBKCDKMBA(System.String JAHFDBPFMFJ)
    // Offset: 0x28C1E04
    void PNCBKCDKMBA(::StringW JAHFDBPFMFJ);
    // private System.Void JFDLKLMCDFM()
    // Offset: 0x28C4148
    void JFDLKLMCDFM();
    // public System.Void registerNetworkPhysicsInteractable(PhysicsInteractable JIFHNBEKMLF)
    // Offset: 0x28C87CC
    void registerNetworkPhysicsInteractable(::GlobalNamespace::PhysicsInteractable* JIFHNBEKMLF);
    // public UnityEngine.Color getDayTimeColor()
    // Offset: 0x28C88B0
    ::UnityEngine::Color getDayTimeColor();
    // private System.Void NIECCOLDEBP()
    // Offset: 0x28C1108
    void NIECCOLDEBP();
    // public System.Void OverrideFog(System.String BHHGMPLHEDC)
    // Offset: 0x28C8A74
    void OverrideFog(::StringW BHHGMPLHEDC);
    // private System.Collections.IEnumerator MAIFBMCMGPL(System.Single HHDOLAMABBP)
    // Offset: 0x28C5E00
    ::System::Collections::IEnumerator* MAIFBMCMGPL(float HHDOLAMABBP);
    // public System.Boolean get_amIndoors()
    // Offset: 0x28AF4D8
    bool get_amIndoors();
    // private System.Void JBNCBMBBNNL(System.Byte[] JAHFDBPFMFJ)
    // Offset: 0x28BE984
    void JBNCBMBBNNL(::ArrayW<uint8_t> JAHFDBPFMFJ);
    // private System.Void JHABMCGDCDJ(MagicalActual.BoxCuller MMMEIONJJFJ)
    // Offset: 0x28C70AC
    void JHABMCGDCDJ(::MagicalActual::BoxCuller* MMMEIONJJFJ);
    // public System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<UnityEngine.GameObject>> get_prefabPools()
    // Offset: 0x28AE16C
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*>* get_prefabPools();
    // public System.Void SetSunsActive(System.Boolean EHJOPINNGII)
    // Offset: 0x28AF4EC
    void SetSunsActive(bool EHJOPINNGII);
    // public System.Double currentServerTime()
    // Offset: 0x28C5C74
    double currentServerTime();
    // private System.Void LLGACDCBJGI()
    // Offset: 0x28C8A7C
    void LLGACDCBJGI();
    // private System.Void PLHCGEBKEIO(System.UInt16 EDMAIMGFAAC, System.UInt16 JJHCJDLHBDP, System.Boolean JLLNODODEGJ, System.IO.BinaryReader CBNPFJGIFIH)
    // Offset: 0x28C12B8
    void PLHCGEBKEIO(uint16_t EDMAIMGFAAC, uint16_t JJHCJDLHBDP, bool JLLNODODEGJ, ::System::IO::BinaryReader* CBNPFJGIFIH);
    // private System.Void FixedUpdate()
    // Offset: 0x28C8B84
    void FixedUpdate();
    // public System.Void KHMJIHHIMOL(System.String MEKIMDBFLED, System.Int32 PBCGJNPLCGC, System.Boolean FCMCEIJOCDA)
    // Offset: 0x28C8E40
    void KHMJIHHIMOL(::StringW MEKIMDBFLED, int PBCGJNPLCGC, bool FCMCEIJOCDA);
    // public MagicalActual.NetEntity findEntityByGuid(System.UInt16 JGFIJDCMHDB)
    // Offset: 0x28C58C4
    ::MagicalActual::NetEntity* findEntityByGuid(uint16_t JGFIJDCMHDB);
    // private System.Void PNNOHOHMNFJ(System.Object FOIEAOKBGLM, WebSocketSharp.MessageEventArgs LMKCFANDAKH)
    // Offset: 0x28C93CC
    void PNNOHOHMNFJ(::Il2CppObject* FOIEAOKBGLM, ::WebSocketSharp::MessageEventArgs* LMKCFANDAKH);
    // public System.Void FadeOut()
    // Offset: 0x28C9468
    void FadeOut();
    // private System.Void AGAIAHAGFPP(System.IO.BinaryWriter FFJEENIEPJH, UnityEngine.GameObject IAAEPDKEFAA)
    // Offset: 0x28C8048
    void AGAIAHAGFPP(::System::IO::BinaryWriter* FFJEENIEPJH, ::UnityEngine::GameObject* IAAEPDKEFAA);
    // private System.Void BLOJFLCIPKB()
    // Offset: 0x28C9504
    void BLOJFLCIPKB();
    // private System.Void KJBDIEIIAGI(UnityEngine.Vector3 NHFBFBMNPFC)
    // Offset: 0x28C96E0
    void KJBDIEIIAGI(::UnityEngine::Vector3 NHFBFBMNPFC);
    // public Funly.SkyStudio.TimeOfDayController get_myTimeController()
    // Offset: 0x28C2AA0
    ::Funly::SkyStudio::TimeOfDayController* get_myTimeController();
    // private System.Void HJIAAGDFMJO(System.Single JGKDCNPGHOC)
    // Offset: 0x28ADBEC
    void HJIAAGDFMJO(float JGKDCNPGHOC);
    // private System.Void OHOGPIGIPEJ()
    // Offset: 0x28ACC48
    void OHOGPIGIPEJ();
    // public System.Void DisconnectFromServer()
    // Offset: 0x28C98E0
    void DisconnectFromServer();
    // public System.Void PlayerAvatarInitialized(MagicalActual.PlayerAvatar EENJNFDNJBD)
    // Offset: 0x28C99E4
    void PlayerAvatarInitialized(::MagicalActual::PlayerAvatar* EENJNFDNJBD);
    // private System.Void ABNLDIHDKAC(System.UInt16 JJHCJDLHBDP, System.IO.BinaryReader CBNPFJGIFIH, System.Boolean GAJOGOBGMJO)
    // Offset: 0x28C1014
    void ABNLDIHDKAC(uint16_t JJHCJDLHBDP, ::System::IO::BinaryReader* CBNPFJGIFIH, bool GAJOGOBGMJO);
    // public System.Int32 BPKHHAIMOHH(System.String JNHGHJPDLOF)
    // Offset: 0x28C9A60
    int BPKHHAIMOHH(::StringW JNHGHJPDLOF);
    // private System.Void DJNOBOBGKNN(System.IO.BinaryReader CBNPFJGIFIH)
    // Offset: 0x28AD0E8
    void DJNOBOBGKNN(::System::IO::BinaryReader* CBNPFJGIFIH);
    // public UnityEngine.GameObject KLEFDHAFKFD()
    // Offset: 0x28C9DA8
    ::UnityEngine::GameObject* KLEFDHAFKFD();
    // public System.Void SendBinary(System.Byte[] MPNGFGEHCJH, System.Int64 ELHLBHFKGBD, System.Boolean CHBANFJBIJI, System.Byte GEACOJNOHOM)
    // Offset: 0x28ACFB4
    void SendBinary(::ArrayW<uint8_t> MPNGFGEHCJH, int64_t ELHLBHFKGBD, bool CHBANFJBIJI, uint8_t GEACOJNOHOM);
    // public System.Void ChangeBroadcastChannel(System.Int32 GKBKKPLJJJD)
    // Offset: 0x28C9DB0
    void ChangeBroadcastChannel(int GKBKKPLJJJD);
    // private System.Void LMBADOEFAJJ(System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<UnityEngine.GameObject>> MMMEIONJJFJ)
    // Offset: 0x28C70B4
    void LMBADOEFAJJ(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*>* MMMEIONJJFJ);
    // public System.Collections.IEnumerator HAJLAEMGCND()
    // Offset: 0x28CA034
    ::System::Collections::IEnumerator* HAJLAEMGCND();
    // private System.Void AADMBLPFGGH(System.UInt16 JJHCJDLHBDP, System.Boolean JLLNODODEGJ, System.IO.BinaryReader CBNPFJGIFIH)
    // Offset: 0x28C04E0
    void AADMBLPFGGH(uint16_t JJHCJDLHBDP, bool JLLNODODEGJ, ::System::IO::BinaryReader* CBNPFJGIFIH);
    // public System.Void GoOutdoors(System.Boolean JODFHDIIMOC)
    // Offset: 0x28C852C
    void GoOutdoors(bool JODFHDIIMOC);
    // private System.Void NIEDLPNIDLB(System.Boolean MMMEIONJJFJ)
    // Offset: 0x28C1E6C
    void NIEDLPNIDLB(bool MMMEIONJJFJ);
    // public System.Boolean BGOJLONMEAE()
    // Offset: 0x28CA0A8
    bool BGOJLONMEAE();
    // public System.Void LHCEHJNDPGI(System.UInt16 JGFIJDCMHDB)
    // Offset: 0x28CA130
    void LHCEHJNDPGI(uint16_t JGFIJDCMHDB);
    // private System.Void NGCGKDPPDBG()
    // Offset: 0x28CA1A0
    void NGCGKDPPDBG();
    // private System.Void IJGGOAGOFDE(System.Collections.Generic.List`1<System.String> MMMEIONJJFJ)
    // Offset: 0x28CA22C
    void IJGGOAGOFDE(::System::Collections::Generic::List_1<::StringW>* MMMEIONJJFJ);
    // public System.Void DissolveObject(UnityEngine.GameObject IAAEPDKEFAA, System.Action LILOHCCIGHI)
    // Offset: 0x28CA234
    void DissolveObject(::UnityEngine::GameObject* IAAEPDKEFAA, ::System::Action* LILOHCCIGHI);
    // public PhysicsInteractable JFDFJBFKGHH(System.String FFDDLJKBKME)
    // Offset: 0x28CA274
    ::GlobalNamespace::PhysicsInteractable* JFDFJBFKGHH(::StringW FFDDLJKBKME);
    // private System.Void GDMOOJFMFKG(System.String IDPHEOLKIMJ)
    // Offset: 0x28CA31C
    void GDMOOJFMFKG(::StringW IDPHEOLKIMJ);
    // private System.Void ICKIBCFPMAF(System.String JAHFDBPFMFJ)
    // Offset: 0x28CA604
    void ICKIBCFPMAF(::StringW JAHFDBPFMFJ);
    // public System.Void FadeIn()
    // Offset: 0x28C8D70
    void FadeIn();
    // private System.Void LBGCHPJIJKL(System.Object FOIEAOKBGLM, System.EventArgs LMKCFANDAKH)
    // Offset: 0x28CA66C
    void LBGCHPJIJKL(::Il2CppObject* FOIEAOKBGLM, ::System::EventArgs* LMKCFANDAKH);
    // private System.Collections.IEnumerator FIHENBAKNNH(System.Byte[] JAHFDBPFMFJ)
    // Offset: 0x28CA6E8
    ::System::Collections::IEnumerator* FIHENBAKNNH(::ArrayW<uint8_t> JAHFDBPFMFJ);
    // public System.Boolean isConnectionActive()
    // Offset: 0x28CA780
    bool isConnectionActive();
    // public System.Boolean KDJIBKKMFOC()
    // Offset: 0x28C96D8
    bool KDJIBKKMFOC();
    // private System.Void EHLAPNMAHCH()
    // Offset: 0x28C5568
    void EHLAPNMAHCH();
    // public MagicalActual.NetEntity registerLocalObjectAsEntity(UnityEngine.GameObject EFDIKDDMIGI, System.UInt16 JGFIJDCMHDB)
    // Offset: 0x28CA7A0
    ::MagicalActual::NetEntity* registerLocalObjectAsEntity(::UnityEngine::GameObject* EFDIKDDMIGI, uint16_t JGFIJDCMHDB);
    // public System.Void EnsurePrefabLoaded(System.String MEKIMDBFLED)
    // Offset: 0x28C30B4
    void EnsurePrefabLoaded(::StringW MEKIMDBFLED);
    // private System.Void JKAOJPPPPGI()
    // Offset: 0x28C2020
    void JKAOJPPPPGI();
    // public System.Void UpdateVoipPartyId(System.String CBGNEJEHMBB)
    // Offset: 0x28CA8C0
    void UpdateVoipPartyId(::StringW CBGNEJEHMBB);
    // private System.Void FEOEAEKCCAM()
    // Offset: 0x28C9BD8
    void FEOEAEKCCAM();
    // public System.Collections.Generic.List`1<System.String> get_prefabsToPool()
    // Offset: 0x28C70BC
    ::System::Collections::Generic::List_1<::StringW>* get_prefabsToPool();
    // public System.Collections.IEnumerator AndroidLoadLevel(System.String IDPHEOLKIMJ, System.String EOLEAOBKGEM)
    // Offset: 0x28C44E4
    ::System::Collections::IEnumerator* AndroidLoadLevel(::StringW IDPHEOLKIMJ, ::StringW EOLEAOBKGEM);
    // private System.Void CEKEGOADFLJ()
    // Offset: 0x28CA92C
    void CEKEGOADFLJ();
    // public System.Boolean AreSunsActive()
    // Offset: 0x28CAADC
    bool AreSunsActive();
    // public System.Void unRegisterNetworkPhysicsInteractable(PhysicsInteractable JIFHNBEKMLF)
    // Offset: 0x28CAB60
    void unRegisterNetworkPhysicsInteractable(::GlobalNamespace::PhysicsInteractable* JIFHNBEKMLF);
    // private System.Void GHHCNMJBNBB(System.Boolean MMMEIONJJFJ)
    // Offset: 0x28AF4E0
    void GHHCNMJBNBB(bool MMMEIONJJFJ);
  }; // MagicalActual.OrbusNetManager
  #pragma pack(pop)
  static check_size<sizeof(OrbusNetManager), 956 + sizeof(int)> __MagicalActual_OrbusNetManagerSizeCheck;
  static_assert(sizeof(OrbusNetManager) == 0x3C0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::RestartAndroid
// Il2CppName: RestartAndroid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::RestartAndroid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "RestartAndroid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::InjectionDetected
// Il2CppName: InjectionDetected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::InjectionDetected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "InjectionDetected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::GAAEOJPGKCE
// Il2CppName: GAAEOJPGKCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::GAAEOJPGKCE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "GAAEOJPGKCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::get_myPlayerEntity
// Il2CppName: get_myPlayerEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerEntity* (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::get_myPlayerEntity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "get_myPlayerEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::GFHHAPBLCEI
// Il2CppName: GFHHAPBLCEI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::Il2CppObject*, ::WebSocketSharp::CloseEventArgs*)>(&MagicalActual::OrbusNetManager::GFHHAPBLCEI)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("WebSocketSharp", "CloseEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "GFHHAPBLCEI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::NJPPHDAGKBM
// Il2CppName: NJPPHDAGKBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::OrbusNetManager::*)(::StringW, float)>(&MagicalActual::OrbusNetManager::NJPPHDAGKBM)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* DDFLLBIHANI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "NJPPHDAGKBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ, DDFLLBIHANI});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::CJLLOMAMJBL
// Il2CppName: CJLLOMAMJBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(int)>(&MagicalActual::OrbusNetManager::CJLLOMAMJBL)> {
  static const MethodInfo* get() {
    static auto* KEPMJFPGCEJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "CJLLOMAMJBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KEPMJFPGCEJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::ClearPrefabPool
// Il2CppName: ClearPrefabPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::ClearPrefabPool)> {
  static const MethodInfo* get() {
    static auto* MEKIMDBFLED = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "ClearPrefabPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MEKIMDBFLED});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::SetUIFadeLevel
// Il2CppName: SetUIFadeLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(float)>(&MagicalActual::OrbusNetManager::SetUIFadeLevel)> {
  static const MethodInfo* get() {
    static auto* IJIKCCOHDAI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "SetUIFadeLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IJIKCCOHDAI});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::LIBIKGDNKMK
// Il2CppName: LIBIKGDNKMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::LIBIKGDNKMK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "LIBIKGDNKMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::ShowLoadingScreen
// Il2CppName: ShowLoadingScreen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::ShowLoadingScreen)> {
  static const MethodInfo* get() {
    static auto* BFDCDELLCNB = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "ShowLoadingScreen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BFDCDELLCNB});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::SendVoicePackets
// Il2CppName: SendVoicePackets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::ArrayW<uint8_t>, bool)>(&MagicalActual::OrbusNetManager::SendVoicePackets)> {
  static const MethodInfo* get() {
    static auto* OJJMMPLCOPI = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* CHBANFJBIJI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "SendVoicePackets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OJJMMPLCOPI, CHBANFJBIJI});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::GoIndoors
// Il2CppName: GoIndoors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::GoIndoors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "GoIndoors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::deRegisterLocalEntity
// Il2CppName: deRegisterLocalEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(uint16_t)>(&MagicalActual::OrbusNetManager::deRegisterLocalEntity)> {
  static const MethodInfo* get() {
    static auto* JGFIJDCMHDB = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "deRegisterLocalEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JGFIJDCMHDB});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::PMCCHFKAOCJ
// Il2CppName: PMCCHFKAOCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::Funly::SkyStudio::TimeOfDayController*)>(&MagicalActual::OrbusNetManager::PMCCHFKAOCJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("Funly.SkyStudio", "TimeOfDayController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "PMCCHFKAOCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::PEBBNBEABAB
// Il2CppName: PEBBNBEABAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::PEBBNBEABAB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "PEBBNBEABAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::AFFDOCGOEJD
// Il2CppName: AFFDOCGOEJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::AFFDOCGOEJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "AFFDOCGOEJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::FPCBICOAPID
// Il2CppName: FPCBICOAPID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusNetManager::*)(::System::IO::BinaryReader*)>(&MagicalActual::OrbusNetManager::FPCBICOAPID)> {
  static const MethodInfo* get() {
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "FPCBICOAPID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBNPFJGIFIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::DoConnect
// Il2CppName: DoConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::DoConnect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "DoConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::UpdateVoipFellowshipId
// Il2CppName: UpdateVoipFellowshipId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::UpdateVoipFellowshipId)> {
  static const MethodInfo* get() {
    static auto* LEAFBKPCGPL = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "UpdateVoipFellowshipId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LEAFBKPCGPL});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::get_castingBarPrefab
// Il2CppName: get_castingBarPrefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::get_castingBarPrefab)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "get_castingBarPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::GNPMECBHOGB
// Il2CppName: GNPMECBHOGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(bool)>(&MagicalActual::OrbusNetManager::GNPMECBHOGB)> {
  static const MethodInfo* get() {
    static auto* GIBBHKNOAHN = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "GNPMECBHOGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GIBBHKNOAHN});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::CPAMIIGJCPB
// Il2CppName: CPAMIIGJCPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::CPAMIIGJCPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "CPAMIIGJCPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::CJNEDOCLDCM
// Il2CppName: CJNEDOCLDCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(uint16_t)>(&MagicalActual::OrbusNetManager::CJNEDOCLDCM)> {
  static const MethodInfo* get() {
    static auto* JGFIJDCMHDB = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "CJNEDOCLDCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JGFIJDCMHDB});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::DGAALJNPJAJ
// Il2CppName: DGAALJNPJAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::System::IO::BinaryWriter*, ::UnityEngine::GameObject*)>(&MagicalActual::OrbusNetManager::DGAALJNPJAJ)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    static auto* IAAEPDKEFAA = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "DGAALJNPJAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH, IAAEPDKEFAA});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::get_myBoxCuller
// Il2CppName: get_myBoxCuller
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::BoxCuller* (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::get_myBoxCuller)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "get_myBoxCuller", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::HBCFEOBLKMH
// Il2CppName: HBCFEOBLKMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::HBCFEOBLKMH)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "HBCFEOBLKMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::LHKMLKJIJOF
// Il2CppName: LHKMLKJIJOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::LHKMLKJIJOF)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "LHKMLKJIJOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::NotifyServerOfLoadIn
// Il2CppName: NotifyServerOfLoadIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::NotifyServerOfLoadIn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "NotifyServerOfLoadIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::GetRealFogSettings
// Il2CppName: GetRealFogSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::OrbusNetManager::FogInfo (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::GetRealFogSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "GetRealFogSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::UpdateVoipShard
// Il2CppName: UpdateVoipShard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::UpdateVoipShard)> {
  static const MethodInfo* get() {
    static auto* KADPNIBGHFF = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "UpdateVoipShard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KADPNIBGHFF});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::WarmupPrefabPool
// Il2CppName: WarmupPrefabPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW, int, bool)>(&MagicalActual::OrbusNetManager::WarmupPrefabPool)> {
  static const MethodInfo* get() {
    static auto* MEKIMDBFLED = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* PBCGJNPLCGC = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* FCMCEIJOCDA = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "WarmupPrefabPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MEKIMDBFLED, PBCGJNPLCGC, FCMCEIJOCDA});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::GetPrefabFromPool
// Il2CppName: GetPrefabFromPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::GetPrefabFromPool)> {
  static const MethodInfo* get() {
    static auto* MEKIMDBFLED = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "GetPrefabFromPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MEKIMDBFLED});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::UpdateColorGrading
// Il2CppName: UpdateColorGrading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::UpdateColorGrading)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "UpdateColorGrading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::get_amUnderground
// Il2CppName: get_amUnderground
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::get_amUnderground)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "get_amUnderground", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::BPGFGJOBDKD
// Il2CppName: BPGFGJOBDKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::BPGFGJOBDKD)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "BPGFGJOBDKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::CAGKHPHGMKL
// Il2CppName: CAGKHPHGMKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::OrbusNetManager::*)(::UnityEngine::GameObject*, ::StringW)>(&MagicalActual::OrbusNetManager::CAGKHPHGMKL)> {
  static const MethodInfo* get() {
    static auto* BOHGAPNLIPA = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* MEKIMDBFLED = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "CAGKHPHGMKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BOHGAPNLIPA, MEKIMDBFLED});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::AHONMDEGMDI
// Il2CppName: AHONMDEGMDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::AHONMDEGMDI)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "AHONMDEGMDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::HPOMNNFAKEE
// Il2CppName: HPOMNNFAKEE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::HPOMNNFAKEE)> {
  static const MethodInfo* get() {
    static auto* DJBHONBNHPD = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "HPOMNNFAKEE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DJBHONBNHPD});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::SetFocusFadeLevel
// Il2CppName: SetFocusFadeLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(float)>(&MagicalActual::OrbusNetManager::SetFocusFadeLevel)> {
  static const MethodInfo* get() {
    static auto* IJIKCCOHDAI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "SetFocusFadeLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IJIKCCOHDAI});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::CHNOCJCEDOD
// Il2CppName: CHNOCJCEDOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::CHNOCJCEDOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "CHNOCJCEDOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::EKNGGFANHHH
// Il2CppName: EKNGGFANHHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::Il2CppObject*, ::System::UnhandledExceptionEventArgs*)>(&MagicalActual::OrbusNetManager::EKNGGFANHHH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("System", "UnhandledExceptionEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "EKNGGFANHHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::HBAAKMBLAOF
// Il2CppName: HBAAKMBLAOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::HBAAKMBLAOF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "HBAAKMBLAOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::ForceStopPlayerMovement
// Il2CppName: ForceStopPlayerMovement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::ForceStopPlayerMovement)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "ForceStopPlayerMovement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::get_Instance
// Il2CppName: get_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::OrbusNetManager* (*)()>(&MagicalActual::OrbusNetManager::get_Instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "get_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::HNFCFFAIIHJ
// Il2CppName: HNFCFFAIIHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::OrbusNetManager::*)(float)>(&MagicalActual::OrbusNetManager::HNFCFFAIIHJ)> {
  static const MethodInfo* get() {
    static auto* HHDOLAMABBP = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "HNFCFFAIIHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHDOLAMABBP});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::get_buffPrefab
// Il2CppName: get_buffPrefab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::get_buffPrefab)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "get_buffPrefab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::HAIMHDKNACN
// Il2CppName: HAIMHDKNACN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::UnityEngine::GameObject*)>(&MagicalActual::OrbusNetManager::HAIMHDKNACN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "HAIMHDKNACN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::GKILDHMEBKP
// Il2CppName: GKILDHMEBKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::System::Collections::Generic::List_1<::StringW>*)>(&MagicalActual::OrbusNetManager::GKILDHMEBKP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "GKILDHMEBKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::JNOFIBLMJOG
// Il2CppName: JNOFIBLMJOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusNetManager::*)(::System::IO::BinaryReader*)>(&MagicalActual::OrbusNetManager::JNOFIBLMJOG)> {
  static const MethodInfo* get() {
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "JNOFIBLMJOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBNPFJGIFIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::GetCurrentZone
// Il2CppName: GetCurrentZone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::GetCurrentZone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "GetCurrentZone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::HideLoadingScreen
// Il2CppName: HideLoadingScreen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::HideLoadingScreen)> {
  static const MethodInfo* get() {
    static auto* BFDCDELLCNB = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "HideLoadingScreen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BFDCDELLCNB});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::PJBKKHFAPMC
// Il2CppName: PJBKKHFAPMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::PJBKKHFAPMC)> {
  static const MethodInfo* get() {
    static auto* DJBHONBNHPD = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "PJBKKHFAPMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DJBHONBNHPD});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::SpeedHackDetected
// Il2CppName: SpeedHackDetected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::SpeedHackDetected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "SpeedHackDetected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::EJGPBAIACCG
// Il2CppName: EJGPBAIACCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(uint16_t, ::UnityEngine::Vector3, ::UnityEngine::Quaternion)>(&MagicalActual::OrbusNetManager::EJGPBAIACCG)> {
  static const MethodInfo* get() {
    static auto* MKHBBLCAEKE = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* IBLGEHNNGPC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "EJGPBAIACCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MKHBBLCAEKE, NHFBFBMNPFC, IBLGEHNNGPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::MDCFIDNJCGI
// Il2CppName: MDCFIDNJCGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::MDCFIDNJCGI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "MDCFIDNJCGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::LGIJCJPHJJH
// Il2CppName: LGIJCJPHJJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusNetManager::*)(uint16_t, ::MagicalActual::NetEntity*, uint8_t, ::System::IO::BinaryReader*)>(&MagicalActual::OrbusNetManager::LGIJCJPHJJH)> {
  static const MethodInfo* get() {
    static auto* FCBBFHFDOHN = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    static auto* FLBAJNFJKFL = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "LGIJCJPHJJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FCBBFHFDOHN, CMLIHJCOINC, FLBAJNFJKFL, CBNPFJGIFIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::activatePrimaryScene
// Il2CppName: activatePrimaryScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::activatePrimaryScene)> {
  static const MethodInfo* get() {
    static auto* PDHLPMBEIEG = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "activatePrimaryScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PDHLPMBEIEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::LBBFJACPBBM
// Il2CppName: LBBFJACPBBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerEntity* (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::LBBFJACPBBM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "LBBFJACPBBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::NFNBDIOFGEM
// Il2CppName: NFNBDIOFGEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::NFNBDIOFGEM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "NFNBDIOFGEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::OverrideAmbientLight
// Il2CppName: OverrideAmbientLight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW, bool)>(&MagicalActual::OrbusNetManager::OverrideAmbientLight)> {
  static const MethodInfo* get() {
    static auto* BHHGMPLHEDC = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* IDGIDMFOCHD = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "OverrideAmbientLight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHHGMPLHEDC, IDGIDMFOCHD});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::KGGDBKKKBHO
// Il2CppName: KGGDBKKKBHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(bool)>(&MagicalActual::OrbusNetManager::KGGDBKKKBHO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "KGGDBKKKBHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::CMMCJJBGJHF
// Il2CppName: CMMCJJBGJHF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(uint16_t, ::System::IO::BinaryReader*, bool)>(&MagicalActual::OrbusNetManager::CMMCJJBGJHF)> {
  static const MethodInfo* get() {
    static auto* JJHCJDLHBDP = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    static auto* GAJOGOBGMJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "CMMCJJBGJHF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JJHCJDLHBDP, CBNPFJGIFIH, GAJOGOBGMJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::HABMACELOJF
// Il2CppName: HABMACELOJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::UnityEngine::GameObject*)>(&MagicalActual::OrbusNetManager::HABMACELOJF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "HABMACELOJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::findNetworkPhysicsInteractable
// Il2CppName: findNetworkPhysicsInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PhysicsInteractable* (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::findNetworkPhysicsInteractable)> {
  static const MethodInfo* get() {
    static auto* FFDDLJKBKME = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "findNetworkPhysicsInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFDDLJKBKME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::LGIJCJPHJJH
// Il2CppName: LGIJCJPHJJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusNetManager::*)(uint16_t, uint16_t, ::System::IO::BinaryReader*)>(&MagicalActual::OrbusNetManager::LGIJCJPHJJH)> {
  static const MethodInfo* get() {
    static auto* FCBBFHFDOHN = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* JJHCJDLHBDP = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "LGIJCJPHJJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FCBBFHFDOHN, JJHCJDLHBDP, CBNPFJGIFIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::EDMOGNAENAM
// Il2CppName: EDMOGNAENAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::EDMOGNAENAM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "EDMOGNAENAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::ICMBAJLKAEL
// Il2CppName: ICMBAJLKAEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::MagicalActual::PlayerEntity*)>(&MagicalActual::OrbusNetManager::ICMBAJLKAEL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "ICMBAJLKAEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::LAFKIBIFJPJ
// Il2CppName: LAFKIBIFJPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::GlobalNamespace::PhysicsInteractable*)>(&MagicalActual::OrbusNetManager::LAFKIBIFJPJ)> {
  static const MethodInfo* get() {
    static auto* JIFHNBEKMLF = &::il2cpp_utils::GetClassFromName("", "PhysicsInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "LAFKIBIFJPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JIFHNBEKMLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::EAHAMBHJAFA
// Il2CppName: EAHAMBHJAFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::Il2CppObject*, ::WebSocketSharp::MessageEventArgs*)>(&MagicalActual::OrbusNetManager::EAHAMBHJAFA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("WebSocketSharp", "MessageEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "EAHAMBHJAFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::DKFHNMCAPNL
// Il2CppName: DKFHNMCAPNL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::DKFHNMCAPNL)> {
  static const MethodInfo* get() {
    static auto* IDPHEOLKIMJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "DKFHNMCAPNL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IDPHEOLKIMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::AsyncWarmupScene
// Il2CppName: AsyncWarmupScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::AsyncWarmupScene)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "AsyncWarmupScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::BCIPBOFPCGO
// Il2CppName: BCIPBOFPCGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::Il2CppObject*, ::WebSocketSharp::ErrorEventArgs*)>(&MagicalActual::OrbusNetManager::BCIPBOFPCGO)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("WebSocketSharp", "ErrorEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "BCIPBOFPCGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::OnApplicationQuit
// Il2CppName: OnApplicationQuit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::OnApplicationQuit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "OnApplicationQuit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::JLJAPJHJBAG
// Il2CppName: JLJAPJHJBAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::JLJAPJHJBAG)> {
  static const MethodInfo* get() {
    static auto* KADPNIBGHFF = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "JLJAPJHJBAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KADPNIBGHFF});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::ReturnToPool
// Il2CppName: ReturnToPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::UnityEngine::GameObject*, ::StringW)>(&MagicalActual::OrbusNetManager::ReturnToPool)> {
  static const MethodInfo* get() {
    static auto* BOHGAPNLIPA = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* MEKIMDBFLED = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "ReturnToPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BOHGAPNLIPA, MEKIMDBFLED});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::HODGGMKPAEA
// Il2CppName: HODGGMKPAEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(uint16_t, ::System::IO::BinaryReader*)>(&MagicalActual::OrbusNetManager::HODGGMKPAEA)> {
  static const MethodInfo* get() {
    static auto* JJHCJDLHBDP = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "HODGGMKPAEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JJHCJDLHBDP, CBNPFJGIFIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::CPCGBJGPJAE
// Il2CppName: CPCGBJGPJAE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(bool)>(&MagicalActual::OrbusNetManager::CPCGBJGPJAE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "CPCGBJGPJAE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::FGDHIGDPPOA
// Il2CppName: FGDHIGDPPOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::System::Collections::Generic::List_1<::StringW>*)>(&MagicalActual::OrbusNetManager::FGDHIGDPPOA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "FGDHIGDPPOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::NCNININNIBE
// Il2CppName: NCNININNIBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::Il2CppObject*, ::System::EventArgs*)>(&MagicalActual::OrbusNetManager::NCNININNIBE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("System", "EventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "NCNININNIBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::WriteToSecondaryLog
// Il2CppName: WriteToSecondaryLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::WriteToSecondaryLog)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "WriteToSecondaryLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::getComponentIdxByName
// Il2CppName: getComponentIdxByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::getComponentIdxByName)> {
  static const MethodInfo* get() {
    static auto* JNHGHJPDLOF = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "getComponentIdxByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JNHGHJPDLOF});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::get_isLiveGame
// Il2CppName: get_isLiveGame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::get_isLiveGame)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "get_isLiveGame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::HLOEBIAPFMB
// Il2CppName: HLOEBIAPFMB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::HLOEBIAPFMB)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "HLOEBIAPFMB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::WarmupScene
// Il2CppName: WarmupScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::WarmupScene)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "WarmupScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::ABHHGMNCIEN
// Il2CppName: ABHHGMNCIEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(float, bool, bool)>(&MagicalActual::OrbusNetManager::ABHHGMNCIEN)> {
  static const MethodInfo* get() {
    static auto* BAENIGEDLMF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* EFEDCDABDOC = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* HLBGBEPABMI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "ABHHGMNCIEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BAENIGEDLMF, EFEDCDABDOC, HLBGBEPABMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::ReadString
// Il2CppName: ReadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusNetManager::*)(::System::IO::BinaryReader*)>(&MagicalActual::OrbusNetManager::ReadString)> {
  static const MethodInfo* get() {
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "ReadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBNPFJGIFIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::NJFOOPJOGGE
// Il2CppName: NJFOOPJOGGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(float)>(&MagicalActual::OrbusNetManager::NJFOOPJOGGE)> {
  static const MethodInfo* get() {
    static auto* MGLLNCHALFE = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "NJFOOPJOGGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MGLLNCHALFE});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::OnApplicationPause
// Il2CppName: OnApplicationPause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(bool)>(&MagicalActual::OrbusNetManager::OnApplicationPause)> {
  static const MethodInfo* get() {
    static auto* GIBBHKNOAHN = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "OnApplicationPause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GIBBHKNOAHN});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::OGJBIIKCCBB
// Il2CppName: OGJBIIKCCBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(uint16_t, ::System::IO::BinaryReader*)>(&MagicalActual::OrbusNetManager::OGJBIIKCCBB)> {
  static const MethodInfo* get() {
    static auto* APOGAJNBFJI = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "OGJBIIKCCBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{APOGAJNBFJI, CBNPFJGIFIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::WriteString
// Il2CppName: WriteString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::System::IO::BinaryWriter*, ::StringW)>(&MagicalActual::OrbusNetManager::WriteString)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    static auto* GPHABJCOGLH = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "WriteString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH, GPHABJCOGLH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::OEOMNHFJFCH
// Il2CppName: OEOMNHFJFCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::Funly::SkyStudio::TimeOfDayController*)>(&MagicalActual::OrbusNetManager::OEOMNHFJFCH)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("Funly.SkyStudio", "TimeOfDayController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "OEOMNHFJFCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::PNCBKCDKMBA
// Il2CppName: PNCBKCDKMBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::PNCBKCDKMBA)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "PNCBKCDKMBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::JFDLKLMCDFM
// Il2CppName: JFDLKLMCDFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::JFDLKLMCDFM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "JFDLKLMCDFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::registerNetworkPhysicsInteractable
// Il2CppName: registerNetworkPhysicsInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::GlobalNamespace::PhysicsInteractable*)>(&MagicalActual::OrbusNetManager::registerNetworkPhysicsInteractable)> {
  static const MethodInfo* get() {
    static auto* JIFHNBEKMLF = &::il2cpp_utils::GetClassFromName("", "PhysicsInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "registerNetworkPhysicsInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JIFHNBEKMLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::getDayTimeColor
// Il2CppName: getDayTimeColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::getDayTimeColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "getDayTimeColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::NIECCOLDEBP
// Il2CppName: NIECCOLDEBP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::NIECCOLDEBP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "NIECCOLDEBP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::OverrideFog
// Il2CppName: OverrideFog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::OverrideFog)> {
  static const MethodInfo* get() {
    static auto* BHHGMPLHEDC = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "OverrideFog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHHGMPLHEDC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::MAIFBMCMGPL
// Il2CppName: MAIFBMCMGPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::OrbusNetManager::*)(float)>(&MagicalActual::OrbusNetManager::MAIFBMCMGPL)> {
  static const MethodInfo* get() {
    static auto* HHDOLAMABBP = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "MAIFBMCMGPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHDOLAMABBP});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::get_amIndoors
// Il2CppName: get_amIndoors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::get_amIndoors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "get_amIndoors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::JBNCBMBBNNL
// Il2CppName: JBNCBMBBNNL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::ArrayW<uint8_t>)>(&MagicalActual::OrbusNetManager::JBNCBMBBNNL)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "JBNCBMBBNNL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::JHABMCGDCDJ
// Il2CppName: JHABMCGDCDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::MagicalActual::BoxCuller*)>(&MagicalActual::OrbusNetManager::JHABMCGDCDJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "BoxCuller")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "JHABMCGDCDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::get_prefabPools
// Il2CppName: get_prefabPools
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*>* (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::get_prefabPools)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "get_prefabPools", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::SetSunsActive
// Il2CppName: SetSunsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(bool)>(&MagicalActual::OrbusNetManager::SetSunsActive)> {
  static const MethodInfo* get() {
    static auto* EHJOPINNGII = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "SetSunsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EHJOPINNGII});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::currentServerTime
// Il2CppName: currentServerTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::currentServerTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "currentServerTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::LLGACDCBJGI
// Il2CppName: LLGACDCBJGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::LLGACDCBJGI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "LLGACDCBJGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::PLHCGEBKEIO
// Il2CppName: PLHCGEBKEIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(uint16_t, uint16_t, bool, ::System::IO::BinaryReader*)>(&MagicalActual::OrbusNetManager::PLHCGEBKEIO)> {
  static const MethodInfo* get() {
    static auto* EDMAIMGFAAC = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* JJHCJDLHBDP = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* JLLNODODEGJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "PLHCGEBKEIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDMAIMGFAAC, JJHCJDLHBDP, JLLNODODEGJ, CBNPFJGIFIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::KHMJIHHIMOL
// Il2CppName: KHMJIHHIMOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW, int, bool)>(&MagicalActual::OrbusNetManager::KHMJIHHIMOL)> {
  static const MethodInfo* get() {
    static auto* MEKIMDBFLED = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* PBCGJNPLCGC = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* FCMCEIJOCDA = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "KHMJIHHIMOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MEKIMDBFLED, PBCGJNPLCGC, FCMCEIJOCDA});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::findEntityByGuid
// Il2CppName: findEntityByGuid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::OrbusNetManager::*)(uint16_t)>(&MagicalActual::OrbusNetManager::findEntityByGuid)> {
  static const MethodInfo* get() {
    static auto* JGFIJDCMHDB = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "findEntityByGuid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JGFIJDCMHDB});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::PNNOHOHMNFJ
// Il2CppName: PNNOHOHMNFJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::Il2CppObject*, ::WebSocketSharp::MessageEventArgs*)>(&MagicalActual::OrbusNetManager::PNNOHOHMNFJ)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("WebSocketSharp", "MessageEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "PNNOHOHMNFJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::FadeOut
// Il2CppName: FadeOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::FadeOut)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "FadeOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::AGAIAHAGFPP
// Il2CppName: AGAIAHAGFPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::System::IO::BinaryWriter*, ::UnityEngine::GameObject*)>(&MagicalActual::OrbusNetManager::AGAIAHAGFPP)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    static auto* IAAEPDKEFAA = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "AGAIAHAGFPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH, IAAEPDKEFAA});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::BLOJFLCIPKB
// Il2CppName: BLOJFLCIPKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::BLOJFLCIPKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "BLOJFLCIPKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::KJBDIEIIAGI
// Il2CppName: KJBDIEIIAGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::UnityEngine::Vector3)>(&MagicalActual::OrbusNetManager::KJBDIEIIAGI)> {
  static const MethodInfo* get() {
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "KJBDIEIIAGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHFBFBMNPFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::get_myTimeController
// Il2CppName: get_myTimeController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::TimeOfDayController* (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::get_myTimeController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "get_myTimeController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::HJIAAGDFMJO
// Il2CppName: HJIAAGDFMJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(float)>(&MagicalActual::OrbusNetManager::HJIAAGDFMJO)> {
  static const MethodInfo* get() {
    static auto* JGKDCNPGHOC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "HJIAAGDFMJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JGKDCNPGHOC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::OHOGPIGIPEJ
// Il2CppName: OHOGPIGIPEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::OHOGPIGIPEJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "OHOGPIGIPEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::DisconnectFromServer
// Il2CppName: DisconnectFromServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::DisconnectFromServer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "DisconnectFromServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::PlayerAvatarInitialized
// Il2CppName: PlayerAvatarInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::OrbusNetManager::PlayerAvatarInitialized)> {
  static const MethodInfo* get() {
    static auto* EENJNFDNJBD = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "PlayerAvatarInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EENJNFDNJBD});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::ABNLDIHDKAC
// Il2CppName: ABNLDIHDKAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(uint16_t, ::System::IO::BinaryReader*, bool)>(&MagicalActual::OrbusNetManager::ABNLDIHDKAC)> {
  static const MethodInfo* get() {
    static auto* JJHCJDLHBDP = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    static auto* GAJOGOBGMJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "ABNLDIHDKAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JJHCJDLHBDP, CBNPFJGIFIH, GAJOGOBGMJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::BPKHHAIMOHH
// Il2CppName: BPKHHAIMOHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::BPKHHAIMOHH)> {
  static const MethodInfo* get() {
    static auto* JNHGHJPDLOF = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "BPKHHAIMOHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JNHGHJPDLOF});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::DJNOBOBGKNN
// Il2CppName: DJNOBOBGKNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::System::IO::BinaryReader*)>(&MagicalActual::OrbusNetManager::DJNOBOBGKNN)> {
  static const MethodInfo* get() {
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "DJNOBOBGKNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBNPFJGIFIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::KLEFDHAFKFD
// Il2CppName: KLEFDHAFKFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::KLEFDHAFKFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "KLEFDHAFKFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::SendBinary
// Il2CppName: SendBinary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::ArrayW<uint8_t>, int64_t, bool, uint8_t)>(&MagicalActual::OrbusNetManager::SendBinary)> {
  static const MethodInfo* get() {
    static auto* MPNGFGEHCJH = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* ELHLBHFKGBD = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* CHBANFJBIJI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GEACOJNOHOM = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "SendBinary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MPNGFGEHCJH, ELHLBHFKGBD, CHBANFJBIJI, GEACOJNOHOM});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::ChangeBroadcastChannel
// Il2CppName: ChangeBroadcastChannel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(int)>(&MagicalActual::OrbusNetManager::ChangeBroadcastChannel)> {
  static const MethodInfo* get() {
    static auto* GKBKKPLJJJD = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "ChangeBroadcastChannel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GKBKKPLJJJD});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::LMBADOEFAJJ
// Il2CppName: LMBADOEFAJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*>*)>(&MagicalActual::OrbusNetManager::LMBADOEFAJJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "LMBADOEFAJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::HAJLAEMGCND
// Il2CppName: HAJLAEMGCND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::HAJLAEMGCND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "HAJLAEMGCND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::AADMBLPFGGH
// Il2CppName: AADMBLPFGGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(uint16_t, bool, ::System::IO::BinaryReader*)>(&MagicalActual::OrbusNetManager::AADMBLPFGGH)> {
  static const MethodInfo* get() {
    static auto* JJHCJDLHBDP = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* JLLNODODEGJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "AADMBLPFGGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JJHCJDLHBDP, JLLNODODEGJ, CBNPFJGIFIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::GoOutdoors
// Il2CppName: GoOutdoors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(bool)>(&MagicalActual::OrbusNetManager::GoOutdoors)> {
  static const MethodInfo* get() {
    static auto* JODFHDIIMOC = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "GoOutdoors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JODFHDIIMOC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::NIEDLPNIDLB
// Il2CppName: NIEDLPNIDLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(bool)>(&MagicalActual::OrbusNetManager::NIEDLPNIDLB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "NIEDLPNIDLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::BGOJLONMEAE
// Il2CppName: BGOJLONMEAE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::BGOJLONMEAE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "BGOJLONMEAE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::LHCEHJNDPGI
// Il2CppName: LHCEHJNDPGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(uint16_t)>(&MagicalActual::OrbusNetManager::LHCEHJNDPGI)> {
  static const MethodInfo* get() {
    static auto* JGFIJDCMHDB = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "LHCEHJNDPGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JGFIJDCMHDB});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::NGCGKDPPDBG
// Il2CppName: NGCGKDPPDBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::NGCGKDPPDBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "NGCGKDPPDBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::IJGGOAGOFDE
// Il2CppName: IJGGOAGOFDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::System::Collections::Generic::List_1<::StringW>*)>(&MagicalActual::OrbusNetManager::IJGGOAGOFDE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "IJGGOAGOFDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::DissolveObject
// Il2CppName: DissolveObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::UnityEngine::GameObject*, ::System::Action*)>(&MagicalActual::OrbusNetManager::DissolveObject)> {
  static const MethodInfo* get() {
    static auto* IAAEPDKEFAA = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* LILOHCCIGHI = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "DissolveObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IAAEPDKEFAA, LILOHCCIGHI});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::JFDFJBFKGHH
// Il2CppName: JFDFJBFKGHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PhysicsInteractable* (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::JFDFJBFKGHH)> {
  static const MethodInfo* get() {
    static auto* FFDDLJKBKME = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "JFDFJBFKGHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFDDLJKBKME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::GDMOOJFMFKG
// Il2CppName: GDMOOJFMFKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::GDMOOJFMFKG)> {
  static const MethodInfo* get() {
    static auto* IDPHEOLKIMJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "GDMOOJFMFKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IDPHEOLKIMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::ICKIBCFPMAF
// Il2CppName: ICKIBCFPMAF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::ICKIBCFPMAF)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "ICKIBCFPMAF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::FadeIn
// Il2CppName: FadeIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::FadeIn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "FadeIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::LBGCHPJIJKL
// Il2CppName: LBGCHPJIJKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::Il2CppObject*, ::System::EventArgs*)>(&MagicalActual::OrbusNetManager::LBGCHPJIJKL)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("System", "EventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "LBGCHPJIJKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::FIHENBAKNNH
// Il2CppName: FIHENBAKNNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::OrbusNetManager::*)(::ArrayW<uint8_t>)>(&MagicalActual::OrbusNetManager::FIHENBAKNNH)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "FIHENBAKNNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::isConnectionActive
// Il2CppName: isConnectionActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::isConnectionActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "isConnectionActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::KDJIBKKMFOC
// Il2CppName: KDJIBKKMFOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::KDJIBKKMFOC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "KDJIBKKMFOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::EHLAPNMAHCH
// Il2CppName: EHLAPNMAHCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::EHLAPNMAHCH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "EHLAPNMAHCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::registerLocalObjectAsEntity
// Il2CppName: registerLocalObjectAsEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::OrbusNetManager::*)(::UnityEngine::GameObject*, uint16_t)>(&MagicalActual::OrbusNetManager::registerLocalObjectAsEntity)> {
  static const MethodInfo* get() {
    static auto* EFDIKDDMIGI = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* JGFIJDCMHDB = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "registerLocalObjectAsEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EFDIKDDMIGI, JGFIJDCMHDB});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::EnsurePrefabLoaded
// Il2CppName: EnsurePrefabLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::EnsurePrefabLoaded)> {
  static const MethodInfo* get() {
    static auto* MEKIMDBFLED = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "EnsurePrefabLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MEKIMDBFLED});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::JKAOJPPPPGI
// Il2CppName: JKAOJPPPPGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::JKAOJPPPPGI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "JKAOJPPPPGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::UpdateVoipPartyId
// Il2CppName: UpdateVoipPartyId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::StringW)>(&MagicalActual::OrbusNetManager::UpdateVoipPartyId)> {
  static const MethodInfo* get() {
    static auto* CBGNEJEHMBB = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "UpdateVoipPartyId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBGNEJEHMBB});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::FEOEAEKCCAM
// Il2CppName: FEOEAEKCCAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::FEOEAEKCCAM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "FEOEAEKCCAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::get_prefabsToPool
// Il2CppName: get_prefabsToPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::StringW>* (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::get_prefabsToPool)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "get_prefabsToPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::AndroidLoadLevel
// Il2CppName: AndroidLoadLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::OrbusNetManager::*)(::StringW, ::StringW)>(&MagicalActual::OrbusNetManager::AndroidLoadLevel)> {
  static const MethodInfo* get() {
    static auto* IDPHEOLKIMJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* EOLEAOBKGEM = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "AndroidLoadLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IDPHEOLKIMJ, EOLEAOBKGEM});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::CEKEGOADFLJ
// Il2CppName: CEKEGOADFLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::CEKEGOADFLJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "CEKEGOADFLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::AreSunsActive
// Il2CppName: AreSunsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusNetManager::*)()>(&MagicalActual::OrbusNetManager::AreSunsActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "AreSunsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::unRegisterNetworkPhysicsInteractable
// Il2CppName: unRegisterNetworkPhysicsInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(::GlobalNamespace::PhysicsInteractable*)>(&MagicalActual::OrbusNetManager::unRegisterNetworkPhysicsInteractable)> {
  static const MethodInfo* get() {
    static auto* JIFHNBEKMLF = &::il2cpp_utils::GetClassFromName("", "PhysicsInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "unRegisterNetworkPhysicsInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JIFHNBEKMLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::GHHCNMJBNBB
// Il2CppName: GHHCNMJBNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusNetManager::*)(bool)>(&MagicalActual::OrbusNetManager::GHHCNMJBNBB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusNetManager*), "GHHCNMJBNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
