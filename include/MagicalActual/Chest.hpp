// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Chest
  class Chest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Chest);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Chest*, "MagicalActual", "Chest");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Chest
  // [TokenAttribute] Offset: FFFFFFFF
  class Chest : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.Animator NBNKFBECLJG
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Animator* NBNKFBECLJG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animator*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Animator NBNKFBECLJG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& dyn_NBNKFBECLJG();
    // private System.Void NDEPONADPFI()
    // Offset: 0x1ADF254
    void NDEPONADPFI();
    // private System.Void OIELBJPIMAM()
    // Offset: 0x1ADF2BC
    void OIELBJPIMAM();
    // private System.Void NHADFEMILCC()
    // Offset: 0x1ADF324
    void NHADFEMILCC();
    // private System.Void MNGDDGAJCHC()
    // Offset: 0x1ADF37C
    void MNGDDGAJCHC();
    // public System.Void .ctor()
    // Offset: 0x1ADF3E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Chest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Chest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Chest*, creationType>()));
    }
    // private System.Void MBIDOINMCGG()
    // Offset: 0x1ADF3EC
    void MBIDOINMCGG();
    // private System.Void JKPKDOLNNIN()
    // Offset: 0x1ADF454
    void JKPKDOLNNIN();
    // private System.Void AIFDEDFMJKA()
    // Offset: 0x1ADF4BC
    void AIFDEDFMJKA();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x1ADF524
    void FNGLOIECKDG();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x1ADF57C
    void KPOAAAHLGLA();
    // private System.Void IKOAPIPHLGB()
    // Offset: 0x1ADF5D4
    void IKOAPIPHLGB();
    // private System.Void FHKFAIBJKJI()
    // Offset: 0x1ADF63C
    void FHKFAIBJKJI();
    // private System.Void FDNHKIPKNEL()
    // Offset: 0x1ADF6A4
    void FDNHKIPKNEL();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x1ADF70C
    void PBEMGGBBDCK();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x1ADF764
    void ABIHCGOKNCL();
    // private System.Void PJGPLDEGMON()
    // Offset: 0x1ADF7BC
    void PJGPLDEGMON();
    // private System.Void PMBBAKJFAJH()
    // Offset: 0x1ADF824
    void PMBBAKJFAJH();
    // private System.Void Start()
    // Offset: 0x1ADF88C
    void Start();
    // private System.Void GMBMHODCMMJ()
    // Offset: 0x1ADF8E4
    void GMBMHODCMMJ();
    // private System.Void DFNNPLJPAGD()
    // Offset: 0x1ADF94C
    void DFNNPLJPAGD();
    // private System.Void MMLCILPJAPI()
    // Offset: 0x1ADF9B4
    void MMLCILPJAPI();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x1ADFA1C
    void IPIFMKAGODD();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x1ADFA74
    void NNDKJCJFIAK();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x1ADFACC
    void HKINNMLBMMG();
    // private System.Void JIGFDFGEJJH()
    // Offset: 0x1ADFB24
    void JIGFDFGEJJH();
    // private System.Void NCIOLHHPFOO()
    // Offset: 0x1ADFB8C
    void NCIOLHHPFOO();
    // private System.Void GDDDDJCGFAG()
    // Offset: 0x1ADFBF4
    void GDDDDJCGFAG();
    // private System.Void LJFMDJMMJOI()
    // Offset: 0x1ADFC5C
    void LJFMDJMMJOI();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x1ADFCC4
    void KBDGAPMJGLG();
    // private System.Void KMLJJEBPFHK()
    // Offset: 0x1ADFD1C
    void KMLJJEBPFHK();
    // private System.Void OpenContainer()
    // Offset: 0x1ADFD84
    void OpenContainer();
    // private System.Void CloseContainer()
    // Offset: 0x1ADFDEC
    void CloseContainer();
    // private System.Void MGKKEPABBHJ()
    // Offset: 0x1ADFE54
    void MGKKEPABBHJ();
  }; // MagicalActual.Chest
  #pragma pack(pop)
  static check_size<sizeof(Chest), 24 + sizeof(::UnityEngine::Animator*)> __MagicalActual_ChestSizeCheck;
  static_assert(sizeof(Chest) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Chest::NDEPONADPFI
// Il2CppName: NDEPONADPFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::NDEPONADPFI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "NDEPONADPFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::OIELBJPIMAM
// Il2CppName: OIELBJPIMAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::OIELBJPIMAM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "OIELBJPIMAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::MNGDDGAJCHC
// Il2CppName: MNGDDGAJCHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::MNGDDGAJCHC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "MNGDDGAJCHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Chest::MBIDOINMCGG
// Il2CppName: MBIDOINMCGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::MBIDOINMCGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "MBIDOINMCGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::JKPKDOLNNIN
// Il2CppName: JKPKDOLNNIN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::JKPKDOLNNIN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "JKPKDOLNNIN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::AIFDEDFMJKA
// Il2CppName: AIFDEDFMJKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::AIFDEDFMJKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "AIFDEDFMJKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::IKOAPIPHLGB
// Il2CppName: IKOAPIPHLGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::IKOAPIPHLGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "IKOAPIPHLGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::FHKFAIBJKJI
// Il2CppName: FHKFAIBJKJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::FHKFAIBJKJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "FHKFAIBJKJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::FDNHKIPKNEL
// Il2CppName: FDNHKIPKNEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::FDNHKIPKNEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "FDNHKIPKNEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::PJGPLDEGMON
// Il2CppName: PJGPLDEGMON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::PJGPLDEGMON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "PJGPLDEGMON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::PMBBAKJFAJH
// Il2CppName: PMBBAKJFAJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::PMBBAKJFAJH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "PMBBAKJFAJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::GMBMHODCMMJ
// Il2CppName: GMBMHODCMMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::GMBMHODCMMJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "GMBMHODCMMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::DFNNPLJPAGD
// Il2CppName: DFNNPLJPAGD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::DFNNPLJPAGD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "DFNNPLJPAGD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::MMLCILPJAPI
// Il2CppName: MMLCILPJAPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::MMLCILPJAPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "MMLCILPJAPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::JIGFDFGEJJH
// Il2CppName: JIGFDFGEJJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::JIGFDFGEJJH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "JIGFDFGEJJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::NCIOLHHPFOO
// Il2CppName: NCIOLHHPFOO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::NCIOLHHPFOO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "NCIOLHHPFOO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::GDDDDJCGFAG
// Il2CppName: GDDDDJCGFAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::GDDDDJCGFAG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "GDDDDJCGFAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::LJFMDJMMJOI
// Il2CppName: LJFMDJMMJOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::LJFMDJMMJOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "LJFMDJMMJOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::KMLJJEBPFHK
// Il2CppName: KMLJJEBPFHK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::KMLJJEBPFHK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "KMLJJEBPFHK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::OpenContainer
// Il2CppName: OpenContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::OpenContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "OpenContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::CloseContainer
// Il2CppName: CloseContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::CloseContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "CloseContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Chest::MGKKEPABBHJ
// Il2CppName: MGKKEPABBHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Chest::*)()>(&MagicalActual::Chest::MGKKEPABBHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Chest*), "MGKKEPABBHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
