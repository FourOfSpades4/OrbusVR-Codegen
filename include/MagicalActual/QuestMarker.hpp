// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: QuestMarker
  class QuestMarker;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::QuestMarker);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::QuestMarker*, "MagicalActual", "QuestMarker");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.QuestMarker
  // [TokenAttribute] Offset: FFFFFFFF
  class QuestMarker : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.Int32 currentStep
    // Size: 0x4
    // Offset: 0x18
    int currentStep;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: currentStep and: stepPositons
    char __padding0[0x4] = {};
    // public System.Collections.Generic.List`1<UnityEngine.Vector3> stepPositons
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* stepPositons;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Vector3>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Int32 currentStep
    [[deprecated("Use field access instead!")]] int& dyn_currentStep();
    // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.Vector3> stepPositons
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& dyn_stepPositons();
    // private System.Void GLNLMFCHBBN(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15A8D28
    void GLNLMFCHBBN(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void DLLELCHFDLJ(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15A8F24
    void DLLELCHFDLJ(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void FAKDJNLGKOE()
    // Offset: 0x15A911C
    void FAKDJNLGKOE();
    // public System.Void DEPGAACCDDH()
    // Offset: 0x15A91E8
    void DEPGAACCDDH();
    // private System.Void OMFAGFOAMBE(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15A92B4
    void OMFAGFOAMBE(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void OBEBGFHFPCL(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15A94B0
    void OBEBGFHFPCL(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void GLNKPGBHPDE(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15A969C
    void GLNKPGBHPDE(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void updatePostion()
    // Offset: 0x15A988C
    void updatePostion();
    // public System.Void KJNHAPEPDJH()
    // Offset: 0x15A97CC
    void KJNHAPEPDJH();
    // public System.Void APKCCFNFFPM()
    // Offset: 0x15A9050
    void APKCCFNFFPM();
    // private System.Void LLALLGPLCGK(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15A9958
    void LLALLGPLCGK(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void MGBEABKJMHD()
    // Offset: 0x15A9A84
    void MGBEABKJMHD();
    // public System.Void .ctor()
    // Offset: 0x15A9B50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static QuestMarker* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::QuestMarker::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<QuestMarker*, creationType>()));
    }
    // public System.Void IPAIKHFMEFD()
    // Offset: 0x15A9BC0
    void IPAIKHFMEFD();
    // private System.Void EPBEAEOMMKB(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15A9C8C
    void EPBEAEOMMKB(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void GNOFHOAHJFE(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15A9E88
    void GNOFHOAHJFE(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void LDGMAOBJBKA()
    // Offset: 0x15A95DC
    void LDGMAOBJBKA();
    // private System.Void CACPOEKNBFH(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15A9FB8
    void CACPOEKNBFH(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void OnTriggerEnter(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15AA1A8
    void OnTriggerEnter(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void LLGCEEKDNPC(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15AA2D8
    void LLGCEEKDNPC(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void OOAKPDIFNLN()
    // Offset: 0x15A9DBC
    void OOAKPDIFNLN();
    // public System.Void AGOOCPICOBI()
    // Offset: 0x15AA404
    void AGOOCPICOBI();
    // public System.Void ODDFBPABKKJ()
    // Offset: 0x15AA4C4
    void ODDFBPABKKJ();
    // private System.Void LKKDIILGCPL(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15AA590
    void LKKDIILGCPL(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void ONNIICMLMHE()
    // Offset: 0x15AA6BC
    void ONNIICMLMHE();
    // public System.Void AHFDKINHEJE()
    // Offset: 0x15AA788
    void AHFDKINHEJE();
    // public System.Void MMGGEPFDALL()
    // Offset: 0x15A8E58
    void MMGGEPFDALL();
    // private System.Void HGJNGCOIIMI(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15AA854
    void HGJNGCOIIMI(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void MPMFBABAFKF(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15AAA4C
    void MPMFBABAFKF(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void FNDEODJHMHO()
    // Offset: 0x15AAB78
    void FNDEODJHMHO();
    // public System.Void NKCJPAMBCLP()
    // Offset: 0x15AA0E8
    void NKCJPAMBCLP();
    // private System.Void CCMLHCNMPAJ(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15AAC38
    void CCMLHCNMPAJ(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void LOIHAFAGMPJ(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15AAD64
    void LOIHAFAGMPJ(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void MAOCLGBNPID()
    // Offset: 0x15AAE94
    void MAOCLGBNPID();
    // public System.Void MAKNCFMHFLP()
    // Offset: 0x15AA980
    void MAKNCFMHFLP();
    // private System.Void GKNCFKGBFCL(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15AAF54
    void GKNCFKGBFCL(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void EIHCOKPEENM()
    // Offset: 0x15A93E4
    void EIHCOKPEENM();
    // public System.Void EGLGPGLFEAA()
    // Offset: 0x15AB080
    void EGLGPGLFEAA();
    // private System.Void DHCKNOAHFLP(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15AB140
    void DHCKNOAHFLP(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void BEHCPBOBCPA()
    // Offset: 0x15AB26C
    void BEHCPBOBCPA();
    // private System.Void NMIPEPCHLME(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15AB338
    void NMIPEPCHLME(::UnityEngine::Collider* GMCJEAMJJEP);
  }; // MagicalActual.QuestMarker
  #pragma pack(pop)
  static check_size<sizeof(QuestMarker), 32 + sizeof(::System::Collections::Generic::List_1<::UnityEngine::Vector3>*)> __MagicalActual_QuestMarkerSizeCheck;
  static_assert(sizeof(QuestMarker) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::QuestMarker::GLNLMFCHBBN
// Il2CppName: GLNLMFCHBBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::GLNLMFCHBBN)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "GLNLMFCHBBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::DLLELCHFDLJ
// Il2CppName: DLLELCHFDLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::DLLELCHFDLJ)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "DLLELCHFDLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::FAKDJNLGKOE
// Il2CppName: FAKDJNLGKOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::FAKDJNLGKOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "FAKDJNLGKOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::DEPGAACCDDH
// Il2CppName: DEPGAACCDDH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::DEPGAACCDDH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "DEPGAACCDDH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::OMFAGFOAMBE
// Il2CppName: OMFAGFOAMBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::OMFAGFOAMBE)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "OMFAGFOAMBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::OBEBGFHFPCL
// Il2CppName: OBEBGFHFPCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::OBEBGFHFPCL)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "OBEBGFHFPCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::GLNKPGBHPDE
// Il2CppName: GLNKPGBHPDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::GLNKPGBHPDE)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "GLNKPGBHPDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::updatePostion
// Il2CppName: updatePostion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::updatePostion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "updatePostion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::KJNHAPEPDJH
// Il2CppName: KJNHAPEPDJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::KJNHAPEPDJH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "KJNHAPEPDJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::APKCCFNFFPM
// Il2CppName: APKCCFNFFPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::APKCCFNFFPM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "APKCCFNFFPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::LLALLGPLCGK
// Il2CppName: LLALLGPLCGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::LLALLGPLCGK)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "LLALLGPLCGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::MGBEABKJMHD
// Il2CppName: MGBEABKJMHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::MGBEABKJMHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "MGBEABKJMHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::QuestMarker::IPAIKHFMEFD
// Il2CppName: IPAIKHFMEFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::IPAIKHFMEFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "IPAIKHFMEFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::EPBEAEOMMKB
// Il2CppName: EPBEAEOMMKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::EPBEAEOMMKB)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "EPBEAEOMMKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::GNOFHOAHJFE
// Il2CppName: GNOFHOAHJFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::GNOFHOAHJFE)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "GNOFHOAHJFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::LDGMAOBJBKA
// Il2CppName: LDGMAOBJBKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::LDGMAOBJBKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "LDGMAOBJBKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::CACPOEKNBFH
// Il2CppName: CACPOEKNBFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::CACPOEKNBFH)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "CACPOEKNBFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::LLGCEEKDNPC
// Il2CppName: LLGCEEKDNPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::LLGCEEKDNPC)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "LLGCEEKDNPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::OOAKPDIFNLN
// Il2CppName: OOAKPDIFNLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::OOAKPDIFNLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "OOAKPDIFNLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::AGOOCPICOBI
// Il2CppName: AGOOCPICOBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::AGOOCPICOBI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "AGOOCPICOBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::ODDFBPABKKJ
// Il2CppName: ODDFBPABKKJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::ODDFBPABKKJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "ODDFBPABKKJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::LKKDIILGCPL
// Il2CppName: LKKDIILGCPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::LKKDIILGCPL)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "LKKDIILGCPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::ONNIICMLMHE
// Il2CppName: ONNIICMLMHE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::ONNIICMLMHE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "ONNIICMLMHE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::AHFDKINHEJE
// Il2CppName: AHFDKINHEJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::AHFDKINHEJE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "AHFDKINHEJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::MMGGEPFDALL
// Il2CppName: MMGGEPFDALL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::MMGGEPFDALL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "MMGGEPFDALL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::HGJNGCOIIMI
// Il2CppName: HGJNGCOIIMI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::HGJNGCOIIMI)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "HGJNGCOIIMI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::MPMFBABAFKF
// Il2CppName: MPMFBABAFKF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::MPMFBABAFKF)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "MPMFBABAFKF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::FNDEODJHMHO
// Il2CppName: FNDEODJHMHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::FNDEODJHMHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "FNDEODJHMHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::NKCJPAMBCLP
// Il2CppName: NKCJPAMBCLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::NKCJPAMBCLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "NKCJPAMBCLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::CCMLHCNMPAJ
// Il2CppName: CCMLHCNMPAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::CCMLHCNMPAJ)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "CCMLHCNMPAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::LOIHAFAGMPJ
// Il2CppName: LOIHAFAGMPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::LOIHAFAGMPJ)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "LOIHAFAGMPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::MAOCLGBNPID
// Il2CppName: MAOCLGBNPID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::MAOCLGBNPID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "MAOCLGBNPID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::MAKNCFMHFLP
// Il2CppName: MAKNCFMHFLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::MAKNCFMHFLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "MAKNCFMHFLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::GKNCFKGBFCL
// Il2CppName: GKNCFKGBFCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::GKNCFKGBFCL)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "GKNCFKGBFCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::EIHCOKPEENM
// Il2CppName: EIHCOKPEENM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::EIHCOKPEENM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "EIHCOKPEENM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::EGLGPGLFEAA
// Il2CppName: EGLGPGLFEAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::EGLGPGLFEAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "EGLGPGLFEAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::DHCKNOAHFLP
// Il2CppName: DHCKNOAHFLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::DHCKNOAHFLP)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "DHCKNOAHFLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::BEHCPBOBCPA
// Il2CppName: BEHCPBOBCPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)()>(&MagicalActual::QuestMarker::BEHCPBOBCPA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "BEHCPBOBCPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::QuestMarker::NMIPEPCHLME
// Il2CppName: NMIPEPCHLME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::QuestMarker::*)(::UnityEngine::Collider*)>(&MagicalActual::QuestMarker::NMIPEPCHLME)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::QuestMarker*), "NMIPEPCHLME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
