// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_TraduWormSplit
  class M_TraduWormSplit;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_TraduWormSplit);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_TraduWormSplit*, "MagicalActual", "M_TraduWormSplit");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_TraduWormSplit
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD7414
  class M_TraduWormSplit : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // public System.Void ALKHPPEDLNC()
    // Offset: 0x275FEF0
    void ALKHPPEDLNC();
    // public System.Void OMFMIKPMPEL()
    // Offset: 0x2760114
    void OMFMIKPMPEL();
    // private System.Void APMNGLNBFNP()
    // Offset: 0x2760338
    void APMNGLNBFNP();
    // public System.Void HJADIOCKECN()
    // Offset: 0x2760390
    void HJADIOCKECN();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x27605B4
    void LBIKOKCCILF();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x276060C
    void HKINNMLBMMG();
    // public System.Void .ctor()
    // Offset: 0x2760664
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_TraduWormSplit* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_TraduWormSplit::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_TraduWormSplit*, creationType>()));
    }
    // private System.Void OACMGPBCPEL()
    // Offset: 0x27606BC
    void OACMGPBCPEL();
    // public System.Void GILLJBIMGNJ()
    // Offset: 0x2760714
    void GILLJBIMGNJ();
    // public System.Void FMFOGAKFJGJ()
    // Offset: 0x2760938
    void FMFOGAKFJGJ();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x2760B5C
    void IPIFMKAGODD();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x2760BB4
    void MLGBKBMHHLE();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x2760C0C
    void AFIACGLCIPB();
    // public System.Void BFEOMBNEICE()
    // Offset: 0x2760C64
    void BFEOMBNEICE();
    // public System.Void DBOKLBMPMJO()
    // Offset: 0x2760E88
    void DBOKLBMPMJO();
    // public System.Void JFDEDDEJJPK()
    // Offset: 0x27610AC
    void JFDEDDEJJPK();
    // private System.Void Start()
    // Offset: 0x27612D0
    void Start();
    // public System.Void OMKBAIIIFBJ()
    // Offset: 0x2761328
    void OMKBAIIIFBJ();
    // public System.Void NHHIIEHJCFA()
    // Offset: 0x276154C
    void NHHIIEHJCFA();
    // public System.Void JCOFJKJMOAA()
    // Offset: 0x2761770
    void JCOFJKJMOAA();
    // public System.Void GLJFFHNKKPI()
    // Offset: 0x2761994
    void GLJFFHNKKPI();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x2761BB8
    void CBMDGNKFPIO();
    // public System.Void JMPBEJDKDGJ()
    // Offset: 0x2761C10
    void JMPBEJDKDGJ();
    // public System.Void KDPEOPPDLLP()
    // Offset: 0x2761E34
    void KDPEOPPDLLP();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x2762058
    void GECHLDPLPCC();
    // public System.Void Slash()
    // Offset: 0x27620B0
    void Slash();
    // public System.Void KLPLAHINIGH()
    // Offset: 0x27622C8
    void KLPLAHINIGH();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x27624EC
    void DFCOAPEIKLN();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x2762544
    void EPCHNEGNKNF();
    // public System.Void MMGEIKLBBOH()
    // Offset: 0x276259C
    void MMGEIKLBBOH();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x27627C0
    void ABIHCGOKNCL();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x2762818
    void NNDKJCJFIAK();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x2762870
    void KBDGAPMJGLG();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x27628C8
    void LPLGKBGLPOK();
    // private System.Void AHPDCIGFMJI()
    // Offset: 0x2762920
    void AHPDCIGFMJI();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x2762978
    void GPFBGGFPINB();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x27629D0
    void PBEMGGBBDCK();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x2762A28
    void BDEDGNGMHMN();
    // public System.Void HLGKLABMHHD()
    // Offset: 0x2762A80
    void HLGKLABMHHD();
  }; // MagicalActual.M_TraduWormSplit
  #pragma pack(pop)
  static check_size<sizeof(M_TraduWormSplit), 40 + sizeof(::StringW)> __MagicalActual_M_TraduWormSplitSizeCheck;
  static_assert(sizeof(M_TraduWormSplit) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::ALKHPPEDLNC
// Il2CppName: ALKHPPEDLNC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::ALKHPPEDLNC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "ALKHPPEDLNC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::OMFMIKPMPEL
// Il2CppName: OMFMIKPMPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::OMFMIKPMPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "OMFMIKPMPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::APMNGLNBFNP
// Il2CppName: APMNGLNBFNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::APMNGLNBFNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "APMNGLNBFNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::HJADIOCKECN
// Il2CppName: HJADIOCKECN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::HJADIOCKECN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "HJADIOCKECN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::GILLJBIMGNJ
// Il2CppName: GILLJBIMGNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::GILLJBIMGNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "GILLJBIMGNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::FMFOGAKFJGJ
// Il2CppName: FMFOGAKFJGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::FMFOGAKFJGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "FMFOGAKFJGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::BFEOMBNEICE
// Il2CppName: BFEOMBNEICE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::BFEOMBNEICE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "BFEOMBNEICE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::DBOKLBMPMJO
// Il2CppName: DBOKLBMPMJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::DBOKLBMPMJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "DBOKLBMPMJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::JFDEDDEJJPK
// Il2CppName: JFDEDDEJJPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::JFDEDDEJJPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "JFDEDDEJJPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::OMKBAIIIFBJ
// Il2CppName: OMKBAIIIFBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::OMKBAIIIFBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "OMKBAIIIFBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::NHHIIEHJCFA
// Il2CppName: NHHIIEHJCFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::NHHIIEHJCFA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "NHHIIEHJCFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::JCOFJKJMOAA
// Il2CppName: JCOFJKJMOAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::JCOFJKJMOAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "JCOFJKJMOAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::GLJFFHNKKPI
// Il2CppName: GLJFFHNKKPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::GLJFFHNKKPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "GLJFFHNKKPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::JMPBEJDKDGJ
// Il2CppName: JMPBEJDKDGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::JMPBEJDKDGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "JMPBEJDKDGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::KDPEOPPDLLP
// Il2CppName: KDPEOPPDLLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::KDPEOPPDLLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "KDPEOPPDLLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::KLPLAHINIGH
// Il2CppName: KLPLAHINIGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::KLPLAHINIGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "KLPLAHINIGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::MMGEIKLBBOH
// Il2CppName: MMGEIKLBBOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::MMGEIKLBBOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "MMGEIKLBBOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::AHPDCIGFMJI
// Il2CppName: AHPDCIGFMJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::AHPDCIGFMJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "AHPDCIGFMJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduWormSplit::HLGKLABMHHD
// Il2CppName: HLGKLABMHHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduWormSplit::*)()>(&MagicalActual::M_TraduWormSplit::HLGKLABMHHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduWormSplit*), "HLGKLABMHHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
