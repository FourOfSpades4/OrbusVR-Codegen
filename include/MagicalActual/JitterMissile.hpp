// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: JitterMissile
  class JitterMissile;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::JitterMissile);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::JitterMissile*, "MagicalActual", "JitterMissile");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x3C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.JitterMissile
  // [TokenAttribute] Offset: FFFFFFFF
  class JitterMissile : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.Single HDINPEKEMJK
    // Size: 0x4
    // Offset: 0x18
    float HDINPEKEMJK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single jitterEvery
    // Size: 0x4
    // Offset: 0x1C
    float jitterEvery;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single jitterStrength
    // Size: 0x4
    // Offset: 0x20
    float jitterStrength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 CHFGOHKEBIM
    // Size: 0xC
    // Offset: 0x24
    ::UnityEngine::Vector3 CHFGOHKEBIM;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 LKNADBOKHDN
    // Size: 0xC
    // Offset: 0x30
    ::UnityEngine::Vector3 LKNADBOKHDN;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Single HDINPEKEMJK
    [[deprecated("Use field access instead!")]] float& dyn_HDINPEKEMJK();
    // Get instance field reference: public System.Single jitterEvery
    [[deprecated("Use field access instead!")]] float& dyn_jitterEvery();
    // Get instance field reference: public System.Single jitterStrength
    [[deprecated("Use field access instead!")]] float& dyn_jitterStrength();
    // Get instance field reference: private UnityEngine.Vector3 CHFGOHKEBIM
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_CHFGOHKEBIM();
    // Get instance field reference: private UnityEngine.Vector3 LKNADBOKHDN
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_LKNADBOKHDN();
    // private System.Void FLJMJKAKNBH()
    // Offset: 0x126B9E8
    void FLJMJKAKNBH();
    // public System.Void .ctor()
    // Offset: 0x126BBBC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JitterMissile* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::JitterMissile::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JitterMissile*, creationType>()));
    }
    // private System.Void NLFOPEAGLDJ()
    // Offset: 0x126BBD8
    void NLFOPEAGLDJ();
    // private System.Void JEDINCAJKLC()
    // Offset: 0x126BDB0
    void JEDINCAJKLC();
    // private System.Void FGGKEEKHDHN()
    // Offset: 0x126BF88
    void FGGKEEKHDHN();
    // private System.Void ICFANEFPFBJ()
    // Offset: 0x126C160
    void ICFANEFPFBJ();
    // private System.Void NAPGGGFOEKO()
    // Offset: 0x126C334
    void NAPGGGFOEKO();
    // private System.Void MKHEDAAIDIE()
    // Offset: 0x126C508
    void MKHEDAAIDIE();
    // private System.Void CHEMMHEMDCB()
    // Offset: 0x126C6E0
    void CHEMMHEMDCB();
    // private System.Void NIGOCBKLOFH()
    // Offset: 0x126C8B8
    void NIGOCBKLOFH();
    // private System.Void JPHEBENNLCB()
    // Offset: 0x126CA90
    void JPHEBENNLCB();
    // private System.Void DDJINHIPKCE()
    // Offset: 0x126CC68
    void DDJINHIPKCE();
    // private System.Void LOEFDHDIHGE()
    // Offset: 0x126CE3C
    void LOEFDHDIHGE();
    // private System.Void ICEGDGKAIIB()
    // Offset: 0x126D014
    void ICEGDGKAIIB();
    // private System.Void BHBFEEJHKIH()
    // Offset: 0x126D1EC
    void BHBFEEJHKIH();
    // private System.Void BLIPCIAAIHI()
    // Offset: 0x126D3C4
    void BLIPCIAAIHI();
    // private System.Void LLBAENEGEMN()
    // Offset: 0x126D59C
    void LLBAENEGEMN();
    // private System.Void FIJGCHFAFHN()
    // Offset: 0x126D774
    void FIJGCHFAFHN();
    // private System.Void EFEDNMKDDGH()
    // Offset: 0x126D94C
    void EFEDNMKDDGH();
    // private System.Void AHMLIMDJCJO()
    // Offset: 0x126DB20
    void AHMLIMDJCJO();
    // private System.Void AMIPIMKIJMO()
    // Offset: 0x126DCF8
    void AMIPIMKIJMO();
    // private System.Void AGOBDBDGJKD()
    // Offset: 0x126DED0
    void AGOBDBDGJKD();
    // private System.Void GGAFMPPDBOH()
    // Offset: 0x126E0A8
    void GGAFMPPDBOH();
    // private System.Void FixedUpdate()
    // Offset: 0x126E280
    void FixedUpdate();
    // private System.Void AMGJNJLJIFO()
    // Offset: 0x126E438
    void AMGJNJLJIFO();
    // private System.Void JCOEAIILOND()
    // Offset: 0x126E610
    void JCOEAIILOND();
    // private System.Void JPHNAIDIBKL()
    // Offset: 0x126E7E8
    void JPHNAIDIBKL();
    // private System.Void PJOIJIEDPMP()
    // Offset: 0x126E9C0
    void PJOIJIEDPMP();
    // private System.Void EEMBCPKCOIL()
    // Offset: 0x126EB94
    void EEMBCPKCOIL();
    // private System.Void BIMCNDAFFJC()
    // Offset: 0x126ED68
    void BIMCNDAFFJC();
    // private System.Void HABDJCEKMNH()
    // Offset: 0x126EF40
    void HABDJCEKMNH();
    // private System.Void IDGLLGOOENO()
    // Offset: 0x126F118
    void IDGLLGOOENO();
    // private System.Void NNBODOLEAFK()
    // Offset: 0x126F2F0
    void NNBODOLEAFK();
    // private System.Void ANKCGGIBCAI()
    // Offset: 0x126F4C8
    void ANKCGGIBCAI();
    // private System.Void HHKOFMNJKDA()
    // Offset: 0x126F69C
    void HHKOFMNJKDA();
  }; // MagicalActual.JitterMissile
  #pragma pack(pop)
  static check_size<sizeof(JitterMissile), 48 + sizeof(::UnityEngine::Vector3)> __MagicalActual_JitterMissileSizeCheck;
  static_assert(sizeof(JitterMissile) == 0x3C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::JitterMissile::FLJMJKAKNBH
// Il2CppName: FLJMJKAKNBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::FLJMJKAKNBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "FLJMJKAKNBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::JitterMissile::NLFOPEAGLDJ
// Il2CppName: NLFOPEAGLDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::NLFOPEAGLDJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "NLFOPEAGLDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::JEDINCAJKLC
// Il2CppName: JEDINCAJKLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::JEDINCAJKLC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "JEDINCAJKLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::FGGKEEKHDHN
// Il2CppName: FGGKEEKHDHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::FGGKEEKHDHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "FGGKEEKHDHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::ICFANEFPFBJ
// Il2CppName: ICFANEFPFBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::ICFANEFPFBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "ICFANEFPFBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::NAPGGGFOEKO
// Il2CppName: NAPGGGFOEKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::NAPGGGFOEKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "NAPGGGFOEKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::MKHEDAAIDIE
// Il2CppName: MKHEDAAIDIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::MKHEDAAIDIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "MKHEDAAIDIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::CHEMMHEMDCB
// Il2CppName: CHEMMHEMDCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::CHEMMHEMDCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "CHEMMHEMDCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::NIGOCBKLOFH
// Il2CppName: NIGOCBKLOFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::NIGOCBKLOFH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "NIGOCBKLOFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::JPHEBENNLCB
// Il2CppName: JPHEBENNLCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::JPHEBENNLCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "JPHEBENNLCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::DDJINHIPKCE
// Il2CppName: DDJINHIPKCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::DDJINHIPKCE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "DDJINHIPKCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::LOEFDHDIHGE
// Il2CppName: LOEFDHDIHGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::LOEFDHDIHGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "LOEFDHDIHGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::ICEGDGKAIIB
// Il2CppName: ICEGDGKAIIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::ICEGDGKAIIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "ICEGDGKAIIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::BHBFEEJHKIH
// Il2CppName: BHBFEEJHKIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::BHBFEEJHKIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "BHBFEEJHKIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::BLIPCIAAIHI
// Il2CppName: BLIPCIAAIHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::BLIPCIAAIHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "BLIPCIAAIHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::LLBAENEGEMN
// Il2CppName: LLBAENEGEMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::LLBAENEGEMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "LLBAENEGEMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::FIJGCHFAFHN
// Il2CppName: FIJGCHFAFHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::FIJGCHFAFHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "FIJGCHFAFHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::EFEDNMKDDGH
// Il2CppName: EFEDNMKDDGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::EFEDNMKDDGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "EFEDNMKDDGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::AHMLIMDJCJO
// Il2CppName: AHMLIMDJCJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::AHMLIMDJCJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "AHMLIMDJCJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::AMIPIMKIJMO
// Il2CppName: AMIPIMKIJMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::AMIPIMKIJMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "AMIPIMKIJMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::AGOBDBDGJKD
// Il2CppName: AGOBDBDGJKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::AGOBDBDGJKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "AGOBDBDGJKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::GGAFMPPDBOH
// Il2CppName: GGAFMPPDBOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::GGAFMPPDBOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "GGAFMPPDBOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::AMGJNJLJIFO
// Il2CppName: AMGJNJLJIFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::AMGJNJLJIFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "AMGJNJLJIFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::JCOEAIILOND
// Il2CppName: JCOEAIILOND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::JCOEAIILOND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "JCOEAIILOND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::JPHNAIDIBKL
// Il2CppName: JPHNAIDIBKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::JPHNAIDIBKL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "JPHNAIDIBKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::PJOIJIEDPMP
// Il2CppName: PJOIJIEDPMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::PJOIJIEDPMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "PJOIJIEDPMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::EEMBCPKCOIL
// Il2CppName: EEMBCPKCOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::EEMBCPKCOIL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "EEMBCPKCOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::BIMCNDAFFJC
// Il2CppName: BIMCNDAFFJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::BIMCNDAFFJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "BIMCNDAFFJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::HABDJCEKMNH
// Il2CppName: HABDJCEKMNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::HABDJCEKMNH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "HABDJCEKMNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::IDGLLGOOENO
// Il2CppName: IDGLLGOOENO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::IDGLLGOOENO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "IDGLLGOOENO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::NNBODOLEAFK
// Il2CppName: NNBODOLEAFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::NNBODOLEAFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "NNBODOLEAFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::ANKCGGIBCAI
// Il2CppName: ANKCGGIBCAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::ANKCGGIBCAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "ANKCGGIBCAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::JitterMissile::HHKOFMNJKDA
// Il2CppName: HHKOFMNJKDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::JitterMissile::*)()>(&MagicalActual::JitterMissile::HHKOFMNJKDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::JitterMissile*), "HHKOFMNJKDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
