// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: OrbusAudioParticleController
  class OrbusAudioParticleController;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ShootLaser
  class ShootLaser;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: GearPortal
  class GearPortal;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::GearPortal);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::GearPortal*, "MagicalActual", "GearPortal");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x3C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.GearPortal
  // [TokenAttribute] Offset: FFFFFFFF
  class GearPortal : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.OrbusAudioParticleController destroyedVFX
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::OrbusAudioParticleController* destroyedVFX;
    // Field size check
    static_assert(sizeof(::MagicalActual::OrbusAudioParticleController*) == 0x8);
    // private ShootLaser shootLaserVFX
    // Size: 0x8
    // Offset: 0x30
    ::GlobalNamespace::ShootLaser* shootLaserVFX;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ShootLaser*) == 0x8);
    // private System.Single FIGIHKCAPIF
    // Size: 0x4
    // Offset: 0x38
    float FIGIHKCAPIF;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private MagicalActual.OrbusAudioParticleController destroyedVFX
    [[deprecated("Use field access instead!")]] ::MagicalActual::OrbusAudioParticleController*& dyn_destroyedVFX();
    // Get instance field reference: private ShootLaser shootLaserVFX
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ShootLaser*& dyn_shootLaserVFX();
    // Get instance field reference: private System.Single FIGIHKCAPIF
    [[deprecated("Use field access instead!")]] float& dyn_FIGIHKCAPIF();
    // private System.Void FMCFFLJCCCP()
    // Offset: 0x1594E3C
    void FMCFFLJCCCP();
    // private System.Void CHMCEGMCENL()
    // Offset: 0x1594EF4
    void CHMCEGMCENL();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x1594FAC
    void KBDGAPMJGLG();
    // private System.Void GEIGDOGOODM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1594FB0
    void GEIGDOGOODM(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1595178
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JEIAGCBHHHI()
    // Offset: 0x159527C
    void JEIAGCBHHHI();
    // public System.Void .ctor()
    // Offset: 0x1595334
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GearPortal* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::GearPortal::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GearPortal*, creationType>()));
    }
    // private System.Void DKJFPDMDIAA(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1595394
    void DKJFPDMDIAA(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void GDDMNDHBECL(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x159555C
    void GDDMNDHBECL(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void AEDBMBNPNLF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1595724
    void AEDBMBNPNLF(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x15958F0
    void EIIKFEMCNKM();
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x15958F4
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void Start()
    // Offset: 0x15959F8
    void Start();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x15959FC
    void FNGLOIECKDG();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x1595A00
    void GPFBGGFPINB();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x1595A04
    void KPOAAAHLGLA();
    // private System.Void Update()
    // Offset: 0x1595A08
    void Update();
    // private System.Void JLMEEMCEEDO(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1595AB8
    void JLMEEMCEEDO(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void GJBFFPOMPMB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1595C88
    void GJBFFPOMPMB(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void PLPDCBMCEJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1595E58
    void PLPDCBMCEJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x1595F5C
    void CBMDGNKFPIO();
    // private System.Void MHHFAOGFAPO()
    // Offset: 0x1595F60
    void MHHFAOGFAPO();
    // private System.Void CEGEBCFNLFC()
    // Offset: 0x1596018
    void CEGEBCFNLFC();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x15960D0
    void PFABJJGAOMM();
    // public System.Void NEMKNLGDEAK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x15960D4
    void NEMKNLGDEAK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JENOIOBAEPG()
    // Offset: 0x15961D8
    void JENOIOBAEPG();
    // private System.Void BPEFOMJJHKO()
    // Offset: 0x15961DC
    void BPEFOMJJHKO();
    // public System.Void KHOMLKJBDGE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1596294
    void KHOMLKJBDGE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void OIPLBADJHFI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1596398
    void OIPLBADJHFI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void BJMMJNDCPLF()
    // Offset: 0x159649C
    void BJMMJNDCPLF();
    // public System.Void OFDMFGNMEOP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1596554
    void OFDMFGNMEOP(::MagicalActual::NetEntity* CMLIHJCOINC);
  }; // MagicalActual.GearPortal
  #pragma pack(pop)
  static check_size<sizeof(GearPortal), 56 + sizeof(float)> __MagicalActual_GearPortalSizeCheck;
  static_assert(sizeof(GearPortal) == 0x3C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::GearPortal::FMCFFLJCCCP
// Il2CppName: FMCFFLJCCCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::FMCFFLJCCCP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "FMCFFLJCCCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::CHMCEGMCENL
// Il2CppName: CHMCEGMCENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::CHMCEGMCENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "CHMCEGMCENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::GEIGDOGOODM
// Il2CppName: GEIGDOGOODM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::System::Collections::ArrayList*)>(&MagicalActual::GearPortal::GEIGDOGOODM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "GEIGDOGOODM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::MagicalActual::NetEntity*)>(&MagicalActual::GearPortal::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::JEIAGCBHHHI
// Il2CppName: JEIAGCBHHHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::JEIAGCBHHHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "JEIAGCBHHHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::GearPortal::DKJFPDMDIAA
// Il2CppName: DKJFPDMDIAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::System::Collections::ArrayList*)>(&MagicalActual::GearPortal::DKJFPDMDIAA)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "DKJFPDMDIAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::GDDMNDHBECL
// Il2CppName: GDDMNDHBECL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::System::Collections::ArrayList*)>(&MagicalActual::GearPortal::GDDMNDHBECL)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "GDDMNDHBECL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::AEDBMBNPNLF
// Il2CppName: AEDBMBNPNLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::System::Collections::ArrayList*)>(&MagicalActual::GearPortal::AEDBMBNPNLF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "AEDBMBNPNLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::MagicalActual::NetEntity*)>(&MagicalActual::GearPortal::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::JLMEEMCEEDO
// Il2CppName: JLMEEMCEEDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::System::Collections::ArrayList*)>(&MagicalActual::GearPortal::JLMEEMCEEDO)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "JLMEEMCEEDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::GJBFFPOMPMB
// Il2CppName: GJBFFPOMPMB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::System::Collections::ArrayList*)>(&MagicalActual::GearPortal::GJBFFPOMPMB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "GJBFFPOMPMB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::PLPDCBMCEJF
// Il2CppName: PLPDCBMCEJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::MagicalActual::NetEntity*)>(&MagicalActual::GearPortal::PLPDCBMCEJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "PLPDCBMCEJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::MHHFAOGFAPO
// Il2CppName: MHHFAOGFAPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::MHHFAOGFAPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "MHHFAOGFAPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::CEGEBCFNLFC
// Il2CppName: CEGEBCFNLFC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::CEGEBCFNLFC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "CEGEBCFNLFC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::NEMKNLGDEAK
// Il2CppName: NEMKNLGDEAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::MagicalActual::NetEntity*)>(&MagicalActual::GearPortal::NEMKNLGDEAK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "NEMKNLGDEAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::BPEFOMJJHKO
// Il2CppName: BPEFOMJJHKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::BPEFOMJJHKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "BPEFOMJJHKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::KHOMLKJBDGE
// Il2CppName: KHOMLKJBDGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::MagicalActual::NetEntity*)>(&MagicalActual::GearPortal::KHOMLKJBDGE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "KHOMLKJBDGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::OIPLBADJHFI
// Il2CppName: OIPLBADJHFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::MagicalActual::NetEntity*)>(&MagicalActual::GearPortal::OIPLBADJHFI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "OIPLBADJHFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::BJMMJNDCPLF
// Il2CppName: BJMMJNDCPLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)()>(&MagicalActual::GearPortal::BJMMJNDCPLF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "BJMMJNDCPLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::GearPortal::OFDMFGNMEOP
// Il2CppName: OFDMFGNMEOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::GearPortal::*)(::MagicalActual::NetEntity*)>(&MagicalActual::GearPortal::OFDMFGNMEOP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::GearPortal*), "OFDMFGNMEOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
