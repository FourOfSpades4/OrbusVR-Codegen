// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerTool
  class PlayerTool;
  // Forward declaring type: Grabber
  class Grabber;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: AudioSource
  class AudioSource;
  // Forward declaring type: MeshRenderer
  class MeshRenderer;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SuperTextMesh
  class SuperTextMesh;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: TeleportationDevice
  class TeleportationDevice;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::TeleportationDevice);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::TeleportationDevice*, "MagicalActual", "TeleportationDevice");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x61
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.TeleportationDevice
  // [TokenAttribute] Offset: FFFFFFFF
  class TeleportationDevice : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.PlayerTool FKJHGIFOJKD
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::PlayerTool* FKJHGIFOJKD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerTool*) == 0x8);
    // private System.Single LIBCNBNBLOO
    // Size: 0x4
    // Offset: 0x20
    float LIBCNBNBLOO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single EEDKICDNHGM
    // Size: 0x4
    // Offset: 0x24
    float EEDKICDNHGM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean BHDFMKPMCPM
    // Size: 0x1
    // Offset: 0x28
    bool BHDFMKPMCPM;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean FOHNMMBGCOL
    // Size: 0x1
    // Offset: 0x29
    bool FOHNMMBGCOL;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: FOHNMMBGCOL and: topGlobe
    char __padding4[0x6] = {};
    // public UnityEngine.GameObject topGlobe
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* topGlobe;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.AudioSource IJAJMBBHKHJ
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::AudioSource* IJAJMBBHKHJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    // public SuperTextMesh cooldownText
    // Size: 0x8
    // Offset: 0x40
    ::GlobalNamespace::SuperTextMesh* cooldownText;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SuperTextMesh*) == 0x8);
    // private UnityEngine.MeshRenderer myMeshRenderer
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::MeshRenderer* myMeshRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshRenderer*) == 0x8);
    // public UnityEngine.Events.UnityEvent doDeviceEffect
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Events::UnityEvent* doDeviceEffect;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public UnityEngine.Events.UnityEvent onDeviceReleased
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Events::UnityEvent* onDeviceReleased;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private System.Boolean EEPAKMFBOPA
    // Size: 0x1
    // Offset: 0x60
    bool EEPAKMFBOPA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.PlayerTool FKJHGIFOJKD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerTool*& dyn_FKJHGIFOJKD();
    // Get instance field reference: private System.Single LIBCNBNBLOO
    [[deprecated("Use field access instead!")]] float& dyn_LIBCNBNBLOO();
    // Get instance field reference: private System.Single EEDKICDNHGM
    [[deprecated("Use field access instead!")]] float& dyn_EEDKICDNHGM();
    // Get instance field reference: private System.Boolean BHDFMKPMCPM
    [[deprecated("Use field access instead!")]] bool& dyn_BHDFMKPMCPM();
    // Get instance field reference: private System.Boolean FOHNMMBGCOL
    [[deprecated("Use field access instead!")]] bool& dyn_FOHNMMBGCOL();
    // Get instance field reference: public UnityEngine.GameObject topGlobe
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_topGlobe();
    // Get instance field reference: private UnityEngine.AudioSource IJAJMBBHKHJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& dyn_IJAJMBBHKHJ();
    // Get instance field reference: public SuperTextMesh cooldownText
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& dyn_cooldownText();
    // Get instance field reference: private UnityEngine.MeshRenderer myMeshRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& dyn_myMeshRenderer();
    // Get instance field reference: public UnityEngine.Events.UnityEvent doDeviceEffect
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_doDeviceEffect();
    // Get instance field reference: public UnityEngine.Events.UnityEvent onDeviceReleased
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_onDeviceReleased();
    // Get instance field reference: private System.Boolean EEPAKMFBOPA
    [[deprecated("Use field access instead!")]] bool& dyn_EEPAKMFBOPA();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x167A404
    void EIIKFEMCNKM();
    // private System.Void Awake()
    // Offset: 0x167A4AC
    void Awake();
    // private System.Void MGMOCPLJPAM(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167A51C
    void MGMOCPLJPAM(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void NKLOKJIOACM()
    // Offset: 0x167A524
    void NKLOKJIOACM();
    // private System.Void Start()
    // Offset: 0x167A594
    void Start();
    // private System.Void PhysicsInteractableUngrip(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167A63C
    void PhysicsInteractableUngrip(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void BLIPCIAAIHI()
    // Offset: 0x167A674
    void BLIPCIAAIHI();
    // private System.Void KGJJNLDHENL()
    // Offset: 0x167AA78
    void KGJJNLDHENL();
    // private System.Void CHOJJBHJHIE(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167AAE8
    void CHOJJBHJHIE(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void FixedUpdate()
    // Offset: 0x167AAF4
    void FixedUpdate();
    // private System.Void OJFAEAIKFED()
    // Offset: 0x167AED0
    void OJFAEAIKFED();
    // private System.Void IDGLLGOOENO()
    // Offset: 0x167AF78
    void IDGLLGOOENO();
    // private System.Void EFEDNMKDDGH()
    // Offset: 0x167B374
    void EFEDNMKDDGH();
    // private System.Void IIPGAMOBDAK(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167B774
    void IIPGAMOBDAK(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void DGBCCNEEOGH(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167B780
    void DGBCCNEEOGH(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void CNHFEOKMHGF(System.Byte KLIPNGBEELK)
    // Offset: 0x167B788
    void CNHFEOKMHGF(uint8_t KLIPNGBEELK);
    // private System.Void HHDFFFCBAMM(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167BA18
    void HHDFFFCBAMM(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void AHMLIMDJCJO()
    // Offset: 0x167BA54
    void AHMLIMDJCJO();
    // private System.Void DOCJMCPAEOI(System.Byte KLIPNGBEELK)
    // Offset: 0x167BE4C
    void DOCJMCPAEOI(uint8_t KLIPNGBEELK);
    // private System.Void LMMGGIFNEDC(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167C0DC
    void LMMGGIFNEDC(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void FDILPFPJCCK()
    // Offset: 0x167C118
    void FDILPFPJCCK();
    // private System.Void EIFLPHNNCPC(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167C188
    void EIFLPHNNCPC(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void FGPHMNHNKHP(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167C1C4
    void FGPHMNHNKHP(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x167C1CC
    void NNDKJCJFIAK();
    // private System.Void NHADFEMILCC()
    // Offset: 0x167C274
    void NHADFEMILCC();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x167C31C
    void MLGBKBMHHLE();
    // public System.Void .ctor()
    // Offset: 0x167C3C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TeleportationDevice* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::TeleportationDevice::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TeleportationDevice*, creationType>()));
    }
    // private System.Void IBJKJHPFKOC(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167C3D4
    void IBJKJHPFKOC(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void SignalReceived(System.Byte KLIPNGBEELK)
    // Offset: 0x167C40C
    void SignalReceived(uint8_t KLIPNGBEELK);
    // private System.Void JDNPFOIOCJJ(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167C6A4
    void JDNPFOIOCJJ(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void ECBJEKPINME(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167C6DC
    void ECBJEKPINME(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void BJILDGNACGK(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167C6E8
    void BJILDGNACGK(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void BIMCNDAFFJC()
    // Offset: 0x167C6F0
    void BIMCNDAFFJC();
    // private System.Void LEKNJGKKCIE(System.Byte KLIPNGBEELK)
    // Offset: 0x167CAEC
    void LEKNJGKKCIE(uint8_t KLIPNGBEELK);
    // private System.Void KGKKNFEMGAM()
    // Offset: 0x167CD84
    void KGKKNFEMGAM();
    // private System.Void CLCEPJAGHCB(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167CDF4
    void CLCEPJAGHCB(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void POGIEEINAKK(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167CE30
    void POGIEEINAKK(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void PhysicsInteractableGrip(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167CE6C
    void PhysicsInteractableGrip(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void MKHEDAAIDIE()
    // Offset: 0x167CE78
    void MKHEDAAIDIE();
    // private System.Void HCMCNFPHPDP(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x167D27C
    void HCMCNFPHPDP(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void DDJINHIPKCE()
    // Offset: 0x167D2B8
    void DDJINHIPKCE();
    // private System.Void LOEFDHDIHGE()
    // Offset: 0x167D6BC
    void LOEFDHDIHGE();
  }; // MagicalActual.TeleportationDevice
  #pragma pack(pop)
  static check_size<sizeof(TeleportationDevice), 96 + sizeof(bool)> __MagicalActual_TeleportationDeviceSizeCheck;
  static_assert(sizeof(TeleportationDevice) == 0x61);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::MGMOCPLJPAM
// Il2CppName: MGMOCPLJPAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::MGMOCPLJPAM)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "MGMOCPLJPAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::NKLOKJIOACM
// Il2CppName: NKLOKJIOACM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::NKLOKJIOACM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "NKLOKJIOACM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::PhysicsInteractableUngrip
// Il2CppName: PhysicsInteractableUngrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::PhysicsInteractableUngrip)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "PhysicsInteractableUngrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::BLIPCIAAIHI
// Il2CppName: BLIPCIAAIHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::BLIPCIAAIHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "BLIPCIAAIHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::KGJJNLDHENL
// Il2CppName: KGJJNLDHENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::KGJJNLDHENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "KGJJNLDHENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::CHOJJBHJHIE
// Il2CppName: CHOJJBHJHIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::CHOJJBHJHIE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "CHOJJBHJHIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::OJFAEAIKFED
// Il2CppName: OJFAEAIKFED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::OJFAEAIKFED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "OJFAEAIKFED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::IDGLLGOOENO
// Il2CppName: IDGLLGOOENO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::IDGLLGOOENO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "IDGLLGOOENO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::EFEDNMKDDGH
// Il2CppName: EFEDNMKDDGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::EFEDNMKDDGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "EFEDNMKDDGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::IIPGAMOBDAK
// Il2CppName: IIPGAMOBDAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::IIPGAMOBDAK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "IIPGAMOBDAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::DGBCCNEEOGH
// Il2CppName: DGBCCNEEOGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::DGBCCNEEOGH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "DGBCCNEEOGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::CNHFEOKMHGF
// Il2CppName: CNHFEOKMHGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(uint8_t)>(&MagicalActual::TeleportationDevice::CNHFEOKMHGF)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "CNHFEOKMHGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::HHDFFFCBAMM
// Il2CppName: HHDFFFCBAMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::HHDFFFCBAMM)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "HHDFFFCBAMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::AHMLIMDJCJO
// Il2CppName: AHMLIMDJCJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::AHMLIMDJCJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "AHMLIMDJCJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::DOCJMCPAEOI
// Il2CppName: DOCJMCPAEOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(uint8_t)>(&MagicalActual::TeleportationDevice::DOCJMCPAEOI)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "DOCJMCPAEOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::LMMGGIFNEDC
// Il2CppName: LMMGGIFNEDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::LMMGGIFNEDC)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "LMMGGIFNEDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::FDILPFPJCCK
// Il2CppName: FDILPFPJCCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::FDILPFPJCCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "FDILPFPJCCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::EIFLPHNNCPC
// Il2CppName: EIFLPHNNCPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::EIFLPHNNCPC)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "EIFLPHNNCPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::FGPHMNHNKHP
// Il2CppName: FGPHMNHNKHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::FGPHMNHNKHP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "FGPHMNHNKHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::IBJKJHPFKOC
// Il2CppName: IBJKJHPFKOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::IBJKJHPFKOC)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "IBJKJHPFKOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::SignalReceived
// Il2CppName: SignalReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(uint8_t)>(&MagicalActual::TeleportationDevice::SignalReceived)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "SignalReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::JDNPFOIOCJJ
// Il2CppName: JDNPFOIOCJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::JDNPFOIOCJJ)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "JDNPFOIOCJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::ECBJEKPINME
// Il2CppName: ECBJEKPINME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::ECBJEKPINME)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "ECBJEKPINME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::BJILDGNACGK
// Il2CppName: BJILDGNACGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::BJILDGNACGK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "BJILDGNACGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::BIMCNDAFFJC
// Il2CppName: BIMCNDAFFJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::BIMCNDAFFJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "BIMCNDAFFJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::LEKNJGKKCIE
// Il2CppName: LEKNJGKKCIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(uint8_t)>(&MagicalActual::TeleportationDevice::LEKNJGKKCIE)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "LEKNJGKKCIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::KGKKNFEMGAM
// Il2CppName: KGKKNFEMGAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::KGKKNFEMGAM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "KGKKNFEMGAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::CLCEPJAGHCB
// Il2CppName: CLCEPJAGHCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::CLCEPJAGHCB)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "CLCEPJAGHCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::POGIEEINAKK
// Il2CppName: POGIEEINAKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::POGIEEINAKK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "POGIEEINAKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::PhysicsInteractableGrip
// Il2CppName: PhysicsInteractableGrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::PhysicsInteractableGrip)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "PhysicsInteractableGrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::MKHEDAAIDIE
// Il2CppName: MKHEDAAIDIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::MKHEDAAIDIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "MKHEDAAIDIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::HCMCNFPHPDP
// Il2CppName: HCMCNFPHPDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)(::MagicalActual::Grabber*)>(&MagicalActual::TeleportationDevice::HCMCNFPHPDP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "HCMCNFPHPDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::DDJINHIPKCE
// Il2CppName: DDJINHIPKCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::DDJINHIPKCE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "DDJINHIPKCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TeleportationDevice::LOEFDHDIHGE
// Il2CppName: LOEFDHDIHGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TeleportationDevice::*)()>(&MagicalActual::TeleportationDevice::LOEFDHDIHGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TeleportationDevice*), "LOEFDHDIHGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
