// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ClickedEventArgs
  struct ClickedEventArgs;
  // Forward declaring type: SteamVR_TrackedController
  class SteamVR_TrackedController;
  // Forward declaring type: InteractableObject
  class InteractableObject;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerCharacter
  class PlayerCharacter;
  // Forward declaring type: DamageAffinity
  struct DamageAffinity;
  // Forward declaring type: DamageParams
  class DamageParams;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: TextMesh
  class TextMesh;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Material
  class Material;
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: Vectrosity
namespace Vectrosity {
  // Forward declaring type: VectorLine
  class VectorLine;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: PDollarGestureRecognizer
namespace PDollarGestureRecognizer {
  // Forward declaring type: Gesture
  class Gesture;
  // Forward declaring type: Point
  class Point;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Slider
  class Slider;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerWand
  class PlayerWand;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PlayerWand);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PlayerWand*, "MagicalActual", "PlayerWand");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x11C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PlayerWand
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayerWand : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::PlayerWand::wandState
    struct wandState;
    // Nested type: ::MagicalActual::PlayerWand::$$c__DisplayClass45_0
    class $$c__DisplayClass45_0;
    // Nested type: ::MagicalActual::PlayerWand::$$c__DisplayClass48_0
    class $$c__DisplayClass48_0;
    // Nested type: ::MagicalActual::PlayerWand::$$c__DisplayClass49_0
    class $$c__DisplayClass49_0;
    // Nested type: ::MagicalActual::PlayerWand::$actionAfterDelayCoroutine$d__51
    class $actionAfterDelayCoroutine$d__51;
    // Nested type: ::MagicalActual::PlayerWand::$$c__DisplayClass53_0
    class $$c__DisplayClass53_0;
    // Nested type: ::MagicalActual::PlayerWand::$$c__DisplayClass53_1
    class $$c__DisplayClass53_1;
    // Nested type: ::MagicalActual::PlayerWand::$$c__DisplayClass54_0
    class $$c__DisplayClass54_0;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: MagicalActual.PlayerWand/wandState
    // [TokenAttribute] Offset: FFFFFFFF
    struct wandState/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: wandState
      constexpr wandState(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MagicalActual.PlayerWand/wandState FNCIFCNLJBM
      static constexpr const int FNCIFCNLJBM = 0;
      // Get static field: static public MagicalActual.PlayerWand/wandState FNCIFCNLJBM
      static ::MagicalActual::PlayerWand::wandState _get_FNCIFCNLJBM();
      // Set static field: static public MagicalActual.PlayerWand/wandState FNCIFCNLJBM
      static void _set_FNCIFCNLJBM(::MagicalActual::PlayerWand::wandState value);
      // static field const value: static public MagicalActual.PlayerWand/wandState GMDPCEBCCOP
      static constexpr const int GMDPCEBCCOP = 1;
      // Get static field: static public MagicalActual.PlayerWand/wandState GMDPCEBCCOP
      static ::MagicalActual::PlayerWand::wandState _get_GMDPCEBCCOP();
      // Set static field: static public MagicalActual.PlayerWand/wandState GMDPCEBCCOP
      static void _set_GMDPCEBCCOP(::MagicalActual::PlayerWand::wandState value);
      // static field const value: static public MagicalActual.PlayerWand/wandState HHFOPNCDBAN
      static constexpr const int HHFOPNCDBAN = 2;
      // Get static field: static public MagicalActual.PlayerWand/wandState HHFOPNCDBAN
      static ::MagicalActual::PlayerWand::wandState _get_HHFOPNCDBAN();
      // Set static field: static public MagicalActual.PlayerWand/wandState HHFOPNCDBAN
      static void _set_HHFOPNCDBAN(::MagicalActual::PlayerWand::wandState value);
      // static field const value: static public MagicalActual.PlayerWand/wandState GDDPMGGPLPF
      static constexpr const int GDDPMGGPLPF = 4;
      // Get static field: static public MagicalActual.PlayerWand/wandState GDDPMGGPLPF
      static ::MagicalActual::PlayerWand::wandState _get_GDDPMGGPLPF();
      // Set static field: static public MagicalActual.PlayerWand/wandState GDDPMGGPLPF
      static void _set_GDDPMGGPLPF(::MagicalActual::PlayerWand::wandState value);
      // static field const value: static public MagicalActual.PlayerWand/wandState OHHMFBOMPEK
      static constexpr const int OHHMFBOMPEK = 8;
      // Get static field: static public MagicalActual.PlayerWand/wandState OHHMFBOMPEK
      static ::MagicalActual::PlayerWand::wandState _get_OHHMFBOMPEK();
      // Set static field: static public MagicalActual.PlayerWand/wandState OHHMFBOMPEK
      static void _set_OHHMFBOMPEK(::MagicalActual::PlayerWand::wandState value);
      // static field const value: static public MagicalActual.PlayerWand/wandState CAODJGOACON
      static constexpr const int CAODJGOACON = 16;
      // Get static field: static public MagicalActual.PlayerWand/wandState CAODJGOACON
      static ::MagicalActual::PlayerWand::wandState _get_CAODJGOACON();
      // Set static field: static public MagicalActual.PlayerWand/wandState CAODJGOACON
      static void _set_CAODJGOACON(::MagicalActual::PlayerWand::wandState value);
      // static field const value: static public MagicalActual.PlayerWand/wandState BIFOIAKPKCP
      static constexpr const int BIFOIAKPKCP = 32;
      // Get static field: static public MagicalActual.PlayerWand/wandState BIFOIAKPKCP
      static ::MagicalActual::PlayerWand::wandState _get_BIFOIAKPKCP();
      // Set static field: static public MagicalActual.PlayerWand/wandState BIFOIAKPKCP
      static void _set_BIFOIAKPKCP(::MagicalActual::PlayerWand::wandState value);
      // static field const value: static public MagicalActual.PlayerWand/wandState FNOCCEKICKP
      static constexpr const int FNOCCEKICKP = 64;
      // Get static field: static public MagicalActual.PlayerWand/wandState FNOCCEKICKP
      static ::MagicalActual::PlayerWand::wandState _get_FNOCCEKICKP();
      // Set static field: static public MagicalActual.PlayerWand/wandState FNOCCEKICKP
      static void _set_FNOCCEKICKP(::MagicalActual::PlayerWand::wandState value);
      // static field const value: static public MagicalActual.PlayerWand/wandState GLLHPJKINFB
      static constexpr const int GLLHPJKINFB = 128;
      // Get static field: static public MagicalActual.PlayerWand/wandState GLLHPJKINFB
      static ::MagicalActual::PlayerWand::wandState _get_GLLHPJKINFB();
      // Set static field: static public MagicalActual.PlayerWand/wandState GLLHPJKINFB
      static void _set_GLLHPJKINFB(::MagicalActual::PlayerWand::wandState value);
      // static field const value: static public MagicalActual.PlayerWand/wandState ANCLBBAOOMP
      static constexpr const int ANCLBBAOOMP = 256;
      // Get static field: static public MagicalActual.PlayerWand/wandState ANCLBBAOOMP
      static ::MagicalActual::PlayerWand::wandState _get_ANCLBBAOOMP();
      // Set static field: static public MagicalActual.PlayerWand/wandState ANCLBBAOOMP
      static void _set_ANCLBBAOOMP(::MagicalActual::PlayerWand::wandState value);
      // static field const value: static public MagicalActual.PlayerWand/wandState GLHEEKPODJM
      static constexpr const int GLHEEKPODJM = 512;
      // Get static field: static public MagicalActual.PlayerWand/wandState GLHEEKPODJM
      static ::MagicalActual::PlayerWand::wandState _get_GLHEEKPODJM();
      // Set static field: static public MagicalActual.PlayerWand/wandState GLHEEKPODJM
      static void _set_GLHEEKPODJM(::MagicalActual::PlayerWand::wandState value);
      // static field const value: static public MagicalActual.PlayerWand/wandState EHMMBMCFLFE
      static constexpr const int EHMMBMCFLFE = 1024;
      // Get static field: static public MagicalActual.PlayerWand/wandState EHMMBMCFLFE
      static ::MagicalActual::PlayerWand::wandState _get_EHMMBMCFLFE();
      // Set static field: static public MagicalActual.PlayerWand/wandState EHMMBMCFLFE
      static void _set_EHMMBMCFLFE(::MagicalActual::PlayerWand::wandState value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // MagicalActual.PlayerWand/wandState
    #pragma pack(pop)
    static check_size<sizeof(PlayerWand::wandState), 0 + sizeof(int)> __MagicalActual_PlayerWand_wandStateSizeCheck;
    static_assert(sizeof(PlayerWand::wandState) == 0x4);
    public:
    // public MagicalActual.PlayerCharacter myPlayer
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::PlayerCharacter* myPlayer;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerCharacter*) == 0x8);
    // public SteamVR_TrackedController myController
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::SteamVR_TrackedController* myController;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SteamVR_TrackedController*) == 0x8);
    // public UnityEngine.Camera headCamera
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Camera* headCamera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // public UnityEngine.Transform wandTip
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Transform* wandTip;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public UnityEngine.TextMesh resultText
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::TextMesh* resultText;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextMesh*) == 0x8);
    // private Vectrosity.VectorLine[] ODFJDNJPMKL
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::Vectrosity::VectorLine*> ODFJDNJPMKL;
    // Field size check
    static_assert(sizeof(::ArrayW<::Vectrosity::VectorLine*>) == 0x8);
    // private System.Int32 GBAINJLBOIK
    // Size: 0x4
    // Offset: 0x48
    int GBAINJLBOIK;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single FNLBLHGMMBL
    // Size: 0x4
    // Offset: 0x4C
    float FNLBLHGMMBL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single IEECKABMODP
    // Size: 0x4
    // Offset: 0x50
    float IEECKABMODP;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean LMKBPNONGCC
    // Size: 0x1
    // Offset: 0x54
    bool LMKBPNONGCC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: LMKBPNONGCC and: JCJMLNLHAMO
    char __padding9[0x3] = {};
    // private System.Collections.Generic.List`1<PDollarGestureRecognizer.Gesture> JCJMLNLHAMO
    // Size: 0x8
    // Offset: 0x58
    ::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Gesture*>* JCJMLNLHAMO;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Gesture*>*) == 0x8);
    // private System.Collections.Generic.List`1<PDollarGestureRecognizer.Point> JJOMPINMIBH
    // Size: 0x8
    // Offset: 0x60
    ::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Point*>* JJOMPINMIBH;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Point*>*) == 0x8);
    // public UnityEngine.GameObject emptyGO
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::GameObject* emptyGO;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject[] vfxMissiles
    // Size: 0x8
    // Offset: 0x70
    ::ArrayW<::UnityEngine::GameObject*> vfxMissiles;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject[] vfxBeams
    // Size: 0x8
    // Offset: 0x78
    ::ArrayW<::UnityEngine::GameObject*> vfxBeams;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject[] vfxEnchants
    // Size: 0x8
    // Offset: 0x80
    ::ArrayW<::UnityEngine::GameObject*> vfxEnchants;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject[] vfxDomes
    // Size: 0x8
    // Offset: 0x88
    ::ArrayW<::UnityEngine::GameObject*> vfxDomes;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject[] vfxBlasts
    // Size: 0x8
    // Offset: 0x90
    ::ArrayW<::UnityEngine::GameObject*> vfxBlasts;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject[] vfxImpacts
    // Size: 0x8
    // Offset: 0x98
    ::ArrayW<::UnityEngine::GameObject*> vfxImpacts;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject vfxArcaneRay
    // Size: 0x8
    // Offset: 0xA0
    ::UnityEngine::GameObject* vfxArcaneRay;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxArcaneRay_Wait
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::GameObject* vfxArcaneRay_Wait;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxArcaneHit
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::GameObject* vfxArcaneHit;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject magicShield
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::GameObject* magicShield;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject fireSword
    // Size: 0x8
    // Offset: 0xC0
    ::UnityEngine::GameObject* fireSword;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Action`1<InteractableObject> MJADHDCEBFA
    // Size: 0x8
    // Offset: 0xC8
    ::System::Action_1<::GlobalNamespace::InteractableObject*>* MJADHDCEBFA;
    // Field size check
    static_assert(sizeof(::System::Action_1<::GlobalNamespace::InteractableObject*>*) == 0x8);
    // private UnityEngine.GameObject BBJPCHFDPJJ
    // Size: 0x8
    // Offset: 0xD0
    ::UnityEngine::GameObject* BBJPCHFDPJJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject GFINKLHIDKB
    // Size: 0x8
    // Offset: 0xD8
    ::UnityEngine::GameObject* GFINKLHIDKB;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Action DLOALPPPCPA
    // Size: 0x8
    // Offset: 0xE0
    ::System::Action* DLOALPPPCPA;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // private System.Action GNBJOKBJIFF
    // Size: 0x8
    // Offset: 0xE8
    ::System::Action* GNBJOKBJIFF;
    // Field size check
    static_assert(sizeof(::System::Action*) == 0x8);
    // public UnityEngine.Material targetingMaterial
    // Size: 0x8
    // Offset: 0xF0
    ::UnityEngine::Material* targetingMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.GameObject domeEarth
    // Size: 0x8
    // Offset: 0xF8
    ::UnityEngine::GameObject* domeEarth;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject domeHeal
    // Size: 0x8
    // Offset: 0x100
    ::UnityEngine::GameObject* domeHeal;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.UI.Slider playerHealthBar
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::UI::Slider* playerHealthBar;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Slider*) == 0x8);
    // private System.Int32 HOCHEMNFAIA
    // Size: 0x4
    // Offset: 0x110
    int HOCHEMNFAIA;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 BGJIKHDAJAO
    // Size: 0x4
    // Offset: 0x114
    int BGJIKHDAJAO;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private MagicalActual.PlayerWand/wandState PEAKPGDDEJN
    // Size: 0x4
    // Offset: 0x118
    ::MagicalActual::PlayerWand::wandState PEAKPGDDEJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerWand::wandState) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public MagicalActual.PlayerCharacter myPlayer
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerCharacter*& dyn_myPlayer();
    // Get instance field reference: public SteamVR_TrackedController myController
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamVR_TrackedController*& dyn_myController();
    // Get instance field reference: public UnityEngine.Camera headCamera
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_headCamera();
    // Get instance field reference: public UnityEngine.Transform wandTip
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_wandTip();
    // Get instance field reference: public UnityEngine.TextMesh resultText
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextMesh*& dyn_resultText();
    // Get instance field reference: private Vectrosity.VectorLine[] ODFJDNJPMKL
    [[deprecated("Use field access instead!")]] ::ArrayW<::Vectrosity::VectorLine*>& dyn_ODFJDNJPMKL();
    // Get instance field reference: private System.Int32 GBAINJLBOIK
    [[deprecated("Use field access instead!")]] int& dyn_GBAINJLBOIK();
    // Get instance field reference: private System.Single FNLBLHGMMBL
    [[deprecated("Use field access instead!")]] float& dyn_FNLBLHGMMBL();
    // Get instance field reference: private System.Single IEECKABMODP
    [[deprecated("Use field access instead!")]] float& dyn_IEECKABMODP();
    // Get instance field reference: private System.Boolean LMKBPNONGCC
    [[deprecated("Use field access instead!")]] bool& dyn_LMKBPNONGCC();
    // Get instance field reference: private System.Collections.Generic.List`1<PDollarGestureRecognizer.Gesture> JCJMLNLHAMO
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Gesture*>*& dyn_JCJMLNLHAMO();
    // Get instance field reference: private System.Collections.Generic.List`1<PDollarGestureRecognizer.Point> JJOMPINMIBH
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Point*>*& dyn_JJOMPINMIBH();
    // Get instance field reference: public UnityEngine.GameObject emptyGO
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_emptyGO();
    // Get instance field reference: public UnityEngine.GameObject[] vfxMissiles
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_vfxMissiles();
    // Get instance field reference: public UnityEngine.GameObject[] vfxBeams
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_vfxBeams();
    // Get instance field reference: public UnityEngine.GameObject[] vfxEnchants
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_vfxEnchants();
    // Get instance field reference: public UnityEngine.GameObject[] vfxDomes
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_vfxDomes();
    // Get instance field reference: public UnityEngine.GameObject[] vfxBlasts
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_vfxBlasts();
    // Get instance field reference: public UnityEngine.GameObject[] vfxImpacts
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_vfxImpacts();
    // Get instance field reference: public UnityEngine.GameObject vfxArcaneRay
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxArcaneRay();
    // Get instance field reference: public UnityEngine.GameObject vfxArcaneRay_Wait
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxArcaneRay_Wait();
    // Get instance field reference: public UnityEngine.GameObject vfxArcaneHit
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxArcaneHit();
    // Get instance field reference: public UnityEngine.GameObject magicShield
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_magicShield();
    // Get instance field reference: public UnityEngine.GameObject fireSword
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_fireSword();
    // Get instance field reference: private System.Action`1<InteractableObject> MJADHDCEBFA
    [[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::InteractableObject*>*& dyn_MJADHDCEBFA();
    // Get instance field reference: private UnityEngine.GameObject BBJPCHFDPJJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_BBJPCHFDPJJ();
    // Get instance field reference: private UnityEngine.GameObject GFINKLHIDKB
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_GFINKLHIDKB();
    // Get instance field reference: private System.Action DLOALPPPCPA
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_DLOALPPPCPA();
    // Get instance field reference: private System.Action GNBJOKBJIFF
    [[deprecated("Use field access instead!")]] ::System::Action*& dyn_GNBJOKBJIFF();
    // Get instance field reference: public UnityEngine.Material targetingMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_targetingMaterial();
    // Get instance field reference: public UnityEngine.GameObject domeEarth
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_domeEarth();
    // Get instance field reference: public UnityEngine.GameObject domeHeal
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_domeHeal();
    // Get instance field reference: public UnityEngine.UI.Slider playerHealthBar
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Slider*& dyn_playerHealthBar();
    // Get instance field reference: private System.Int32 HOCHEMNFAIA
    [[deprecated("Use field access instead!")]] int& dyn_HOCHEMNFAIA();
    // Get instance field reference: private System.Int32 BGJIKHDAJAO
    [[deprecated("Use field access instead!")]] int& dyn_BGJIKHDAJAO();
    // Get instance field reference: private MagicalActual.PlayerWand/wandState PEAKPGDDEJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerWand::wandState& dyn_PEAKPGDDEJN();
    // private System.Void FIGGNKAIBGP()
    // Offset: 0x1481430
    void FIGGNKAIBGP();
    // private System.Void NHDGBJOINDF(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x14814E4
    void NHDGBJOINDF(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void BEHGEJMNOBC()
    // Offset: 0x1481BF4
    void BEHGEJMNOBC();
    // private System.Void OIPKJHFGOBD()
    // Offset: 0x1481C40
    void OIPKJHFGOBD();
    // public UnityEngine.Vector3 CDJDBJJCKOD(UnityEngine.Transform EIJFPEAIJGM, UnityEngine.Vector3 NHFBFBMNPFC)
    // Offset: 0x14822D8
    ::UnityEngine::Vector3 CDJDBJJCKOD(::UnityEngine::Transform* EIJFPEAIJGM, ::UnityEngine::Vector3 NHFBFBMNPFC);
    // private System.Void EEMBCPKCOIL()
    // Offset: 0x14824BC
    void EEMBCPKCOIL();
    // private System.Void BDKGMLBENBB(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x14829A8
    void BDKGMLBENBB(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private UnityEngine.Vector3 BPONBBMJFOJ(UnityEngine.Vector3 MILGJAJMKAB, UnityEngine.Vector3 LKMBPNJDCFN, System.Single BINJODOOEDL, System.Single FFNMEJOKJID)
    // Offset: 0x148309C
    ::UnityEngine::Vector3 BPONBBMJFOJ(::UnityEngine::Vector3 MILGJAJMKAB, ::UnityEngine::Vector3 LKMBPNJDCFN, float BINJODOOEDL, float FFNMEJOKJID);
    // public System.Void .ctor()
    // Offset: 0x148331C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerWand* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PlayerWand::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerWand*, creationType>()));
    }
    // private System.Void Awake()
    // Offset: 0x14833D4
    void Awake();
    // private System.Void OBHDPMALFLL()
    // Offset: 0x14833D8
    void OBHDPMALFLL();
    // private System.Void OCFJMAMGAJG(System.Action OOMLAOPBDDP, System.Single AOHDCECOBEG)
    // Offset: 0x1483680
    void OCFJMAMGAJG(::System::Action* OOMLAOPBDDP, float AOHDCECOBEG);
    // public UnityEngine.Vector3 PINCIALPIDO(UnityEngine.Transform EIJFPEAIJGM, UnityEngine.Vector3 NHFBFBMNPFC)
    // Offset: 0x14820F4
    ::UnityEngine::Vector3 PINCIALPIDO(::UnityEngine::Transform* EIJFPEAIJGM, ::UnityEngine::Vector3 NHFBFBMNPFC);
    // private System.Void EMDIIOGANLK(MagicalActual.PlayerCharacter AHEELFEFBHD, MagicalActual.DamageAffinity CDJBMMJJDEA, UnityEngine.GameObject AKMHLJIJNNA)
    // Offset: 0x1483744
    void EMDIIOGANLK(::MagicalActual::PlayerCharacter* AHEELFEFBHD, ::MagicalActual::DamageAffinity CDJBMMJJDEA, ::UnityEngine::GameObject* AKMHLJIJNNA);
    // private System.Collections.IEnumerator NMEAHCEDNOM(System.Action OOMLAOPBDDP, System.Single AOHDCECOBEG)
    // Offset: 0x14839F4
    ::System::Collections::IEnumerator* NMEAHCEDNOM(::System::Action* OOMLAOPBDDP, float AOHDCECOBEG);
    // private System.Void EPPBEMKALJJ(System.Action OOMLAOPBDDP, System.Single AOHDCECOBEG)
    // Offset: 0x1483A8C
    void EPPBEMKALJJ(::System::Action* OOMLAOPBDDP, float AOHDCECOBEG);
    // private System.Void AEIOJDICDIF(MagicalActual.PlayerCharacter AHEELFEFBHD, MagicalActual.DamageAffinity CDJBMMJJDEA, UnityEngine.GameObject AKMHLJIJNNA)
    // Offset: 0x1483AB8
    void AEIOJDICDIF(::MagicalActual::PlayerCharacter* AHEELFEFBHD, ::MagicalActual::DamageAffinity CDJBMMJJDEA, ::UnityEngine::GameObject* AKMHLJIJNNA);
    // private System.Void FJFBMLAAGJM()
    // Offset: 0x1483D74
    void FJFBMLAAGJM();
    // private System.Void MFHMOILMNDP()
    // Offset: 0x148442C
    void MFHMOILMNDP();
    // private System.Void FCJDBOMLEBE()
    // Offset: 0x1484C7C
    void FCJDBOMLEBE();
    // private System.Void DICIBIEKAJP(System.Action OOMLAOPBDDP, System.Single AOHDCECOBEG)
    // Offset: 0x1484D04
    void DICIBIEKAJP(::System::Action* OOMLAOPBDDP, float AOHDCECOBEG);
    // private System.Void ANOHLCKFIDJ(UnityEngine.Vector3 NHFBFBMNPFC, System.String CPHIAJICHEE)
    // Offset: 0x1484D30
    void ANOHLCKFIDJ(::UnityEngine::Vector3 NHFBFBMNPFC, ::StringW CPHIAJICHEE);
    // public UnityEngine.Vector3 getRelativePosition(UnityEngine.Transform EIJFPEAIJGM, UnityEngine.Vector3 NHFBFBMNPFC)
    // Offset: 0x1484F48
    ::UnityEngine::Vector3 getRelativePosition(::UnityEngine::Transform* EIJFPEAIJGM, ::UnityEngine::Vector3 NHFBFBMNPFC);
    // private System.Void OMINIMGOMOD()
    // Offset: 0x148512C
    void OMINIMGOMOD();
    // private System.Void MHOKADOJNIN()
    // Offset: 0x14853D8
    void MHOKADOJNIN();
    // private System.Void OAOPCOELNCE(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x14853DC
    void OAOPCOELNCE(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void HNBDKNBHMDF()
    // Offset: 0x1485130
    void HNBDKNBHMDF();
    // private System.Void KOCGMNGLOKP(MagicalActual.PlayerCharacter AHEELFEFBHD, MagicalActual.DamageAffinity CDJBMMJJDEA, UnityEngine.GameObject AKMHLJIJNNA)
    // Offset: 0x14853F0
    void KOCGMNGLOKP(::MagicalActual::PlayerCharacter* AHEELFEFBHD, ::MagicalActual::DamageAffinity CDJBMMJJDEA, ::UnityEngine::GameObject* AKMHLJIJNNA);
    // private System.Void MMBANAMOKEF(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x14856AC
    void MMBANAMOKEF(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void DJIGIJKOPDC()
    // Offset: 0x14856C0
    void DJIGIJKOPDC();
    // private System.Void KONOHFMBGJA()
    // Offset: 0x14856C4
    void KONOHFMBGJA();
    // private System.Void Update()
    // Offset: 0x1485D80
    void Update();
    // private System.Void FixedUpdate()
    // Offset: 0x1485F34
    void FixedUpdate();
    // private System.Void NGKONJGKMBE()
    // Offset: 0x1485F6C
    void NGKONJGKMBE();
    // private System.Void GGEKONLJAEB()
    // Offset: 0x14863F4
    void GGEKONLJAEB();
    // private System.Void Start()
    // Offset: 0x14863F8
    void Start();
    // private System.Void PKJBBDBAKAN(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x1486854
    void PKJBBDBAKAN(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void MCNMEJHGJBJ(UnityEngine.GameObject DKPGALMFHDH, UnityEngine.GameObject NGLENINPEJC, System.Int32 NKMEGNHBJHN, System.Action`1<UnityEngine.GameObject> JEJJEEHGKJO)
    // Offset: 0x1484B1C
    void MCNMEJHGJBJ(::UnityEngine::GameObject* DKPGALMFHDH, ::UnityEngine::GameObject* NGLENINPEJC, int NKMEGNHBJHN, ::System::Action_1<::UnityEngine::GameObject*>* JEJJEEHGKJO);
    // private System.Void PCHAECAGCPC(System.Action OOMLAOPBDDP, System.Single AOHDCECOBEG)
    // Offset: 0x14814B8
    void PCHAECAGCPC(::System::Action* OOMLAOPBDDP, float AOHDCECOBEG);
    // private System.Void DFKJEBLLDMM(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x1486B20
    void DFKJEBLLDMM(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void AFLNGBMDJEJ()
    // Offset: 0x1486B34
    void AFLNGBMDJEJ();
    // private System.Void PAHIDPOLIGH()
    // Offset: 0x14814F8
    void PAHIDPOLIGH();
    // private System.Void AMAMEGMFOPE()
    // Offset: 0x14824F4
    void AMAMEGMFOPE();
    // private System.Void IIMFBNGPGEK(UnityEngine.Vector3 NHFBFBMNPFC, System.String CPHIAJICHEE)
    // Offset: 0x1486B74
    void IIMFBNGPGEK(::UnityEngine::Vector3 NHFBFBMNPFC, ::StringW CPHIAJICHEE);
    // private System.Void BDMNNHELAKG(UnityEngine.GameObject LLLJHGBODFK)
    // Offset: 0x1486D8C
    void BDMNNHELAKG(::UnityEngine::GameObject* LLLJHGBODFK);
    // private System.Void BMALDPKJJPG()
    // Offset: 0x1486E48
    void BMALDPKJJPG();
    // private System.Void CFLJEDFBJBL()
    // Offset: 0x1486E4C
    void CFLJEDFBJBL();
    // private System.Void GDDECOGGKOL()
    // Offset: 0x1487138
    void GDDECOGGKOL();
    // private System.Void MOBELIFDAOA(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x14871BC
    void MOBELIFDAOA(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void dealDamage(MagicalActual.DamageParams LHJBCMKCCFC)
    // Offset: 0x14871C0
    void dealDamage(::MagicalActual::DamageParams* LHJBCMKCCFC);
    // private System.Void CAOJAIMKBIF(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x148725C
    void CAOJAIMKBIF(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Collections.IEnumerator KENJCKJEKME(System.Action OOMLAOPBDDP, System.Single AOHDCECOBEG)
    // Offset: 0x14836AC
    ::System::Collections::IEnumerator* KENJCKJEKME(::System::Action* OOMLAOPBDDP, float AOHDCECOBEG);
    // private System.Void ADBHMPBMGHK(System.Action OOMLAOPBDDP, System.Single AOHDCECOBEG)
    // Offset: 0x148726C
    void ADBHMPBMGHK(::System::Action* OOMLAOPBDDP, float AOHDCECOBEG);
    // private System.Void ICIBHKDPEIC()
    // Offset: 0x1487298
    void ICIBHKDPEIC();
    // private System.Void HBJNBBJPKDK(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x1487970
    void HBJNBBJPKDK(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void HPOPJEPGLBM()
    // Offset: 0x14829BC
    void HPOPJEPGLBM();
    // private System.Void KGCMHEAFJBG(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x1487C6C
    void KGCMHEAFJBG(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void JKEBDDHCLKC(UnityEngine.GameObject LLLJHGBODFK)
    // Offset: 0x1487C70
    void JKEBDDHCLKC(::UnityEngine::GameObject* LLLJHGBODFK);
    // private System.Void LKNLFGFEAGH()
    // Offset: 0x1487D2C
    void LKNLFGFEAGH();
    // private System.Void ONBMIALIDOE()
    // Offset: 0x1487DB4
    void ONBMIALIDOE();
    // private System.Void JBHJDFKCEHI(UnityEngine.GameObject COOALIDKDEB, UnityEngine.GameObject EBIFBMFMODN, UnityEngine.GameObject NGLENINPEJC)
    // Offset: 0x1487DFC
    void JBHJDFKCEHI(::UnityEngine::GameObject* COOALIDKDEB, ::UnityEngine::GameObject* EBIFBMFMODN, ::UnityEngine::GameObject* NGLENINPEJC);
    // private System.Void CFKIPBFPJHG(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x1487EF8
    void CFKIPBFPJHG(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void CNDFIIBOLLL()
    // Offset: 0x1487EFC
    void CNDFIIBOLLL();
    // private System.Void ALKMFGCPEKD(MagicalActual.DamageParams LHJBCMKCCFC)
    // Offset: 0x1487F04
    void ALKMFGCPEKD(::MagicalActual::DamageParams* LHJBCMKCCFC);
    // private System.Void PJOIJIEDPMP()
    // Offset: 0x1487FA0
    void PJOIJIEDPMP();
  }; // MagicalActual.PlayerWand
  #pragma pack(pop)
  static check_size<sizeof(PlayerWand), 280 + sizeof(::MagicalActual::PlayerWand::wandState)> __MagicalActual_PlayerWandSizeCheck;
  static_assert(sizeof(PlayerWand) == 0x11C);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PlayerWand::wandState, "MagicalActual", "PlayerWand/wandState");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PlayerWand::FIGGNKAIBGP
// Il2CppName: FIGGNKAIBGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::FIGGNKAIBGP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "FIGGNKAIBGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::NHDGBJOINDF
// Il2CppName: NHDGBJOINDF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::PlayerWand::NHDGBJOINDF)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "NHDGBJOINDF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::BEHGEJMNOBC
// Il2CppName: BEHGEJMNOBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::BEHGEJMNOBC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "BEHGEJMNOBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::OIPKJHFGOBD
// Il2CppName: OIPKJHFGOBD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::OIPKJHFGOBD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "OIPKJHFGOBD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::CDJDBJJCKOD
// Il2CppName: CDJDBJJCKOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::PlayerWand::*)(::UnityEngine::Transform*, ::UnityEngine::Vector3)>(&MagicalActual::PlayerWand::CDJDBJJCKOD)> {
  static const MethodInfo* get() {
    static auto* EIJFPEAIJGM = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "CDJDBJJCKOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EIJFPEAIJGM, NHFBFBMNPFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::EEMBCPKCOIL
// Il2CppName: EEMBCPKCOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::EEMBCPKCOIL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "EEMBCPKCOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::BDKGMLBENBB
// Il2CppName: BDKGMLBENBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::PlayerWand::BDKGMLBENBB)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "BDKGMLBENBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::BPONBBMJFOJ
// Il2CppName: BPONBBMJFOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::PlayerWand::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, float, float)>(&MagicalActual::PlayerWand::BPONBBMJFOJ)> {
  static const MethodInfo* get() {
    static auto* MILGJAJMKAB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LKMBPNJDCFN = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* BINJODOOEDL = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "BPONBBMJFOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MILGJAJMKAB, LKMBPNJDCFN, BINJODOOEDL, FFNMEJOKJID});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PlayerWand::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::OBHDPMALFLL
// Il2CppName: OBHDPMALFLL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::OBHDPMALFLL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "OBHDPMALFLL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::OCFJMAMGAJG
// Il2CppName: OCFJMAMGAJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::System::Action*, float)>(&MagicalActual::PlayerWand::OCFJMAMGAJG)> {
  static const MethodInfo* get() {
    static auto* OOMLAOPBDDP = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* AOHDCECOBEG = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "OCFJMAMGAJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OOMLAOPBDDP, AOHDCECOBEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::PINCIALPIDO
// Il2CppName: PINCIALPIDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::PlayerWand::*)(::UnityEngine::Transform*, ::UnityEngine::Vector3)>(&MagicalActual::PlayerWand::PINCIALPIDO)> {
  static const MethodInfo* get() {
    static auto* EIJFPEAIJGM = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "PINCIALPIDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EIJFPEAIJGM, NHFBFBMNPFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::EMDIIOGANLK
// Il2CppName: EMDIIOGANLK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::MagicalActual::PlayerCharacter*, ::MagicalActual::DamageAffinity, ::UnityEngine::GameObject*)>(&MagicalActual::PlayerWand::EMDIIOGANLK)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerCharacter")->byval_arg;
    static auto* CDJBMMJJDEA = &::il2cpp_utils::GetClassFromName("MagicalActual", "DamageAffinity")->byval_arg;
    static auto* AKMHLJIJNNA = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "EMDIIOGANLK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD, CDJBMMJJDEA, AKMHLJIJNNA});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::NMEAHCEDNOM
// Il2CppName: NMEAHCEDNOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::PlayerWand::*)(::System::Action*, float)>(&MagicalActual::PlayerWand::NMEAHCEDNOM)> {
  static const MethodInfo* get() {
    static auto* OOMLAOPBDDP = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* AOHDCECOBEG = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "NMEAHCEDNOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OOMLAOPBDDP, AOHDCECOBEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::EPPBEMKALJJ
// Il2CppName: EPPBEMKALJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::System::Action*, float)>(&MagicalActual::PlayerWand::EPPBEMKALJJ)> {
  static const MethodInfo* get() {
    static auto* OOMLAOPBDDP = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* AOHDCECOBEG = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "EPPBEMKALJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OOMLAOPBDDP, AOHDCECOBEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::AEIOJDICDIF
// Il2CppName: AEIOJDICDIF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::MagicalActual::PlayerCharacter*, ::MagicalActual::DamageAffinity, ::UnityEngine::GameObject*)>(&MagicalActual::PlayerWand::AEIOJDICDIF)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerCharacter")->byval_arg;
    static auto* CDJBMMJJDEA = &::il2cpp_utils::GetClassFromName("MagicalActual", "DamageAffinity")->byval_arg;
    static auto* AKMHLJIJNNA = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "AEIOJDICDIF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD, CDJBMMJJDEA, AKMHLJIJNNA});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::FJFBMLAAGJM
// Il2CppName: FJFBMLAAGJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::FJFBMLAAGJM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "FJFBMLAAGJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::MFHMOILMNDP
// Il2CppName: MFHMOILMNDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::MFHMOILMNDP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "MFHMOILMNDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::FCJDBOMLEBE
// Il2CppName: FCJDBOMLEBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::FCJDBOMLEBE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "FCJDBOMLEBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::DICIBIEKAJP
// Il2CppName: DICIBIEKAJP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::System::Action*, float)>(&MagicalActual::PlayerWand::DICIBIEKAJP)> {
  static const MethodInfo* get() {
    static auto* OOMLAOPBDDP = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* AOHDCECOBEG = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "DICIBIEKAJP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OOMLAOPBDDP, AOHDCECOBEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::ANOHLCKFIDJ
// Il2CppName: ANOHLCKFIDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::UnityEngine::Vector3, ::StringW)>(&MagicalActual::PlayerWand::ANOHLCKFIDJ)> {
  static const MethodInfo* get() {
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* CPHIAJICHEE = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "ANOHLCKFIDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHFBFBMNPFC, CPHIAJICHEE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::getRelativePosition
// Il2CppName: getRelativePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::PlayerWand::*)(::UnityEngine::Transform*, ::UnityEngine::Vector3)>(&MagicalActual::PlayerWand::getRelativePosition)> {
  static const MethodInfo* get() {
    static auto* EIJFPEAIJGM = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "getRelativePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EIJFPEAIJGM, NHFBFBMNPFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::OMINIMGOMOD
// Il2CppName: OMINIMGOMOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::OMINIMGOMOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "OMINIMGOMOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::MHOKADOJNIN
// Il2CppName: MHOKADOJNIN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::MHOKADOJNIN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "MHOKADOJNIN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::OAOPCOELNCE
// Il2CppName: OAOPCOELNCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::PlayerWand::OAOPCOELNCE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "OAOPCOELNCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::HNBDKNBHMDF
// Il2CppName: HNBDKNBHMDF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::HNBDKNBHMDF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "HNBDKNBHMDF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::KOCGMNGLOKP
// Il2CppName: KOCGMNGLOKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::MagicalActual::PlayerCharacter*, ::MagicalActual::DamageAffinity, ::UnityEngine::GameObject*)>(&MagicalActual::PlayerWand::KOCGMNGLOKP)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerCharacter")->byval_arg;
    static auto* CDJBMMJJDEA = &::il2cpp_utils::GetClassFromName("MagicalActual", "DamageAffinity")->byval_arg;
    static auto* AKMHLJIJNNA = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "KOCGMNGLOKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD, CDJBMMJJDEA, AKMHLJIJNNA});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::MMBANAMOKEF
// Il2CppName: MMBANAMOKEF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::PlayerWand::MMBANAMOKEF)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "MMBANAMOKEF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::DJIGIJKOPDC
// Il2CppName: DJIGIJKOPDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::DJIGIJKOPDC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "DJIGIJKOPDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::KONOHFMBGJA
// Il2CppName: KONOHFMBGJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::KONOHFMBGJA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "KONOHFMBGJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::NGKONJGKMBE
// Il2CppName: NGKONJGKMBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::NGKONJGKMBE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "NGKONJGKMBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::GGEKONLJAEB
// Il2CppName: GGEKONLJAEB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::GGEKONLJAEB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "GGEKONLJAEB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::PKJBBDBAKAN
// Il2CppName: PKJBBDBAKAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::PlayerWand::PKJBBDBAKAN)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "PKJBBDBAKAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::MCNMEJHGJBJ
// Il2CppName: MCNMEJHGJBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::UnityEngine::GameObject*, ::UnityEngine::GameObject*, int, ::System::Action_1<::UnityEngine::GameObject*>*)>(&MagicalActual::PlayerWand::MCNMEJHGJBJ)> {
  static const MethodInfo* get() {
    static auto* DKPGALMFHDH = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* NGLENINPEJC = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* NKMEGNHBJHN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JEJJEEHGKJO = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "MCNMEJHGJBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DKPGALMFHDH, NGLENINPEJC, NKMEGNHBJHN, JEJJEEHGKJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::PCHAECAGCPC
// Il2CppName: PCHAECAGCPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::System::Action*, float)>(&MagicalActual::PlayerWand::PCHAECAGCPC)> {
  static const MethodInfo* get() {
    static auto* OOMLAOPBDDP = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* AOHDCECOBEG = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "PCHAECAGCPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OOMLAOPBDDP, AOHDCECOBEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::DFKJEBLLDMM
// Il2CppName: DFKJEBLLDMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::PlayerWand::DFKJEBLLDMM)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "DFKJEBLLDMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::AFLNGBMDJEJ
// Il2CppName: AFLNGBMDJEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::AFLNGBMDJEJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "AFLNGBMDJEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::PAHIDPOLIGH
// Il2CppName: PAHIDPOLIGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::PAHIDPOLIGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "PAHIDPOLIGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::AMAMEGMFOPE
// Il2CppName: AMAMEGMFOPE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::AMAMEGMFOPE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "AMAMEGMFOPE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::IIMFBNGPGEK
// Il2CppName: IIMFBNGPGEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::UnityEngine::Vector3, ::StringW)>(&MagicalActual::PlayerWand::IIMFBNGPGEK)> {
  static const MethodInfo* get() {
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* CPHIAJICHEE = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "IIMFBNGPGEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHFBFBMNPFC, CPHIAJICHEE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::BDMNNHELAKG
// Il2CppName: BDMNNHELAKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::UnityEngine::GameObject*)>(&MagicalActual::PlayerWand::BDMNNHELAKG)> {
  static const MethodInfo* get() {
    static auto* LLLJHGBODFK = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "BDMNNHELAKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LLLJHGBODFK});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::BMALDPKJJPG
// Il2CppName: BMALDPKJJPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::BMALDPKJJPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "BMALDPKJJPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::CFLJEDFBJBL
// Il2CppName: CFLJEDFBJBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::CFLJEDFBJBL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "CFLJEDFBJBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::GDDECOGGKOL
// Il2CppName: GDDECOGGKOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::GDDECOGGKOL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "GDDECOGGKOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::MOBELIFDAOA
// Il2CppName: MOBELIFDAOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::PlayerWand::MOBELIFDAOA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "MOBELIFDAOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::dealDamage
// Il2CppName: dealDamage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::MagicalActual::DamageParams*)>(&MagicalActual::PlayerWand::dealDamage)> {
  static const MethodInfo* get() {
    static auto* LHJBCMKCCFC = &::il2cpp_utils::GetClassFromName("MagicalActual", "DamageParams")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "dealDamage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LHJBCMKCCFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::CAOJAIMKBIF
// Il2CppName: CAOJAIMKBIF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::PlayerWand::CAOJAIMKBIF)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "CAOJAIMKBIF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::KENJCKJEKME
// Il2CppName: KENJCKJEKME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::PlayerWand::*)(::System::Action*, float)>(&MagicalActual::PlayerWand::KENJCKJEKME)> {
  static const MethodInfo* get() {
    static auto* OOMLAOPBDDP = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* AOHDCECOBEG = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "KENJCKJEKME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OOMLAOPBDDP, AOHDCECOBEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::ADBHMPBMGHK
// Il2CppName: ADBHMPBMGHK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::System::Action*, float)>(&MagicalActual::PlayerWand::ADBHMPBMGHK)> {
  static const MethodInfo* get() {
    static auto* OOMLAOPBDDP = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    static auto* AOHDCECOBEG = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "ADBHMPBMGHK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OOMLAOPBDDP, AOHDCECOBEG});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::ICIBHKDPEIC
// Il2CppName: ICIBHKDPEIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::ICIBHKDPEIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "ICIBHKDPEIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::HBJNBBJPKDK
// Il2CppName: HBJNBBJPKDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::PlayerWand::HBJNBBJPKDK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "HBJNBBJPKDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::HPOPJEPGLBM
// Il2CppName: HPOPJEPGLBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::HPOPJEPGLBM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "HPOPJEPGLBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::KGCMHEAFJBG
// Il2CppName: KGCMHEAFJBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::PlayerWand::KGCMHEAFJBG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "KGCMHEAFJBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::JKEBDDHCLKC
// Il2CppName: JKEBDDHCLKC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::UnityEngine::GameObject*)>(&MagicalActual::PlayerWand::JKEBDDHCLKC)> {
  static const MethodInfo* get() {
    static auto* LLLJHGBODFK = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "JKEBDDHCLKC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LLLJHGBODFK});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::LKNLFGFEAGH
// Il2CppName: LKNLFGFEAGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::LKNLFGFEAGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "LKNLFGFEAGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::ONBMIALIDOE
// Il2CppName: ONBMIALIDOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::ONBMIALIDOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "ONBMIALIDOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::JBHJDFKCEHI
// Il2CppName: JBHJDFKCEHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::UnityEngine::GameObject*, ::UnityEngine::GameObject*, ::UnityEngine::GameObject*)>(&MagicalActual::PlayerWand::JBHJDFKCEHI)> {
  static const MethodInfo* get() {
    static auto* COOALIDKDEB = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* EBIFBMFMODN = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* NGLENINPEJC = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "JBHJDFKCEHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{COOALIDKDEB, EBIFBMFMODN, NGLENINPEJC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::CFKIPBFPJHG
// Il2CppName: CFKIPBFPJHG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::PlayerWand::CFKIPBFPJHG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "CFKIPBFPJHG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::CNDFIIBOLLL
// Il2CppName: CNDFIIBOLLL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::CNDFIIBOLLL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "CNDFIIBOLLL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::ALKMFGCPEKD
// Il2CppName: ALKMFGCPEKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)(::MagicalActual::DamageParams*)>(&MagicalActual::PlayerWand::ALKMFGCPEKD)> {
  static const MethodInfo* get() {
    static auto* LHJBCMKCCFC = &::il2cpp_utils::GetClassFromName("MagicalActual", "DamageParams")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "ALKMFGCPEKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LHJBCMKCCFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerWand::PJOIJIEDPMP
// Il2CppName: PJOIJIEDPMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerWand::*)()>(&MagicalActual::PlayerWand::PJOIJIEDPMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerWand*), "PJOIJIEDPMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
