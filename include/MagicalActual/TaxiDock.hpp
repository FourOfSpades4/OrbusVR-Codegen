// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Taxi
  class Taxi;
  // Forward declaring type: NavigationTaxi
  class NavigationTaxi;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: TaxiDock
  class TaxiDock;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::TaxiDock);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::TaxiDock*, "MagicalActual", "TaxiDock");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.TaxiDock
  // [TokenAttribute] Offset: FFFFFFFF
  class TaxiDock : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Taxi BCLOKHFCCFJ
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Taxi* BCLOKHFCCFJ;
    // Field size check
    static_assert(sizeof(::MagicalActual::Taxi*) == 0x8);
    // public MagicalActual.NavigationTaxi teleportTaxi
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NavigationTaxi* teleportTaxi;
    // Field size check
    static_assert(sizeof(::MagicalActual::NavigationTaxi*) == 0x8);
    // public MagicalActual.NavigationTaxi exitTaxi
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::NavigationTaxi* exitTaxi;
    // Field size check
    static_assert(sizeof(::MagicalActual::NavigationTaxi*) == 0x8);
    // public UnityEngine.GameObject drawBridge
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* drawBridge;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single MNEBMPCAKBH
    // Size: 0x4
    // Offset: 0x38
    float MNEBMPCAKBH;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single DEKGICKCJOK
    // Size: 0x4
    // Offset: 0x3C
    float DEKGICKCJOK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Taxi BCLOKHFCCFJ
    [[deprecated("Use field access instead!")]] ::MagicalActual::Taxi*& dyn_BCLOKHFCCFJ();
    // Get instance field reference: public MagicalActual.NavigationTaxi teleportTaxi
    [[deprecated("Use field access instead!")]] ::MagicalActual::NavigationTaxi*& dyn_teleportTaxi();
    // Get instance field reference: public MagicalActual.NavigationTaxi exitTaxi
    [[deprecated("Use field access instead!")]] ::MagicalActual::NavigationTaxi*& dyn_exitTaxi();
    // Get instance field reference: public UnityEngine.GameObject drawBridge
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_drawBridge();
    // Get instance field reference: private System.Single MNEBMPCAKBH
    [[deprecated("Use field access instead!")]] float& dyn_MNEBMPCAKBH();
    // Get instance field reference: private System.Single DEKGICKCJOK
    [[deprecated("Use field access instead!")]] float& dyn_DEKGICKCJOK();
    // private System.Void HJEMGEKCDJL()
    // Offset: 0x166FA28
    void HJEMGEKCDJL();
    // private System.Void HEILJFMKPCH()
    // Offset: 0x166FAB0
    void HEILJFMKPCH();
    // private System.Void GDLDHEMDDAC()
    // Offset: 0x166FBD0
    void GDLDHEMDDAC();
    // private System.Void NBMIGEDAJKL()
    // Offset: 0x166FCF0
    void NBMIGEDAJKL();
    // private System.Void OJACFGALJGI()
    // Offset: 0x166FE10
    void OJACFGALJGI();
    // private System.Void BKPJLJHMGOO(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x166FE98
    void BKPJLJHMGOO(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void BMCHLHCEOKC()
    // Offset: 0x16700D4
    void BMCHLHCEOKC();
    // private System.Void NLBHHPFOKEL()
    // Offset: 0x16701F4
    void NLBHHPFOKEL();
    // private System.Void AMIPIMKIJMO()
    // Offset: 0x167027C
    void AMIPIMKIJMO();
    // private System.Void HJKFJENIJFO()
    // Offset: 0x16705D4
    void HJKFJENIJFO();
    // private System.Void PPKGLOIDHPC(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x16706A4
    void PPKGLOIDHPC(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void NLFOPEAGLDJ()
    // Offset: 0x167073C
    void NLFOPEAGLDJ();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x1670A98
    void DFCOAPEIKLN();
    // private System.Void HNCFOMLACKG(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x1670B68
    void HNCFOMLACKG(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void GBHCLNJDGLM()
    // Offset: 0x1670978
    void GBHCLNJDGLM();
    // private System.Void HLCJGDCAADP()
    // Offset: 0x1670DA4
    void HLCJGDCAADP();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x1670E2C
    void EPCHNEGNKNF();
    // private System.Void CBHNJJFFMOM()
    // Offset: 0x1670EFC
    void CBHNJJFFMOM();
    // private System.Void TaxiAvailable(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x167101C
    void TaxiAvailable(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void AHPPBBLDHBA(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x1671254
    void AHPPBBLDHBA(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void EPFKDDFLMJF()
    // Offset: 0x16704B8
    void EPFKDDFLMJF();
    // private System.Void FixedUpdate()
    // Offset: 0x1671490
    void FixedUpdate();
    // private System.Void GGAFMPPDBOH()
    // Offset: 0x16716C0
    void GGAFMPPDBOH();
    // private System.Void BLIPCIAAIHI()
    // Offset: 0x1671A1C
    void BLIPCIAAIHI();
    // private System.Void GNMNHPHDANO(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x1671C58
    void GNMNHPHDANO(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void GDNNDAFNAKD()
    // Offset: 0x1671CF0
    void GDNNDAFNAKD();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x1671D78
    void IPIFMKAGODD();
    // private System.Void BFMLEIMIHIO()
    // Offset: 0x1671E48
    void BFMLEIMIHIO();
    // private System.Void TaxiUnavailable(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x1671ED0
    void TaxiUnavailable(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void FPGHBPGMFEH(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x1671F68
    void FPGHBPGMFEH(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void OIMFPMLEHKC()
    // Offset: 0x16721A4
    void OIMFPMLEHKC();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x167222C
    void MLGBKBMHHLE();
    // private System.Void NFIOIJCOOBF()
    // Offset: 0x16718FC
    void NFIOIJCOOBF();
    // private System.Void GMPKGINHKAC(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x16722FC
    void GMPKGINHKAC(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void LLBAENEGEMN()
    // Offset: 0x1672394
    void LLBAENEGEMN();
    // private System.Void AOHCBKACNPN(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x16725D0
    void AOHCBKACNPN(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x1672668
    void NEDFCIDMJBB();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x1672738
    void DGJGAFKDIDK();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x1672808
    void OACMGPBCPEL();
    // public System.Void .ctor()
    // Offset: 0x16728D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TaxiDock* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::TaxiDock::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TaxiDock*, creationType>()));
    }
    // private System.Void AHMLIMDJCJO()
    // Offset: 0x16728E0
    void AHMLIMDJCJO();
    // private System.Void Start()
    // Offset: 0x1672B10
    void Start();
    // private System.Void CLICNBNFEEP(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x1672BDC
    void CLICNBNFEEP(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void EPIGHEHLDDP(MagicalActual.Taxi FOIEAOKBGLM)
    // Offset: 0x1672C74
    void EPIGHEHLDDP(::MagicalActual::Taxi* FOIEAOKBGLM);
    // private System.Void GEBDKEDAGEO()
    // Offset: 0x1672EB0
    void GEBDKEDAGEO();
    // private System.Void JCCJLPJGFBO()
    // Offset: 0x1672F38
    void JCCJLPJGFBO();
  }; // MagicalActual.TaxiDock
  #pragma pack(pop)
  static check_size<sizeof(TaxiDock), 60 + sizeof(float)> __MagicalActual_TaxiDockSizeCheck;
  static_assert(sizeof(TaxiDock) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::TaxiDock::HJEMGEKCDJL
// Il2CppName: HJEMGEKCDJL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::HJEMGEKCDJL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "HJEMGEKCDJL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::HEILJFMKPCH
// Il2CppName: HEILJFMKPCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::HEILJFMKPCH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "HEILJFMKPCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::GDLDHEMDDAC
// Il2CppName: GDLDHEMDDAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::GDLDHEMDDAC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "GDLDHEMDDAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::NBMIGEDAJKL
// Il2CppName: NBMIGEDAJKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::NBMIGEDAJKL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "NBMIGEDAJKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::OJACFGALJGI
// Il2CppName: OJACFGALJGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::OJACFGALJGI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "OJACFGALJGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::BKPJLJHMGOO
// Il2CppName: BKPJLJHMGOO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::BKPJLJHMGOO)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "BKPJLJHMGOO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::BMCHLHCEOKC
// Il2CppName: BMCHLHCEOKC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::BMCHLHCEOKC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "BMCHLHCEOKC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::NLBHHPFOKEL
// Il2CppName: NLBHHPFOKEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::NLBHHPFOKEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "NLBHHPFOKEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::AMIPIMKIJMO
// Il2CppName: AMIPIMKIJMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::AMIPIMKIJMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "AMIPIMKIJMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::HJKFJENIJFO
// Il2CppName: HJKFJENIJFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::HJKFJENIJFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "HJKFJENIJFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::PPKGLOIDHPC
// Il2CppName: PPKGLOIDHPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::PPKGLOIDHPC)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "PPKGLOIDHPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::NLFOPEAGLDJ
// Il2CppName: NLFOPEAGLDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::NLFOPEAGLDJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "NLFOPEAGLDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::HNCFOMLACKG
// Il2CppName: HNCFOMLACKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::HNCFOMLACKG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "HNCFOMLACKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::GBHCLNJDGLM
// Il2CppName: GBHCLNJDGLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::GBHCLNJDGLM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "GBHCLNJDGLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::HLCJGDCAADP
// Il2CppName: HLCJGDCAADP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::HLCJGDCAADP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "HLCJGDCAADP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::CBHNJJFFMOM
// Il2CppName: CBHNJJFFMOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::CBHNJJFFMOM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "CBHNJJFFMOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::TaxiAvailable
// Il2CppName: TaxiAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::TaxiAvailable)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "TaxiAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::AHPPBBLDHBA
// Il2CppName: AHPPBBLDHBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::AHPPBBLDHBA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "AHPPBBLDHBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::EPFKDDFLMJF
// Il2CppName: EPFKDDFLMJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::EPFKDDFLMJF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "EPFKDDFLMJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::GGAFMPPDBOH
// Il2CppName: GGAFMPPDBOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::GGAFMPPDBOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "GGAFMPPDBOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::BLIPCIAAIHI
// Il2CppName: BLIPCIAAIHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::BLIPCIAAIHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "BLIPCIAAIHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::GNMNHPHDANO
// Il2CppName: GNMNHPHDANO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::GNMNHPHDANO)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "GNMNHPHDANO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::GDNNDAFNAKD
// Il2CppName: GDNNDAFNAKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::GDNNDAFNAKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "GDNNDAFNAKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::BFMLEIMIHIO
// Il2CppName: BFMLEIMIHIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::BFMLEIMIHIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "BFMLEIMIHIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::TaxiUnavailable
// Il2CppName: TaxiUnavailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::TaxiUnavailable)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "TaxiUnavailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::FPGHBPGMFEH
// Il2CppName: FPGHBPGMFEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::FPGHBPGMFEH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "FPGHBPGMFEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::OIMFPMLEHKC
// Il2CppName: OIMFPMLEHKC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::OIMFPMLEHKC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "OIMFPMLEHKC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::NFIOIJCOOBF
// Il2CppName: NFIOIJCOOBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::NFIOIJCOOBF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "NFIOIJCOOBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::GMPKGINHKAC
// Il2CppName: GMPKGINHKAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::GMPKGINHKAC)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "GMPKGINHKAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::LLBAENEGEMN
// Il2CppName: LLBAENEGEMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::LLBAENEGEMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "LLBAENEGEMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::AOHCBKACNPN
// Il2CppName: AOHCBKACNPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::AOHCBKACNPN)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "AOHCBKACNPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::TaxiDock::AHMLIMDJCJO
// Il2CppName: AHMLIMDJCJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::AHMLIMDJCJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "AHMLIMDJCJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::CLICNBNFEEP
// Il2CppName: CLICNBNFEEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::CLICNBNFEEP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "CLICNBNFEEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::EPIGHEHLDDP
// Il2CppName: EPIGHEHLDDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)(::MagicalActual::Taxi*)>(&MagicalActual::TaxiDock::EPIGHEHLDDP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Taxi")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "EPIGHEHLDDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::GEBDKEDAGEO
// Il2CppName: GEBDKEDAGEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::GEBDKEDAGEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "GEBDKEDAGEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TaxiDock::JCCJLPJGFBO
// Il2CppName: JCCJLPJGFBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TaxiDock::*)()>(&MagicalActual::TaxiDock::JCCJLPJGFBO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TaxiDock*), "JCCJLPJGFBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
