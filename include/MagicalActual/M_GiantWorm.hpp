// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_GiantWorm
  class M_GiantWorm;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_GiantWorm);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_GiantWorm*, "MagicalActual", "M_GiantWorm");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x42
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_GiantWorm
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD520C
  class M_GiantWorm : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxBreath
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* vfxBreath;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x38
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean NJFNCKLFAFJ
    // Size: 0x1
    // Offset: 0x40
    bool NJFNCKLFAFJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean FGEFACJKBOK
    // Size: 0x1
    // Offset: 0x41
    bool FGEFACJKBOK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public UnityEngine.GameObject vfxBreath
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxBreath();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private System.Boolean NJFNCKLFAFJ
    [[deprecated("Use field access instead!")]] bool& dyn_NJFNCKLFAFJ();
    // Get instance field reference: private System.Boolean FGEFACJKBOK
    [[deprecated("Use field access instead!")]] bool& dyn_FGEFACJKBOK();
    // public System.Void PKEPDEKDFKB()
    // Offset: 0x24D210C
    void PKEPDEKDFKB();
    // public System.Void BOOLNOCMJHB()
    // Offset: 0x24D21A8
    void BOOLNOCMJHB();
    // public System.Void Slash()
    // Offset: 0x24D2224
    void Slash();
    // public System.Void PNJNMBPNJLH()
    // Offset: 0x24D243C
    void PNJNMBPNJLH();
    // private System.Void IIBKDPHIFME(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D24B8
    void IIBKDPHIFME(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MIPEOCANMMO()
    // Offset: 0x24D2678
    void MIPEOCANMMO();
    // private System.Void KMBEEMGONCH(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D26D0
    void KMBEEMGONCH(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LAJNKINCKMB(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D2890
    void LAJNKINCKMB(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void CNBJHFMDCOE()
    // Offset: 0x24D2A50
    void CNBJHFMDCOE();
    // private System.Void DBMFAHJIEHA()
    // Offset: 0x24D28FC
    void DBMFAHJIEHA();
    // public System.Void StopBreath()
    // Offset: 0x24D2AA8
    void StopBreath();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24D2B44
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void DACAJDEABIJ()
    // Offset: 0x24D2C58
    void DACAJDEABIJ();
    // private System.Void CCPJHPAEOEC(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D2CF4
    void CCPJHPAEOEC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MCDKKKDMOKO(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D2D60
    void MCDKKKDMOKO(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void JILOFOGKHAB()
    // Offset: 0x24D2F20
    void JILOFOGKHAB();
    // public System.Void OMKBAIIIFBJ()
    // Offset: 0x24D2F9C
    void OMKBAIIIFBJ();
    // public System.Void Breath()
    // Offset: 0x24D31C0
    void Breath();
    // private System.Void GGHKNBJPGCH()
    // Offset: 0x24D273C
    void GGHKNBJPGCH();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x24D3238
    void KPOAAAHLGLA();
    // public System.Void IIOPIFFOAPM()
    // Offset: 0x24D323C
    void IIOPIFFOAPM();
    // public System.Void KMPPLBBIMGJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24D32B8
    void KMPPLBBIMGJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EIFPAFNPLHB(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D33CC
    void EIFPAFNPLHB(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void HMIDAAAHFCB()
    // Offset: 0x24D3438
    void HMIDAAAHFCB();
    // private System.Void JOFKAKMDMBC()
    // Offset: 0x24D2DCC
    void JOFKAKMDMBC();
    // private System.Void EKALCBIFAFC(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D365C
    void EKALCBIFAFC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void OLJMAOLAAFJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D36C8
    void OLJMAOLAAFJ(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void OLDCIEBLCAE()
    // Offset: 0x24D3734
    void OLDCIEBLCAE();
    // public System.Void MKAECMFKIEN()
    // Offset: 0x24D37D0
    void MKAECMFKIEN();
    // private System.Void LHOOGNBFPBI(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D39F4
    void LHOOGNBFPBI(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void LJAHODPDFCA()
    // Offset: 0x24D3A60
    void LJAHODPDFCA();
    // private System.Void NBDILDIPHAC(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D3ADC
    void NBDILDIPHAC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LACFBAIDCBK()
    // Offset: 0x24D3B48
    void LACFBAIDCBK();
    // private System.Void Start()
    // Offset: 0x24D3BA0
    void Start();
    // private System.Void BMALDPKJJPG()
    // Offset: 0x24D3BA4
    void BMALDPKJJPG();
    // private System.Void CLPGLKNGIJE(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D3BFC
    void CLPGLKNGIJE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LPBMKPMADKG()
    // Offset: 0x24D2524
    void LPBMKPMADKG();
    // public System.Void .ctor()
    // Offset: 0x24D3C68
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_GiantWorm* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_GiantWorm::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_GiantWorm*, creationType>()));
    }
    // private System.Void JICHFPHFFEK(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D3CC0
    void JICHFPHFFEK(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GCNFDILCIJL(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D3D2C
    void GCNFDILCIJL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x24D3D98
    void ABIHCGOKNCL();
    // private System.Void JIBONDIIJCG(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D3D9C
    void JIBONDIIJCG(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void JMPBEJDKDGJ()
    // Offset: 0x24D3E08
    void JMPBEJDKDGJ();
    // private System.Void FKFAKDFFFGJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D402C
    void FKFAKDFFFGJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Awake()
    // Offset: 0x24D4098
    void Awake();
  }; // MagicalActual.M_GiantWorm
  #pragma pack(pop)
  static check_size<sizeof(M_GiantWorm), 65 + sizeof(bool)> __MagicalActual_M_GiantWormSizeCheck;
  static_assert(sizeof(M_GiantWorm) == 0x42);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::PKEPDEKDFKB
// Il2CppName: PKEPDEKDFKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::PKEPDEKDFKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "PKEPDEKDFKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::BOOLNOCMJHB
// Il2CppName: BOOLNOCMJHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::BOOLNOCMJHB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "BOOLNOCMJHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::PNJNMBPNJLH
// Il2CppName: PNJNMBPNJLH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::PNJNMBPNJLH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "PNJNMBPNJLH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::IIBKDPHIFME
// Il2CppName: IIBKDPHIFME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::IIBKDPHIFME)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "IIBKDPHIFME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::MIPEOCANMMO
// Il2CppName: MIPEOCANMMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::MIPEOCANMMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "MIPEOCANMMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::KMBEEMGONCH
// Il2CppName: KMBEEMGONCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::KMBEEMGONCH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "KMBEEMGONCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::LAJNKINCKMB
// Il2CppName: LAJNKINCKMB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::LAJNKINCKMB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "LAJNKINCKMB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::CNBJHFMDCOE
// Il2CppName: CNBJHFMDCOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::CNBJHFMDCOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "CNBJHFMDCOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::DBMFAHJIEHA
// Il2CppName: DBMFAHJIEHA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::DBMFAHJIEHA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "DBMFAHJIEHA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::StopBreath
// Il2CppName: StopBreath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::StopBreath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "StopBreath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_GiantWorm::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::DACAJDEABIJ
// Il2CppName: DACAJDEABIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::DACAJDEABIJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "DACAJDEABIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::CCPJHPAEOEC
// Il2CppName: CCPJHPAEOEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::CCPJHPAEOEC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "CCPJHPAEOEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::MCDKKKDMOKO
// Il2CppName: MCDKKKDMOKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::MCDKKKDMOKO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "MCDKKKDMOKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::JILOFOGKHAB
// Il2CppName: JILOFOGKHAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::JILOFOGKHAB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "JILOFOGKHAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::OMKBAIIIFBJ
// Il2CppName: OMKBAIIIFBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::OMKBAIIIFBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "OMKBAIIIFBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::Breath
// Il2CppName: Breath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::Breath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "Breath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::GGHKNBJPGCH
// Il2CppName: GGHKNBJPGCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::GGHKNBJPGCH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "GGHKNBJPGCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::IIOPIFFOAPM
// Il2CppName: IIOPIFFOAPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::IIOPIFFOAPM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "IIOPIFFOAPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::KMPPLBBIMGJ
// Il2CppName: KMPPLBBIMGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_GiantWorm::KMPPLBBIMGJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "KMPPLBBIMGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::EIFPAFNPLHB
// Il2CppName: EIFPAFNPLHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::EIFPAFNPLHB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "EIFPAFNPLHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::HMIDAAAHFCB
// Il2CppName: HMIDAAAHFCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::HMIDAAAHFCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "HMIDAAAHFCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::JOFKAKMDMBC
// Il2CppName: JOFKAKMDMBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::JOFKAKMDMBC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "JOFKAKMDMBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::EKALCBIFAFC
// Il2CppName: EKALCBIFAFC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::EKALCBIFAFC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "EKALCBIFAFC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::OLJMAOLAAFJ
// Il2CppName: OLJMAOLAAFJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::OLJMAOLAAFJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "OLJMAOLAAFJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::OLDCIEBLCAE
// Il2CppName: OLDCIEBLCAE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::OLDCIEBLCAE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "OLDCIEBLCAE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::MKAECMFKIEN
// Il2CppName: MKAECMFKIEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::MKAECMFKIEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "MKAECMFKIEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::LHOOGNBFPBI
// Il2CppName: LHOOGNBFPBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::LHOOGNBFPBI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "LHOOGNBFPBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::LJAHODPDFCA
// Il2CppName: LJAHODPDFCA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::LJAHODPDFCA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "LJAHODPDFCA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::NBDILDIPHAC
// Il2CppName: NBDILDIPHAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::NBDILDIPHAC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "NBDILDIPHAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::LACFBAIDCBK
// Il2CppName: LACFBAIDCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::LACFBAIDCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "LACFBAIDCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::BMALDPKJJPG
// Il2CppName: BMALDPKJJPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::BMALDPKJJPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "BMALDPKJJPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::CLPGLKNGIJE
// Il2CppName: CLPGLKNGIJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::CLPGLKNGIJE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "CLPGLKNGIJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::LPBMKPMADKG
// Il2CppName: LPBMKPMADKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::LPBMKPMADKG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "LPBMKPMADKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::JICHFPHFFEK
// Il2CppName: JICHFPHFFEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::JICHFPHFFEK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "JICHFPHFFEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::GCNFDILCIJL
// Il2CppName: GCNFDILCIJL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::GCNFDILCIJL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "GCNFDILCIJL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::JIBONDIIJCG
// Il2CppName: JIBONDIIJCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::JIBONDIIJCG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "JIBONDIIJCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::JMPBEJDKDGJ
// Il2CppName: JMPBEJDKDGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::JMPBEJDKDGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "JMPBEJDKDGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::FKFAKDFFFGJ
// Il2CppName: FKFAKDFFFGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)(::Il2CppObject*)>(&MagicalActual::M_GiantWorm::FKFAKDFFFGJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "FKFAKDFFFGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_GiantWorm::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_GiantWorm::*)()>(&MagicalActual::M_GiantWorm::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_GiantWorm*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
