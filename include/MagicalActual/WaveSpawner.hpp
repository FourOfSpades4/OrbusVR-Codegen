// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerGroupings
  class PlayerGroupings;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: WaveSpawner
  class WaveSpawner;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::WaveSpawner);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::WaveSpawner*, "MagicalActual", "WaveSpawner");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x39
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.WaveSpawner
  // [TokenAttribute] Offset: FFFFFFFF
  class WaveSpawner : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String spawnerId
    // Size: 0x8
    // Offset: 0x20
    ::StringW spawnerId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public MagicalActual.PlayerGroupings[] groupings
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::MagicalActual::PlayerGroupings*> groupings;
    // Field size check
    static_assert(sizeof(::ArrayW<::MagicalActual::PlayerGroupings*>) == 0x8);
    // public System.String lootTable
    // Size: 0x8
    // Offset: 0x30
    ::StringW lootTable;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean autoSpawning
    // Size: 0x1
    // Offset: 0x38
    bool autoSpawning;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public System.String spawnerId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_spawnerId();
    // Get instance field reference: public MagicalActual.PlayerGroupings[] groupings
    [[deprecated("Use field access instead!")]] ::ArrayW<::MagicalActual::PlayerGroupings*>& dyn_groupings();
    // Get instance field reference: public System.String lootTable
    [[deprecated("Use field access instead!")]] ::StringW& dyn_lootTable();
    // Get instance field reference: public System.Boolean autoSpawning
    [[deprecated("Use field access instead!")]] bool& dyn_autoSpawning();
    // public System.Void .ctor()
    // Offset: 0x1A27A38
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WaveSpawner* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::WaveSpawner::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WaveSpawner*, creationType>()));
    }
  }; // MagicalActual.WaveSpawner
  #pragma pack(pop)
  static check_size<sizeof(WaveSpawner), 56 + sizeof(bool)> __MagicalActual_WaveSpawnerSizeCheck;
  static_assert(sizeof(WaveSpawner) == 0x39);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::WaveSpawner::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
