// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerTool
  class PlayerTool;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Harvester
  class Harvester;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Harvester);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Harvester*, "MagicalActual", "Harvester");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Harvester
  // [TokenAttribute] Offset: FFFFFFFF
  class Harvester : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public MagicalActual.PlayerTool myTool
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::PlayerTool* myTool;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerTool*) == 0x8);
    // public System.Boolean signalRecieved
    // Size: 0x1
    // Offset: 0x20
    bool signalRecieved;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public MagicalActual.PlayerTool myTool
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerTool*& dyn_myTool();
    // Get instance field reference: public System.Boolean signalRecieved
    [[deprecated("Use field access instead!")]] bool& dyn_signalRecieved();
    // private System.Void IEJMKFPGDOB(System.Byte KLIPNGBEELK)
    // Offset: 0x1886F4C
    void IEJMKFPGDOB(uint8_t KLIPNGBEELK);
    // private System.Void DCCBEAGCGLB(System.Byte KLIPNGBEELK)
    // Offset: 0x1886F64
    void DCCBEAGCGLB(uint8_t KLIPNGBEELK);
    // private System.Void SignalReceived(System.Byte KLIPNGBEELK)
    // Offset: 0x1886F7C
    void SignalReceived(uint8_t KLIPNGBEELK);
    // private System.Void NHGKENEFKKC(System.Byte KLIPNGBEELK)
    // Offset: 0x1886F94
    void NHGKENEFKKC(uint8_t KLIPNGBEELK);
    // private System.Void LEKNJGKKCIE(System.Byte KLIPNGBEELK)
    // Offset: 0x1886FA8
    void LEKNJGKKCIE(uint8_t KLIPNGBEELK);
    // private System.Void GAEGMNMBFCM(System.Byte KLIPNGBEELK)
    // Offset: 0x1886FBC
    void GAEGMNMBFCM(uint8_t KLIPNGBEELK);
    // private System.Void BEKCAOEGKFL(System.Byte KLIPNGBEELK)
    // Offset: 0x1886FD0
    void BEKCAOEGKFL(uint8_t KLIPNGBEELK);
    // private System.Void DOCJMCPAEOI(System.Byte KLIPNGBEELK)
    // Offset: 0x1886FE4
    void DOCJMCPAEOI(uint8_t KLIPNGBEELK);
    // private System.Void GLIGMBGIKDI(System.Byte KLIPNGBEELK)
    // Offset: 0x1886FF8
    void GLIGMBGIKDI(uint8_t KLIPNGBEELK);
    // private System.Void COGOCIOPEEE(System.Byte KLIPNGBEELK)
    // Offset: 0x1887010
    void COGOCIOPEEE(uint8_t KLIPNGBEELK);
    // private System.Void JAKEMFFOJGE(System.Byte KLIPNGBEELK)
    // Offset: 0x1887028
    void JAKEMFFOJGE(uint8_t KLIPNGBEELK);
    // private System.Void OEFAHGAGHCF(System.Byte KLIPNGBEELK)
    // Offset: 0x188703C
    void OEFAHGAGHCF(uint8_t KLIPNGBEELK);
    // private System.Void HAOOMMNPNGF(System.Byte KLIPNGBEELK)
    // Offset: 0x1887050
    void HAOOMMNPNGF(uint8_t KLIPNGBEELK);
    // private System.Void OPEIEDLCMJE(System.Byte KLIPNGBEELK)
    // Offset: 0x1887068
    void OPEIEDLCMJE(uint8_t KLIPNGBEELK);
    // private System.Void PGENGDMGJOK(System.Byte KLIPNGBEELK)
    // Offset: 0x1887080
    void PGENGDMGJOK(uint8_t KLIPNGBEELK);
    // public System.Void .ctor()
    // Offset: 0x1887098
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Harvester* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Harvester::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Harvester*, creationType>()));
    }
    // private System.Void NBBJLIMNCAK(System.Byte KLIPNGBEELK)
    // Offset: 0x18870A0
    void NBBJLIMNCAK(uint8_t KLIPNGBEELK);
    // private System.Void ABBNBBPDILC(System.Byte KLIPNGBEELK)
    // Offset: 0x18870B8
    void ABBNBBPDILC(uint8_t KLIPNGBEELK);
    // private System.Void FNAHDBCEMHD(System.Byte KLIPNGBEELK)
    // Offset: 0x18870D0
    void FNAHDBCEMHD(uint8_t KLIPNGBEELK);
    // private System.Void DPGABNMHIFJ(System.Byte KLIPNGBEELK)
    // Offset: 0x18870E4
    void DPGABNMHIFJ(uint8_t KLIPNGBEELK);
    // private System.Void FLGPKPALCIO(System.Byte KLIPNGBEELK)
    // Offset: 0x18870F8
    void FLGPKPALCIO(uint8_t KLIPNGBEELK);
    // private System.Void EMIPDKFHMPA(System.Byte KLIPNGBEELK)
    // Offset: 0x1887110
    void EMIPDKFHMPA(uint8_t KLIPNGBEELK);
    // private System.Void IEDBMOOGDKM(System.Byte KLIPNGBEELK)
    // Offset: 0x1887128
    void IEDBMOOGDKM(uint8_t KLIPNGBEELK);
    // private System.Void NKMCBNONNHC(System.Byte KLIPNGBEELK)
    // Offset: 0x188713C
    void NKMCBNONNHC(uint8_t KLIPNGBEELK);
    // private System.Void JPPGFNFKMEK(System.Byte KLIPNGBEELK)
    // Offset: 0x1887154
    void JPPGFNFKMEK(uint8_t KLIPNGBEELK);
    // private System.Void DDBLDPPJIMC(System.Byte KLIPNGBEELK)
    // Offset: 0x1887168
    void DDBLDPPJIMC(uint8_t KLIPNGBEELK);
    // private System.Void CNHFEOKMHGF(System.Byte KLIPNGBEELK)
    // Offset: 0x1887180
    void CNHFEOKMHGF(uint8_t KLIPNGBEELK);
    // private System.Void EENPJGOEBNB(System.Byte KLIPNGBEELK)
    // Offset: 0x1887198
    void EENPJGOEBNB(uint8_t KLIPNGBEELK);
    // private System.Void FLGJHKCPIDF(System.Byte KLIPNGBEELK)
    // Offset: 0x18871AC
    void FLGJHKCPIDF(uint8_t KLIPNGBEELK);
    // private System.Void IOHCMGPOHBM(System.Byte KLIPNGBEELK)
    // Offset: 0x18871C4
    void IOHCMGPOHBM(uint8_t KLIPNGBEELK);
    // private System.Void JILNHAILHMO(System.Byte KLIPNGBEELK)
    // Offset: 0x18871D8
    void JILNHAILHMO(uint8_t KLIPNGBEELK);
    // private System.Void FEAPFNNLNFG(System.Byte KLIPNGBEELK)
    // Offset: 0x18871F0
    void FEAPFNNLNFG(uint8_t KLIPNGBEELK);
    // private System.Void JLADKFMLIAN(System.Byte KLIPNGBEELK)
    // Offset: 0x1887204
    void JLADKFMLIAN(uint8_t KLIPNGBEELK);
    // private System.Void JBMANAJHKBI(System.Byte KLIPNGBEELK)
    // Offset: 0x188721C
    void JBMANAJHKBI(uint8_t KLIPNGBEELK);
    // private System.Void HADIPALABDL(System.Byte KLIPNGBEELK)
    // Offset: 0x1887234
    void HADIPALABDL(uint8_t KLIPNGBEELK);
    // private System.Void OPJFCPJDKOC(System.Byte KLIPNGBEELK)
    // Offset: 0x188724C
    void OPJFCPJDKOC(uint8_t KLIPNGBEELK);
    // private System.Void BACDOHMFJHH(System.Byte KLIPNGBEELK)
    // Offset: 0x1887260
    void BACDOHMFJHH(uint8_t KLIPNGBEELK);
    // private System.Void MHKONMHMJOK(System.Byte KLIPNGBEELK)
    // Offset: 0x1887278
    void MHKONMHMJOK(uint8_t KLIPNGBEELK);
    // private System.Void CAPGFLFKCLN(System.Byte KLIPNGBEELK)
    // Offset: 0x188728C
    void CAPGFLFKCLN(uint8_t KLIPNGBEELK);
    // private System.Void HMLPEKMDCDI(System.Byte KLIPNGBEELK)
    // Offset: 0x18872A4
    void HMLPEKMDCDI(uint8_t KLIPNGBEELK);
    // private System.Void KDHCEDPPEOK(System.Byte KLIPNGBEELK)
    // Offset: 0x18872B8
    void KDHCEDPPEOK(uint8_t KLIPNGBEELK);
  }; // MagicalActual.Harvester
  #pragma pack(pop)
  static check_size<sizeof(Harvester), 32 + sizeof(bool)> __MagicalActual_HarvesterSizeCheck;
  static_assert(sizeof(Harvester) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Harvester::IEJMKFPGDOB
// Il2CppName: IEJMKFPGDOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::IEJMKFPGDOB)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "IEJMKFPGDOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::DCCBEAGCGLB
// Il2CppName: DCCBEAGCGLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::DCCBEAGCGLB)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "DCCBEAGCGLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::SignalReceived
// Il2CppName: SignalReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::SignalReceived)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "SignalReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::NHGKENEFKKC
// Il2CppName: NHGKENEFKKC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::NHGKENEFKKC)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "NHGKENEFKKC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::LEKNJGKKCIE
// Il2CppName: LEKNJGKKCIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::LEKNJGKKCIE)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "LEKNJGKKCIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::GAEGMNMBFCM
// Il2CppName: GAEGMNMBFCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::GAEGMNMBFCM)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "GAEGMNMBFCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::BEKCAOEGKFL
// Il2CppName: BEKCAOEGKFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::BEKCAOEGKFL)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "BEKCAOEGKFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::DOCJMCPAEOI
// Il2CppName: DOCJMCPAEOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::DOCJMCPAEOI)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "DOCJMCPAEOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::GLIGMBGIKDI
// Il2CppName: GLIGMBGIKDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::GLIGMBGIKDI)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "GLIGMBGIKDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::COGOCIOPEEE
// Il2CppName: COGOCIOPEEE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::COGOCIOPEEE)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "COGOCIOPEEE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::JAKEMFFOJGE
// Il2CppName: JAKEMFFOJGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::JAKEMFFOJGE)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "JAKEMFFOJGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::OEFAHGAGHCF
// Il2CppName: OEFAHGAGHCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::OEFAHGAGHCF)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "OEFAHGAGHCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::HAOOMMNPNGF
// Il2CppName: HAOOMMNPNGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::HAOOMMNPNGF)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "HAOOMMNPNGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::OPEIEDLCMJE
// Il2CppName: OPEIEDLCMJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::OPEIEDLCMJE)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "OPEIEDLCMJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::PGENGDMGJOK
// Il2CppName: PGENGDMGJOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::PGENGDMGJOK)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "PGENGDMGJOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Harvester::NBBJLIMNCAK
// Il2CppName: NBBJLIMNCAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::NBBJLIMNCAK)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "NBBJLIMNCAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::ABBNBBPDILC
// Il2CppName: ABBNBBPDILC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::ABBNBBPDILC)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "ABBNBBPDILC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::FNAHDBCEMHD
// Il2CppName: FNAHDBCEMHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::FNAHDBCEMHD)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "FNAHDBCEMHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::DPGABNMHIFJ
// Il2CppName: DPGABNMHIFJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::DPGABNMHIFJ)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "DPGABNMHIFJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::FLGPKPALCIO
// Il2CppName: FLGPKPALCIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::FLGPKPALCIO)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "FLGPKPALCIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::EMIPDKFHMPA
// Il2CppName: EMIPDKFHMPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::EMIPDKFHMPA)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "EMIPDKFHMPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::IEDBMOOGDKM
// Il2CppName: IEDBMOOGDKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::IEDBMOOGDKM)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "IEDBMOOGDKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::NKMCBNONNHC
// Il2CppName: NKMCBNONNHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::NKMCBNONNHC)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "NKMCBNONNHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::JPPGFNFKMEK
// Il2CppName: JPPGFNFKMEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::JPPGFNFKMEK)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "JPPGFNFKMEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::DDBLDPPJIMC
// Il2CppName: DDBLDPPJIMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::DDBLDPPJIMC)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "DDBLDPPJIMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::CNHFEOKMHGF
// Il2CppName: CNHFEOKMHGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::CNHFEOKMHGF)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "CNHFEOKMHGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::EENPJGOEBNB
// Il2CppName: EENPJGOEBNB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::EENPJGOEBNB)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "EENPJGOEBNB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::FLGJHKCPIDF
// Il2CppName: FLGJHKCPIDF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::FLGJHKCPIDF)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "FLGJHKCPIDF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::IOHCMGPOHBM
// Il2CppName: IOHCMGPOHBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::IOHCMGPOHBM)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "IOHCMGPOHBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::JILNHAILHMO
// Il2CppName: JILNHAILHMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::JILNHAILHMO)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "JILNHAILHMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::FEAPFNNLNFG
// Il2CppName: FEAPFNNLNFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::FEAPFNNLNFG)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "FEAPFNNLNFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::JLADKFMLIAN
// Il2CppName: JLADKFMLIAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::JLADKFMLIAN)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "JLADKFMLIAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::JBMANAJHKBI
// Il2CppName: JBMANAJHKBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::JBMANAJHKBI)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "JBMANAJHKBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::HADIPALABDL
// Il2CppName: HADIPALABDL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::HADIPALABDL)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "HADIPALABDL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::OPJFCPJDKOC
// Il2CppName: OPJFCPJDKOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::OPJFCPJDKOC)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "OPJFCPJDKOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::BACDOHMFJHH
// Il2CppName: BACDOHMFJHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::BACDOHMFJHH)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "BACDOHMFJHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::MHKONMHMJOK
// Il2CppName: MHKONMHMJOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::MHKONMHMJOK)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "MHKONMHMJOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::CAPGFLFKCLN
// Il2CppName: CAPGFLFKCLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::CAPGFLFKCLN)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "CAPGFLFKCLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::HMLPEKMDCDI
// Il2CppName: HMLPEKMDCDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::HMLPEKMDCDI)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "HMLPEKMDCDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvester::KDHCEDPPEOK
// Il2CppName: KDHCEDPPEOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvester::*)(uint8_t)>(&MagicalActual::Harvester::KDHCEDPPEOK)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvester*), "KDHCEDPPEOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
