// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Orbhealer
  class Orbhealer;
  // Forward declaring type: Grabber
  class Grabber;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: OrbhealerThrownTurret
  class OrbhealerThrownTurret;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::OrbhealerThrownTurret);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::OrbhealerThrownTurret*, "MagicalActual", "OrbhealerThrownTurret");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.OrbhealerThrownTurret
  // [TokenAttribute] Offset: FFFFFFFF
  class OrbhealerThrownTurret : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public MagicalActual.Orbhealer myHealer
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Orbhealer* myHealer;
    // Field size check
    static_assert(sizeof(::MagicalActual::Orbhealer*) == 0x8);
    // private System.Single LJBNFCJBJNO
    // Size: 0x4
    // Offset: 0x20
    float LJBNFCJBJNO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single HLCMEHFLBCC
    // Size: 0x4
    // Offset: 0x24
    float HLCMEHFLBCC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean JHFEGDEMJOF
    // Size: 0x1
    // Offset: 0x28
    bool JHFEGDEMJOF;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: JHFEGDEMJOF and: FHHIHFGMCPL
    char __padding3[0x3] = {};
    // private System.Single FHHIHFGMCPL
    // Size: 0x4
    // Offset: 0x2C
    float FHHIHFGMCPL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single ECKLECMPGMD
    // Size: 0x4
    // Offset: 0x30
    float ECKLECMPGMD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean ILGPCBIMPEN
    // Size: 0x1
    // Offset: 0x34
    bool ILGPCBIMPEN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean ECKIMBBGLCJ
    // Size: 0x1
    // Offset: 0x35
    bool ECKIMBBGLCJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: ECKIMBBGLCJ and: typeMeshes
    char __padding7[0x2] = {};
    // public UnityEngine.Mesh[] typeMeshes
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::UnityEngine::Mesh*> typeMeshes;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Mesh*>) == 0x8);
    // private UnityEngine.MeshFilter LDNPJGPFLBN
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::MeshFilter* LDNPJGPFLBN;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshFilter*) == 0x8);
    // public UnityEngine.GameObject[] switchVfx
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::UnityEngine::GameObject*> switchVfx;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject chargedVfx
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GameObject* chargedVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public MagicalActual.Orbhealer myHealer
    [[deprecated("Use field access instead!")]] ::MagicalActual::Orbhealer*& dyn_myHealer();
    // Get instance field reference: private System.Single LJBNFCJBJNO
    [[deprecated("Use field access instead!")]] float& dyn_LJBNFCJBJNO();
    // Get instance field reference: private System.Single HLCMEHFLBCC
    [[deprecated("Use field access instead!")]] float& dyn_HLCMEHFLBCC();
    // Get instance field reference: private System.Boolean JHFEGDEMJOF
    [[deprecated("Use field access instead!")]] bool& dyn_JHFEGDEMJOF();
    // Get instance field reference: private System.Single FHHIHFGMCPL
    [[deprecated("Use field access instead!")]] float& dyn_FHHIHFGMCPL();
    // Get instance field reference: private System.Single ECKLECMPGMD
    [[deprecated("Use field access instead!")]] float& dyn_ECKLECMPGMD();
    // Get instance field reference: private System.Boolean ILGPCBIMPEN
    [[deprecated("Use field access instead!")]] bool& dyn_ILGPCBIMPEN();
    // Get instance field reference: private System.Boolean ECKIMBBGLCJ
    [[deprecated("Use field access instead!")]] bool& dyn_ECKIMBBGLCJ();
    // Get instance field reference: public UnityEngine.Mesh[] typeMeshes
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Mesh*>& dyn_typeMeshes();
    // Get instance field reference: private UnityEngine.MeshFilter LDNPJGPFLBN
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& dyn_LDNPJGPFLBN();
    // Get instance field reference: public UnityEngine.GameObject[] switchVfx
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_switchVfx();
    // Get instance field reference: public UnityEngine.GameObject chargedVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_chargedVfx();
    // private System.Void BCCGBIICJGM()
    // Offset: 0x172F158
    void BCCGBIICJGM();
    // private System.Void Start()
    // Offset: 0x172F25C
    void Start();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x172F3BC
    void EPCHNEGNKNF();
    // public System.Void FIKAAKGDNBH()
    // Offset: 0x172F418
    void FIKAAKGDNBH();
    // private System.Void FixedUpdate()
    // Offset: 0x172F65C
    void FixedUpdate();
    // private System.Void BKENDLLOMNB()
    // Offset: 0x172F2B8
    void BKENDLLOMNB();
    // public System.Void OFKHBCPFPIC()
    // Offset: 0x172F89C
    void OFKHBCPFPIC();
    // private System.Void PhysicsInteractableUngrip(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x172FAE0
    void PhysicsInteractableUngrip(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void GNAJKKCCCNO()
    // Offset: 0x172FAF4
    void GNAJKKCCCNO();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x172FD3C
    void IDOCJGNLNFL();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x172FE9C
    void GECHLDPLPCC();
    // private System.Void EMEFKDKEBNA(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x172FEF8
    void EMEFKDKEBNA(::MagicalActual::Grabber* BALIAOKIHIC);
    // public System.Void .ctor()
    // Offset: 0x172FF18
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OrbhealerThrownTurret* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::OrbhealerThrownTurret::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OrbhealerThrownTurret*, creationType>()));
    }
    // private System.Void ELDIIMDLHHB()
    // Offset: 0x172FD98
    void ELDIIMDLHHB();
    // private System.Void HKFKGMJHOOJ()
    // Offset: 0x172FF30
    void HKFKGMJHOOJ();
    // private System.Void EJBNHJJDAPC()
    // Offset: 0x172FF34
    void EJBNHJJDAPC();
    // public System.Void HBIKBKOHJAC()
    // Offset: 0x172FAF8
    void HBIKBKOHJAC();
    // private System.Void FGPHMNHNKHP(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1730038
    void FGPHMNHNKHP(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void DDJINHIPKCE()
    // Offset: 0x1730044
    void DDJINHIPKCE();
    // public System.Void ToggleTurretType()
    // Offset: 0x1730288
    void ToggleTurretType();
    // public System.Void NHOIJDIHJHM(MagicalActual.Orbhealer DJDHOHEOLIP, System.Byte MOGANEBNFCK)
    // Offset: 0x17304C8
    void NHOIJDIHJHM(::MagicalActual::Orbhealer* DJDHOHEOLIP, uint8_t MOGANEBNFCK);
    // private System.Void GKIOLADOCOK()
    // Offset: 0x17304D0
    void GKIOLADOCOK();
    // private System.Void FOEGEJAMHBC(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x173052C
    void FOEGEJAMHBC(::MagicalActual::Grabber* BALIAOKIHIC);
    // public System.Void Setup(MagicalActual.Orbhealer DJDHOHEOLIP, System.Byte MOGANEBNFCK)
    // Offset: 0x1730540
    void Setup(::MagicalActual::Orbhealer* DJDHOHEOLIP, uint8_t MOGANEBNFCK);
    // private System.Void BMNKLFMDGNI()
    // Offset: 0x1730548
    void BMNKLFMDGNI();
    // private System.Void NIGDKALGFHM(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x173054C
    void NIGDKALGFHM(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void HMHPJNKPLLN(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1730568
    void HMHPJNKPLLN(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void HKOBIPJLDPG()
    // Offset: 0x1730570
    void HKOBIPJLDPG();
    // private System.Void PhysicsInteractableTrigger()
    // Offset: 0x1730674
    void PhysicsInteractableTrigger();
    // private System.Void PhysicsInteractableGrip(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1730678
    void PhysicsInteractableGrip(::MagicalActual::Grabber* BALIAOKIHIC);
  }; // MagicalActual.OrbhealerThrownTurret
  #pragma pack(pop)
  static check_size<sizeof(OrbhealerThrownTurret), 80 + sizeof(::UnityEngine::GameObject*)> __MagicalActual_OrbhealerThrownTurretSizeCheck;
  static_assert(sizeof(OrbhealerThrownTurret) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::BCCGBIICJGM
// Il2CppName: BCCGBIICJGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::BCCGBIICJGM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "BCCGBIICJGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::FIKAAKGDNBH
// Il2CppName: FIKAAKGDNBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::FIKAAKGDNBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "FIKAAKGDNBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::BKENDLLOMNB
// Il2CppName: BKENDLLOMNB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::BKENDLLOMNB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "BKENDLLOMNB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::OFKHBCPFPIC
// Il2CppName: OFKHBCPFPIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::OFKHBCPFPIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "OFKHBCPFPIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::PhysicsInteractableUngrip
// Il2CppName: PhysicsInteractableUngrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)(::MagicalActual::Grabber*)>(&MagicalActual::OrbhealerThrownTurret::PhysicsInteractableUngrip)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "PhysicsInteractableUngrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::GNAJKKCCCNO
// Il2CppName: GNAJKKCCCNO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::GNAJKKCCCNO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "GNAJKKCCCNO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::EMEFKDKEBNA
// Il2CppName: EMEFKDKEBNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)(::MagicalActual::Grabber*)>(&MagicalActual::OrbhealerThrownTurret::EMEFKDKEBNA)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "EMEFKDKEBNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::ELDIIMDLHHB
// Il2CppName: ELDIIMDLHHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::ELDIIMDLHHB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "ELDIIMDLHHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::HKFKGMJHOOJ
// Il2CppName: HKFKGMJHOOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::HKFKGMJHOOJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "HKFKGMJHOOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::EJBNHJJDAPC
// Il2CppName: EJBNHJJDAPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::EJBNHJJDAPC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "EJBNHJJDAPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::HBIKBKOHJAC
// Il2CppName: HBIKBKOHJAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::HBIKBKOHJAC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "HBIKBKOHJAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::FGPHMNHNKHP
// Il2CppName: FGPHMNHNKHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)(::MagicalActual::Grabber*)>(&MagicalActual::OrbhealerThrownTurret::FGPHMNHNKHP)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "FGPHMNHNKHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::DDJINHIPKCE
// Il2CppName: DDJINHIPKCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::DDJINHIPKCE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "DDJINHIPKCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::ToggleTurretType
// Il2CppName: ToggleTurretType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::ToggleTurretType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "ToggleTurretType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::NHOIJDIHJHM
// Il2CppName: NHOIJDIHJHM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)(::MagicalActual::Orbhealer*, uint8_t)>(&MagicalActual::OrbhealerThrownTurret::NHOIJDIHJHM)> {
  static const MethodInfo* get() {
    static auto* DJDHOHEOLIP = &::il2cpp_utils::GetClassFromName("MagicalActual", "Orbhealer")->byval_arg;
    static auto* MOGANEBNFCK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "NHOIJDIHJHM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DJDHOHEOLIP, MOGANEBNFCK});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::FOEGEJAMHBC
// Il2CppName: FOEGEJAMHBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)(::MagicalActual::Grabber*)>(&MagicalActual::OrbhealerThrownTurret::FOEGEJAMHBC)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "FOEGEJAMHBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)(::MagicalActual::Orbhealer*, uint8_t)>(&MagicalActual::OrbhealerThrownTurret::Setup)> {
  static const MethodInfo* get() {
    static auto* DJDHOHEOLIP = &::il2cpp_utils::GetClassFromName("MagicalActual", "Orbhealer")->byval_arg;
    static auto* MOGANEBNFCK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DJDHOHEOLIP, MOGANEBNFCK});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::BMNKLFMDGNI
// Il2CppName: BMNKLFMDGNI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::BMNKLFMDGNI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "BMNKLFMDGNI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::NIGDKALGFHM
// Il2CppName: NIGDKALGFHM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)(::MagicalActual::Grabber*)>(&MagicalActual::OrbhealerThrownTurret::NIGDKALGFHM)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "NIGDKALGFHM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::HMHPJNKPLLN
// Il2CppName: HMHPJNKPLLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)(::MagicalActual::Grabber*)>(&MagicalActual::OrbhealerThrownTurret::HMHPJNKPLLN)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "HMHPJNKPLLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::HKOBIPJLDPG
// Il2CppName: HKOBIPJLDPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::HKOBIPJLDPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "HKOBIPJLDPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::PhysicsInteractableTrigger
// Il2CppName: PhysicsInteractableTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)()>(&MagicalActual::OrbhealerThrownTurret::PhysicsInteractableTrigger)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "PhysicsInteractableTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerThrownTurret::PhysicsInteractableGrip
// Il2CppName: PhysicsInteractableGrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerThrownTurret::*)(::MagicalActual::Grabber*)>(&MagicalActual::OrbhealerThrownTurret::PhysicsInteractableGrip)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerThrownTurret*), "PhysicsInteractableGrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
