// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_MagicElk
  class M_MagicElk;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_MagicElk);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_MagicElk*, "MagicalActual", "M_MagicElk");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x41
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_MagicElk
  // [TokenAttribute] Offset: FFFFFFFF
  class M_MagicElk : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::M_MagicElk::$$c__DisplayClass9_0
    class $$c__DisplayClass9_0;
    public:
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x20
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject shadowCharge
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* shadowCharge;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x38
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private System.Boolean BJHIMIJGGNF
    // Size: 0x1
    // Offset: 0x40
    bool BJHIMIJGGNF;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public UnityEngine.GameObject shadowCharge
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_shadowCharge();
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: private System.Boolean BJHIMIJGGNF
    [[deprecated("Use field access instead!")]] bool& dyn_BJHIMIJGGNF();
    // public System.Void Shoot()
    // Offset: 0x2442324
    void Shoot();
    // private System.Void EFIKELKGHFB()
    // Offset: 0x2442878
    void EFIKELKGHFB();
    // private System.Void EBKOPELDJCF(System.Object OMLPNCLFFMJ)
    // Offset: 0x24429A0
    void EBKOPELDJCF(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Start()
    // Offset: 0x2442B34
    void Start();
    // private System.Void LNAMDJEKBHF()
    // Offset: 0x2442B90
    void LNAMDJEKBHF();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x2442CB8
    void HKINNMLBMMG();
    // public System.Void JHEGAGPCNJF()
    // Offset: 0x2442D14
    void JHEGAGPCNJF();
    // private System.Void GAJAIIACMIP()
    // Offset: 0x2442A0C
    void GAJAIIACMIP();
    // private System.Void HHPBHACEGJN()
    // Offset: 0x2443270
    void HHPBHACEGJN();
    // private System.Void JFLNCJAHFLE()
    // Offset: 0x2443398
    void JFLNCJAHFLE();
    // private System.Void LCFONHJONFL(System.Object OMLPNCLFFMJ)
    // Offset: 0x24434C0
    void LCFONHJONFL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x244352C
    void MLGBKBMHHLE();
    // private System.Void DMDBBBHCPMG(System.Object OMLPNCLFFMJ)
    // Offset: 0x2443588
    void DMDBBBHCPMG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NMBFEFIPONE(System.Object OMLPNCLFFMJ)
    // Offset: 0x24435F4
    void NMBFEFIPONE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GAOFEAPPLNN(System.Object OMLPNCLFFMJ)
    // Offset: 0x2443788
    void GAOFEAPPLNN(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void FBNBNLALDGI(System.Object OMLPNCLFFMJ)
    // Offset: 0x24437F4
    void FBNBNLALDGI(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void FDGOOAOJGNK()
    // Offset: 0x2443860
    void FDGOOAOJGNK();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2443988
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void .ctor()
    // Offset: 0x2443A3C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_MagicElk* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_MagicElk::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_MagicElk*, creationType>()));
    }
    // public System.Void KIMFNCDKFBM()
    // Offset: 0x2443A9C
    void KIMFNCDKFBM();
    // public System.Void OAMOHIMHKEK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2443FF8
    void OAMOHIMHKEK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void LLAFBMEBMEN(System.Object OMLPNCLFFMJ)
    // Offset: 0x24440AC
    void LLAFBMEBMEN(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void PGHDILKPIHC()
    // Offset: 0x2444118
    void PGHDILKPIHC();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x2444674
    void KBDGAPMJGLG();
    // public System.Void LJNDBAAAFKM()
    // Offset: 0x24446D0
    void LJNDBAAAFKM();
    // public System.Void AGKHMBHBNFM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2444C2C
    void AGKHMBHBNFM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void LBIKOKCCILF()
    // Offset: 0x2444CE0
    void LBIKOKCCILF();
    // private System.Void CBAKIJMEPBF()
    // Offset: 0x2443660
    void CBAKIJMEPBF();
  }; // MagicalActual.M_MagicElk
  #pragma pack(pop)
  static check_size<sizeof(M_MagicElk), 64 + sizeof(bool)> __MagicalActual_M_MagicElkSizeCheck;
  static_assert(sizeof(M_MagicElk) == 0x41);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::Shoot
// Il2CppName: Shoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::Shoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "Shoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::EFIKELKGHFB
// Il2CppName: EFIKELKGHFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::EFIKELKGHFB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "EFIKELKGHFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::EBKOPELDJCF
// Il2CppName: EBKOPELDJCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)(::Il2CppObject*)>(&MagicalActual::M_MagicElk::EBKOPELDJCF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "EBKOPELDJCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::LNAMDJEKBHF
// Il2CppName: LNAMDJEKBHF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::LNAMDJEKBHF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "LNAMDJEKBHF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::JHEGAGPCNJF
// Il2CppName: JHEGAGPCNJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::JHEGAGPCNJF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "JHEGAGPCNJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::GAJAIIACMIP
// Il2CppName: GAJAIIACMIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::GAJAIIACMIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "GAJAIIACMIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::HHPBHACEGJN
// Il2CppName: HHPBHACEGJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::HHPBHACEGJN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "HHPBHACEGJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::JFLNCJAHFLE
// Il2CppName: JFLNCJAHFLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::JFLNCJAHFLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "JFLNCJAHFLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::LCFONHJONFL
// Il2CppName: LCFONHJONFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)(::Il2CppObject*)>(&MagicalActual::M_MagicElk::LCFONHJONFL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "LCFONHJONFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::DMDBBBHCPMG
// Il2CppName: DMDBBBHCPMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)(::Il2CppObject*)>(&MagicalActual::M_MagicElk::DMDBBBHCPMG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "DMDBBBHCPMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::NMBFEFIPONE
// Il2CppName: NMBFEFIPONE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)(::Il2CppObject*)>(&MagicalActual::M_MagicElk::NMBFEFIPONE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "NMBFEFIPONE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::GAOFEAPPLNN
// Il2CppName: GAOFEAPPLNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)(::Il2CppObject*)>(&MagicalActual::M_MagicElk::GAOFEAPPLNN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "GAOFEAPPLNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::FBNBNLALDGI
// Il2CppName: FBNBNLALDGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)(::Il2CppObject*)>(&MagicalActual::M_MagicElk::FBNBNLALDGI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "FBNBNLALDGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::FDGOOAOJGNK
// Il2CppName: FDGOOAOJGNK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::FDGOOAOJGNK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "FDGOOAOJGNK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_MagicElk::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::KIMFNCDKFBM
// Il2CppName: KIMFNCDKFBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::KIMFNCDKFBM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "KIMFNCDKFBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::OAMOHIMHKEK
// Il2CppName: OAMOHIMHKEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_MagicElk::OAMOHIMHKEK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "OAMOHIMHKEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::LLAFBMEBMEN
// Il2CppName: LLAFBMEBMEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)(::Il2CppObject*)>(&MagicalActual::M_MagicElk::LLAFBMEBMEN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "LLAFBMEBMEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::PGHDILKPIHC
// Il2CppName: PGHDILKPIHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::PGHDILKPIHC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "PGHDILKPIHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::LJNDBAAAFKM
// Il2CppName: LJNDBAAAFKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::LJNDBAAAFKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "LJNDBAAAFKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::AGKHMBHBNFM
// Il2CppName: AGKHMBHBNFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_MagicElk::AGKHMBHBNFM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "AGKHMBHBNFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_MagicElk::CBAKIJMEPBF
// Il2CppName: CBAKIJMEPBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_MagicElk::*)()>(&MagicalActual::M_MagicElk::CBAKIJMEPBF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_MagicElk*), "CBAKIJMEPBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
