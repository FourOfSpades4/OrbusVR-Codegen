// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: MagicalMinion
  class MagicalMinion;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::MagicalMinion);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::MagicalMinion*, "MagicalActual", "MagicalMinion");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.MagicalMinion
  // [TokenAttribute] Offset: FFFFFFFF
  class MagicalMinion : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x20
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.GameObject JIKHLPAHMCD
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* JIKHLPAHMCD;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private UnityEngine.GameObject JIKHLPAHMCD
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_JIKHLPAHMCD();
    // public System.Void NEMKNLGDEAK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E8444
    void NEMKNLGDEAK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void PLPDCBMCEJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E84F8
    void PLPDCBMCEJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E85AC
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void EBKMGINMPPJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E8660
    void EBKMGINMPPJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void AOIAEMNLBND(System.Object OMLPNCLFFMJ)
    // Offset: 0x13E8714
    void AOIAEMNLBND(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MMILPNOJDFM(System.Object OMLPNCLFFMJ)
    // Offset: 0x13E87D8
    void MMILPNOJDFM(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void IOOBCJAJKCJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E889C
    void IOOBCJAJKCJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void BIANGCLBOMP(System.Object OMLPNCLFFMJ)
    // Offset: 0x13E8950
    void BIANGCLBOMP(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void IKDGLCBOCJG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E8A2C
    void IKDGLCBOCJG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void DKDBFFDLADP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E8AE0
    void DKDBFFDLADP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E8B94
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GFHPFJHINBN(System.Object OMLPNCLFFMJ)
    // Offset: 0x13E8C48
    void GFHPFJHINBN(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void AKGFEENGKJD()
    // Offset: 0x13E8D24
    void AKGFEENGKJD();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x13E8DB0
    void FNGLOIECKDG();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x13E8E3C
    void PBEMGGBBDCK();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x13E8EC8
    void HKINNMLBMMG();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x13E8F54
    void DGJGAFKDIDK();
    // private System.Void HMLAIEKHBDE(System.Object OMLPNCLFFMJ)
    // Offset: 0x13E8FE0
    void HMLAIEKHBDE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LBIKOKCCILF()
    // Offset: 0x13E90BC
    void LBIKOKCCILF();
    // public System.Void OIPLBADJHFI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E9148
    void OIPLBADJHFI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void EBJDLAIJJJE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E91FC
    void EBJDLAIJJJE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x13E92B0
    void EPCHNEGNKNF();
    // public System.Void AGKHMBHBNFM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E933C
    void AGKHMBHBNFM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void ALBNCKPLJFK(System.Object OMLPNCLFFMJ)
    // Offset: 0x13E93F0
    void ALBNCKPLJFK(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NFJANCHLOLE(System.Object OMLPNCLFFMJ)
    // Offset: 0x13E94CC
    void NFJANCHLOLE(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void KHOMLKJBDGE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E9590
    void KHOMLKJBDGE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GPFBGGFPINB()
    // Offset: 0x13E9644
    void GPFBGGFPINB();
    // private System.Void Start()
    // Offset: 0x13E96D0
    void Start();
    // private System.Void EJOIFNCBOAB(System.Object OMLPNCLFFMJ)
    // Offset: 0x13E975C
    void EJOIFNCBOAB(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void OAMOHIMHKEK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E9820
    void OAMOHIMHKEK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void JOGPGAPOBBK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E98D4
    void JOGPGAPOBBK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OACMGPBCPEL()
    // Offset: 0x13E9988
    void OACMGPBCPEL();
    // public System.Void .ctor()
    // Offset: 0x13E9A14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MagicalMinion* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::MagicalMinion::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MagicalMinion*, creationType>()));
    }
  }; // MagicalActual.MagicalMinion
  #pragma pack(pop)
  static check_size<sizeof(MagicalMinion), 40 + sizeof(::UnityEngine::GameObject*)> __MagicalActual_MagicalMinionSizeCheck;
  static_assert(sizeof(MagicalMinion) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::NEMKNLGDEAK
// Il2CppName: NEMKNLGDEAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::NEMKNLGDEAK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "NEMKNLGDEAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::PLPDCBMCEJF
// Il2CppName: PLPDCBMCEJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::PLPDCBMCEJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "PLPDCBMCEJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::EBKMGINMPPJ
// Il2CppName: EBKMGINMPPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::EBKMGINMPPJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "EBKMGINMPPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::AOIAEMNLBND
// Il2CppName: AOIAEMNLBND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::Il2CppObject*)>(&MagicalActual::MagicalMinion::AOIAEMNLBND)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "AOIAEMNLBND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::MMILPNOJDFM
// Il2CppName: MMILPNOJDFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::Il2CppObject*)>(&MagicalActual::MagicalMinion::MMILPNOJDFM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "MMILPNOJDFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::IOOBCJAJKCJ
// Il2CppName: IOOBCJAJKCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::IOOBCJAJKCJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "IOOBCJAJKCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::BIANGCLBOMP
// Il2CppName: BIANGCLBOMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::Il2CppObject*)>(&MagicalActual::MagicalMinion::BIANGCLBOMP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "BIANGCLBOMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::IKDGLCBOCJG
// Il2CppName: IKDGLCBOCJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::IKDGLCBOCJG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "IKDGLCBOCJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::DKDBFFDLADP
// Il2CppName: DKDBFFDLADP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::DKDBFFDLADP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "DKDBFFDLADP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::GFHPFJHINBN
// Il2CppName: GFHPFJHINBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::Il2CppObject*)>(&MagicalActual::MagicalMinion::GFHPFJHINBN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "GFHPFJHINBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)()>(&MagicalActual::MagicalMinion::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)()>(&MagicalActual::MagicalMinion::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)()>(&MagicalActual::MagicalMinion::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)()>(&MagicalActual::MagicalMinion::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)()>(&MagicalActual::MagicalMinion::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::HMLAIEKHBDE
// Il2CppName: HMLAIEKHBDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::Il2CppObject*)>(&MagicalActual::MagicalMinion::HMLAIEKHBDE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "HMLAIEKHBDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)()>(&MagicalActual::MagicalMinion::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::OIPLBADJHFI
// Il2CppName: OIPLBADJHFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::OIPLBADJHFI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "OIPLBADJHFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::EBJDLAIJJJE
// Il2CppName: EBJDLAIJJJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::EBJDLAIJJJE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "EBJDLAIJJJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)()>(&MagicalActual::MagicalMinion::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::AGKHMBHBNFM
// Il2CppName: AGKHMBHBNFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::AGKHMBHBNFM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "AGKHMBHBNFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::ALBNCKPLJFK
// Il2CppName: ALBNCKPLJFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::Il2CppObject*)>(&MagicalActual::MagicalMinion::ALBNCKPLJFK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "ALBNCKPLJFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::NFJANCHLOLE
// Il2CppName: NFJANCHLOLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::Il2CppObject*)>(&MagicalActual::MagicalMinion::NFJANCHLOLE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "NFJANCHLOLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::KHOMLKJBDGE
// Il2CppName: KHOMLKJBDGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::KHOMLKJBDGE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "KHOMLKJBDGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)()>(&MagicalActual::MagicalMinion::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)()>(&MagicalActual::MagicalMinion::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::EJOIFNCBOAB
// Il2CppName: EJOIFNCBOAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::Il2CppObject*)>(&MagicalActual::MagicalMinion::EJOIFNCBOAB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "EJOIFNCBOAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::OAMOHIMHKEK
// Il2CppName: OAMOHIMHKEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::OAMOHIMHKEK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "OAMOHIMHKEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::JOGPGAPOBBK
// Il2CppName: JOGPGAPOBBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::MagicalMinion::JOGPGAPOBBK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "JOGPGAPOBBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MagicalMinion::*)()>(&MagicalActual::MagicalMinion::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MagicalMinion*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MagicalMinion::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
