// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: WorldMenu
  class WorldMenu;
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: BossChest
  class BossChest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::BossChest);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::BossChest*, "MagicalActual", "BossChest");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.BossChest
  // [TokenAttribute] Offset: FFFFFFFF
  class BossChest : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private ExtUI.InventoryItemInstance[] LIKAPAKJMDJ
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::ExtUI::InventoryItemInstance*> LIKAPAKJMDJ;
    // Field size check
    static_assert(sizeof(::ArrayW<::ExtUI::InventoryItemInstance*>) == 0x8);
    // public UnityEngine.GameObject chestRoot
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* chestRoot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.WorldMenu NLLHIAJLHCO
    // Size: 0x8
    // Offset: 0x38
    ::MagicalActual::WorldMenu* NLLHIAJLHCO;
    // Field size check
    static_assert(sizeof(::MagicalActual::WorldMenu*) == 0x8);
    // private UnityEngine.GameObject UncommonGlow
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* UncommonGlow;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject RareGlow
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* RareGlow;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject EpicGlow
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GameObject* EpicGlow;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject LegendaryGlow
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* LegendaryGlow;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Byte FIKCNKDKIDP
    // Size: 0x1
    // Offset: 0x60
    uint8_t FIKCNKDKIDP;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: FIKCNKDKIDP and: FBGKGPFEACM
    char __padding9[0x7] = {};
    // private System.String FBGKGPFEACM
    // Size: 0x8
    // Offset: 0x68
    ::StringW FBGKGPFEACM;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private ExtUI.InventoryItemInstance[] LIKAPAKJMDJ
    [[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::InventoryItemInstance*>& dyn_LIKAPAKJMDJ();
    // Get instance field reference: public UnityEngine.GameObject chestRoot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_chestRoot();
    // Get instance field reference: private MagicalActual.WorldMenu NLLHIAJLHCO
    [[deprecated("Use field access instead!")]] ::MagicalActual::WorldMenu*& dyn_NLLHIAJLHCO();
    // Get instance field reference: private UnityEngine.GameObject UncommonGlow
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_UncommonGlow();
    // Get instance field reference: private UnityEngine.GameObject RareGlow
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_RareGlow();
    // Get instance field reference: private UnityEngine.GameObject EpicGlow
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_EpicGlow();
    // Get instance field reference: private UnityEngine.GameObject LegendaryGlow
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_LegendaryGlow();
    // Get instance field reference: private System.Byte FIKCNKDKIDP
    [[deprecated("Use field access instead!")]] uint8_t& dyn_FIKCNKDKIDP();
    // Get instance field reference: private System.String FBGKGPFEACM
    [[deprecated("Use field access instead!")]] ::StringW& dyn_FBGKGPFEACM();
    // private System.Void AFBEEMCFGHD(MagicalActual.WorldMenu JCEAHGHCCPC)
    // Offset: 0x1790EBC
    void AFBEEMCFGHD(::MagicalActual::WorldMenu* JCEAHGHCCPC);
    // private System.Void HGFLAPGLGOC(System.Object OMLPNCLFFMJ)
    // Offset: 0x1790F78
    void HGFLAPGLGOC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void PMGKMHPGKJJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x179106C
    void PMGKMHPGKJJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void WillDespawn()
    // Offset: 0x17910D8
    void WillDespawn();
    // private System.Void EOFMCHMJIFK(MagicalActual.WorldMenu JCEAHGHCCPC)
    // Offset: 0x1791134
    void EOFMCHMJIFK(::MagicalActual::WorldMenu* JCEAHGHCCPC);
    // private System.Void FNGLOIECKDG()
    // Offset: 0x17911F0
    void FNGLOIECKDG();
    // private System.Void MLDJPECDFOF()
    // Offset: 0x17912C4
    void MLDJPECDFOF();
    // private System.Void JGNCKGBJCCD(System.Object OMLPNCLFFMJ)
    // Offset: 0x1791320
    void JGNCKGBJCCD(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void JMJFGJKELFI()
    // Offset: 0x179138C
    void JMJFGJKELFI();
    // public System.Void MKBNDPEDGJB()
    // Offset: 0x1791448
    void MKBNDPEDGJB();
    // private System.Void LateUpdate()
    // Offset: 0x179149C
    void LateUpdate();
    // private System.Void JINOEEFGJHJ()
    // Offset: 0x1791730
    void JINOEEFGJHJ();
    // private System.Void IDKCOEJHDJM(System.Object OMLPNCLFFMJ)
    // Offset: 0x17917EC
    void IDKCOEJHDJM(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void JJEJNGMIMOI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1791858
    void JJEJNGMIMOI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EALOIBGLLNJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x179196C
    void EALOIBGLLNJ(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void .ctor()
    // Offset: 0x1791A28
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BossChest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::BossChest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BossChest*, creationType>()));
    }
    // private System.Void ShowMenu()
    // Offset: 0x1791A80
    void ShowMenu();
    // private System.Void ILMJOLNDKHJ()
    // Offset: 0x1791BB8
    void ILMJOLNDKHJ();
    // private System.Void Start()
    // Offset: 0x1791CF4
    void Start();
    // private System.Void ICJGOEPHDGJ()
    // Offset: 0x1791DC0
    void ICJGOEPHDGJ();
    // private System.Void PHMPOFAIOIH(System.Object OMLPNCLFFMJ)
    // Offset: 0x1791E1C
    void PHMPOFAIOIH(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BMPAMLHHDLC(System.Object OMLPNCLFFMJ)
    // Offset: 0x1791E88
    void BMPAMLHHDLC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GDNMJPBGBON()
    // Offset: 0x1791EF4
    void GDNMJPBGBON();
    // private System.Void OHADMJJPBCD()
    // Offset: 0x1791EF8
    void OHADMJJPBCD();
    // private System.Void OCFKLMMKKEN()
    // Offset: 0x1790FE4
    void OCFKLMMKKEN();
    // public System.Void CJPMAKNJBPE()
    // Offset: 0x1792034
    void CJPMAKNJBPE();
    // private System.Void MFJNLNBFNJO(MagicalActual.WorldMenu JCEAHGHCCPC)
    // Offset: 0x1792088
    void MFJNLNBFNJO(::MagicalActual::WorldMenu* JCEAHGHCCPC);
    // private System.Void FLOFOBHFEGP(System.Object OMLPNCLFFMJ)
    // Offset: 0x179215C
    void FLOFOBHFEGP(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MOEBOEAJLDE()
    // Offset: 0x1792218
    void MOEBOEAJLDE();
    // public System.Void OPDFHKLPOAJ()
    // Offset: 0x179221C
    void OPDFHKLPOAJ();
    // private System.Void OnDestroy()
    // Offset: 0x1792270
    void OnDestroy();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1792274
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void AAJLOECCOGD()
    // Offset: 0x1792388
    void AAJLOECCOGD();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x17924C4
    void DGJGAFKDIDK();
    // private System.Void JBIBOAGMJCD()
    // Offset: 0x1792598
    void JBIBOAGMJCD();
    // public System.Void ActionChestOpened()
    // Offset: 0x1792654
    void ActionChestOpened();
  }; // MagicalActual.BossChest
  #pragma pack(pop)
  static check_size<sizeof(BossChest), 104 + sizeof(::StringW)> __MagicalActual_BossChestSizeCheck;
  static_assert(sizeof(BossChest) == 0x70);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::BossChest::AFBEEMCFGHD
// Il2CppName: AFBEEMCFGHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::MagicalActual::WorldMenu*)>(&MagicalActual::BossChest::AFBEEMCFGHD)> {
  static const MethodInfo* get() {
    static auto* JCEAHGHCCPC = &::il2cpp_utils::GetClassFromName("MagicalActual", "WorldMenu")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "AFBEEMCFGHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JCEAHGHCCPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::HGFLAPGLGOC
// Il2CppName: HGFLAPGLGOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::Il2CppObject*)>(&MagicalActual::BossChest::HGFLAPGLGOC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "HGFLAPGLGOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::PMGKMHPGKJJ
// Il2CppName: PMGKMHPGKJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::Il2CppObject*)>(&MagicalActual::BossChest::PMGKMHPGKJJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "PMGKMHPGKJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::WillDespawn
// Il2CppName: WillDespawn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::WillDespawn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "WillDespawn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::EOFMCHMJIFK
// Il2CppName: EOFMCHMJIFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::MagicalActual::WorldMenu*)>(&MagicalActual::BossChest::EOFMCHMJIFK)> {
  static const MethodInfo* get() {
    static auto* JCEAHGHCCPC = &::il2cpp_utils::GetClassFromName("MagicalActual", "WorldMenu")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "EOFMCHMJIFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JCEAHGHCCPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::MLDJPECDFOF
// Il2CppName: MLDJPECDFOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::MLDJPECDFOF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "MLDJPECDFOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::JGNCKGBJCCD
// Il2CppName: JGNCKGBJCCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::Il2CppObject*)>(&MagicalActual::BossChest::JGNCKGBJCCD)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "JGNCKGBJCCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::JMJFGJKELFI
// Il2CppName: JMJFGJKELFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::JMJFGJKELFI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "JMJFGJKELFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::MKBNDPEDGJB
// Il2CppName: MKBNDPEDGJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::MKBNDPEDGJB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "MKBNDPEDGJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::JINOEEFGJHJ
// Il2CppName: JINOEEFGJHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::JINOEEFGJHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "JINOEEFGJHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::IDKCOEJHDJM
// Il2CppName: IDKCOEJHDJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::Il2CppObject*)>(&MagicalActual::BossChest::IDKCOEJHDJM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "IDKCOEJHDJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::JJEJNGMIMOI
// Il2CppName: JJEJNGMIMOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::MagicalActual::NetEntity*)>(&MagicalActual::BossChest::JJEJNGMIMOI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "JJEJNGMIMOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::EALOIBGLLNJ
// Il2CppName: EALOIBGLLNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::Il2CppObject*)>(&MagicalActual::BossChest::EALOIBGLLNJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "EALOIBGLLNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::BossChest::ShowMenu
// Il2CppName: ShowMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::ShowMenu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "ShowMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::ILMJOLNDKHJ
// Il2CppName: ILMJOLNDKHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::ILMJOLNDKHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "ILMJOLNDKHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::ICJGOEPHDGJ
// Il2CppName: ICJGOEPHDGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::ICJGOEPHDGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "ICJGOEPHDGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::PHMPOFAIOIH
// Il2CppName: PHMPOFAIOIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::Il2CppObject*)>(&MagicalActual::BossChest::PHMPOFAIOIH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "PHMPOFAIOIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::BMPAMLHHDLC
// Il2CppName: BMPAMLHHDLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::Il2CppObject*)>(&MagicalActual::BossChest::BMPAMLHHDLC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "BMPAMLHHDLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::GDNMJPBGBON
// Il2CppName: GDNMJPBGBON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::GDNMJPBGBON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "GDNMJPBGBON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::OHADMJJPBCD
// Il2CppName: OHADMJJPBCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::OHADMJJPBCD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "OHADMJJPBCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::OCFKLMMKKEN
// Il2CppName: OCFKLMMKKEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::OCFKLMMKKEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "OCFKLMMKKEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::CJPMAKNJBPE
// Il2CppName: CJPMAKNJBPE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::CJPMAKNJBPE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "CJPMAKNJBPE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::MFJNLNBFNJO
// Il2CppName: MFJNLNBFNJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::MagicalActual::WorldMenu*)>(&MagicalActual::BossChest::MFJNLNBFNJO)> {
  static const MethodInfo* get() {
    static auto* JCEAHGHCCPC = &::il2cpp_utils::GetClassFromName("MagicalActual", "WorldMenu")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "MFJNLNBFNJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JCEAHGHCCPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::FLOFOBHFEGP
// Il2CppName: FLOFOBHFEGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::Il2CppObject*)>(&MagicalActual::BossChest::FLOFOBHFEGP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "FLOFOBHFEGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::MOEBOEAJLDE
// Il2CppName: MOEBOEAJLDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::MOEBOEAJLDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "MOEBOEAJLDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::OPDFHKLPOAJ
// Il2CppName: OPDFHKLPOAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::OPDFHKLPOAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "OPDFHKLPOAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)(::MagicalActual::NetEntity*)>(&MagicalActual::BossChest::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::AAJLOECCOGD
// Il2CppName: AAJLOECCOGD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::AAJLOECCOGD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "AAJLOECCOGD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::JBIBOAGMJCD
// Il2CppName: JBIBOAGMJCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::JBIBOAGMJCD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "JBIBOAGMJCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BossChest::ActionChestOpened
// Il2CppName: ActionChestOpened
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BossChest::*)()>(&MagicalActual::BossChest::ActionChestOpened)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BossChest*), "ActionChestOpened", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
