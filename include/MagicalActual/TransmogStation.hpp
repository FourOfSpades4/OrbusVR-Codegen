// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: ItemContainer
  class ItemContainer;
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
  // Forward declaring type: InventoryIcon
  class InventoryIcon;
  // Forward declaring type: EquipmentSlotInfo
  class EquipmentSlotInfo;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: TextAsset
  class TextAsset;
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: Canvas
  class Canvas;
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Coroutine
  class Coroutine;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: WorldUI
  class WorldUI;
  // Forward declaring type: Element
  class Element;
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
  // Forward declaring type: InventoryItem
  class InventoryItem;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: LTDescr
  class LTDescr;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: TransmogStation
  class TransmogStation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::TransmogStation);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::TransmogStation*, "MagicalActual", "TransmogStation");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x1C8
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.TransmogStation
  // [TokenAttribute] Offset: FFFFFFFF
  class TransmogStation : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::TransmogStation::weaponTypes
    struct weaponTypes;
    // Nested type: ::MagicalActual::TransmogStation::$SetupTooltip$d__51
    class $SetupTooltip$d__51;
    // Nested type: ::MagicalActual::TransmogStation::$UpdateDummyEquipment$d__52
    class $UpdateDummyEquipment$d__52;
    // Nested type: ::MagicalActual::TransmogStation::$$c__DisplayClass55_0
    class $$c__DisplayClass55_0;
    // Nested type: ::MagicalActual::TransmogStation::$DoUpdateInventoryList$d__55
    class $DoUpdateInventoryList$d__55;
    // Nested type: ::MagicalActual::TransmogStation::$$c__DisplayClass56_0
    class $$c__DisplayClass56_0;
    // Nested type: ::MagicalActual::TransmogStation::$$c__DisplayClass57_0
    class $$c__DisplayClass57_0;
    // Nested type: ::MagicalActual::TransmogStation::$ShowTooltip$d__58
    class $ShowTooltip$d__58;
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.ItemContainer LNABACFKNBA
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::ItemContainer* LNABACFKNBA;
    // Field size check
    static_assert(sizeof(::MagicalActual::ItemContainer*) == 0x8);
    // private System.Int32 MMPBDJPOBNE
    // Size: 0x4
    // Offset: 0x30
    int MMPBDJPOBNE;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.Color SelectedColor
    // Size: 0x10
    // Offset: 0x34
    ::UnityEngine::Color SelectedColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.Color PreviewColor
    // Size: 0x10
    // Offset: 0x44
    ::UnityEngine::Color PreviewColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.Color SilverFoilColor
    // Size: 0x10
    // Offset: 0x54
    ::UnityEngine::Color SilverFoilColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.Color GoldFoilColor
    // Size: 0x10
    // Offset: 0x64
    ::UnityEngine::Color GoldFoilColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.Color CitadelFoilColor
    // Size: 0x10
    // Offset: 0x74
    ::UnityEngine::Color CitadelFoilColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // Padding between fields: CitadelFoilColor and: UIPanels
    char __padding8[0x4] = {};
    // public System.Collections.Generic.List`1<UnityEngine.GameObject> UIPanels
    // Size: 0x8
    // Offset: 0x88
    ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* UIPanels;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
    // private UnityEngine.Transform LeftUI
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::Transform* LeftUI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform RightUI
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::Transform* RightUI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public UnityEngine.GameObject skinListContent
    // Size: 0x8
    // Offset: 0xA0
    ::UnityEngine::GameObject* skinListContent;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject ConfirmPrompt
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::GameObject* ConfirmPrompt;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.UI.Text ConfirmText
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::UI::Text* ConfirmText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private UnityEngine.UI.Text ErrorText
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::UI::Text* ErrorText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public MagicalActual.PlayerAvatar PlayerDummy
    // Size: 0x8
    // Offset: 0xC0
    ::MagicalActual::PlayerAvatar* PlayerDummy;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // private UnityEngine.GameObject iconPrefab
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::GameObject* iconPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.TextAsset tooltipHtml
    // Size: 0x8
    // Offset: 0xD0
    ::UnityEngine::TextAsset* tooltipHtml;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextAsset*) == 0x8);
    // private PowerUI.WorldUI IENFBPOPMAI
    // Size: 0x8
    // Offset: 0xD8
    ::PowerUI::WorldUI* IENFBPOPMAI;
    // Field size check
    static_assert(sizeof(::PowerUI::WorldUI*) == 0x8);
    // private PowerUI.Element MBGAGLBLILK
    // Size: 0x8
    // Offset: 0xE0
    ::PowerUI::Element* MBGAGLBLILK;
    // Field size check
    static_assert(sizeof(::PowerUI::Element*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.Transform> weapons
    // Size: 0x8
    // Offset: 0xE8
    ::System::Collections::Generic::List_1<::UnityEngine::Transform*>* weapons;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Transform*>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE5880
    // private System.Boolean <PGCNLMCGHDE>k__BackingField
    // Size: 0x1
    // Offset: 0xF0
    bool PGCNLMCGHDE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: PGCNLMCGHDE and: LIKAPAKJMDJ
    char __padding22[0x7] = {};
    // private ExtUI.InventoryItemInstance[] LIKAPAKJMDJ
    // Size: 0x8
    // Offset: 0xF8
    ::ArrayW<::ExtUI::InventoryItemInstance*> LIKAPAKJMDJ;
    // Field size check
    static_assert(sizeof(::ArrayW<::ExtUI::InventoryItemInstance*>) == 0x8);
    // private System.Collections.Generic.List`1<MagicalActual.InventoryIcon> ALDAMJCLJII
    // Size: 0x8
    // Offset: 0x100
    ::System::Collections::Generic::List_1<::MagicalActual::InventoryIcon*>* ALDAMJCLJII;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::MagicalActual::InventoryIcon*>*) == 0x8);
    // private System.Collections.Generic.List`1<MagicalActual.InventoryIcon> ACELMPKMKBH
    // Size: 0x8
    // Offset: 0x108
    ::System::Collections::Generic::List_1<::MagicalActual::InventoryIcon*>* ACELMPKMKBH;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::MagicalActual::InventoryIcon*>*) == 0x8);
    // private MagicalActual.InventoryIcon resetSkinIcon
    // Size: 0x8
    // Offset: 0x110
    ::MagicalActual::InventoryIcon* resetSkinIcon;
    // Field size check
    static_assert(sizeof(::MagicalActual::InventoryIcon*) == 0x8);
    // private UnityEngine.RectTransform scrollableContent
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::RectTransform* scrollableContent;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.Canvas uiCanvas
    // Size: 0x8
    // Offset: 0x120
    ::UnityEngine::Canvas* uiCanvas;
    // Field size check
    static_assert(sizeof(::UnityEngine::Canvas*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Texture2D> OOCFIPOBKML
    // Size: 0x8
    // Offset: 0x128
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Texture2D*>* OOCFIPOBKML;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Texture2D*>*) == 0x8);
    // private System.String DNIPJDNKMAM
    // Size: 0x8
    // Offset: 0x130
    ::StringW DNIPJDNKMAM;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String PCALNFLCFJK
    // Size: 0x8
    // Offset: 0x138
    ::StringW PCALNFLCFJK;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String MDAPFBBLIPF
    // Size: 0x8
    // Offset: 0x140
    ::StringW MDAPFBBLIPF;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.List`1<System.Int32> EAJJPCFCPLN
    // Size: 0x8
    // Offset: 0x148
    ::System::Collections::Generic::List_1<int>* EAJJPCFCPLN;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<int>*) == 0x8);
    // private UnityEngine.Coroutine EJIGECDJKLH
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::Coroutine* EJIGECDJKLH;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private UnityEngine.Coroutine EDJAFOKJHOI
    // Size: 0x8
    // Offset: 0x158
    ::UnityEngine::Coroutine* EDJAFOKJHOI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private System.Collections.Generic.List`1<MagicalActual.EquipmentSlotInfo> equipmentSlots
    // Size: 0x8
    // Offset: 0x160
    ::System::Collections::Generic::List_1<::MagicalActual::EquipmentSlotInfo*>* equipmentSlots;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::MagicalActual::EquipmentSlotInfo*>*) == 0x8);
    // private MagicalActual.InventoryIcon JNHIPHEBMIN
    // Size: 0x8
    // Offset: 0x168
    ::MagicalActual::InventoryIcon* JNHIPHEBMIN;
    // Field size check
    static_assert(sizeof(::MagicalActual::InventoryIcon*) == 0x8);
    // private MagicalActual.InventoryIcon NOIMHOMPFCM
    // Size: 0x8
    // Offset: 0x170
    ::MagicalActual::InventoryIcon* NOIMHOMPFCM;
    // Field size check
    static_assert(sizeof(::MagicalActual::InventoryIcon*) == 0x8);
    // private UnityEngine.Coroutine DDCOELDJDHA
    // Size: 0x8
    // Offset: 0x178
    ::UnityEngine::Coroutine* DDCOELDJDHA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private System.Boolean MGHDPNFNJAH
    // Size: 0x1
    // Offset: 0x180
    bool MGHDPNFNJAH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean MOMCJKNENHN
    // Size: 0x1
    // Offset: 0x181
    bool MOMCJKNENHN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean PHJBJNDPDCM
    // Size: 0x1
    // Offset: 0x182
    bool PHJBJNDPDCM;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: PHJBJNDPDCM and: JPPKGMONHMP
    char __padding42[0x5] = {};
    // private System.String JPPKGMONHMP
    // Size: 0x8
    // Offset: 0x188
    ::StringW JPPKGMONHMP;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String PKDMJOEBAPP
    // Size: 0x8
    // Offset: 0x190
    ::StringW PKDMJOEBAPP;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private LTDescr LHLEJNPCINP
    // Size: 0x8
    // Offset: 0x198
    ::GlobalNamespace::LTDescr* LHLEJNPCINP;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::LTDescr*) == 0x8);
    // private LTDescr OHDEOKDIJHH
    // Size: 0x8
    // Offset: 0x1A0
    ::GlobalNamespace::LTDescr* OHDEOKDIJHH;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::LTDescr*) == 0x8);
    // private System.String OACEOBJHIGK
    // Size: 0x8
    // Offset: 0x1A8
    ::StringW OACEOBJHIGK;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String JNPKEBIEONG
    // Size: 0x8
    // Offset: 0x1B0
    ::StringW JNPKEBIEONG;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String KKEICCNIHNK
    // Size: 0x8
    // Offset: 0x1B8
    ::StringW KKEICCNIHNK;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String OKAGNFDHOEI
    // Size: 0x8
    // Offset: 0x1C0
    ::StringW OKAGNFDHOEI;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static private System.Single DOGIBEBLBKB
    static constexpr const float DOGIBEBLBKB = 81.2;
    // Get static field: static private System.Single DOGIBEBLBKB
    static float _get_DOGIBEBLBKB();
    // Set static field: static private System.Single DOGIBEBLBKB
    static void _set_DOGIBEBLBKB(float value);
    // static field const value: static private System.Single MODOJFHNNLN
    static constexpr const float MODOJFHNNLN = 80.85;
    // Get static field: static private System.Single MODOJFHNNLN
    static float _get_MODOJFHNNLN();
    // Set static field: static private System.Single MODOJFHNNLN
    static void _set_MODOJFHNNLN(float value);
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private MagicalActual.ItemContainer LNABACFKNBA
    [[deprecated("Use field access instead!")]] ::MagicalActual::ItemContainer*& dyn_LNABACFKNBA();
    // Get instance field reference: private System.Int32 MMPBDJPOBNE
    [[deprecated("Use field access instead!")]] int& dyn_MMPBDJPOBNE();
    // Get instance field reference: public UnityEngine.Color SelectedColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_SelectedColor();
    // Get instance field reference: public UnityEngine.Color PreviewColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_PreviewColor();
    // Get instance field reference: public UnityEngine.Color SilverFoilColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_SilverFoilColor();
    // Get instance field reference: public UnityEngine.Color GoldFoilColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_GoldFoilColor();
    // Get instance field reference: public UnityEngine.Color CitadelFoilColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_CitadelFoilColor();
    // Get instance field reference: public System.Collections.Generic.List`1<UnityEngine.GameObject> UIPanels
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn_UIPanels();
    // Get instance field reference: private UnityEngine.Transform LeftUI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_LeftUI();
    // Get instance field reference: private UnityEngine.Transform RightUI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_RightUI();
    // Get instance field reference: public UnityEngine.GameObject skinListContent
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_skinListContent();
    // Get instance field reference: public UnityEngine.GameObject ConfirmPrompt
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ConfirmPrompt();
    // Get instance field reference: private UnityEngine.UI.Text ConfirmText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_ConfirmText();
    // Get instance field reference: private UnityEngine.UI.Text ErrorText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_ErrorText();
    // Get instance field reference: public MagicalActual.PlayerAvatar PlayerDummy
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_PlayerDummy();
    // Get instance field reference: private UnityEngine.GameObject iconPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_iconPrefab();
    // Get instance field reference: public UnityEngine.TextAsset tooltipHtml
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& dyn_tooltipHtml();
    // Get instance field reference: private PowerUI.WorldUI IENFBPOPMAI
    [[deprecated("Use field access instead!")]] ::PowerUI::WorldUI*& dyn_IENFBPOPMAI();
    // Get instance field reference: private PowerUI.Element MBGAGLBLILK
    [[deprecated("Use field access instead!")]] ::PowerUI::Element*& dyn_MBGAGLBLILK();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Transform> weapons
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& dyn_weapons();
    // Get instance field reference: private System.Boolean <PGCNLMCGHDE>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$PGCNLMCGHDE$k__BackingField();
    // Get instance field reference: private ExtUI.InventoryItemInstance[] LIKAPAKJMDJ
    [[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::InventoryItemInstance*>& dyn_LIKAPAKJMDJ();
    // Get instance field reference: private System.Collections.Generic.List`1<MagicalActual.InventoryIcon> ALDAMJCLJII
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::MagicalActual::InventoryIcon*>*& dyn_ALDAMJCLJII();
    // Get instance field reference: private System.Collections.Generic.List`1<MagicalActual.InventoryIcon> ACELMPKMKBH
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::MagicalActual::InventoryIcon*>*& dyn_ACELMPKMKBH();
    // Get instance field reference: private MagicalActual.InventoryIcon resetSkinIcon
    [[deprecated("Use field access instead!")]] ::MagicalActual::InventoryIcon*& dyn_resetSkinIcon();
    // Get instance field reference: private UnityEngine.RectTransform scrollableContent
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_scrollableContent();
    // Get instance field reference: private UnityEngine.Canvas uiCanvas
    [[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& dyn_uiCanvas();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Texture2D> OOCFIPOBKML
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Texture2D*>*& dyn_OOCFIPOBKML();
    // Get instance field reference: private System.String DNIPJDNKMAM
    [[deprecated("Use field access instead!")]] ::StringW& dyn_DNIPJDNKMAM();
    // Get instance field reference: private System.String PCALNFLCFJK
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PCALNFLCFJK();
    // Get instance field reference: private System.String MDAPFBBLIPF
    [[deprecated("Use field access instead!")]] ::StringW& dyn_MDAPFBBLIPF();
    // Get instance field reference: private System.Collections.Generic.List`1<System.Int32> EAJJPCFCPLN
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& dyn_EAJJPCFCPLN();
    // Get instance field reference: private UnityEngine.Coroutine EJIGECDJKLH
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_EJIGECDJKLH();
    // Get instance field reference: private UnityEngine.Coroutine EDJAFOKJHOI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_EDJAFOKJHOI();
    // Get instance field reference: private System.Collections.Generic.List`1<MagicalActual.EquipmentSlotInfo> equipmentSlots
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::MagicalActual::EquipmentSlotInfo*>*& dyn_equipmentSlots();
    // Get instance field reference: private MagicalActual.InventoryIcon JNHIPHEBMIN
    [[deprecated("Use field access instead!")]] ::MagicalActual::InventoryIcon*& dyn_JNHIPHEBMIN();
    // Get instance field reference: private MagicalActual.InventoryIcon NOIMHOMPFCM
    [[deprecated("Use field access instead!")]] ::MagicalActual::InventoryIcon*& dyn_NOIMHOMPFCM();
    // Get instance field reference: private UnityEngine.Coroutine DDCOELDJDHA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_DDCOELDJDHA();
    // Get instance field reference: private System.Boolean MGHDPNFNJAH
    [[deprecated("Use field access instead!")]] bool& dyn_MGHDPNFNJAH();
    // Get instance field reference: private System.Boolean MOMCJKNENHN
    [[deprecated("Use field access instead!")]] bool& dyn_MOMCJKNENHN();
    // Get instance field reference: private System.Boolean PHJBJNDPDCM
    [[deprecated("Use field access instead!")]] bool& dyn_PHJBJNDPDCM();
    // Get instance field reference: private System.String JPPKGMONHMP
    [[deprecated("Use field access instead!")]] ::StringW& dyn_JPPKGMONHMP();
    // Get instance field reference: private System.String PKDMJOEBAPP
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PKDMJOEBAPP();
    // Get instance field reference: private LTDescr LHLEJNPCINP
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::LTDescr*& dyn_LHLEJNPCINP();
    // Get instance field reference: private LTDescr OHDEOKDIJHH
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::LTDescr*& dyn_OHDEOKDIJHH();
    // Get instance field reference: private System.String OACEOBJHIGK
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OACEOBJHIGK();
    // Get instance field reference: private System.String JNPKEBIEONG
    [[deprecated("Use field access instead!")]] ::StringW& dyn_JNPKEBIEONG();
    // Get instance field reference: private System.String KKEICCNIHNK
    [[deprecated("Use field access instead!")]] ::StringW& dyn_KKEICCNIHNK();
    // Get instance field reference: private System.String OKAGNFDHOEI
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OKAGNFDHOEI();
    // public System.Void .ctor()
    // Offset: 0x156F2C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TransmogStation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::TransmogStation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TransmogStation*, creationType>()));
    }
    // private System.Void ACCIJGCGCKE()
    // Offset: 0x156F340
    void ACCIJGCGCKE();
    // private System.Void MJKJIDPEIFJ(MagicalActual.InventoryIcon NEOALINPDNP)
    // Offset: 0x156F464
    void MJKJIDPEIFJ(::MagicalActual::InventoryIcon* NEOALINPDNP);
    // public System.Collections.IEnumerator NIBALMELDOK()
    // Offset: 0x15703B4
    ::System::Collections::IEnumerator* NIBALMELDOK();
    // private System.Void APPBABEJHEC()
    // Offset: 0x1570458
    void APPBABEJHEC();
    // private MagicalActual.InventoryIcon GMLBEHJLLDH(ExtUI.InventoryItem CDIKIFBMIJC)
    // Offset: 0x157057C
    ::MagicalActual::InventoryIcon* GMLBEHJLLDH(::ExtUI::InventoryItem* CDIKIFBMIJC);
    // public System.Void HOEGJADFFGG()
    // Offset: 0x1570B00
    void HOEGJADFFGG();
    // private System.Void GHDLPLLCAKD(System.String JOPFDAAAKIJ)
    // Offset: 0x1570BC0
    void GHDLPLLCAKD(::StringW JOPFDAAAKIJ);
    // private System.Void KBOMGNLEKFO(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1570D40
    void KBOMGNLEKFO(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void NABKAFLHGIB(MagicalActual.InventoryIcon NEOALINPDNP)
    // Offset: 0x1570E80
    void NABKAFLHGIB(::MagicalActual::InventoryIcon* NEOALINPDNP);
    // private System.Void HCNHINPEANP()
    // Offset: 0x1570EDC
    void HCNHINPEANP();
    // public System.Boolean DDKIFNLDPKJ()
    // Offset: 0x1571000
    bool DDKIFNLDPKJ();
    // private System.Void CFKKLDPLDLJ()
    // Offset: 0x156F770
    void CFKKLDPLDLJ();
    // private System.Void LHEFIPDJGJI(UnityEngine.GameObject HIBGDHKJNKD, System.Collections.Generic.List`1<MagicalActual.InventoryIcon> NGOKOBFLHAH, System.Int32 PIEBOKNPEFP)
    // Offset: 0x1571008
    void LHEFIPDJGJI(::UnityEngine::GameObject* HIBGDHKJNKD, ::System::Collections::Generic::List_1<::MagicalActual::InventoryIcon*>* NGOKOBFLHAH, int PIEBOKNPEFP);
    // private System.Void FMLGNELMIKO()
    // Offset: 0x15711E8
    void FMLGNELMIKO();
    // private System.Int32 IDNIJCHMDAH()
    // Offset: 0x157130C
    int IDNIJCHMDAH();
    // public System.Void HAOMGOBIGOB()
    // Offset: 0x15724C0
    void HAOMGOBIGOB();
    // private System.Void HOPPPJGMLHB(System.Boolean MMMEIONJJFJ)
    // Offset: 0x1572940
    void HOPPPJGMLHB(bool MMMEIONJJFJ);
    // private System.Void MNFCDLHJEGC(System.Boolean BFIPCHNFAJI)
    // Offset: 0x157294C
    void MNFCDLHJEGC(bool BFIPCHNFAJI);
    // public System.Void ShowWindow()
    // Offset: 0x1572AC0
    void ShowWindow();
    // private System.Void JKIHIDEEEJG(ExtUI.InventoryItemInstance ODIKCNINDDM)
    // Offset: 0x1572C70
    void JKIHIDEEEJG(::ExtUI::InventoryItemInstance* ODIKCNINDDM);
    // public System.Void TransmuteItems()
    // Offset: 0x15748E4
    void TransmuteItems();
    // private System.Void EHEPGCKDILE()
    // Offset: 0x1574D5C
    void EHEPGCKDILE();
    // private System.Collections.IEnumerator DNHGCIFBECN()
    // Offset: 0x1574E80
    ::System::Collections::IEnumerator* DNHGCIFBECN();
    // public System.Boolean get_isOpen()
    // Offset: 0x1572C1C
    bool get_isOpen();
    // private UnityEngine.Texture2D DFFFMKJCODA(System.String DHKAMFAGAMD)
    // Offset: 0x1570914
    ::UnityEngine::Texture2D* DFFFMKJCODA(::StringW DHKAMFAGAMD);
    // private System.Collections.IEnumerator CGAHDLEGEFL()
    // Offset: 0x1574F20
    ::System::Collections::IEnumerator* CGAHDLEGEFL();
    // private System.Void JGIKFAEMCLE()
    // Offset: 0x1574F98
    void JGIKFAEMCLE();
    // private System.Void GPGMIAMMGLB(MagicalActual.InventoryIcon NEOALINPDNP)
    // Offset: 0x1574FD0
    void GPGMIAMMGLB(::MagicalActual::InventoryIcon* NEOALINPDNP);
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x157509C
    void ABIHCGOKNCL();
    // private System.Void MHNJCHHDMEI()
    // Offset: 0x156FE90
    void MHNJCHHDMEI();
    // private System.Void HKLIKNNEDMJ()
    // Offset: 0x1575608
    void HKLIKNNEDMJ();
    // private System.Void CECGCHGJEFB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1575610
    void CECGCHGJEFB(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void APPLEKDHJDA()
    // Offset: 0x1575750
    void APPLEKDHJDA();
    // private System.Void MABKCPNEIJK(System.Object OMLPNCLFFMJ)
    // Offset: 0x1575754
    void MABKCPNEIJK(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Collections.IEnumerator LNNKBFGMIBC(MagicalActual.InventoryIcon NEOALINPDNP)
    // Offset: 0x1575820
    ::System::Collections::IEnumerator* LNNKBFGMIBC(::MagicalActual::InventoryIcon* NEOALINPDNP);
    // private System.Void ILPADJCFEAD(System.Boolean BFIPCHNFAJI)
    // Offset: 0x15758E4
    void ILPADJCFEAD(bool BFIPCHNFAJI);
    // private System.Void KKNJGCMLDCD()
    // Offset: 0x1575A58
    void KKNJGCMLDCD();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1575C10
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void HideWindow()
    // Offset: 0x1575D7C
    void HideWindow();
    // private System.Void Start()
    // Offset: 0x1575EFC
    void Start();
    // public System.Void PGPIMJPHLBB()
    // Offset: 0x1576468
    void PGPIMJPHLBB();
    // private System.Void NPFHCOKKHMA()
    // Offset: 0x15765BC
    void NPFHCOKKHMA();
    // private System.Void EKIOGHHNFEJ(ExtUI.InventoryItem CDIKIFBMIJC)
    // Offset: 0x1576784
    void EKIOGHHNFEJ(::ExtUI::InventoryItem* CDIKIFBMIJC);
    // private System.Void Update()
    // Offset: 0x1576B34
    void Update();
    // private System.String KIPJEGDFAHM(System.String LMGBEIOJGIF)
    // Offset: 0x157487C
    ::StringW KIPJEGDFAHM(::StringW LMGBEIOJGIF);
    // private System.Int32 EFJOGCFOGOL()
    // Offset: 0x1576DD4
    int EFJOGCFOGOL();
    // private System.Void CPEGJCMJAFI()
    // Offset: 0x1577F98
    void CPEGJCMJAFI();
    // private System.Void HPPOAOJNIED()
    // Offset: 0x15780BC
    void HPPOAOJNIED();
    // private System.Void OnDestroy()
    // Offset: 0x1578274
    void OnDestroy();
    // private System.Void HHBMEFPJFMC(MagicalActual.InventoryIcon NEOALINPDNP)
    // Offset: 0x1578358
    void HHBMEFPJFMC(::MagicalActual::InventoryIcon* NEOALINPDNP);
    // private System.Void JAEBABKDJMD()
    // Offset: 0x1578644
    void JAEBABKDJMD();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x15787FC
    void HKINNMLBMMG();
    // private System.Void LOICDCILKMD(MagicalActual.InventoryIcon NEOALINPDNP)
    // Offset: 0x1578D68
    void LOICDCILKMD(::MagicalActual::InventoryIcon* NEOALINPDNP);
    // private System.Void LIFHHDAEPFK()
    // Offset: 0x1579054
    void LIFHHDAEPFK();
    // public System.Collections.IEnumerator DoUpdateInventoryList()
    // Offset: 0x1570B4C
    ::System::Collections::IEnumerator* DoUpdateInventoryList();
    // private System.Void OGCPOHHPEKH(System.String JOPFDAAAKIJ)
    // Offset: 0x1579138
    void OGCPOHHPEKH(::StringW JOPFDAAAKIJ);
    // public System.Void UpdateInventoryList()
    // Offset: 0x1572C24
    void UpdateInventoryList();
    // private System.Void ANNKOKPJPFI(MagicalActual.InventoryIcon NEOALINPDNP)
    // Offset: 0x15792AC
    void ANNKOKPJPFI(::MagicalActual::InventoryIcon* NEOALINPDNP);
    // private System.Boolean GHMALFFIEKA(System.Int32 BHHGMPLHEDC)
    // Offset: 0x15723D4
    bool GHMALFFIEKA(int BHHGMPLHEDC);
    // private System.Collections.IEnumerator JBFBFOENFAL(MagicalActual.InventoryIcon NEOALINPDNP)
    // Offset: 0x1575004
    ::System::Collections::IEnumerator* JBFBFOENFAL(::MagicalActual::InventoryIcon* NEOALINPDNP);
    // private System.Void PDNGNEJPFOE()
    // Offset: 0x1570E84
    void PDNGNEJPFOE();
    // private System.Void KLGODNHDEEG()
    // Offset: 0x15792B0
    void KLGODNHDEEG();
    // private System.Void CDEKEEPIHIO()
    // Offset: 0x15793D4
    void CDEKEEPIHIO();
    // private System.Collections.IEnumerator CHAOEDDEMMJ()
    // Offset: 0x1576D60
    ::System::Collections::IEnumerator* CHAOEDDEMMJ();
  }; // MagicalActual.TransmogStation
  #pragma pack(pop)
  static check_size<sizeof(TransmogStation), 448 + sizeof(::StringW)> __MagicalActual_TransmogStationSizeCheck;
  static_assert(sizeof(TransmogStation) == 0x1C8);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::TransmogStation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::TransmogStation::ACCIJGCGCKE
// Il2CppName: ACCIJGCGCKE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::ACCIJGCGCKE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "ACCIJGCGCKE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::MJKJIDPEIFJ
// Il2CppName: MJKJIDPEIFJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::MagicalActual::InventoryIcon*)>(&MagicalActual::TransmogStation::MJKJIDPEIFJ)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "InventoryIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "MJKJIDPEIFJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::NIBALMELDOK
// Il2CppName: NIBALMELDOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::NIBALMELDOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "NIBALMELDOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::APPBABEJHEC
// Il2CppName: APPBABEJHEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::APPBABEJHEC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "APPBABEJHEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::GMLBEHJLLDH
// Il2CppName: GMLBEHJLLDH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::InventoryIcon* (MagicalActual::TransmogStation::*)(::ExtUI::InventoryItem*)>(&MagicalActual::TransmogStation::GMLBEHJLLDH)> {
  static const MethodInfo* get() {
    static auto* CDIKIFBMIJC = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "GMLBEHJLLDH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CDIKIFBMIJC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::HOEGJADFFGG
// Il2CppName: HOEGJADFFGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::HOEGJADFFGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "HOEGJADFFGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::GHDLPLLCAKD
// Il2CppName: GHDLPLLCAKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::StringW)>(&MagicalActual::TransmogStation::GHDLPLLCAKD)> {
  static const MethodInfo* get() {
    static auto* JOPFDAAAKIJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "GHDLPLLCAKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JOPFDAAAKIJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::KBOMGNLEKFO
// Il2CppName: KBOMGNLEKFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::System::Collections::ArrayList*)>(&MagicalActual::TransmogStation::KBOMGNLEKFO)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "KBOMGNLEKFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::NABKAFLHGIB
// Il2CppName: NABKAFLHGIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::MagicalActual::InventoryIcon*)>(&MagicalActual::TransmogStation::NABKAFLHGIB)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "InventoryIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "NABKAFLHGIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::HCNHINPEANP
// Il2CppName: HCNHINPEANP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::HCNHINPEANP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "HCNHINPEANP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::DDKIFNLDPKJ
// Il2CppName: DDKIFNLDPKJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::DDKIFNLDPKJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "DDKIFNLDPKJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::CFKKLDPLDLJ
// Il2CppName: CFKKLDPLDLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::CFKKLDPLDLJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "CFKKLDPLDLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::LHEFIPDJGJI
// Il2CppName: LHEFIPDJGJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::UnityEngine::GameObject*, ::System::Collections::Generic::List_1<::MagicalActual::InventoryIcon*>*, int)>(&MagicalActual::TransmogStation::LHEFIPDJGJI)> {
  static const MethodInfo* get() {
    static auto* HIBGDHKJNKD = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* NGOKOBFLHAH = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("MagicalActual", "InventoryIcon")})->byval_arg;
    static auto* PIEBOKNPEFP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "LHEFIPDJGJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HIBGDHKJNKD, NGOKOBFLHAH, PIEBOKNPEFP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::FMLGNELMIKO
// Il2CppName: FMLGNELMIKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::FMLGNELMIKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "FMLGNELMIKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::IDNIJCHMDAH
// Il2CppName: IDNIJCHMDAH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::IDNIJCHMDAH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "IDNIJCHMDAH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::HAOMGOBIGOB
// Il2CppName: HAOMGOBIGOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::HAOMGOBIGOB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "HAOMGOBIGOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::HOPPPJGMLHB
// Il2CppName: HOPPPJGMLHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(bool)>(&MagicalActual::TransmogStation::HOPPPJGMLHB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "HOPPPJGMLHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::MNFCDLHJEGC
// Il2CppName: MNFCDLHJEGC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(bool)>(&MagicalActual::TransmogStation::MNFCDLHJEGC)> {
  static const MethodInfo* get() {
    static auto* BFIPCHNFAJI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "MNFCDLHJEGC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BFIPCHNFAJI});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::ShowWindow
// Il2CppName: ShowWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::ShowWindow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "ShowWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::JKIHIDEEEJG
// Il2CppName: JKIHIDEEEJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::TransmogStation::JKIHIDEEEJG)> {
  static const MethodInfo* get() {
    static auto* ODIKCNINDDM = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "JKIHIDEEEJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODIKCNINDDM});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::TransmuteItems
// Il2CppName: TransmuteItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::TransmuteItems)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "TransmuteItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::EHEPGCKDILE
// Il2CppName: EHEPGCKDILE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::EHEPGCKDILE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "EHEPGCKDILE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::DNHGCIFBECN
// Il2CppName: DNHGCIFBECN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::DNHGCIFBECN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "DNHGCIFBECN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::get_isOpen
// Il2CppName: get_isOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::get_isOpen)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "get_isOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::DFFFMKJCODA
// Il2CppName: DFFFMKJCODA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (MagicalActual::TransmogStation::*)(::StringW)>(&MagicalActual::TransmogStation::DFFFMKJCODA)> {
  static const MethodInfo* get() {
    static auto* DHKAMFAGAMD = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "DFFFMKJCODA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DHKAMFAGAMD});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::CGAHDLEGEFL
// Il2CppName: CGAHDLEGEFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::CGAHDLEGEFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "CGAHDLEGEFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::JGIKFAEMCLE
// Il2CppName: JGIKFAEMCLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::JGIKFAEMCLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "JGIKFAEMCLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::GPGMIAMMGLB
// Il2CppName: GPGMIAMMGLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::MagicalActual::InventoryIcon*)>(&MagicalActual::TransmogStation::GPGMIAMMGLB)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "InventoryIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "GPGMIAMMGLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::MHNJCHHDMEI
// Il2CppName: MHNJCHHDMEI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::MHNJCHHDMEI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "MHNJCHHDMEI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::HKLIKNNEDMJ
// Il2CppName: HKLIKNNEDMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::HKLIKNNEDMJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "HKLIKNNEDMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::CECGCHGJEFB
// Il2CppName: CECGCHGJEFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::System::Collections::ArrayList*)>(&MagicalActual::TransmogStation::CECGCHGJEFB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "CECGCHGJEFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::APPLEKDHJDA
// Il2CppName: APPLEKDHJDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::APPLEKDHJDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "APPLEKDHJDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::MABKCPNEIJK
// Il2CppName: MABKCPNEIJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::Il2CppObject*)>(&MagicalActual::TransmogStation::MABKCPNEIJK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "MABKCPNEIJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::LNNKBFGMIBC
// Il2CppName: LNNKBFGMIBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TransmogStation::*)(::MagicalActual::InventoryIcon*)>(&MagicalActual::TransmogStation::LNNKBFGMIBC)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "InventoryIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "LNNKBFGMIBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::ILPADJCFEAD
// Il2CppName: ILPADJCFEAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(bool)>(&MagicalActual::TransmogStation::ILPADJCFEAD)> {
  static const MethodInfo* get() {
    static auto* BFIPCHNFAJI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "ILPADJCFEAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BFIPCHNFAJI});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::KKNJGCMLDCD
// Il2CppName: KKNJGCMLDCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::KKNJGCMLDCD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "KKNJGCMLDCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::TransmogStation::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::HideWindow
// Il2CppName: HideWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::HideWindow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "HideWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::PGPIMJPHLBB
// Il2CppName: PGPIMJPHLBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::PGPIMJPHLBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "PGPIMJPHLBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::NPFHCOKKHMA
// Il2CppName: NPFHCOKKHMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::NPFHCOKKHMA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "NPFHCOKKHMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::EKIOGHHNFEJ
// Il2CppName: EKIOGHHNFEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::ExtUI::InventoryItem*)>(&MagicalActual::TransmogStation::EKIOGHHNFEJ)> {
  static const MethodInfo* get() {
    static auto* CDIKIFBMIJC = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "EKIOGHHNFEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CDIKIFBMIJC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::KIPJEGDFAHM
// Il2CppName: KIPJEGDFAHM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::TransmogStation::*)(::StringW)>(&MagicalActual::TransmogStation::KIPJEGDFAHM)> {
  static const MethodInfo* get() {
    static auto* LMGBEIOJGIF = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "KIPJEGDFAHM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LMGBEIOJGIF});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::EFJOGCFOGOL
// Il2CppName: EFJOGCFOGOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::EFJOGCFOGOL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "EFJOGCFOGOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::CPEGJCMJAFI
// Il2CppName: CPEGJCMJAFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::CPEGJCMJAFI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "CPEGJCMJAFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::HPPOAOJNIED
// Il2CppName: HPPOAOJNIED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::HPPOAOJNIED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "HPPOAOJNIED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::HHBMEFPJFMC
// Il2CppName: HHBMEFPJFMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::MagicalActual::InventoryIcon*)>(&MagicalActual::TransmogStation::HHBMEFPJFMC)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "InventoryIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "HHBMEFPJFMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::JAEBABKDJMD
// Il2CppName: JAEBABKDJMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::JAEBABKDJMD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "JAEBABKDJMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::LOICDCILKMD
// Il2CppName: LOICDCILKMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::MagicalActual::InventoryIcon*)>(&MagicalActual::TransmogStation::LOICDCILKMD)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "InventoryIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "LOICDCILKMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::LIFHHDAEPFK
// Il2CppName: LIFHHDAEPFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::LIFHHDAEPFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "LIFHHDAEPFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::DoUpdateInventoryList
// Il2CppName: DoUpdateInventoryList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::DoUpdateInventoryList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "DoUpdateInventoryList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::OGCPOHHPEKH
// Il2CppName: OGCPOHHPEKH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::StringW)>(&MagicalActual::TransmogStation::OGCPOHHPEKH)> {
  static const MethodInfo* get() {
    static auto* JOPFDAAAKIJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "OGCPOHHPEKH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JOPFDAAAKIJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::UpdateInventoryList
// Il2CppName: UpdateInventoryList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::UpdateInventoryList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "UpdateInventoryList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::ANNKOKPJPFI
// Il2CppName: ANNKOKPJPFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)(::MagicalActual::InventoryIcon*)>(&MagicalActual::TransmogStation::ANNKOKPJPFI)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "InventoryIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "ANNKOKPJPFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::GHMALFFIEKA
// Il2CppName: GHMALFFIEKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::TransmogStation::*)(int)>(&MagicalActual::TransmogStation::GHMALFFIEKA)> {
  static const MethodInfo* get() {
    static auto* BHHGMPLHEDC = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "GHMALFFIEKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHHGMPLHEDC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::JBFBFOENFAL
// Il2CppName: JBFBFOENFAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TransmogStation::*)(::MagicalActual::InventoryIcon*)>(&MagicalActual::TransmogStation::JBFBFOENFAL)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "InventoryIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "JBFBFOENFAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::PDNGNEJPFOE
// Il2CppName: PDNGNEJPFOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::PDNGNEJPFOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "PDNGNEJPFOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::KLGODNHDEEG
// Il2CppName: KLGODNHDEEG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::KLGODNHDEEG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "KLGODNHDEEG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::CDEKEEPIHIO
// Il2CppName: CDEKEEPIHIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::CDEKEEPIHIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "CDEKEEPIHIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TransmogStation::CHAOEDDEMMJ
// Il2CppName: CHAOEDDEMMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TransmogStation::*)()>(&MagicalActual::TransmogStation::CHAOEDDEMMJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TransmogStation*), "CHAOEDDEMMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
