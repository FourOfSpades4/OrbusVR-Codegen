// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: DynamicEvent
  class DynamicEvent;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PublicEventTriggerCollider
  class PublicEventTriggerCollider;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PublicEventTriggerCollider);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PublicEventTriggerCollider*, "MagicalActual", "PublicEventTriggerCollider");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x2D
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PublicEventTriggerCollider
  // [TokenAttribute] Offset: FFFFFFFF
  class PublicEventTriggerCollider : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.DynamicEvent publicEvent
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::DynamicEvent* publicEvent;
    // Field size check
    static_assert(sizeof(::MagicalActual::DynamicEvent*) == 0x8);
    // private UnityEngine.GameObject visualTrigger
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* visualTrigger;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.Int32 ID
    // Size: 0x4
    // Offset: 0x28
    int _ID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean handleCollision
    // Size: 0x1
    // Offset: 0x2C
    bool handleCollision;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.DynamicEvent publicEvent
    [[deprecated("Use field access instead!")]] ::MagicalActual::DynamicEvent*& dyn_publicEvent();
    // Get instance field reference: private UnityEngine.GameObject visualTrigger
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_visualTrigger();
    // Get instance field reference: public System.Int32 ID
    [[deprecated("Use field access instead!")]] int& dyn_ID();
    // Get instance field reference: public System.Boolean handleCollision
    [[deprecated("Use field access instead!")]] bool& dyn_handleCollision();
    // public System.Void GAJAPPDILGM()
    // Offset: 0x1B1279C
    void GAJAPPDILGM();
    // public System.Void handleReset()
    // Offset: 0x1B12838
    void handleReset();
    // private System.Void MIGKNCENLJE(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1B128D4
    void MIGKNCENLJE(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void MEOEOLKJFCB()
    // Offset: 0x1B129F0
    void MEOEOLKJFCB();
    // public System.Void HHGDIFKFAJJ()
    // Offset: 0x1B12A88
    void HHGDIFKFAJJ();
    // public System.Void HGIBLJMHDKP()
    // Offset: 0x1B12B20
    void HGIBLJMHDKP();
    // private System.Void OnTriggerEnter(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1B12BBC
    void OnTriggerEnter(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void BADLMMPHANA()
    // Offset: 0x1B12CD8
    void BADLMMPHANA();
    // public System.Void NHIJFBIELND()
    // Offset: 0x1B12D74
    void NHIJFBIELND();
    // public System.Void AAAFHMEFOFJ()
    // Offset: 0x1B12E0C
    void AAAFHMEFOFJ();
    // public System.Void GILFDAKHKJA()
    // Offset: 0x1B12EA8
    void GILFDAKHKJA();
    // public System.Void HHHPIBFDELL()
    // Offset: 0x1B12F44
    void HHHPIBFDELL();
    // private System.Void LLALLGPLCGK(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1B12FE0
    void LLALLGPLCGK(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void NGGHKGMMJFO()
    // Offset: 0x1B130FC
    void NGGHKGMMJFO();
    // private System.Void GAAODDCPLLK(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1B13198
    void GAAODDCPLLK(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void HOOMCFNEPIG(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1B132B4
    void HOOMCFNEPIG(::UnityEngine::Collider* GMCJEAMJJEP);
    // public System.Void handleTriggerSet()
    // Offset: 0x1B133D0
    void handleTriggerSet();
    // public System.Void NHLBHAFHHNF()
    // Offset: 0x1B1346C
    void NHLBHAFHHNF();
    // public System.Void LINEOKBBIPI()
    // Offset: 0x1B13504
    void LINEOKBBIPI();
    // public System.Void GLDNKLAFAAH()
    // Offset: 0x1B135A0
    void GLDNKLAFAAH();
    // public System.Void KDOGKBJHKPB()
    // Offset: 0x1B13638
    void KDOGKBJHKPB();
    // public System.Void .ctor()
    // Offset: 0x1B136D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PublicEventTriggerCollider* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PublicEventTriggerCollider::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PublicEventTriggerCollider*, creationType>()));
    }
    // public System.Void JICKNEEEADA()
    // Offset: 0x1B136EC
    void JICKNEEEADA();
    // private System.Void HBMKPPIDMIO(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1B13784
    void HBMKPPIDMIO(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void NMIPEPCHLME(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1B138A0
    void NMIPEPCHLME(::UnityEngine::Collider* GMCJEAMJJEP);
  }; // MagicalActual.PublicEventTriggerCollider
  #pragma pack(pop)
  static check_size<sizeof(PublicEventTriggerCollider), 44 + sizeof(bool)> __MagicalActual_PublicEventTriggerColliderSizeCheck;
  static_assert(sizeof(PublicEventTriggerCollider) == 0x2D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::GAJAPPDILGM
// Il2CppName: GAJAPPDILGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::GAJAPPDILGM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "GAJAPPDILGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::handleReset
// Il2CppName: handleReset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::handleReset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "handleReset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::MIGKNCENLJE
// Il2CppName: MIGKNCENLJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)(::UnityEngine::Collider*)>(&MagicalActual::PublicEventTriggerCollider::MIGKNCENLJE)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "MIGKNCENLJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::MEOEOLKJFCB
// Il2CppName: MEOEOLKJFCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::MEOEOLKJFCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "MEOEOLKJFCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::HHGDIFKFAJJ
// Il2CppName: HHGDIFKFAJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::HHGDIFKFAJJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "HHGDIFKFAJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::HGIBLJMHDKP
// Il2CppName: HGIBLJMHDKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::HGIBLJMHDKP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "HGIBLJMHDKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)(::UnityEngine::Collider*)>(&MagicalActual::PublicEventTriggerCollider::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::BADLMMPHANA
// Il2CppName: BADLMMPHANA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::BADLMMPHANA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "BADLMMPHANA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::NHIJFBIELND
// Il2CppName: NHIJFBIELND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::NHIJFBIELND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "NHIJFBIELND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::AAAFHMEFOFJ
// Il2CppName: AAAFHMEFOFJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::AAAFHMEFOFJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "AAAFHMEFOFJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::GILFDAKHKJA
// Il2CppName: GILFDAKHKJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::GILFDAKHKJA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "GILFDAKHKJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::HHHPIBFDELL
// Il2CppName: HHHPIBFDELL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::HHHPIBFDELL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "HHHPIBFDELL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::LLALLGPLCGK
// Il2CppName: LLALLGPLCGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)(::UnityEngine::Collider*)>(&MagicalActual::PublicEventTriggerCollider::LLALLGPLCGK)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "LLALLGPLCGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::NGGHKGMMJFO
// Il2CppName: NGGHKGMMJFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::NGGHKGMMJFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "NGGHKGMMJFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::GAAODDCPLLK
// Il2CppName: GAAODDCPLLK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)(::UnityEngine::Collider*)>(&MagicalActual::PublicEventTriggerCollider::GAAODDCPLLK)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "GAAODDCPLLK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::HOOMCFNEPIG
// Il2CppName: HOOMCFNEPIG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)(::UnityEngine::Collider*)>(&MagicalActual::PublicEventTriggerCollider::HOOMCFNEPIG)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "HOOMCFNEPIG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::handleTriggerSet
// Il2CppName: handleTriggerSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::handleTriggerSet)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "handleTriggerSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::NHLBHAFHHNF
// Il2CppName: NHLBHAFHHNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::NHLBHAFHHNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "NHLBHAFHHNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::LINEOKBBIPI
// Il2CppName: LINEOKBBIPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::LINEOKBBIPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "LINEOKBBIPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::GLDNKLAFAAH
// Il2CppName: GLDNKLAFAAH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::GLDNKLAFAAH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "GLDNKLAFAAH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::KDOGKBJHKPB
// Il2CppName: KDOGKBJHKPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::KDOGKBJHKPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "KDOGKBJHKPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::JICKNEEEADA
// Il2CppName: JICKNEEEADA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)()>(&MagicalActual::PublicEventTriggerCollider::JICKNEEEADA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "JICKNEEEADA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::HBMKPPIDMIO
// Il2CppName: HBMKPPIDMIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)(::UnityEngine::Collider*)>(&MagicalActual::PublicEventTriggerCollider::HBMKPPIDMIO)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "HBMKPPIDMIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PublicEventTriggerCollider::NMIPEPCHLME
// Il2CppName: NMIPEPCHLME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PublicEventTriggerCollider::*)(::UnityEngine::Collider*)>(&MagicalActual::PublicEventTriggerCollider::NMIPEPCHLME)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PublicEventTriggerCollider*), "NMIPEPCHLME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
