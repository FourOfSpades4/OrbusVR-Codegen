// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Missions
  class Missions;
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: Mission
  class Mission;
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Vendor
  class Vendor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Vendor);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Vendor*, "MagicalActual", "Vendor");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0xB2
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Vendor
  // [TokenAttribute] Offset: FFFFFFFF
  class Vendor : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::Vendor::ReputationType
    struct ReputationType;
    // Nested type: ::MagicalActual::Vendor::$doOpenVendorInventory$d__47
    class $doOpenVendorInventory$d__47;
    // Nested type: ::MagicalActual::Vendor::$doUpdateOpenVendorInventory$d__49
    class $doUpdateOpenVendorInventory$d__49;
    // Nested type: ::MagicalActual::Vendor::$$c
    class $$c;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: MagicalActual.Vendor/ReputationType
    // [TokenAttribute] Offset: FFFFFFFF
    struct ReputationType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: ReputationType
      constexpr ReputationType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MagicalActual.Vendor/ReputationType MKNGDNPNIFL
      static constexpr const int MKNGDNPNIFL = 0;
      // Get static field: static public MagicalActual.Vendor/ReputationType MKNGDNPNIFL
      static ::MagicalActual::Vendor::ReputationType _get_MKNGDNPNIFL();
      // Set static field: static public MagicalActual.Vendor/ReputationType MKNGDNPNIFL
      static void _set_MKNGDNPNIFL(::MagicalActual::Vendor::ReputationType value);
      // static field const value: static public MagicalActual.Vendor/ReputationType MFCDNJMIALF
      static constexpr const int MFCDNJMIALF = 1;
      // Get static field: static public MagicalActual.Vendor/ReputationType MFCDNJMIALF
      static ::MagicalActual::Vendor::ReputationType _get_MFCDNJMIALF();
      // Set static field: static public MagicalActual.Vendor/ReputationType MFCDNJMIALF
      static void _set_MFCDNJMIALF(::MagicalActual::Vendor::ReputationType value);
      // static field const value: static public MagicalActual.Vendor/ReputationType BJMBLAMGJLO
      static constexpr const int BJMBLAMGJLO = 2;
      // Get static field: static public MagicalActual.Vendor/ReputationType BJMBLAMGJLO
      static ::MagicalActual::Vendor::ReputationType _get_BJMBLAMGJLO();
      // Set static field: static public MagicalActual.Vendor/ReputationType BJMBLAMGJLO
      static void _set_BJMBLAMGJLO(::MagicalActual::Vendor::ReputationType value);
      // static field const value: static public MagicalActual.Vendor/ReputationType KPDICMGMJPO
      static constexpr const int KPDICMGMJPO = 3;
      // Get static field: static public MagicalActual.Vendor/ReputationType KPDICMGMJPO
      static ::MagicalActual::Vendor::ReputationType _get_KPDICMGMJPO();
      // Set static field: static public MagicalActual.Vendor/ReputationType KPDICMGMJPO
      static void _set_KPDICMGMJPO(::MagicalActual::Vendor::ReputationType value);
      // static field const value: static public MagicalActual.Vendor/ReputationType AAJMDDNICFH
      static constexpr const int AAJMDDNICFH = 4;
      // Get static field: static public MagicalActual.Vendor/ReputationType AAJMDDNICFH
      static ::MagicalActual::Vendor::ReputationType _get_AAJMDDNICFH();
      // Set static field: static public MagicalActual.Vendor/ReputationType AAJMDDNICFH
      static void _set_AAJMDDNICFH(::MagicalActual::Vendor::ReputationType value);
      // static field const value: static public MagicalActual.Vendor/ReputationType KNAFKKFBGOH
      static constexpr const int KNAFKKFBGOH = 5;
      // Get static field: static public MagicalActual.Vendor/ReputationType KNAFKKFBGOH
      static ::MagicalActual::Vendor::ReputationType _get_KNAFKKFBGOH();
      // Set static field: static public MagicalActual.Vendor/ReputationType KNAFKKFBGOH
      static void _set_KNAFKKFBGOH(::MagicalActual::Vendor::ReputationType value);
      // static field const value: static public MagicalActual.Vendor/ReputationType EFGGDPOIELF
      static constexpr const int EFGGDPOIELF = 6;
      // Get static field: static public MagicalActual.Vendor/ReputationType EFGGDPOIELF
      static ::MagicalActual::Vendor::ReputationType _get_EFGGDPOIELF();
      // Set static field: static public MagicalActual.Vendor/ReputationType EFGGDPOIELF
      static void _set_EFGGDPOIELF(::MagicalActual::Vendor::ReputationType value);
      // static field const value: static public MagicalActual.Vendor/ReputationType ICEDFHJJDAO
      static constexpr const int ICEDFHJJDAO = 7;
      // Get static field: static public MagicalActual.Vendor/ReputationType ICEDFHJJDAO
      static ::MagicalActual::Vendor::ReputationType _get_ICEDFHJJDAO();
      // Set static field: static public MagicalActual.Vendor/ReputationType ICEDFHJJDAO
      static void _set_ICEDFHJJDAO(::MagicalActual::Vendor::ReputationType value);
      // static field const value: static public MagicalActual.Vendor/ReputationType AHJKPKLPHJF
      static constexpr const int AHJKPKLPHJF = 8;
      // Get static field: static public MagicalActual.Vendor/ReputationType AHJKPKLPHJF
      static ::MagicalActual::Vendor::ReputationType _get_AHJKPKLPHJF();
      // Set static field: static public MagicalActual.Vendor/ReputationType AHJKPKLPHJF
      static void _set_AHJKPKLPHJF(::MagicalActual::Vendor::ReputationType value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // MagicalActual.Vendor/ReputationType
    #pragma pack(pop)
    static check_size<sizeof(Vendor::ReputationType), 0 + sizeof(int)> __MagicalActual_Vendor_ReputationTypeSizeCheck;
    static_assert(sizeof(Vendor::ReputationType) == 0x4);
    public:
    // [TooltipAttribute] Offset: 0xAE58E0
    // public MagicalActual.Vendor/ReputationType RepType
    // Size: 0x4
    // Offset: 0x18
    ::MagicalActual::Vendor::ReputationType RepType;
    // Field size check
    static_assert(sizeof(::MagicalActual::Vendor::ReputationType) == 0x4);
    // [TooltipAttribute] Offset: 0xAE5918
    // public System.Int32 numMissions
    // Size: 0x4
    // Offset: 0x1C
    int numMissions;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.String dialogPeek
    // Size: 0x8
    // Offset: 0x20
    ::StringW dialogPeek;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int32 DCBCIGNELLI
    // Size: 0x4
    // Offset: 0x28
    int DCBCIGNELLI;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 GMHAIFNFFIO
    // Size: 0x4
    // Offset: 0x2C
    int GMHAIFNFFIO;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private MagicalActual.Missions LNIGGBMJFEH
    // Size: 0x8
    // Offset: 0x30
    ::MagicalActual::Missions* LNIGGBMJFEH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Missions*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x38
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean offersRepair
    // Size: 0x1
    // Offset: 0x40
    bool offersRepair;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean buysItems
    // Size: 0x1
    // Offset: 0x41
    bool buysItems;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean infusesItems
    // Size: 0x1
    // Offset: 0x42
    bool infusesItems;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: infusesItems and: currencyItemId
    char __padding9[0x5] = {};
    // public System.String[] currencyItemId
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::StringW> currencyItemId;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // public System.String[] currencyItemIcon
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<::StringW> currencyItemIcon;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private System.Int32[] GOBOCELAKFL
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<int> GOBOCELAKFL;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x60
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE5950
    // private ExtUI.InventoryItemInstance[] <PBOPBMCGMNP>k__BackingField
    // Size: 0x8
    // Offset: 0x68
    ::ArrayW<::ExtUI::InventoryItemInstance*> PBOPBMCGMNP;
    // Field size check
    static_assert(sizeof(::ArrayW<::ExtUI::InventoryItemInstance*>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE5960
    // private System.Int32[] <GBHHAGAIBKJ>k__BackingField
    // Size: 0x8
    // Offset: 0x70
    ::ArrayW<int> GBHHAGAIBKJ;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE5970
    // private System.Int32[] <NIAHELPPFDF>k__BackingField
    // Size: 0x8
    // Offset: 0x78
    ::ArrayW<int> NIAHELPPFDF;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE5980
    // private System.String[] <CJGIGOJPOCP>k__BackingField
    // Size: 0x8
    // Offset: 0x80
    ::ArrayW<::StringW> CJGIGOJPOCP;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE5990
    // private System.UInt16 <HHBPELGEDMB>k__BackingField
    // Size: 0x2
    // Offset: 0x88
    uint16_t HHBPELGEDMB;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // Padding between fields: HHBPELGEDMB and: inventory
    char __padding18[0x6] = {};
    // public System.String inventory
    // Size: 0x8
    // Offset: 0x90
    ::StringW inventory;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String prices
    // Size: 0x8
    // Offset: 0x98
    ::StringW prices;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String repLevelRequirements
    // Size: 0x8
    // Offset: 0xA0
    ::StringW repLevelRequirements;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String achievementRequirements
    // Size: 0x8
    // Offset: 0xA8
    ::StringW achievementRequirements;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean pricesNeedUpdate
    // Size: 0x1
    // Offset: 0xB0
    bool pricesNeedUpdate;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean HELEHMONNAD
    // Size: 0x1
    // Offset: 0xB1
    bool HELEHMONNAD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public MagicalActual.Vendor/ReputationType RepType
    [[deprecated("Use field access instead!")]] ::MagicalActual::Vendor::ReputationType& dyn_RepType();
    // Get instance field reference: public System.Int32 numMissions
    [[deprecated("Use field access instead!")]] int& dyn_numMissions();
    // Get instance field reference: public System.String dialogPeek
    [[deprecated("Use field access instead!")]] ::StringW& dyn_dialogPeek();
    // Get instance field reference: private System.Int32 DCBCIGNELLI
    [[deprecated("Use field access instead!")]] int& dyn_DCBCIGNELLI();
    // Get instance field reference: private System.Int32 GMHAIFNFFIO
    [[deprecated("Use field access instead!")]] int& dyn_GMHAIFNFFIO();
    // Get instance field reference: private MagicalActual.Missions LNIGGBMJFEH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Missions*& dyn_LNIGGBMJFEH();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public System.Boolean offersRepair
    [[deprecated("Use field access instead!")]] bool& dyn_offersRepair();
    // Get instance field reference: public System.Boolean buysItems
    [[deprecated("Use field access instead!")]] bool& dyn_buysItems();
    // Get instance field reference: public System.Boolean infusesItems
    [[deprecated("Use field access instead!")]] bool& dyn_infusesItems();
    // Get instance field reference: public System.String[] currencyItemId
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_currencyItemId();
    // Get instance field reference: public System.String[] currencyItemIcon
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_currencyItemIcon();
    // Get instance field reference: private System.Int32[] GOBOCELAKFL
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_GOBOCELAKFL();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private ExtUI.InventoryItemInstance[] <PBOPBMCGMNP>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::InventoryItemInstance*>& dyn_$PBOPBMCGMNP$k__BackingField();
    // Get instance field reference: private System.Int32[] <GBHHAGAIBKJ>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_$GBHHAGAIBKJ$k__BackingField();
    // Get instance field reference: private System.Int32[] <NIAHELPPFDF>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_$NIAHELPPFDF$k__BackingField();
    // Get instance field reference: private System.String[] <CJGIGOJPOCP>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$CJGIGOJPOCP$k__BackingField();
    // Get instance field reference: private System.UInt16 <HHBPELGEDMB>k__BackingField
    [[deprecated("Use field access instead!")]] uint16_t& dyn_$HHBPELGEDMB$k__BackingField();
    // Get instance field reference: public System.String inventory
    [[deprecated("Use field access instead!")]] ::StringW& dyn_inventory();
    // Get instance field reference: public System.String prices
    [[deprecated("Use field access instead!")]] ::StringW& dyn_prices();
    // Get instance field reference: public System.String repLevelRequirements
    [[deprecated("Use field access instead!")]] ::StringW& dyn_repLevelRequirements();
    // Get instance field reference: public System.String achievementRequirements
    [[deprecated("Use field access instead!")]] ::StringW& dyn_achievementRequirements();
    // Get instance field reference: public System.Boolean pricesNeedUpdate
    [[deprecated("Use field access instead!")]] bool& dyn_pricesNeedUpdate();
    // Get instance field reference: private System.Boolean HELEHMONNAD
    [[deprecated("Use field access instead!")]] bool& dyn_HELEHMONNAD();
    // public System.Int32 PCDIICNCMLA()
    // Offset: 0x1A134BC
    int PCDIICNCMLA();
    // private System.Void OHJPAHMACFE(ExtUI.InventoryItemInstance[] MMMEIONJJFJ)
    // Offset: 0x1A134DC
    void OHJPAHMACFE(::ArrayW<::ExtUI::InventoryItemInstance*> MMMEIONJJFJ);
    // public System.Int32 GetReputationType()
    // Offset: 0x1A134E4
    int GetReputationType();
    // private System.Void HPDBLPHMBEC(System.Int32[] MMMEIONJJFJ)
    // Offset: 0x1A134EC
    void HPDBLPHMBEC(::ArrayW<int> MMMEIONJJFJ);
    // public System.Collections.IEnumerator doUpdateOpenVendorInventory()
    // Offset: 0x1A134F4
    ::System::Collections::IEnumerator* doUpdateOpenVendorInventory();
    // private System.Void EPGMNHOAMMD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A13594
    void EPGMNHOAMMD(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void MMBJIKNCNGM()
    // Offset: 0x1A13740
    void MMBJIKNCNGM();
    // private System.Void Start()
    // Offset: 0x1A13BF4
    void Start();
    // private System.Boolean CIKIOIBNMDK(System.String LGOLOMPFFPL, out System.Int32 DCBCIGNELLI, out System.Int32 GMHAIFNFFIO)
    // Offset: 0x1A13BF8
    bool CIKIOIBNMDK(::StringW LGOLOMPFFPL, ByRef<int> DCBCIGNELLI, ByRef<int> GMHAIFNFFIO);
    // private System.Void MNLJBGBCGGP(System.String[] MMMEIONJJFJ)
    // Offset: 0x1A13BE4
    void MNLJBGBCGGP(::ArrayW<::StringW> MMMEIONJJFJ);
    // private System.Void IFDPENCPAAB(System.Int32[] MMMEIONJJFJ)
    // Offset: 0x1A13BD4
    void IFDPENCPAAB(::ArrayW<int> MMMEIONJJFJ);
    // public System.UInt16 get_myGuid()
    // Offset: 0x1A13DC4
    uint16_t get_myGuid();
    // public System.Void ECBGHLALKKK()
    // Offset: 0x1A13DCC
    void ECBGHLALKKK();
    // public ExtUI.InventoryItemInstance[] get_myInventory()
    // Offset: 0x1A13EDC
    ::ArrayW<::ExtUI::InventoryItemInstance*> get_myInventory();
    // private System.Void NLOFBPNEFKD()
    // Offset: 0x1A13EE4
    void NLOFBPNEFKD();
    // private System.Void BICEDFIAMDD(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A13F7C
    void BICEDFIAMDD(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void HLFEKADDGMF(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A14038
    void HLFEKADDGMF(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void UpdateOpenVendorInventory()
    // Offset: 0x1A140F4
    void UpdateOpenVendorInventory();
    // public System.Int32 ABJDFMMNBMF()
    // Offset: 0x1A14120
    int ABJDFMMNBMF();
    // private System.Void PMAKLCOHHMC()
    // Offset: 0x1A14128
    void PMAKLCOHHMC();
    // private System.Void ICELMPBKPMC(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A14160
    void ICELMPBKPMC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void FixedUpdate()
    // Offset: 0x1A1421C
    void FixedUpdate();
    // public System.Void RequestCost()
    // Offset: 0x1A13630
    void RequestCost();
    // private System.Void BFMEBJDHIMA(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A14454
    void BFMEBJDHIMA(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Int32[] get_myPrices()
    // Offset: 0x1A13BCC
    ::ArrayW<int> get_myPrices();
    // private System.Void EKLGAJJNNKL(System.UInt16 MMMEIONJJFJ)
    // Offset: 0x1A144AC
    void EKLGAJJNNKL(uint16_t MMMEIONJJFJ);
    // public System.Collections.IEnumerator LOBJPLIJPNM()
    // Offset: 0x1A144B4
    ::System::Collections::IEnumerator* LOBJPLIJPNM();
    // public System.Void DJMGKHHCHCB()
    // Offset: 0x1A14528
    void DJMGKHHCHCB();
    // private System.Void FBBNAEOKEEH(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A14638
    void FBBNAEOKEEH(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Boolean JBOEILPHDAD(System.String LGOLOMPFFPL, out System.Int32 DCBCIGNELLI, out System.Int32 GMHAIFNFFIO)
    // Offset: 0x1A146F4
    bool JBOEILPHDAD(::StringW LGOLOMPFFPL, ByRef<int> DCBCIGNELLI, ByRef<int> GMHAIFNFFIO);
    // private System.Void IDGNMGHGCHH(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A148B0
    void IDGNMGHGCHH(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A1491C
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Collections.IEnumerator doOpenVendorInventory()
    // Offset: 0x1A14DB4
    ::System::Collections::IEnumerator* doOpenVendorInventory();
    // private System.Void CKKEFABIAFN(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A14E54
    void CKKEFABIAFN(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void PIAGCJOBNLH(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A14E80
    void PIAGCJOBNLH(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Int32[] get_myRepLevelRequirements()
    // Offset: 0x1A13BDC
    ::ArrayW<int> get_myRepLevelRequirements();
    // private System.Void Awake()
    // Offset: 0x1A14F3C
    void Awake();
    // public System.String[] get_myAchievementRequirements()
    // Offset: 0x1A13BEC
    ::ArrayW<::StringW> get_myAchievementRequirements();
    // public System.Void EFBPOMIPMJE()
    // Offset: 0x1A14FBC
    void EFBPOMIPMJE();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x1A14FC0
    void EIIKFEMCNKM();
    // private System.Void MFNKOGCOPDB(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A14FC4
    void MFNKOGCOPDB(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Boolean NLINFJPAFNN(System.String LGOLOMPFFPL, out System.Int32 DCBCIGNELLI, out System.Int32 GMHAIFNFFIO)
    // Offset: 0x1A15030
    bool NLINFJPAFNN(::StringW LGOLOMPFFPL, ByRef<int> DCBCIGNELLI, ByRef<int> GMHAIFNFFIO);
    // public System.Int32[] CDHGBCHBFMO()
    // Offset: 0x1A151FC
    ::ArrayW<int> CDHGBCHBFMO();
    // private System.Void JFIEOEEJALH(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A15204
    void JFIEOEEJALH(::Il2CppObject* OMLPNCLFFMJ);
    // public System.String[] OKIODIPJDPN()
    // Offset: 0x1A152C0
    ::ArrayW<::StringW> OKIODIPJDPN();
    // private System.Void EICPPAAPLGL(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A152C8
    void EICPPAAPLGL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NJJADFNJPKE(System.String[] MMMEIONJJFJ)
    // Offset: 0x1A13F74
    void NJJADFNJPKE(::ArrayW<::StringW> MMMEIONJJFJ);
    // public System.UInt16 FDGDJBPDGKB()
    // Offset: 0x1A15384
    uint16_t FDGDJBPDGKB();
    // public MagicalActual.Mission GetMission(System.Int32 FEHDKJKGNCE)
    // Offset: 0x1A1538C
    ::MagicalActual::Mission* GetMission(int FEHDKJKGNCE);
    // public System.Int32 GetNumOfMissions()
    // Offset: 0x1A153F4
    int GetNumOfMissions();
    // public System.Int32 GetReputationXpPercent()
    // Offset: 0x1A15414
    int GetReputationXpPercent();
    // private System.Void EMOOHGCMEGI(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A154D8
    void EMOOHGCMEGI(::System::Collections::ArrayList* HPEANAHIBAH);
    // public MagicalActual.Mission PNKKGJFCIKM(System.Int32 FEHDKJKGNCE)
    // Offset: 0x1A15574
    ::MagicalActual::Mission* PNKKGJFCIKM(int FEHDKJKGNCE);
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x1A155E0
    void NNDKJCJFIAK();
    // public System.Int32 GetReputationXp()
    // Offset: 0x1A155E4
    int GetReputationXp();
    // public System.Void OFDMFGNMEOP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A155EC
    void OFDMFGNMEOP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public ExtUI.InventoryItemInstance[] MMDNHBDGFJN()
    // Offset: 0x1A15A9C
    ::ArrayW<::ExtUI::InventoryItemInstance*> MMDNHBDGFJN();
    // private System.Void MDCJIPANHIE(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A15AA4
    void MDCJIPANHIE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void TriggerTab()
    // Offset: 0x1A15B60
    void TriggerTab();
    // public System.Void RequestRepair()
    // Offset: 0x1A15B98
    void RequestRepair();
    // public System.Void .ctor()
    // Offset: 0x1A15CA8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Vendor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Vendor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Vendor*, creationType>()));
    }
    // private System.Void POPGFDKGDLB(System.Int32[] MMMEIONJJFJ)
    // Offset: 0x1A13F6C
    void POPGFDKGDLB(::ArrayW<int> MMMEIONJJFJ);
    // public MagicalActual.Mission GetMission(System.String BHHGMPLHEDC)
    // Offset: 0x1A15D54
    ::MagicalActual::Mission* GetMission(::StringW BHHGMPLHEDC);
    // private System.Void PNEFHPBMBEM(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A15E90
    void PNEFHPBMBEM(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Int32 BNBCIFKKJAH()
    // Offset: 0x1A15F4C
    int BNBCIFKKJAH();
    // public System.String[] CLLKGEKDMBJ()
    // Offset: 0x1A15F54
    ::ArrayW<::StringW> CLLKGEKDMBJ();
    // public System.Int32 BJGNDAEFJHK()
    // Offset: 0x1A15F5C
    int BJGNDAEFJHK();
    // private System.Void HBNPNCPNHJA(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A15F64
    void HBNPNCPNHJA(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void ResetInventory()
    // Offset: 0x1A16020
    void ResetInventory();
    // public System.Void LECIGIHGLKG()
    // Offset: 0x1A16024
    void LECIGIHGLKG();
    // public System.Void JKLIGOFDCHJ()
    // Offset: 0x1A16050
    void JKLIGOFDCHJ();
    // public System.Int32 GetCurrentCredits()
    // Offset: 0x1A16130
    int GetCurrentCredits();
    // private System.Void BIPBBMBBAFL(System.Int32[] MMMEIONJJFJ)
    // Offset: 0x1A16150
    void BIPBBMBBAFL(::ArrayW<int> MMMEIONJJFJ);
    // public System.Void CloseVendorInventory()
    // Offset: 0x1A14378
    void CloseVendorInventory();
    // private System.Void FDILPFPJCCK()
    // Offset: 0x1A16158
    void FDILPFPJCCK();
    // public System.Int32 GetReputationRank()
    // Offset: 0x1A161D8
    int GetReputationRank();
    // public System.Void OpenVendorInventory()
    // Offset: 0x1A14480
    void OpenVendorInventory();
    // public System.Void BOHLPNPMAAG()
    // Offset: 0x1A161E0
    void BOHLPNPMAAG();
    // private System.Void JMCOCHFEAIJ(System.Int32[] MMMEIONJJFJ)
    // Offset: 0x1A13F64
    void JMCOCHFEAIJ(::ArrayW<int> MMMEIONJJFJ);
    // public System.Int32[] PMKNKMBOPMI()
    // Offset: 0x1A161E4
    ::ArrayW<int> PMKNKMBOPMI();
  }; // MagicalActual.Vendor
  #pragma pack(pop)
  static check_size<sizeof(Vendor), 177 + sizeof(bool)> __MagicalActual_VendorSizeCheck;
  static_assert(sizeof(Vendor) == 0xB2);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Vendor::ReputationType, "MagicalActual", "Vendor/ReputationType");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Vendor::PCDIICNCMLA
// Il2CppName: PCDIICNCMLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::PCDIICNCMLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "PCDIICNCMLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::OHJPAHMACFE
// Il2CppName: OHJPAHMACFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::ArrayW<::ExtUI::InventoryItemInstance*>)>(&MagicalActual::Vendor::OHJPAHMACFE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "OHJPAHMACFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::GetReputationType
// Il2CppName: GetReputationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::GetReputationType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "GetReputationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::HPDBLPHMBEC
// Il2CppName: HPDBLPHMBEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::ArrayW<int>)>(&MagicalActual::Vendor::HPDBLPHMBEC)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "HPDBLPHMBEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::doUpdateOpenVendorInventory
// Il2CppName: doUpdateOpenVendorInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::doUpdateOpenVendorInventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "doUpdateOpenVendorInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::EPGMNHOAMMD
// Il2CppName: EPGMNHOAMMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::System::Collections::ArrayList*)>(&MagicalActual::Vendor::EPGMNHOAMMD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "EPGMNHOAMMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::MMBJIKNCNGM
// Il2CppName: MMBJIKNCNGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::MMBJIKNCNGM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "MMBJIKNCNGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::CIKIOIBNMDK
// Il2CppName: CIKIOIBNMDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Vendor::*)(::StringW, ByRef<int>, ByRef<int>)>(&MagicalActual::Vendor::CIKIOIBNMDK)> {
  static const MethodInfo* get() {
    static auto* LGOLOMPFFPL = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* DCBCIGNELLI = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* GMHAIFNFFIO = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "CIKIOIBNMDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LGOLOMPFFPL, DCBCIGNELLI, GMHAIFNFFIO});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::MNLJBGBCGGP
// Il2CppName: MNLJBGBCGGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::ArrayW<::StringW>)>(&MagicalActual::Vendor::MNLJBGBCGGP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "MNLJBGBCGGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::IFDPENCPAAB
// Il2CppName: IFDPENCPAAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::ArrayW<int>)>(&MagicalActual::Vendor::IFDPENCPAAB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "IFDPENCPAAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::get_myGuid
// Il2CppName: get_myGuid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::get_myGuid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "get_myGuid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::ECBGHLALKKK
// Il2CppName: ECBGHLALKKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::ECBGHLALKKK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "ECBGHLALKKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::get_myInventory
// Il2CppName: get_myInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExtUI::InventoryItemInstance*> (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::get_myInventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "get_myInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::NLOFBPNEFKD
// Il2CppName: NLOFBPNEFKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::NLOFBPNEFKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "NLOFBPNEFKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::BICEDFIAMDD
// Il2CppName: BICEDFIAMDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::BICEDFIAMDD)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "BICEDFIAMDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::HLFEKADDGMF
// Il2CppName: HLFEKADDGMF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::HLFEKADDGMF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "HLFEKADDGMF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::UpdateOpenVendorInventory
// Il2CppName: UpdateOpenVendorInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::UpdateOpenVendorInventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "UpdateOpenVendorInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::ABJDFMMNBMF
// Il2CppName: ABJDFMMNBMF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::ABJDFMMNBMF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "ABJDFMMNBMF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::PMAKLCOHHMC
// Il2CppName: PMAKLCOHHMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::PMAKLCOHHMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "PMAKLCOHHMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::ICELMPBKPMC
// Il2CppName: ICELMPBKPMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::ICELMPBKPMC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "ICELMPBKPMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::RequestCost
// Il2CppName: RequestCost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::RequestCost)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "RequestCost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::BFMEBJDHIMA
// Il2CppName: BFMEBJDHIMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::System::Collections::ArrayList*)>(&MagicalActual::Vendor::BFMEBJDHIMA)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "BFMEBJDHIMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::get_myPrices
// Il2CppName: get_myPrices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::get_myPrices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "get_myPrices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::EKLGAJJNNKL
// Il2CppName: EKLGAJJNNKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(uint16_t)>(&MagicalActual::Vendor::EKLGAJJNNKL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "EKLGAJJNNKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::LOBJPLIJPNM
// Il2CppName: LOBJPLIJPNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::LOBJPLIJPNM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "LOBJPLIJPNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::DJMGKHHCHCB
// Il2CppName: DJMGKHHCHCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::DJMGKHHCHCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "DJMGKHHCHCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::FBBNAEOKEEH
// Il2CppName: FBBNAEOKEEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::FBBNAEOKEEH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "FBBNAEOKEEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::JBOEILPHDAD
// Il2CppName: JBOEILPHDAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Vendor::*)(::StringW, ByRef<int>, ByRef<int>)>(&MagicalActual::Vendor::JBOEILPHDAD)> {
  static const MethodInfo* get() {
    static auto* LGOLOMPFFPL = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* DCBCIGNELLI = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* GMHAIFNFFIO = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "JBOEILPHDAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LGOLOMPFFPL, DCBCIGNELLI, GMHAIFNFFIO});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::IDGNMGHGCHH
// Il2CppName: IDGNMGHGCHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::IDGNMGHGCHH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "IDGNMGHGCHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Vendor::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::doOpenVendorInventory
// Il2CppName: doOpenVendorInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::doOpenVendorInventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "doOpenVendorInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::CKKEFABIAFN
// Il2CppName: CKKEFABIAFN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::System::Collections::ArrayList*)>(&MagicalActual::Vendor::CKKEFABIAFN)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "CKKEFABIAFN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::PIAGCJOBNLH
// Il2CppName: PIAGCJOBNLH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::PIAGCJOBNLH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "PIAGCJOBNLH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::get_myRepLevelRequirements
// Il2CppName: get_myRepLevelRequirements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::get_myRepLevelRequirements)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "get_myRepLevelRequirements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::get_myAchievementRequirements
// Il2CppName: get_myAchievementRequirements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::get_myAchievementRequirements)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "get_myAchievementRequirements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::EFBPOMIPMJE
// Il2CppName: EFBPOMIPMJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::EFBPOMIPMJE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "EFBPOMIPMJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::MFNKOGCOPDB
// Il2CppName: MFNKOGCOPDB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::MFNKOGCOPDB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "MFNKOGCOPDB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::NLINFJPAFNN
// Il2CppName: NLINFJPAFNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Vendor::*)(::StringW, ByRef<int>, ByRef<int>)>(&MagicalActual::Vendor::NLINFJPAFNN)> {
  static const MethodInfo* get() {
    static auto* LGOLOMPFFPL = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* DCBCIGNELLI = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* GMHAIFNFFIO = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "NLINFJPAFNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LGOLOMPFFPL, DCBCIGNELLI, GMHAIFNFFIO});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::CDHGBCHBFMO
// Il2CppName: CDHGBCHBFMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::CDHGBCHBFMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "CDHGBCHBFMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::JFIEOEEJALH
// Il2CppName: JFIEOEEJALH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::JFIEOEEJALH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "JFIEOEEJALH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::OKIODIPJDPN
// Il2CppName: OKIODIPJDPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::OKIODIPJDPN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "OKIODIPJDPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::EICPPAAPLGL
// Il2CppName: EICPPAAPLGL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::EICPPAAPLGL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "EICPPAAPLGL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::NJJADFNJPKE
// Il2CppName: NJJADFNJPKE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::ArrayW<::StringW>)>(&MagicalActual::Vendor::NJJADFNJPKE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "NJJADFNJPKE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::FDGDJBPDGKB
// Il2CppName: FDGDJBPDGKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::FDGDJBPDGKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "FDGDJBPDGKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::GetMission
// Il2CppName: GetMission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::Mission* (MagicalActual::Vendor::*)(int)>(&MagicalActual::Vendor::GetMission)> {
  static const MethodInfo* get() {
    static auto* FEHDKJKGNCE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "GetMission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FEHDKJKGNCE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::GetNumOfMissions
// Il2CppName: GetNumOfMissions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::GetNumOfMissions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "GetNumOfMissions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::GetReputationXpPercent
// Il2CppName: GetReputationXpPercent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::GetReputationXpPercent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "GetReputationXpPercent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::EMOOHGCMEGI
// Il2CppName: EMOOHGCMEGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::System::Collections::ArrayList*)>(&MagicalActual::Vendor::EMOOHGCMEGI)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "EMOOHGCMEGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::PNKKGJFCIKM
// Il2CppName: PNKKGJFCIKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::Mission* (MagicalActual::Vendor::*)(int)>(&MagicalActual::Vendor::PNKKGJFCIKM)> {
  static const MethodInfo* get() {
    static auto* FEHDKJKGNCE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "PNKKGJFCIKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FEHDKJKGNCE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::GetReputationXp
// Il2CppName: GetReputationXp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::GetReputationXp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "GetReputationXp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::OFDMFGNMEOP
// Il2CppName: OFDMFGNMEOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Vendor::OFDMFGNMEOP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "OFDMFGNMEOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::MMDNHBDGFJN
// Il2CppName: MMDNHBDGFJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExtUI::InventoryItemInstance*> (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::MMDNHBDGFJN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "MMDNHBDGFJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::MDCJIPANHIE
// Il2CppName: MDCJIPANHIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::MDCJIPANHIE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "MDCJIPANHIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::TriggerTab
// Il2CppName: TriggerTab
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::TriggerTab)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "TriggerTab", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::RequestRepair
// Il2CppName: RequestRepair
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::RequestRepair)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "RequestRepair", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Vendor::POPGFDKGDLB
// Il2CppName: POPGFDKGDLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::ArrayW<int>)>(&MagicalActual::Vendor::POPGFDKGDLB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "POPGFDKGDLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::GetMission
// Il2CppName: GetMission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::Mission* (MagicalActual::Vendor::*)(::StringW)>(&MagicalActual::Vendor::GetMission)> {
  static const MethodInfo* get() {
    static auto* BHHGMPLHEDC = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "GetMission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHHGMPLHEDC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::PNEFHPBMBEM
// Il2CppName: PNEFHPBMBEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::PNEFHPBMBEM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "PNEFHPBMBEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::BNBCIFKKJAH
// Il2CppName: BNBCIFKKJAH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::BNBCIFKKJAH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "BNBCIFKKJAH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::CLLKGEKDMBJ
// Il2CppName: CLLKGEKDMBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::CLLKGEKDMBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "CLLKGEKDMBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::BJGNDAEFJHK
// Il2CppName: BJGNDAEFJHK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::BJGNDAEFJHK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "BJGNDAEFJHK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::HBNPNCPNHJA
// Il2CppName: HBNPNCPNHJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::Il2CppObject*)>(&MagicalActual::Vendor::HBNPNCPNHJA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "HBNPNCPNHJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::ResetInventory
// Il2CppName: ResetInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::ResetInventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "ResetInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::LECIGIHGLKG
// Il2CppName: LECIGIHGLKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::LECIGIHGLKG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "LECIGIHGLKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::JKLIGOFDCHJ
// Il2CppName: JKLIGOFDCHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::JKLIGOFDCHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "JKLIGOFDCHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::GetCurrentCredits
// Il2CppName: GetCurrentCredits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::GetCurrentCredits)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "GetCurrentCredits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::BIPBBMBBAFL
// Il2CppName: BIPBBMBBAFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::ArrayW<int>)>(&MagicalActual::Vendor::BIPBBMBBAFL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "BIPBBMBBAFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::CloseVendorInventory
// Il2CppName: CloseVendorInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::CloseVendorInventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "CloseVendorInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::FDILPFPJCCK
// Il2CppName: FDILPFPJCCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::FDILPFPJCCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "FDILPFPJCCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::GetReputationRank
// Il2CppName: GetReputationRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::GetReputationRank)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "GetReputationRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::OpenVendorInventory
// Il2CppName: OpenVendorInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::OpenVendorInventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "OpenVendorInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::BOHLPNPMAAG
// Il2CppName: BOHLPNPMAAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::BOHLPNPMAAG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "BOHLPNPMAAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::JMCOCHFEAIJ
// Il2CppName: JMCOCHFEAIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Vendor::*)(::ArrayW<int>)>(&MagicalActual::Vendor::JMCOCHFEAIJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "JMCOCHFEAIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Vendor::PMKNKMBOPMI
// Il2CppName: PMKNKMBOPMI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (MagicalActual::Vendor::*)()>(&MagicalActual::Vendor::PMKNKMBOPMI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Vendor*), "PMKNKMBOPMI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
