// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_Ogre
  class M_Ogre;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_Ogre);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_Ogre*, "MagicalActual", "M_Ogre");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_Ogre
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD59EC
  class M_Ogre : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxTankbuster
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxTankbuster;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x30
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public UnityEngine.GameObject vfxTankbuster
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxTankbuster();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x26FDBD8
    void GHLPBOJJHNG();
    // public System.Void GILLJBIMGNJ()
    // Offset: 0x26FDC30
    void GILLJBIMGNJ();
    // public System.Void JFBOMHHGFDN()
    // Offset: 0x26FDE54
    void JFBOMHHGFDN();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x26FE078
    void FNGLOIECKDG();
    // public System.Void JFFPADHAMNE()
    // Offset: 0x26FE0D0
    void JFFPADHAMNE();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x26FE2C8
    void CBMDGNKFPIO();
    // public System.Void NDADBACAPEA()
    // Offset: 0x26FE320
    void NDADBACAPEA();
    // public System.Void PHMNKLJAEMC()
    // Offset: 0x26FE518
    void PHMNKLJAEMC();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x26FE73C
    void PFABJJGAOMM();
    // public System.Void FNAJKCKMHHJ()
    // Offset: 0x26FE794
    void FNAJKCKMHHJ();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x26FE9B8
    void KPOAAAHLGLA();
    // public System.Void HKBCGNECMHL()
    // Offset: 0x26FEA10
    void HKBCGNECMHL();
    // public System.Void MKAECMFKIEN()
    // Offset: 0x26FEC08
    void MKAECMFKIEN();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x26FEE2C
    void LBIKOKCCILF();
    // public System.Void DKILGFBCKHD()
    // Offset: 0x26FEE84
    void DKILGFBCKHD();
    // public System.Void NJJLEJBAPFN()
    // Offset: 0x26FF0A8
    void NJJLEJBAPFN();
    // private System.Void Start()
    // Offset: 0x26FF2A0
    void Start();
    // public System.Void OMKBAIIIFBJ()
    // Offset: 0x26FF2F8
    void OMKBAIIIFBJ();
    // public System.Void IBMKENLAMGB()
    // Offset: 0x26FF51C
    void IBMKENLAMGB();
    // public System.Void NABGFAAGNGG()
    // Offset: 0x26FF740
    void NABGFAAGNGG();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x26FF938
    void EIIKFEMCNKM();
    // public System.Void NHHIIEHJCFA()
    // Offset: 0x26FF990
    void NHHIIEHJCFA();
    // public System.Void HJADIOCKECN()
    // Offset: 0x26FFBB4
    void HJADIOCKECN();
    // public System.Void LANOPDHLMFB()
    // Offset: 0x26FFDD8
    void LANOPDHLMFB();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x26FFFD0
    void IDOCJGNLNFL();
    // public System.Void HOHAFIOHHEN()
    // Offset: 0x2700028
    void HOHAFIOHHEN();
    // public System.Void TankBuster()
    // Offset: 0x2700220
    void TankBuster();
    // public System.Void DPJLINGPMHH()
    // Offset: 0x2700410
    void DPJLINGPMHH();
    // public System.Void EGNNAHDGLGO()
    // Offset: 0x2700608
    void EGNNAHDGLGO();
    // public System.Void .ctor()
    // Offset: 0x2700800
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_Ogre* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_Ogre::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_Ogre*, creationType>()));
    }
    // public System.Void Slash()
    // Offset: 0x2700858
    void Slash();
    // public System.Void HOLEPGLOLAJ()
    // Offset: 0x2700A70
    void HOLEPGLOLAJ();
  }; // MagicalActual.M_Ogre
  #pragma pack(pop)
  static check_size<sizeof(M_Ogre), 48 + sizeof(::StringW)> __MagicalActual_M_OgreSizeCheck;
  static_assert(sizeof(M_Ogre) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_Ogre::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::GILLJBIMGNJ
// Il2CppName: GILLJBIMGNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::GILLJBIMGNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "GILLJBIMGNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::JFBOMHHGFDN
// Il2CppName: JFBOMHHGFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::JFBOMHHGFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "JFBOMHHGFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::JFFPADHAMNE
// Il2CppName: JFFPADHAMNE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::JFFPADHAMNE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "JFFPADHAMNE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::NDADBACAPEA
// Il2CppName: NDADBACAPEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::NDADBACAPEA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "NDADBACAPEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::PHMNKLJAEMC
// Il2CppName: PHMNKLJAEMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::PHMNKLJAEMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "PHMNKLJAEMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::FNAJKCKMHHJ
// Il2CppName: FNAJKCKMHHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::FNAJKCKMHHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "FNAJKCKMHHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::HKBCGNECMHL
// Il2CppName: HKBCGNECMHL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::HKBCGNECMHL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "HKBCGNECMHL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::MKAECMFKIEN
// Il2CppName: MKAECMFKIEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::MKAECMFKIEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "MKAECMFKIEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::DKILGFBCKHD
// Il2CppName: DKILGFBCKHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::DKILGFBCKHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "DKILGFBCKHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::NJJLEJBAPFN
// Il2CppName: NJJLEJBAPFN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::NJJLEJBAPFN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "NJJLEJBAPFN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::OMKBAIIIFBJ
// Il2CppName: OMKBAIIIFBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::OMKBAIIIFBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "OMKBAIIIFBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::IBMKENLAMGB
// Il2CppName: IBMKENLAMGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::IBMKENLAMGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "IBMKENLAMGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::NABGFAAGNGG
// Il2CppName: NABGFAAGNGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::NABGFAAGNGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "NABGFAAGNGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::NHHIIEHJCFA
// Il2CppName: NHHIIEHJCFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::NHHIIEHJCFA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "NHHIIEHJCFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::HJADIOCKECN
// Il2CppName: HJADIOCKECN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::HJADIOCKECN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "HJADIOCKECN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::LANOPDHLMFB
// Il2CppName: LANOPDHLMFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::LANOPDHLMFB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "LANOPDHLMFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::HOHAFIOHHEN
// Il2CppName: HOHAFIOHHEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::HOHAFIOHHEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "HOHAFIOHHEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::TankBuster
// Il2CppName: TankBuster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::TankBuster)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "TankBuster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::DPJLINGPMHH
// Il2CppName: DPJLINGPMHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::DPJLINGPMHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "DPJLINGPMHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::EGNNAHDGLGO
// Il2CppName: EGNNAHDGLGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::EGNNAHDGLGO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "EGNNAHDGLGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_Ogre::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ogre::HOLEPGLOLAJ
// Il2CppName: HOLEPGLOLAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ogre::*)()>(&MagicalActual::M_Ogre::HOLEPGLOLAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ogre*), "HOLEPGLOLAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
