// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MagicalActual.Shaman
#include "MagicalActual/Shaman.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Shaman::arrowSpellIdx, "MagicalActual", "Shaman/arrowSpellIdx");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Shaman/arrowSpellIdx
  // [TokenAttribute] Offset: FFFFFFFF
  struct Shaman::arrowSpellIdx/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: arrowSpellIdx
    constexpr arrowSpellIdx(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public MagicalActual.Shaman/arrowSpellIdx KAEMNGJLMMH
    static constexpr const int KAEMNGJLMMH = 1;
    // Get static field: static public MagicalActual.Shaman/arrowSpellIdx KAEMNGJLMMH
    static ::MagicalActual::Shaman::arrowSpellIdx _get_KAEMNGJLMMH();
    // Set static field: static public MagicalActual.Shaman/arrowSpellIdx KAEMNGJLMMH
    static void _set_KAEMNGJLMMH(::MagicalActual::Shaman::arrowSpellIdx value);
    // static field const value: static public MagicalActual.Shaman/arrowSpellIdx LNICHKCLDDN
    static constexpr const int LNICHKCLDDN = 2;
    // Get static field: static public MagicalActual.Shaman/arrowSpellIdx LNICHKCLDDN
    static ::MagicalActual::Shaman::arrowSpellIdx _get_LNICHKCLDDN();
    // Set static field: static public MagicalActual.Shaman/arrowSpellIdx LNICHKCLDDN
    static void _set_LNICHKCLDDN(::MagicalActual::Shaman::arrowSpellIdx value);
    // static field const value: static public MagicalActual.Shaman/arrowSpellIdx BGEMBKIDAPM
    static constexpr const int BGEMBKIDAPM = 3;
    // Get static field: static public MagicalActual.Shaman/arrowSpellIdx BGEMBKIDAPM
    static ::MagicalActual::Shaman::arrowSpellIdx _get_BGEMBKIDAPM();
    // Set static field: static public MagicalActual.Shaman/arrowSpellIdx BGEMBKIDAPM
    static void _set_BGEMBKIDAPM(::MagicalActual::Shaman::arrowSpellIdx value);
    // static field const value: static public MagicalActual.Shaman/arrowSpellIdx FIINBANEDND
    static constexpr const int FIINBANEDND = 4;
    // Get static field: static public MagicalActual.Shaman/arrowSpellIdx FIINBANEDND
    static ::MagicalActual::Shaman::arrowSpellIdx _get_FIINBANEDND();
    // Set static field: static public MagicalActual.Shaman/arrowSpellIdx FIINBANEDND
    static void _set_FIINBANEDND(::MagicalActual::Shaman::arrowSpellIdx value);
    // static field const value: static public MagicalActual.Shaman/arrowSpellIdx GJFAANHBKHO
    static constexpr const int GJFAANHBKHO = 5;
    // Get static field: static public MagicalActual.Shaman/arrowSpellIdx GJFAANHBKHO
    static ::MagicalActual::Shaman::arrowSpellIdx _get_GJFAANHBKHO();
    // Set static field: static public MagicalActual.Shaman/arrowSpellIdx GJFAANHBKHO
    static void _set_GJFAANHBKHO(::MagicalActual::Shaman::arrowSpellIdx value);
    // static field const value: static public MagicalActual.Shaman/arrowSpellIdx NPHMGKHCPKD
    static constexpr const int NPHMGKHCPKD = 6;
    // Get static field: static public MagicalActual.Shaman/arrowSpellIdx NPHMGKHCPKD
    static ::MagicalActual::Shaman::arrowSpellIdx _get_NPHMGKHCPKD();
    // Set static field: static public MagicalActual.Shaman/arrowSpellIdx NPHMGKHCPKD
    static void _set_NPHMGKHCPKD(::MagicalActual::Shaman::arrowSpellIdx value);
    // static field const value: static public MagicalActual.Shaman/arrowSpellIdx OMHDHIMOKLH
    static constexpr const int OMHDHIMOKLH = 7;
    // Get static field: static public MagicalActual.Shaman/arrowSpellIdx OMHDHIMOKLH
    static ::MagicalActual::Shaman::arrowSpellIdx _get_OMHDHIMOKLH();
    // Set static field: static public MagicalActual.Shaman/arrowSpellIdx OMHDHIMOKLH
    static void _set_OMHDHIMOKLH(::MagicalActual::Shaman::arrowSpellIdx value);
    // static field const value: static public MagicalActual.Shaman/arrowSpellIdx ECHHLACDICH
    static constexpr const int ECHHLACDICH = 99;
    // Get static field: static public MagicalActual.Shaman/arrowSpellIdx ECHHLACDICH
    static ::MagicalActual::Shaman::arrowSpellIdx _get_ECHHLACDICH();
    // Set static field: static public MagicalActual.Shaman/arrowSpellIdx ECHHLACDICH
    static void _set_ECHHLACDICH(::MagicalActual::Shaman::arrowSpellIdx value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // MagicalActual.Shaman/arrowSpellIdx
  #pragma pack(pop)
  static check_size<sizeof(Shaman::arrowSpellIdx), 0 + sizeof(int)> __MagicalActual_Shaman_arrowSpellIdxSizeCheck;
  static_assert(sizeof(Shaman::arrowSpellIdx) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
