// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Rigidbody
  class Rigidbody;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ShamanSpawnedTotem
  class ShamanSpawnedTotem;
  // Forward declaring type: Grabber
  class Grabber;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PhysicsInteractable
  class PhysicsInteractable;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ShamanMissile
  class ShamanMissile;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ShamanMissile);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ShamanMissile*, "MagicalActual", "ShamanMissile");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ShamanMissile
  // [TokenAttribute] Offset: FFFFFFFF
  class ShamanMissile : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.Collider[] JGOGJDHABHN
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::UnityEngine::Collider*> JGOGJDHABHN;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // public System.Boolean isThrown
    // Size: 0x1
    // Offset: 0x20
    bool isThrown;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean isSummoning
    // Size: 0x1
    // Offset: 0x21
    bool isSummoning;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isSummoning and: myTotem
    char __padding2[0x6] = {};
    // public MagicalActual.ShamanSpawnedTotem myTotem
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::ShamanSpawnedTotem* myTotem;
    // Field size check
    static_assert(sizeof(::MagicalActual::ShamanSpawnedTotem*) == 0x8);
    // public UnityEngine.Rigidbody myRigidbody
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Rigidbody* myRigidbody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // public UnityEngine.Vector3 summonVelocity
    // Size: 0xC
    // Offset: 0x38
    ::UnityEngine::Vector3 summonVelocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: summonVelocity and: myPhysicsInteractable
    char __padding5[0x4] = {};
    // public PhysicsInteractable myPhysicsInteractable
    // Size: 0x8
    // Offset: 0x48
    ::GlobalNamespace::PhysicsInteractable* myPhysicsInteractable;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PhysicsInteractable*) == 0x8);
    // public System.Boolean checkedTalent31
    // Size: 0x1
    // Offset: 0x50
    bool checkedTalent31;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: checkedTalent31 and: FCDNLCMGDPC
    char __padding7[0x3] = {};
    // private System.Single FCDNLCMGDPC
    // Size: 0x4
    // Offset: 0x54
    float FCDNLCMGDPC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Collider[] JGOGJDHABHN
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_JGOGJDHABHN();
    // Get instance field reference: public System.Boolean isThrown
    [[deprecated("Use field access instead!")]] bool& dyn_isThrown();
    // Get instance field reference: public System.Boolean isSummoning
    [[deprecated("Use field access instead!")]] bool& dyn_isSummoning();
    // Get instance field reference: public MagicalActual.ShamanSpawnedTotem myTotem
    [[deprecated("Use field access instead!")]] ::MagicalActual::ShamanSpawnedTotem*& dyn_myTotem();
    // Get instance field reference: public UnityEngine.Rigidbody myRigidbody
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_myRigidbody();
    // Get instance field reference: public UnityEngine.Vector3 summonVelocity
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_summonVelocity();
    // Get instance field reference: public PhysicsInteractable myPhysicsInteractable
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PhysicsInteractable*& dyn_myPhysicsInteractable();
    // Get instance field reference: public System.Boolean checkedTalent31
    [[deprecated("Use field access instead!")]] bool& dyn_checkedTalent31();
    // Get instance field reference: private System.Single FCDNLCMGDPC
    [[deprecated("Use field access instead!")]] float& dyn_FCDNLCMGDPC();
    // public System.Void COINGAJJJCP()
    // Offset: 0x1BE54C8
    void COINGAJJJCP();
    // private System.Void JNELNIGPBIM()
    // Offset: 0x1BE57FC
    void JNELNIGPBIM();
    // public System.Void .ctor()
    // Offset: 0x1BE5870
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ShamanMissile* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ShamanMissile::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ShamanMissile*, creationType>()));
    }
    // public System.Void FJGIFGPLPFI(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BE58D0
    void FJGIFGPLPFI(::MagicalActual::Grabber* BALIAOKIHIC);
    // public System.Void NPHEOMEHPIM()
    // Offset: 0x1BE591C
    void NPHEOMEHPIM();
    // private System.Void NAPGGGFOEKO()
    // Offset: 0x1BE5A30
    void NAPGGGFOEKO();
    // public System.Void PhysicsInteractableGrip(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BE6780
    void PhysicsInteractableGrip(::MagicalActual::Grabber* BALIAOKIHIC);
    // public System.Void ABDLNOBADLF(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BE678C
    void ABDLNOBADLF(::MagicalActual::Grabber* BALIAOKIHIC);
    // public System.Void MKCJJBBFBLC()
    // Offset: 0x1BE6584
    void MKCJJBBFBLC();
    // private System.Void HHKOFMNJKDA()
    // Offset: 0x1BE6888
    void HHKOFMNJKDA();
    // private System.Void LACFBAIDCBK()
    // Offset: 0x1BE7574
    void LACFBAIDCBK();
    // private System.Void DidThrow(MagicalActual.Grabber MAHOOEEBEJF)
    // Offset: 0x1BE75EC
    void DidThrow(::MagicalActual::Grabber* MAHOOEEBEJF);
    // public System.Void PAECDGJCLBE()
    // Offset: 0x1BE6D84
    void PAECDGJCLBE();
    // public System.Void HDPMLPGDBMP()
    // Offset: 0x1BE7374
    void HDPMLPGDBMP();
    // public System.Void GFHFCGIBIEE(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BE7B3C
    void GFHFCGIBIEE(::MagicalActual::Grabber* BALIAOKIHIC);
    // public System.Void MBAKDOGINOE()
    // Offset: 0x1BE7B44
    void MBAKDOGINOE();
    // private System.Void BIMCNDAFFJC()
    // Offset: 0x1BE7D44
    void BIMCNDAFFJC();
    // public System.Void HACOEEODKGI()
    // Offset: 0x1BE8474
    void HACOEEODKGI();
    // public System.Void PhysicsInteractableUngrip(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BE8588
    void PhysicsInteractableUngrip(::MagicalActual::Grabber* BALIAOKIHIC);
    // public System.Void ALEGNMLPLKG(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BE85CC
    void ALEGNMLPLKG(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void Awake()
    // Offset: 0x1BE8614
    void Awake();
    // public System.Void EMEFKDKEBNA(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BE8688
    void EMEFKDKEBNA(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void OKCGDOEIOGA()
    // Offset: 0x1BE86CC
    void OKCGDOEIOGA();
    // public System.Void DIFLEMCKKEJ(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BE8744
    void DIFLEMCKKEJ(::MagicalActual::Grabber* BALIAOKIHIC);
    // public System.Void DidThrowFromSummon()
    // Offset: 0x1BE8750
    void DidThrowFromSummon();
    // public System.Void ResetMissile()
    // Offset: 0x1BE7180
    void ResetMissile();
    // public System.Void MNJKCIJKKJI()
    // Offset: 0x1BE6028
    void MNJKCIJKKJI();
    // public System.Void CLOPGNINHID()
    // Offset: 0x1BE8860
    void CLOPGNINHID();
    // public System.Void PLFNODFICFD()
    // Offset: 0x1BE8974
    void PLFNODFICFD();
    // public System.Void HBPFIMCLJMJ()
    // Offset: 0x1BE6F80
    void HBPFIMCLJMJ();
    // private System.Void JPHNAIDIBKL()
    // Offset: 0x1BE8A88
    void JPHNAIDIBKL();
    // private System.Void IPNPHODDGPH(MagicalActual.Grabber MAHOOEEBEJF)
    // Offset: 0x1BE8F78
    void IPNPHODDGPH(::MagicalActual::Grabber* MAHOOEEBEJF);
    // public System.Void JADAHEPHEHG(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BE91C4
    void JADAHEPHEHG(::MagicalActual::Grabber* BALIAOKIHIC);
    // public System.Void FLKOOACNLGP()
    // Offset: 0x1BE920C
    void FLKOOACNLGP();
    // private System.Void JPHEBENNLCB()
    // Offset: 0x1BE932C
    void JPHEBENNLCB();
    // public System.Void GGMFHLDGDGM()
    // Offset: 0x1BE9824
    void GGMFHLDGDGM();
    // public System.Void MMLOOJFPFFP()
    // Offset: 0x1BE8274
    void MMLOOJFPFFP();
    // public System.Void JDNPFOIOCJJ(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BE9A20
    void JDNPFOIOCJJ(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void FixedUpdate()
    // Offset: 0x1BE9A64
    void FixedUpdate();
    // public System.Void OHIKLAKAPHA()
    // Offset: 0x1BE6388
    void OHIKLAKAPHA();
    // private System.Void MCMIGFAFMAI(MagicalActual.Grabber MAHOOEEBEJF)
    // Offset: 0x1BE9F78
    void MCMIGFAFMAI(::MagicalActual::Grabber* MAHOOEEBEJF);
    // private System.Void JMPPPHNKAFG()
    // Offset: 0x1BEA1C4
    void JMPPPHNKAFG();
    // public System.Void AGAEICIFBAN(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BEA238
    void AGAEICIFBAN(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void IAMHAELCKHH()
    // Offset: 0x1BEA244
    void IAMHAELCKHH();
    // public System.Void BLPAEBLJMIL(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1BEA2BC
    void BLPAEBLJMIL(::MagicalActual::Grabber* BALIAOKIHIC);
  }; // MagicalActual.ShamanMissile
  #pragma pack(pop)
  static check_size<sizeof(ShamanMissile), 84 + sizeof(float)> __MagicalActual_ShamanMissileSizeCheck;
  static_assert(sizeof(ShamanMissile) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::COINGAJJJCP
// Il2CppName: COINGAJJJCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::COINGAJJJCP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "COINGAJJJCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::JNELNIGPBIM
// Il2CppName: JNELNIGPBIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::JNELNIGPBIM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "JNELNIGPBIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::FJGIFGPLPFI
// Il2CppName: FJGIFGPLPFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::FJGIFGPLPFI)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "FJGIFGPLPFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::NPHEOMEHPIM
// Il2CppName: NPHEOMEHPIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::NPHEOMEHPIM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "NPHEOMEHPIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::NAPGGGFOEKO
// Il2CppName: NAPGGGFOEKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::NAPGGGFOEKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "NAPGGGFOEKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::PhysicsInteractableGrip
// Il2CppName: PhysicsInteractableGrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::PhysicsInteractableGrip)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "PhysicsInteractableGrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::ABDLNOBADLF
// Il2CppName: ABDLNOBADLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::ABDLNOBADLF)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "ABDLNOBADLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::MKCJJBBFBLC
// Il2CppName: MKCJJBBFBLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::MKCJJBBFBLC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "MKCJJBBFBLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::HHKOFMNJKDA
// Il2CppName: HHKOFMNJKDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::HHKOFMNJKDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "HHKOFMNJKDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::LACFBAIDCBK
// Il2CppName: LACFBAIDCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::LACFBAIDCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "LACFBAIDCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::DidThrow
// Il2CppName: DidThrow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::DidThrow)> {
  static const MethodInfo* get() {
    static auto* MAHOOEEBEJF = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "DidThrow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MAHOOEEBEJF});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::PAECDGJCLBE
// Il2CppName: PAECDGJCLBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::PAECDGJCLBE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "PAECDGJCLBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::HDPMLPGDBMP
// Il2CppName: HDPMLPGDBMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::HDPMLPGDBMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "HDPMLPGDBMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::GFHFCGIBIEE
// Il2CppName: GFHFCGIBIEE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::GFHFCGIBIEE)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "GFHFCGIBIEE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::MBAKDOGINOE
// Il2CppName: MBAKDOGINOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::MBAKDOGINOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "MBAKDOGINOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::BIMCNDAFFJC
// Il2CppName: BIMCNDAFFJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::BIMCNDAFFJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "BIMCNDAFFJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::HACOEEODKGI
// Il2CppName: HACOEEODKGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::HACOEEODKGI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "HACOEEODKGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::PhysicsInteractableUngrip
// Il2CppName: PhysicsInteractableUngrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::PhysicsInteractableUngrip)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "PhysicsInteractableUngrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::ALEGNMLPLKG
// Il2CppName: ALEGNMLPLKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::ALEGNMLPLKG)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "ALEGNMLPLKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::EMEFKDKEBNA
// Il2CppName: EMEFKDKEBNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::EMEFKDKEBNA)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "EMEFKDKEBNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::OKCGDOEIOGA
// Il2CppName: OKCGDOEIOGA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::OKCGDOEIOGA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "OKCGDOEIOGA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::DIFLEMCKKEJ
// Il2CppName: DIFLEMCKKEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::DIFLEMCKKEJ)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "DIFLEMCKKEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::DidThrowFromSummon
// Il2CppName: DidThrowFromSummon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::DidThrowFromSummon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "DidThrowFromSummon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::ResetMissile
// Il2CppName: ResetMissile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::ResetMissile)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "ResetMissile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::MNJKCIJKKJI
// Il2CppName: MNJKCIJKKJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::MNJKCIJKKJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "MNJKCIJKKJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::CLOPGNINHID
// Il2CppName: CLOPGNINHID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::CLOPGNINHID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "CLOPGNINHID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::PLFNODFICFD
// Il2CppName: PLFNODFICFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::PLFNODFICFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "PLFNODFICFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::HBPFIMCLJMJ
// Il2CppName: HBPFIMCLJMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::HBPFIMCLJMJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "HBPFIMCLJMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::JPHNAIDIBKL
// Il2CppName: JPHNAIDIBKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::JPHNAIDIBKL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "JPHNAIDIBKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::IPNPHODDGPH
// Il2CppName: IPNPHODDGPH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::IPNPHODDGPH)> {
  static const MethodInfo* get() {
    static auto* MAHOOEEBEJF = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "IPNPHODDGPH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MAHOOEEBEJF});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::JADAHEPHEHG
// Il2CppName: JADAHEPHEHG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::JADAHEPHEHG)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "JADAHEPHEHG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::FLKOOACNLGP
// Il2CppName: FLKOOACNLGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::FLKOOACNLGP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "FLKOOACNLGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::JPHEBENNLCB
// Il2CppName: JPHEBENNLCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::JPHEBENNLCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "JPHEBENNLCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::GGMFHLDGDGM
// Il2CppName: GGMFHLDGDGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::GGMFHLDGDGM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "GGMFHLDGDGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::MMLOOJFPFFP
// Il2CppName: MMLOOJFPFFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::MMLOOJFPFFP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "MMLOOJFPFFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::JDNPFOIOCJJ
// Il2CppName: JDNPFOIOCJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::JDNPFOIOCJJ)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "JDNPFOIOCJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::OHIKLAKAPHA
// Il2CppName: OHIKLAKAPHA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::OHIKLAKAPHA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "OHIKLAKAPHA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::MCMIGFAFMAI
// Il2CppName: MCMIGFAFMAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::MCMIGFAFMAI)> {
  static const MethodInfo* get() {
    static auto* MAHOOEEBEJF = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "MCMIGFAFMAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MAHOOEEBEJF});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::JMPPPHNKAFG
// Il2CppName: JMPPPHNKAFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::JMPPPHNKAFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "JMPPPHNKAFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::AGAEICIFBAN
// Il2CppName: AGAEICIFBAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::AGAEICIFBAN)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "AGAEICIFBAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::IAMHAELCKHH
// Il2CppName: IAMHAELCKHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)()>(&MagicalActual::ShamanMissile::IAMHAELCKHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "IAMHAELCKHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanMissile::BLPAEBLJMIL
// Il2CppName: BLPAEBLJMIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanMissile::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanMissile::BLPAEBLJMIL)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanMissile*), "BLPAEBLJMIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
