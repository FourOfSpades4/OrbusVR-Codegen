// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: VREventSystem
  class VREventSystem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::VREventSystem);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::VREventSystem*, "MagicalActual", "VREventSystem");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.VREventSystem
  // [TokenAttribute] Offset: FFFFFFFF
  class VREventSystem : public ::UnityEngine::EventSystems::EventSystem {
    public:
    // protected System.Void BNNCHAGOLMK(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A133D8
    void BNNCHAGOLMK(bool OKLOCMCGOJO);
    // protected System.Void EHBBNDDCJOI(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A133DC
    void EHBBNDDCJOI(bool OKLOCMCGOJO);
    // protected System.Void BEEAPMFFNCH(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A133E0
    void BEEAPMFFNCH(bool OKLOCMCGOJO);
    // protected System.Void HDEEILLMGNL(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A133E4
    void HDEEILLMGNL(bool OKLOCMCGOJO);
    // protected System.Void FKCOKEENGDG(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A133E8
    void FKCOKEENGDG(bool OKLOCMCGOJO);
    // protected System.Void IALPAIECKDD(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A133EC
    void IALPAIECKDD(bool OKLOCMCGOJO);
    // protected System.Void GFEEFKIPLBE(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A133F0
    void GFEEFKIPLBE(bool OKLOCMCGOJO);
    // protected System.Void BKGOFJEBDNE(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A133F4
    void BKGOFJEBDNE(bool OKLOCMCGOJO);
    // protected System.Void ABGCEECIFKB(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A133F8
    void ABGCEECIFKB(bool OKLOCMCGOJO);
    // protected System.Void JMCEOCHMEFN(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A133FC
    void JMCEOCHMEFN(bool OKLOCMCGOJO);
    // protected System.Void JOJPBNKHAPK(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13400
    void JOJPBNKHAPK(bool OKLOCMCGOJO);
    // protected System.Void HOLGPGEMIAH(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13404
    void HOLGPGEMIAH(bool OKLOCMCGOJO);
    // protected System.Void NMHDOLLELGM(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13408
    void NMHDOLLELGM(bool OKLOCMCGOJO);
    // protected System.Void HGNAPGNPCCJ(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A1340C
    void HGNAPGNPCCJ(bool OKLOCMCGOJO);
    // protected System.Void NJKJBPKMJFP(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13410
    void NJKJBPKMJFP(bool OKLOCMCGOJO);
    // protected System.Void FCECIJLFINL(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13414
    void FCECIJLFINL(bool OKLOCMCGOJO);
    // protected System.Void FMIAFAOBKJL(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13418
    void FMIAFAOBKJL(bool OKLOCMCGOJO);
    // protected System.Void EJBGLCDLEFB(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A1341C
    void EJBGLCDLEFB(bool OKLOCMCGOJO);
    // protected System.Void ADOFKMKPKEO(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13420
    void ADOFKMKPKEO(bool OKLOCMCGOJO);
    // protected System.Void CPOOODMIIJI(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13428
    void CPOOODMIIJI(bool OKLOCMCGOJO);
    // protected System.Void OOCDBKBGAOB(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A1342C
    void OOCDBKBGAOB(bool OKLOCMCGOJO);
    // protected System.Void OCLAKLMACOA(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13430
    void OCLAKLMACOA(bool OKLOCMCGOJO);
    // protected System.Void MFAHJBDPLMA(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13434
    void MFAHJBDPLMA(bool OKLOCMCGOJO);
    // protected System.Void HDIEIONNJAA(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13438
    void HDIEIONNJAA(bool OKLOCMCGOJO);
    // public System.Void .ctor()
    // Offset: 0x1A1343C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VREventSystem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::VREventSystem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VREventSystem*, creationType>()));
    }
    // protected System.Void PMOLJAJFGFN(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A134A4
    void PMOLJAJFGFN(bool OKLOCMCGOJO);
    // protected System.Void DLNKCDCEELC(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A134A8
    void DLNKCDCEELC(bool OKLOCMCGOJO);
    // protected System.Void KAFDMAKODFH(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A134AC
    void KAFDMAKODFH(bool OKLOCMCGOJO);
    // protected System.Void GKNMLCELMII(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A134B0
    void GKNMLCELMII(bool OKLOCMCGOJO);
    // protected System.Void NMENCJBNGPH(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A134B4
    void NMENCJBNGPH(bool OKLOCMCGOJO);
    // protected System.Void FOIDBLAINGD(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A134B8
    void FOIDBLAINGD(bool OKLOCMCGOJO);
    // protected override System.Void OnApplicationFocus(System.Boolean OKLOCMCGOJO)
    // Offset: 0x1A13424
    // Implemented from: UnityEngine.EventSystems.EventSystem
    // Base method: System.Void EventSystem::OnApplicationFocus(System.Boolean OKLOCMCGOJO)
    void OnApplicationFocus(bool OKLOCMCGOJO);
  }; // MagicalActual.VREventSystem
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::VREventSystem::BNNCHAGOLMK
// Il2CppName: BNNCHAGOLMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::BNNCHAGOLMK)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "BNNCHAGOLMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::EHBBNDDCJOI
// Il2CppName: EHBBNDDCJOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::EHBBNDDCJOI)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "EHBBNDDCJOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::BEEAPMFFNCH
// Il2CppName: BEEAPMFFNCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::BEEAPMFFNCH)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "BEEAPMFFNCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::HDEEILLMGNL
// Il2CppName: HDEEILLMGNL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::HDEEILLMGNL)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "HDEEILLMGNL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::FKCOKEENGDG
// Il2CppName: FKCOKEENGDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::FKCOKEENGDG)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "FKCOKEENGDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::IALPAIECKDD
// Il2CppName: IALPAIECKDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::IALPAIECKDD)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "IALPAIECKDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::GFEEFKIPLBE
// Il2CppName: GFEEFKIPLBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::GFEEFKIPLBE)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "GFEEFKIPLBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::BKGOFJEBDNE
// Il2CppName: BKGOFJEBDNE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::BKGOFJEBDNE)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "BKGOFJEBDNE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::ABGCEECIFKB
// Il2CppName: ABGCEECIFKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::ABGCEECIFKB)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "ABGCEECIFKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::JMCEOCHMEFN
// Il2CppName: JMCEOCHMEFN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::JMCEOCHMEFN)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "JMCEOCHMEFN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::JOJPBNKHAPK
// Il2CppName: JOJPBNKHAPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::JOJPBNKHAPK)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "JOJPBNKHAPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::HOLGPGEMIAH
// Il2CppName: HOLGPGEMIAH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::HOLGPGEMIAH)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "HOLGPGEMIAH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::NMHDOLLELGM
// Il2CppName: NMHDOLLELGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::NMHDOLLELGM)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "NMHDOLLELGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::HGNAPGNPCCJ
// Il2CppName: HGNAPGNPCCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::HGNAPGNPCCJ)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "HGNAPGNPCCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::NJKJBPKMJFP
// Il2CppName: NJKJBPKMJFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::NJKJBPKMJFP)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "NJKJBPKMJFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::FCECIJLFINL
// Il2CppName: FCECIJLFINL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::FCECIJLFINL)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "FCECIJLFINL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::FMIAFAOBKJL
// Il2CppName: FMIAFAOBKJL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::FMIAFAOBKJL)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "FMIAFAOBKJL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::EJBGLCDLEFB
// Il2CppName: EJBGLCDLEFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::EJBGLCDLEFB)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "EJBGLCDLEFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::ADOFKMKPKEO
// Il2CppName: ADOFKMKPKEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::ADOFKMKPKEO)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "ADOFKMKPKEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::CPOOODMIIJI
// Il2CppName: CPOOODMIIJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::CPOOODMIIJI)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "CPOOODMIIJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::OOCDBKBGAOB
// Il2CppName: OOCDBKBGAOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::OOCDBKBGAOB)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "OOCDBKBGAOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::OCLAKLMACOA
// Il2CppName: OCLAKLMACOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::OCLAKLMACOA)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "OCLAKLMACOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::MFAHJBDPLMA
// Il2CppName: MFAHJBDPLMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::MFAHJBDPLMA)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "MFAHJBDPLMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::HDIEIONNJAA
// Il2CppName: HDIEIONNJAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::HDIEIONNJAA)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "HDIEIONNJAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::VREventSystem::PMOLJAJFGFN
// Il2CppName: PMOLJAJFGFN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::PMOLJAJFGFN)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "PMOLJAJFGFN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::DLNKCDCEELC
// Il2CppName: DLNKCDCEELC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::DLNKCDCEELC)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "DLNKCDCEELC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::KAFDMAKODFH
// Il2CppName: KAFDMAKODFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::KAFDMAKODFH)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "KAFDMAKODFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::GKNMLCELMII
// Il2CppName: GKNMLCELMII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::GKNMLCELMII)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "GKNMLCELMII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::NMENCJBNGPH
// Il2CppName: NMENCJBNGPH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::NMENCJBNGPH)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "NMENCJBNGPH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::FOIDBLAINGD
// Il2CppName: FOIDBLAINGD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::FOIDBLAINGD)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "FOIDBLAINGD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
// Writing MetadataGetter for method: MagicalActual::VREventSystem::OnApplicationFocus
// Il2CppName: OnApplicationFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::VREventSystem::*)(bool)>(&MagicalActual::VREventSystem::OnApplicationFocus)> {
  static const MethodInfo* get() {
    static auto* OKLOCMCGOJO = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::VREventSystem*), "OnApplicationFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OKLOCMCGOJO});
  }
};
