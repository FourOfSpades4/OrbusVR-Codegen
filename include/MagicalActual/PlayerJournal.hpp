// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ReadableBook
  class ReadableBook;
  // Forward declaring type: JournalButton
  class JournalButton;
  // Forward declaring type: JournalPages
  class JournalPages;
  // Forward declaring type: Grabber
  class Grabber;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerJournal
  class PlayerJournal;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PlayerJournal);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PlayerJournal*, "MagicalActual", "PlayerJournal");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x61
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PlayerJournal
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayerJournal : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // [CompilerGeneratedAttribute] Offset: 0xAE4BA8
    // private MagicalActual.ReadableBook <ONPMLIFBKDJ>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::ReadableBook* ONPMLIFBKDJ;
    // Field size check
    static_assert(sizeof(::MagicalActual::ReadableBook*) == 0x8);
    // private System.Boolean NJPCBIGJIAI
    // Size: 0x1
    // Offset: 0x20
    bool NJPCBIGJIAI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: NJPCBIGJIAI and: KIEBOFHNHOI
    char __padding1[0x7] = {};
    // private System.String KIEBOFHNHOI
    // Size: 0x8
    // Offset: 0x28
    ::StringW KIEBOFHNHOI;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String ICLJLILHCFB
    // Size: 0x8
    // Offset: 0x30
    ::StringW ICLJLILHCFB;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean isOpen
    // Size: 0x1
    // Offset: 0x38
    bool isOpen;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean FIKMEGAJPFO
    // Size: 0x1
    // Offset: 0x39
    bool FIKMEGAJPFO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: FIKMEGAJPFO and: JGOGJDHABHN
    char __padding5[0x6] = {};
    // private UnityEngine.Collider[] JGOGJDHABHN
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::UnityEngine::Collider*> JGOGJDHABHN;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // private UnityEngine.GameObject IJLNDPNACFG
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* IJLNDPNACFG;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Collections.Generic.List`1<MagicalActual.JournalButton> bookmarkButtons
    // Size: 0x8
    // Offset: 0x50
    ::System::Collections::Generic::List_1<::MagicalActual::JournalButton*>* bookmarkButtons;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::MagicalActual::JournalButton*>*) == 0x8);
    // private System.Int32[] HOEHCOJENIB
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<int> HOEHCOJENIB;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // public System.Boolean intitialLogin
    // Size: 0x1
    // Offset: 0x60
    bool intitialLogin;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.ReadableBook <ONPMLIFBKDJ>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::ReadableBook*& dyn_$ONPMLIFBKDJ$k__BackingField();
    // Get instance field reference: private System.Boolean NJPCBIGJIAI
    [[deprecated("Use field access instead!")]] bool& dyn_NJPCBIGJIAI();
    // Get instance field reference: private System.String KIEBOFHNHOI
    [[deprecated("Use field access instead!")]] ::StringW& dyn_KIEBOFHNHOI();
    // Get instance field reference: private System.String ICLJLILHCFB
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ICLJLILHCFB();
    // Get instance field reference: public System.Boolean isOpen
    [[deprecated("Use field access instead!")]] bool& dyn_isOpen();
    // Get instance field reference: private System.Boolean FIKMEGAJPFO
    [[deprecated("Use field access instead!")]] bool& dyn_FIKMEGAJPFO();
    // Get instance field reference: private UnityEngine.Collider[] JGOGJDHABHN
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_JGOGJDHABHN();
    // Get instance field reference: private UnityEngine.GameObject IJLNDPNACFG
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_IJLNDPNACFG();
    // Get instance field reference: private System.Collections.Generic.List`1<MagicalActual.JournalButton> bookmarkButtons
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::MagicalActual::JournalButton*>*& dyn_bookmarkButtons();
    // Get instance field reference: private System.Int32[] HOEHCOJENIB
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_HOEHCOJENIB();
    // Get instance field reference: public System.Boolean intitialLogin
    [[deprecated("Use field access instead!")]] bool& dyn_intitialLogin();
    // private System.Void MABIFMKAINM(MagicalActual.JournalPages MFJAEEOPOBN)
    // Offset: 0x11A919C
    void MABIFMKAINM(::MagicalActual::JournalPages* MFJAEEOPOBN);
    // private System.Void FJMGMOMABFO(MagicalActual.Grabber CIHKKGOEBIC)
    // Offset: 0x11A9308
    void FJMGMOMABFO(::MagicalActual::Grabber* CIHKKGOEBIC);
    // private System.Void FEJNAOBCKJK()
    // Offset: 0x11A94C8
    void FEJNAOBCKJK();
    // private System.Void Start()
    // Offset: 0x11A9528
    void Start();
    // public System.Void PDDHDLOHKED()
    // Offset: 0x11A95A8
    void PDDHDLOHKED();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x11A9604
    void AFIACGLCIPB();
    // private System.Void HHDFFFCBAMM(MagicalActual.Grabber CIHKKGOEBIC)
    // Offset: 0x11A9684
    void HHDFFFCBAMM(::MagicalActual::Grabber* CIHKKGOEBIC);
    // public System.Void BPENNKLPNCH()
    // Offset: 0x11A9830
    void BPENNKLPNCH();
    // public System.Void IOOHACNDOFO(System.String EFDGMOOENKO)
    // Offset: 0x11A988C
    void IOOHACNDOFO(::StringW EFDGMOOENKO);
    // private System.Void BAAGFDHNBEH(MagicalActual.JournalPages MFJAEEOPOBN)
    // Offset: 0x11A9AD8
    void BAAGFDHNBEH(::MagicalActual::JournalPages* MFJAEEOPOBN);
    // public MagicalActual.ReadableBook EKOJCIGAHJF()
    // Offset: 0x11A94B8
    ::MagicalActual::ReadableBook* EKOJCIGAHJF();
    // private System.Void EDNPDPGPBPP()
    // Offset: 0x11A9C2C
    void EDNPDPGPBPP();
    // public System.Void GHLCMIAGCNG(System.String BOKBBEEENHE)
    // Offset: 0x11A9DFC
    void GHLCMIAGCNG(::StringW BOKBBEEENHE);
    // public System.Void CBNHJFNKANG()
    // Offset: 0x11AA02C
    void CBNHJFNKANG();
    // private System.Void JPHNAIDIBKL()
    // Offset: 0x11AA088
    void JPHNAIDIBKL();
    // private System.Void PhysicsInteractableUngrip(MagicalActual.Grabber CIHKKGOEBIC)
    // Offset: 0x11AA298
    void PhysicsInteractableUngrip(::MagicalActual::Grabber* CIHKKGOEBIC);
    // private System.Void KPFKNJMHNHI(MagicalActual.ReadableBook MMMEIONJJFJ)
    // Offset: 0x11AA440
    void KPFKNJMHNHI(::MagicalActual::ReadableBook* MMMEIONJJFJ);
    // public System.Void TurnToNoteId(System.String EFDGMOOENKO)
    // Offset: 0x11AA448
    void TurnToNoteId(::StringW EFDGMOOENKO);
    // private System.Void JFMJHLMOMCI()
    // Offset: 0x11AA694
    void JFMJHLMOMCI();
    // public System.Void OpenJournal()
    // Offset: 0x11AA840
    void OpenJournal();
    // private System.Void HIGKBBICMEP(MagicalActual.ReadableBook MMMEIONJJFJ)
    // Offset: 0x11A9520
    void HIGKBBICMEP(::MagicalActual::ReadableBook* MMMEIONJJFJ);
    // private System.Void HABDJCEKMNH()
    // Offset: 0x11AA89C
    void HABDJCEKMNH();
    // public System.Void EPHILCMMGOB(System.String EFDGMOOENKO)
    // Offset: 0x11AAAB0
    void EPHILCMMGOB(::StringW EFDGMOOENKO);
    // public MagicalActual.ReadableBook get_myBook()
    // Offset: 0x11A94C0
    ::MagicalActual::ReadableBook* get_myBook();
    // public System.Void EMHKKLBPEHA()
    // Offset: 0x11AACFC
    void EMHKKLBPEHA();
    // public System.Void MGCAEFPIGGB(System.String BOKBBEEENHE)
    // Offset: 0x11AAD58
    void MGCAEFPIGGB(::StringW BOKBBEEENHE);
    // private System.Void AGOBDBDGJKD()
    // Offset: 0x11AAFA4
    void AGOBDBDGJKD();
    // private System.Void JGPBEGJBGJO(MagicalActual.JournalPages MFJAEEOPOBN)
    // Offset: 0x11AB1B0
    void JGPBEGJBGJO(::MagicalActual::JournalPages* MFJAEEOPOBN);
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x11AB31C
    void BDEDGNGMHMN();
    // private System.Void KKEABMBACIC()
    // Offset: 0x11AB39C
    void KKEABMBACIC();
    // private System.Void NHADFEMILCC()
    // Offset: 0x11AB3F4
    void NHADFEMILCC();
    // private System.Void NIGDKALGFHM(MagicalActual.Grabber CIHKKGOEBIC)
    // Offset: 0x11AB474
    void NIGDKALGFHM(::MagicalActual::Grabber* CIHKKGOEBIC);
    // public System.Void DBCFEHEJGGH(System.String BOKBBEEENHE)
    // Offset: 0x11AB620
    void DBCFEHEJGGH(::StringW BOKBBEEENHE);
    // private System.Void Awake()
    // Offset: 0x11AB6A0
    void Awake();
    // public System.Void KNEPHDDKAJI()
    // Offset: 0x11AB6F8
    void KNEPHDDKAJI();
    // public System.Void .ctor()
    // Offset: 0x11AB758
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerJournal* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PlayerJournal::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerJournal*, creationType>()));
    }
    // private System.Void OOKKAEFNKOA()
    // Offset: 0x11AADDC
    void OOKKAEFNKOA();
    // public System.Void CGPIOIFBFAD(System.String BOKBBEEENHE)
    // Offset: 0x11AB7B8
    void CGPIOIFBFAD(::StringW BOKBBEEENHE);
    // public System.Void UpdateFromString(System.String BOKBBEEENHE)
    // Offset: 0x11AB83C
    void UpdateFromString(::StringW BOKBBEEENHE);
    // private System.Void FixedUpdate()
    // Offset: 0x11AB8BC
    void FixedUpdate();
    // private System.Void NDJOFOJLMEJ()
    // Offset: 0x11A9E80
    void NDJOFOJLMEJ();
  }; // MagicalActual.PlayerJournal
  #pragma pack(pop)
  static check_size<sizeof(PlayerJournal), 96 + sizeof(bool)> __MagicalActual_PlayerJournalSizeCheck;
  static_assert(sizeof(PlayerJournal) == 0x61);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::MABIFMKAINM
// Il2CppName: MABIFMKAINM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::MagicalActual::JournalPages*)>(&MagicalActual::PlayerJournal::MABIFMKAINM)> {
  static const MethodInfo* get() {
    static auto* MFJAEEOPOBN = &::il2cpp_utils::GetClassFromName("MagicalActual", "JournalPages")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "MABIFMKAINM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MFJAEEOPOBN});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::FJMGMOMABFO
// Il2CppName: FJMGMOMABFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::MagicalActual::Grabber*)>(&MagicalActual::PlayerJournal::FJMGMOMABFO)> {
  static const MethodInfo* get() {
    static auto* CIHKKGOEBIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "FJMGMOMABFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CIHKKGOEBIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::FEJNAOBCKJK
// Il2CppName: FEJNAOBCKJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::FEJNAOBCKJK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "FEJNAOBCKJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::PDDHDLOHKED
// Il2CppName: PDDHDLOHKED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::PDDHDLOHKED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "PDDHDLOHKED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::HHDFFFCBAMM
// Il2CppName: HHDFFFCBAMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::MagicalActual::Grabber*)>(&MagicalActual::PlayerJournal::HHDFFFCBAMM)> {
  static const MethodInfo* get() {
    static auto* CIHKKGOEBIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "HHDFFFCBAMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CIHKKGOEBIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::BPENNKLPNCH
// Il2CppName: BPENNKLPNCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::BPENNKLPNCH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "BPENNKLPNCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::IOOHACNDOFO
// Il2CppName: IOOHACNDOFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::StringW)>(&MagicalActual::PlayerJournal::IOOHACNDOFO)> {
  static const MethodInfo* get() {
    static auto* EFDGMOOENKO = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "IOOHACNDOFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EFDGMOOENKO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::BAAGFDHNBEH
// Il2CppName: BAAGFDHNBEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::MagicalActual::JournalPages*)>(&MagicalActual::PlayerJournal::BAAGFDHNBEH)> {
  static const MethodInfo* get() {
    static auto* MFJAEEOPOBN = &::il2cpp_utils::GetClassFromName("MagicalActual", "JournalPages")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "BAAGFDHNBEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MFJAEEOPOBN});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::EKOJCIGAHJF
// Il2CppName: EKOJCIGAHJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::ReadableBook* (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::EKOJCIGAHJF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "EKOJCIGAHJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::EDNPDPGPBPP
// Il2CppName: EDNPDPGPBPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::EDNPDPGPBPP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "EDNPDPGPBPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::GHLCMIAGCNG
// Il2CppName: GHLCMIAGCNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::StringW)>(&MagicalActual::PlayerJournal::GHLCMIAGCNG)> {
  static const MethodInfo* get() {
    static auto* BOKBBEEENHE = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "GHLCMIAGCNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BOKBBEEENHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::CBNHJFNKANG
// Il2CppName: CBNHJFNKANG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::CBNHJFNKANG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "CBNHJFNKANG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::JPHNAIDIBKL
// Il2CppName: JPHNAIDIBKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::JPHNAIDIBKL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "JPHNAIDIBKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::PhysicsInteractableUngrip
// Il2CppName: PhysicsInteractableUngrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::MagicalActual::Grabber*)>(&MagicalActual::PlayerJournal::PhysicsInteractableUngrip)> {
  static const MethodInfo* get() {
    static auto* CIHKKGOEBIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "PhysicsInteractableUngrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CIHKKGOEBIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::KPFKNJMHNHI
// Il2CppName: KPFKNJMHNHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::MagicalActual::ReadableBook*)>(&MagicalActual::PlayerJournal::KPFKNJMHNHI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "ReadableBook")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "KPFKNJMHNHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::TurnToNoteId
// Il2CppName: TurnToNoteId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::StringW)>(&MagicalActual::PlayerJournal::TurnToNoteId)> {
  static const MethodInfo* get() {
    static auto* EFDGMOOENKO = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "TurnToNoteId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EFDGMOOENKO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::JFMJHLMOMCI
// Il2CppName: JFMJHLMOMCI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::JFMJHLMOMCI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "JFMJHLMOMCI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::OpenJournal
// Il2CppName: OpenJournal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::OpenJournal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "OpenJournal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::HIGKBBICMEP
// Il2CppName: HIGKBBICMEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::MagicalActual::ReadableBook*)>(&MagicalActual::PlayerJournal::HIGKBBICMEP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "ReadableBook")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "HIGKBBICMEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::HABDJCEKMNH
// Il2CppName: HABDJCEKMNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::HABDJCEKMNH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "HABDJCEKMNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::EPHILCMMGOB
// Il2CppName: EPHILCMMGOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::StringW)>(&MagicalActual::PlayerJournal::EPHILCMMGOB)> {
  static const MethodInfo* get() {
    static auto* EFDGMOOENKO = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "EPHILCMMGOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EFDGMOOENKO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::get_myBook
// Il2CppName: get_myBook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::ReadableBook* (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::get_myBook)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "get_myBook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::EMHKKLBPEHA
// Il2CppName: EMHKKLBPEHA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::EMHKKLBPEHA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "EMHKKLBPEHA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::MGCAEFPIGGB
// Il2CppName: MGCAEFPIGGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::StringW)>(&MagicalActual::PlayerJournal::MGCAEFPIGGB)> {
  static const MethodInfo* get() {
    static auto* BOKBBEEENHE = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "MGCAEFPIGGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BOKBBEEENHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::AGOBDBDGJKD
// Il2CppName: AGOBDBDGJKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::AGOBDBDGJKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "AGOBDBDGJKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::JGPBEGJBGJO
// Il2CppName: JGPBEGJBGJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::MagicalActual::JournalPages*)>(&MagicalActual::PlayerJournal::JGPBEGJBGJO)> {
  static const MethodInfo* get() {
    static auto* MFJAEEOPOBN = &::il2cpp_utils::GetClassFromName("MagicalActual", "JournalPages")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "JGPBEGJBGJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MFJAEEOPOBN});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::KKEABMBACIC
// Il2CppName: KKEABMBACIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::KKEABMBACIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "KKEABMBACIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::NIGDKALGFHM
// Il2CppName: NIGDKALGFHM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::MagicalActual::Grabber*)>(&MagicalActual::PlayerJournal::NIGDKALGFHM)> {
  static const MethodInfo* get() {
    static auto* CIHKKGOEBIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "NIGDKALGFHM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CIHKKGOEBIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::DBCFEHEJGGH
// Il2CppName: DBCFEHEJGGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::StringW)>(&MagicalActual::PlayerJournal::DBCFEHEJGGH)> {
  static const MethodInfo* get() {
    static auto* BOKBBEEENHE = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "DBCFEHEJGGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BOKBBEEENHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::KNEPHDDKAJI
// Il2CppName: KNEPHDDKAJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::KNEPHDDKAJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "KNEPHDDKAJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::OOKKAEFNKOA
// Il2CppName: OOKKAEFNKOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::OOKKAEFNKOA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "OOKKAEFNKOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::CGPIOIFBFAD
// Il2CppName: CGPIOIFBFAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::StringW)>(&MagicalActual::PlayerJournal::CGPIOIFBFAD)> {
  static const MethodInfo* get() {
    static auto* BOKBBEEENHE = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "CGPIOIFBFAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BOKBBEEENHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::UpdateFromString
// Il2CppName: UpdateFromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)(::StringW)>(&MagicalActual::PlayerJournal::UpdateFromString)> {
  static const MethodInfo* get() {
    static auto* BOKBBEEENHE = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "UpdateFromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BOKBBEEENHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerJournal::NDJOFOJLMEJ
// Il2CppName: NDJOFOJLMEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerJournal::*)()>(&MagicalActual::PlayerJournal::NDJOFOJLMEJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerJournal*), "NDJOFOJLMEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
