// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MagicalActual.DamageAffinity
#include "MagicalActual/DamageAffinity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: DamageParams
  class DamageParams;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::DamageParams);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::DamageParams*, "MagicalActual", "DamageParams");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.DamageParams
  // [TokenAttribute] Offset: FFFFFFFF
  class DamageParams : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 AGDLDNDOBMI
    // Size: 0x4
    // Offset: 0x10
    int AGDLDNDOBMI;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public MagicalActual.DamageAffinity JLFIDMCJFGD
    // Size: 0x4
    // Offset: 0x14
    ::MagicalActual::DamageAffinity JLFIDMCJFGD;
    // Field size check
    static_assert(sizeof(::MagicalActual::DamageAffinity) == 0x4);
    public:
    // Get instance field reference: public System.Int32 AGDLDNDOBMI
    [[deprecated("Use field access instead!")]] int& dyn_AGDLDNDOBMI();
    // Get instance field reference: public MagicalActual.DamageAffinity JLFIDMCJFGD
    [[deprecated("Use field access instead!")]] ::MagicalActual::DamageAffinity& dyn_JLFIDMCJFGD();
    // public System.Void .ctor(System.Int32 HLHIDHCLCEN, MagicalActual.DamageAffinity NKFJOFJMHEB)
    // Offset: 0x19B329C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DamageParams* New_ctor(int HLHIDHCLCEN, ::MagicalActual::DamageAffinity NKFJOFJMHEB) {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::DamageParams::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DamageParams*, creationType>(HLHIDHCLCEN, NKFJOFJMHEB)));
    }
  }; // MagicalActual.DamageParams
  #pragma pack(pop)
  static check_size<sizeof(DamageParams), 20 + sizeof(::MagicalActual::DamageAffinity)> __MagicalActual_DamageParamsSizeCheck;
  static_assert(sizeof(DamageParams) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::DamageParams::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
