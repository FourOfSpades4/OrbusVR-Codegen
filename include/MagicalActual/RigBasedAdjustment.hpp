// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: RigBasedAdjustment
  class RigBasedAdjustment;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::RigBasedAdjustment);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::RigBasedAdjustment*, "MagicalActual", "RigBasedAdjustment");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x89
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.RigBasedAdjustment
  // [TokenAttribute] Offset: FFFFFFFF
  class RigBasedAdjustment : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Vector3 rotationAdjustmentTouch
    // Size: 0xC
    // Offset: 0x18
    ::UnityEngine::Vector3 rotationAdjustmentTouch;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 positionAdjustmentTouch
    // Size: 0xC
    // Offset: 0x24
    ::UnityEngine::Vector3 positionAdjustmentTouch;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Quaternion finalQuaternionTouch
    // Size: 0x10
    // Offset: 0x30
    ::UnityEngine::Quaternion finalQuaternionTouch;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // public UnityEngine.Vector3 rotationAdjustmentSteam
    // Size: 0xC
    // Offset: 0x40
    ::UnityEngine::Vector3 rotationAdjustmentSteam;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 positionAdjustmentSteam
    // Size: 0xC
    // Offset: 0x4C
    ::UnityEngine::Vector3 positionAdjustmentSteam;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 rotationAdjustmentIndex
    // Size: 0xC
    // Offset: 0x58
    ::UnityEngine::Vector3 rotationAdjustmentIndex;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 positionAdjustmentIndex
    // Size: 0xC
    // Offset: 0x64
    ::UnityEngine::Vector3 positionAdjustmentIndex;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 KIHMHNKNFAE
    // Size: 0xC
    // Offset: 0x70
    ::UnityEngine::Vector3 KIHMHNKNFAE;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 GIKPHCEBBDE
    // Size: 0xC
    // Offset: 0x7C
    ::UnityEngine::Vector3 GIKPHCEBBDE;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public System.Boolean adjustmentApplied
    // Size: 0x1
    // Offset: 0x88
    bool adjustmentApplied;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Vector3 rotationAdjustmentTouch
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_rotationAdjustmentTouch();
    // Get instance field reference: public UnityEngine.Vector3 positionAdjustmentTouch
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_positionAdjustmentTouch();
    // Get instance field reference: public UnityEngine.Quaternion finalQuaternionTouch
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_finalQuaternionTouch();
    // Get instance field reference: public UnityEngine.Vector3 rotationAdjustmentSteam
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_rotationAdjustmentSteam();
    // Get instance field reference: public UnityEngine.Vector3 positionAdjustmentSteam
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_positionAdjustmentSteam();
    // Get instance field reference: public UnityEngine.Vector3 rotationAdjustmentIndex
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_rotationAdjustmentIndex();
    // Get instance field reference: public UnityEngine.Vector3 positionAdjustmentIndex
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_positionAdjustmentIndex();
    // Get instance field reference: private UnityEngine.Vector3 KIHMHNKNFAE
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_KIHMHNKNFAE();
    // Get instance field reference: private UnityEngine.Vector3 GIKPHCEBBDE
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_GIKPHCEBBDE();
    // Get instance field reference: public System.Boolean adjustmentApplied
    [[deprecated("Use field access instead!")]] bool& dyn_adjustmentApplied();
    // private UnityEngine.Vector3 IGJEJHJAGCJ()
    // Offset: 0x15C03AC
    ::UnityEngine::Vector3 IGJEJHJAGCJ();
    // private System.Void ADLGPKAIPAA()
    // Offset: 0x15C0B54
    void ADLGPKAIPAA();
    // private System.Void Awake()
    // Offset: 0x15C0C60
    void Awake();
    // private UnityEngine.Vector3 NBNGAEDNEHL()
    // Offset: 0x15C0D6C
    ::UnityEngine::Vector3 NBNGAEDNEHL();
    // private System.Void KIPDPKEIOEO()
    // Offset: 0x15C14F8
    void KIPDPKEIOEO();
    // private System.Void DEGCMEJJNJI()
    // Offset: 0x15C1604
    void DEGCMEJJNJI();
    // public UnityEngine.Vector3 KMGAIHMPEEJ(MagicalActual.PlayerAvatar KEPBGDEFHHI)
    // Offset: 0x15C1608
    ::UnityEngine::Vector3 KMGAIHMPEEJ(::MagicalActual::PlayerAvatar* KEPBGDEFHHI);
    // private UnityEngine.Vector3 PGHIKFFHAMC()
    // Offset: 0x15C2110
    ::UnityEngine::Vector3 PGHIKFFHAMC();
    // private System.Void JNELNIGPBIM()
    // Offset: 0x15C28B8
    void JNELNIGPBIM();
    // private System.Void CMHAIEOPKDA()
    // Offset: 0x15C29C4
    void CMHAIEOPKDA();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x15C2ADC
    void LBIKOKCCILF();
    // private System.Void AGHNGIJFADH()
    // Offset: 0x15C2AE0
    void AGHNGIJFADH();
    // public System.Void FMFHDLGENKD()
    // Offset: 0x15C2BF8
    void FMFHDLGENKD();
    // private UnityEngine.Vector3 CGNAMJKEDPF()
    // Offset: 0x15C2D38
    ::UnityEngine::Vector3 CGNAMJKEDPF();
    // private System.Void MDKGPPFLMAD()
    // Offset: 0x15C34E8
    void MDKGPPFLMAD();
    // public UnityEngine.Vector3 MHPFEJFLEGO(MagicalActual.PlayerAvatar KEPBGDEFHHI)
    // Offset: 0x15C3600
    ::UnityEngine::Vector3 MHPFEJFLEGO(::MagicalActual::PlayerAvatar* KEPBGDEFHHI);
    // private UnityEngine.Vector3 NINLMEKDFEF()
    // Offset: 0x15C40DC
    ::UnityEngine::Vector3 NINLMEKDFEF();
    // private System.Void MKEDKNCPGBA()
    // Offset: 0x15C4894
    void MKEDKNCPGBA();
    // private System.Void NCFLHLAJILH()
    // Offset: 0x15C49AC
    void NCFLHLAJILH();
    // private System.Void APMNGLNBFNP()
    // Offset: 0x15C4AC4
    void APMNGLNBFNP();
    // private UnityEngine.Vector3 JMIBKLOKEBK()
    // Offset: 0x15C4AC8
    ::UnityEngine::Vector3 JMIBKLOKEBK();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x15C527C
    void DFCOAPEIKLN();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x15C5280
    void HKINNMLBMMG();
    // public System.Void NJJECFGJHLJ()
    // Offset: 0x15C5284
    void NJJECFGJHLJ();
    // private System.Void EKCMEFGLOBI()
    // Offset: 0x15C53C8
    void EKCMEFGLOBI();
    // public UnityEngine.Vector3 MJKPLNFJIBF(MagicalActual.PlayerAvatar KEPBGDEFHHI)
    // Offset: 0x15C54E0
    ::UnityEngine::Vector3 MJKPLNFJIBF(::MagicalActual::PlayerAvatar* KEPBGDEFHHI);
    // private System.Void PHOCIMJBICI()
    // Offset: 0x15C582C
    void PHOCIMJBICI();
    // public UnityEngine.Vector3 getPositionAdjustment(MagicalActual.PlayerAvatar KEPBGDEFHHI)
    // Offset: 0x15C5944
    ::UnityEngine::Vector3 getPositionAdjustment(::MagicalActual::PlayerAvatar* KEPBGDEFHHI);
    // public System.Void Reset()
    // Offset: 0x15C5C88
    void Reset();
    // private UnityEngine.Vector3 FHBCECHBPPI()
    // Offset: 0x15C1950
    ::UnityEngine::Vector3 FHBCECHBPPI();
    // public UnityEngine.Vector3 DADLHPKNHMN(MagicalActual.PlayerAvatar KEPBGDEFHHI)
    // Offset: 0x15C5DC8
    ::UnityEngine::Vector3 DADLHPKNHMN(::MagicalActual::PlayerAvatar* KEPBGDEFHHI);
    // private System.Void OnValidate()
    // Offset: 0x15C610C
    void OnValidate();
    // private UnityEngine.Vector3 ANJHMDCKMDG()
    // Offset: 0x15C6224
    ::UnityEngine::Vector3 ANJHMDCKMDG();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x15C69D4
    void GECHLDPLPCC();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x15C69D8
    void ABIHCGOKNCL();
    // private System.Void FCBLLDHAKEA()
    // Offset: 0x15C69DC
    void FCBLLDHAKEA();
    // public System.Void .ctor()
    // Offset: 0x15C6AF4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RigBasedAdjustment* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::RigBasedAdjustment::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RigBasedAdjustment*, creationType>()));
    }
    // private System.Void CNBJHFMDCOE()
    // Offset: 0x15C6AFC
    void CNBJHFMDCOE();
    // public UnityEngine.Vector3 AJOKDIMEMLA(MagicalActual.PlayerAvatar KEPBGDEFHHI)
    // Offset: 0x15C6C08
    ::UnityEngine::Vector3 AJOKDIMEMLA(::MagicalActual::PlayerAvatar* KEPBGDEFHHI);
    // private System.Void NHNOMAONOJL()
    // Offset: 0x15C6F4C
    void NHNOMAONOJL();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x15C7064
    void DGJGAFKDIDK();
    // public UnityEngine.Vector3 AMECCDAOIMD(MagicalActual.PlayerAvatar KEPBGDEFHHI)
    // Offset: 0x15C7068
    ::UnityEngine::Vector3 AMECCDAOIMD(::MagicalActual::PlayerAvatar* KEPBGDEFHHI);
    // public UnityEngine.Vector3 JJMNLLEMKGD(MagicalActual.PlayerAvatar KEPBGDEFHHI)
    // Offset: 0x15C73B0
    ::UnityEngine::Vector3 JJMNLLEMKGD(::MagicalActual::PlayerAvatar* KEPBGDEFHHI);
    // private System.Void Start()
    // Offset: 0x15C76F8
    void Start();
    // public UnityEngine.Vector3 getRotationAdjustment(MagicalActual.PlayerAvatar KEPBGDEFHHI)
    // Offset: 0x15C76FC
    ::UnityEngine::Vector3 getRotationAdjustment(::MagicalActual::PlayerAvatar* KEPBGDEFHHI);
    // public UnityEngine.Vector3 PKMGNECILHC(MagicalActual.PlayerAvatar KEPBGDEFHHI)
    // Offset: 0x15C7A40
    ::UnityEngine::Vector3 PKMGNECILHC(::MagicalActual::PlayerAvatar* KEPBGDEFHHI);
    // private UnityEngine.Vector3 DLONIBACABH()
    // Offset: 0x15C3950
    ::UnityEngine::Vector3 DLONIBACABH();
    // private UnityEngine.Vector3 FBOLFCDCBMJ()
    // Offset: 0x15C7D84
    ::UnityEngine::Vector3 FBOLFCDCBMJ();
  }; // MagicalActual.RigBasedAdjustment
  #pragma pack(pop)
  static check_size<sizeof(RigBasedAdjustment), 136 + sizeof(bool)> __MagicalActual_RigBasedAdjustmentSizeCheck;
  static_assert(sizeof(RigBasedAdjustment) == 0x89);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::IGJEJHJAGCJ
// Il2CppName: IGJEJHJAGCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::IGJEJHJAGCJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "IGJEJHJAGCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::ADLGPKAIPAA
// Il2CppName: ADLGPKAIPAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::ADLGPKAIPAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "ADLGPKAIPAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::NBNGAEDNEHL
// Il2CppName: NBNGAEDNEHL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::NBNGAEDNEHL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "NBNGAEDNEHL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::KIPDPKEIOEO
// Il2CppName: KIPDPKEIOEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::KIPDPKEIOEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "KIPDPKEIOEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::DEGCMEJJNJI
// Il2CppName: DEGCMEJJNJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::DEGCMEJJNJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "DEGCMEJJNJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::KMGAIHMPEEJ
// Il2CppName: KMGAIHMPEEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::RigBasedAdjustment::KMGAIHMPEEJ)> {
  static const MethodInfo* get() {
    static auto* KEPBGDEFHHI = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "KMGAIHMPEEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KEPBGDEFHHI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::PGHIKFFHAMC
// Il2CppName: PGHIKFFHAMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::PGHIKFFHAMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "PGHIKFFHAMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::JNELNIGPBIM
// Il2CppName: JNELNIGPBIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::JNELNIGPBIM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "JNELNIGPBIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::CMHAIEOPKDA
// Il2CppName: CMHAIEOPKDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::CMHAIEOPKDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "CMHAIEOPKDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::AGHNGIJFADH
// Il2CppName: AGHNGIJFADH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::AGHNGIJFADH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "AGHNGIJFADH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::FMFHDLGENKD
// Il2CppName: FMFHDLGENKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::FMFHDLGENKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "FMFHDLGENKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::CGNAMJKEDPF
// Il2CppName: CGNAMJKEDPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::CGNAMJKEDPF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "CGNAMJKEDPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::MDKGPPFLMAD
// Il2CppName: MDKGPPFLMAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::MDKGPPFLMAD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "MDKGPPFLMAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::MHPFEJFLEGO
// Il2CppName: MHPFEJFLEGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::RigBasedAdjustment::MHPFEJFLEGO)> {
  static const MethodInfo* get() {
    static auto* KEPBGDEFHHI = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "MHPFEJFLEGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KEPBGDEFHHI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::NINLMEKDFEF
// Il2CppName: NINLMEKDFEF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::NINLMEKDFEF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "NINLMEKDFEF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::MKEDKNCPGBA
// Il2CppName: MKEDKNCPGBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::MKEDKNCPGBA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "MKEDKNCPGBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::NCFLHLAJILH
// Il2CppName: NCFLHLAJILH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::NCFLHLAJILH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "NCFLHLAJILH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::APMNGLNBFNP
// Il2CppName: APMNGLNBFNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::APMNGLNBFNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "APMNGLNBFNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::JMIBKLOKEBK
// Il2CppName: JMIBKLOKEBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::JMIBKLOKEBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "JMIBKLOKEBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::NJJECFGJHLJ
// Il2CppName: NJJECFGJHLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::NJJECFGJHLJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "NJJECFGJHLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::EKCMEFGLOBI
// Il2CppName: EKCMEFGLOBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::EKCMEFGLOBI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "EKCMEFGLOBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::MJKPLNFJIBF
// Il2CppName: MJKPLNFJIBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::RigBasedAdjustment::MJKPLNFJIBF)> {
  static const MethodInfo* get() {
    static auto* KEPBGDEFHHI = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "MJKPLNFJIBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KEPBGDEFHHI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::PHOCIMJBICI
// Il2CppName: PHOCIMJBICI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::PHOCIMJBICI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "PHOCIMJBICI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::getPositionAdjustment
// Il2CppName: getPositionAdjustment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::RigBasedAdjustment::getPositionAdjustment)> {
  static const MethodInfo* get() {
    static auto* KEPBGDEFHHI = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "getPositionAdjustment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KEPBGDEFHHI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::FHBCECHBPPI
// Il2CppName: FHBCECHBPPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::FHBCECHBPPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "FHBCECHBPPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::DADLHPKNHMN
// Il2CppName: DADLHPKNHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::RigBasedAdjustment::DADLHPKNHMN)> {
  static const MethodInfo* get() {
    static auto* KEPBGDEFHHI = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "DADLHPKNHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KEPBGDEFHHI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::OnValidate
// Il2CppName: OnValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::OnValidate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::ANJHMDCKMDG
// Il2CppName: ANJHMDCKMDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::ANJHMDCKMDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "ANJHMDCKMDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::FCBLLDHAKEA
// Il2CppName: FCBLLDHAKEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::FCBLLDHAKEA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "FCBLLDHAKEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::CNBJHFMDCOE
// Il2CppName: CNBJHFMDCOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::CNBJHFMDCOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "CNBJHFMDCOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::AJOKDIMEMLA
// Il2CppName: AJOKDIMEMLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::RigBasedAdjustment::AJOKDIMEMLA)> {
  static const MethodInfo* get() {
    static auto* KEPBGDEFHHI = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "AJOKDIMEMLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KEPBGDEFHHI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::NHNOMAONOJL
// Il2CppName: NHNOMAONOJL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::NHNOMAONOJL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "NHNOMAONOJL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::AMECCDAOIMD
// Il2CppName: AMECCDAOIMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::RigBasedAdjustment::AMECCDAOIMD)> {
  static const MethodInfo* get() {
    static auto* KEPBGDEFHHI = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "AMECCDAOIMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KEPBGDEFHHI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::JJMNLLEMKGD
// Il2CppName: JJMNLLEMKGD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::RigBasedAdjustment::JJMNLLEMKGD)> {
  static const MethodInfo* get() {
    static auto* KEPBGDEFHHI = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "JJMNLLEMKGD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KEPBGDEFHHI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::getRotationAdjustment
// Il2CppName: getRotationAdjustment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::RigBasedAdjustment::getRotationAdjustment)> {
  static const MethodInfo* get() {
    static auto* KEPBGDEFHHI = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "getRotationAdjustment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KEPBGDEFHHI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::PKMGNECILHC
// Il2CppName: PKMGNECILHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::RigBasedAdjustment::PKMGNECILHC)> {
  static const MethodInfo* get() {
    static auto* KEPBGDEFHHI = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "PKMGNECILHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KEPBGDEFHHI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::DLONIBACABH
// Il2CppName: DLONIBACABH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::DLONIBACABH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "DLONIBACABH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RigBasedAdjustment::FBOLFCDCBMJ
// Il2CppName: FBOLFCDCBMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RigBasedAdjustment::*)()>(&MagicalActual::RigBasedAdjustment::FBOLFCDCBMJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RigBasedAdjustment*), "FBOLFCDCBMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
