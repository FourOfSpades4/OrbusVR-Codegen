// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: ParticleSystem
  class ParticleSystem;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Reactstone
  class Reactstone;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Reactstone);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Reactstone*, "MagicalActual", "Reactstone");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x51
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Reactstone
  // [TokenAttribute] Offset: FFFFFFFF
  class Reactstone : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String classMatch
    // Size: 0x8
    // Offset: 0x20
    ::StringW classMatch;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String executeScript
    // Size: 0x8
    // Offset: 0x28
    ::StringW executeScript;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String deactivateScript
    // Size: 0x8
    // Offset: 0x30
    ::StringW deactivateScript;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Single activationDelay
    // Size: 0x4
    // Offset: 0x38
    float activationDelay;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single radius
    // Size: 0x4
    // Offset: 0x3C
    float radius;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.GameObject DBFGEMEENCG
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* DBFGEMEENCG;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.ParticleSystem[] EGILCOEKPDO
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::UnityEngine::ParticleSystem*> EGILCOEKPDO;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::ParticleSystem*>) == 0x8);
    // private System.Boolean OPBAFKAOGIC
    // Size: 0x1
    // Offset: 0x50
    bool OPBAFKAOGIC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public System.String classMatch
    [[deprecated("Use field access instead!")]] ::StringW& dyn_classMatch();
    // Get instance field reference: public System.String executeScript
    [[deprecated("Use field access instead!")]] ::StringW& dyn_executeScript();
    // Get instance field reference: public System.String deactivateScript
    [[deprecated("Use field access instead!")]] ::StringW& dyn_deactivateScript();
    // Get instance field reference: public System.Single activationDelay
    [[deprecated("Use field access instead!")]] float& dyn_activationDelay();
    // Get instance field reference: public System.Single radius
    [[deprecated("Use field access instead!")]] float& dyn_radius();
    // Get instance field reference: private UnityEngine.GameObject DBFGEMEENCG
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_DBFGEMEENCG();
    // Get instance field reference: private UnityEngine.ParticleSystem[] EGILCOEKPDO
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ParticleSystem*>& dyn_EGILCOEKPDO();
    // Get instance field reference: private System.Boolean OPBAFKAOGIC
    [[deprecated("Use field access instead!")]] bool& dyn_OPBAFKAOGIC();
    // private System.Void NDAOHLAOCDE()
    // Offset: 0x15B62B8
    void NDAOHLAOCDE();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x15B635C
    void FNGLOIECKDG();
    // private System.Void AKCLKOGKPDH()
    // Offset: 0x15B63D4
    void AKCLKOGKPDH();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x15B6408
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void AMPLEJPPJGB()
    // Offset: 0x15B64B8
    void AMPLEJPPJGB();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x15B64EC
    void IDOCJGNLNFL();
    // private System.Void EDKPPJLGIIC()
    // Offset: 0x15B64FC
    void EDKPPJLGIIC();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x15B6564
    void NNDKJCJFIAK();
    // private System.Void MAJLAEFEHJJ()
    // Offset: 0x15B636C
    void MAJLAEFEHJJ();
    // private System.Void EGDKFHOMFHB()
    // Offset: 0x15B65A8
    void EGDKFHOMFHB();
    // public System.Void NEMKNLGDEAK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x15B65DC
    void NEMKNLGDEAK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JICHFPHFFEK(System.Object OMLPNCLFFMJ)
    // Offset: 0x15B668C
    void JICHFPHFFEK(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void JENOIOBAEPG()
    // Offset: 0x15B6740
    void JENOIOBAEPG();
    // private System.Void ACPCJEINJHF()
    // Offset: 0x15B670C
    void ACPCJEINJHF();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x15B6750
    void LBIKOKCCILF();
    // private System.Void MADOADNMCKB()
    // Offset: 0x15B6760
    void MADOADNMCKB();
    // private System.Void NOPDBDGNCMD()
    // Offset: 0x15B6794
    void NOPDBDGNCMD();
    // private System.Void PPCHHKBFGDL()
    // Offset: 0x15B67C8
    void PPCHHKBFGDL();
    // private System.Void LPGLLEHEMEN()
    // Offset: 0x15B67FC
    void LPGLLEHEMEN();
    // private System.Void MKLLPPCPHNM(System.Object OMLPNCLFFMJ)
    // Offset: 0x15B6830
    void MKLLPPCPHNM(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void .ctor()
    // Offset: 0x15B68B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Reactstone* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Reactstone::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Reactstone*, creationType>()));
    }
    // private System.Void CGICGGODGDL(System.Object OMLPNCLFFMJ)
    // Offset: 0x15B6930
    void CGICGGODGDL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Awake()
    // Offset: 0x15B69B0
    void Awake();
    // private System.Void NHADFEMILCC()
    // Offset: 0x15B6A54
    void NHADFEMILCC();
    // private System.Void OCNDKLOOGDG()
    // Offset: 0x15B6574
    void OCNDKLOOGDG();
    // private System.Void Start()
    // Offset: 0x15B6A64
    void Start();
    // private System.Void BNHAMIJDPBC()
    // Offset: 0x15B63A0
    void BNHAMIJDPBC();
    // private System.Void LMFIENPBFKA()
    // Offset: 0x15B6A74
    void LMFIENPBFKA();
    // private System.Void IJFHGPHPOLK()
    // Offset: 0x15B6530
    void IJFHGPHPOLK();
  }; // MagicalActual.Reactstone
  #pragma pack(pop)
  static check_size<sizeof(Reactstone), 80 + sizeof(bool)> __MagicalActual_ReactstoneSizeCheck;
  static_assert(sizeof(Reactstone) == 0x51);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Reactstone::NDAOHLAOCDE
// Il2CppName: NDAOHLAOCDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::NDAOHLAOCDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "NDAOHLAOCDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::AKCLKOGKPDH
// Il2CppName: AKCLKOGKPDH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::AKCLKOGKPDH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "AKCLKOGKPDH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Reactstone::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::AMPLEJPPJGB
// Il2CppName: AMPLEJPPJGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::AMPLEJPPJGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "AMPLEJPPJGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::EDKPPJLGIIC
// Il2CppName: EDKPPJLGIIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::EDKPPJLGIIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "EDKPPJLGIIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::MAJLAEFEHJJ
// Il2CppName: MAJLAEFEHJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::MAJLAEFEHJJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "MAJLAEFEHJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::EGDKFHOMFHB
// Il2CppName: EGDKFHOMFHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::EGDKFHOMFHB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "EGDKFHOMFHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::NEMKNLGDEAK
// Il2CppName: NEMKNLGDEAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Reactstone::NEMKNLGDEAK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "NEMKNLGDEAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::JICHFPHFFEK
// Il2CppName: JICHFPHFFEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)(::Il2CppObject*)>(&MagicalActual::Reactstone::JICHFPHFFEK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "JICHFPHFFEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::ACPCJEINJHF
// Il2CppName: ACPCJEINJHF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::ACPCJEINJHF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "ACPCJEINJHF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::MADOADNMCKB
// Il2CppName: MADOADNMCKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::MADOADNMCKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "MADOADNMCKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::NOPDBDGNCMD
// Il2CppName: NOPDBDGNCMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::NOPDBDGNCMD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "NOPDBDGNCMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::PPCHHKBFGDL
// Il2CppName: PPCHHKBFGDL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::PPCHHKBFGDL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "PPCHHKBFGDL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::LPGLLEHEMEN
// Il2CppName: LPGLLEHEMEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::LPGLLEHEMEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "LPGLLEHEMEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::MKLLPPCPHNM
// Il2CppName: MKLLPPCPHNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)(::Il2CppObject*)>(&MagicalActual::Reactstone::MKLLPPCPHNM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "MKLLPPCPHNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Reactstone::CGICGGODGDL
// Il2CppName: CGICGGODGDL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)(::Il2CppObject*)>(&MagicalActual::Reactstone::CGICGGODGDL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "CGICGGODGDL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::OCNDKLOOGDG
// Il2CppName: OCNDKLOOGDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::OCNDKLOOGDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "OCNDKLOOGDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::BNHAMIJDPBC
// Il2CppName: BNHAMIJDPBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::BNHAMIJDPBC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "BNHAMIJDPBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::LMFIENPBFKA
// Il2CppName: LMFIENPBFKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::LMFIENPBFKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "LMFIENPBFKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Reactstone::IJFHGPHPOLK
// Il2CppName: IJFHGPHPOLK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Reactstone::*)()>(&MagicalActual::Reactstone::IJFHGPHPOLK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Reactstone*), "IJFHGPHPOLK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
