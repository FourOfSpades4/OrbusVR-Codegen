// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: AmbientLightChange
  class AmbientLightChange;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::AmbientLightChange);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::AmbientLightChange*, "MagicalActual", "AmbientLightChange");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.AmbientLightChange
  // [TokenAttribute] Offset: FFFFFFFF
  class AmbientLightChange : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // [ColorUsageAttribute] Offset: 0xAE5260
    // private UnityEngine.Color ambientLight
    // Size: 0x10
    // Offset: 0x18
    ::UnityEngine::Color ambientLight;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Single lerpTime
    // Size: 0x4
    // Offset: 0x28
    float lerpTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean disableOverworldDirectionLight
    // Size: 0x1
    // Offset: 0x2C
    bool disableOverworldDirectionLight;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: disableOverworldDirectionLight and: IJBOKNNNKDM
    char __padding2[0x3] = {};
    // private System.Single IJBOKNNNKDM
    // Size: 0x4
    // Offset: 0x30
    float IJBOKNNNKDM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single ABCNGPJLGFO
    // Size: 0x4
    // Offset: 0x34
    float ABCNGPJLGFO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single OEKGIJLKGJO
    // Size: 0x4
    // Offset: 0x38
    float OEKGIJLKGJO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single BNCEKCOLLIB
    // Size: 0x4
    // Offset: 0x3C
    float BNCEKCOLLIB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color KPFMIMKCEFM
    // Size: 0x10
    // Offset: 0x40
    ::UnityEngine::Color KPFMIMKCEFM;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color KFLMKMPFLMB
    // Size: 0x10
    // Offset: 0x50
    ::UnityEngine::Color KFLMKMPFLMB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Boolean OHFIPEGMGHA
    // Size: 0x1
    // Offset: 0x60
    bool OHFIPEGMGHA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean JIODMGKMDNL
    // Size: 0x1
    // Offset: 0x61
    bool JIODMGKMDNL;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean IEAINLLJHOD
    // Size: 0x1
    // Offset: 0x62
    bool IEAINLLJHOD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IEAINLLJHOD and: OKKAKDLGJKE
    char __padding11[0x1] = {};
    // private System.Single OKKAKDLGJKE
    // Size: 0x4
    // Offset: 0x64
    float OKKAKDLGJKE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.String BHHGMPLHEDC
    // Size: 0x8
    // Offset: 0x68
    ::StringW BHHGMPLHEDC;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.Collider BBOMOHLELBB
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Collider* BBOMOHLELBB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Collider*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Color ambientLight
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_ambientLight();
    // Get instance field reference: private System.Single lerpTime
    [[deprecated("Use field access instead!")]] float& dyn_lerpTime();
    // Get instance field reference: private System.Boolean disableOverworldDirectionLight
    [[deprecated("Use field access instead!")]] bool& dyn_disableOverworldDirectionLight();
    // Get instance field reference: private System.Single IJBOKNNNKDM
    [[deprecated("Use field access instead!")]] float& dyn_IJBOKNNNKDM();
    // Get instance field reference: private System.Single ABCNGPJLGFO
    [[deprecated("Use field access instead!")]] float& dyn_ABCNGPJLGFO();
    // Get instance field reference: private System.Single OEKGIJLKGJO
    [[deprecated("Use field access instead!")]] float& dyn_OEKGIJLKGJO();
    // Get instance field reference: private System.Single BNCEKCOLLIB
    [[deprecated("Use field access instead!")]] float& dyn_BNCEKCOLLIB();
    // Get instance field reference: private UnityEngine.Color KPFMIMKCEFM
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_KPFMIMKCEFM();
    // Get instance field reference: private UnityEngine.Color KFLMKMPFLMB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_KFLMKMPFLMB();
    // Get instance field reference: private System.Boolean OHFIPEGMGHA
    [[deprecated("Use field access instead!")]] bool& dyn_OHFIPEGMGHA();
    // Get instance field reference: private System.Boolean JIODMGKMDNL
    [[deprecated("Use field access instead!")]] bool& dyn_JIODMGKMDNL();
    // Get instance field reference: private System.Boolean IEAINLLJHOD
    [[deprecated("Use field access instead!")]] bool& dyn_IEAINLLJHOD();
    // Get instance field reference: private System.Single OKKAKDLGJKE
    [[deprecated("Use field access instead!")]] float& dyn_OKKAKDLGJKE();
    // Get instance field reference: private System.String BHHGMPLHEDC
    [[deprecated("Use field access instead!")]] ::StringW& dyn_BHHGMPLHEDC();
    // Get instance field reference: private UnityEngine.Collider BBOMOHLELBB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& dyn_BBOMOHLELBB();
    // private System.Void EKCEBLLPHGI(System.Single NKFNJPGCODJ)
    // Offset: 0x10A79CC
    void EKCEBLLPHGI(float NKFNJPGCODJ);
    // private System.Void LJHMJPAGEEP()
    // Offset: 0x10A7B5C
    void LJHMJPAGEEP();
    // private System.Void FAHDGOAALEM()
    // Offset: 0x10A7E20
    void FAHDGOAALEM();
    // private System.Void GJBKIFHAPHD(System.Single NKFNJPGCODJ)
    // Offset: 0x10A7E24
    void GJBKIFHAPHD(float NKFNJPGCODJ);
    // private System.Void NHADFEMILCC()
    // Offset: 0x10A7FB4
    void NHADFEMILCC();
    // private System.Void BBJGCNABFCG()
    // Offset: 0x10A807C
    void BBJGCNABFCG();
    // private System.Single JFIPEHGBEJK()
    // Offset: 0x10A8080
    float JFIPEHGBEJK();
    // public System.Void .ctor()
    // Offset: 0x10A81AC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AmbientLightChange* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::AmbientLightChange::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AmbientLightChange*, creationType>()));
    }
    // private System.Void CPCOJEEEKEH(System.Single NKFNJPGCODJ)
    // Offset: 0x10A81BC
    void CPCOJEEEKEH(float NKFNJPGCODJ);
    // private System.Void NCNBCFEBCAJ()
    // Offset: 0x10A834C
    void NCNBCFEBCAJ();
    // private System.Void MOEBOEAJLDE()
    // Offset: 0x10A85D4
    void MOEBOEAJLDE();
    // private System.Void LLALLGPLCGK(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x10A85D8
    void LLALLGPLCGK(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void BFEGNIBBLHE(System.Single NKFNJPGCODJ)
    // Offset: 0x10A8B2C
    void BFEGNIBBLHE(float NKFNJPGCODJ);
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x10A8CBC
    void CBMDGNKFPIO();
    // private System.Void EPGAAJCDFBK(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x10A8D84
    void EPGAAJCDFBK(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void CKBFMIDIIKH()
    // Offset: 0x10A9158
    void CKBFMIDIIKH();
    // private System.Single KGOKHAOJIAP()
    // Offset: 0x10A89FC
    float KGOKHAOJIAP();
    // private System.Void Update()
    // Offset: 0x10A93E0
    void Update();
    // private System.Single LHHJDKIPHBE()
    // Offset: 0x10AA228
    float LHHJDKIPHBE();
    // private System.Void FHCHFLKKKGM(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x10AA354
    void FHCHFLKKKGM(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void Start()
    // Offset: 0x10AA4AC
    void Start();
    // private System.Void KPALMIHCDPH()
    // Offset: 0x10AA574
    void KPALMIHCDPH();
    // private System.Void EBNFNLMHNGE()
    // Offset: 0x10AA800
    void EBNFNLMHNGE();
    // private System.Void IEOHKOCHOIL(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x10AB654
    void IEOHKOCHOIL(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void AFIACGLCIPB()
    // Offset: 0x10AB7AC
    void AFIACGLCIPB();
    // private System.Void IAMMHBJHDLM(System.Single NKFNJPGCODJ)
    // Offset: 0x10AB874
    void IAMMHBJHDLM(float NKFNJPGCODJ);
    // private System.Single EFAPKFJOFHC()
    // Offset: 0x10A88CC
    float EFAPKFJOFHC();
    // private System.Void MIGKNCENLJE(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x10AB358
    void MIGKNCENLJE(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void MADJBCMAKIL()
    // Offset: 0x10A7B60
    void MADJBCMAKIL();
    // private System.Void OnTriggerExit(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x10ABB34
    void OnTriggerExit(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void GBAFHBBNCJA(System.Single NKFNJPGCODJ)
    // Offset: 0x10A9DA8
    void GBAFHBBNCJA(float NKFNJPGCODJ);
    // private System.Void OnDestroy()
    // Offset: 0x10ABC8C
    void OnDestroy();
    // private System.Void GLNKPGBHPDE(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x10ABC90
    void GLNKPGBHPDE(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Single GFIEEKELCKF()
    // Offset: 0x10ABA04
    float GFIEEKELCKF();
    // private System.Void BEBMPKKJOAC(System.Single NKFNJPGCODJ)
    // Offset: 0x10ABF84
    void BEBMPKKJOAC(float NKFNJPGCODJ);
    // private System.Void KJCNGOKNHHL(System.Single NKFNJPGCODJ)
    // Offset: 0x10AB1C8
    void KJCNGOKNHHL(float NKFNJPGCODJ);
    // private System.Void JOOOIDGFCON()
    // Offset: 0x10A8EDC
    void JOOOIDGFCON();
    // private System.Void CODEKFLHLJG()
    // Offset: 0x10AC114
    void CODEKFLHLJG();
    // private System.Void OnTriggerEnter(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x10A9F38
    void OnTriggerEnter(::UnityEngine::Collider* GMCJEAMJJEP);
  }; // MagicalActual.AmbientLightChange
  #pragma pack(pop)
  static check_size<sizeof(AmbientLightChange), 112 + sizeof(::UnityEngine::Collider*)> __MagicalActual_AmbientLightChangeSizeCheck;
  static_assert(sizeof(AmbientLightChange) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::EKCEBLLPHGI
// Il2CppName: EKCEBLLPHGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(float)>(&MagicalActual::AmbientLightChange::EKCEBLLPHGI)> {
  static const MethodInfo* get() {
    static auto* NKFNJPGCODJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "EKCEBLLPHGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKFNJPGCODJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::LJHMJPAGEEP
// Il2CppName: LJHMJPAGEEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::LJHMJPAGEEP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "LJHMJPAGEEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::FAHDGOAALEM
// Il2CppName: FAHDGOAALEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::FAHDGOAALEM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "FAHDGOAALEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::GJBKIFHAPHD
// Il2CppName: GJBKIFHAPHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(float)>(&MagicalActual::AmbientLightChange::GJBKIFHAPHD)> {
  static const MethodInfo* get() {
    static auto* NKFNJPGCODJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "GJBKIFHAPHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKFNJPGCODJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::BBJGCNABFCG
// Il2CppName: BBJGCNABFCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::BBJGCNABFCG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "BBJGCNABFCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::JFIPEHGBEJK
// Il2CppName: JFIPEHGBEJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::JFIPEHGBEJK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "JFIPEHGBEJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::CPCOJEEEKEH
// Il2CppName: CPCOJEEEKEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(float)>(&MagicalActual::AmbientLightChange::CPCOJEEEKEH)> {
  static const MethodInfo* get() {
    static auto* NKFNJPGCODJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "CPCOJEEEKEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKFNJPGCODJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::NCNBCFEBCAJ
// Il2CppName: NCNBCFEBCAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::NCNBCFEBCAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "NCNBCFEBCAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::MOEBOEAJLDE
// Il2CppName: MOEBOEAJLDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::MOEBOEAJLDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "MOEBOEAJLDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::LLALLGPLCGK
// Il2CppName: LLALLGPLCGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(::UnityEngine::Collider*)>(&MagicalActual::AmbientLightChange::LLALLGPLCGK)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "LLALLGPLCGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::BFEGNIBBLHE
// Il2CppName: BFEGNIBBLHE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(float)>(&MagicalActual::AmbientLightChange::BFEGNIBBLHE)> {
  static const MethodInfo* get() {
    static auto* NKFNJPGCODJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "BFEGNIBBLHE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKFNJPGCODJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::EPGAAJCDFBK
// Il2CppName: EPGAAJCDFBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(::UnityEngine::Collider*)>(&MagicalActual::AmbientLightChange::EPGAAJCDFBK)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "EPGAAJCDFBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::CKBFMIDIIKH
// Il2CppName: CKBFMIDIIKH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::CKBFMIDIIKH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "CKBFMIDIIKH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::KGOKHAOJIAP
// Il2CppName: KGOKHAOJIAP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::KGOKHAOJIAP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "KGOKHAOJIAP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::LHHJDKIPHBE
// Il2CppName: LHHJDKIPHBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::LHHJDKIPHBE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "LHHJDKIPHBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::FHCHFLKKKGM
// Il2CppName: FHCHFLKKKGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(::UnityEngine::Collider*)>(&MagicalActual::AmbientLightChange::FHCHFLKKKGM)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "FHCHFLKKKGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::KPALMIHCDPH
// Il2CppName: KPALMIHCDPH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::KPALMIHCDPH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "KPALMIHCDPH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::EBNFNLMHNGE
// Il2CppName: EBNFNLMHNGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::EBNFNLMHNGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "EBNFNLMHNGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::IEOHKOCHOIL
// Il2CppName: IEOHKOCHOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(::UnityEngine::Collider*)>(&MagicalActual::AmbientLightChange::IEOHKOCHOIL)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "IEOHKOCHOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::IAMMHBJHDLM
// Il2CppName: IAMMHBJHDLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(float)>(&MagicalActual::AmbientLightChange::IAMMHBJHDLM)> {
  static const MethodInfo* get() {
    static auto* NKFNJPGCODJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "IAMMHBJHDLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKFNJPGCODJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::EFAPKFJOFHC
// Il2CppName: EFAPKFJOFHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::EFAPKFJOFHC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "EFAPKFJOFHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::MIGKNCENLJE
// Il2CppName: MIGKNCENLJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(::UnityEngine::Collider*)>(&MagicalActual::AmbientLightChange::MIGKNCENLJE)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "MIGKNCENLJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::MADJBCMAKIL
// Il2CppName: MADJBCMAKIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::MADJBCMAKIL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "MADJBCMAKIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::OnTriggerExit
// Il2CppName: OnTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(::UnityEngine::Collider*)>(&MagicalActual::AmbientLightChange::OnTriggerExit)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "OnTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::GBAFHBBNCJA
// Il2CppName: GBAFHBBNCJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(float)>(&MagicalActual::AmbientLightChange::GBAFHBBNCJA)> {
  static const MethodInfo* get() {
    static auto* NKFNJPGCODJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "GBAFHBBNCJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKFNJPGCODJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::GLNKPGBHPDE
// Il2CppName: GLNKPGBHPDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(::UnityEngine::Collider*)>(&MagicalActual::AmbientLightChange::GLNKPGBHPDE)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "GLNKPGBHPDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::GFIEEKELCKF
// Il2CppName: GFIEEKELCKF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::GFIEEKELCKF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "GFIEEKELCKF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::BEBMPKKJOAC
// Il2CppName: BEBMPKKJOAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(float)>(&MagicalActual::AmbientLightChange::BEBMPKKJOAC)> {
  static const MethodInfo* get() {
    static auto* NKFNJPGCODJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "BEBMPKKJOAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKFNJPGCODJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::KJCNGOKNHHL
// Il2CppName: KJCNGOKNHHL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(float)>(&MagicalActual::AmbientLightChange::KJCNGOKNHHL)> {
  static const MethodInfo* get() {
    static auto* NKFNJPGCODJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "KJCNGOKNHHL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKFNJPGCODJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::JOOOIDGFCON
// Il2CppName: JOOOIDGFCON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::JOOOIDGFCON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "JOOOIDGFCON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::CODEKFLHLJG
// Il2CppName: CODEKFLHLJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)()>(&MagicalActual::AmbientLightChange::CODEKFLHLJG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "CODEKFLHLJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AmbientLightChange::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AmbientLightChange::*)(::UnityEngine::Collider*)>(&MagicalActual::AmbientLightChange::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AmbientLightChange*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
