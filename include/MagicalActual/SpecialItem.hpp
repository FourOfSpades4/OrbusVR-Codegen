// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: SpecialItem
  class SpecialItem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::SpecialItem);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::SpecialItem*, "MagicalActual", "SpecialItem");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.SpecialItem
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD7C94
  class SpecialItem : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String requiredQuestFlag
    // Size: 0x8
    // Offset: 0x20
    ::StringW requiredQuestFlag;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String unlockJournalPages
    // Size: 0x8
    // Offset: 0x28
    ::StringW unlockJournalPages;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String addItemsToInventory
    // Size: 0x8
    // Offset: 0x30
    ::StringW addItemsToInventory;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String setPlayerFlags
    // Size: 0x8
    // Offset: 0x38
    ::StringW setPlayerFlags;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String giveQuest
    // Size: 0x8
    // Offset: 0x40
    ::StringW giveQuest;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String completeQuest
    // Size: 0x8
    // Offset: 0x48
    ::StringW completeQuest;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean dissolveAfterTrigger
    // Size: 0x1
    // Offset: 0x50
    bool dissolveAfterTrigger;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: dissolveAfterTrigger and: netKey
    char __padding7[0x7] = {};
    // public System.String netKey
    // Size: 0x8
    // Offset: 0x58
    ::StringW netKey;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public System.String requiredQuestFlag
    [[deprecated("Use field access instead!")]] ::StringW& dyn_requiredQuestFlag();
    // Get instance field reference: public System.String unlockJournalPages
    [[deprecated("Use field access instead!")]] ::StringW& dyn_unlockJournalPages();
    // Get instance field reference: public System.String addItemsToInventory
    [[deprecated("Use field access instead!")]] ::StringW& dyn_addItemsToInventory();
    // Get instance field reference: public System.String setPlayerFlags
    [[deprecated("Use field access instead!")]] ::StringW& dyn_setPlayerFlags();
    // Get instance field reference: public System.String giveQuest
    [[deprecated("Use field access instead!")]] ::StringW& dyn_giveQuest();
    // Get instance field reference: public System.String completeQuest
    [[deprecated("Use field access instead!")]] ::StringW& dyn_completeQuest();
    // Get instance field reference: public System.Boolean dissolveAfterTrigger
    [[deprecated("Use field access instead!")]] bool& dyn_dissolveAfterTrigger();
    // Get instance field reference: public System.String netKey
    [[deprecated("Use field access instead!")]] ::StringW& dyn_netKey();
    // public System.Void DMEJBCMHNJB()
    // Offset: 0x1082B54
    void DMEJBCMHNJB();
    // private System.Void PDFADDIOHNJ()
    // Offset: 0x1082C34
    void PDFADDIOHNJ();
    // public System.Void PMCDFKCFCAI()
    // Offset: 0x1082CE4
    void PMCDFKCFCAI();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x1082DC4
    void HKINNMLBMMG();
    // private System.Void NHHACOLKJEL()
    // Offset: 0x1082F48
    void NHHACOLKJEL();
    // private System.Void NFAPLIPHOOF()
    // Offset: 0x1082FF8
    void NFAPLIPHOOF();
    // private System.Void JNNACKKIHPH()
    // Offset: 0x10831A0
    void JNNACKKIHPH();
    // public System.Void POJPLKCGDBG()
    // Offset: 0x1083250
    void POJPLKCGDBG();
    // private System.Void CHABFFECLNN()
    // Offset: 0x1083330
    void CHABFFECLNN();
    // private System.Void CCLIJJHOIJC()
    // Offset: 0x10834D8
    void CCLIJJHOIJC();
    // private System.Void HLBNHIGMCIG()
    // Offset: 0x1083680
    void HLBNHIGMCIG();
    // private System.Void DissolveMe()
    // Offset: 0x1083828
    void DissolveMe();
    // public System.Void LALGOIKGLIO()
    // Offset: 0x10838D8
    void LALGOIKGLIO();
    // public System.Void KIMAKEDDFIJ()
    // Offset: 0x10839B8
    void KIMAKEDDFIJ();
    // private System.Void DENMOIGOIKJ()
    // Offset: 0x1083A98
    void DENMOIGOIKJ();
    // public System.Void HJMJEMFNCAA()
    // Offset: 0x1083B48
    void HJMJEMFNCAA();
    // public System.Void KLKOFOCEEBC()
    // Offset: 0x1083C28
    void KLKOFOCEEBC();
    // public System.Void LJHILPAKMEN()
    // Offset: 0x1083D08
    void LJHILPAKMEN();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x1083DE8
    void NEDFCIDMJBB();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x1083F6C
    void OACMGPBCPEL();
    // private System.Void Start()
    // Offset: 0x10840F0
    void Start();
    // private System.Void HPMOGFPIAHI()
    // Offset: 0x108426C
    void HPMOGFPIAHI();
    // public System.Void JPAPNIOHGOE()
    // Offset: 0x1084414
    void JPAPNIOHGOE();
    // private System.Void FPDEFOGMOPM()
    // Offset: 0x10844F4
    void FPDEFOGMOPM();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x10845A4
    void JENOIOBAEPG();
    // public System.Void TriggerMe()
    // Offset: 0x1084728
    void TriggerMe();
    // private System.Void DKFAKOCHGNP()
    // Offset: 0x1084804
    void DKFAKOCHGNP();
    // private System.Void KHDKFCPOFDN()
    // Offset: 0x10849AC
    void KHDKFCPOFDN();
    // private System.Void LPDBPDCIAFP()
    // Offset: 0x1084B54
    void LPDBPDCIAFP();
    // private System.Void NHADFEMILCC()
    // Offset: 0x1084CFC
    void NHADFEMILCC();
    // public System.Void NBIHOLLNPEB()
    // Offset: 0x1084E80
    void NBIHOLLNPEB();
    // private System.Void CACHAABGBKL()
    // Offset: 0x1084F60
    void CACHAABGBKL();
    // public System.Void .ctor()
    // Offset: 0x1085108
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SpecialItem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::SpecialItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SpecialItem*, creationType>()));
    }
    // private System.Void OMEONEHLCIC()
    // Offset: 0x1085178
    void OMEONEHLCIC();
    // public System.Void CAJDBDJMCBG()
    // Offset: 0x1085320
    void CAJDBDJMCBG();
    // private System.Void HNLMEBMOKOG()
    // Offset: 0x1085400
    void HNLMEBMOKOG();
    // private System.Void JNHNEBOHOIB()
    // Offset: 0x10855A8
    void JNHNEBOHOIB();
    // public System.Void JBMOFGNGJKC()
    // Offset: 0x108572C
    void JBMOFGNGJKC();
    // private System.Void GDFPKBPLIOO()
    // Offset: 0x108580C
    void GDFPKBPLIOO();
  }; // MagicalActual.SpecialItem
  #pragma pack(pop)
  static check_size<sizeof(SpecialItem), 88 + sizeof(::StringW)> __MagicalActual_SpecialItemSizeCheck;
  static_assert(sizeof(SpecialItem) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::SpecialItem::DMEJBCMHNJB
// Il2CppName: DMEJBCMHNJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::DMEJBCMHNJB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "DMEJBCMHNJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::PDFADDIOHNJ
// Il2CppName: PDFADDIOHNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::PDFADDIOHNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "PDFADDIOHNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::PMCDFKCFCAI
// Il2CppName: PMCDFKCFCAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::PMCDFKCFCAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "PMCDFKCFCAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::NHHACOLKJEL
// Il2CppName: NHHACOLKJEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::NHHACOLKJEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "NHHACOLKJEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::NFAPLIPHOOF
// Il2CppName: NFAPLIPHOOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::NFAPLIPHOOF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "NFAPLIPHOOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::JNNACKKIHPH
// Il2CppName: JNNACKKIHPH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::JNNACKKIHPH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "JNNACKKIHPH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::POJPLKCGDBG
// Il2CppName: POJPLKCGDBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::POJPLKCGDBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "POJPLKCGDBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::CHABFFECLNN
// Il2CppName: CHABFFECLNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::CHABFFECLNN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "CHABFFECLNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::CCLIJJHOIJC
// Il2CppName: CCLIJJHOIJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::CCLIJJHOIJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "CCLIJJHOIJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::HLBNHIGMCIG
// Il2CppName: HLBNHIGMCIG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::HLBNHIGMCIG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "HLBNHIGMCIG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::DissolveMe
// Il2CppName: DissolveMe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::DissolveMe)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "DissolveMe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::LALGOIKGLIO
// Il2CppName: LALGOIKGLIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::LALGOIKGLIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "LALGOIKGLIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::KIMAKEDDFIJ
// Il2CppName: KIMAKEDDFIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::KIMAKEDDFIJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "KIMAKEDDFIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::DENMOIGOIKJ
// Il2CppName: DENMOIGOIKJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::DENMOIGOIKJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "DENMOIGOIKJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::HJMJEMFNCAA
// Il2CppName: HJMJEMFNCAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::HJMJEMFNCAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "HJMJEMFNCAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::KLKOFOCEEBC
// Il2CppName: KLKOFOCEEBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::KLKOFOCEEBC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "KLKOFOCEEBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::LJHILPAKMEN
// Il2CppName: LJHILPAKMEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::LJHILPAKMEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "LJHILPAKMEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::HPMOGFPIAHI
// Il2CppName: HPMOGFPIAHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::HPMOGFPIAHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "HPMOGFPIAHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::JPAPNIOHGOE
// Il2CppName: JPAPNIOHGOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::JPAPNIOHGOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "JPAPNIOHGOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::FPDEFOGMOPM
// Il2CppName: FPDEFOGMOPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::FPDEFOGMOPM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "FPDEFOGMOPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::TriggerMe
// Il2CppName: TriggerMe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::TriggerMe)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "TriggerMe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::DKFAKOCHGNP
// Il2CppName: DKFAKOCHGNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::DKFAKOCHGNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "DKFAKOCHGNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::KHDKFCPOFDN
// Il2CppName: KHDKFCPOFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::KHDKFCPOFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "KHDKFCPOFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::LPDBPDCIAFP
// Il2CppName: LPDBPDCIAFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::LPDBPDCIAFP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "LPDBPDCIAFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::NBIHOLLNPEB
// Il2CppName: NBIHOLLNPEB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::NBIHOLLNPEB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "NBIHOLLNPEB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::CACHAABGBKL
// Il2CppName: CACHAABGBKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::CACHAABGBKL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "CACHAABGBKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::SpecialItem::OMEONEHLCIC
// Il2CppName: OMEONEHLCIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::OMEONEHLCIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "OMEONEHLCIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::CAJDBDJMCBG
// Il2CppName: CAJDBDJMCBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::CAJDBDJMCBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "CAJDBDJMCBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::HNLMEBMOKOG
// Il2CppName: HNLMEBMOKOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::HNLMEBMOKOG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "HNLMEBMOKOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::JNHNEBOHOIB
// Il2CppName: JNHNEBOHOIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::JNHNEBOHOIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "JNHNEBOHOIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::JBMOFGNGJKC
// Il2CppName: JBMOFGNGJKC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::JBMOFGNGJKC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "JBMOFGNGJKC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpecialItem::GDFPKBPLIOO
// Il2CppName: GDFPKBPLIOO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpecialItem::*)()>(&MagicalActual::SpecialItem::GDFPKBPLIOO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpecialItem*), "GDFPKBPLIOO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
