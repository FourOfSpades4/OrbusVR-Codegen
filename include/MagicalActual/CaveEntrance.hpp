// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: CaveEntrance
  class CaveEntrance;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::CaveEntrance);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::CaveEntrance*, "MagicalActual", "CaveEntrance");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.CaveEntrance
  // [TokenAttribute] Offset: FFFFFFFF
  class CaveEntrance : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.Single maxDistance
    // Size: 0x4
    // Offset: 0x18
    float maxDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single minDistance
    // Size: 0x4
    // Offset: 0x1C
    float minDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Material OGOPHHDGKGI
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Material* OGOPHHDGKGI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private UnityEngine.Color KFCIGBKIPFK
    // Size: 0x10
    // Offset: 0x28
    ::UnityEngine::Color KFCIGBKIPFK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Single maxDistance
    [[deprecated("Use field access instead!")]] float& dyn_maxDistance();
    // Get instance field reference: public System.Single minDistance
    [[deprecated("Use field access instead!")]] float& dyn_minDistance();
    // Get instance field reference: private UnityEngine.Material OGOPHHDGKGI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_OGOPHHDGKGI();
    // Get instance field reference: private UnityEngine.Color KFCIGBKIPFK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_KFCIGBKIPFK();
    // private System.Void Update()
    // Offset: 0x1A5E804
    void Update();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x1A5EA54
    void AFIACGLCIPB();
    // private System.Void HJKFJENIJFO()
    // Offset: 0x1A5EAF0
    void HJKFJENIJFO();
    // private System.Void JJNHCABMBIH()
    // Offset: 0x1A5EB8C
    void JJNHCABMBIH();
    // private System.Void NHADFEMILCC()
    // Offset: 0x1A5EDE4
    void NHADFEMILCC();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x1A5EE80
    void HKINNMLBMMG();
    // private System.Void FFMLBBOGEBO()
    // Offset: 0x1A5EF1C
    void FFMLBBOGEBO();
    // private System.Void MJKAGCAKHHO()
    // Offset: 0x1A5F170
    void MJKAGCAKHHO();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x1A5F3C8
    void EIIKFEMCNKM();
    // private System.Void LIFGLIHALIG()
    // Offset: 0x1A5F464
    void LIFGLIHALIG();
    // private System.Void AGDFOIFHGGG()
    // Offset: 0x1A5F6BC
    void AGDFOIFHGGG();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x1A5F914
    void KPOAAAHLGLA();
    // private System.Void APIMIOELFAJ()
    // Offset: 0x1A5F9B0
    void APIMIOELFAJ();
    // private System.Void LJOGIPIJIPF()
    // Offset: 0x1A5FA4C
    void LJOGIPIJIPF();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x1A5FCA4
    void PFABJJGAOMM();
    // public System.Void .ctor()
    // Offset: 0x1A5FD40
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CaveEntrance* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::CaveEntrance::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CaveEntrance*, creationType>()));
    }
    // private System.Void DMNMEKAJBNA()
    // Offset: 0x1A5FD48
    void DMNMEKAJBNA();
    // private System.Void EBNFNLMHNGE()
    // Offset: 0x1A5FF9C
    void EBNFNLMHNGE();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x1A601F4
    void CBMDGNKFPIO();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x1A60290
    void NEDFCIDMJBB();
    // private System.Void CHMCEGMCENL()
    // Offset: 0x1A6032C
    void CHMCEGMCENL();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x1A60584
    void BDEDGNGMHMN();
    // private System.Void JGPEKDOEPOC()
    // Offset: 0x1A60620
    void JGPEKDOEPOC();
    // private System.Void EFGJFMENOAL()
    // Offset: 0x1A60878
    void EFGJFMENOAL();
    // private System.Void PPKHOKCIJBL()
    // Offset: 0x1A60AD0
    void PPKHOKCIJBL();
    // private System.Void CMGMNHMIHFD()
    // Offset: 0x1A60D28
    void CMGMNHMIHFD();
    // private System.Void Start()
    // Offset: 0x1A60F80
    void Start();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x1A6101C
    void ABIHCGOKNCL();
    // private System.Void MHHFAOGFAPO()
    // Offset: 0x1A610B8
    void MHHFAOGFAPO();
    // private System.Void ABCHNNEJECC()
    // Offset: 0x1A61310
    void ABCHNNEJECC();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x1A61568
    void GHLPBOJJHNG();
    // private System.Void FBONHOOJHBG()
    // Offset: 0x1A61604
    void FBONHOOJHBG();
    // private System.Void PNKHLJDEJNA()
    // Offset: 0x1A616A0
    void PNKHLJDEJNA();
    // private System.Void GEJIJMPGALF()
    // Offset: 0x1A618F8
    void GEJIJMPGALF();
    // private System.Void GLPPOHKJANF()
    // Offset: 0x1A61B50
    void GLPPOHKJANF();
    // private System.Void DHCNJHAMIJO()
    // Offset: 0x1A61DA8
    void DHCNJHAMIJO();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x1A62000
    void GPFBGGFPINB();
    // private System.Void DEGCMEJJNJI()
    // Offset: 0x1A6209C
    void DEGCMEJJNJI();
    // private System.Void APMNGLNBFNP()
    // Offset: 0x1A62138
    void APMNGLNBFNP();
    // private System.Void BJMMJNDCPLF()
    // Offset: 0x1A621D4
    void BJMMJNDCPLF();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x1A6242C
    void IDOCJGNLNFL();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x1A624C8
    void EPCHNEGNKNF();
  }; // MagicalActual.CaveEntrance
  #pragma pack(pop)
  static check_size<sizeof(CaveEntrance), 40 + sizeof(::UnityEngine::Color)> __MagicalActual_CaveEntranceSizeCheck;
  static_assert(sizeof(CaveEntrance) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::HJKFJENIJFO
// Il2CppName: HJKFJENIJFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::HJKFJENIJFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "HJKFJENIJFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::JJNHCABMBIH
// Il2CppName: JJNHCABMBIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::JJNHCABMBIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "JJNHCABMBIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::FFMLBBOGEBO
// Il2CppName: FFMLBBOGEBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::FFMLBBOGEBO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "FFMLBBOGEBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::MJKAGCAKHHO
// Il2CppName: MJKAGCAKHHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::MJKAGCAKHHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "MJKAGCAKHHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::LIFGLIHALIG
// Il2CppName: LIFGLIHALIG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::LIFGLIHALIG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "LIFGLIHALIG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::AGDFOIFHGGG
// Il2CppName: AGDFOIFHGGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::AGDFOIFHGGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "AGDFOIFHGGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::APIMIOELFAJ
// Il2CppName: APIMIOELFAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::APIMIOELFAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "APIMIOELFAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::LJOGIPIJIPF
// Il2CppName: LJOGIPIJIPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::LJOGIPIJIPF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "LJOGIPIJIPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::DMNMEKAJBNA
// Il2CppName: DMNMEKAJBNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::DMNMEKAJBNA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "DMNMEKAJBNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::EBNFNLMHNGE
// Il2CppName: EBNFNLMHNGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::EBNFNLMHNGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "EBNFNLMHNGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::CHMCEGMCENL
// Il2CppName: CHMCEGMCENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::CHMCEGMCENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "CHMCEGMCENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::JGPEKDOEPOC
// Il2CppName: JGPEKDOEPOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::JGPEKDOEPOC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "JGPEKDOEPOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::EFGJFMENOAL
// Il2CppName: EFGJFMENOAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::EFGJFMENOAL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "EFGJFMENOAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::PPKHOKCIJBL
// Il2CppName: PPKHOKCIJBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::PPKHOKCIJBL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "PPKHOKCIJBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::CMGMNHMIHFD
// Il2CppName: CMGMNHMIHFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::CMGMNHMIHFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "CMGMNHMIHFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::MHHFAOGFAPO
// Il2CppName: MHHFAOGFAPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::MHHFAOGFAPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "MHHFAOGFAPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::ABCHNNEJECC
// Il2CppName: ABCHNNEJECC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::ABCHNNEJECC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "ABCHNNEJECC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::FBONHOOJHBG
// Il2CppName: FBONHOOJHBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::FBONHOOJHBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "FBONHOOJHBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::PNKHLJDEJNA
// Il2CppName: PNKHLJDEJNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::PNKHLJDEJNA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "PNKHLJDEJNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::GEJIJMPGALF
// Il2CppName: GEJIJMPGALF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::GEJIJMPGALF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "GEJIJMPGALF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::GLPPOHKJANF
// Il2CppName: GLPPOHKJANF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::GLPPOHKJANF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "GLPPOHKJANF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::DHCNJHAMIJO
// Il2CppName: DHCNJHAMIJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::DHCNJHAMIJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "DHCNJHAMIJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::DEGCMEJJNJI
// Il2CppName: DEGCMEJJNJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::DEGCMEJJNJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "DEGCMEJJNJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::APMNGLNBFNP
// Il2CppName: APMNGLNBFNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::APMNGLNBFNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "APMNGLNBFNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::BJMMJNDCPLF
// Il2CppName: BJMMJNDCPLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::BJMMJNDCPLF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "BJMMJNDCPLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CaveEntrance::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CaveEntrance::*)()>(&MagicalActual::CaveEntrance::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CaveEntrance*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
