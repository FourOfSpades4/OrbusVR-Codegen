// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_OrbBoss
  class M_OrbBoss;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_OrbBoss);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_OrbBoss*, "MagicalActual", "M_OrbBoss");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x59
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_OrbBoss
  // [TokenAttribute] Offset: FFFFFFFF
  class M_OrbBoss : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private UnityEngine.Vector3 PPHJBPKCMBF
    // Size: 0xC
    // Offset: 0x30
    ::UnityEngine::Vector3 PPHJBPKCMBF;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: PPHJBPKCMBF and: orbPrefab
    char __padding3[0x4] = {};
    // public UnityEngine.GameObject[] orbPrefab
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::UnityEngine::GameObject*> orbPrefab;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject orbFirePoint
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* orbFirePoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject[] explodeVfx
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<::UnityEngine::GameObject*> explodeVfx;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // private System.Byte COPFOAIDECC
    // Size: 0x1
    // Offset: 0x58
    uint8_t COPFOAIDECC;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private UnityEngine.Vector3 PPHJBPKCMBF
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_PPHJBPKCMBF();
    // Get instance field reference: public UnityEngine.GameObject[] orbPrefab
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_orbPrefab();
    // Get instance field reference: public UnityEngine.GameObject orbFirePoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_orbFirePoint();
    // Get instance field reference: public UnityEngine.GameObject[] explodeVfx
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_explodeVfx();
    // Get instance field reference: private System.Byte COPFOAIDECC
    [[deprecated("Use field access instead!")]] uint8_t& dyn_COPFOAIDECC();
    // private System.Void PHLBHIAFKCB(System.Object OMLPNCLFFMJ)
    // Offset: 0x2701460
    void PHLBHIAFKCB(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GIDLICEIJPF(System.Object OMLPNCLFFMJ)
    // Offset: 0x2701584
    void GIDLICEIJPF(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GKIOLADOCOK()
    // Offset: 0x27015EC
    void GKIOLADOCOK();
    // private System.Void FNFAOONPCCJ()
    // Offset: 0x2701644
    void FNFAOONPCCJ();
    // private System.Void JKEAKOIONIE()
    // Offset: 0x2701BF0
    void JKEAKOIONIE();
    // private System.Void AEJBJBLODBJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x27021A0
    void AEJBJBLODBJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Start()
    // Offset: 0x2702208
    void Start();
    // public System.Void .ctor()
    // Offset: 0x2702260
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_OrbBoss* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_OrbBoss::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_OrbBoss*, creationType>()));
    }
    // private System.Void CLFGGLOPGLE(System.Object OMLPNCLFFMJ)
    // Offset: 0x27022B8
    void CLFGGLOPGLE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void CCIDPNCNDBI()
    // Offset: 0x27023DC
    void CCIDPNCNDBI();
    // private System.Void DFKNDJPFOHB(System.Object OMLPNCLFFMJ)
    // Offset: 0x2702580
    void DFKNDJPFOHB(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void JFHEHHDIAHE()
    // Offset: 0x27025E8
    void JFHEHHDIAHE();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x2702B88
    void NNDKJCJFIAK();
    // private System.Void OAKDFBMJCIJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x2702BE0
    void OAKDFBMJCIJ(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2702D04
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void IKOOLBFKGIA()
    // Offset: 0x2702E1C
    void IKOOLBFKGIA();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x2702FC0
    void GECHLDPLPCC();
    // private System.Void BDMCDCOPJGO(System.Object OMLPNCLFFMJ)
    // Offset: 0x2703018
    void BDMCDCOPJGO(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x2703080
    void ABIHCGOKNCL();
    // private System.Void BPODDKABMJF(System.Object OMLPNCLFFMJ)
    // Offset: 0x27030D8
    void BPODDKABMJF(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void EBJDLAIJJJE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2703140
    void EBJDLAIJJJE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void PLPDCBMCEJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2703258
    void PLPDCBMCEJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GBOBPIDFAAI(System.Object OMLPNCLFFMJ)
    // Offset: 0x2703370
    void GBOBPIDFAAI(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void HFPLONBGDDP(System.Object OMLPNCLFFMJ)
    // Offset: 0x27033D8
    void HFPLONBGDDP(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NAAEEONIDCG()
    // Offset: 0x27034FC
    void NAAEEONIDCG();
    // private System.Void HBCAHLCJFJI(System.Object OMLPNCLFFMJ)
    // Offset: 0x270369C
    void HBCAHLCJFJI(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void OrbExplode()
    // Offset: 0x27037C0
    void OrbExplode();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x270395C
    void EIIKFEMCNKM();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x27039B4
    void PFABJJGAOMM();
  }; // MagicalActual.M_OrbBoss
  #pragma pack(pop)
  static check_size<sizeof(M_OrbBoss), 88 + sizeof(uint8_t)> __MagicalActual_M_OrbBossSizeCheck;
  static_assert(sizeof(M_OrbBoss) == 0x59);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::PHLBHIAFKCB
// Il2CppName: PHLBHIAFKCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::Il2CppObject*)>(&MagicalActual::M_OrbBoss::PHLBHIAFKCB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "PHLBHIAFKCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::GIDLICEIJPF
// Il2CppName: GIDLICEIJPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::Il2CppObject*)>(&MagicalActual::M_OrbBoss::GIDLICEIJPF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "GIDLICEIJPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::FNFAOONPCCJ
// Il2CppName: FNFAOONPCCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::FNFAOONPCCJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "FNFAOONPCCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::JKEAKOIONIE
// Il2CppName: JKEAKOIONIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::JKEAKOIONIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "JKEAKOIONIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::AEJBJBLODBJ
// Il2CppName: AEJBJBLODBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::Il2CppObject*)>(&MagicalActual::M_OrbBoss::AEJBJBLODBJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "AEJBJBLODBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::CLFGGLOPGLE
// Il2CppName: CLFGGLOPGLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::Il2CppObject*)>(&MagicalActual::M_OrbBoss::CLFGGLOPGLE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "CLFGGLOPGLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::CCIDPNCNDBI
// Il2CppName: CCIDPNCNDBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::CCIDPNCNDBI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "CCIDPNCNDBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::DFKNDJPFOHB
// Il2CppName: DFKNDJPFOHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::Il2CppObject*)>(&MagicalActual::M_OrbBoss::DFKNDJPFOHB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "DFKNDJPFOHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::JFHEHHDIAHE
// Il2CppName: JFHEHHDIAHE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::JFHEHHDIAHE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "JFHEHHDIAHE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::OAKDFBMJCIJ
// Il2CppName: OAKDFBMJCIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::Il2CppObject*)>(&MagicalActual::M_OrbBoss::OAKDFBMJCIJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "OAKDFBMJCIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_OrbBoss::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::IKOOLBFKGIA
// Il2CppName: IKOOLBFKGIA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::IKOOLBFKGIA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "IKOOLBFKGIA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::BDMCDCOPJGO
// Il2CppName: BDMCDCOPJGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::Il2CppObject*)>(&MagicalActual::M_OrbBoss::BDMCDCOPJGO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "BDMCDCOPJGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::BPODDKABMJF
// Il2CppName: BPODDKABMJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::Il2CppObject*)>(&MagicalActual::M_OrbBoss::BPODDKABMJF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "BPODDKABMJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::EBJDLAIJJJE
// Il2CppName: EBJDLAIJJJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_OrbBoss::EBJDLAIJJJE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "EBJDLAIJJJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::PLPDCBMCEJF
// Il2CppName: PLPDCBMCEJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_OrbBoss::PLPDCBMCEJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "PLPDCBMCEJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::GBOBPIDFAAI
// Il2CppName: GBOBPIDFAAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::Il2CppObject*)>(&MagicalActual::M_OrbBoss::GBOBPIDFAAI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "GBOBPIDFAAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::HFPLONBGDDP
// Il2CppName: HFPLONBGDDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::Il2CppObject*)>(&MagicalActual::M_OrbBoss::HFPLONBGDDP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "HFPLONBGDDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::NAAEEONIDCG
// Il2CppName: NAAEEONIDCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::NAAEEONIDCG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "NAAEEONIDCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::HBCAHLCJFJI
// Il2CppName: HBCAHLCJFJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)(::Il2CppObject*)>(&MagicalActual::M_OrbBoss::HBCAHLCJFJI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "HBCAHLCJFJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::OrbExplode
// Il2CppName: OrbExplode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::OrbExplode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "OrbExplode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_OrbBoss::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_OrbBoss::*)()>(&MagicalActual::M_OrbBoss::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_OrbBoss*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
