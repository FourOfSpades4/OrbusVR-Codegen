// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Wildlife
  class Wildlife;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Wildlife);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Wildlife*, "MagicalActual", "Wildlife");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Wildlife
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4278
  class Wildlife : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean skittish
    // Size: 0x1
    // Offset: 0x30
    bool skittish;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public System.Boolean skittish
    [[deprecated("Use field access instead!")]] bool& dyn_skittish();
    // public System.Void DBOKLBMPMJO()
    // Offset: 0xF4C504
    void DBOKLBMPMJO();
    // public System.Void HMIDAAAHFCB()
    // Offset: 0xF4C508
    void HMIDAAAHFCB();
    // private System.Void GPFBGGFPINB()
    // Offset: 0xF4C50C
    void GPFBGGFPINB();
    // public System.Void BIIPJEPNIBH()
    // Offset: 0xF4C564
    void BIIPJEPNIBH();
    // public System.Void KIBDAOLFNJM()
    // Offset: 0xF4C568
    void KIBDAOLFNJM();
    // public System.Void JCOFJKJMOAA()
    // Offset: 0xF4C56C
    void JCOFJKJMOAA();
    // private System.Void FNGLOIECKDG()
    // Offset: 0xF4C570
    void FNGLOIECKDG();
    // public System.Void KDPEOPPDLLP()
    // Offset: 0xF4C5C8
    void KDPEOPPDLLP();
    // public System.Void KLPLAHINIGH()
    // Offset: 0xF4C5CC
    void KLPLAHINIGH();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0xF4C5D0
    void KPOAAAHLGLA();
    // public System.Void JFBOMHHGFDN()
    // Offset: 0xF4C628
    void JFBOMHHGFDN();
    // public System.Void GLJFFHNKKPI()
    // Offset: 0xF4C62C
    void GLJFFHNKKPI();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0xF4C630
    void EPCHNEGNKNF();
    // public System.Void MKAECMFKIEN()
    // Offset: 0xF4C688
    void MKAECMFKIEN();
    // private System.Void Start()
    // Offset: 0xF4C68C
    void Start();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0xF4C6E4
    void BDEDGNGMHMN();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0xF4C73C
    void DFCOAPEIKLN();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0xF4C794
    void LPLGKBGLPOK();
    // public System.Void GHHAMAIIFFG()
    // Offset: 0xF4C7EC
    void GHHAMAIIFFG();
    // private System.Void NHADFEMILCC()
    // Offset: 0xF4C7F0
    void NHADFEMILCC();
    // public System.Void Slash()
    // Offset: 0xF4C848
    void Slash();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0xF4C84C
    void NNDKJCJFIAK();
    // private System.Void APIMIOELFAJ()
    // Offset: 0xF4C8A4
    void APIMIOELFAJ();
    // public System.Void JMPBEJDKDGJ()
    // Offset: 0xF4C8FC
    void JMPBEJDKDGJ();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0xF4C900
    void FGIFGGNGKPK();
    // public System.Void DIDADMBDAAK()
    // Offset: 0xF4C958
    void DIDADMBDAAK();
    // public System.Void CIGIPMPLKGF()
    // Offset: 0xF4C95C
    void CIGIPMPLKGF();
    // public System.Void HLGKLABMHHD()
    // Offset: 0xF4C960
    void HLGKLABMHHD();
    // public System.Void CEPPICBNJOI()
    // Offset: 0xF4C964
    void CEPPICBNJOI();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0xF4C968
    void PBEMGGBBDCK();
    // private System.Void GECHLDPLPCC()
    // Offset: 0xF4C9C0
    void GECHLDPLPCC();
    // public System.Void .ctor()
    // Offset: 0xF4CA18
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Wildlife* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Wildlife::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Wildlife*, creationType>()));
    }
    // private System.Void AFIACGLCIPB()
    // Offset: 0xF4CA70
    void AFIACGLCIPB();
    // private System.Void AKGFEENGKJD()
    // Offset: 0xF4CAC8
    void AKGFEENGKJD();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0xF4CB20
    void DGJGAFKDIDK();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0xF4CB78
    void NEDFCIDMJBB();
    // public System.Void MMGEIKLBBOH()
    // Offset: 0xF4CBD0
    void MMGEIKLBBOH();
    // public System.Void OMFMIKPMPEL()
    // Offset: 0xF4CBD4
    void OMFMIKPMPEL();
  }; // MagicalActual.Wildlife
  #pragma pack(pop)
  static check_size<sizeof(Wildlife), 48 + sizeof(bool)> __MagicalActual_WildlifeSizeCheck;
  static_assert(sizeof(Wildlife) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Wildlife::DBOKLBMPMJO
// Il2CppName: DBOKLBMPMJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::DBOKLBMPMJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "DBOKLBMPMJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::HMIDAAAHFCB
// Il2CppName: HMIDAAAHFCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::HMIDAAAHFCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "HMIDAAAHFCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::BIIPJEPNIBH
// Il2CppName: BIIPJEPNIBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::BIIPJEPNIBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "BIIPJEPNIBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::KIBDAOLFNJM
// Il2CppName: KIBDAOLFNJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::KIBDAOLFNJM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "KIBDAOLFNJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::JCOFJKJMOAA
// Il2CppName: JCOFJKJMOAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::JCOFJKJMOAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "JCOFJKJMOAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::KDPEOPPDLLP
// Il2CppName: KDPEOPPDLLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::KDPEOPPDLLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "KDPEOPPDLLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::KLPLAHINIGH
// Il2CppName: KLPLAHINIGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::KLPLAHINIGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "KLPLAHINIGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::JFBOMHHGFDN
// Il2CppName: JFBOMHHGFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::JFBOMHHGFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "JFBOMHHGFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::GLJFFHNKKPI
// Il2CppName: GLJFFHNKKPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::GLJFFHNKKPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "GLJFFHNKKPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::MKAECMFKIEN
// Il2CppName: MKAECMFKIEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::MKAECMFKIEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "MKAECMFKIEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::GHHAMAIIFFG
// Il2CppName: GHHAMAIIFFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::GHHAMAIIFFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "GHHAMAIIFFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::APIMIOELFAJ
// Il2CppName: APIMIOELFAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::APIMIOELFAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "APIMIOELFAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::JMPBEJDKDGJ
// Il2CppName: JMPBEJDKDGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::JMPBEJDKDGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "JMPBEJDKDGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::DIDADMBDAAK
// Il2CppName: DIDADMBDAAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::DIDADMBDAAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "DIDADMBDAAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::CIGIPMPLKGF
// Il2CppName: CIGIPMPLKGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::CIGIPMPLKGF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "CIGIPMPLKGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::HLGKLABMHHD
// Il2CppName: HLGKLABMHHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::HLGKLABMHHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "HLGKLABMHHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::CEPPICBNJOI
// Il2CppName: CEPPICBNJOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::CEPPICBNJOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "CEPPICBNJOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Wildlife::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::MMGEIKLBBOH
// Il2CppName: MMGEIKLBBOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::MMGEIKLBBOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "MMGEIKLBBOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Wildlife::OMFMIKPMPEL
// Il2CppName: OMFMIKPMPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Wildlife::*)()>(&MagicalActual::Wildlife::OMFMIKPMPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Wildlife*), "OMFMIKPMPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
