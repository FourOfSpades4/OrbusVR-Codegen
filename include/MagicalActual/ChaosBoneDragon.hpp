// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: AudioSource
  class AudioSource;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ChaosBoneDragon
  class ChaosBoneDragon;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ChaosBoneDragon);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ChaosBoneDragon*, "MagicalActual", "ChaosBoneDragon");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x81
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ChaosBoneDragon
  // [TokenAttribute] Offset: FFFFFFFF
  class ChaosBoneDragon : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private UnityEngine.GameObject ChaosStormObject
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* ChaosStormObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject CEHDIFPDGDI
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* CEHDIFPDGDI;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject teleportVFX
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* teleportVFX;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject healthBar
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* healthBar;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Transform scalar
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Transform* scalar;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.AudioSource roarsfx
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::AudioSource* roarsfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    // private UnityEngine.AudioSource implodesfx
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::AudioSource* implodesfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    // private System.Boolean JCCILHIBOBO
    // Size: 0x1
    // Offset: 0x60
    bool JCCILHIBOBO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: JCCILHIBOBO and: GCLKDLJHJEI
    char __padding9[0x3] = {};
    // private UnityEngine.Vector3 GCLKDLJHJEI
    // Size: 0xC
    // Offset: 0x64
    ::UnityEngine::Vector3 GCLKDLJHJEI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 AEPLPJKOEHP
    // Size: 0xC
    // Offset: 0x70
    ::UnityEngine::Vector3 AEPLPJKOEHP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single LEPDCJMEJHH
    // Size: 0x4
    // Offset: 0x7C
    float LEPDCJMEJHH;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean NMADJDCJBIJ
    // Size: 0x1
    // Offset: 0x80
    bool NMADJDCJBIJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private UnityEngine.GameObject ChaosStormObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ChaosStormObject();
    // Get instance field reference: private UnityEngine.GameObject CEHDIFPDGDI
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_CEHDIFPDGDI();
    // Get instance field reference: private UnityEngine.GameObject teleportVFX
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_teleportVFX();
    // Get instance field reference: private UnityEngine.GameObject healthBar
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_healthBar();
    // Get instance field reference: private UnityEngine.Transform scalar
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_scalar();
    // Get instance field reference: private UnityEngine.AudioSource roarsfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& dyn_roarsfx();
    // Get instance field reference: private UnityEngine.AudioSource implodesfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& dyn_implodesfx();
    // Get instance field reference: private System.Boolean JCCILHIBOBO
    [[deprecated("Use field access instead!")]] bool& dyn_JCCILHIBOBO();
    // Get instance field reference: private UnityEngine.Vector3 GCLKDLJHJEI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_GCLKDLJHJEI();
    // Get instance field reference: private UnityEngine.Vector3 AEPLPJKOEHP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_AEPLPJKOEHP();
    // Get instance field reference: private System.Single LEPDCJMEJHH
    [[deprecated("Use field access instead!")]] float& dyn_LEPDCJMEJHH();
    // Get instance field reference: private System.Boolean NMADJDCJBIJ
    [[deprecated("Use field access instead!")]] bool& dyn_NMADJDCJBIJ();
    // private System.Void FEIGDJNEHBG()
    // Offset: 0x1A63F20
    void FEIGDJNEHBG();
    // public System.Void OAMOHIMHKEK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A64504
    void OAMOHIMHKEK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A64608
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EDHMJHFPJBG()
    // Offset: 0x1A6470C
    void EDHMJHFPJBG();
    // private System.Void FPEOOCOPDLM()
    // Offset: 0x1A647C8
    void FPEOOCOPDLM();
    // private System.Void IFHNBHDAODG(System.Boolean IMEHPLLPCAH)
    // Offset: 0x1A648F0
    void IFHNBHDAODG(bool IMEHPLLPCAH);
    // public System.Void JMKCIPLJHEO()
    // Offset: 0x1A64B18
    void JMKCIPLJHEO();
    // public System.Void DKDBFFDLADP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A64DAC
    void DKDBFFDLADP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void NAJMKGKCCEN()
    // Offset: 0x1A64148
    void NAJMKGKCCEN();
    // private System.Void LDOENDADOLJ(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A64EB0
    void LDOENDADOLJ(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void HMEAMBFNALA()
    // Offset: 0x1A6512C
    void HMEAMBFNALA();
    // public System.Void KHOMLKJBDGE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A65254
    void KHOMLKJBDGE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A65358
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void HHEIJCENFFE()
    // Offset: 0x1A6545C
    void HHEIJCENFFE();
    // private System.Void MOLIOMLHJPL(System.Boolean IMEHPLLPCAH)
    // Offset: 0x1A65640
    void MOLIOMLHJPL(bool IMEHPLLPCAH);
    // private System.Void CBDFKEDNIFF(System.Boolean IMEHPLLPCAH)
    // Offset: 0x1A64F7C
    void CBDFKEDNIFF(bool IMEHPLLPCAH);
    // private System.Void NPJNPEKGDLI()
    // Offset: 0x1A65584
    void NPJNPEKGDLI();
    // public System.Void NIKPKEPNFND()
    // Offset: 0x1A657A8
    void NIKPKEPNFND();
    // public System.Void Teleport()
    // Offset: 0x1A650E8
    void Teleport();
    // private System.Void IJNCDFNNLLH()
    // Offset: 0x1A64A5C
    void IJNCDFNNLLH();
    // private System.Void KJPKCIGFOHH()
    // Offset: 0x1A65D08
    void KJPKCIGFOHH();
    // public System.Void OCBMKOANMCN()
    // Offset: 0x1A65DC4
    void OCBMKOANMCN();
    // private System.Void ACLCALIMEDD()
    // Offset: 0x1A66058
    void ACLCALIMEDD();
    // private System.Void JOCCGDCHPCP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A66114
    void JOCCGDCHPCP(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void ACGOOCJAFKD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A661E0
    void ACGOOCJAFKD(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void Update()
    // Offset: 0x1A662AC
    void Update();
    // public System.Void KPJPAFNDOAP()
    // Offset: 0x1A657EC
    void KPJPAFNDOAP();
    // public System.Void AGKHMBHBNFM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A665E4
    void AGKHMBHBNFM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void .ctor()
    // Offset: 0x1A666E8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ChaosBoneDragon* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ChaosBoneDragon::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ChaosBoneDragon*, creationType>()));
    }
    // private System.Void ANCNLJJBGHC()
    // Offset: 0x1A664BC
    void ANCNLJJBGHC();
    // public System.Void TeleportVFX()
    // Offset: 0x1A65A80
    void TeleportVFX();
    // private System.Void BHNFALANEBO()
    // Offset: 0x1A643DC
    void BHNFALANEBO();
    // public System.Void KHLOECMENML()
    // Offset: 0x1A667AC
    void KHLOECMENML();
    // private System.Void BJMMJNDCPLF()
    // Offset: 0x1A667EC
    void BJMMJNDCPLF();
  }; // MagicalActual.ChaosBoneDragon
  #pragma pack(pop)
  static check_size<sizeof(ChaosBoneDragon), 128 + sizeof(bool)> __MagicalActual_ChaosBoneDragonSizeCheck;
  static_assert(sizeof(ChaosBoneDragon) == 0x81);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::FEIGDJNEHBG
// Il2CppName: FEIGDJNEHBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::FEIGDJNEHBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "FEIGDJNEHBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::OAMOHIMHKEK
// Il2CppName: OAMOHIMHKEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ChaosBoneDragon::OAMOHIMHKEK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "OAMOHIMHKEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ChaosBoneDragon::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::EDHMJHFPJBG
// Il2CppName: EDHMJHFPJBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::EDHMJHFPJBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "EDHMJHFPJBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::FPEOOCOPDLM
// Il2CppName: FPEOOCOPDLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::FPEOOCOPDLM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "FPEOOCOPDLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::IFHNBHDAODG
// Il2CppName: IFHNBHDAODG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(bool)>(&MagicalActual::ChaosBoneDragon::IFHNBHDAODG)> {
  static const MethodInfo* get() {
    static auto* IMEHPLLPCAH = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "IFHNBHDAODG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IMEHPLLPCAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::JMKCIPLJHEO
// Il2CppName: JMKCIPLJHEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::JMKCIPLJHEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "JMKCIPLJHEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::DKDBFFDLADP
// Il2CppName: DKDBFFDLADP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ChaosBoneDragon::DKDBFFDLADP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "DKDBFFDLADP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::NAJMKGKCCEN
// Il2CppName: NAJMKGKCCEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::NAJMKGKCCEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "NAJMKGKCCEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::LDOENDADOLJ
// Il2CppName: LDOENDADOLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(::System::Collections::ArrayList*)>(&MagicalActual::ChaosBoneDragon::LDOENDADOLJ)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "LDOENDADOLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::HMEAMBFNALA
// Il2CppName: HMEAMBFNALA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::HMEAMBFNALA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "HMEAMBFNALA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::KHOMLKJBDGE
// Il2CppName: KHOMLKJBDGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ChaosBoneDragon::KHOMLKJBDGE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "KHOMLKJBDGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ChaosBoneDragon::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::HHEIJCENFFE
// Il2CppName: HHEIJCENFFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::HHEIJCENFFE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "HHEIJCENFFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::MOLIOMLHJPL
// Il2CppName: MOLIOMLHJPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(bool)>(&MagicalActual::ChaosBoneDragon::MOLIOMLHJPL)> {
  static const MethodInfo* get() {
    static auto* IMEHPLLPCAH = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "MOLIOMLHJPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IMEHPLLPCAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::CBDFKEDNIFF
// Il2CppName: CBDFKEDNIFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(bool)>(&MagicalActual::ChaosBoneDragon::CBDFKEDNIFF)> {
  static const MethodInfo* get() {
    static auto* IMEHPLLPCAH = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "CBDFKEDNIFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IMEHPLLPCAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::NPJNPEKGDLI
// Il2CppName: NPJNPEKGDLI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::NPJNPEKGDLI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "NPJNPEKGDLI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::NIKPKEPNFND
// Il2CppName: NIKPKEPNFND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::NIKPKEPNFND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "NIKPKEPNFND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::Teleport
// Il2CppName: Teleport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::Teleport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "Teleport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::IJNCDFNNLLH
// Il2CppName: IJNCDFNNLLH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::IJNCDFNNLLH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "IJNCDFNNLLH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::KJPKCIGFOHH
// Il2CppName: KJPKCIGFOHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::KJPKCIGFOHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "KJPKCIGFOHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::OCBMKOANMCN
// Il2CppName: OCBMKOANMCN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::OCBMKOANMCN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "OCBMKOANMCN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::ACLCALIMEDD
// Il2CppName: ACLCALIMEDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::ACLCALIMEDD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "ACLCALIMEDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::JOCCGDCHPCP
// Il2CppName: JOCCGDCHPCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(::System::Collections::ArrayList*)>(&MagicalActual::ChaosBoneDragon::JOCCGDCHPCP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "JOCCGDCHPCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::ACGOOCJAFKD
// Il2CppName: ACGOOCJAFKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(::System::Collections::ArrayList*)>(&MagicalActual::ChaosBoneDragon::ACGOOCJAFKD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "ACGOOCJAFKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::KPJPAFNDOAP
// Il2CppName: KPJPAFNDOAP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::KPJPAFNDOAP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "KPJPAFNDOAP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::AGKHMBHBNFM
// Il2CppName: AGKHMBHBNFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ChaosBoneDragon::AGKHMBHBNFM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "AGKHMBHBNFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::ANCNLJJBGHC
// Il2CppName: ANCNLJJBGHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::ANCNLJJBGHC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "ANCNLJJBGHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::TeleportVFX
// Il2CppName: TeleportVFX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::TeleportVFX)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "TeleportVFX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::BHNFALANEBO
// Il2CppName: BHNFALANEBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::BHNFALANEBO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "BHNFALANEBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::KHLOECMENML
// Il2CppName: KHLOECMENML
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::KHLOECMENML)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "KHLOECMENML", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosBoneDragon::BJMMJNDCPLF
// Il2CppName: BJMMJNDCPLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosBoneDragon::*)()>(&MagicalActual::ChaosBoneDragon::BJMMJNDCPLF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosBoneDragon*), "BJMMJNDCPLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
