// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ShamanWolf
  class ShamanWolf;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ShamanWolf);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ShamanWolf*, "MagicalActual", "ShamanWolf");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ShamanWolf
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4024
  class ShamanWolf : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x30
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // public System.Void EBJDLAIJJJE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C02130
    void EBJDLAIJJJE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void LMGJADIMGHC()
    // Offset: 0x1C02138
    void LMGJADIMGHC();
    // private System.Void MIGCHKHOGEM()
    // Offset: 0x1C0213C
    void MIGCHKHOGEM();
    // private System.Void PDNDOHBAMEK()
    // Offset: 0x1C02140
    void PDNDOHBAMEK();
    // public System.Void GLJFFHNKKPI()
    // Offset: 0x1C02144
    void GLJFFHNKKPI();
    // public System.Void IOOBCJAJKCJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C02368
    void IOOBCJAJKCJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C02370
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void HMCPNNAOPLG()
    // Offset: 0x1C02378
    void HMCPNNAOPLG();
    // private System.Void JIKJBAMGGBF()
    // Offset: 0x1C0259C
    void JIKJBAMGGBF();
    // public System.Void JFBOMHHGFDN()
    // Offset: 0x1C025A0
    void JFBOMHHGFDN();
    // public System.Void NHHIIEHJCFA()
    // Offset: 0x1C027C4
    void NHHIIEHJCFA();
    // public System.Void DKDBFFDLADP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C029E8
    void DKDBFFDLADP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void KGNNMOBOEFG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C029F0
    void KGNNMOBOEFG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void Start()
    // Offset: 0x1C029F8
    void Start();
    // private System.Void LFALCBLOEHG()
    // Offset: 0x1C02A50
    void LFALCBLOEHG();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x1C02A54
    void AFIACGLCIPB();
    // public System.Void DIDADMBDAAK()
    // Offset: 0x1C02AAC
    void DIDADMBDAAK();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x1C02CD0
    void PFABJJGAOMM();
    // private System.Void BLLECEOABBI()
    // Offset: 0x1C02D28
    void BLLECEOABBI();
    // public System.Void AKEEGHHHCKK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C02D2C
    void AKEEGHHHCKK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void DIBLOAOHNMO()
    // Offset: 0x1C02D34
    void DIBLOAOHNMO();
    // public System.Void DPFCHCEODPP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C02D38
    void DPFCHCEODPP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void MDALPNHFBBJ()
    // Offset: 0x1C02D40
    void MDALPNHFBBJ();
    // public System.Void OFCGOIFICPI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C02D44
    void OFCGOIFICPI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void KIDNJNOFOFF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C02D4C
    void KIDNJNOFOFF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void ALKHPPEDLNC()
    // Offset: 0x1C02D54
    void ALKHPPEDLNC();
    // private System.Void OEIOPGPDPAG()
    // Offset: 0x1C02F78
    void OEIOPGPDPAG();
    // public System.Void KIBDAOLFNJM()
    // Offset: 0x1C02F7C
    void KIBDAOLFNJM();
    // public System.Void FNMKMDHHFDG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C031A0
    void FNMKMDHHFDG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x1C031A8
    void PBEMGGBBDCK();
    // public System.Void BIIPJEPNIBH()
    // Offset: 0x1C03200
    void BIIPJEPNIBH();
    // private System.Void OnDestroy()
    // Offset: 0x1C03424
    void OnDestroy();
    // public System.Void JFDEDDEJJPK()
    // Offset: 0x1C03428
    void JFDEDDEJJPK();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x1C0364C
    void LPLGKBGLPOK();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C036A4
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void .ctor()
    // Offset: 0x1C036AC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ShamanWolf* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ShamanWolf::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ShamanWolf*, creationType>()));
    }
    // private System.Void AHPDCIGFMJI()
    // Offset: 0x1C03704
    void AHPDCIGFMJI();
    // private System.Void BHPCJCCHFGC()
    // Offset: 0x1C0375C
    void BHPCJCCHFGC();
    // public System.Void Slash()
    // Offset: 0x1C03760
    void Slash();
    // public System.Void MMGEIKLBBOH()
    // Offset: 0x1C03978
    void MMGEIKLBBOH();
    // public System.Void AMBHFINDKPK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C03B9C
    void AMBHFINDKPK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void NPNEIAFEMLJ()
    // Offset: 0x1C03BA4
    void NPNEIAFEMLJ();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x1C03BA8
    void NNDKJCJFIAK();
    // private System.Void IGBPLMODKII()
    // Offset: 0x1C03C00
    void IGBPLMODKII();
    // public System.Void KMPPLBBIMGJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1C03C04
    void KMPPLBBIMGJ(::MagicalActual::NetEntity* CMLIHJCOINC);
  }; // MagicalActual.ShamanWolf
  #pragma pack(pop)
  static check_size<sizeof(ShamanWolf), 48 + sizeof(::MagicalActual::NetEntity*)> __MagicalActual_ShamanWolfSizeCheck;
  static_assert(sizeof(ShamanWolf) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::EBJDLAIJJJE
// Il2CppName: EBJDLAIJJJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::EBJDLAIJJJE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "EBJDLAIJJJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::LMGJADIMGHC
// Il2CppName: LMGJADIMGHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::LMGJADIMGHC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "LMGJADIMGHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::MIGCHKHOGEM
// Il2CppName: MIGCHKHOGEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::MIGCHKHOGEM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "MIGCHKHOGEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::PDNDOHBAMEK
// Il2CppName: PDNDOHBAMEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::PDNDOHBAMEK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "PDNDOHBAMEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::GLJFFHNKKPI
// Il2CppName: GLJFFHNKKPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::GLJFFHNKKPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "GLJFFHNKKPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::IOOBCJAJKCJ
// Il2CppName: IOOBCJAJKCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::IOOBCJAJKCJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "IOOBCJAJKCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::HMCPNNAOPLG
// Il2CppName: HMCPNNAOPLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::HMCPNNAOPLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "HMCPNNAOPLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::JIKJBAMGGBF
// Il2CppName: JIKJBAMGGBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::JIKJBAMGGBF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "JIKJBAMGGBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::JFBOMHHGFDN
// Il2CppName: JFBOMHHGFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::JFBOMHHGFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "JFBOMHHGFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::NHHIIEHJCFA
// Il2CppName: NHHIIEHJCFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::NHHIIEHJCFA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "NHHIIEHJCFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::DKDBFFDLADP
// Il2CppName: DKDBFFDLADP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::DKDBFFDLADP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "DKDBFFDLADP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::KGNNMOBOEFG
// Il2CppName: KGNNMOBOEFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::KGNNMOBOEFG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "KGNNMOBOEFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::LFALCBLOEHG
// Il2CppName: LFALCBLOEHG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::LFALCBLOEHG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "LFALCBLOEHG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::DIDADMBDAAK
// Il2CppName: DIDADMBDAAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::DIDADMBDAAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "DIDADMBDAAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::BLLECEOABBI
// Il2CppName: BLLECEOABBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::BLLECEOABBI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "BLLECEOABBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::AKEEGHHHCKK
// Il2CppName: AKEEGHHHCKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::AKEEGHHHCKK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "AKEEGHHHCKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::DIBLOAOHNMO
// Il2CppName: DIBLOAOHNMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::DIBLOAOHNMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "DIBLOAOHNMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::DPFCHCEODPP
// Il2CppName: DPFCHCEODPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::DPFCHCEODPP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "DPFCHCEODPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::MDALPNHFBBJ
// Il2CppName: MDALPNHFBBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::MDALPNHFBBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "MDALPNHFBBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::OFCGOIFICPI
// Il2CppName: OFCGOIFICPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::OFCGOIFICPI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "OFCGOIFICPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::KIDNJNOFOFF
// Il2CppName: KIDNJNOFOFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::KIDNJNOFOFF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "KIDNJNOFOFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::ALKHPPEDLNC
// Il2CppName: ALKHPPEDLNC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::ALKHPPEDLNC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "ALKHPPEDLNC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::OEIOPGPDPAG
// Il2CppName: OEIOPGPDPAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::OEIOPGPDPAG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "OEIOPGPDPAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::KIBDAOLFNJM
// Il2CppName: KIBDAOLFNJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::KIBDAOLFNJM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "KIBDAOLFNJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::FNMKMDHHFDG
// Il2CppName: FNMKMDHHFDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::FNMKMDHHFDG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "FNMKMDHHFDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::BIIPJEPNIBH
// Il2CppName: BIIPJEPNIBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::BIIPJEPNIBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "BIIPJEPNIBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::JFDEDDEJJPK
// Il2CppName: JFDEDDEJJPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::JFDEDDEJJPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "JFDEDDEJJPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::AHPDCIGFMJI
// Il2CppName: AHPDCIGFMJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::AHPDCIGFMJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "AHPDCIGFMJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::BHPCJCCHFGC
// Il2CppName: BHPCJCCHFGC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::BHPCJCCHFGC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "BHPCJCCHFGC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::MMGEIKLBBOH
// Il2CppName: MMGEIKLBBOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::MMGEIKLBBOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "MMGEIKLBBOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::AMBHFINDKPK
// Il2CppName: AMBHFINDKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::AMBHFINDKPK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "AMBHFINDKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::NPNEIAFEMLJ
// Il2CppName: NPNEIAFEMLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::NPNEIAFEMLJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "NPNEIAFEMLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::IGBPLMODKII
// Il2CppName: IGBPLMODKII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)()>(&MagicalActual::ShamanWolf::IGBPLMODKII)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "IGBPLMODKII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanWolf::KMPPLBBIMGJ
// Il2CppName: KMPPLBBIMGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanWolf::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ShamanWolf::KMPPLBBIMGJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanWolf*), "KMPPLBBIMGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
