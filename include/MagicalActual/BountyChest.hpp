// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: BountyChest
  class BountyChest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::BountyChest);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::BountyChest*, "MagicalActual", "BountyChest");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.BountyChest
  // [TokenAttribute] Offset: FFFFFFFF
  class BountyChest : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x20
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.Animator animator
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Animator* animator;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animator*) == 0x8);
    // private UnityEngine.GameObject chest
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* chest;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.String HPKONJDGLIK
    // Size: 0x8
    // Offset: 0x38
    ::StringW HPKONJDGLIK;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Single LIEEBCJGJKJ
    // Size: 0x4
    // Offset: 0x40
    float LIEEBCJGJKJ;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single CDGFOAMMFMH
    // Size: 0x4
    // Offset: 0x44
    float CDGFOAMMFMH;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public UnityEngine.Animator animator
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& dyn_animator();
    // Get instance field reference: private UnityEngine.GameObject chest
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_chest();
    // Get instance field reference: private System.String HPKONJDGLIK
    [[deprecated("Use field access instead!")]] ::StringW& dyn_HPKONJDGLIK();
    // Get instance field reference: private System.Single LIEEBCJGJKJ
    [[deprecated("Use field access instead!")]] float& dyn_LIEEBCJGJKJ();
    // Get instance field reference: private System.Single CDGFOAMMFMH
    [[deprecated("Use field access instead!")]] float& dyn_CDGFOAMMFMH();
    // private System.Void ELGMEGGIOCL(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1792F00
    void ELGMEGGIOCL(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void LFPMMLMMJBJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x1792FE8
    void LFPMMLMMJBJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GHBOEBHBEEJ()
    // Offset: 0x179309C
    void GHBOEBHBEEJ();
    // public System.Void JJEJNGMIMOI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1793254
    void JJEJNGMIMOI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void Start()
    // Offset: 0x17933C0
    void Start();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x17933C4
    void LPLGKBGLPOK();
    // private System.Void MDHBNHLHENF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x17933C8
    void MDHBNHLHENF(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void CKDOIDHFJDD(System.Object OMLPNCLFFMJ)
    // Offset: 0x17934A8
    void CKDOIDHFJDD(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void CBONELJOGDI(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x179355C
    void CBONELJOGDI(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1793644
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void LIFGLIHALIG()
    // Offset: 0x17937B0
    void LIFGLIHALIG();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x1793968
    void FNGLOIECKDG();
    // private System.Void ONLDPGAMPFG(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x179396C
    void ONLDPGAMPFG(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void Update()
    // Offset: 0x1793A54
    void Update();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x1793C04
    void IDOCJGNLNFL();
    // private System.Void NDIOGMHPDBA(System.Object OMLPNCLFFMJ)
    // Offset: 0x1793C08
    void NDIOGMHPDBA(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void .ctor()
    // Offset: 0x1793CBC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BountyChest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::BountyChest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BountyChest*, creationType>()));
    }
    // public System.Void JOGPGAPOBBK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1793D2C
    void JOGPGAPOBBK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void FHMBPGMJPCM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1793E98
    void FHMBPGMJPCM(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x1793F7C
    void FGIFGGNGKPK();
    // private System.Void HEMCBODBHNJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x1793F80
    void HEMCBODBHNJ(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void PLPDCBMCEJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1794034
    void PLPDCBMCEJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JENOIOBAEPG()
    // Offset: 0x17941A0
    void JENOIOBAEPG();
    // public System.Void AMBHFINDKPK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x17941A4
    void AMBHFINDKPK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void NIPGAKCDHLI(System.Object OMLPNCLFFMJ)
    // Offset: 0x1794310
    void NIPGAKCDHLI(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GEJIJMPGALF()
    // Offset: 0x17943C4
    void GEJIJMPGALF();
    // public System.Void KHOMLKJBDGE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1794578
    void KHOMLKJBDGE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JCAOFFAOBEL(System.Object OMLPNCLFFMJ)
    // Offset: 0x17946E4
    void JCAOFFAOBEL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BMJNBLJPOCF(System.Object OMLPNCLFFMJ)
    // Offset: 0x1794798
    void BMJNBLJPOCF(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LBIKOKCCILF()
    // Offset: 0x179484C
    void LBIKOKCCILF();
  }; // MagicalActual.BountyChest
  #pragma pack(pop)
  static check_size<sizeof(BountyChest), 68 + sizeof(float)> __MagicalActual_BountyChestSizeCheck;
  static_assert(sizeof(BountyChest) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::BountyChest::ELGMEGGIOCL
// Il2CppName: ELGMEGGIOCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::System::Collections::ArrayList*)>(&MagicalActual::BountyChest::ELGMEGGIOCL)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "ELGMEGGIOCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::LFPMMLMMJBJ
// Il2CppName: LFPMMLMMJBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::Il2CppObject*)>(&MagicalActual::BountyChest::LFPMMLMMJBJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "LFPMMLMMJBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::GHBOEBHBEEJ
// Il2CppName: GHBOEBHBEEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)()>(&MagicalActual::BountyChest::GHBOEBHBEEJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "GHBOEBHBEEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::JJEJNGMIMOI
// Il2CppName: JJEJNGMIMOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::MagicalActual::NetEntity*)>(&MagicalActual::BountyChest::JJEJNGMIMOI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "JJEJNGMIMOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)()>(&MagicalActual::BountyChest::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)()>(&MagicalActual::BountyChest::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::MDHBNHLHENF
// Il2CppName: MDHBNHLHENF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::System::Collections::ArrayList*)>(&MagicalActual::BountyChest::MDHBNHLHENF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "MDHBNHLHENF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::CKDOIDHFJDD
// Il2CppName: CKDOIDHFJDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::Il2CppObject*)>(&MagicalActual::BountyChest::CKDOIDHFJDD)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "CKDOIDHFJDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::CBONELJOGDI
// Il2CppName: CBONELJOGDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::System::Collections::ArrayList*)>(&MagicalActual::BountyChest::CBONELJOGDI)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "CBONELJOGDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::MagicalActual::NetEntity*)>(&MagicalActual::BountyChest::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::LIFGLIHALIG
// Il2CppName: LIFGLIHALIG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)()>(&MagicalActual::BountyChest::LIFGLIHALIG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "LIFGLIHALIG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)()>(&MagicalActual::BountyChest::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::ONLDPGAMPFG
// Il2CppName: ONLDPGAMPFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::System::Collections::ArrayList*)>(&MagicalActual::BountyChest::ONLDPGAMPFG)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "ONLDPGAMPFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)()>(&MagicalActual::BountyChest::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)()>(&MagicalActual::BountyChest::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::NDIOGMHPDBA
// Il2CppName: NDIOGMHPDBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::Il2CppObject*)>(&MagicalActual::BountyChest::NDIOGMHPDBA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "NDIOGMHPDBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::BountyChest::JOGPGAPOBBK
// Il2CppName: JOGPGAPOBBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::MagicalActual::NetEntity*)>(&MagicalActual::BountyChest::JOGPGAPOBBK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "JOGPGAPOBBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::FHMBPGMJPCM
// Il2CppName: FHMBPGMJPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::System::Collections::ArrayList*)>(&MagicalActual::BountyChest::FHMBPGMJPCM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "FHMBPGMJPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)()>(&MagicalActual::BountyChest::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::HEMCBODBHNJ
// Il2CppName: HEMCBODBHNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::Il2CppObject*)>(&MagicalActual::BountyChest::HEMCBODBHNJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "HEMCBODBHNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::PLPDCBMCEJF
// Il2CppName: PLPDCBMCEJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::MagicalActual::NetEntity*)>(&MagicalActual::BountyChest::PLPDCBMCEJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "PLPDCBMCEJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)()>(&MagicalActual::BountyChest::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::AMBHFINDKPK
// Il2CppName: AMBHFINDKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::MagicalActual::NetEntity*)>(&MagicalActual::BountyChest::AMBHFINDKPK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "AMBHFINDKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::NIPGAKCDHLI
// Il2CppName: NIPGAKCDHLI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::Il2CppObject*)>(&MagicalActual::BountyChest::NIPGAKCDHLI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "NIPGAKCDHLI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::GEJIJMPGALF
// Il2CppName: GEJIJMPGALF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)()>(&MagicalActual::BountyChest::GEJIJMPGALF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "GEJIJMPGALF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::KHOMLKJBDGE
// Il2CppName: KHOMLKJBDGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::MagicalActual::NetEntity*)>(&MagicalActual::BountyChest::KHOMLKJBDGE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "KHOMLKJBDGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::JCAOFFAOBEL
// Il2CppName: JCAOFFAOBEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::Il2CppObject*)>(&MagicalActual::BountyChest::JCAOFFAOBEL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "JCAOFFAOBEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::BMJNBLJPOCF
// Il2CppName: BMJNBLJPOCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)(::Il2CppObject*)>(&MagicalActual::BountyChest::BMJNBLJPOCF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "BMJNBLJPOCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BountyChest::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BountyChest::*)()>(&MagicalActual::BountyChest::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BountyChest*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
