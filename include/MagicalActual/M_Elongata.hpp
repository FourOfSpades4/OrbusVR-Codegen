// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_Elongata
  class M_Elongata;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_Elongata);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_Elongata*, "MagicalActual", "M_Elongata");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x41
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_Elongata
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4FF8
  class M_Elongata : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxExplode
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxExplode;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x30
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x38
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private System.Boolean PPJAHPEKCHJ
    // Size: 0x1
    // Offset: 0x40
    bool PPJAHPEKCHJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public UnityEngine.GameObject vfxExplode
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxExplode();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private System.Boolean PPJAHPEKCHJ
    [[deprecated("Use field access instead!")]] bool& dyn_PPJAHPEKCHJ();
    // private System.Void OIPEAOKBGNG(System.Object OMLPNCLFFMJ)
    // Offset: 0x24B4660
    void OIPEAOKBGNG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void JMHENDHOAKI(System.Object OMLPNCLFFMJ)
    // Offset: 0x24B4934
    void JMHENDHOAKI(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void .ctor()
    // Offset: 0x24B4AEC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_Elongata* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_Elongata::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_Elongata*, creationType>()));
    }
    // private System.Void GECHLDPLPCC()
    // Offset: 0x24B4B44
    void GECHLDPLPCC();
    // private System.Void DFKNDJPFOHB(System.Object OMLPNCLFFMJ)
    // Offset: 0x24B4CC4
    void DFKNDJPFOHB(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void CEPPICBNJOI()
    // Offset: 0x24B4D88
    void CEPPICBNJOI();
    // private System.Void JMMAGGHGCIK(System.Object OMLPNCLFFMJ)
    // Offset: 0x24B4FAC
    void JMMAGGHGCIK(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void AFIACGLCIPB()
    // Offset: 0x24B518C
    void AFIACGLCIPB();
    // private System.Void FODIGIPCGDP()
    // Offset: 0x24B4BA8
    void FODIGIPCGDP();
    // private System.Void BEALKNAKEPB()
    // Offset: 0x24B4724
    void BEALKNAKEPB();
    // public System.Void Slash()
    // Offset: 0x24B51F0
    void Slash();
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24B5408
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void NNDCJJKFOLD()
    // Offset: 0x24B5574
    void NNDCJJKFOLD();
    // private System.Void HMCOHKENNMF()
    // Offset: 0x24B55E8
    void HMCOHKENNMF();
    // public System.Void AMBHFINDKPK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24B565C
    void AMBHFINDKPK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void Start()
    // Offset: 0x24B57C8
    void Start();
    // private System.Void BDFKBHHBOGG()
    // Offset: 0x24B4818
    void BDFKBHHBOGG();
    // private System.Void GCHMBPJMDPM()
    // Offset: 0x24B582C
    void GCHMBPJMDPM();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x24B58A0
    void NNDKJCJFIAK();
    // private System.Void DBJCBCIPHNI()
    // Offset: 0x24B5070
    void DBJCBCIPHNI();
    // private System.Void ICIEDDOKAGE()
    // Offset: 0x24B49F8
    void ICIEDDOKAGE();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24B5904
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void KHOMLKJBDGE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24B5A70
    void KHOMLKJBDGE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void OMKBAIIIFBJ()
    // Offset: 0x24B5BDC
    void OMKBAIIIFBJ();
    // public System.Void AGKHMBHBNFM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24B5E00
    void AGKHMBHBNFM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void KDPEOPPDLLP()
    // Offset: 0x24B5F6C
    void KDPEOPPDLLP();
    // private System.Void PPOALOOMAKD()
    // Offset: 0x24B6190
    void PPOALOOMAKD();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x24B6204
    void IDOCJGNLNFL();
    // private System.Void OAKDFBMJCIJ(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24B6384
    void OAKDFBMJCIJ(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x24B6684
    void CBMDGNKFPIO();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x24B66E8
    void FNGLOIECKDG();
    // public System.Void EBKMGINMPPJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24B674C
    void EBKMGINMPPJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PDCFMMDKGBO(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24B68B8
    void PDCFMMDKGBO(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void IKEKEPLCPDL()
    // Offset: 0x24B6268
    void IKEKEPLCPDL();
    // private System.Void HBCAHLCJFJI(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24B6C08
    void HBCAHLCJFJI(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void JGLIEBCBMGJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x24B6F68
    void JGLIEBCBMGJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GCMCMLJPDLB()
    // Offset: 0x24B702C
    void GCMCMLJPDLB();
    // private System.Void KPNGDLJGPHO(System.Object OMLPNCLFFMJ)
    // Offset: 0x24B70A0
    void KPNGDLJGPHO(::Il2CppObject* OMLPNCLFFMJ);
  }; // MagicalActual.M_Elongata
  #pragma pack(pop)
  static check_size<sizeof(M_Elongata), 64 + sizeof(bool)> __MagicalActual_M_ElongataSizeCheck;
  static_assert(sizeof(M_Elongata) == 0x41);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_Elongata::OIPEAOKBGNG
// Il2CppName: OIPEAOKBGNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::Il2CppObject*)>(&MagicalActual::M_Elongata::OIPEAOKBGNG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "OIPEAOKBGNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::JMHENDHOAKI
// Il2CppName: JMHENDHOAKI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::Il2CppObject*)>(&MagicalActual::M_Elongata::JMHENDHOAKI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "JMHENDHOAKI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_Elongata::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::DFKNDJPFOHB
// Il2CppName: DFKNDJPFOHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::Il2CppObject*)>(&MagicalActual::M_Elongata::DFKNDJPFOHB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "DFKNDJPFOHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::CEPPICBNJOI
// Il2CppName: CEPPICBNJOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::CEPPICBNJOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "CEPPICBNJOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::JMMAGGHGCIK
// Il2CppName: JMMAGGHGCIK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::Il2CppObject*)>(&MagicalActual::M_Elongata::JMMAGGHGCIK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "JMMAGGHGCIK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::FODIGIPCGDP
// Il2CppName: FODIGIPCGDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::FODIGIPCGDP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "FODIGIPCGDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::BEALKNAKEPB
// Il2CppName: BEALKNAKEPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::BEALKNAKEPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "BEALKNAKEPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_Elongata::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::NNDCJJKFOLD
// Il2CppName: NNDCJJKFOLD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::NNDCJJKFOLD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "NNDCJJKFOLD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::HMCOHKENNMF
// Il2CppName: HMCOHKENNMF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::HMCOHKENNMF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "HMCOHKENNMF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::AMBHFINDKPK
// Il2CppName: AMBHFINDKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_Elongata::AMBHFINDKPK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "AMBHFINDKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::BDFKBHHBOGG
// Il2CppName: BDFKBHHBOGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::BDFKBHHBOGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "BDFKBHHBOGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::GCHMBPJMDPM
// Il2CppName: GCHMBPJMDPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::GCHMBPJMDPM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "GCHMBPJMDPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::DBJCBCIPHNI
// Il2CppName: DBJCBCIPHNI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::DBJCBCIPHNI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "DBJCBCIPHNI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::ICIEDDOKAGE
// Il2CppName: ICIEDDOKAGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::ICIEDDOKAGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "ICIEDDOKAGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_Elongata::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::KHOMLKJBDGE
// Il2CppName: KHOMLKJBDGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_Elongata::KHOMLKJBDGE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "KHOMLKJBDGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::OMKBAIIIFBJ
// Il2CppName: OMKBAIIIFBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::OMKBAIIIFBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "OMKBAIIIFBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::AGKHMBHBNFM
// Il2CppName: AGKHMBHBNFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_Elongata::AGKHMBHBNFM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "AGKHMBHBNFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::KDPEOPPDLLP
// Il2CppName: KDPEOPPDLLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::KDPEOPPDLLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "KDPEOPPDLLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::PPOALOOMAKD
// Il2CppName: PPOALOOMAKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::PPOALOOMAKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "PPOALOOMAKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::OAKDFBMJCIJ
// Il2CppName: OAKDFBMJCIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_Elongata::OAKDFBMJCIJ)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "OAKDFBMJCIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::EBKMGINMPPJ
// Il2CppName: EBKMGINMPPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_Elongata::EBKMGINMPPJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "EBKMGINMPPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::PDCFMMDKGBO
// Il2CppName: PDCFMMDKGBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_Elongata::PDCFMMDKGBO)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "PDCFMMDKGBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::IKEKEPLCPDL
// Il2CppName: IKEKEPLCPDL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::IKEKEPLCPDL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "IKEKEPLCPDL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::HBCAHLCJFJI
// Il2CppName: HBCAHLCJFJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_Elongata::HBCAHLCJFJI)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "HBCAHLCJFJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::JGLIEBCBMGJ
// Il2CppName: JGLIEBCBMGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::Il2CppObject*)>(&MagicalActual::M_Elongata::JGLIEBCBMGJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "JGLIEBCBMGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::GCMCMLJPDLB
// Il2CppName: GCMCMLJPDLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)()>(&MagicalActual::M_Elongata::GCMCMLJPDLB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "GCMCMLJPDLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Elongata::KPNGDLJGPHO
// Il2CppName: KPNGDLJGPHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Elongata::*)(::Il2CppObject*)>(&MagicalActual::M_Elongata::KPNGDLJGPHO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Elongata*), "KPNGDLJGPHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
