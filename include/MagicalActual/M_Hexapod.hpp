// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_Hexapod
  class M_Hexapod;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_Hexapod);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_Hexapod*, "MagicalActual", "M_Hexapod");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_Hexapod
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD5338
  class M_Hexapod : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // private System.Void NNDCJJKFOLD()
    // Offset: 0x242FC88
    void NNDCJJKFOLD();
    // private System.Void HMCOHKENNMF()
    // Offset: 0x242FCFC
    void HMCOHKENNMF();
    // private System.Void MHPHFENOEHO()
    // Offset: 0x242FD70
    void MHPHFENOEHO();
    // private System.Void NPKKOFMMNMH()
    // Offset: 0x242FDE4
    void NPKKOFMMNMH();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x242FE58
    void IDOCJGNLNFL();
    // public System.Void JFBOMHHGFDN()
    // Offset: 0x242FEB0
    void JFBOMHHGFDN();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x24300D4
    void GPFBGGFPINB();
    // private System.Void JPBJGGMAFKN()
    // Offset: 0x243012C
    void JPBJGGMAFKN();
    // public System.Void CCOODLILKJD()
    // Offset: 0x24301A0
    void CCOODLILKJD();
    // private System.Void NGNEBKIOGNN()
    // Offset: 0x24303C4
    void NGNEBKIOGNN();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x2430438
    void OACMGPBCPEL();
    // public System.Void Slash()
    // Offset: 0x2430490
    void Slash();
    // private System.Void JEFICCCGFAO()
    // Offset: 0x24306A8
    void JEFICCCGFAO();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x243071C
    void GECHLDPLPCC();
    // private System.Void NHADFEMILCC()
    // Offset: 0x2430774
    void NHADFEMILCC();
    // public System.Void DKILGFBCKHD()
    // Offset: 0x24307CC
    void DKILGFBCKHD();
    // private System.Void DDEBBFNEDKD()
    // Offset: 0x24309F0
    void DDEBBFNEDKD();
    // private System.Void DEGCMEJJNJI()
    // Offset: 0x2430A64
    void DEGCMEJJNJI();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x2430ABC
    void CBMDGNKFPIO();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x2430B14
    void EIIKFEMCNKM();
    // private System.Void GOKMOBEADLE()
    // Offset: 0x2430B6C
    void GOKMOBEADLE();
    // public System.Void JCOFJKJMOAA()
    // Offset: 0x2430BC4
    void JCOFJKJMOAA();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x2430DE8
    void DFCOAPEIKLN();
    // private System.Void HJKFJENIJFO()
    // Offset: 0x2430E40
    void HJKFJENIJFO();
    // public System.Void CIGIPMPLKGF()
    // Offset: 0x2430E98
    void CIGIPMPLKGF();
    // public System.Void BIIPJEPNIBH()
    // Offset: 0x24310BC
    void BIIPJEPNIBH();
    // private System.Void GCMCMLJPDLB()
    // Offset: 0x24312E0
    void GCMCMLJPDLB();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x2431354
    void PFABJJGAOMM();
    // public System.Void .ctor()
    // Offset: 0x24313AC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_Hexapod* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_Hexapod::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_Hexapod*, creationType>()));
    }
    // private System.Void FMBNGEICNEA()
    // Offset: 0x24313B4
    void FMBNGEICNEA();
    // public System.Void JFKKFKNHPFI()
    // Offset: 0x2431428
    void JFKKFKNHPFI();
    // private System.Void Start()
    // Offset: 0x243164C
    void Start();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x24316A4
    void GHLPBOJJHNG();
    // private System.Void LJKCIKICGHD()
    // Offset: 0x24316FC
    void LJKCIKICGHD();
    // public System.Void ILLHMMCNGOG()
    // Offset: 0x2431770
    void ILLHMMCNGOG();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x2431994
    void FGIFGGNGKPK();
    // private System.Void APIMIOELFAJ()
    // Offset: 0x24319EC
    void APIMIOELFAJ();
    // private System.Void FNACFILNMOB()
    // Offset: 0x2431A44
    void FNACFILNMOB();
    // private System.Void HOHJJNKIDFD()
    // Offset: 0x2431AB8
    void HOHJJNKIDFD();
    // public System.Void KIBDAOLFNJM()
    // Offset: 0x2431B2C
    void KIBDAOLFNJM();
    // public System.Void GILLJBIMGNJ()
    // Offset: 0x2431D50
    void GILLJBIMGNJ();
    // public System.Void GLJFFHNKKPI()
    // Offset: 0x2431F74
    void GLJFFHNKKPI();
    // public System.Void PNLNOOIGCBK()
    // Offset: 0x2432198
    void PNLNOOIGCBK();
  }; // MagicalActual.M_Hexapod
  #pragma pack(pop)
  static check_size<sizeof(M_Hexapod), 32 + sizeof(::UnityEngine::GameObject*)> __MagicalActual_M_HexapodSizeCheck;
  static_assert(sizeof(M_Hexapod) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::NNDCJJKFOLD
// Il2CppName: NNDCJJKFOLD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::NNDCJJKFOLD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "NNDCJJKFOLD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::HMCOHKENNMF
// Il2CppName: HMCOHKENNMF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::HMCOHKENNMF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "HMCOHKENNMF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::MHPHFENOEHO
// Il2CppName: MHPHFENOEHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::MHPHFENOEHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "MHPHFENOEHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::NPKKOFMMNMH
// Il2CppName: NPKKOFMMNMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::NPKKOFMMNMH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "NPKKOFMMNMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::JFBOMHHGFDN
// Il2CppName: JFBOMHHGFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::JFBOMHHGFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "JFBOMHHGFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::JPBJGGMAFKN
// Il2CppName: JPBJGGMAFKN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::JPBJGGMAFKN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "JPBJGGMAFKN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::CCOODLILKJD
// Il2CppName: CCOODLILKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::CCOODLILKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "CCOODLILKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::NGNEBKIOGNN
// Il2CppName: NGNEBKIOGNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::NGNEBKIOGNN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "NGNEBKIOGNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::JEFICCCGFAO
// Il2CppName: JEFICCCGFAO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::JEFICCCGFAO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "JEFICCCGFAO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::DKILGFBCKHD
// Il2CppName: DKILGFBCKHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::DKILGFBCKHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "DKILGFBCKHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::DDEBBFNEDKD
// Il2CppName: DDEBBFNEDKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::DDEBBFNEDKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "DDEBBFNEDKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::DEGCMEJJNJI
// Il2CppName: DEGCMEJJNJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::DEGCMEJJNJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "DEGCMEJJNJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::GOKMOBEADLE
// Il2CppName: GOKMOBEADLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::GOKMOBEADLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "GOKMOBEADLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::JCOFJKJMOAA
// Il2CppName: JCOFJKJMOAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::JCOFJKJMOAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "JCOFJKJMOAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::HJKFJENIJFO
// Il2CppName: HJKFJENIJFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::HJKFJENIJFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "HJKFJENIJFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::CIGIPMPLKGF
// Il2CppName: CIGIPMPLKGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::CIGIPMPLKGF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "CIGIPMPLKGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::BIIPJEPNIBH
// Il2CppName: BIIPJEPNIBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::BIIPJEPNIBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "BIIPJEPNIBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::GCMCMLJPDLB
// Il2CppName: GCMCMLJPDLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::GCMCMLJPDLB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "GCMCMLJPDLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::FMBNGEICNEA
// Il2CppName: FMBNGEICNEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::FMBNGEICNEA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "FMBNGEICNEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::JFKKFKNHPFI
// Il2CppName: JFKKFKNHPFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::JFKKFKNHPFI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "JFKKFKNHPFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::LJKCIKICGHD
// Il2CppName: LJKCIKICGHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::LJKCIKICGHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "LJKCIKICGHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::ILLHMMCNGOG
// Il2CppName: ILLHMMCNGOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::ILLHMMCNGOG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "ILLHMMCNGOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::APIMIOELFAJ
// Il2CppName: APIMIOELFAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::APIMIOELFAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "APIMIOELFAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::FNACFILNMOB
// Il2CppName: FNACFILNMOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::FNACFILNMOB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "FNACFILNMOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::HOHJJNKIDFD
// Il2CppName: HOHJJNKIDFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::HOHJJNKIDFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "HOHJJNKIDFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::KIBDAOLFNJM
// Il2CppName: KIBDAOLFNJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::KIBDAOLFNJM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "KIBDAOLFNJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::GILLJBIMGNJ
// Il2CppName: GILLJBIMGNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::GILLJBIMGNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "GILLJBIMGNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::GLJFFHNKKPI
// Il2CppName: GLJFFHNKKPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::GLJFFHNKKPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "GLJFFHNKKPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Hexapod::PNLNOOIGCBK
// Il2CppName: PNLNOOIGCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Hexapod::*)()>(&MagicalActual::M_Hexapod::PNLNOOIGCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Hexapod*), "PNLNOOIGCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
