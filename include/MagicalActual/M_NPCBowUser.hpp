// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: Catenary
  class Catenary;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_NPCBowUser
  class M_NPCBowUser;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_NPCBowUser);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_NPCBowUser*, "MagicalActual", "M_NPCBowUser");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x74
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_NPCBowUser
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4774
  class M_NPCBowUser : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.Catenary GKAGLCILGBD
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::Catenary* GKAGLCILGBD;
    // Field size check
    static_assert(sizeof(::MagicalActual::Catenary*) == 0x8);
    // public UnityEngine.GameObject vfxFlyingArrowPrefab
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* vfxFlyingArrowPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Vector3[] APCMLHLDJBO
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::UnityEngine::Vector3> APCMLHLDJBO;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector3>) == 0x8);
    // private System.Int32 DGIPABIPLIA
    // Size: 0x4
    // Offset: 0x40
    int DGIPABIPLIA;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean JKLPGJKLJEK
    // Size: 0x1
    // Offset: 0x44
    bool JKLPGJKLJEK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: JKLPGJKLJEK and: KDOBIPNAOGA
    char __padding6[0x3] = {};
    // private UnityEngine.GameObject KDOBIPNAOGA
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* KDOBIPNAOGA;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Vector3 PPHJBPKCMBF
    // Size: 0xC
    // Offset: 0x50
    ::UnityEngine::Vector3 PPHJBPKCMBF;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single BAGIMOCPKAP
    // Size: 0x4
    // Offset: 0x5C
    float BAGIMOCPKAP;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single GAMJGJDLIFC
    // Size: 0x4
    // Offset: 0x60
    float GAMJGJDLIFC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single BIHAGHDLPDE
    // Size: 0x4
    // Offset: 0x64
    float BIHAGHDLPDE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 NMOGMDHIONO
    // Size: 0xC
    // Offset: 0x68
    ::UnityEngine::Vector3 NMOGMDHIONO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private MagicalActual.Catenary GKAGLCILGBD
    [[deprecated("Use field access instead!")]] ::MagicalActual::Catenary*& dyn_GKAGLCILGBD();
    // Get instance field reference: public UnityEngine.GameObject vfxFlyingArrowPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxFlyingArrowPrefab();
    // Get instance field reference: private UnityEngine.Vector3[] APCMLHLDJBO
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& dyn_APCMLHLDJBO();
    // Get instance field reference: private System.Int32 DGIPABIPLIA
    [[deprecated("Use field access instead!")]] int& dyn_DGIPABIPLIA();
    // Get instance field reference: private System.Boolean JKLPGJKLJEK
    [[deprecated("Use field access instead!")]] bool& dyn_JKLPGJKLJEK();
    // Get instance field reference: private UnityEngine.GameObject KDOBIPNAOGA
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_KDOBIPNAOGA();
    // Get instance field reference: private UnityEngine.Vector3 PPHJBPKCMBF
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_PPHJBPKCMBF();
    // Get instance field reference: private System.Single BAGIMOCPKAP
    [[deprecated("Use field access instead!")]] float& dyn_BAGIMOCPKAP();
    // Get instance field reference: private System.Single GAMJGJDLIFC
    [[deprecated("Use field access instead!")]] float& dyn_GAMJGJDLIFC();
    // Get instance field reference: private System.Single BIHAGHDLPDE
    [[deprecated("Use field access instead!")]] float& dyn_BIHAGHDLPDE();
    // Get instance field reference: private UnityEngine.Vector3 NMOGMDHIONO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_NMOGMDHIONO();
    // private System.Void ADLGPKAIPAA()
    // Offset: 0x26E2CCC
    void ADLGPKAIPAA();
    // private System.Void KKEABMBACIC()
    // Offset: 0x26E2D70
    void KKEABMBACIC();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x26E2E14
    void HKINNMLBMMG();
    // private System.Void EBCAODBEHEE()
    // Offset: 0x26E2E18
    void EBCAODBEHEE();
    // private System.Void KHLGIMBINJG()
    // Offset: 0x26E33E8
    void KHLGIMBINJG();
    // private System.Void AHMLIMDJCJO()
    // Offset: 0x26E348C
    void AHMLIMDJCJO();
    // private System.Void KEPAEAGMFBE()
    // Offset: 0x26E3600
    void KEPAEAGMFBE();
    // private System.Void AIKBLNGPOON()
    // Offset: 0x26E3BD4
    void AIKBLNGPOON();
    // private System.Void NGCGKDPPDBG()
    // Offset: 0x26E3C78
    void NGCGKDPPDBG();
    // private System.Void LACFBAIDCBK()
    // Offset: 0x26E3E24
    void LACFBAIDCBK();
    // private System.Void EFLLEILOGJN()
    // Offset: 0x26E3EC8
    void EFLLEILOGJN();
    // private System.Void JCEOHIIBEOM()
    // Offset: 0x26E406C
    void JCEOHIIBEOM();
    // private System.Void FixedUpdate()
    // Offset: 0x26E41D8
    void FixedUpdate();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x26E4348
    void LBIKOKCCILF();
    // private System.Void KCEPMBHOMCD()
    // Offset: 0x26E434C
    void KCEPMBHOMCD();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x26E44F8
    void LPLGKBGLPOK();
    // private System.Void LFOLACDFEFP()
    // Offset: 0x26E44FC
    void LFOLACDFEFP();
    // private System.Void KAODMEDKCGM()
    // Offset: 0x26E4674
    void KAODMEDKCGM();
    // private System.Void GIAIEFODLJB()
    // Offset: 0x26E4ACC
    void GIAIEFODLJB();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x26E4F28
    void IPIFMKAGODD();
    // private System.Void ALEFMBHHGKJ()
    // Offset: 0x26E4F2C
    void ALEFMBHHGKJ();
    // private System.Void AGOBDBDGJKD()
    // Offset: 0x26E50A0
    void AGOBDBDGJKD();
    // public System.Void .ctor()
    // Offset: 0x26E520C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_NPCBowUser* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_NPCBowUser::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_NPCBowUser*, creationType>()));
    }
    // private System.Void GEJIJMPGALF()
    // Offset: 0x26E5224
    void GEJIJMPGALF();
    // private System.Void Update()
    // Offset: 0x26E53D0
    void Update();
    // private System.Void GELKHOGFDFK()
    // Offset: 0x26E557C
    void GELKHOGFDFK();
    // private System.Void PNDEIPIFOJK()
    // Offset: 0x26E59D8
    void PNDEIPIFOJK();
    // private System.Void Start()
    // Offset: 0x26E5B50
    void Start();
    // private System.Void GPLFGCCAIEO()
    // Offset: 0x26E5B54
    void GPLFGCCAIEO();
    // private System.Void JCOEAIILOND()
    // Offset: 0x26E5FB0
    void JCOEAIILOND();
    // private System.Void PPCILNBEOEB()
    // Offset: 0x26E3A5C
    void PPCILNBEOEB();
    // private System.Void FNHKAIGMMLG()
    // Offset: 0x26E6128
    void FNHKAIGMMLG();
    // private System.Void BJMMJNDCPLF()
    // Offset: 0x26E61CC
    void BJMMJNDCPLF();
    // private System.Void JGBLOKMMGEO()
    // Offset: 0x26E6370
    void JGBLOKMMGEO();
    // private System.Void CGGEFGGPLJN()
    // Offset: 0x26E3274
    void CGGEFGGPLJN();
    // private System.Void NNBODOLEAFK()
    // Offset: 0x26E67CC
    void NNBODOLEAFK();
    // private System.Void Awake()
    // Offset: 0x26E6944
    void Awake();
    // private System.Void DJIGIJKOPDC()
    // Offset: 0x26E69E4
    void DJIGIJKOPDC();
    // private System.Void FNHAKOIFLKL()
    // Offset: 0x26E6A88
    void FNHAKOIFLKL();
    // private System.Void GDKAAJENFDN()
    // Offset: 0x26E6ED4
    void GDKAAJENFDN();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x26E704C
    void CBMDGNKFPIO();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x26E7050
    void JENOIOBAEPG();
    // private System.Void MGNEDHFLOCJ()
    // Offset: 0x26E7054
    void MGNEDHFLOCJ();
    // private System.Void FLJMJKAKNBH()
    // Offset: 0x26E7200
    void FLJMJKAKNBH();
    // private System.Void BKGHNJCDAMM()
    // Offset: 0x26E736C
    void BKGHNJCDAMM();
    // private System.Void IKOBPPNJIPG()
    // Offset: 0x26E77C8
    void IKOBPPNJIPG();
  }; // MagicalActual.M_NPCBowUser
  #pragma pack(pop)
  static check_size<sizeof(M_NPCBowUser), 104 + sizeof(::UnityEngine::Vector3)> __MagicalActual_M_NPCBowUserSizeCheck;
  static_assert(sizeof(M_NPCBowUser) == 0x74);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::ADLGPKAIPAA
// Il2CppName: ADLGPKAIPAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::ADLGPKAIPAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "ADLGPKAIPAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::KKEABMBACIC
// Il2CppName: KKEABMBACIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::KKEABMBACIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "KKEABMBACIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::EBCAODBEHEE
// Il2CppName: EBCAODBEHEE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::EBCAODBEHEE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "EBCAODBEHEE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::KHLGIMBINJG
// Il2CppName: KHLGIMBINJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::KHLGIMBINJG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "KHLGIMBINJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::AHMLIMDJCJO
// Il2CppName: AHMLIMDJCJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::AHMLIMDJCJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "AHMLIMDJCJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::KEPAEAGMFBE
// Il2CppName: KEPAEAGMFBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::KEPAEAGMFBE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "KEPAEAGMFBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::AIKBLNGPOON
// Il2CppName: AIKBLNGPOON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::AIKBLNGPOON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "AIKBLNGPOON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::NGCGKDPPDBG
// Il2CppName: NGCGKDPPDBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::NGCGKDPPDBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "NGCGKDPPDBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::LACFBAIDCBK
// Il2CppName: LACFBAIDCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::LACFBAIDCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "LACFBAIDCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::EFLLEILOGJN
// Il2CppName: EFLLEILOGJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::EFLLEILOGJN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "EFLLEILOGJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::JCEOHIIBEOM
// Il2CppName: JCEOHIIBEOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::JCEOHIIBEOM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "JCEOHIIBEOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::KCEPMBHOMCD
// Il2CppName: KCEPMBHOMCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::KCEPMBHOMCD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "KCEPMBHOMCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::LFOLACDFEFP
// Il2CppName: LFOLACDFEFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::LFOLACDFEFP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "LFOLACDFEFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::KAODMEDKCGM
// Il2CppName: KAODMEDKCGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::KAODMEDKCGM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "KAODMEDKCGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::GIAIEFODLJB
// Il2CppName: GIAIEFODLJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::GIAIEFODLJB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "GIAIEFODLJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::ALEFMBHHGKJ
// Il2CppName: ALEFMBHHGKJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::ALEFMBHHGKJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "ALEFMBHHGKJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::AGOBDBDGJKD
// Il2CppName: AGOBDBDGJKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::AGOBDBDGJKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "AGOBDBDGJKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::GEJIJMPGALF
// Il2CppName: GEJIJMPGALF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::GEJIJMPGALF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "GEJIJMPGALF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::GELKHOGFDFK
// Il2CppName: GELKHOGFDFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::GELKHOGFDFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "GELKHOGFDFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::PNDEIPIFOJK
// Il2CppName: PNDEIPIFOJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::PNDEIPIFOJK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "PNDEIPIFOJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::GPLFGCCAIEO
// Il2CppName: GPLFGCCAIEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::GPLFGCCAIEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "GPLFGCCAIEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::JCOEAIILOND
// Il2CppName: JCOEAIILOND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::JCOEAIILOND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "JCOEAIILOND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::PPCILNBEOEB
// Il2CppName: PPCILNBEOEB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::PPCILNBEOEB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "PPCILNBEOEB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::FNHKAIGMMLG
// Il2CppName: FNHKAIGMMLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::FNHKAIGMMLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "FNHKAIGMMLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::BJMMJNDCPLF
// Il2CppName: BJMMJNDCPLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::BJMMJNDCPLF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "BJMMJNDCPLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::JGBLOKMMGEO
// Il2CppName: JGBLOKMMGEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::JGBLOKMMGEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "JGBLOKMMGEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::CGGEFGGPLJN
// Il2CppName: CGGEFGGPLJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::CGGEFGGPLJN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "CGGEFGGPLJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::NNBODOLEAFK
// Il2CppName: NNBODOLEAFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::NNBODOLEAFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "NNBODOLEAFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::DJIGIJKOPDC
// Il2CppName: DJIGIJKOPDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::DJIGIJKOPDC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "DJIGIJKOPDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::FNHAKOIFLKL
// Il2CppName: FNHAKOIFLKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::FNHAKOIFLKL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "FNHAKOIFLKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::GDKAAJENFDN
// Il2CppName: GDKAAJENFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::GDKAAJENFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "GDKAAJENFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::MGNEDHFLOCJ
// Il2CppName: MGNEDHFLOCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::MGNEDHFLOCJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "MGNEDHFLOCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::FLJMJKAKNBH
// Il2CppName: FLJMJKAKNBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::FLJMJKAKNBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "FLJMJKAKNBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::BKGHNJCDAMM
// Il2CppName: BKGHNJCDAMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::BKGHNJCDAMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "BKGHNJCDAMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_NPCBowUser::IKOBPPNJIPG
// Il2CppName: IKOBPPNJIPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_NPCBowUser::*)()>(&MagicalActual::M_NPCBowUser::IKOBPPNJIPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_NPCBowUser*), "IKOBPPNJIPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
