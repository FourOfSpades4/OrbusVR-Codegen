// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Harvestable
  class Harvestable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Harvestable);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Harvestable*, "MagicalActual", "Harvestable");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Harvestable
  // [TokenAttribute] Offset: FFFFFFFF
  class Harvestable : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject vfxPoof
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxPoof;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE4678
    // private System.String <HNICOCDLHAK>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::StringW HNICOCDLHAK;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public UnityEngine.GameObject vfxPoof
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxPoof();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private System.String <HNICOCDLHAK>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$HNICOCDLHAK$k__BackingField();
    // public System.Void AMBHFINDKPK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1883414
    void AMBHFINDKPK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void .ctor()
    // Offset: 0x1883558
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Harvestable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Harvestable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Harvestable*, creationType>()));
    }
    // private System.Void BGPFFHOMJPN(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x18835B0
    void BGPFFHOMJPN(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void FLBDFAHFMEL(System.Object OMLPNCLFFMJ)
    // Offset: 0x18836D8
    void FLBDFAHFMEL(::Il2CppObject* OMLPNCLFFMJ);
    // public System.String get_plantType()
    // Offset: 0x1883838
    ::StringW get_plantType();
    // private System.Void NCCKPJHLPKD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1883840
    void NCCKPJHLPKD(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void CIOEKPAABIM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x188396C
    void CIOEKPAABIM(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.String NPJLEAPMMNN()
    // Offset: 0x1883A98
    ::StringW NPJLEAPMMNN();
    // private System.Void DBIIJPPPIBA(System.Object OMLPNCLFFMJ)
    // Offset: 0x1883AA0
    void DBIIJPPPIBA(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void KEGEKFNLCJD(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1883C00
    void KEGEKFNLCJD(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void DNANKAKBINA(System.String MMMEIONJJFJ)
    // Offset: 0x1883BF0
    void DNANKAKBINA(::StringW MMMEIONJJFJ);
    // private System.Void DKJFPDMDIAA(System.Object OMLPNCLFFMJ)
    // Offset: 0x1883D44
    void DKJFPDMDIAA(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void EGJMIHFLOKP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1883E94
    void EGJMIHFLOKP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void NFOMCBNAELO(System.String MMMEIONJJFJ)
    // Offset: 0x1883FD8
    void NFOMCBNAELO(::StringW MMMEIONJJFJ);
    // private System.Void EPFEODJAIFP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1883FE0
    void EPFEODJAIFP(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void NEMKNLGDEAK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x188410C
    void NEMKNLGDEAK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void CPJDODIDIFB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1884250
    void CPJDODIDIFB(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.String BCHFNNLNEAL()
    // Offset: 0x188437C
    ::StringW BCHFNNLNEAL();
    // private System.Void NJMPAJNHCBI(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1884384
    void NJMPAJNHCBI(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.String IGFHPLANLEB()
    // Offset: 0x1883BF8
    ::StringW IGFHPLANLEB();
    // private System.Void EPCHCAIOPAM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x18844B0
    void EPCHCAIOPAM(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void MJJCECBPFHN(System.Object OMLPNCLFFMJ)
    // Offset: 0x18845DC
    void MJJCECBPFHN(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x188472C
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.String EDDNMCBMJEO()
    // Offset: 0x1884870
    ::StringW EDDNMCBMJEO();
    // public System.String EMAKGFEDBCL()
    // Offset: 0x1883830
    ::StringW EMAKGFEDBCL();
    // public System.Void OIPLBADJHFI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1884878
    void OIPLBADJHFI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void KEHLKNKNOJA(System.String MMMEIONJJFJ)
    // Offset: 0x18849BC
    void KEHLKNKNOJA(::StringW MMMEIONJJFJ);
    // public System.Void AGKHMBHBNFM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x18849C4
    void AGKHMBHBNFM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OCGPAEECBIG(System.String MMMEIONJJFJ)
    // Offset: 0x1883828
    void OCGPAEECBIG(::StringW MMMEIONJJFJ);
    // public System.String MAABAPHLBKB()
    // Offset: 0x1884B08
    ::StringW MAABAPHLBKB();
    // private System.Void NGBDLGIFKDI(System.Object OMLPNCLFFMJ)
    // Offset: 0x1884B10
    void NGBDLGIFKDI(::Il2CppObject* OMLPNCLFFMJ);
    // public System.String AHMDBFCAJCP()
    // Offset: 0x1884C60
    ::StringW AHMDBFCAJCP();
    // public System.Void DKDBFFDLADP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1884C68
    void DKDBFFDLADP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EEMMENLIFGF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1884DAC
    void EEMMENLIFGF(::System::Collections::ArrayList* HPEANAHIBAH);
  }; // MagicalActual.Harvestable
  #pragma pack(pop)
  static check_size<sizeof(Harvestable), 48 + sizeof(::StringW)> __MagicalActual_HarvestableSizeCheck;
  static_assert(sizeof(Harvestable) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Harvestable::AMBHFINDKPK
// Il2CppName: AMBHFINDKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Harvestable::AMBHFINDKPK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "AMBHFINDKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Harvestable::BGPFFHOMJPN
// Il2CppName: BGPFFHOMJPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::System::Collections::ArrayList*)>(&MagicalActual::Harvestable::BGPFFHOMJPN)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "BGPFFHOMJPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::FLBDFAHFMEL
// Il2CppName: FLBDFAHFMEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::Il2CppObject*)>(&MagicalActual::Harvestable::FLBDFAHFMEL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "FLBDFAHFMEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::get_plantType
// Il2CppName: get_plantType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::Harvestable::*)()>(&MagicalActual::Harvestable::get_plantType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "get_plantType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::NCCKPJHLPKD
// Il2CppName: NCCKPJHLPKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::System::Collections::ArrayList*)>(&MagicalActual::Harvestable::NCCKPJHLPKD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "NCCKPJHLPKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::CIOEKPAABIM
// Il2CppName: CIOEKPAABIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::System::Collections::ArrayList*)>(&MagicalActual::Harvestable::CIOEKPAABIM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "CIOEKPAABIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::NPJLEAPMMNN
// Il2CppName: NPJLEAPMMNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::Harvestable::*)()>(&MagicalActual::Harvestable::NPJLEAPMMNN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "NPJLEAPMMNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::DBIIJPPPIBA
// Il2CppName: DBIIJPPPIBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::Il2CppObject*)>(&MagicalActual::Harvestable::DBIIJPPPIBA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "DBIIJPPPIBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::KEGEKFNLCJD
// Il2CppName: KEGEKFNLCJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Harvestable::KEGEKFNLCJD)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "KEGEKFNLCJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::DNANKAKBINA
// Il2CppName: DNANKAKBINA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::StringW)>(&MagicalActual::Harvestable::DNANKAKBINA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "DNANKAKBINA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::DKJFPDMDIAA
// Il2CppName: DKJFPDMDIAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::Il2CppObject*)>(&MagicalActual::Harvestable::DKJFPDMDIAA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "DKJFPDMDIAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::EGJMIHFLOKP
// Il2CppName: EGJMIHFLOKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Harvestable::EGJMIHFLOKP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "EGJMIHFLOKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::NFOMCBNAELO
// Il2CppName: NFOMCBNAELO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::StringW)>(&MagicalActual::Harvestable::NFOMCBNAELO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "NFOMCBNAELO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::EPFEODJAIFP
// Il2CppName: EPFEODJAIFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::System::Collections::ArrayList*)>(&MagicalActual::Harvestable::EPFEODJAIFP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "EPFEODJAIFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::NEMKNLGDEAK
// Il2CppName: NEMKNLGDEAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Harvestable::NEMKNLGDEAK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "NEMKNLGDEAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::CPJDODIDIFB
// Il2CppName: CPJDODIDIFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::System::Collections::ArrayList*)>(&MagicalActual::Harvestable::CPJDODIDIFB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "CPJDODIDIFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::BCHFNNLNEAL
// Il2CppName: BCHFNNLNEAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::Harvestable::*)()>(&MagicalActual::Harvestable::BCHFNNLNEAL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "BCHFNNLNEAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::NJMPAJNHCBI
// Il2CppName: NJMPAJNHCBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::System::Collections::ArrayList*)>(&MagicalActual::Harvestable::NJMPAJNHCBI)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "NJMPAJNHCBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::IGFHPLANLEB
// Il2CppName: IGFHPLANLEB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::Harvestable::*)()>(&MagicalActual::Harvestable::IGFHPLANLEB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "IGFHPLANLEB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::EPCHCAIOPAM
// Il2CppName: EPCHCAIOPAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::System::Collections::ArrayList*)>(&MagicalActual::Harvestable::EPCHCAIOPAM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "EPCHCAIOPAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::MJJCECBPFHN
// Il2CppName: MJJCECBPFHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::Il2CppObject*)>(&MagicalActual::Harvestable::MJJCECBPFHN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "MJJCECBPFHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Harvestable::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::EDDNMCBMJEO
// Il2CppName: EDDNMCBMJEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::Harvestable::*)()>(&MagicalActual::Harvestable::EDDNMCBMJEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "EDDNMCBMJEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::EMAKGFEDBCL
// Il2CppName: EMAKGFEDBCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::Harvestable::*)()>(&MagicalActual::Harvestable::EMAKGFEDBCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "EMAKGFEDBCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::OIPLBADJHFI
// Il2CppName: OIPLBADJHFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Harvestable::OIPLBADJHFI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "OIPLBADJHFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::KEHLKNKNOJA
// Il2CppName: KEHLKNKNOJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::StringW)>(&MagicalActual::Harvestable::KEHLKNKNOJA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "KEHLKNKNOJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::AGKHMBHBNFM
// Il2CppName: AGKHMBHBNFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Harvestable::AGKHMBHBNFM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "AGKHMBHBNFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::OCGPAEECBIG
// Il2CppName: OCGPAEECBIG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::StringW)>(&MagicalActual::Harvestable::OCGPAEECBIG)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "OCGPAEECBIG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::MAABAPHLBKB
// Il2CppName: MAABAPHLBKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::Harvestable::*)()>(&MagicalActual::Harvestable::MAABAPHLBKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "MAABAPHLBKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::NGBDLGIFKDI
// Il2CppName: NGBDLGIFKDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::Il2CppObject*)>(&MagicalActual::Harvestable::NGBDLGIFKDI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "NGBDLGIFKDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::AHMDBFCAJCP
// Il2CppName: AHMDBFCAJCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::Harvestable::*)()>(&MagicalActual::Harvestable::AHMDBFCAJCP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "AHMDBFCAJCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::DKDBFFDLADP
// Il2CppName: DKDBFFDLADP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Harvestable::DKDBFFDLADP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "DKDBFFDLADP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Harvestable::EEMMENLIFGF
// Il2CppName: EEMMENLIFGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Harvestable::*)(::System::Collections::ArrayList*)>(&MagicalActual::Harvestable::EEMMENLIFGF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Harvestable*), "EEMMENLIFGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
