// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: AlchemyStationEmptyBottle
  class AlchemyStationEmptyBottle;
  // Forward declaring type: GenericChest
  class GenericChest;
  // Forward declaring type: ItemContainer
  class ItemContainer;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Material
  class Material;
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: AlchemyStation
  class AlchemyStation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::AlchemyStation);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::AlchemyStation*, "MagicalActual", "AlchemyStation");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x109
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.AlchemyStation
  // [TokenAttribute] Offset: FFFFFFFF
  class AlchemyStation : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::AlchemyStation::$$c__DisplayClass31_0
    class $$c__DisplayClass31_0;
    // Nested type: ::MagicalActual::AlchemyStation::$$c
    class $$c;
    public:
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public UnityEngine.GameObject ingredientPrefab
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* ingredientPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject[] ingredientSlots
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::GameObject*> ingredientSlots;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject emptySlot
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* emptySlot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject emptyBottlePrefab
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* emptyBottlePrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.AlchemyStationEmptyBottle PMBCJCKFLAK
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::AlchemyStationEmptyBottle* PMBCJCKFLAK;
    // Field size check
    static_assert(sizeof(::MagicalActual::AlchemyStationEmptyBottle*) == 0x8);
    // public MagicalActual.GenericChest myChest
    // Size: 0x8
    // Offset: 0x48
    ::MagicalActual::GenericChest* myChest;
    // Field size check
    static_assert(sizeof(::MagicalActual::GenericChest*) == 0x8);
    // private ExtUI.InventoryItemInstance[] CNCDEHCLCGP
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<::ExtUI::InventoryItemInstance*> CNCDEHCLCGP;
    // Field size check
    static_assert(sizeof(::ArrayW<::ExtUI::InventoryItemInstance*>) == 0x8);
    // private UnityEngine.Collider[] JGOGJDHABHN
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<::UnityEngine::Collider*> JGOGJDHABHN;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // private UnityEngine.Vector3 IGOEOPNBIGI
    // Size: 0xC
    // Offset: 0x60
    ::UnityEngine::Vector3 IGOEOPNBIGI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: IGOEOPNBIGI and: LNABACFKNBA
    char __padding9[0x4] = {};
    // private MagicalActual.ItemContainer LNABACFKNBA
    // Size: 0x8
    // Offset: 0x70
    ::MagicalActual::ItemContainer* LNABACFKNBA;
    // Field size check
    static_assert(sizeof(::MagicalActual::ItemContainer*) == 0x8);
    // public UnityEngine.GameObject myPotLiquid
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::GameObject* myPotLiquid;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Material GPBDOGLEDBK
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::Material* GPBDOGLEDBK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.GameObject ingredientAddedVfx
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::GameObject* ingredientAddedVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject heatIncreasedVfx
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::GameObject* heatIncreasedVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject FadeUpTextPrefab
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::GameObject* FadeUpTextPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Color ONHIKLAKLLO
    // Size: 0x10
    // Offset: 0xA0
    ::UnityEngine::Color ONHIKLAKLLO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color OPODONGHBHF
    // Size: 0x10
    // Offset: 0xB0
    ::UnityEngine::Color OPODONGHBHF;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color ADKOIAPEMNO
    // Size: 0x10
    // Offset: 0xC0
    ::UnityEngine::Color ADKOIAPEMNO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color GICNIKNKKLK
    // Size: 0x10
    // Offset: 0xD0
    ::UnityEngine::Color GICNIKNKKLK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color MBKDBELPIMB
    // Size: 0x10
    // Offset: 0xE0
    ::UnityEngine::Color MBKDBELPIMB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.GameObject vfxCraftSuccess
    // Size: 0x8
    // Offset: 0xF0
    ::UnityEngine::GameObject* vfxCraftSuccess;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean BCMGLAKDLKM
    // Size: 0x1
    // Offset: 0xF8
    bool BCMGLAKDLKM;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: BCMGLAKDLKM and: OrbusNetComponent
    char __padding22[0x7] = {};
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x100
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Byte ECNCNIHJMPL
    // Size: 0x1
    // Offset: 0x108
    uint8_t ECNCNIHJMPL;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public UnityEngine.GameObject ingredientPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ingredientPrefab();
    // Get instance field reference: public UnityEngine.GameObject[] ingredientSlots
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_ingredientSlots();
    // Get instance field reference: public UnityEngine.GameObject emptySlot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_emptySlot();
    // Get instance field reference: public UnityEngine.GameObject emptyBottlePrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_emptyBottlePrefab();
    // Get instance field reference: private MagicalActual.AlchemyStationEmptyBottle PMBCJCKFLAK
    [[deprecated("Use field access instead!")]] ::MagicalActual::AlchemyStationEmptyBottle*& dyn_PMBCJCKFLAK();
    // Get instance field reference: public MagicalActual.GenericChest myChest
    [[deprecated("Use field access instead!")]] ::MagicalActual::GenericChest*& dyn_myChest();
    // Get instance field reference: private ExtUI.InventoryItemInstance[] CNCDEHCLCGP
    [[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::InventoryItemInstance*>& dyn_CNCDEHCLCGP();
    // Get instance field reference: private UnityEngine.Collider[] JGOGJDHABHN
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_JGOGJDHABHN();
    // Get instance field reference: private UnityEngine.Vector3 IGOEOPNBIGI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_IGOEOPNBIGI();
    // Get instance field reference: private MagicalActual.ItemContainer LNABACFKNBA
    [[deprecated("Use field access instead!")]] ::MagicalActual::ItemContainer*& dyn_LNABACFKNBA();
    // Get instance field reference: public UnityEngine.GameObject myPotLiquid
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_myPotLiquid();
    // Get instance field reference: private UnityEngine.Material GPBDOGLEDBK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_GPBDOGLEDBK();
    // Get instance field reference: public UnityEngine.GameObject ingredientAddedVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ingredientAddedVfx();
    // Get instance field reference: public UnityEngine.GameObject heatIncreasedVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_heatIncreasedVfx();
    // Get instance field reference: public UnityEngine.GameObject FadeUpTextPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_FadeUpTextPrefab();
    // Get instance field reference: private UnityEngine.Color ONHIKLAKLLO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_ONHIKLAKLLO();
    // Get instance field reference: private UnityEngine.Color OPODONGHBHF
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_OPODONGHBHF();
    // Get instance field reference: private UnityEngine.Color ADKOIAPEMNO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_ADKOIAPEMNO();
    // Get instance field reference: private UnityEngine.Color GICNIKNKKLK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_GICNIKNKKLK();
    // Get instance field reference: private UnityEngine.Color MBKDBELPIMB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_MBKDBELPIMB();
    // Get instance field reference: public UnityEngine.GameObject vfxCraftSuccess
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxCraftSuccess();
    // Get instance field reference: private System.Boolean BCMGLAKDLKM
    [[deprecated("Use field access instead!")]] bool& dyn_BCMGLAKDLKM();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private System.Byte ECNCNIHJMPL
    [[deprecated("Use field access instead!")]] uint8_t& dyn_ECNCNIHJMPL();
    // private System.Void FDDDNDIGIOD()
    // Offset: 0x1A0D714
    void FDDDNDIGIOD();
    // private System.Void KOGJHMICELF()
    // Offset: 0x1A0D744
    void KOGJHMICELF();
    // public System.Void NEMKNLGDEAK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A0DF18
    void NEMKNLGDEAK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void BBJGCNABFCG()
    // Offset: 0x1A0E124
    void BBJGCNABFCG();
    // private System.Void Awake()
    // Offset: 0x1A0E1F0
    void Awake();
    // private System.Void JCJCMKPOAKK()
    // Offset: 0x1A0E2B0
    void JCJCMKPOAKK();
    // public System.Void AKEEGHHHCKK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A0E370
    void AKEEGHHHCKK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void FGGKEEKHDHN()
    // Offset: 0x1A0E57C
    void FGGKEEKHDHN();
    // private System.Void AKGFEENGKJD()
    // Offset: 0x1A0F3B8
    void AKGFEENGKJD();
    // public System.Void NOLENMEIGLN(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A0F6A0
    void NOLENMEIGLN(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void FLJMJKAKNBH()
    // Offset: 0x1A0F8AC
    void FLJMJKAKNBH();
    // private System.Void EMOENNAAFKA(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A10164
    void EMOENNAAFKA(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void GEIKJHJLKOD(MagicalActual.ItemContainer ADLACIABAGF)
    // Offset: 0x1A10314
    void GEIKJHJLKOD(::MagicalActual::ItemContainer* ADLACIABAGF);
    // private System.Void JPHEBENNLCB()
    // Offset: 0x1A10318
    void JPHEBENNLCB();
    // private System.Void GNJHILJGBDG(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A10484
    void GNJHILJGBDG(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void AIKBLNGPOON()
    // Offset: 0x1A107D4
    void AIKBLNGPOON();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A10894
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JBEJCKDIKIE()
    // Offset: 0x1A10A98
    void JBEJCKDIKIE();
    // public System.Void LCMLLJGPKEM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A10B58
    void LCMLLJGPKEM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JIKJBAMGGBF()
    // Offset: 0x1A10D64
    void JIKJBAMGGBF();
    // public System.Void .ctor()
    // Offset: 0x1A10E30
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AlchemyStation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::AlchemyStation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AlchemyStation*, creationType>()));
    }
    // private System.Void DetachedFromInterface()
    // Offset: 0x1A10FF8
    void DetachedFromInterface();
    // private System.Void DBCBMMFMBCB()
    // Offset: 0x1A0EC08
    void DBCBMMFMBCB();
    // private System.Void EMFNLBKCDPA(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A11028
    void EMFNLBKCDPA(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void MCJBHMBCGKO()
    // Offset: 0x1A0F538
    void MCJBHMBCGKO();
    // private System.Void KDDFLONJGJI(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A111D8
    void KDDFLONJGJI(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void HAIOJAFFGIP(System.String JAHFDBPFMFJ)
    // Offset: 0x1A11390
    void HAIOJAFFGIP(::StringW JAHFDBPFMFJ);
    // private System.Void ICAIBPAOMMF()
    // Offset: 0x1A11604
    void ICAIBPAOMMF();
    // private System.Void JCOLEGBJENO()
    // Offset: 0x1A11634
    void JCOLEGBJENO();
    // private System.Void EDJIILEFNPD()
    // Offset: 0x1A117A0
    void EDJIILEFNPD();
    // private System.Void GKLIKFCECHE()
    // Offset: 0x1A11860
    void GKLIKFCECHE();
    // private System.Void ItemContainerInventoryChanged(MagicalActual.ItemContainer ADLACIABAGF)
    // Offset: 0x1A119C8
    void ItemContainerInventoryChanged(::MagicalActual::ItemContainer* ADLACIABAGF);
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A119CC
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OnDestroy()
    // Offset: 0x1A11BD8
    void OnDestroy();
    // private System.Void CMLPAEBEBFN(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A11CA4
    void CMLPAEBEBFN(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void OJOCKFKDIFD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A11E54
    void OJOCKFKDIFD(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void PGOHFNBICJF()
    // Offset: 0x1A11F38
    void PGOHFNBICJF();
    // private System.Void PDKNDPMFGDG()
    // Offset: 0x1A120A0
    void PDKNDPMFGDG();
    // private System.Void FixedUpdate()
    // Offset: 0x1A120D0
    void FixedUpdate();
    // private System.Void MNGOIIANEAB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A12750
    void MNGOIIANEAB(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void ILMPDOMGOAN(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A12834
    void ILMPDOMGOAN(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void IAMHAELCKHH()
    // Offset: 0x1A129B8
    void IAMHAELCKHH();
    // private System.Void FNHKBJFEINM(System.String JAHFDBPFMFJ)
    // Offset: 0x1A10568
    void FNHKBJFEINM(::StringW JAHFDBPFMFJ);
    // private System.Void HGNMPIJGKAK(MagicalActual.ItemContainer ADLACIABAGF)
    // Offset: 0x1A12A78
    void HGNMPIJGKAK(::MagicalActual::ItemContainer* ADLACIABAGF);
    // private System.Void MHIFAOHPJKA()
    // Offset: 0x1A0FA18
    void MHIFAOHPJKA();
    // private System.Void Start()
    // Offset: 0x1A12A7C
    void Start();
    // private System.Void LFLHEBHOGBF(System.Object OMLPNCLFFMJ)
    // Offset: 0x1A12BFC
    void LFLHEBHOGBF(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void IKDGLCBOCJG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A12D84
    void IKDGLCBOCJG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void DEAAALJHHCE()
    // Offset: 0x1A12F90
    void DEAAALJHHCE();
    // public System.Void OIPLBADJHFI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A12FC0
    void OIPLBADJHFI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void NMPGLDGDDNL(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A131CC
    void NMPGLDGDDNL(::MagicalActual::NetEntity* CMLIHJCOINC);
  }; // MagicalActual.AlchemyStation
  #pragma pack(pop)
  static check_size<sizeof(AlchemyStation), 264 + sizeof(uint8_t)> __MagicalActual_AlchemyStationSizeCheck;
  static_assert(sizeof(AlchemyStation) == 0x109);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::FDDDNDIGIOD
// Il2CppName: FDDDNDIGIOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::FDDDNDIGIOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "FDDDNDIGIOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::KOGJHMICELF
// Il2CppName: KOGJHMICELF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::KOGJHMICELF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "KOGJHMICELF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::NEMKNLGDEAK
// Il2CppName: NEMKNLGDEAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::AlchemyStation::NEMKNLGDEAK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "NEMKNLGDEAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::BBJGCNABFCG
// Il2CppName: BBJGCNABFCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::BBJGCNABFCG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "BBJGCNABFCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::JCJCMKPOAKK
// Il2CppName: JCJCMKPOAKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::JCJCMKPOAKK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "JCJCMKPOAKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::AKEEGHHHCKK
// Il2CppName: AKEEGHHHCKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::AlchemyStation::AKEEGHHHCKK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "AKEEGHHHCKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::FGGKEEKHDHN
// Il2CppName: FGGKEEKHDHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::FGGKEEKHDHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "FGGKEEKHDHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::NOLENMEIGLN
// Il2CppName: NOLENMEIGLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::AlchemyStation::NOLENMEIGLN)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "NOLENMEIGLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::FLJMJKAKNBH
// Il2CppName: FLJMJKAKNBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::FLJMJKAKNBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "FLJMJKAKNBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::EMOENNAAFKA
// Il2CppName: EMOENNAAFKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::System::Collections::ArrayList*)>(&MagicalActual::AlchemyStation::EMOENNAAFKA)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "EMOENNAAFKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::GEIKJHJLKOD
// Il2CppName: GEIKJHJLKOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::ItemContainer*)>(&MagicalActual::AlchemyStation::GEIKJHJLKOD)> {
  static const MethodInfo* get() {
    static auto* ADLACIABAGF = &::il2cpp_utils::GetClassFromName("MagicalActual", "ItemContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "GEIKJHJLKOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ADLACIABAGF});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::JPHEBENNLCB
// Il2CppName: JPHEBENNLCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::JPHEBENNLCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "JPHEBENNLCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::GNJHILJGBDG
// Il2CppName: GNJHILJGBDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::System::Collections::ArrayList*)>(&MagicalActual::AlchemyStation::GNJHILJGBDG)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "GNJHILJGBDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::AIKBLNGPOON
// Il2CppName: AIKBLNGPOON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::AIKBLNGPOON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "AIKBLNGPOON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::AlchemyStation::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::JBEJCKDIKIE
// Il2CppName: JBEJCKDIKIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::JBEJCKDIKIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "JBEJCKDIKIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::LCMLLJGPKEM
// Il2CppName: LCMLLJGPKEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::AlchemyStation::LCMLLJGPKEM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "LCMLLJGPKEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::JIKJBAMGGBF
// Il2CppName: JIKJBAMGGBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::JIKJBAMGGBF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "JIKJBAMGGBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::DetachedFromInterface
// Il2CppName: DetachedFromInterface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::DetachedFromInterface)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "DetachedFromInterface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::DBCBMMFMBCB
// Il2CppName: DBCBMMFMBCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::DBCBMMFMBCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "DBCBMMFMBCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::EMFNLBKCDPA
// Il2CppName: EMFNLBKCDPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::System::Collections::ArrayList*)>(&MagicalActual::AlchemyStation::EMFNLBKCDPA)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "EMFNLBKCDPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::MCJBHMBCGKO
// Il2CppName: MCJBHMBCGKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::MCJBHMBCGKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "MCJBHMBCGKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::KDDFLONJGJI
// Il2CppName: KDDFLONJGJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::System::Collections::ArrayList*)>(&MagicalActual::AlchemyStation::KDDFLONJGJI)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "KDDFLONJGJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::HAIOJAFFGIP
// Il2CppName: HAIOJAFFGIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::StringW)>(&MagicalActual::AlchemyStation::HAIOJAFFGIP)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "HAIOJAFFGIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::ICAIBPAOMMF
// Il2CppName: ICAIBPAOMMF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::ICAIBPAOMMF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "ICAIBPAOMMF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::JCOLEGBJENO
// Il2CppName: JCOLEGBJENO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::JCOLEGBJENO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "JCOLEGBJENO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::EDJIILEFNPD
// Il2CppName: EDJIILEFNPD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::EDJIILEFNPD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "EDJIILEFNPD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::GKLIKFCECHE
// Il2CppName: GKLIKFCECHE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::GKLIKFCECHE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "GKLIKFCECHE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::ItemContainerInventoryChanged
// Il2CppName: ItemContainerInventoryChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::ItemContainer*)>(&MagicalActual::AlchemyStation::ItemContainerInventoryChanged)> {
  static const MethodInfo* get() {
    static auto* ADLACIABAGF = &::il2cpp_utils::GetClassFromName("MagicalActual", "ItemContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "ItemContainerInventoryChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ADLACIABAGF});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::AlchemyStation::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::CMLPAEBEBFN
// Il2CppName: CMLPAEBEBFN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::System::Collections::ArrayList*)>(&MagicalActual::AlchemyStation::CMLPAEBEBFN)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "CMLPAEBEBFN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::OJOCKFKDIFD
// Il2CppName: OJOCKFKDIFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::System::Collections::ArrayList*)>(&MagicalActual::AlchemyStation::OJOCKFKDIFD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "OJOCKFKDIFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::PGOHFNBICJF
// Il2CppName: PGOHFNBICJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::PGOHFNBICJF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "PGOHFNBICJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::PDKNDPMFGDG
// Il2CppName: PDKNDPMFGDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::PDKNDPMFGDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "PDKNDPMFGDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::MNGOIIANEAB
// Il2CppName: MNGOIIANEAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::System::Collections::ArrayList*)>(&MagicalActual::AlchemyStation::MNGOIIANEAB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "MNGOIIANEAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::ILMPDOMGOAN
// Il2CppName: ILMPDOMGOAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::Il2CppObject*)>(&MagicalActual::AlchemyStation::ILMPDOMGOAN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "ILMPDOMGOAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::IAMHAELCKHH
// Il2CppName: IAMHAELCKHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::IAMHAELCKHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "IAMHAELCKHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::FNHKBJFEINM
// Il2CppName: FNHKBJFEINM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::StringW)>(&MagicalActual::AlchemyStation::FNHKBJFEINM)> {
  static const MethodInfo* get() {
    static auto* JAHFDBPFMFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "FNHKBJFEINM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JAHFDBPFMFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::HGNMPIJGKAK
// Il2CppName: HGNMPIJGKAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::ItemContainer*)>(&MagicalActual::AlchemyStation::HGNMPIJGKAK)> {
  static const MethodInfo* get() {
    static auto* ADLACIABAGF = &::il2cpp_utils::GetClassFromName("MagicalActual", "ItemContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "HGNMPIJGKAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ADLACIABAGF});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::MHIFAOHPJKA
// Il2CppName: MHIFAOHPJKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::MHIFAOHPJKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "MHIFAOHPJKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::LFLHEBHOGBF
// Il2CppName: LFLHEBHOGBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::Il2CppObject*)>(&MagicalActual::AlchemyStation::LFLHEBHOGBF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "LFLHEBHOGBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::IKDGLCBOCJG
// Il2CppName: IKDGLCBOCJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::AlchemyStation::IKDGLCBOCJG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "IKDGLCBOCJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::DEAAALJHHCE
// Il2CppName: DEAAALJHHCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)()>(&MagicalActual::AlchemyStation::DEAAALJHHCE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "DEAAALJHHCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::OIPLBADJHFI
// Il2CppName: OIPLBADJHFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::AlchemyStation::OIPLBADJHFI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "OIPLBADJHFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::AlchemyStation::NMPGLDGDDNL
// Il2CppName: NMPGLDGDDNL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AlchemyStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::AlchemyStation::NMPGLDGDDNL)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AlchemyStation*), "NMPGLDGDDNL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
