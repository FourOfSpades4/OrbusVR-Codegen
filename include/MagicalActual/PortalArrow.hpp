// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: BezierSplineWalker
  class BezierSplineWalker;
  // Forward declaring type: BezierSpline
  class BezierSpline;
  // Forward declaring type: SlugInteractable
  class SlugInteractable;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Rigidbody
  class Rigidbody;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PhysicsInteractable
  class PhysicsInteractable;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PortalArrow
  class PortalArrow;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PortalArrow);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PortalArrow*, "MagicalActual", "PortalArrow");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x97
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PortalArrow
  // [TokenAttribute] Offset: FFFFFFFF
  class PortalArrow : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::PortalArrow::$$c
    class $$c;
    public:
    // private UnityEngine.Transform arrow
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Transform* arrow;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private MagicalActual.BezierSplineWalker walker
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::BezierSplineWalker* walker;
    // Field size check
    static_assert(sizeof(::MagicalActual::BezierSplineWalker*) == 0x8);
    // private MagicalActual.BezierSpline spline
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::BezierSpline* spline;
    // Field size check
    static_assert(sizeof(::MagicalActual::BezierSpline*) == 0x8);
    // private UnityEngine.Transform endTransform
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Transform* endTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public UnityEngine.Transform slugStart
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Transform* slugStart;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public MagicalActual.SlugInteractable slug
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::SlugInteractable* slug;
    // Field size check
    static_assert(sizeof(::MagicalActual::SlugInteractable*) == 0x8);
    // private System.Single timeUntilMonster
    // Size: 0x4
    // Offset: 0x48
    float timeUntilMonster;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: timeUntilMonster and: INIFCCFINGH
    char __padding6[0x4] = {};
    // private PhysicsInteractable INIFCCFINGH
    // Size: 0x8
    // Offset: 0x50
    ::GlobalNamespace::PhysicsInteractable* INIFCCFINGH;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PhysicsInteractable*) == 0x8);
    // private UnityEngine.Transform DNFLFKPOKIK
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Transform* DNFLFKPOKIK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Rigidbody COAGEBHFBCF
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Rigidbody* COAGEBHFBCF;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private UnityEngine.Vector3 KCOKPGCNCLA
    // Size: 0xC
    // Offset: 0x68
    ::UnityEngine::Vector3 KCOKPGCNCLA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 CPJOODOLKCD
    // Size: 0xC
    // Offset: 0x74
    ::UnityEngine::Vector3 CPJOODOLKCD;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // protected MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x80
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x88
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.UInt16 PAAOBEIDFPN
    // Size: 0x2
    // Offset: 0x90
    uint16_t PAAOBEIDFPN;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.Boolean FCBDBGELBGF
    // Size: 0x1
    // Offset: 0x92
    bool FCBDBGELBGF;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean AHMEMCFDOPO
    // Size: 0x1
    // Offset: 0x93
    bool AHMEMCFDOPO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean AAHFDLDPBHE
    // Size: 0x1
    // Offset: 0x94
    bool AAHFDLDPBHE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GAAHPJIFLGF
    // Size: 0x1
    // Offset: 0x95
    bool GAAHPJIFLGF;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean AGBJPGKPEEJ
    // Size: 0x1
    // Offset: 0x96
    bool AGBJPGKPEEJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Transform arrow
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_arrow();
    // Get instance field reference: private MagicalActual.BezierSplineWalker walker
    [[deprecated("Use field access instead!")]] ::MagicalActual::BezierSplineWalker*& dyn_walker();
    // Get instance field reference: private MagicalActual.BezierSpline spline
    [[deprecated("Use field access instead!")]] ::MagicalActual::BezierSpline*& dyn_spline();
    // Get instance field reference: private UnityEngine.Transform endTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_endTransform();
    // Get instance field reference: public UnityEngine.Transform slugStart
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_slugStart();
    // Get instance field reference: public MagicalActual.SlugInteractable slug
    [[deprecated("Use field access instead!")]] ::MagicalActual::SlugInteractable*& dyn_slug();
    // Get instance field reference: private System.Single timeUntilMonster
    [[deprecated("Use field access instead!")]] float& dyn_timeUntilMonster();
    // Get instance field reference: private PhysicsInteractable INIFCCFINGH
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PhysicsInteractable*& dyn_INIFCCFINGH();
    // Get instance field reference: private UnityEngine.Transform DNFLFKPOKIK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_DNFLFKPOKIK();
    // Get instance field reference: private UnityEngine.Rigidbody COAGEBHFBCF
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_COAGEBHFBCF();
    // Get instance field reference: private UnityEngine.Vector3 KCOKPGCNCLA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_KCOKPGCNCLA();
    // Get instance field reference: private UnityEngine.Vector3 CPJOODOLKCD
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_CPJOODOLKCD();
    // Get instance field reference: protected MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private System.UInt16 PAAOBEIDFPN
    [[deprecated("Use field access instead!")]] uint16_t& dyn_PAAOBEIDFPN();
    // Get instance field reference: private System.Boolean FCBDBGELBGF
    [[deprecated("Use field access instead!")]] bool& dyn_FCBDBGELBGF();
    // Get instance field reference: private System.Boolean AHMEMCFDOPO
    [[deprecated("Use field access instead!")]] bool& dyn_AHMEMCFDOPO();
    // Get instance field reference: private System.Boolean AAHFDLDPBHE
    [[deprecated("Use field access instead!")]] bool& dyn_AAHFDLDPBHE();
    // Get instance field reference: private System.Boolean GAAHPJIFLGF
    [[deprecated("Use field access instead!")]] bool& dyn_GAAHPJIFLGF();
    // Get instance field reference: private System.Boolean AGBJPGKPEEJ
    [[deprecated("Use field access instead!")]] bool& dyn_AGBJPGKPEEJ();
    // private System.Void Start()
    // Offset: 0x1B02184
    void Start();
    // private System.Void DMKOCMNNNAB()
    // Offset: 0x1B02234
    void DMKOCMNNNAB();
    // public System.Void .ctor()
    // Offset: 0x1B0243C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PortalArrow* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PortalArrow::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PortalArrow*, creationType>()));
    }
    // private System.Void OFPOBBPNFIN()
    // Offset: 0x1B02494
    void OFPOBBPNFIN();
    // private System.Void JIKJBAMGGBF()
    // Offset: 0x1B02600
    void JIKJBAMGGBF();
    // private System.Void OJOFNBCNNEH(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B0268C
    void OJOFNBCNNEH(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void SlugHitPortal()
    // Offset: 0x1B0276C
    void SlugHitPortal();
    // private System.Void FEEGLHNHCME()
    // Offset: 0x1B0287C
    void FEEGLHNHCME();
    // private System.Void AKGFEENGKJD()
    // Offset: 0x1B02A6C
    void AKGFEENGKJD();
    // private System.Void LMLPFCKCGFP(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B02B1C
    void LMLPFCKCGFP(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Update()
    // Offset: 0x1B02D30
    void Update();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1B03214
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OIICJFNIOMM()
    // Offset: 0x1B02C38
    void OIICJFNIOMM();
    // private System.Void INBJFELEAOG(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B035C8
    void INBJFELEAOG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void HBKOEONKBPM()
    // Offset: 0x1B0300C
    void HBKOEONKBPM();
    // private System.Void JGJNBLPELKM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1B03664
    void JGJNBLPELKM(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void LJPMLNBBBGJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B03668
    void LJPMLNBBBGJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LMGJADIMGHC()
    // Offset: 0x1B036D4
    void LMGJADIMGHC();
    // private System.Void OABFCDJDAPO(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B03760
    void OABFCDJDAPO(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GHEJOAJMCON()
    // Offset: 0x1B02CBC
    void GHEJOAJMCON();
    // private System.Void OnDestroy()
    // Offset: 0x1B037FC
    void OnDestroy();
    // private System.Void BOGIOLMNGEA()
    // Offset: 0x1B0345C
    void BOGIOLMNGEA();
    // private System.Void CINGLNMOGKE(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B03888
    void CINGLNMOGKE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void HPAMMIHFLGO(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B03924
    void HPAMMIHFLGO(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void AMNJEGNNHMP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1B039C0
    void AMNJEGNNHMP(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void EventItemSpawn()
    // Offset: 0x1B039C4
    void EventItemSpawn();
    // public System.Void EAEGELMCMHK()
    // Offset: 0x1B03C74
    void EAEGELMCMHK();
    // private System.Void DNPJDKLBPMN(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B03F28
    void DNPJDKLBPMN(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MIOCIMKKGNC()
    // Offset: 0x1B03FC4
    void MIOCIMKKGNC();
    // private System.Void NMOMJFHOCKI(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B04110
    void NMOMJFHOCKI(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void OKOOGGIEBAC(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B041AC
    void OKOOGGIEBAC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void CBICDJCONEH(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B04248
    void CBICDJCONEH(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LHHCMPKCKGM()
    // Offset: 0x1B042B4
    void LHHCMPKCKGM();
    // private System.Void LBIHKGFMOON()
    // Offset: 0x1B026F8
    void LBIHKGFMOON();
    // private System.Void AAMMKHEDBON()
    // Offset: 0x1B02900
    void AAMMKHEDBON();
    // private System.Void PIGAEPHGDDP(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B044C4
    void PIGAEPHGDDP(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void HLBBPGCNGBN(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B045E0
    void HLBBPGCNGBN(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void DPDDNOBAFIP()
    // Offset: 0x1B04678
    void DPDDNOBAFIP();
    // private System.Void PDLFOHDBOAI()
    // Offset: 0x1B04808
    void PDLFOHDBOAI();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x1B04950
    void DFCOAPEIKLN();
    // private System.Void NMFOLNGLJAI()
    // Offset: 0x1B04A00
    void NMFOLNGLJAI();
    // public System.Void KBBBLMNOAPJ()
    // Offset: 0x1B04C10
    void KBBBLMNOAPJ();
    // private System.Void EKPLIELBJCC(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B04EC0
    void EKPLIELBJCC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BMBEFCPKJPE(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B05050
    void BMBEFCPKJPE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void KOPAOFNLPFK()
    // Offset: 0x1B04FDC
    void KOPAOFNLPFK();
    // public System.Void PCMANMOLHHO()
    // Offset: 0x1B050EC
    void PCMANMOLHHO();
    // private System.Void KPHNFIEHGFH(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B05168
    void KPHNFIEHGFH(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void PPIFBDJHEHG()
    // Offset: 0x1B05204
    void PPIFBDJHEHG();
    // private System.Void CMHIOPHDKCG(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B05414
    void CMHIOPHDKCG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void AAHFJAPJNAE()
    // Offset: 0x1B02EC0
    void AAHFJAPJNAE();
    // public System.Void LEOHDICDJCH()
    // Offset: 0x1B054B0
    void LEOHDICDJCH();
    // public System.Void FNMKMDHHFDG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1B055C0
    void FNMKMDHHFDG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PMJJPJFMLBJ(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1B05808
    void PMJJPJFMLBJ(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void KPLBONDGAJN(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B0580C
    void KPLBONDGAJN(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void OnArrowLanded()
    // Offset: 0x1B05928
    void OnArrowLanded();
  }; // MagicalActual.PortalArrow
  #pragma pack(pop)
  static check_size<sizeof(PortalArrow), 150 + sizeof(bool)> __MagicalActual_PortalArrowSizeCheck;
  static_assert(sizeof(PortalArrow) == 0x97);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PortalArrow::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::DMKOCMNNNAB
// Il2CppName: DMKOCMNNNAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::DMKOCMNNNAB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "DMKOCMNNNAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PortalArrow::OFPOBBPNFIN
// Il2CppName: OFPOBBPNFIN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::OFPOBBPNFIN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "OFPOBBPNFIN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::JIKJBAMGGBF
// Il2CppName: JIKJBAMGGBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::JIKJBAMGGBF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "JIKJBAMGGBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::OJOFNBCNNEH
// Il2CppName: OJOFNBCNNEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::OJOFNBCNNEH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "OJOFNBCNNEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::SlugHitPortal
// Il2CppName: SlugHitPortal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::SlugHitPortal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "SlugHitPortal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::FEEGLHNHCME
// Il2CppName: FEEGLHNHCME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::FEEGLHNHCME)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "FEEGLHNHCME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::LMLPFCKCGFP
// Il2CppName: LMLPFCKCGFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::LMLPFCKCGFP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "LMLPFCKCGFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PortalArrow::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::OIICJFNIOMM
// Il2CppName: OIICJFNIOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::OIICJFNIOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "OIICJFNIOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::INBJFELEAOG
// Il2CppName: INBJFELEAOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::INBJFELEAOG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "INBJFELEAOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::HBKOEONKBPM
// Il2CppName: HBKOEONKBPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::HBKOEONKBPM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "HBKOEONKBPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::JGJNBLPELKM
// Il2CppName: JGJNBLPELKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::System::Collections::ArrayList*)>(&MagicalActual::PortalArrow::JGJNBLPELKM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "JGJNBLPELKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::LJPMLNBBBGJ
// Il2CppName: LJPMLNBBBGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::LJPMLNBBBGJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "LJPMLNBBBGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::LMGJADIMGHC
// Il2CppName: LMGJADIMGHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::LMGJADIMGHC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "LMGJADIMGHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::OABFCDJDAPO
// Il2CppName: OABFCDJDAPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::OABFCDJDAPO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "OABFCDJDAPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::GHEJOAJMCON
// Il2CppName: GHEJOAJMCON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::GHEJOAJMCON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "GHEJOAJMCON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::BOGIOLMNGEA
// Il2CppName: BOGIOLMNGEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::BOGIOLMNGEA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "BOGIOLMNGEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::CINGLNMOGKE
// Il2CppName: CINGLNMOGKE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::CINGLNMOGKE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "CINGLNMOGKE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::HPAMMIHFLGO
// Il2CppName: HPAMMIHFLGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::HPAMMIHFLGO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "HPAMMIHFLGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::AMNJEGNNHMP
// Il2CppName: AMNJEGNNHMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::System::Collections::ArrayList*)>(&MagicalActual::PortalArrow::AMNJEGNNHMP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "AMNJEGNNHMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::EventItemSpawn
// Il2CppName: EventItemSpawn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::EventItemSpawn)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "EventItemSpawn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::EAEGELMCMHK
// Il2CppName: EAEGELMCMHK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::EAEGELMCMHK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "EAEGELMCMHK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::DNPJDKLBPMN
// Il2CppName: DNPJDKLBPMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::DNPJDKLBPMN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "DNPJDKLBPMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::MIOCIMKKGNC
// Il2CppName: MIOCIMKKGNC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::MIOCIMKKGNC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "MIOCIMKKGNC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::NMOMJFHOCKI
// Il2CppName: NMOMJFHOCKI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::NMOMJFHOCKI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "NMOMJFHOCKI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::OKOOGGIEBAC
// Il2CppName: OKOOGGIEBAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::OKOOGGIEBAC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "OKOOGGIEBAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::CBICDJCONEH
// Il2CppName: CBICDJCONEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::CBICDJCONEH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "CBICDJCONEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::LHHCMPKCKGM
// Il2CppName: LHHCMPKCKGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::LHHCMPKCKGM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "LHHCMPKCKGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::LBIHKGFMOON
// Il2CppName: LBIHKGFMOON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::LBIHKGFMOON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "LBIHKGFMOON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::AAMMKHEDBON
// Il2CppName: AAMMKHEDBON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::AAMMKHEDBON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "AAMMKHEDBON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::PIGAEPHGDDP
// Il2CppName: PIGAEPHGDDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::PIGAEPHGDDP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "PIGAEPHGDDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::HLBBPGCNGBN
// Il2CppName: HLBBPGCNGBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::HLBBPGCNGBN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "HLBBPGCNGBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::DPDDNOBAFIP
// Il2CppName: DPDDNOBAFIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::DPDDNOBAFIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "DPDDNOBAFIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::PDLFOHDBOAI
// Il2CppName: PDLFOHDBOAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::PDLFOHDBOAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "PDLFOHDBOAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::NMFOLNGLJAI
// Il2CppName: NMFOLNGLJAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::NMFOLNGLJAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "NMFOLNGLJAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::KBBBLMNOAPJ
// Il2CppName: KBBBLMNOAPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::KBBBLMNOAPJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "KBBBLMNOAPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::EKPLIELBJCC
// Il2CppName: EKPLIELBJCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::EKPLIELBJCC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "EKPLIELBJCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::BMBEFCPKJPE
// Il2CppName: BMBEFCPKJPE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::BMBEFCPKJPE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "BMBEFCPKJPE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::KOPAOFNLPFK
// Il2CppName: KOPAOFNLPFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::KOPAOFNLPFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "KOPAOFNLPFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::PCMANMOLHHO
// Il2CppName: PCMANMOLHHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::PCMANMOLHHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "PCMANMOLHHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::KPHNFIEHGFH
// Il2CppName: KPHNFIEHGFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::KPHNFIEHGFH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "KPHNFIEHGFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::PPIFBDJHEHG
// Il2CppName: PPIFBDJHEHG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::PPIFBDJHEHG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "PPIFBDJHEHG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::CMHIOPHDKCG
// Il2CppName: CMHIOPHDKCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::CMHIOPHDKCG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "CMHIOPHDKCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::AAHFJAPJNAE
// Il2CppName: AAHFJAPJNAE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::AAHFJAPJNAE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "AAHFJAPJNAE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::LEOHDICDJCH
// Il2CppName: LEOHDICDJCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::LEOHDICDJCH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "LEOHDICDJCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::FNMKMDHHFDG
// Il2CppName: FNMKMDHHFDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PortalArrow::FNMKMDHHFDG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "FNMKMDHHFDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::PMJJPJFMLBJ
// Il2CppName: PMJJPJFMLBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::System::Collections::ArrayList*)>(&MagicalActual::PortalArrow::PMJJPJFMLBJ)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "PMJJPJFMLBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::KPLBONDGAJN
// Il2CppName: KPLBONDGAJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)(::Il2CppObject*)>(&MagicalActual::PortalArrow::KPLBONDGAJN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "KPLBONDGAJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PortalArrow::OnArrowLanded
// Il2CppName: OnArrowLanded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PortalArrow::*)()>(&MagicalActual::PortalArrow::OnArrowLanded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PortalArrow*), "OnArrowLanded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
