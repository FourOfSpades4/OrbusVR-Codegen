// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_PolymorphChicken
  class M_PolymorphChicken;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_PolymorphChicken);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_PolymorphChicken*, "MagicalActual", "M_PolymorphChicken");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_PolymorphChicken
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD48A0
  class M_PolymorphChicken : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public UnityEngine.GameObject vfxPoof
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxPoof;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x30
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject[] styles
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::UnityEngine::GameObject*> styles;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public UnityEngine.GameObject vfxPoof
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxPoof();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public UnityEngine.GameObject[] styles
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_styles();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x25EC59C
    void IPIFMKAGODD();
    // public System.Void EGJMIHFLOKP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x25EC5F4
    void EGJMIHFLOKP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JKJBPLOKPOG()
    // Offset: 0x25EC6A8
    void JKJBPLOKPOG();
    // public System.Void EBJDLAIJJJE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x25EC8A0
    void EBJDLAIJJJE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void LCKDPMJKHEN(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x25EC954
    void LCKDPMJKHEN(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void NHADFEMILCC()
    // Offset: 0x25ECA08
    void NHADFEMILCC();
    // private System.Void LODJHIHLJPA()
    // Offset: 0x25ECA60
    void LODJHIHLJPA();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x25ECC50
    void EIIKFEMCNKM();
    // public System.Void NMPGLDGDDNL(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x25ECCA8
    void NMPGLDGDDNL(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JLMEEMCEEDO(System.Object OMLPNCLFFMJ)
    // Offset: 0x25ECD5C
    void JLMEEMCEEDO(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void KMPPLBBIMGJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x25ECE0C
    void KMPPLBBIMGJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GGFLLIPNHJN()
    // Offset: 0x25ECEC0
    void GGFLLIPNHJN();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x25ED0B8
    void JENOIOBAEPG();
    // private System.Void KJALKMFKADF()
    // Offset: 0x25ED110
    void KJALKMFKADF();
    // private System.Void CELBFCFNKAO(System.Object OMLPNCLFFMJ)
    // Offset: 0x25ED308
    void CELBFCFNKAO(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x25ED3B8
    void KPOAAAHLGLA();
    // private System.Void Start()
    // Offset: 0x25ED410
    void Start();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x25ED468
    void LBIKOKCCILF();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x25ED4C0
    void IDOCJGNLNFL();
    // private System.Void NMLIFNGCGLJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x25ED518
    void NMLIFNGCGLJ(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void OAMOHIMHKEK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x25ED5C8
    void OAMOHIMHKEK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GAKPACHFOPK()
    // Offset: 0x25ED67C
    void GAKPACHFOPK();
    // private System.Void KOFCOOGLLLP()
    // Offset: 0x25ED874
    void KOFCOOGLLLP();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x25EDA6C
    void KBDGAPMJGLG();
    // private System.Void LLEDPBEJPJA(System.Object OMLPNCLFFMJ)
    // Offset: 0x25EDAC4
    void LLEDPBEJPJA(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GKIOLADOCOK()
    // Offset: 0x25EDB74
    void GKIOLADOCOK();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x25EDBCC
    void EPCHNEGNKNF();
    // private System.Void JNHNEBOHOIB()
    // Offset: 0x25EDC24
    void JNHNEBOHOIB();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x25EDC7C
    void GHLPBOJJHNG();
    // private System.Void MKFPNPCBEDO()
    // Offset: 0x25EDCD4
    void MKFPNPCBEDO();
    // public System.Void .ctor()
    // Offset: 0x25EDECC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_PolymorphChicken* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_PolymorphChicken::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_PolymorphChicken*, creationType>()));
    }
    // private System.Void AKGFEENGKJD()
    // Offset: 0x25EDF24
    void AKGFEENGKJD();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x25EDF7C
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OJFAEAIKFED()
    // Offset: 0x25EE030
    void OJFAEAIKFED();
    // public System.Void IEDNIMMEJBL(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x25EE088
    void IEDNIMMEJBL(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x25EE13C
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void APMNGLNBFNP()
    // Offset: 0x25EE1F0
    void APMNGLNBFNP();
    // private System.Void GJBFFPOMPMB(System.Object OMLPNCLFFMJ)
    // Offset: 0x25EE248
    void GJBFFPOMPMB(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void DKJFPDMDIAA(System.Object OMLPNCLFFMJ)
    // Offset: 0x25EE2F8
    void DKJFPDMDIAA(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void OFEPGKANAIB()
    // Offset: 0x25EE3A8
    void OFEPGKANAIB();
    // private System.Void CNENDBLLIOL()
    // Offset: 0x25EE5A0
    void CNENDBLLIOL();
  }; // MagicalActual.M_PolymorphChicken
  #pragma pack(pop)
  static check_size<sizeof(M_PolymorphChicken), 56 + sizeof(::ArrayW<::UnityEngine::GameObject*>)> __MagicalActual_M_PolymorphChickenSizeCheck;
  static_assert(sizeof(M_PolymorphChicken) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::EGJMIHFLOKP
// Il2CppName: EGJMIHFLOKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_PolymorphChicken::EGJMIHFLOKP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "EGJMIHFLOKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::JKJBPLOKPOG
// Il2CppName: JKJBPLOKPOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::JKJBPLOKPOG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "JKJBPLOKPOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::EBJDLAIJJJE
// Il2CppName: EBJDLAIJJJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_PolymorphChicken::EBJDLAIJJJE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "EBJDLAIJJJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::LCKDPMJKHEN
// Il2CppName: LCKDPMJKHEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_PolymorphChicken::LCKDPMJKHEN)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "LCKDPMJKHEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::LODJHIHLJPA
// Il2CppName: LODJHIHLJPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::LODJHIHLJPA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "LODJHIHLJPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::NMPGLDGDDNL
// Il2CppName: NMPGLDGDDNL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_PolymorphChicken::NMPGLDGDDNL)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "NMPGLDGDDNL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::JLMEEMCEEDO
// Il2CppName: JLMEEMCEEDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::Il2CppObject*)>(&MagicalActual::M_PolymorphChicken::JLMEEMCEEDO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "JLMEEMCEEDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::KMPPLBBIMGJ
// Il2CppName: KMPPLBBIMGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_PolymorphChicken::KMPPLBBIMGJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "KMPPLBBIMGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::GGFLLIPNHJN
// Il2CppName: GGFLLIPNHJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::GGFLLIPNHJN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "GGFLLIPNHJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::KJALKMFKADF
// Il2CppName: KJALKMFKADF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::KJALKMFKADF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "KJALKMFKADF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::CELBFCFNKAO
// Il2CppName: CELBFCFNKAO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::Il2CppObject*)>(&MagicalActual::M_PolymorphChicken::CELBFCFNKAO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "CELBFCFNKAO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::NMLIFNGCGLJ
// Il2CppName: NMLIFNGCGLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::Il2CppObject*)>(&MagicalActual::M_PolymorphChicken::NMLIFNGCGLJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "NMLIFNGCGLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::OAMOHIMHKEK
// Il2CppName: OAMOHIMHKEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_PolymorphChicken::OAMOHIMHKEK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "OAMOHIMHKEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::GAKPACHFOPK
// Il2CppName: GAKPACHFOPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::GAKPACHFOPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "GAKPACHFOPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::KOFCOOGLLLP
// Il2CppName: KOFCOOGLLLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::KOFCOOGLLLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "KOFCOOGLLLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::LLEDPBEJPJA
// Il2CppName: LLEDPBEJPJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::Il2CppObject*)>(&MagicalActual::M_PolymorphChicken::LLEDPBEJPJA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "LLEDPBEJPJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::JNHNEBOHOIB
// Il2CppName: JNHNEBOHOIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::JNHNEBOHOIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "JNHNEBOHOIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::MKFPNPCBEDO
// Il2CppName: MKFPNPCBEDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::MKFPNPCBEDO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "MKFPNPCBEDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_PolymorphChicken::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::OJFAEAIKFED
// Il2CppName: OJFAEAIKFED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::OJFAEAIKFED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "OJFAEAIKFED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::IEDNIMMEJBL
// Il2CppName: IEDNIMMEJBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_PolymorphChicken::IEDNIMMEJBL)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "IEDNIMMEJBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_PolymorphChicken::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::APMNGLNBFNP
// Il2CppName: APMNGLNBFNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::APMNGLNBFNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "APMNGLNBFNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::GJBFFPOMPMB
// Il2CppName: GJBFFPOMPMB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::Il2CppObject*)>(&MagicalActual::M_PolymorphChicken::GJBFFPOMPMB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "GJBFFPOMPMB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::DKJFPDMDIAA
// Il2CppName: DKJFPDMDIAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)(::Il2CppObject*)>(&MagicalActual::M_PolymorphChicken::DKJFPDMDIAA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "DKJFPDMDIAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::OFEPGKANAIB
// Il2CppName: OFEPGKANAIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::OFEPGKANAIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "OFEPGKANAIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_PolymorphChicken::CNENDBLLIOL
// Il2CppName: CNENDBLLIOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_PolymorphChicken::*)()>(&MagicalActual::M_PolymorphChicken::CNENDBLLIOL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_PolymorphChicken*), "CNENDBLLIOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
