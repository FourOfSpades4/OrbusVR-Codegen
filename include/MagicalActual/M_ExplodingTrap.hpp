// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_ExplodingTrap
  class M_ExplodingTrap;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_ExplodingTrap);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_ExplodingTrap*, "MagicalActual", "M_ExplodingTrap");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_ExplodingTrap
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD45E4
  class M_ExplodingTrap : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x20
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject vfxExplode
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxExplode;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x30
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public UnityEngine.GameObject vfxExplode
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxExplode();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // public System.Void .ctor()
    // Offset: 0x24B9950
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_ExplodingTrap* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_ExplodingTrap::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_ExplodingTrap*, creationType>()));
    }
    // public System.Void JJEJNGMIMOI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24B99A8
    void JJEJNGMIMOI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void KMPPLBBIMGJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24B9A80
    void KMPPLBBIMGJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void JOCIAJOCGNM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24B9B58
    void JOCIAJOCGNM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void MMKPPAEBGFP()
    // Offset: 0x24B9C30
    void MMKPPAEBGFP();
    // private System.Void GHLJGHPFBJA()
    // Offset: 0x24B9D6C
    void GHLJGHPFBJA();
    // private System.Void KCAJLADPCMK()
    // Offset: 0x24B9EA8
    void KCAJLADPCMK();
    // private System.Void HJHKHMKNJBP()
    // Offset: 0x24B9FE4
    void HJHKHMKNJBP();
    // private System.Void COJFJIMFEBA(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24BA120
    void COJFJIMFEBA(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void JLOBOFGOABB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24BA124
    void JLOBOFGOABB(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void FLFKEECHDOK()
    // Offset: 0x24BA128
    void FLFKEECHDOK();
    // private System.Void GHFMKNIAPDF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24BA264
    void GHFMKNIAPDF(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void IPIFMKAGODD()
    // Offset: 0x24BA268
    void IPIFMKAGODD();
    // private System.Void HKLCBAMMNAH(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24BA2C0
    void HKLCBAMMNAH(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24BA3FC
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x24BA4D4
    void IDOCJGNLNFL();
    // private System.Void JALEANLOGDO()
    // Offset: 0x24BA2C4
    void JALEANLOGDO();
    // private System.Void NONFBJFLIFB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24BA52C
    void NONFBJFLIFB(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void HKINNMLBMMG()
    // Offset: 0x24BA530
    void HKINNMLBMMG();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x24BA588
    void LPLGKBGLPOK();
    // private System.Void PEIGGFEDFMM()
    // Offset: 0x24BA5E0
    void PEIGGFEDFMM();
    // private System.Void Start()
    // Offset: 0x24BA71C
    void Start();
    // public System.Void EBKMGINMPPJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24BA774
    void EBKMGINMPPJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void BPGOHJHLMFD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24BA84C
    void BPGOHJHLMFD(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24BA850
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24BA928
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GPFBGGFPINB()
    // Offset: 0x24BAA00
    void GPFBGGFPINB();
    // private System.Void OOGIJKGKAPL()
    // Offset: 0x24BAA58
    void OOGIJKGKAPL();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x24BAB94
    void GECHLDPLPCC();
  }; // MagicalActual.M_ExplodingTrap
  #pragma pack(pop)
  static check_size<sizeof(M_ExplodingTrap), 48 + sizeof(::MagicalActual::NetEntity*)> __MagicalActual_M_ExplodingTrapSizeCheck;
  static_assert(sizeof(M_ExplodingTrap) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::JJEJNGMIMOI
// Il2CppName: JJEJNGMIMOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_ExplodingTrap::JJEJNGMIMOI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "JJEJNGMIMOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::KMPPLBBIMGJ
// Il2CppName: KMPPLBBIMGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_ExplodingTrap::KMPPLBBIMGJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "KMPPLBBIMGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::JOCIAJOCGNM
// Il2CppName: JOCIAJOCGNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_ExplodingTrap::JOCIAJOCGNM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "JOCIAJOCGNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::MMKPPAEBGFP
// Il2CppName: MMKPPAEBGFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::MMKPPAEBGFP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "MMKPPAEBGFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::GHLJGHPFBJA
// Il2CppName: GHLJGHPFBJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::GHLJGHPFBJA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "GHLJGHPFBJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::KCAJLADPCMK
// Il2CppName: KCAJLADPCMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::KCAJLADPCMK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "KCAJLADPCMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::HJHKHMKNJBP
// Il2CppName: HJHKHMKNJBP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::HJHKHMKNJBP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "HJHKHMKNJBP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::COJFJIMFEBA
// Il2CppName: COJFJIMFEBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_ExplodingTrap::COJFJIMFEBA)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "COJFJIMFEBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::JLOBOFGOABB
// Il2CppName: JLOBOFGOABB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_ExplodingTrap::JLOBOFGOABB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "JLOBOFGOABB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::FLFKEECHDOK
// Il2CppName: FLFKEECHDOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::FLFKEECHDOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "FLFKEECHDOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::GHFMKNIAPDF
// Il2CppName: GHFMKNIAPDF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_ExplodingTrap::GHFMKNIAPDF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "GHFMKNIAPDF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::HKLCBAMMNAH
// Il2CppName: HKLCBAMMNAH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_ExplodingTrap::HKLCBAMMNAH)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "HKLCBAMMNAH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_ExplodingTrap::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::JALEANLOGDO
// Il2CppName: JALEANLOGDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::JALEANLOGDO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "JALEANLOGDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::NONFBJFLIFB
// Il2CppName: NONFBJFLIFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_ExplodingTrap::NONFBJFLIFB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "NONFBJFLIFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::PEIGGFEDFMM
// Il2CppName: PEIGGFEDFMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::PEIGGFEDFMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "PEIGGFEDFMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::EBKMGINMPPJ
// Il2CppName: EBKMGINMPPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_ExplodingTrap::EBKMGINMPPJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "EBKMGINMPPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::BPGOHJHLMFD
// Il2CppName: BPGOHJHLMFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_ExplodingTrap::BPGOHJHLMFD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "BPGOHJHLMFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_ExplodingTrap::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_ExplodingTrap::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::OOGIJKGKAPL
// Il2CppName: OOGIJKGKAPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::OOGIJKGKAPL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "OOGIJKGKAPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_ExplodingTrap::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_ExplodingTrap::*)()>(&MagicalActual::M_ExplodingTrap::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_ExplodingTrap*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
