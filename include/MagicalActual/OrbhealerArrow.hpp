// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Orbhealer
  class Orbhealer;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: OrbhealerArrow
  class OrbhealerArrow;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::OrbhealerArrow);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::OrbhealerArrow*, "MagicalActual", "OrbhealerArrow");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x9C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.OrbhealerArrow
  // [TokenAttribute] Offset: FFFFFFFF
  class OrbhealerArrow : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.Boolean fired
    // Size: 0x1
    // Offset: 0x18
    bool fired;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: fired and: arrowFireDirection
    char __padding0[0x3] = {};
    // public UnityEngine.Vector3 arrowFireDirection
    // Size: 0xC
    // Offset: 0x1C
    ::UnityEngine::Vector3 arrowFireDirection;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single ENPHHEMGIML
    // Size: 0x4
    // Offset: 0x28
    float ENPHHEMGIML;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single KNPCNCAKAIO
    // Size: 0x4
    // Offset: 0x2C
    float KNPCNCAKAIO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single ANDDIBNAPMK
    // Size: 0x4
    // Offset: 0x30
    float ANDDIBNAPMK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Byte FDFKBNCDJHA
    // Size: 0x1
    // Offset: 0x34
    uint8_t FDFKBNCDJHA;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: FDFKBNCDJHA and: myOrbhealer
    char __padding5[0x3] = {};
    // public MagicalActual.Orbhealer myOrbhealer
    // Size: 0x8
    // Offset: 0x38
    ::MagicalActual::Orbhealer* myOrbhealer;
    // Field size check
    static_assert(sizeof(::MagicalActual::Orbhealer*) == 0x8);
    // private UnityEngine.RaycastHit[] EHLLMIKFMJG
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::UnityEngine::RaycastHit> EHLLMIKFMJG;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::RaycastHit>) == 0x8);
    // public System.Int32 arrowId
    // Size: 0x4
    // Offset: 0x48
    int arrowId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: arrowId and: EJOPLGBIFOE
    char __padding8[0x4] = {};
    // private UnityEngine.GameObject EJOPLGBIFOE
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GameObject* EJOPLGBIFOE;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject LLBGLHHNFMF
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* LLBGLHHNFMF;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject KPLIFIKPALK
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::GameObject* KPLIFIKPALK;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject JGOFFEILMGH
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::GameObject* JGOFFEILMGH;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject OAJNJKIFADL
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::GameObject* OAJNJKIFADL;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject NIDCMOIHMOM
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::GameObject* NIDCMOIHMOM;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject DOHMPMHMFKD
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::GameObject* DOHMPMHMFKD;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject BPFBKNBPJNG
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::GameObject* BPFBKNBPJNG;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Vector3 JCDFLLLGDLH
    // Size: 0xC
    // Offset: 0x90
    ::UnityEngine::Vector3 JCDFLLLGDLH;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Boolean fired
    [[deprecated("Use field access instead!")]] bool& dyn_fired();
    // Get instance field reference: public UnityEngine.Vector3 arrowFireDirection
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_arrowFireDirection();
    // Get instance field reference: private System.Single ENPHHEMGIML
    [[deprecated("Use field access instead!")]] float& dyn_ENPHHEMGIML();
    // Get instance field reference: private System.Single KNPCNCAKAIO
    [[deprecated("Use field access instead!")]] float& dyn_KNPCNCAKAIO();
    // Get instance field reference: private System.Single ANDDIBNAPMK
    [[deprecated("Use field access instead!")]] float& dyn_ANDDIBNAPMK();
    // Get instance field reference: private System.Byte FDFKBNCDJHA
    [[deprecated("Use field access instead!")]] uint8_t& dyn_FDFKBNCDJHA();
    // Get instance field reference: public MagicalActual.Orbhealer myOrbhealer
    [[deprecated("Use field access instead!")]] ::MagicalActual::Orbhealer*& dyn_myOrbhealer();
    // Get instance field reference: private UnityEngine.RaycastHit[] EHLLMIKFMJG
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& dyn_EHLLMIKFMJG();
    // Get instance field reference: public System.Int32 arrowId
    [[deprecated("Use field access instead!")]] int& dyn_arrowId();
    // Get instance field reference: private UnityEngine.GameObject EJOPLGBIFOE
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_EJOPLGBIFOE();
    // Get instance field reference: private UnityEngine.GameObject LLBGLHHNFMF
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_LLBGLHHNFMF();
    // Get instance field reference: private UnityEngine.GameObject KPLIFIKPALK
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_KPLIFIKPALK();
    // Get instance field reference: private UnityEngine.GameObject JGOFFEILMGH
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_JGOFFEILMGH();
    // Get instance field reference: private UnityEngine.GameObject OAJNJKIFADL
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_OAJNJKIFADL();
    // Get instance field reference: private UnityEngine.GameObject NIDCMOIHMOM
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_NIDCMOIHMOM();
    // Get instance field reference: private UnityEngine.GameObject DOHMPMHMFKD
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_DOHMPMHMFKD();
    // Get instance field reference: private UnityEngine.GameObject BPFBKNBPJNG
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_BPFBKNBPJNG();
    // Get instance field reference: private UnityEngine.Vector3 JCDFLLLGDLH
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_JCDFLLLGDLH();
    // public System.Void LKOGPEDAKDL(System.Byte LNEMPDHOLME)
    // Offset: 0x1727EF8
    void LKOGPEDAKDL(uint8_t LNEMPDHOLME);
    // private System.Void AMGJNJLJIFO()
    // Offset: 0x1727FA0
    void AMGJNJLJIFO();
    // public System.Void BMGIKBEKAFG()
    // Offset: 0x1728634
    void BMGIKBEKAFG();
    // public System.Void StartTail()
    // Offset: 0x172879C
    void StartTail();
    // public System.Void AKFDBEKOMFA(System.Byte LNEMPDHOLME)
    // Offset: 0x17288E8
    void AKFDBEKOMFA(uint8_t LNEMPDHOLME);
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x1728990
    void KBDGAPMJGLG();
    // public System.Void Setup(System.Byte LNEMPDHOLME)
    // Offset: 0x1728A50
    void Setup(uint8_t LNEMPDHOLME);
    // private System.Void AHMLIMDJCJO()
    // Offset: 0x1728ADC
    void AHMLIMDJCJO();
    // public System.Void IAGANJADOFP()
    // Offset: 0x172916C
    void IAGANJADOFP();
    // private System.Void CHEMMHEMDCB()
    // Offset: 0x17292D4
    void CHEMMHEMDCB();
    // public System.Void KJFEDJJDJGD(System.Byte LNEMPDHOLME)
    // Offset: 0x172996C
    void KJFEDJJDJGD(uint8_t LNEMPDHOLME);
    // private System.Void FGGKEEKHDHN()
    // Offset: 0x1729A10
    void FGGKEEKHDHN();
    // public System.Void NJACEHIHEJC(System.Byte LNEMPDHOLME)
    // Offset: 0x172A09C
    void NJACEHIHEJC(uint8_t LNEMPDHOLME);
    // private System.Void LLBAENEGEMN()
    // Offset: 0x172A140
    void LLBAENEGEMN();
    // public System.Void OLJFODOIMAH(System.Byte LNEMPDHOLME)
    // Offset: 0x172A7D4
    void OLJFODOIMAH(uint8_t LNEMPDHOLME);
    // private System.Void EFEDNMKDDGH()
    // Offset: 0x172A878
    void EFEDNMKDDGH();
    // private System.Void CIJPPCPNPCI()
    // Offset: 0x172AF0C
    void CIJPPCPNPCI();
    // public System.Void BNJGMDCPNHA(System.Byte LNEMPDHOLME)
    // Offset: 0x172B5A8
    void BNJGMDCPNHA(uint8_t LNEMPDHOLME);
    // private System.Void IPIFMKAGODD()
    // Offset: 0x172B64C
    void IPIFMKAGODD();
    // public System.Void .ctor()
    // Offset: 0x172B70C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OrbhealerArrow* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::OrbhealerArrow::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OrbhealerArrow*, creationType>()));
    }
    // public System.Void FBLEPDEFDJN()
    // Offset: 0x172B724
    void FBLEPDEFDJN();
    // public System.Void HONGCNKDJME()
    // Offset: 0x172B88C
    void HONGCNKDJME();
    // public System.Void PNANFNHKDCK()
    // Offset: 0x172B9C0
    void PNANFNHKDCK();
    // private System.Void ICFANEFPFBJ()
    // Offset: 0x172BB24
    void ICFANEFPFBJ();
    // private System.Void FBONHOOJHBG()
    // Offset: 0x172C1B8
    void FBONHOOJHBG();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x172C278
    void GHLPBOJJHNG();
    // public System.Void FGNLHHKJJMK(System.Byte LNEMPDHOLME)
    // Offset: 0x172C338
    void FGNLHHKJJMK(uint8_t LNEMPDHOLME);
    // private System.Void HHKOFMNJKDA()
    // Offset: 0x172C3DC
    void HHKOFMNJKDA();
    // public System.Void PFJHIPKOHNH()
    // Offset: 0x172CA74
    void PFJHIPKOHNH();
    // private System.Void AMIPIMKIJMO()
    // Offset: 0x172CBB4
    void AMIPIMKIJMO();
    // private System.Void Start()
    // Offset: 0x172D250
    void Start();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x172D310
    void HKINNMLBMMG();
    // public System.Void EOMBNLDGBFA(System.Byte LNEMPDHOLME)
    // Offset: 0x172D3D0
    void EOMBNLDGBFA(uint8_t LNEMPDHOLME);
    // private System.Void FixedUpdate()
    // Offset: 0x172D474
    void FixedUpdate();
    // private System.Void BIMCNDAFFJC()
    // Offset: 0x172DAF8
    void BIMCNDAFFJC();
    // private System.Void JPHEBENNLCB()
    // Offset: 0x172E190
    void JPHEBENNLCB();
    // private System.Void JNHNEBOHOIB()
    // Offset: 0x172E820
    void JNHNEBOHOIB();
    // private System.Void APIMIOELFAJ()
    // Offset: 0x172E8E0
    void APIMIOELFAJ();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x172E9A0
    void FGIFGGNGKPK();
    // public System.Void JAOMKFMGDCG()
    // Offset: 0x172EA60
    void JAOMKFMGDCG();
    // public System.Void DIAHNDNIMHA(System.Byte LNEMPDHOLME)
    // Offset: 0x172EBA0
    void DIAHNDNIMHA(uint8_t LNEMPDHOLME);
    // public System.Void LKHFCPLHEHN()
    // Offset: 0x172EC48
    void LKHFCPLHEHN();
  }; // MagicalActual.OrbhealerArrow
  #pragma pack(pop)
  static check_size<sizeof(OrbhealerArrow), 144 + sizeof(::UnityEngine::Vector3)> __MagicalActual_OrbhealerArrowSizeCheck;
  static_assert(sizeof(OrbhealerArrow) == 0x9C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::LKOGPEDAKDL
// Il2CppName: LKOGPEDAKDL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)(uint8_t)>(&MagicalActual::OrbhealerArrow::LKOGPEDAKDL)> {
  static const MethodInfo* get() {
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "LKOGPEDAKDL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LNEMPDHOLME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::AMGJNJLJIFO
// Il2CppName: AMGJNJLJIFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::AMGJNJLJIFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "AMGJNJLJIFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::BMGIKBEKAFG
// Il2CppName: BMGIKBEKAFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::BMGIKBEKAFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "BMGIKBEKAFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::StartTail
// Il2CppName: StartTail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::StartTail)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "StartTail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::AKFDBEKOMFA
// Il2CppName: AKFDBEKOMFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)(uint8_t)>(&MagicalActual::OrbhealerArrow::AKFDBEKOMFA)> {
  static const MethodInfo* get() {
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "AKFDBEKOMFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LNEMPDHOLME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)(uint8_t)>(&MagicalActual::OrbhealerArrow::Setup)> {
  static const MethodInfo* get() {
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LNEMPDHOLME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::AHMLIMDJCJO
// Il2CppName: AHMLIMDJCJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::AHMLIMDJCJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "AHMLIMDJCJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::IAGANJADOFP
// Il2CppName: IAGANJADOFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::IAGANJADOFP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "IAGANJADOFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::CHEMMHEMDCB
// Il2CppName: CHEMMHEMDCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::CHEMMHEMDCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "CHEMMHEMDCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::KJFEDJJDJGD
// Il2CppName: KJFEDJJDJGD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)(uint8_t)>(&MagicalActual::OrbhealerArrow::KJFEDJJDJGD)> {
  static const MethodInfo* get() {
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "KJFEDJJDJGD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LNEMPDHOLME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::FGGKEEKHDHN
// Il2CppName: FGGKEEKHDHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::FGGKEEKHDHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "FGGKEEKHDHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::NJACEHIHEJC
// Il2CppName: NJACEHIHEJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)(uint8_t)>(&MagicalActual::OrbhealerArrow::NJACEHIHEJC)> {
  static const MethodInfo* get() {
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "NJACEHIHEJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LNEMPDHOLME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::LLBAENEGEMN
// Il2CppName: LLBAENEGEMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::LLBAENEGEMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "LLBAENEGEMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::OLJFODOIMAH
// Il2CppName: OLJFODOIMAH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)(uint8_t)>(&MagicalActual::OrbhealerArrow::OLJFODOIMAH)> {
  static const MethodInfo* get() {
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "OLJFODOIMAH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LNEMPDHOLME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::EFEDNMKDDGH
// Il2CppName: EFEDNMKDDGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::EFEDNMKDDGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "EFEDNMKDDGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::CIJPPCPNPCI
// Il2CppName: CIJPPCPNPCI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::CIJPPCPNPCI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "CIJPPCPNPCI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::BNJGMDCPNHA
// Il2CppName: BNJGMDCPNHA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)(uint8_t)>(&MagicalActual::OrbhealerArrow::BNJGMDCPNHA)> {
  static const MethodInfo* get() {
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "BNJGMDCPNHA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LNEMPDHOLME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::FBLEPDEFDJN
// Il2CppName: FBLEPDEFDJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::FBLEPDEFDJN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "FBLEPDEFDJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::HONGCNKDJME
// Il2CppName: HONGCNKDJME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::HONGCNKDJME)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "HONGCNKDJME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::PNANFNHKDCK
// Il2CppName: PNANFNHKDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::PNANFNHKDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "PNANFNHKDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::ICFANEFPFBJ
// Il2CppName: ICFANEFPFBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::ICFANEFPFBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "ICFANEFPFBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::FBONHOOJHBG
// Il2CppName: FBONHOOJHBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::FBONHOOJHBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "FBONHOOJHBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::FGNLHHKJJMK
// Il2CppName: FGNLHHKJJMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)(uint8_t)>(&MagicalActual::OrbhealerArrow::FGNLHHKJJMK)> {
  static const MethodInfo* get() {
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "FGNLHHKJJMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LNEMPDHOLME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::HHKOFMNJKDA
// Il2CppName: HHKOFMNJKDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::HHKOFMNJKDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "HHKOFMNJKDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::PFJHIPKOHNH
// Il2CppName: PFJHIPKOHNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::PFJHIPKOHNH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "PFJHIPKOHNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::AMIPIMKIJMO
// Il2CppName: AMIPIMKIJMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::AMIPIMKIJMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "AMIPIMKIJMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::EOMBNLDGBFA
// Il2CppName: EOMBNLDGBFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)(uint8_t)>(&MagicalActual::OrbhealerArrow::EOMBNLDGBFA)> {
  static const MethodInfo* get() {
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "EOMBNLDGBFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LNEMPDHOLME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::BIMCNDAFFJC
// Il2CppName: BIMCNDAFFJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::BIMCNDAFFJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "BIMCNDAFFJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::JPHEBENNLCB
// Il2CppName: JPHEBENNLCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::JPHEBENNLCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "JPHEBENNLCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::JNHNEBOHOIB
// Il2CppName: JNHNEBOHOIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::JNHNEBOHOIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "JNHNEBOHOIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::APIMIOELFAJ
// Il2CppName: APIMIOELFAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::APIMIOELFAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "APIMIOELFAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::JAOMKFMGDCG
// Il2CppName: JAOMKFMGDCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::JAOMKFMGDCG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "JAOMKFMGDCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::DIAHNDNIMHA
// Il2CppName: DIAHNDNIMHA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)(uint8_t)>(&MagicalActual::OrbhealerArrow::DIAHNDNIMHA)> {
  static const MethodInfo* get() {
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "DIAHNDNIMHA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LNEMPDHOLME});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbhealerArrow::LKHFCPLHEHN
// Il2CppName: LKHFCPLHEHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbhealerArrow::*)()>(&MagicalActual::OrbhealerArrow::LKHFCPLHEHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbhealerArrow*), "LKHFCPLHEHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
