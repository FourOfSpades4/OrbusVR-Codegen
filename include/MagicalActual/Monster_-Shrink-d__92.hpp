// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MagicalActual.Monster
#include "MagicalActual/Monster.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Monster::$Shrink$d__92);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Monster::$Shrink$d__92*, "MagicalActual", "Monster/<Shrink>d__92");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Monster/<Shrink>d__92
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AD4478
  class Monster::$Shrink$d__92 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*/ {
    public:
    public:
    // private System.Int32 JNMEAOPMACM
    // Size: 0x4
    // Offset: 0x10
    int JNMEAOPMACM;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: JNMEAOPMACM and: HFDJEHMEBOM
    char __padding0[0x4] = {};
    // private System.Object HFDJEHMEBOM
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* HFDJEHMEBOM;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // public MagicalActual.Monster CGMCLOBOBCB
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::Monster* CGMCLOBOBCB;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private MagicalActual.PlayerAvatar JEHAJEDIIMI
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::PlayerAvatar* JEHAJEDIIMI;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // private UnityEngine.Vector3 EPJPMEAFJKA
    // Size: 0xC
    // Offset: 0x30
    ::UnityEngine::Vector3 EPJPMEAFJKA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 MGOBGJJFOGE
    // Size: 0xC
    // Offset: 0x3C
    ::UnityEngine::Vector3 MGOBGJJFOGE;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single PDKGDONIEAD
    // Size: 0x4
    // Offset: 0x48
    float PDKGDONIEAD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single GIANJFAEAMC
    // Size: 0x4
    // Offset: 0x4C
    float GIANJFAEAMC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>
    operator ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*>(this);
    }
    // Get instance field reference: private System.Int32 JNMEAOPMACM
    [[deprecated("Use field access instead!")]] int& dyn_JNMEAOPMACM();
    // Get instance field reference: private System.Object HFDJEHMEBOM
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_HFDJEHMEBOM();
    // Get instance field reference: public MagicalActual.Monster CGMCLOBOBCB
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_CGMCLOBOBCB();
    // Get instance field reference: private MagicalActual.PlayerAvatar JEHAJEDIIMI
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_JEHAJEDIIMI();
    // Get instance field reference: private UnityEngine.Vector3 EPJPMEAFJKA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_EPJPMEAFJKA();
    // Get instance field reference: private UnityEngine.Vector3 MGOBGJJFOGE
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_MGOBGJJFOGE();
    // Get instance field reference: private System.Single PDKGDONIEAD
    [[deprecated("Use field access instead!")]] float& dyn_PDKGDONIEAD();
    // Get instance field reference: private System.Single GIANJFAEAMC
    [[deprecated("Use field access instead!")]] float& dyn_GIANJFAEAMC();
    // private System.Object JCNHJDIHMAF()
    // Offset: 0x193718C
    ::Il2CppObject* JCNHJDIHMAF();
    // private System.Object LJKMFDHBBNM()
    // Offset: 0x1937194
    ::Il2CppObject* LJKMFDHBBNM();
    // private System.Void LMFALDBJILP()
    // Offset: 0x193719C
    void LMFALDBJILP();
    // private System.Object LOLBPCJBODJ()
    // Offset: 0x1937204
    ::Il2CppObject* LOLBPCJBODJ();
    // private System.Object LAEBDLIKKGM()
    // Offset: 0x193720C
    ::Il2CppObject* LAEBDLIKKGM();
    // private System.Object KABPAAAJBEC()
    // Offset: 0x1937214
    ::Il2CppObject* KABPAAAJBEC();
    // private System.Object APCGMAKDPNG()
    // Offset: 0x193721C
    ::Il2CppObject* APCGMAKDPNG();
    // private System.Object PPDNJLONAGC()
    // Offset: 0x1937224
    ::Il2CppObject* PPDNJLONAGC();
    // private System.Object NMFJHLAABMO()
    // Offset: 0x193722C
    ::Il2CppObject* NMFJHLAABMO();
    // private System.Void FECOODHDHCB()
    // Offset: 0x1937234
    void FECOODHDHCB();
    // private System.Boolean NFNIGLGCIDC()
    // Offset: 0x193729C
    bool NFNIGLGCIDC();
    // private System.Boolean GIDPKNMCLBD()
    // Offset: 0x193779C
    bool GIDPKNMCLBD();
    // private System.Boolean JDGNCADABMA()
    // Offset: 0x1937CAC
    bool JDGNCADABMA();
    // private System.Void BDPHPFPKMCH()
    // Offset: 0x19381B4
    void BDPHPFPKMCH();
    // private System.Object JIGKOLBDLIM()
    // Offset: 0x19381B8
    ::Il2CppObject* JIGKOLBDLIM();
    // private System.Void JHOGKBBKFJD()
    // Offset: 0x19381C0
    void JHOGKBBKFJD();
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x19381C4
    void System_IDisposable_Dispose();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x19381C8
    void System_Collections_IEnumerator_Reset();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x1938230
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // private System.Boolean MoveNext()
    // Offset: 0x1938238
    bool MoveNext();
    // private System.Boolean CBNOGHIBPOP()
    // Offset: 0x1938720
    bool CBNOGHIBPOP();
    // private System.Object LCHHAFINNAE()
    // Offset: 0x1938C34
    ::Il2CppObject* LCHHAFINNAE();
    // public System.Void .ctor(System.Int32 JNMEAOPMACM)
    // Offset: 0x1938C3C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Monster::$Shrink$d__92* New_ctor(int JNMEAOPMACM) {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Monster::$Shrink$d__92::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Monster::$Shrink$d__92*, creationType>(JNMEAOPMACM)));
    }
    // private System.Object PEKEBOOIJMK()
    // Offset: 0x1938C68
    ::Il2CppObject* PEKEBOOIJMK();
    // private System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()
    // Offset: 0x1938C70
    ::Il2CppObject* System_Collections_Generic_IEnumerator$System_Object$_get_Current();
    // private System.Object KOHLKPKKPBH()
    // Offset: 0x1938C78
    ::Il2CppObject* KOHLKPKKPBH();
  }; // MagicalActual.Monster/<Shrink>d__92
  #pragma pack(pop)
  static check_size<sizeof(Monster::$Shrink$d__92), 76 + sizeof(float)> __MagicalActual_Monster_$Shrink$d__92SizeCheck;
  static_assert(sizeof(Monster::$Shrink$d__92) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::JCNHJDIHMAF
// Il2CppName: JCNHJDIHMAF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::JCNHJDIHMAF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "JCNHJDIHMAF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::LJKMFDHBBNM
// Il2CppName: LJKMFDHBBNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::LJKMFDHBBNM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "LJKMFDHBBNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::LMFALDBJILP
// Il2CppName: LMFALDBJILP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::LMFALDBJILP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "LMFALDBJILP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::LOLBPCJBODJ
// Il2CppName: LOLBPCJBODJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::LOLBPCJBODJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "LOLBPCJBODJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::LAEBDLIKKGM
// Il2CppName: LAEBDLIKKGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::LAEBDLIKKGM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "LAEBDLIKKGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::KABPAAAJBEC
// Il2CppName: KABPAAAJBEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::KABPAAAJBEC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "KABPAAAJBEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::APCGMAKDPNG
// Il2CppName: APCGMAKDPNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::APCGMAKDPNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "APCGMAKDPNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::PPDNJLONAGC
// Il2CppName: PPDNJLONAGC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::PPDNJLONAGC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "PPDNJLONAGC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::NMFJHLAABMO
// Il2CppName: NMFJHLAABMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::NMFJHLAABMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "NMFJHLAABMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::FECOODHDHCB
// Il2CppName: FECOODHDHCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::FECOODHDHCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "FECOODHDHCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::NFNIGLGCIDC
// Il2CppName: NFNIGLGCIDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::NFNIGLGCIDC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "NFNIGLGCIDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::GIDPKNMCLBD
// Il2CppName: GIDPKNMCLBD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::GIDPKNMCLBD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "GIDPKNMCLBD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::JDGNCADABMA
// Il2CppName: JDGNCADABMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::JDGNCADABMA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "JDGNCADABMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::BDPHPFPKMCH
// Il2CppName: BDPHPFPKMCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::BDPHPFPKMCH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "BDPHPFPKMCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::JIGKOLBDLIM
// Il2CppName: JIGKOLBDLIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::JIGKOLBDLIM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "JIGKOLBDLIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::JHOGKBBKFJD
// Il2CppName: JHOGKBBKFJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::JHOGKBBKFJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "JHOGKBBKFJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::System_Collections_IEnumerator_Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::CBNOGHIBPOP
// Il2CppName: CBNOGHIBPOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::CBNOGHIBPOP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "CBNOGHIBPOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::LCHHAFINNAE
// Il2CppName: LCHHAFINNAE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::LCHHAFINNAE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "LCHHAFINNAE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::PEKEBOOIJMK
// Il2CppName: PEKEBOOIJMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::PEKEBOOIJMK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "PEKEBOOIJMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Monster::$Shrink$d__92::KOHLKPKKPBH
// Il2CppName: KOHLKPKKPBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MagicalActual::Monster::$Shrink$d__92::*)()>(&MagicalActual::Monster::$Shrink$d__92::KOHLKPKKPBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Monster::$Shrink$d__92*), "KOHLKPKKPBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
