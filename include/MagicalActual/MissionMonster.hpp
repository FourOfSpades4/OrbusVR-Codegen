// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: MissionMonster
  class MissionMonster;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::MissionMonster);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::MissionMonster*, "MagicalActual", "MissionMonster");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.MissionMonster
  // [TokenAttribute] Offset: FFFFFFFF
  class MissionMonster : public ::Il2CppObject {
    public:
    public:
    // public System.String OCHPGFCECJO
    // Size: 0x8
    // Offset: 0x10
    ::StringW OCHPGFCECJO;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String EIGGFAHHBNE
    // Size: 0x8
    // Offset: 0x18
    ::StringW EIGGFAHHBNE;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String OCHPGFCECJO
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OCHPGFCECJO();
    // Get instance field reference: public System.String EIGGFAHHBNE
    [[deprecated("Use field access instead!")]] ::StringW& dyn_EIGGFAHHBNE();
    // public System.Void .ctor(System.String OCHPGFCECJO, System.String EIGGFAHHBNE)
    // Offset: 0x13F5030
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MissionMonster* New_ctor(::StringW OCHPGFCECJO, ::StringW EIGGFAHHBNE) {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::MissionMonster::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MissionMonster*, creationType>(OCHPGFCECJO, EIGGFAHHBNE)));
    }
  }; // MagicalActual.MissionMonster
  #pragma pack(pop)
  static check_size<sizeof(MissionMonster), 24 + sizeof(::StringW)> __MagicalActual_MissionMonsterSizeCheck;
  static_assert(sizeof(MissionMonster) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::MissionMonster::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
