// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: DungeonBarrier
  class DungeonBarrier;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::DungeonBarrier);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::DungeonBarrier*, "MagicalActual", "DungeonBarrier");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.DungeonBarrier
  // [TokenAttribute] Offset: FFFFFFFF
  class DungeonBarrier : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::DungeonBarrier::$$c__DisplayClass7_0
    class $$c__DisplayClass7_0;
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String zoneVariables
    // Size: 0x8
    // Offset: 0x20
    ::StringW zoneVariables;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private System.Boolean EKKANEAKHHP
    // Size: 0x1
    // Offset: 0x30
    bool EKKANEAKHHP;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public System.String zoneVariables
    [[deprecated("Use field access instead!")]] ::StringW& dyn_zoneVariables();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private System.Boolean EKKANEAKHHP
    [[deprecated("Use field access instead!")]] bool& dyn_EKKANEAKHHP();
    // private System.Void Awake()
    // Offset: 0x13447E4
    void Awake();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13447E8
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JFBALDGNADD()
    // Offset: 0x1344910
    void JFBALDGNADD();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x1344960
    void GPFBGGFPINB();
    // private System.Void BIAEBDELPLI()
    // Offset: 0x1344964
    void BIAEBDELPLI();
    // public System.Void DKDBFFDLADP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x134499C
    void DKDBFFDLADP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void DPGEMMACIMF()
    // Offset: 0x1344ABC
    void DPGEMMACIMF();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x1344B0C
    void PFABJJGAOMM();
    // private System.Void FJGOIENMHPD()
    // Offset: 0x1344B48
    void FJGOIENMHPD();
    // private System.Void IIEJCCDDLGF()
    // Offset: 0x1344B80
    void IIEJCCDDLGF();
    // private System.Void NDAOHLAOCDE()
    // Offset: 0x1344BD0
    void NDAOHLAOCDE();
    // private System.Void LCIAOHICGGK()
    // Offset: 0x1344BD4
    void LCIAOHICGGK();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x1344C0C
    void BDEDGNGMHMN();
    // public System.Void IKDGLCBOCJG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1344C10
    void IKDGLCBOCJG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void AKONOOIDPDA()
    // Offset: 0x1344D30
    void AKONOOIDPDA();
    // private System.Void FIAGJGEDJCO()
    // Offset: 0x1344D34
    void FIAGJGEDJCO();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x1344D84
    void DGJGAFKDIDK();
    // public System.Void IOOBCJAJKCJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1344D88
    void IOOBCJAJKCJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void Start()
    // Offset: 0x1344EA8
    void Start();
    // public System.Void EGJMIHFLOKP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1344EFC
    void EGJMIHFLOKP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void MJDEKBNENME()
    // Offset: 0x134501C
    void MJDEKBNENME();
    // private System.Void JMPPPHNKAFG()
    // Offset: 0x134506C
    void JMPPPHNKAFG();
    // private System.Void NLOFBPNEFKD()
    // Offset: 0x1345070
    void NLOFBPNEFKD();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x1345074
    void AFIACGLCIPB();
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1345078
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EHHJBJMLJPM()
    // Offset: 0x1344EAC
    void EHHJBJMLJPM();
    // private System.Void JCJCMKPOAKK()
    // Offset: 0x1345198
    void JCJCMKPOAKK();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x134519C
    void GKIOLADOCOK();
    // public System.Void .ctor()
    // Offset: 0x13451A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DungeonBarrier* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::DungeonBarrier::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DungeonBarrier*, creationType>()));
    }
    // private System.Void KEOEHPBHOJG()
    // Offset: 0x1344B10
    void KEOEHPBHOJG();
  }; // MagicalActual.DungeonBarrier
  #pragma pack(pop)
  static check_size<sizeof(DungeonBarrier), 48 + sizeof(bool)> __MagicalActual_DungeonBarrierSizeCheck;
  static_assert(sizeof(DungeonBarrier) == 0x31);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonBarrier::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::JFBALDGNADD
// Il2CppName: JFBALDGNADD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::JFBALDGNADD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "JFBALDGNADD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::BIAEBDELPLI
// Il2CppName: BIAEBDELPLI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::BIAEBDELPLI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "BIAEBDELPLI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::DKDBFFDLADP
// Il2CppName: DKDBFFDLADP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonBarrier::DKDBFFDLADP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "DKDBFFDLADP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::DPGEMMACIMF
// Il2CppName: DPGEMMACIMF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::DPGEMMACIMF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "DPGEMMACIMF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::FJGOIENMHPD
// Il2CppName: FJGOIENMHPD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::FJGOIENMHPD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "FJGOIENMHPD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::IIEJCCDDLGF
// Il2CppName: IIEJCCDDLGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::IIEJCCDDLGF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "IIEJCCDDLGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::NDAOHLAOCDE
// Il2CppName: NDAOHLAOCDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::NDAOHLAOCDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "NDAOHLAOCDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::LCIAOHICGGK
// Il2CppName: LCIAOHICGGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::LCIAOHICGGK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "LCIAOHICGGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::IKDGLCBOCJG
// Il2CppName: IKDGLCBOCJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonBarrier::IKDGLCBOCJG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "IKDGLCBOCJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::AKONOOIDPDA
// Il2CppName: AKONOOIDPDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::AKONOOIDPDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "AKONOOIDPDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::FIAGJGEDJCO
// Il2CppName: FIAGJGEDJCO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::FIAGJGEDJCO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "FIAGJGEDJCO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::IOOBCJAJKCJ
// Il2CppName: IOOBCJAJKCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonBarrier::IOOBCJAJKCJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "IOOBCJAJKCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::EGJMIHFLOKP
// Il2CppName: EGJMIHFLOKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonBarrier::EGJMIHFLOKP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "EGJMIHFLOKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::MJDEKBNENME
// Il2CppName: MJDEKBNENME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::MJDEKBNENME)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "MJDEKBNENME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::JMPPPHNKAFG
// Il2CppName: JMPPPHNKAFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::JMPPPHNKAFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "JMPPPHNKAFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::NLOFBPNEFKD
// Il2CppName: NLOFBPNEFKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::NLOFBPNEFKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "NLOFBPNEFKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonBarrier::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::EHHJBJMLJPM
// Il2CppName: EHHJBJMLJPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::EHHJBJMLJPM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "EHHJBJMLJPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::JCJCMKPOAKK
// Il2CppName: JCJCMKPOAKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::JCJCMKPOAKK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "JCJCMKPOAKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::DungeonBarrier::KEOEHPBHOJG
// Il2CppName: KEOEHPBHOJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonBarrier::*)()>(&MagicalActual::DungeonBarrier::KEOEHPBHOJG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonBarrier*), "KEOEHPBHOJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
