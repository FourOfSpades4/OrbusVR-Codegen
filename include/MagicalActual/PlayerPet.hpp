// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: PlayerPetTraits
  class PlayerPetTraits;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: BoxCollider
  class BoxCollider;
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: AudioSource
  class AudioSource;
  // Forward declaring type: Animator
  class Animator;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: AudioClip
  class AudioClip;
  // Forward declaring type: TrailRenderer
  class TrailRenderer;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerPet
  class PlayerPet;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PlayerPet);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PlayerPet*, "MagicalActual", "PlayerPet");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x104
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PlayerPet
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayerPet : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::PlayerPet::PetType
    struct PetType;
    // Nested type: ::MagicalActual::PlayerPet::$$c__DisplayClass47_0
    class $$c__DisplayClass47_0;
    // Nested type: ::MagicalActual::PlayerPet::$$c
    class $$c;
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private UnityEngine.Collider[] JGOGJDHABHN
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::Collider*> JGOGJDHABHN;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // private UnityEngine.BoxCollider BBOMOHLELBB
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::BoxCollider* BBOMOHLELBB;
    // Field size check
    static_assert(sizeof(::UnityEngine::BoxCollider*) == 0x8);
    // private UnityEngine.Renderer PetRenderer
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Renderer* PetRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Renderer*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE41A8
    // private UnityEngine.AudioSource <GOHJPFMAAIA>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::AudioSource* GOHJPFMAAIA;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE41B8
    // private UnityEngine.Animator <ELMDALDBDHI>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Animator* ELMDALDBDHI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animator*) == 0x8);
    // private UnityEngine.Vector3 GCLKDLJHJEI
    // Size: 0xC
    // Offset: 0x50
    ::UnityEngine::Vector3 GCLKDLJHJEI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single DKKKPCDNGMB
    // Size: 0x4
    // Offset: 0x5C
    float DKKKPCDNGMB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single IHGACIMHACE
    // Size: 0x4
    // Offset: 0x60
    float IHGACIMHACE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single DFBCNLBHKFI
    // Size: 0x4
    // Offset: 0x64
    float DFBCNLBHKFI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single HJCLGIDPFCL
    // Size: 0x4
    // Offset: 0x68
    float HJCLGIDPFCL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: HJCLGIDPFCL and: vfxEat
    char __padding11[0x4] = {};
    // public UnityEngine.GameObject vfxEat
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::GameObject* vfxEat;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.AudioClip sfxEat
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::AudioClip* sfxEat;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioClip*) == 0x8);
    // private UnityEngine.TrailRenderer leftWingTrail
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::TrailRenderer* leftWingTrail;
    // Field size check
    static_assert(sizeof(::UnityEngine::TrailRenderer*) == 0x8);
    // private UnityEngine.TrailRenderer rightWingTrail
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::TrailRenderer* rightWingTrail;
    // Field size check
    static_assert(sizeof(::UnityEngine::TrailRenderer*) == 0x8);
    // private System.Single HDPMBJANKFD
    // Size: 0x4
    // Offset: 0x90
    float HDPMBJANKFD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: HDPMBJANKFD and: petType
    char __padding16[0x4] = {};
    // public System.String petType
    // Size: 0x8
    // Offset: 0x98
    ::StringW petType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.PlayerPetTraits PetTraits
    // Size: 0x8
    // Offset: 0xA0
    ::MagicalActual::PlayerPetTraits* PetTraits;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerPetTraits*) == 0x8);
    // private System.Boolean useStaticColors
    // Size: 0x1
    // Offset: 0xA8
    bool useStaticColors;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: useStaticColors and: staticPrimary
    char __padding19[0x3] = {};
    // private UnityEngine.Color staticPrimary
    // Size: 0x10
    // Offset: 0xAC
    ::UnityEngine::Color staticPrimary;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color staticSecondary
    // Size: 0x10
    // Offset: 0xBC
    ::UnityEngine::Color staticSecondary;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color staticSpot
    // Size: 0x10
    // Offset: 0xCC
    ::UnityEngine::Color staticSpot;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // Padding between fields: staticSpot and: KJNBCGLIEIK
    char __padding22[0x4] = {};
    // private UnityEngine.GameObject KJNBCGLIEIK
    // Size: 0x8
    // Offset: 0xE0
    ::UnityEngine::GameObject* KJNBCGLIEIK;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean KGPGGLGOBHC
    // Size: 0x1
    // Offset: 0xE8
    bool KGPGGLGOBHC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: KGPGGLGOBHC and: GEHHJKAMMGK
    char __padding24[0x3] = {};
    // private System.Single GEHHJKAMMGK
    // Size: 0x4
    // Offset: 0xEC
    float GEHHJKAMMGK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean DMCMNEFKDEJ
    // Size: 0x1
    // Offset: 0xF0
    bool DMCMNEFKDEJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean BKECGKCNEFL
    // Size: 0x1
    // Offset: 0xF1
    bool BKECGKCNEFL;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: BKECGKCNEFL and: EDKKJBNMENH
    char __padding27[0x2] = {};
    // private System.Int32 EDKKJBNMENH
    // Size: 0x4
    // Offset: 0xF4
    int EDKKJBNMENH;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 MHPHEKKLOLE
    // Size: 0x4
    // Offset: 0xF8
    int MHPHEKKLOLE;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 AMHIJKLCJCM
    // Size: 0x4
    // Offset: 0xFC
    int AMHIJKLCJCM;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 HIJNLFBCAOK
    // Size: 0x4
    // Offset: 0x100
    int HIJNLFBCAOK;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static private System.Int32 MMKOPFHMOAI
    static constexpr const int MMKOPFHMOAI = 8;
    // Get static field: static private System.Int32 MMKOPFHMOAI
    static int _get_MMKOPFHMOAI();
    // Set static field: static private System.Int32 MMKOPFHMOAI
    static void _set_MMKOPFHMOAI(int value);
    // Get static field: static private readonly System.Int32[] HHKGKGDALIE
    static ::ArrayW<int> _get_HHKGKGDALIE();
    // Set static field: static private readonly System.Int32[] HHKGKGDALIE
    static void _set_HHKGKGDALIE(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[] POPHFBLMOOM
    static ::ArrayW<int> _get_POPHFBLMOOM();
    // Set static field: static private readonly System.Int32[] POPHFBLMOOM
    static void _set_POPHFBLMOOM(::ArrayW<int> value);
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private UnityEngine.Collider[] JGOGJDHABHN
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_JGOGJDHABHN();
    // Get instance field reference: private UnityEngine.BoxCollider BBOMOHLELBB
    [[deprecated("Use field access instead!")]] ::UnityEngine::BoxCollider*& dyn_BBOMOHLELBB();
    // Get instance field reference: private UnityEngine.Renderer PetRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& dyn_PetRenderer();
    // Get instance field reference: private UnityEngine.AudioSource <GOHJPFMAAIA>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& dyn_$GOHJPFMAAIA$k__BackingField();
    // Get instance field reference: private UnityEngine.Animator <ELMDALDBDHI>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& dyn_$ELMDALDBDHI$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 GCLKDLJHJEI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_GCLKDLJHJEI();
    // Get instance field reference: private System.Single DKKKPCDNGMB
    [[deprecated("Use field access instead!")]] float& dyn_DKKKPCDNGMB();
    // Get instance field reference: private System.Single IHGACIMHACE
    [[deprecated("Use field access instead!")]] float& dyn_IHGACIMHACE();
    // Get instance field reference: private System.Single DFBCNLBHKFI
    [[deprecated("Use field access instead!")]] float& dyn_DFBCNLBHKFI();
    // Get instance field reference: private System.Single HJCLGIDPFCL
    [[deprecated("Use field access instead!")]] float& dyn_HJCLGIDPFCL();
    // Get instance field reference: public UnityEngine.GameObject vfxEat
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxEat();
    // Get instance field reference: public UnityEngine.AudioClip sfxEat
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& dyn_sfxEat();
    // Get instance field reference: private UnityEngine.TrailRenderer leftWingTrail
    [[deprecated("Use field access instead!")]] ::UnityEngine::TrailRenderer*& dyn_leftWingTrail();
    // Get instance field reference: private UnityEngine.TrailRenderer rightWingTrail
    [[deprecated("Use field access instead!")]] ::UnityEngine::TrailRenderer*& dyn_rightWingTrail();
    // Get instance field reference: private System.Single HDPMBJANKFD
    [[deprecated("Use field access instead!")]] float& dyn_HDPMBJANKFD();
    // Get instance field reference: public System.String petType
    [[deprecated("Use field access instead!")]] ::StringW& dyn_petType();
    // Get instance field reference: private MagicalActual.PlayerPetTraits PetTraits
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerPetTraits*& dyn_PetTraits();
    // Get instance field reference: private System.Boolean useStaticColors
    [[deprecated("Use field access instead!")]] bool& dyn_useStaticColors();
    // Get instance field reference: private UnityEngine.Color staticPrimary
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_staticPrimary();
    // Get instance field reference: private UnityEngine.Color staticSecondary
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_staticSecondary();
    // Get instance field reference: private UnityEngine.Color staticSpot
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_staticSpot();
    // Get instance field reference: private UnityEngine.GameObject KJNBCGLIEIK
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_KJNBCGLIEIK();
    // Get instance field reference: private System.Boolean KGPGGLGOBHC
    [[deprecated("Use field access instead!")]] bool& dyn_KGPGGLGOBHC();
    // Get instance field reference: private System.Single GEHHJKAMMGK
    [[deprecated("Use field access instead!")]] float& dyn_GEHHJKAMMGK();
    // Get instance field reference: private System.Boolean DMCMNEFKDEJ
    [[deprecated("Use field access instead!")]] bool& dyn_DMCMNEFKDEJ();
    // Get instance field reference: private System.Boolean BKECGKCNEFL
    [[deprecated("Use field access instead!")]] bool& dyn_BKECGKCNEFL();
    // Get instance field reference: private System.Int32 EDKKJBNMENH
    [[deprecated("Use field access instead!")]] int& dyn_EDKKJBNMENH();
    // Get instance field reference: private System.Int32 MHPHEKKLOLE
    [[deprecated("Use field access instead!")]] int& dyn_MHPHEKKLOLE();
    // Get instance field reference: private System.Int32 AMHIJKLCJCM
    [[deprecated("Use field access instead!")]] int& dyn_AMHIJKLCJCM();
    // Get instance field reference: private System.Int32 HIJNLFBCAOK
    [[deprecated("Use field access instead!")]] int& dyn_HIJNLFBCAOK();
    // private UnityEngine.Color BJOPDGIDDND(System.Int32 FIOHBLFILMD)
    // Offset: 0x11B1090
    ::UnityEngine::Color BJOPDGIDDND(int FIOHBLFILMD);
    // private System.Void PBDCNKAFFHO(System.Object OMLPNCLFFMJ)
    // Offset: 0x11B10F8
    void PBDCNKAFFHO(::Il2CppObject* OMLPNCLFFMJ);
    // public UnityEngine.AudioSource get_myAudioSource()
    // Offset: 0x11B11D4
    ::UnityEngine::AudioSource* get_myAudioSource();
    // public System.Void StopUpdatingFromServer()
    // Offset: 0x11B11DC
    void StopUpdatingFromServer();
    // private System.Void LBFNMKLJIBO(System.Object OMLPNCLFFMJ)
    // Offset: 0x11B12E4
    void LBFNMKLJIBO(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void IJEOHCMAMPP(System.Object CBNPFJGIFIH)
    // Offset: 0x11B13FC
    void IJEOHCMAMPP(::Il2CppObject* CBNPFJGIFIH);
    // private System.Void HCBIEHBMPOL(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x11B18B4
    void HCBIEHBMPOL(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Single MPAIKDLEBDH()
    // Offset: 0x11B19AC
    float MPAIKDLEBDH();
    // private System.Void IDGGCJEKBLF()
    // Offset: 0x11B19B4
    void IDGGCJEKBLF();
    // public System.Void FDOHGNDCELP()
    // Offset: 0x11B1DEC
    void FDOHGNDCELP();
    // public System.Void KKCDDGFMMKA()
    // Offset: 0x11B1EFC
    void KKCDDGFMMKA();
    // private System.Void ANNMIJBMBJB(System.Object OMLPNCLFFMJ)
    // Offset: 0x11B1F00
    void ANNMIJBMBJB(::Il2CppObject* OMLPNCLFFMJ);
    // static public UnityEngine.GameObject NLLGFODNBOB(ExtUI.InventoryItemInstance NICLNKCKCFN)
    // Offset: 0x11B1FD4
    static ::UnityEngine::GameObject* NLLGFODNBOB(::ExtUI::InventoryItemInstance* NICLNKCKCFN);
    // private System.Void KGPFLEPINNJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x11B2450
    void KGPFLEPINNJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void EFEDNMKDDGH()
    // Offset: 0x11B24BC
    void EFEDNMKDDGH();
    // public System.Void ReleaseLocalControl()
    // Offset: 0x11B2FEC
    void ReleaseLocalControl();
    // private System.Void Awake()
    // Offset: 0x11B30DC
    void Awake();
    // static public UnityEngine.GameObject InstantiatePet(ExtUI.InventoryItemInstance NICLNKCKCFN)
    // Offset: 0x11B332C
    static ::UnityEngine::GameObject* InstantiatePet(::ExtUI::InventoryItemInstance* NICLNKCKCFN);
    // public System.Void StartUpdatingFromServer()
    // Offset: 0x11B2FF8
    void StartUpdatingFromServer();
    // public System.Void ShowWingTrails()
    // Offset: 0x11B37C8
    void ShowWingTrails();
    // public System.Void JJEGMBECNBK()
    // Offset: 0x11B3820
    void JJEGMBECNBK();
    // private System.Void FGGKEEKHDHN()
    // Offset: 0x11B390C
    void FGGKEEKHDHN();
    // private System.Void LateUpdate()
    // Offset: 0x11B4428
    void LateUpdate();
    // private System.Void IKBCEOIPALG(System.Int32 DILIPIOBIJI, System.Int32 CHKLFJDKCCO, System.Int32 AHBHHBEGGLK, System.Int32 HIJNLFBCAOK)
    // Offset: 0x11B4854
    void IKBCEOIPALG(int DILIPIOBIJI, int CHKLFJDKCCO, int AHBHHBEGGLK, int HIJNLFBCAOK);
    // public System.Void LCIPODILLBK()
    // Offset: 0x11B4CBC
    void LCIPODILLBK();
    // private System.Void KHAKALBEFNL(System.Int32 DILIPIOBIJI, System.Int32 CHKLFJDKCCO, System.Int32 AHBHHBEGGLK, System.Int32 HIJNLFBCAOK)
    // Offset: 0x11B158C
    void KHAKALBEFNL(int DILIPIOBIJI, int CHKLFJDKCCO, int AHBHHBEGGLK, int HIJNLFBCAOK);
    // private System.Void DBMFAHJIEHA()
    // Offset: 0x11B4CC0
    void DBMFAHJIEHA();
    // public System.Void PEMFIBOPPMP(System.Single AGOBEAELDMI)
    // Offset: 0x11B4D6C
    void PEMFIBOPPMP(float AGOBEAELDMI);
    // private System.Void KNMJJHJPLFG(UnityEngine.Animator MMMEIONJJFJ)
    // Offset: 0x11B331C
    void KNMJJHJPLFG(::UnityEngine::Animator* MMMEIONJJFJ);
    // public System.Void KHNDABAELJD()
    // Offset: 0x11B4DEC
    void KHNDABAELJD();
    // public System.Single GetLocalSpeed()
    // Offset: 0x11B4ED8
    float GetLocalSpeed();
    // private System.Void FEJNAOBCKJK()
    // Offset: 0x11B4EE0
    void FEJNAOBCKJK();
    // public System.Void FootL()
    // Offset: 0x11B5128
    void FootL();
    // public System.Void TakeLocalControl(UnityEngine.GameObject BHFOIGNGIND)
    // Offset: 0x11B512C
    void TakeLocalControl(::UnityEngine::GameObject* BHFOIGNGIND);
    // public System.Void MCBDBACEIMA(System.Single AGOBEAELDMI)
    // Offset: 0x11B513C
    void MCBDBACEIMA(float AGOBEAELDMI);
    // public System.Void SetWingTrailLength(System.Single AGOBEAELDMI)
    // Offset: 0x11B51BC
    void SetWingTrailLength(float AGOBEAELDMI);
    // public System.Void FootR()
    // Offset: 0x11B522C
    void FootR();
    // static private System.Void .cctor()
    // Offset: 0x11B5230
    static void _cctor();
    // private System.Void PLDPEPMICCD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x11B530C
    void PLDPEPMICCD(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void SetLocalSpeed(System.Single CBAMALDADNC)
    // Offset: 0x11B5380
    void SetLocalSpeed(float CBAMALDADNC);
    // private System.Void AEBFBCDDHDJ(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x11B5388
    void AEBFBCDDHDJ(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void KIOIKMPFOOF(System.Object OMLPNCLFFMJ)
    // Offset: 0x11B5480
    void KIOIKMPFOOF(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void JGEOMONNHJO(UnityEngine.AudioSource MMMEIONJJFJ)
    // Offset: 0x11B5120
    void JGEOMONNHJO(::UnityEngine::AudioSource* MMMEIONJJFJ);
    // public System.Void DMOAIPNAIGE(UnityEngine.GameObject BHFOIGNGIND)
    // Offset: 0x11B54EC
    void DMOAIPNAIGE(::UnityEngine::GameObject* BHFOIGNGIND);
    // private System.Void BPJDCDHJAGI()
    // Offset: 0x11B1350
    void BPJDCDHJAGI();
    // public System.Void Fmod(System.String HACLJDHIHML)
    // Offset: 0x11B54FC
    void Fmod(::StringW HACLJDHIHML);
    // private UnityEngine.Color PJFDIPFOCBF(System.Int32 FIOHBLFILMD)
    // Offset: 0x11B4C54
    ::UnityEngine::Color PJFDIPFOCBF(int FIOHBLFILMD);
    // private System.Void FixedUpdate()
    // Offset: 0x11B5500
    void FixedUpdate();
    // public System.Void .ctor()
    // Offset: 0x11B5FF4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerPet* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PlayerPet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerPet*, creationType>()));
    }
    // public System.Void PCECMHCCDPB()
    // Offset: 0x11B6058
    void PCECMHCCDPB();
    // private System.Void LOMPIBNGNDD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x11B60B0
    void LOMPIBNGNDD(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void LEMDHDMKIPE(UnityEngine.Animator MMMEIONJJFJ)
    // Offset: 0x11B6124
    void LEMDHDMKIPE(::UnityEngine::Animator* MMMEIONJJFJ);
    // private UnityEngine.Color AHKCINMEHIJ(System.Int32 FIOHBLFILMD)
    // Offset: 0x11B612C
    ::UnityEngine::Color AHKCINMEHIJ(int FIOHBLFILMD);
    // private System.Void GHCIHJEFEJB(UnityEngine.AudioSource MMMEIONJJFJ)
    // Offset: 0x11B3324
    void GHCIHJEFEJB(::UnityEngine::AudioSource* MMMEIONJJFJ);
    // public UnityEngine.Animator get_myAnimator()
    // Offset: 0x11B11CC
    ::UnityEngine::Animator* get_myAnimator();
    // public UnityEngine.AudioSource LIDMDINBJAK()
    // Offset: 0x11B2FE4
    ::UnityEngine::AudioSource* LIDMDINBJAK();
    // public System.Void EBPNOKFLOKG(UnityEngine.GameObject BHFOIGNGIND)
    // Offset: 0x11B6194
    void EBPNOKFLOKG(::UnityEngine::GameObject* BHFOIGNGIND);
    // public System.Void HideWingTrails()
    // Offset: 0x11B61A4
    void HideWingTrails();
    // private System.Void KHCCHIEPJDK(System.Object OMLPNCLFFMJ)
    // Offset: 0x11B61FC
    void KHCCHIEPJDK(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void ECDJFAECEEC()
    // Offset: 0x11B6268
    void ECDJFAECEEC();
    // private UnityEngine.Color HEOILEIEFHJ(System.Int32 FIOHBLFILMD)
    // Offset: 0x11B4BEC
    ::UnityEngine::Color HEOILEIEFHJ(int FIOHBLFILMD);
    // private UnityEngine.Color JGIAADMDGHD(System.Int32 FIOHBLFILMD)
    // Offset: 0x11B4B84
    ::UnityEngine::Color JGIAADMDGHD(int FIOHBLFILMD);
    // public System.Void DAALCFILGGE()
    // Offset: 0x11B382C
    void DAALCFILGGE();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x11B626C
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
  }; // MagicalActual.PlayerPet
  #pragma pack(pop)
  static check_size<sizeof(PlayerPet), 256 + sizeof(int)> __MagicalActual_PlayerPetSizeCheck;
  static_assert(sizeof(PlayerPet) == 0x104);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PlayerPet::BJOPDGIDDND
// Il2CppName: BJOPDGIDDND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (MagicalActual::PlayerPet::*)(int)>(&MagicalActual::PlayerPet::BJOPDGIDDND)> {
  static const MethodInfo* get() {
    static auto* FIOHBLFILMD = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "BJOPDGIDDND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FIOHBLFILMD});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::PBDCNKAFFHO
// Il2CppName: PBDCNKAFFHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::Il2CppObject*)>(&MagicalActual::PlayerPet::PBDCNKAFFHO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "PBDCNKAFFHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::get_myAudioSource
// Il2CppName: get_myAudioSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AudioSource* (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::get_myAudioSource)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "get_myAudioSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::StopUpdatingFromServer
// Il2CppName: StopUpdatingFromServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::StopUpdatingFromServer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "StopUpdatingFromServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::LBFNMKLJIBO
// Il2CppName: LBFNMKLJIBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::Il2CppObject*)>(&MagicalActual::PlayerPet::LBFNMKLJIBO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "LBFNMKLJIBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::IJEOHCMAMPP
// Il2CppName: IJEOHCMAMPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::Il2CppObject*)>(&MagicalActual::PlayerPet::IJEOHCMAMPP)> {
  static const MethodInfo* get() {
    static auto* CBNPFJGIFIH = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "IJEOHCMAMPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBNPFJGIFIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::HCBIEHBMPOL
// Il2CppName: HCBIEHBMPOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::System::Collections::ArrayList*)>(&MagicalActual::PlayerPet::HCBIEHBMPOL)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "HCBIEHBMPOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::MPAIKDLEBDH
// Il2CppName: MPAIKDLEBDH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::MPAIKDLEBDH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "MPAIKDLEBDH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::IDGGCJEKBLF
// Il2CppName: IDGGCJEKBLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::IDGGCJEKBLF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "IDGGCJEKBLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::FDOHGNDCELP
// Il2CppName: FDOHGNDCELP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::FDOHGNDCELP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "FDOHGNDCELP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::KKCDDGFMMKA
// Il2CppName: KKCDDGFMMKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::KKCDDGFMMKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "KKCDDGFMMKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::ANNMIJBMBJB
// Il2CppName: ANNMIJBMBJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::Il2CppObject*)>(&MagicalActual::PlayerPet::ANNMIJBMBJB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "ANNMIJBMBJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::NLLGFODNBOB
// Il2CppName: NLLGFODNBOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::PlayerPet::NLLGFODNBOB)> {
  static const MethodInfo* get() {
    static auto* NICLNKCKCFN = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "NLLGFODNBOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NICLNKCKCFN});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::KGPFLEPINNJ
// Il2CppName: KGPFLEPINNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::Il2CppObject*)>(&MagicalActual::PlayerPet::KGPFLEPINNJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "KGPFLEPINNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::EFEDNMKDDGH
// Il2CppName: EFEDNMKDDGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::EFEDNMKDDGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "EFEDNMKDDGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::ReleaseLocalControl
// Il2CppName: ReleaseLocalControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::ReleaseLocalControl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "ReleaseLocalControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::InstantiatePet
// Il2CppName: InstantiatePet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)(::ExtUI::InventoryItemInstance*)>(&MagicalActual::PlayerPet::InstantiatePet)> {
  static const MethodInfo* get() {
    static auto* NICLNKCKCFN = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "InstantiatePet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NICLNKCKCFN});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::StartUpdatingFromServer
// Il2CppName: StartUpdatingFromServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::StartUpdatingFromServer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "StartUpdatingFromServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::ShowWingTrails
// Il2CppName: ShowWingTrails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::ShowWingTrails)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "ShowWingTrails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::JJEGMBECNBK
// Il2CppName: JJEGMBECNBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::JJEGMBECNBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "JJEGMBECNBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::FGGKEEKHDHN
// Il2CppName: FGGKEEKHDHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::FGGKEEKHDHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "FGGKEEKHDHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::IKBCEOIPALG
// Il2CppName: IKBCEOIPALG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(int, int, int, int)>(&MagicalActual::PlayerPet::IKBCEOIPALG)> {
  static const MethodInfo* get() {
    static auto* DILIPIOBIJI = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* CHKLFJDKCCO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* AHBHHBEGGLK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HIJNLFBCAOK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "IKBCEOIPALG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DILIPIOBIJI, CHKLFJDKCCO, AHBHHBEGGLK, HIJNLFBCAOK});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::LCIPODILLBK
// Il2CppName: LCIPODILLBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::LCIPODILLBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "LCIPODILLBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::KHAKALBEFNL
// Il2CppName: KHAKALBEFNL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(int, int, int, int)>(&MagicalActual::PlayerPet::KHAKALBEFNL)> {
  static const MethodInfo* get() {
    static auto* DILIPIOBIJI = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* CHKLFJDKCCO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* AHBHHBEGGLK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HIJNLFBCAOK = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "KHAKALBEFNL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DILIPIOBIJI, CHKLFJDKCCO, AHBHHBEGGLK, HIJNLFBCAOK});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::DBMFAHJIEHA
// Il2CppName: DBMFAHJIEHA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::DBMFAHJIEHA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "DBMFAHJIEHA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::PEMFIBOPPMP
// Il2CppName: PEMFIBOPPMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(float)>(&MagicalActual::PlayerPet::PEMFIBOPPMP)> {
  static const MethodInfo* get() {
    static auto* AGOBEAELDMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "PEMFIBOPPMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AGOBEAELDMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::KNMJJHJPLFG
// Il2CppName: KNMJJHJPLFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::UnityEngine::Animator*)>(&MagicalActual::PlayerPet::KNMJJHJPLFG)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Animator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "KNMJJHJPLFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::KHNDABAELJD
// Il2CppName: KHNDABAELJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::KHNDABAELJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "KHNDABAELJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::GetLocalSpeed
// Il2CppName: GetLocalSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::GetLocalSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "GetLocalSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::FEJNAOBCKJK
// Il2CppName: FEJNAOBCKJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::FEJNAOBCKJK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "FEJNAOBCKJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::FootL
// Il2CppName: FootL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::FootL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "FootL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::TakeLocalControl
// Il2CppName: TakeLocalControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::UnityEngine::GameObject*)>(&MagicalActual::PlayerPet::TakeLocalControl)> {
  static const MethodInfo* get() {
    static auto* BHFOIGNGIND = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "TakeLocalControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHFOIGNGIND});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::MCBDBACEIMA
// Il2CppName: MCBDBACEIMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(float)>(&MagicalActual::PlayerPet::MCBDBACEIMA)> {
  static const MethodInfo* get() {
    static auto* AGOBEAELDMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "MCBDBACEIMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AGOBEAELDMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::SetWingTrailLength
// Il2CppName: SetWingTrailLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(float)>(&MagicalActual::PlayerPet::SetWingTrailLength)> {
  static const MethodInfo* get() {
    static auto* AGOBEAELDMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "SetWingTrailLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AGOBEAELDMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::FootR
// Il2CppName: FootR
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::FootR)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "FootR", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&MagicalActual::PlayerPet::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::PLDPEPMICCD
// Il2CppName: PLDPEPMICCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::System::Collections::ArrayList*)>(&MagicalActual::PlayerPet::PLDPEPMICCD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "PLDPEPMICCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::SetLocalSpeed
// Il2CppName: SetLocalSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(float)>(&MagicalActual::PlayerPet::SetLocalSpeed)> {
  static const MethodInfo* get() {
    static auto* CBAMALDADNC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "SetLocalSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBAMALDADNC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::AEBFBCDDHDJ
// Il2CppName: AEBFBCDDHDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::System::Collections::ArrayList*)>(&MagicalActual::PlayerPet::AEBFBCDDHDJ)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "AEBFBCDDHDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::KIOIKMPFOOF
// Il2CppName: KIOIKMPFOOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::Il2CppObject*)>(&MagicalActual::PlayerPet::KIOIKMPFOOF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "KIOIKMPFOOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::JGEOMONNHJO
// Il2CppName: JGEOMONNHJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::UnityEngine::AudioSource*)>(&MagicalActual::PlayerPet::JGEOMONNHJO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "JGEOMONNHJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::DMOAIPNAIGE
// Il2CppName: DMOAIPNAIGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::UnityEngine::GameObject*)>(&MagicalActual::PlayerPet::DMOAIPNAIGE)> {
  static const MethodInfo* get() {
    static auto* BHFOIGNGIND = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "DMOAIPNAIGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHFOIGNGIND});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::BPJDCDHJAGI
// Il2CppName: BPJDCDHJAGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::BPJDCDHJAGI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "BPJDCDHJAGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::Fmod
// Il2CppName: Fmod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::StringW)>(&MagicalActual::PlayerPet::Fmod)> {
  static const MethodInfo* get() {
    static auto* HACLJDHIHML = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "Fmod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HACLJDHIHML});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::PJFDIPFOCBF
// Il2CppName: PJFDIPFOCBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (MagicalActual::PlayerPet::*)(int)>(&MagicalActual::PlayerPet::PJFDIPFOCBF)> {
  static const MethodInfo* get() {
    static auto* FIOHBLFILMD = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "PJFDIPFOCBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FIOHBLFILMD});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PlayerPet::PCECMHCCDPB
// Il2CppName: PCECMHCCDPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::PCECMHCCDPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "PCECMHCCDPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::LOMPIBNGNDD
// Il2CppName: LOMPIBNGNDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::System::Collections::ArrayList*)>(&MagicalActual::PlayerPet::LOMPIBNGNDD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "LOMPIBNGNDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::LEMDHDMKIPE
// Il2CppName: LEMDHDMKIPE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::UnityEngine::Animator*)>(&MagicalActual::PlayerPet::LEMDHDMKIPE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Animator")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "LEMDHDMKIPE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::AHKCINMEHIJ
// Il2CppName: AHKCINMEHIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (MagicalActual::PlayerPet::*)(int)>(&MagicalActual::PlayerPet::AHKCINMEHIJ)> {
  static const MethodInfo* get() {
    static auto* FIOHBLFILMD = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "AHKCINMEHIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FIOHBLFILMD});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::GHCIHJEFEJB
// Il2CppName: GHCIHJEFEJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::UnityEngine::AudioSource*)>(&MagicalActual::PlayerPet::GHCIHJEFEJB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioSource")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "GHCIHJEFEJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::get_myAnimator
// Il2CppName: get_myAnimator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Animator* (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::get_myAnimator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "get_myAnimator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::LIDMDINBJAK
// Il2CppName: LIDMDINBJAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AudioSource* (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::LIDMDINBJAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "LIDMDINBJAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::EBPNOKFLOKG
// Il2CppName: EBPNOKFLOKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::UnityEngine::GameObject*)>(&MagicalActual::PlayerPet::EBPNOKFLOKG)> {
  static const MethodInfo* get() {
    static auto* BHFOIGNGIND = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "EBPNOKFLOKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHFOIGNGIND});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::HideWingTrails
// Il2CppName: HideWingTrails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::HideWingTrails)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "HideWingTrails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::KHCCHIEPJDK
// Il2CppName: KHCCHIEPJDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::Il2CppObject*)>(&MagicalActual::PlayerPet::KHCCHIEPJDK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "KHCCHIEPJDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::ECDJFAECEEC
// Il2CppName: ECDJFAECEEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::ECDJFAECEEC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "ECDJFAECEEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::HEOILEIEFHJ
// Il2CppName: HEOILEIEFHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (MagicalActual::PlayerPet::*)(int)>(&MagicalActual::PlayerPet::HEOILEIEFHJ)> {
  static const MethodInfo* get() {
    static auto* FIOHBLFILMD = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "HEOILEIEFHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FIOHBLFILMD});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::JGIAADMDGHD
// Il2CppName: JGIAADMDGHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (MagicalActual::PlayerPet::*)(int)>(&MagicalActual::PlayerPet::JGIAADMDGHD)> {
  static const MethodInfo* get() {
    static auto* FIOHBLFILMD = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "JGIAADMDGHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FIOHBLFILMD});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::DAALCFILGGE
// Il2CppName: DAALCFILGGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)()>(&MagicalActual::PlayerPet::DAALCFILGGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "DAALCFILGGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerPet::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerPet::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PlayerPet::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerPet*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
