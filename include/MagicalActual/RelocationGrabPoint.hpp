// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
  // Forward declaring type: Grabber
  class Grabber;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: MeshRenderer
  class MeshRenderer;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PhysicsInteractable
  class PhysicsInteractable;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: RelocationGrabPoint
  class RelocationGrabPoint;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::RelocationGrabPoint);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::RelocationGrabPoint*, "MagicalActual", "RelocationGrabPoint");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0xA0
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.RelocationGrabPoint
  // [TokenAttribute] Offset: FFFFFFFF
  class RelocationGrabPoint : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.Boolean HNFCLAFDJBD
    // Size: 0x1
    // Offset: 0x18
    bool HNFCLAFDJBD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HNFCLAFDJBD and: EENJNFDNJBD
    char __padding0[0x7] = {};
    // private MagicalActual.PlayerAvatar EENJNFDNJBD
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::PlayerAvatar* EENJNFDNJBD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // private UnityEngine.Rigidbody EIPMBKLODIJ
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Rigidbody* EIPMBKLODIJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private PhysicsInteractable NENLBJKDCFP
    // Size: 0x8
    // Offset: 0x30
    ::GlobalNamespace::PhysicsInteractable* NENLBJKDCFP;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PhysicsInteractable*) == 0x8);
    // private UnityEngine.MeshRenderer PKMIHKFEJDO
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::MeshRenderer* PKMIHKFEJDO;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshRenderer*) == 0x8);
    // private UnityEngine.Vector3 FKKFPPDHEBJ
    // Size: 0xC
    // Offset: 0x40
    ::UnityEngine::Vector3 FKKFPPDHEBJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion BAHHCAAFOIP
    // Size: 0x10
    // Offset: 0x4C
    ::UnityEngine::Quaternion BAHHCAAFOIP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // Padding between fields: BAHHCAAFOIP and: JNBOAIGLFGP
    char __padding6[0x4] = {};
    // private UnityEngine.Transform JNBOAIGLFGP
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Transform* JNBOAIGLFGP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public UnityEngine.GameObject objectToMove
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::GameObject* objectToMove;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Vector3 GFKCJOCPBND
    // Size: 0xC
    // Offset: 0x70
    ::UnityEngine::Vector3 GFKCJOCPBND;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 EHEEKKBGHLG
    // Size: 0xC
    // Offset: 0x7C
    ::UnityEngine::Vector3 EHEEKKBGHLG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 PBOJKNHFCPG
    // Size: 0xC
    // Offset: 0x88
    ::UnityEngine::Vector3 PBOJKNHFCPG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Boolean DLCHEMODKHH
    // Size: 0x1
    // Offset: 0x94
    bool DLCHEMODKHH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean PLLJBLCOOLJ
    // Size: 0x1
    // Offset: 0x95
    bool PLLJBLCOOLJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: PLLJBLCOOLJ and: objectToMoveName
    char __padding13[0x2] = {};
    // public System.String objectToMoveName
    // Size: 0x8
    // Offset: 0x98
    ::StringW objectToMoveName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Boolean HNFCLAFDJBD
    [[deprecated("Use field access instead!")]] bool& dyn_HNFCLAFDJBD();
    // Get instance field reference: private MagicalActual.PlayerAvatar EENJNFDNJBD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_EENJNFDNJBD();
    // Get instance field reference: private UnityEngine.Rigidbody EIPMBKLODIJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_EIPMBKLODIJ();
    // Get instance field reference: private PhysicsInteractable NENLBJKDCFP
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PhysicsInteractable*& dyn_NENLBJKDCFP();
    // Get instance field reference: private UnityEngine.MeshRenderer PKMIHKFEJDO
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& dyn_PKMIHKFEJDO();
    // Get instance field reference: private UnityEngine.Vector3 FKKFPPDHEBJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_FKKFPPDHEBJ();
    // Get instance field reference: private UnityEngine.Quaternion BAHHCAAFOIP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_BAHHCAAFOIP();
    // Get instance field reference: private UnityEngine.Transform JNBOAIGLFGP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_JNBOAIGLFGP();
    // Get instance field reference: public UnityEngine.GameObject objectToMove
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_objectToMove();
    // Get instance field reference: private UnityEngine.Vector3 GFKCJOCPBND
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_GFKCJOCPBND();
    // Get instance field reference: private UnityEngine.Vector3 EHEEKKBGHLG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_EHEEKKBGHLG();
    // Get instance field reference: private UnityEngine.Vector3 PBOJKNHFCPG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_PBOJKNHFCPG();
    // Get instance field reference: private System.Boolean DLCHEMODKHH
    [[deprecated("Use field access instead!")]] bool& dyn_DLCHEMODKHH();
    // Get instance field reference: private System.Boolean PLLJBLCOOLJ
    [[deprecated("Use field access instead!")]] bool& dyn_PLLJBLCOOLJ();
    // Get instance field reference: public System.String objectToMoveName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_objectToMoveName();
    // public System.Void IOKCPLBLNPA()
    // Offset: 0x15BE4CC
    void IOKCPLBLNPA();
    // public System.Void BLPAEBLJMIL(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15BE4E0
    void BLPAEBLJMIL(::MagicalActual::Grabber* FOIEAOKBGLM);
    // public System.Void FICBIEAEPIF(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15BE528
    void FICBIEAEPIF(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void LECOPFNLNEO()
    // Offset: 0x15BE574
    void LECOPFNLNEO();
    // private System.Void FixedUpdate()
    // Offset: 0x15BE744
    void FixedUpdate();
    // public System.Void DEIHGIDGCJE(System.Boolean CNNFDKIDCBI)
    // Offset: 0x15BE93C
    void DEIHGIDGCJE(bool CNNFDKIDCBI);
    // public System.Void NILHEKFHAMA()
    // Offset: 0x15BEB5C
    void NILHEKFHAMA();
    // public System.Void GBONNECFJAN(System.Boolean CNNFDKIDCBI)
    // Offset: 0x15BEB6C
    void GBONNECFJAN(bool CNNFDKIDCBI);
    // private System.Void DCLGFOJLLCD()
    // Offset: 0x15BECFC
    void DCLGFOJLLCD();
    // private System.Void HABDJCEKMNH()
    // Offset: 0x15BEE68
    void HABDJCEKMNH();
    // private System.Void OPNDLFOKCEK()
    // Offset: 0x15BEF24
    void OPNDLFOKCEK();
    // public System.Void ALEGNMLPLKG(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15BF090
    void ALEGNMLPLKG(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void HCKDOHIBBCG()
    // Offset: 0x15BF154
    void HCKDOHIBBCG();
    // private System.Void Start()
    // Offset: 0x15BF2C0
    void Start();
    // private System.Void Awake()
    // Offset: 0x15BF630
    void Awake();
    // public System.Void GHPHFNBIFPL(System.Boolean CNNFDKIDCBI)
    // Offset: 0x15BF6E4
    void GHPHFNBIFPL(bool CNNFDKIDCBI);
    // private System.Void IMEPDNJOMHM()
    // Offset: 0x15BF738
    void IMEPDNJOMHM();
    // public System.Void NDONNJBMAPF()
    // Offset: 0x15BF8A4
    void NDONNJBMAPF();
    // private System.Void MOHAOIFACGB()
    // Offset: 0x15BF994
    void MOHAOIFACGB();
    // public System.Void ABONCNLHCMP(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15BFB00
    void ABONCNLHCMP(::MagicalActual::Grabber* FOIEAOKBGLM);
    // public System.Void PhysicsInteractableTrigger()
    // Offset: 0x15BFB48
    void PhysicsInteractableTrigger();
    // public System.Void EMPNNPKBHFO(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15BFB5C
    void EMPNNPKBHFO(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void MCEJAIFACGL(System.Boolean IBFFEGBAOKD)
    // Offset: 0x15BE800
    void MCEJAIFACGL(bool IBFFEGBAOKD);
    // public System.Void IHKDBEEBPEI()
    // Offset: 0x15BFBA8
    void IHKDBEEBPEI();
    // public System.Void PMMNOANBFKJ()
    // Offset: 0x15BFBBC
    void PMMNOANBFKJ();
    // public System.Void PABPOCMFEJK(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15BFBCC
    void PABPOCMFEJK(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void MPKCIBKEANK()
    // Offset: 0x15BE98C
    void MPKCIBKEANK();
    // public System.Void PhysicsInteractableUngrip(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15BFC18
    void PhysicsInteractableUngrip(::MagicalActual::Grabber* FOIEAOKBGLM);
    // public System.Void DBLHNPALFEG(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15BFC40
    void DBLHNPALFEG(::MagicalActual::Grabber* FOIEAOKBGLM);
    // public System.Void DoResetPosition(System.Boolean CNNFDKIDCBI)
    // Offset: 0x15BFC88
    void DoResetPosition(bool CNNFDKIDCBI);
    // public System.Void EMHCLGIJBHH()
    // Offset: 0x15BFCD8
    void EMHCLGIJBHH();
    // private System.Void EPKNICLKDAF()
    // Offset: 0x15BFDC8
    void EPKNICLKDAF();
    // private System.Void SnapBack()
    // Offset: 0x15BF0B8
    void SnapBack();
    // public System.Void MDNMHCKOCNO(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15BFF20
    void MDNMHCKOCNO(::MagicalActual::Grabber* FOIEAOKBGLM);
    // public System.Void CheckVisibility()
    // Offset: 0x15BF540
    void CheckVisibility();
    // public System.Void .ctor()
    // Offset: 0x15BFF4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RelocationGrabPoint* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::RelocationGrabPoint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RelocationGrabPoint*, creationType>()));
    }
    // private System.Void MGLCBPNEPOF()
    // Offset: 0x15BFF5C
    void MGLCBPNEPOF();
    // public System.Void PhysicsInteractableGrip(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15C00C8
    void PhysicsInteractableGrip(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void CBJCAKCCGDA()
    // Offset: 0x15C0114
    void CBJCAKCCGDA();
    // public System.Void IAAMAFIAPNP()
    // Offset: 0x15C0280
    void IAAMAFIAPNP();
    // public System.Void EMEFKDKEBNA(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15C0370
    void EMEFKDKEBNA(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void HBPONNKIHPO(System.Boolean IBFFEGBAOKD)
    // Offset: 0x15BEBC0
    void HBPONNKIHPO(bool IBFFEGBAOKD);
  }; // MagicalActual.RelocationGrabPoint
  #pragma pack(pop)
  static check_size<sizeof(RelocationGrabPoint), 152 + sizeof(::StringW)> __MagicalActual_RelocationGrabPointSizeCheck;
  static_assert(sizeof(RelocationGrabPoint) == 0xA0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::IOKCPLBLNPA
// Il2CppName: IOKCPLBLNPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::IOKCPLBLNPA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "IOKCPLBLNPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::BLPAEBLJMIL
// Il2CppName: BLPAEBLJMIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(::MagicalActual::Grabber*)>(&MagicalActual::RelocationGrabPoint::BLPAEBLJMIL)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "BLPAEBLJMIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::FICBIEAEPIF
// Il2CppName: FICBIEAEPIF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(::MagicalActual::Grabber*)>(&MagicalActual::RelocationGrabPoint::FICBIEAEPIF)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "FICBIEAEPIF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::LECOPFNLNEO
// Il2CppName: LECOPFNLNEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::LECOPFNLNEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "LECOPFNLNEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::DEIHGIDGCJE
// Il2CppName: DEIHGIDGCJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(bool)>(&MagicalActual::RelocationGrabPoint::DEIHGIDGCJE)> {
  static const MethodInfo* get() {
    static auto* CNNFDKIDCBI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "DEIHGIDGCJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CNNFDKIDCBI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::NILHEKFHAMA
// Il2CppName: NILHEKFHAMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::NILHEKFHAMA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "NILHEKFHAMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::GBONNECFJAN
// Il2CppName: GBONNECFJAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(bool)>(&MagicalActual::RelocationGrabPoint::GBONNECFJAN)> {
  static const MethodInfo* get() {
    static auto* CNNFDKIDCBI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "GBONNECFJAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CNNFDKIDCBI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::DCLGFOJLLCD
// Il2CppName: DCLGFOJLLCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::DCLGFOJLLCD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "DCLGFOJLLCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::HABDJCEKMNH
// Il2CppName: HABDJCEKMNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::HABDJCEKMNH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "HABDJCEKMNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::OPNDLFOKCEK
// Il2CppName: OPNDLFOKCEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::OPNDLFOKCEK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "OPNDLFOKCEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::ALEGNMLPLKG
// Il2CppName: ALEGNMLPLKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(::MagicalActual::Grabber*)>(&MagicalActual::RelocationGrabPoint::ALEGNMLPLKG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "ALEGNMLPLKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::HCKDOHIBBCG
// Il2CppName: HCKDOHIBBCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::HCKDOHIBBCG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "HCKDOHIBBCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::GHPHFNBIFPL
// Il2CppName: GHPHFNBIFPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(bool)>(&MagicalActual::RelocationGrabPoint::GHPHFNBIFPL)> {
  static const MethodInfo* get() {
    static auto* CNNFDKIDCBI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "GHPHFNBIFPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CNNFDKIDCBI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::IMEPDNJOMHM
// Il2CppName: IMEPDNJOMHM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::IMEPDNJOMHM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "IMEPDNJOMHM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::NDONNJBMAPF
// Il2CppName: NDONNJBMAPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::NDONNJBMAPF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "NDONNJBMAPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::MOHAOIFACGB
// Il2CppName: MOHAOIFACGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::MOHAOIFACGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "MOHAOIFACGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::ABONCNLHCMP
// Il2CppName: ABONCNLHCMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(::MagicalActual::Grabber*)>(&MagicalActual::RelocationGrabPoint::ABONCNLHCMP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "ABONCNLHCMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::PhysicsInteractableTrigger
// Il2CppName: PhysicsInteractableTrigger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::PhysicsInteractableTrigger)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "PhysicsInteractableTrigger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::EMPNNPKBHFO
// Il2CppName: EMPNNPKBHFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(::MagicalActual::Grabber*)>(&MagicalActual::RelocationGrabPoint::EMPNNPKBHFO)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "EMPNNPKBHFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::MCEJAIFACGL
// Il2CppName: MCEJAIFACGL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(bool)>(&MagicalActual::RelocationGrabPoint::MCEJAIFACGL)> {
  static const MethodInfo* get() {
    static auto* IBFFEGBAOKD = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "MCEJAIFACGL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IBFFEGBAOKD});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::IHKDBEEBPEI
// Il2CppName: IHKDBEEBPEI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::IHKDBEEBPEI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "IHKDBEEBPEI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::PMMNOANBFKJ
// Il2CppName: PMMNOANBFKJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::PMMNOANBFKJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "PMMNOANBFKJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::PABPOCMFEJK
// Il2CppName: PABPOCMFEJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(::MagicalActual::Grabber*)>(&MagicalActual::RelocationGrabPoint::PABPOCMFEJK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "PABPOCMFEJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::MPKCIBKEANK
// Il2CppName: MPKCIBKEANK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::MPKCIBKEANK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "MPKCIBKEANK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::PhysicsInteractableUngrip
// Il2CppName: PhysicsInteractableUngrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(::MagicalActual::Grabber*)>(&MagicalActual::RelocationGrabPoint::PhysicsInteractableUngrip)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "PhysicsInteractableUngrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::DBLHNPALFEG
// Il2CppName: DBLHNPALFEG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(::MagicalActual::Grabber*)>(&MagicalActual::RelocationGrabPoint::DBLHNPALFEG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "DBLHNPALFEG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::DoResetPosition
// Il2CppName: DoResetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(bool)>(&MagicalActual::RelocationGrabPoint::DoResetPosition)> {
  static const MethodInfo* get() {
    static auto* CNNFDKIDCBI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "DoResetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CNNFDKIDCBI});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::EMHCLGIJBHH
// Il2CppName: EMHCLGIJBHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::EMHCLGIJBHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "EMHCLGIJBHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::EPKNICLKDAF
// Il2CppName: EPKNICLKDAF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::EPKNICLKDAF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "EPKNICLKDAF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::SnapBack
// Il2CppName: SnapBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::SnapBack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "SnapBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::MDNMHCKOCNO
// Il2CppName: MDNMHCKOCNO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(::MagicalActual::Grabber*)>(&MagicalActual::RelocationGrabPoint::MDNMHCKOCNO)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "MDNMHCKOCNO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::CheckVisibility
// Il2CppName: CheckVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::CheckVisibility)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "CheckVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::MGLCBPNEPOF
// Il2CppName: MGLCBPNEPOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::MGLCBPNEPOF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "MGLCBPNEPOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::PhysicsInteractableGrip
// Il2CppName: PhysicsInteractableGrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(::MagicalActual::Grabber*)>(&MagicalActual::RelocationGrabPoint::PhysicsInteractableGrip)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "PhysicsInteractableGrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::CBJCAKCCGDA
// Il2CppName: CBJCAKCCGDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::CBJCAKCCGDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "CBJCAKCCGDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::IAAMAFIAPNP
// Il2CppName: IAAMAFIAPNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)()>(&MagicalActual::RelocationGrabPoint::IAAMAFIAPNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "IAAMAFIAPNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::EMEFKDKEBNA
// Il2CppName: EMEFKDKEBNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(::MagicalActual::Grabber*)>(&MagicalActual::RelocationGrabPoint::EMEFKDKEBNA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "EMEFKDKEBNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::RelocationGrabPoint::HBPONNKIHPO
// Il2CppName: HBPONNKIHPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RelocationGrabPoint::*)(bool)>(&MagicalActual::RelocationGrabPoint::HBPONNKIHPO)> {
  static const MethodInfo* get() {
    static auto* IBFFEGBAOKD = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RelocationGrabPoint*), "HBPONNKIHPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IBFFEGBAOKD});
  }
};
