// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: SyncedObject
  class SyncedObject;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent`1<T0>
  template<typename T0>
  class UnityEvent_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PhysicsObject
  class PhysicsObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PhysicsObject);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PhysicsObject*, "MagicalActual", "PhysicsObject");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PhysicsObject
  // [TokenAttribute] Offset: FFFFFFFF
  class PhysicsObject : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::PhysicsObject::$$c__DisplayClass20_0
    class $$c__DisplayClass20_0;
    // Nested type: ::MagicalActual::PhysicsObject::$$c__DisplayClass20_1
    class $$c__DisplayClass20_1;
    // Nested type: ::MagicalActual::PhysicsObject::$$c
    class $$c;
    public:
    // private System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public System.Int32 numObjects
    // Size: 0x4
    // Offset: 0x28
    int numObjects;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single timeToBecomeStill
    // Size: 0x4
    // Offset: 0x2C
    float timeToBecomeStill;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.Events.UnityEvent`1<System.Boolean> OnDriverChanged
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Events::UnityEvent_1<bool>* OnDriverChanged;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent_1<bool>*) == 0x8);
    // [TooltipAttribute] Offset: 0xAE36C0
    // private System.Collections.Generic.List`1<MagicalActual.SyncedObject> objects
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::MagicalActual::SyncedObject*>* objects;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::MagicalActual::SyncedObject*>*) == 0x8);
    // private System.Single timeBetweenUpdates
    // Size: 0x4
    // Offset: 0x40
    float timeBetweenUpdates;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [TooltipAttribute] Offset: 0xAE371C
    // private System.Single driverClearTime
    // Size: 0x4
    // Offset: 0x44
    float driverClearTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single FGBOCBOEDGJ
    // Size: 0x4
    // Offset: 0x48
    float FGBOCBOEDGJ;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3768
    // private System.Boolean <KBPKOOJEMAH>k__BackingField
    // Size: 0x1
    // Offset: 0x4C
    bool KBPKOOJEMAH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean NCLPLPLKJPI
    // Size: 0x1
    // Offset: 0x4D
    bool NCLPLPLKJPI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: NCLPLPLKJPI and: DMNHBEIHGMA
    char __padding10[0x2] = {};
    // private UnityEngine.Transform DMNHBEIHGMA
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Transform* DMNHBEIHGMA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Vector3 IFBAPAKGAAA
    // Size: 0xC
    // Offset: 0x58
    ::UnityEngine::Vector3 IFBAPAKGAAA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 DFENKCABNKH
    // Size: 0xC
    // Offset: 0x64
    ::UnityEngine::Vector3 DFENKCABNKH;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion DOABLLLCODM
    // Size: 0x10
    // Offset: 0x70
    ::UnityEngine::Quaternion DOABLLLCODM;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private UnityEngine.Quaternion GLPCEHFLLEP
    // Size: 0x10
    // Offset: 0x80
    ::UnityEngine::Quaternion GLPCEHFLLEP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public System.Int32 numObjects
    [[deprecated("Use field access instead!")]] int& dyn_numObjects();
    // Get instance field reference: private System.Single timeToBecomeStill
    [[deprecated("Use field access instead!")]] float& dyn_timeToBecomeStill();
    // Get instance field reference: public UnityEngine.Events.UnityEvent`1<System.Boolean> OnDriverChanged
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent_1<bool>*& dyn_OnDriverChanged();
    // Get instance field reference: private System.Collections.Generic.List`1<MagicalActual.SyncedObject> objects
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::MagicalActual::SyncedObject*>*& dyn_objects();
    // Get instance field reference: private System.Single timeBetweenUpdates
    [[deprecated("Use field access instead!")]] float& dyn_timeBetweenUpdates();
    // Get instance field reference: private System.Single driverClearTime
    [[deprecated("Use field access instead!")]] float& dyn_driverClearTime();
    // Get instance field reference: private System.Single FGBOCBOEDGJ
    [[deprecated("Use field access instead!")]] float& dyn_FGBOCBOEDGJ();
    // Get instance field reference: private System.Boolean <KBPKOOJEMAH>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$KBPKOOJEMAH$k__BackingField();
    // Get instance field reference: private System.Boolean NCLPLPLKJPI
    [[deprecated("Use field access instead!")]] bool& dyn_NCLPLPLKJPI();
    // Get instance field reference: private UnityEngine.Transform DMNHBEIHGMA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_DMNHBEIHGMA();
    // Get instance field reference: private UnityEngine.Vector3 IFBAPAKGAAA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_IFBAPAKGAAA();
    // Get instance field reference: private UnityEngine.Vector3 DFENKCABNKH
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_DFENKCABNKH();
    // Get instance field reference: private UnityEngine.Quaternion DOABLLLCODM
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_DOABLLLCODM();
    // Get instance field reference: private UnityEngine.Quaternion GLPCEHFLLEP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_GLPCEHFLLEP();
    // private System.Void NNDKJPGFCPF(System.Object OMLPNCLFFMJ, System.Int32 MDDKAHHGPPF)
    // Offset: 0xD94918
    void NNDKJPGFCPF(::Il2CppObject* OMLPNCLFFMJ, int MDDKAHHGPPF);
    // public System.Void LNMBNOCENKM()
    // Offset: 0xD949F4
    void LNMBNOCENKM();
    // public System.Int32 NNLIMJOJFIC(UnityEngine.GameObject PCHFILMCBNJ)
    // Offset: 0xD94B74
    int NNLIMJOJFIC(::UnityEngine::GameObject* PCHFILMCBNJ);
    // public MagicalActual.SyncedObject BAFMDIAPFBO(System.Int32 FEHDKJKGNCE)
    // Offset: 0xD94C80
    ::MagicalActual::SyncedObject* BAFMDIAPFBO(int FEHDKJKGNCE);
    // public System.Int32 GMNCFNFMHBI(UnityEngine.GameObject PCHFILMCBNJ)
    // Offset: 0xD94D60
    int GMNCFNFMHBI(::UnityEngine::GameObject* PCHFILMCBNJ);
    // public MagicalActual.SyncedObject GFOFCFCOODA(System.Int32 FEHDKJKGNCE)
    // Offset: 0xD94FE4
    ::MagicalActual::SyncedObject* GFOFCFCOODA(int FEHDKJKGNCE);
    // private System.Void LHJDENKEDAM(System.Object OMLPNCLFFMJ, System.Int32 MDDKAHHGPPF)
    // Offset: 0xD950C8
    void LHJDENKEDAM(::Il2CppObject* OMLPNCLFFMJ, int MDDKAHHGPPF);
    // public System.Void SetDriver()
    // Offset: 0xD9519C
    void SetDriver();
    // private System.Void BLIPCIAAIHI()
    // Offset: 0xD95318
    void BLIPCIAAIHI();
    // public UnityEngine.GameObject LinkObject(UnityEngine.GameObject PCHFILMCBNJ, System.Int32 FEHDKJKGNCE)
    // Offset: 0xD95628
    ::UnityEngine::GameObject* LinkObject(::UnityEngine::GameObject* PCHFILMCBNJ, int FEHDKJKGNCE);
    // private System.Void PODCAGOGLEK(System.Boolean MMMEIONJJFJ)
    // Offset: 0xD9583C
    void PODCAGOGLEK(bool MMMEIONJJFJ);
    // public System.Int32 ENPKKLPGIGJ(UnityEngine.GameObject PCHFILMCBNJ)
    // Offset: 0xD95848
    int ENPKKLPGIGJ(::UnityEngine::GameObject* PCHFILMCBNJ);
    // public System.Int32 ECAHMAJJDHH(UnityEngine.GameObject PCHFILMCBNJ)
    // Offset: 0xD95938
    int ECAHMAJJDHH(::UnityEngine::GameObject* PCHFILMCBNJ);
    // public MagicalActual.SyncedObject GetObjectByIndex(System.Int32 FEHDKJKGNCE)
    // Offset: 0xD95A44
    ::MagicalActual::SyncedObject* GetObjectByIndex(int FEHDKJKGNCE);
    // private System.Void FixedUpdate()
    // Offset: 0xD95B28
    void FixedUpdate();
    // private System.Void NDAOHLAOCDE()
    // Offset: 0xD95E1C
    void NDAOHLAOCDE();
    // public System.Void EBKMGINMPPJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0xD95EA0
    void EBKMGINMPPJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0xD9605C
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void JOCIAJOCGNM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0xD96220
    void JOCIAJOCGNM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Int32 NIAGEJLPPBK(UnityEngine.GameObject PCHFILMCBNJ)
    // Offset: 0xD963C4
    int NIAGEJLPPBK(::UnityEngine::GameObject* PCHFILMCBNJ);
    // public System.Void .ctor()
    // Offset: 0xD965A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PhysicsObject* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PhysicsObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PhysicsObject*, creationType>()));
    }
    // private System.Void DGELIHGGOKB()
    // Offset: 0xD96610
    void DGELIHGGOKB();
    // public System.Int32 LinkObject(UnityEngine.GameObject PCHFILMCBNJ)
    // Offset: 0xD96694
    int LinkObject(::UnityEngine::GameObject* PCHFILMCBNJ);
    // private System.Void Update()
    // Offset: 0xD9692C
    void Update();
    // private System.Void EFGPDEBHMDO(System.Boolean MMMEIONJJFJ)
    // Offset: 0xD94B60
    void EFGPDEBHMDO(bool MMMEIONJJFJ);
    // private System.Void APAAMALJCGH(System.Object OMLPNCLFFMJ)
    // Offset: 0xD96D24
    void APAAMALJCGH(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NMAOPDKJMHO(System.Boolean MMMEIONJJFJ)
    // Offset: 0xD96E9C
    void NMAOPDKJMHO(bool MMMEIONJJFJ);
    // private System.Void COOMNIBEGBM(System.Object OMLPNCLFFMJ)
    // Offset: 0xD96EA8
    void COOMNIBEGBM(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LMKJMCABANN(System.Object OMLPNCLFFMJ)
    // Offset: 0xD9701C
    void LMKJMCABANN(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Boolean get_isDriver()
    // Offset: 0xD94B6C
    bool get_isDriver();
    // public MagicalActual.SyncedObject MJIDJPMKJPI(System.Int32 FEHDKJKGNCE)
    // Offset: 0xD9718C
    ::MagicalActual::SyncedObject* MJIDJPMKJPI(int FEHDKJKGNCE);
    // private System.Void KAIDAGOOMHD(System.Boolean MMMEIONJJFJ)
    // Offset: 0xD9726C
    void KAIDAGOOMHD(bool MMMEIONJJFJ);
    // private System.Void KBMGLMCFBOD(System.Boolean MMMEIONJJFJ)
    // Offset: 0xD97278
    void KBMGLMCFBOD(bool MMMEIONJJFJ);
    // public System.Boolean FFBAFNIKBIC()
    // Offset: 0xD95610
    bool FFBAFNIKBIC();
    // private System.Void Awake()
    // Offset: 0xD97284
    void Awake();
    // public System.Int32 UnlinkObject(UnityEngine.GameObject PCHFILMCBNJ)
    // Offset: 0xD97308
    int UnlinkObject(::UnityEngine::GameObject* PCHFILMCBNJ);
    // public System.Int32 DCHAMOMDEOM(UnityEngine.GameObject PCHFILMCBNJ)
    // Offset: 0xD974E4
    int DCHAMOMDEOM(::UnityEngine::GameObject* PCHFILMCBNJ);
    // private System.Void HMFBMKCFGDI(System.Object OMLPNCLFFMJ, System.Int32 MDDKAHHGPPF)
    // Offset: 0xD9777C
    void HMFBMKCFGDI(::Il2CppObject* OMLPNCLFFMJ, int MDDKAHHGPPF);
    // private System.Void LLAAPHCLMLA(System.Boolean MMMEIONJJFJ)
    // Offset: 0xD9530C
    void LLAAPHCLMLA(bool MMMEIONJJFJ);
    // public System.Void OIPLBADJHFI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0xD97854
    void OIPLBADJHFI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Int32 GetLinkIndex(UnityEngine.GameObject PCHFILMCBNJ)
    // Offset: 0xD97A10
    int GetLinkIndex(::UnityEngine::GameObject* PCHFILMCBNJ);
  }; // MagicalActual.PhysicsObject
  #pragma pack(pop)
  static check_size<sizeof(PhysicsObject), 128 + sizeof(::UnityEngine::Quaternion)> __MagicalActual_PhysicsObjectSizeCheck;
  static_assert(sizeof(PhysicsObject) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::NNDKJPGFCPF
// Il2CppName: NNDKJPGFCPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(::Il2CppObject*, int)>(&MagicalActual::PhysicsObject::NNDKJPGFCPF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* MDDKAHHGPPF = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "NNDKJPGFCPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ, MDDKAHHGPPF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::LNMBNOCENKM
// Il2CppName: LNMBNOCENKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)()>(&MagicalActual::PhysicsObject::LNMBNOCENKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "LNMBNOCENKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::NNLIMJOJFIC
// Il2CppName: NNLIMJOJFIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PhysicsObject::*)(::UnityEngine::GameObject*)>(&MagicalActual::PhysicsObject::NNLIMJOJFIC)> {
  static const MethodInfo* get() {
    static auto* PCHFILMCBNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "NNLIMJOJFIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PCHFILMCBNJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::BAFMDIAPFBO
// Il2CppName: BAFMDIAPFBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::SyncedObject* (MagicalActual::PhysicsObject::*)(int)>(&MagicalActual::PhysicsObject::BAFMDIAPFBO)> {
  static const MethodInfo* get() {
    static auto* FEHDKJKGNCE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "BAFMDIAPFBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FEHDKJKGNCE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::GMNCFNFMHBI
// Il2CppName: GMNCFNFMHBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PhysicsObject::*)(::UnityEngine::GameObject*)>(&MagicalActual::PhysicsObject::GMNCFNFMHBI)> {
  static const MethodInfo* get() {
    static auto* PCHFILMCBNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "GMNCFNFMHBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PCHFILMCBNJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::GFOFCFCOODA
// Il2CppName: GFOFCFCOODA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::SyncedObject* (MagicalActual::PhysicsObject::*)(int)>(&MagicalActual::PhysicsObject::GFOFCFCOODA)> {
  static const MethodInfo* get() {
    static auto* FEHDKJKGNCE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "GFOFCFCOODA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FEHDKJKGNCE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::LHJDENKEDAM
// Il2CppName: LHJDENKEDAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(::Il2CppObject*, int)>(&MagicalActual::PhysicsObject::LHJDENKEDAM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* MDDKAHHGPPF = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "LHJDENKEDAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ, MDDKAHHGPPF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::SetDriver
// Il2CppName: SetDriver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)()>(&MagicalActual::PhysicsObject::SetDriver)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "SetDriver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::BLIPCIAAIHI
// Il2CppName: BLIPCIAAIHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)()>(&MagicalActual::PhysicsObject::BLIPCIAAIHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "BLIPCIAAIHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::LinkObject
// Il2CppName: LinkObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::PhysicsObject::*)(::UnityEngine::GameObject*, int)>(&MagicalActual::PhysicsObject::LinkObject)> {
  static const MethodInfo* get() {
    static auto* PCHFILMCBNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* FEHDKJKGNCE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "LinkObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PCHFILMCBNJ, FEHDKJKGNCE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::PODCAGOGLEK
// Il2CppName: PODCAGOGLEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(bool)>(&MagicalActual::PhysicsObject::PODCAGOGLEK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "PODCAGOGLEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::ENPKKLPGIGJ
// Il2CppName: ENPKKLPGIGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PhysicsObject::*)(::UnityEngine::GameObject*)>(&MagicalActual::PhysicsObject::ENPKKLPGIGJ)> {
  static const MethodInfo* get() {
    static auto* PCHFILMCBNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "ENPKKLPGIGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PCHFILMCBNJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::ECAHMAJJDHH
// Il2CppName: ECAHMAJJDHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PhysicsObject::*)(::UnityEngine::GameObject*)>(&MagicalActual::PhysicsObject::ECAHMAJJDHH)> {
  static const MethodInfo* get() {
    static auto* PCHFILMCBNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "ECAHMAJJDHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PCHFILMCBNJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::GetObjectByIndex
// Il2CppName: GetObjectByIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::SyncedObject* (MagicalActual::PhysicsObject::*)(int)>(&MagicalActual::PhysicsObject::GetObjectByIndex)> {
  static const MethodInfo* get() {
    static auto* FEHDKJKGNCE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "GetObjectByIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FEHDKJKGNCE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)()>(&MagicalActual::PhysicsObject::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::NDAOHLAOCDE
// Il2CppName: NDAOHLAOCDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)()>(&MagicalActual::PhysicsObject::NDAOHLAOCDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "NDAOHLAOCDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::EBKMGINMPPJ
// Il2CppName: EBKMGINMPPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PhysicsObject::EBKMGINMPPJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "EBKMGINMPPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PhysicsObject::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::JOCIAJOCGNM
// Il2CppName: JOCIAJOCGNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PhysicsObject::JOCIAJOCGNM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "JOCIAJOCGNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::NIAGEJLPPBK
// Il2CppName: NIAGEJLPPBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PhysicsObject::*)(::UnityEngine::GameObject*)>(&MagicalActual::PhysicsObject::NIAGEJLPPBK)> {
  static const MethodInfo* get() {
    static auto* PCHFILMCBNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "NIAGEJLPPBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PCHFILMCBNJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::DGELIHGGOKB
// Il2CppName: DGELIHGGOKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)()>(&MagicalActual::PhysicsObject::DGELIHGGOKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "DGELIHGGOKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::LinkObject
// Il2CppName: LinkObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PhysicsObject::*)(::UnityEngine::GameObject*)>(&MagicalActual::PhysicsObject::LinkObject)> {
  static const MethodInfo* get() {
    static auto* PCHFILMCBNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "LinkObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PCHFILMCBNJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)()>(&MagicalActual::PhysicsObject::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::EFGPDEBHMDO
// Il2CppName: EFGPDEBHMDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(bool)>(&MagicalActual::PhysicsObject::EFGPDEBHMDO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "EFGPDEBHMDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::APAAMALJCGH
// Il2CppName: APAAMALJCGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(::Il2CppObject*)>(&MagicalActual::PhysicsObject::APAAMALJCGH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "APAAMALJCGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::NMAOPDKJMHO
// Il2CppName: NMAOPDKJMHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(bool)>(&MagicalActual::PhysicsObject::NMAOPDKJMHO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "NMAOPDKJMHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::COOMNIBEGBM
// Il2CppName: COOMNIBEGBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(::Il2CppObject*)>(&MagicalActual::PhysicsObject::COOMNIBEGBM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "COOMNIBEGBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::LMKJMCABANN
// Il2CppName: LMKJMCABANN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(::Il2CppObject*)>(&MagicalActual::PhysicsObject::LMKJMCABANN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "LMKJMCABANN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::get_isDriver
// Il2CppName: get_isDriver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PhysicsObject::*)()>(&MagicalActual::PhysicsObject::get_isDriver)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "get_isDriver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::MJIDJPMKJPI
// Il2CppName: MJIDJPMKJPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::SyncedObject* (MagicalActual::PhysicsObject::*)(int)>(&MagicalActual::PhysicsObject::MJIDJPMKJPI)> {
  static const MethodInfo* get() {
    static auto* FEHDKJKGNCE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "MJIDJPMKJPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FEHDKJKGNCE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::KAIDAGOOMHD
// Il2CppName: KAIDAGOOMHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(bool)>(&MagicalActual::PhysicsObject::KAIDAGOOMHD)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "KAIDAGOOMHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::KBMGLMCFBOD
// Il2CppName: KBMGLMCFBOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(bool)>(&MagicalActual::PhysicsObject::KBMGLMCFBOD)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "KBMGLMCFBOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::FFBAFNIKBIC
// Il2CppName: FFBAFNIKBIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PhysicsObject::*)()>(&MagicalActual::PhysicsObject::FFBAFNIKBIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "FFBAFNIKBIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)()>(&MagicalActual::PhysicsObject::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::UnlinkObject
// Il2CppName: UnlinkObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PhysicsObject::*)(::UnityEngine::GameObject*)>(&MagicalActual::PhysicsObject::UnlinkObject)> {
  static const MethodInfo* get() {
    static auto* PCHFILMCBNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "UnlinkObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PCHFILMCBNJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::DCHAMOMDEOM
// Il2CppName: DCHAMOMDEOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PhysicsObject::*)(::UnityEngine::GameObject*)>(&MagicalActual::PhysicsObject::DCHAMOMDEOM)> {
  static const MethodInfo* get() {
    static auto* PCHFILMCBNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "DCHAMOMDEOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PCHFILMCBNJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::HMFBMKCFGDI
// Il2CppName: HMFBMKCFGDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(::Il2CppObject*, int)>(&MagicalActual::PhysicsObject::HMFBMKCFGDI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* MDDKAHHGPPF = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "HMFBMKCFGDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ, MDDKAHHGPPF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::LLAAPHCLMLA
// Il2CppName: LLAAPHCLMLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(bool)>(&MagicalActual::PhysicsObject::LLAAPHCLMLA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "LLAAPHCLMLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::OIPLBADJHFI
// Il2CppName: OIPLBADJHFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PhysicsObject::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PhysicsObject::OIPLBADJHFI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "OIPLBADJHFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::GetLinkIndex
// Il2CppName: GetLinkIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PhysicsObject::*)(::UnityEngine::GameObject*)>(&MagicalActual::PhysicsObject::GetLinkIndex)> {
  static const MethodInfo* get() {
    static auto* PCHFILMCBNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PhysicsObject*), "GetLinkIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PCHFILMCBNJ});
  }
};
