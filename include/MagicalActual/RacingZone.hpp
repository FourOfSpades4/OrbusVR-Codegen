// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: RacingZone
  class RacingZone;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::RacingZone);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::RacingZone*, "MagicalActual", "RacingZone");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.RacingZone
  // [TokenAttribute] Offset: FFFFFFFF
  class RacingZone : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String raceName
    // Size: 0x8
    // Offset: 0x20
    ::StringW raceName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject[] animatedObjects
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::GameObject*> animatedObjects;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public System.String raceName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_raceName();
    // Get instance field reference: public UnityEngine.GameObject[] animatedObjects
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_animatedObjects();
    // public System.Void PHBEHECOKEM()
    // Offset: 0x15AB644
    void PHBEHECOKEM();
    // public System.Void GDKNFKICOFJ()
    // Offset: 0x15AB778
    void GDKNFKICOFJ();
    // public System.Void JKOGCIJILFO()
    // Offset: 0x15AB8AC
    void JKOGCIJILFO();
    // public System.Void POMBLMLMMBM()
    // Offset: 0x15AB9E0
    void POMBLMLMMBM();
    // public System.Void DMAEGFCOCLB()
    // Offset: 0x15ABAE4
    void DMAEGFCOCLB();
    // public System.Void IJKHKPBJILN()
    // Offset: 0x15ABBE8
    void IJKHKPBJILN();
    // public System.Void LHHHLOCAFJG()
    // Offset: 0x15ABCEC
    void LHHHLOCAFJG();
    // public System.Void CIOLFEGPIOL()
    // Offset: 0x15ABE20
    void CIOLFEGPIOL();
    // public System.Void IPGIHEIKAPM()
    // Offset: 0x15ABF24
    void IPGIHEIKAPM();
    // public System.Void NNHCDCMNHFL()
    // Offset: 0x15AC028
    void NNHCDCMNHFL();
    // public System.Void APHDEBNLEGG()
    // Offset: 0x15AC12C
    void APHDEBNLEGG();
    // public System.Void ENNEIKIBIGC()
    // Offset: 0x15AC230
    void ENNEIKIBIGC();
    // public System.Void BOJIEFFCPBN()
    // Offset: 0x15AC334
    void BOJIEFFCPBN();
    // public System.Void ResetAnimations()
    // Offset: 0x15AC468
    void ResetAnimations();
    // public System.Void IGHAOKJJJAI()
    // Offset: 0x15AC59C
    void IGHAOKJJJAI();
    // public System.Void FCELEIAHPMM()
    // Offset: 0x15AC6A0
    void FCELEIAHPMM();
    // public System.Void NAJBDCPIDNO()
    // Offset: 0x15AC7D4
    void NAJBDCPIDNO();
    // public System.Void LBJDMEFGCHD()
    // Offset: 0x15AC908
    void LBJDMEFGCHD();
    // public System.Void AJDDLGEJEAB()
    // Offset: 0x15ACA0C
    void AJDDLGEJEAB();
    // public System.Void DIGDIKACGAE()
    // Offset: 0x15ACB40
    void DIGDIKACGAE();
    // public System.Void AEPCHNEOFGF()
    // Offset: 0x15ACC44
    void AEPCHNEOFGF();
    // public System.Void NIJGADFJKKE()
    // Offset: 0x15ACD78
    void NIJGADFJKKE();
    // public System.Void NGDPMPEOPBO()
    // Offset: 0x15ACEAC
    void NGDPMPEOPBO();
    // public System.Void IKLFEDAJPLG()
    // Offset: 0x15ACFE0
    void IKLFEDAJPLG();
    // public System.Void OFLLPPIDJNH()
    // Offset: 0x15AD0E4
    void OFLLPPIDJNH();
    // public System.Void HIMJGDBBFCJ()
    // Offset: 0x15AD218
    void HIMJGDBBFCJ();
    // public System.Void FOADCMHOLHH()
    // Offset: 0x15AD31C
    void FOADCMHOLHH();
    // public System.Void HOCKIIEEPMH()
    // Offset: 0x15AD420
    void HOCKIIEEPMH();
    // public System.Void MDNOCHFJIEL()
    // Offset: 0x15AD524
    void MDNOCHFJIEL();
    // public System.Void NCKEIOCOJJG()
    // Offset: 0x15AD658
    void NCKEIOCOJJG();
    // public System.Void IELCGHDNEIA()
    // Offset: 0x15AD78C
    void IELCGHDNEIA();
    // public System.Void OMEKKKEEJMC()
    // Offset: 0x15AD890
    void OMEKKKEEJMC();
    // public System.Void .ctor()
    // Offset: 0x15AD994
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RacingZone* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::RacingZone::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RacingZone*, creationType>()));
    }
  }; // MagicalActual.RacingZone
  #pragma pack(pop)
  static check_size<sizeof(RacingZone), 40 + sizeof(::ArrayW<::UnityEngine::GameObject*>)> __MagicalActual_RacingZoneSizeCheck;
  static_assert(sizeof(RacingZone) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::RacingZone::PHBEHECOKEM
// Il2CppName: PHBEHECOKEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::PHBEHECOKEM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "PHBEHECOKEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::GDKNFKICOFJ
// Il2CppName: GDKNFKICOFJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::GDKNFKICOFJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "GDKNFKICOFJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::JKOGCIJILFO
// Il2CppName: JKOGCIJILFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::JKOGCIJILFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "JKOGCIJILFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::POMBLMLMMBM
// Il2CppName: POMBLMLMMBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::POMBLMLMMBM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "POMBLMLMMBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::DMAEGFCOCLB
// Il2CppName: DMAEGFCOCLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::DMAEGFCOCLB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "DMAEGFCOCLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::IJKHKPBJILN
// Il2CppName: IJKHKPBJILN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::IJKHKPBJILN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "IJKHKPBJILN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::LHHHLOCAFJG
// Il2CppName: LHHHLOCAFJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::LHHHLOCAFJG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "LHHHLOCAFJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::CIOLFEGPIOL
// Il2CppName: CIOLFEGPIOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::CIOLFEGPIOL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "CIOLFEGPIOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::IPGIHEIKAPM
// Il2CppName: IPGIHEIKAPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::IPGIHEIKAPM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "IPGIHEIKAPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::NNHCDCMNHFL
// Il2CppName: NNHCDCMNHFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::NNHCDCMNHFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "NNHCDCMNHFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::APHDEBNLEGG
// Il2CppName: APHDEBNLEGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::APHDEBNLEGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "APHDEBNLEGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::ENNEIKIBIGC
// Il2CppName: ENNEIKIBIGC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::ENNEIKIBIGC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "ENNEIKIBIGC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::BOJIEFFCPBN
// Il2CppName: BOJIEFFCPBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::BOJIEFFCPBN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "BOJIEFFCPBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::ResetAnimations
// Il2CppName: ResetAnimations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::ResetAnimations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "ResetAnimations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::IGHAOKJJJAI
// Il2CppName: IGHAOKJJJAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::IGHAOKJJJAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "IGHAOKJJJAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::FCELEIAHPMM
// Il2CppName: FCELEIAHPMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::FCELEIAHPMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "FCELEIAHPMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::NAJBDCPIDNO
// Il2CppName: NAJBDCPIDNO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::NAJBDCPIDNO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "NAJBDCPIDNO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::LBJDMEFGCHD
// Il2CppName: LBJDMEFGCHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::LBJDMEFGCHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "LBJDMEFGCHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::AJDDLGEJEAB
// Il2CppName: AJDDLGEJEAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::AJDDLGEJEAB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "AJDDLGEJEAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::DIGDIKACGAE
// Il2CppName: DIGDIKACGAE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::DIGDIKACGAE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "DIGDIKACGAE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::AEPCHNEOFGF
// Il2CppName: AEPCHNEOFGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::AEPCHNEOFGF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "AEPCHNEOFGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::NIJGADFJKKE
// Il2CppName: NIJGADFJKKE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::NIJGADFJKKE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "NIJGADFJKKE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::NGDPMPEOPBO
// Il2CppName: NGDPMPEOPBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::NGDPMPEOPBO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "NGDPMPEOPBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::IKLFEDAJPLG
// Il2CppName: IKLFEDAJPLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::IKLFEDAJPLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "IKLFEDAJPLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::OFLLPPIDJNH
// Il2CppName: OFLLPPIDJNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::OFLLPPIDJNH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "OFLLPPIDJNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::HIMJGDBBFCJ
// Il2CppName: HIMJGDBBFCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::HIMJGDBBFCJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "HIMJGDBBFCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::FOADCMHOLHH
// Il2CppName: FOADCMHOLHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::FOADCMHOLHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "FOADCMHOLHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::HOCKIIEEPMH
// Il2CppName: HOCKIIEEPMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::HOCKIIEEPMH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "HOCKIIEEPMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::MDNOCHFJIEL
// Il2CppName: MDNOCHFJIEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::MDNOCHFJIEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "MDNOCHFJIEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::NCKEIOCOJJG
// Il2CppName: NCKEIOCOJJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::NCKEIOCOJJG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "NCKEIOCOJJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::IELCGHDNEIA
// Il2CppName: IELCGHDNEIA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::IELCGHDNEIA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "IELCGHDNEIA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::OMEKKKEEJMC
// Il2CppName: OMEKKKEEJMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RacingZone::*)()>(&MagicalActual::RacingZone::OMEKKKEEJMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RacingZone*), "OMEKKKEEJMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RacingZone::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
