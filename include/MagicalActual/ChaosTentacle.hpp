// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
  // Forward declaring type: AudioSource
  class AudioSource;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ChaosTentacle
  class ChaosTentacle;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ChaosTentacle);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ChaosTentacle*, "MagicalActual", "ChaosTentacle");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ChaosTentacle
  // [TokenAttribute] Offset: FFFFFFFF
  class ChaosTentacle : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.Animator myAnimator
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Animator* myAnimator;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animator*) == 0x8);
    // private UnityEngine.AudioSource myAudio
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::AudioSource* myAudio;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Animator myAnimator
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& dyn_myAnimator();
    // Get instance field reference: private UnityEngine.AudioSource myAudio
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& dyn_myAudio();
    // public System.Void CDNFGMFKIOF()
    // Offset: 0x1ADB778
    void CDNFGMFKIOF();
    // public System.Void BIDGLGJOFJM()
    // Offset: 0x1ADB7F8
    void BIDGLGJOFJM();
    // public System.Void NKKDJNJLOEJ()
    // Offset: 0x1ADB878
    void NKKDJNJLOEJ();
    // public System.Void HGDJBBIMHBA()
    // Offset: 0x1ADB8F8
    void HGDJBBIMHBA();
    // public System.Void NJIONGKKFEJ()
    // Offset: 0x1ADB978
    void NJIONGKKFEJ();
    // public System.Void MOJGBJJKKFP()
    // Offset: 0x1ADB9F8
    void MOJGBJJKKFP();
    // public System.Void BMMGKDNAPBA()
    // Offset: 0x1ADBA78
    void BMMGKDNAPBA();
    // public System.Void AEINHPPJNIP()
    // Offset: 0x1ADBAF8
    void AEINHPPJNIP();
    // public System.Void KLDFBNFMJDB()
    // Offset: 0x1ADBB78
    void KLDFBNFMJDB();
    // public System.Void JJOPIDCHCJK()
    // Offset: 0x1ADBBF8
    void JJOPIDCHCJK();
    // public System.Void DPFDKPHHCOD()
    // Offset: 0x1ADBC78
    void DPFDKPHHCOD();
    // public System.Void FGNLLFDFEPD()
    // Offset: 0x1ADBCF8
    void FGNLLFDFEPD();
    // public System.Void CAHMMFBJBML()
    // Offset: 0x1ADBD78
    void CAHMMFBJBML();
    // public System.Void HNPCEOAFKII()
    // Offset: 0x1ADBDF8
    void HNPCEOAFKII();
    // public System.Void HAHAMAJHMMO()
    // Offset: 0x1ADBE78
    void HAHAMAJHMMO();
    // public System.Void AFNKKFILIJI()
    // Offset: 0x1ADBEF8
    void AFNKKFILIJI();
    // public System.Void .ctor()
    // Offset: 0x1ADBF78
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ChaosTentacle* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ChaosTentacle::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ChaosTentacle*, creationType>()));
    }
    // public System.Void PBDGKKOMKNO()
    // Offset: 0x1ADBF80
    void PBDGKKOMKNO();
    // public System.Void LENODFCBAFP()
    // Offset: 0x1ADC000
    void LENODFCBAFP();
    // public System.Void EGHJDIEGFPK()
    // Offset: 0x1ADC080
    void EGHJDIEGFPK();
    // public System.Void NKNCDNBJBDP()
    // Offset: 0x1ADC100
    void NKNCDNBJBDP();
    // public System.Void OGECOPPACAJ()
    // Offset: 0x1ADC180
    void OGECOPPACAJ();
    // public System.Void DPFNDFMPMHO()
    // Offset: 0x1ADC200
    void DPFNDFMPMHO();
    // public System.Void PlayAttack()
    // Offset: 0x1ADC280
    void PlayAttack();
    // public System.Void IKDOJADEACN()
    // Offset: 0x1ADC300
    void IKDOJADEACN();
    // public System.Void PDHOLOIONMH()
    // Offset: 0x1ADC380
    void PDHOLOIONMH();
    // public System.Void AGDNDIOGCNJ()
    // Offset: 0x1ADC400
    void AGDNDIOGCNJ();
    // public System.Void FKJDFGGALJF()
    // Offset: 0x1ADC480
    void FKJDFGGALJF();
    // public System.Void HOENMLCFOHB()
    // Offset: 0x1ADC500
    void HOENMLCFOHB();
    // public System.Void JLAGDGGGFEP()
    // Offset: 0x1ADC580
    void JLAGDGGGFEP();
    // public System.Void LOMKCJLNJNJ()
    // Offset: 0x1ADC600
    void LOMKCJLNJNJ();
    // public System.Void LAAFKCMDIOB()
    // Offset: 0x1ADC680
    void LAAFKCMDIOB();
  }; // MagicalActual.ChaosTentacle
  #pragma pack(pop)
  static check_size<sizeof(ChaosTentacle), 32 + sizeof(::UnityEngine::AudioSource*)> __MagicalActual_ChaosTentacleSizeCheck;
  static_assert(sizeof(ChaosTentacle) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::CDNFGMFKIOF
// Il2CppName: CDNFGMFKIOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::CDNFGMFKIOF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "CDNFGMFKIOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::BIDGLGJOFJM
// Il2CppName: BIDGLGJOFJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::BIDGLGJOFJM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "BIDGLGJOFJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::NKKDJNJLOEJ
// Il2CppName: NKKDJNJLOEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::NKKDJNJLOEJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "NKKDJNJLOEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::HGDJBBIMHBA
// Il2CppName: HGDJBBIMHBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::HGDJBBIMHBA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "HGDJBBIMHBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::NJIONGKKFEJ
// Il2CppName: NJIONGKKFEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::NJIONGKKFEJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "NJIONGKKFEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::MOJGBJJKKFP
// Il2CppName: MOJGBJJKKFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::MOJGBJJKKFP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "MOJGBJJKKFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::BMMGKDNAPBA
// Il2CppName: BMMGKDNAPBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::BMMGKDNAPBA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "BMMGKDNAPBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::AEINHPPJNIP
// Il2CppName: AEINHPPJNIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::AEINHPPJNIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "AEINHPPJNIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::KLDFBNFMJDB
// Il2CppName: KLDFBNFMJDB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::KLDFBNFMJDB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "KLDFBNFMJDB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::JJOPIDCHCJK
// Il2CppName: JJOPIDCHCJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::JJOPIDCHCJK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "JJOPIDCHCJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::DPFDKPHHCOD
// Il2CppName: DPFDKPHHCOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::DPFDKPHHCOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "DPFDKPHHCOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::FGNLLFDFEPD
// Il2CppName: FGNLLFDFEPD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::FGNLLFDFEPD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "FGNLLFDFEPD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::CAHMMFBJBML
// Il2CppName: CAHMMFBJBML
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::CAHMMFBJBML)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "CAHMMFBJBML", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::HNPCEOAFKII
// Il2CppName: HNPCEOAFKII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::HNPCEOAFKII)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "HNPCEOAFKII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::HAHAMAJHMMO
// Il2CppName: HAHAMAJHMMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::HAHAMAJHMMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "HAHAMAJHMMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::AFNKKFILIJI
// Il2CppName: AFNKKFILIJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::AFNKKFILIJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "AFNKKFILIJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::PBDGKKOMKNO
// Il2CppName: PBDGKKOMKNO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::PBDGKKOMKNO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "PBDGKKOMKNO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::LENODFCBAFP
// Il2CppName: LENODFCBAFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::LENODFCBAFP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "LENODFCBAFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::EGHJDIEGFPK
// Il2CppName: EGHJDIEGFPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::EGHJDIEGFPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "EGHJDIEGFPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::NKNCDNBJBDP
// Il2CppName: NKNCDNBJBDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::NKNCDNBJBDP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "NKNCDNBJBDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::OGECOPPACAJ
// Il2CppName: OGECOPPACAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::OGECOPPACAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "OGECOPPACAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::DPFNDFMPMHO
// Il2CppName: DPFNDFMPMHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::DPFNDFMPMHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "DPFNDFMPMHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::PlayAttack
// Il2CppName: PlayAttack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::PlayAttack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "PlayAttack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::IKDOJADEACN
// Il2CppName: IKDOJADEACN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::IKDOJADEACN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "IKDOJADEACN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::PDHOLOIONMH
// Il2CppName: PDHOLOIONMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::PDHOLOIONMH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "PDHOLOIONMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::AGDNDIOGCNJ
// Il2CppName: AGDNDIOGCNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::AGDNDIOGCNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "AGDNDIOGCNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::FKJDFGGALJF
// Il2CppName: FKJDFGGALJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::FKJDFGGALJF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "FKJDFGGALJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::HOENMLCFOHB
// Il2CppName: HOENMLCFOHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::HOENMLCFOHB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "HOENMLCFOHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::JLAGDGGGFEP
// Il2CppName: JLAGDGGGFEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::JLAGDGGGFEP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "JLAGDGGGFEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::LOMKCJLNJNJ
// Il2CppName: LOMKCJLNJNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::LOMKCJLNJNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "LOMKCJLNJNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosTentacle::LAAFKCMDIOB
// Il2CppName: LAAFKCMDIOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosTentacle::*)()>(&MagicalActual::ChaosTentacle::LAAFKCMDIOB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosTentacle*), "LAAFKCMDIOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
