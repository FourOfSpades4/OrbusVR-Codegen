// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_FrogMage
  class M_FrogMage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_FrogMage);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_FrogMage*, "MagicalActual", "M_FrogMage");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x51
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_FrogMage
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD5134
  class M_FrogMage : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::M_FrogMage::orbusNetMethodIdx
    struct orbusNetMethodIdx;
    // Nested type: ::MagicalActual::M_FrogMage::$$c__DisplayClass10_0
    class $$c__DisplayClass10_0;
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxHeal
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxHeal;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxDecurse
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* vfxDecurse;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x38
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.NetEntity GCMKMKBKGLG
    // Size: 0x8
    // Offset: 0x48
    ::MagicalActual::NetEntity* GCMKMKBKGLG;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private System.Byte IIJDGDOPMEA
    // Size: 0x1
    // Offset: 0x50
    uint8_t IIJDGDOPMEA;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public UnityEngine.GameObject vfxHeal
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxHeal();
    // Get instance field reference: public UnityEngine.GameObject vfxDecurse
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxDecurse();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private MagicalActual.NetEntity GCMKMKBKGLG
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_GCMKMKBKGLG();
    // Get instance field reference: private System.Byte IIJDGDOPMEA
    [[deprecated("Use field access instead!")]] uint8_t& dyn_IIJDGDOPMEA();
    // public System.Void MMGEIKLBBOH()
    // Offset: 0x24C77DC
    void MMGEIKLBBOH();
    // public System.Void INBJAJOECPA()
    // Offset: 0x24C7CC8
    void INBJAJOECPA();
    // public System.Void KLPLAHINIGH()
    // Offset: 0x24C7FD4
    void KLPLAHINIGH();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24C84B8
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void AFIACGLCIPB()
    // Offset: 0x24C8608
    void AFIACGLCIPB();
    // public System.Void DIDADMBDAAK()
    // Offset: 0x24C8660
    void DIDADMBDAAK();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x24C8B44
    void GHLPBOJJHNG();
    // public System.Void KMPPLBBIMGJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24C8B9C
    void KMPPLBBIMGJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24C8CEC
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void JOCIAJOCGNM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24C8E3C
    void JOCIAJOCGNM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void Start()
    // Offset: 0x24C8F8C
    void Start();
    // public System.Void NHHIIEHJCFA()
    // Offset: 0x24C8FE4
    void NHHIIEHJCFA();
    // public System.Void OMKBAIIIFBJ()
    // Offset: 0x24C94C8
    void OMKBAIIIFBJ();
    // public System.Void LAOCCBHKHLO()
    // Offset: 0x24C99AC
    void LAOCCBHKHLO();
    // public System.Void JEDLABBFELC()
    // Offset: 0x24C9CB4
    void JEDLABBFELC();
    // public System.Void LCKDPMJKHEN(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24C9ECC
    void LCKDPMJKHEN(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x24CA01C
    void ABIHCGOKNCL();
    // private System.Void CDABCHCJOHP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24CA074
    void CDABCHCJOHP(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void DFBGALKEAMG(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24CA220
    void DFBGALKEAMG(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void BALJMNCNMPJ()
    // Offset: 0x24CA3D0
    void BALJMNCNMPJ();
    // public System.Void DFAMNPLNDAJ()
    // Offset: 0x24CA5E0
    void DFAMNPLNDAJ();
    // public System.Void KDPEOPPDLLP()
    // Offset: 0x24CA8E8
    void KDPEOPPDLLP();
    // public System.Void HealTarget()
    // Offset: 0x24CADCC
    void HealTarget();
    // public System.Void EFLOOICDIBB()
    // Offset: 0x24CB038
    void EFLOOICDIBB();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x24CB340
    void FGIFGGNGKPK();
    // private System.Void ECLLJGKMCHB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24CB398
    void ECLLJGKMCHB(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void PLPDCBMCEJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24CB548
    void PLPDCBMCEJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void GNLJPBIKLNL()
    // Offset: 0x24CB698
    void GNLJPBIKLNL();
    // private System.Void DNHOHEAPGDO(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24CB9A0
    void DNHOHEAPGDO(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void JJCPBCGLHLB()
    // Offset: 0x24CBB50
    void JJCPBCGLHLB();
    // public System.Void OFDMFGNMEOP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24CBD64
    void OFDMFGNMEOP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EANMBEEMCBD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24CBEB4
    void EANMBEEMCBD(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x24CC064
    void CBMDGNKFPIO();
    // public System.Void .ctor()
    // Offset: 0x24CC0BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_FrogMage* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_FrogMage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_FrogMage*, creationType>()));
    }
    // public System.Void ACHLPBFONGA()
    // Offset: 0x24CC114
    void ACHLPBFONGA();
    // public System.Void HMIDAAAHFCB()
    // Offset: 0x24CC41C
    void HMIDAAAHFCB();
    // private System.Void ENNPLFBNBAL(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24CC900
    void ENNPLFBNBAL(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void IBMKENLAMGB()
    // Offset: 0x24CCAB0
    void IBMKENLAMGB();
    // private System.Void HDBJMOPDKKD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24CCF94
    void HDBJMOPDKKD(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x24CD144
    void BDEDGNGMHMN();
    // public System.Void Slash()
    // Offset: 0x24CD19C
    void Slash();
  }; // MagicalActual.M_FrogMage
  #pragma pack(pop)
  static check_size<sizeof(M_FrogMage), 80 + sizeof(uint8_t)> __MagicalActual_M_FrogMageSizeCheck;
  static_assert(sizeof(M_FrogMage) == 0x51);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::MMGEIKLBBOH
// Il2CppName: MMGEIKLBBOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::MMGEIKLBBOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "MMGEIKLBBOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::INBJAJOECPA
// Il2CppName: INBJAJOECPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::INBJAJOECPA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "INBJAJOECPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::KLPLAHINIGH
// Il2CppName: KLPLAHINIGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::KLPLAHINIGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "KLPLAHINIGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_FrogMage::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::DIDADMBDAAK
// Il2CppName: DIDADMBDAAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::DIDADMBDAAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "DIDADMBDAAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::KMPPLBBIMGJ
// Il2CppName: KMPPLBBIMGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_FrogMage::KMPPLBBIMGJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "KMPPLBBIMGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_FrogMage::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::JOCIAJOCGNM
// Il2CppName: JOCIAJOCGNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_FrogMage::JOCIAJOCGNM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "JOCIAJOCGNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::NHHIIEHJCFA
// Il2CppName: NHHIIEHJCFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::NHHIIEHJCFA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "NHHIIEHJCFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::OMKBAIIIFBJ
// Il2CppName: OMKBAIIIFBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::OMKBAIIIFBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "OMKBAIIIFBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::LAOCCBHKHLO
// Il2CppName: LAOCCBHKHLO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::LAOCCBHKHLO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "LAOCCBHKHLO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::JEDLABBFELC
// Il2CppName: JEDLABBFELC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::JEDLABBFELC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "JEDLABBFELC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::LCKDPMJKHEN
// Il2CppName: LCKDPMJKHEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_FrogMage::LCKDPMJKHEN)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "LCKDPMJKHEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::CDABCHCJOHP
// Il2CppName: CDABCHCJOHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_FrogMage::CDABCHCJOHP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "CDABCHCJOHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::DFBGALKEAMG
// Il2CppName: DFBGALKEAMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_FrogMage::DFBGALKEAMG)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "DFBGALKEAMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::BALJMNCNMPJ
// Il2CppName: BALJMNCNMPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::BALJMNCNMPJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "BALJMNCNMPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::DFAMNPLNDAJ
// Il2CppName: DFAMNPLNDAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::DFAMNPLNDAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "DFAMNPLNDAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::KDPEOPPDLLP
// Il2CppName: KDPEOPPDLLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::KDPEOPPDLLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "KDPEOPPDLLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::HealTarget
// Il2CppName: HealTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::HealTarget)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "HealTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::EFLOOICDIBB
// Il2CppName: EFLOOICDIBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::EFLOOICDIBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "EFLOOICDIBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::ECLLJGKMCHB
// Il2CppName: ECLLJGKMCHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_FrogMage::ECLLJGKMCHB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "ECLLJGKMCHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::PLPDCBMCEJF
// Il2CppName: PLPDCBMCEJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_FrogMage::PLPDCBMCEJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "PLPDCBMCEJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::GNLJPBIKLNL
// Il2CppName: GNLJPBIKLNL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::GNLJPBIKLNL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "GNLJPBIKLNL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::DNHOHEAPGDO
// Il2CppName: DNHOHEAPGDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_FrogMage::DNHOHEAPGDO)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "DNHOHEAPGDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::JJCPBCGLHLB
// Il2CppName: JJCPBCGLHLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::JJCPBCGLHLB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "JJCPBCGLHLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::OFDMFGNMEOP
// Il2CppName: OFDMFGNMEOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_FrogMage::OFDMFGNMEOP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "OFDMFGNMEOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::EANMBEEMCBD
// Il2CppName: EANMBEEMCBD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_FrogMage::EANMBEEMCBD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "EANMBEEMCBD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::ACHLPBFONGA
// Il2CppName: ACHLPBFONGA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::ACHLPBFONGA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "ACHLPBFONGA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::HMIDAAAHFCB
// Il2CppName: HMIDAAAHFCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::HMIDAAAHFCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "HMIDAAAHFCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::ENNPLFBNBAL
// Il2CppName: ENNPLFBNBAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_FrogMage::ENNPLFBNBAL)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "ENNPLFBNBAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::IBMKENLAMGB
// Il2CppName: IBMKENLAMGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::IBMKENLAMGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "IBMKENLAMGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::HDBJMOPDKKD
// Il2CppName: HDBJMOPDKKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_FrogMage::HDBJMOPDKKD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "HDBJMOPDKKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_FrogMage::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_FrogMage::*)()>(&MagicalActual::M_FrogMage::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_FrogMage*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
