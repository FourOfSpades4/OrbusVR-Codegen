// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: Valve::VR::InteractionSystem
namespace Valve::VR::InteractionSystem {
  // Forward declaring type: ControllerButtonHints
  class ControllerButtonHints;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerRig
  class PlayerRig;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PlayerRig);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PlayerRig*, "MagicalActual", "PlayerRig");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x4C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PlayerRig
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayerRig : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.Boolean OAFLKJFHFGN
    // Size: 0x1
    // Offset: 0x18
    bool OAFLKJFHFGN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: OAFLKJFHFGN and: eyeCamera
    char __padding0[0x7] = {};
    // public UnityEngine.GameObject eyeCamera
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* eyeCamera;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE4C08
    // private System.Boolean <EBAMBFCJMII>k__BackingField
    // Size: 0x1
    // Offset: 0x28
    bool EBAMBFCJMII;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: EBAMBFCJMII and: CPKMLCGBEPI
    char __padding2[0x7] = {};
    // private Valve.VR.InteractionSystem.ControllerButtonHints CPKMLCGBEPI
    // Size: 0x8
    // Offset: 0x30
    ::Valve::VR::InteractionSystem::ControllerButtonHints* CPKMLCGBEPI;
    // Field size check
    static_assert(sizeof(::Valve::VR::InteractionSystem::ControllerButtonHints*) == 0x8);
    // private Valve.VR.InteractionSystem.ControllerButtonHints OJMCJNLLCPE
    // Size: 0x8
    // Offset: 0x38
    ::Valve::VR::InteractionSystem::ControllerButtonHints* OJMCJNLLCPE;
    // Field size check
    static_assert(sizeof(::Valve::VR::InteractionSystem::ControllerButtonHints*) == 0x8);
    // private System.Boolean GNCMILPMLEK
    // Size: 0x1
    // Offset: 0x40
    bool GNCMILPMLEK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean BNHAFDPCHHJ
    // Size: 0x1
    // Offset: 0x41
    bool BNHAFDPCHHJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: BNHAFDPCHHJ and: LKKCCIOIEBK
    char __padding6[0x2] = {};
    // private System.Single LKKCCIOIEBK
    // Size: 0x4
    // Offset: 0x44
    float LKKCCIOIEBK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single CNMEJNJFKAI
    // Size: 0x4
    // Offset: 0x48
    float CNMEJNJFKAI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Boolean OAFLKJFHFGN
    [[deprecated("Use field access instead!")]] bool& dyn_OAFLKJFHFGN();
    // Get instance field reference: public UnityEngine.GameObject eyeCamera
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_eyeCamera();
    // Get instance field reference: private System.Boolean <EBAMBFCJMII>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$EBAMBFCJMII$k__BackingField();
    // Get instance field reference: private Valve.VR.InteractionSystem.ControllerButtonHints CPKMLCGBEPI
    [[deprecated("Use field access instead!")]] ::Valve::VR::InteractionSystem::ControllerButtonHints*& dyn_CPKMLCGBEPI();
    // Get instance field reference: private Valve.VR.InteractionSystem.ControllerButtonHints OJMCJNLLCPE
    [[deprecated("Use field access instead!")]] ::Valve::VR::InteractionSystem::ControllerButtonHints*& dyn_OJMCJNLLCPE();
    // Get instance field reference: private System.Boolean GNCMILPMLEK
    [[deprecated("Use field access instead!")]] bool& dyn_GNCMILPMLEK();
    // Get instance field reference: private System.Boolean BNHAFDPCHHJ
    [[deprecated("Use field access instead!")]] bool& dyn_BNHAFDPCHHJ();
    // Get instance field reference: private System.Single LKKCCIOIEBK
    [[deprecated("Use field access instead!")]] float& dyn_LKKCCIOIEBK();
    // Get instance field reference: private System.Single CNMEJNJFKAI
    [[deprecated("Use field access instead!")]] float& dyn_CNMEJNJFKAI();
    // public System.Void HGLHNHMBJHM()
    // Offset: 0x14755BC
    void HGLHNHMBJHM();
    // private System.Void BLIPCIAAIHI()
    // Offset: 0x1475B84
    void BLIPCIAAIHI();
    // private System.Void ICEGDGKAIIB()
    // Offset: 0x1475C58
    void ICEGDGKAIIB();
    // private System.Void AGOBDBDGJKD()
    // Offset: 0x1475D2C
    void AGOBDBDGJKD();
    // public System.Boolean JCJHIFOKPKA()
    // Offset: 0x1475DFC
    bool JCJHIFOKPKA();
    // public System.Void MakeRigBasedAdjustments()
    // Offset: 0x1475E04
    void MakeRigBasedAdjustments();
    // private System.Void Awake()
    // Offset: 0x14763E4
    void Awake();
    // private System.Void GKJEIKOINDH(System.Boolean MMMEIONJJFJ)
    // Offset: 0x14765E0
    void GKJEIKOINDH(bool MMMEIONJJFJ);
    // public System.Void ShowHint(System.Int32 DBJMBLGLHIH, System.String IAOBAMAGDGA, System.String IJIGDENBKFO)
    // Offset: 0x14765EC
    void ShowHint(int DBJMBLGLHIH, ::StringW IAOBAMAGDGA, ::StringW IJIGDENBKFO);
    // public System.Void FJNPAONKDEN()
    // Offset: 0x1476A94
    void FJNPAONKDEN();
    // private System.Void FixedUpdate()
    // Offset: 0x1477080
    void FixedUpdate();
    // private System.Void Start()
    // Offset: 0x147714C
    void Start();
    // public System.Void HideHints(System.Int32 DBJMBLGLHIH)
    // Offset: 0x1477150
    void HideHints(int DBJMBLGLHIH);
    // public System.Void PEJGCNJDPBK(System.Int32 DBJMBLGLHIH)
    // Offset: 0x1477300
    void PEJGCNJDPBK(int DBJMBLGLHIH);
    // public System.Void NJOBGBNGNNE()
    // Offset: 0x14774BC
    void NJOBGBNGNNE();
    // public System.Void OIGGBMOCCOC(System.Int32 DBJMBLGLHIH, System.String IAOBAMAGDGA, System.String IJIGDENBKFO)
    // Offset: 0x1477AB4
    void OIGGBMOCCOC(int DBJMBLGLHIH, ::StringW IAOBAMAGDGA, ::StringW IJIGDENBKFO);
    // private System.Void MIPEOCANMMO()
    // Offset: 0x1477F70
    void MIPEOCANMMO();
    // public System.Void .ctor()
    // Offset: 0x1478158
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerRig* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PlayerRig::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerRig*, creationType>()));
    }
    // public System.Boolean ONNMAMMLKIB()
    // Offset: 0x14774B4
    bool ONNMAMMLKIB();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x1478168
    void MLGBKBMHHLE();
    // public System.Boolean NBEJDPCIBND()
    // Offset: 0x147816C
    bool NBEJDPCIBND();
    // private System.Void AMIPIMKIJMO()
    // Offset: 0x1478174
    void AMIPIMKIJMO();
    // public System.Boolean PAECOEHPINM()
    // Offset: 0x1478244
    bool PAECOEHPINM();
    // public System.Boolean get_isOculus()
    // Offset: 0x14765D8
    bool get_isOculus();
    // private System.Void KKEABMBACIC()
    // Offset: 0x147824C
    void KKEABMBACIC();
    // public System.Void JBJGGMCKIEL(System.Int32 DBJMBLGLHIH, System.String IAOBAMAGDGA, System.String IJIGDENBKFO)
    // Offset: 0x1478434
    void JBJGGMCKIEL(int DBJMBLGLHIH, ::StringW IAOBAMAGDGA, ::StringW IJIGDENBKFO);
    // private System.Void ADLGPKAIPAA()
    // Offset: 0x1478920
    void ADLGPKAIPAA();
    // public System.Void GGFAAMLCHGG(System.Int32 DBJMBLGLHIH, System.String IAOBAMAGDGA, System.String IJIGDENBKFO)
    // Offset: 0x1478B08
    void GGFAAMLCHGG(int DBJMBLGLHIH, ::StringW IAOBAMAGDGA, ::StringW IJIGDENBKFO);
    // private System.Void AOEOGAPEMEG(System.Boolean MMMEIONJJFJ)
    // Offset: 0x14765CC
    void AOEOGAPEMEG(bool MMMEIONJJFJ);
    // private System.Void CNBJHFMDCOE()
    // Offset: 0x1479000
    void CNBJHFMDCOE();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x14792D0
    void ABIHCGOKNCL();
  }; // MagicalActual.PlayerRig
  #pragma pack(pop)
  static check_size<sizeof(PlayerRig), 72 + sizeof(float)> __MagicalActual_PlayerRigSizeCheck;
  static_assert(sizeof(PlayerRig) == 0x4C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PlayerRig::HGLHNHMBJHM
// Il2CppName: HGLHNHMBJHM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::HGLHNHMBJHM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "HGLHNHMBJHM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::BLIPCIAAIHI
// Il2CppName: BLIPCIAAIHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::BLIPCIAAIHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "BLIPCIAAIHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::ICEGDGKAIIB
// Il2CppName: ICEGDGKAIIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::ICEGDGKAIIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "ICEGDGKAIIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::AGOBDBDGJKD
// Il2CppName: AGOBDBDGJKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::AGOBDBDGJKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "AGOBDBDGJKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::JCJHIFOKPKA
// Il2CppName: JCJHIFOKPKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::JCJHIFOKPKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "JCJHIFOKPKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::MakeRigBasedAdjustments
// Il2CppName: MakeRigBasedAdjustments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::MakeRigBasedAdjustments)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "MakeRigBasedAdjustments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::GKJEIKOINDH
// Il2CppName: GKJEIKOINDH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)(bool)>(&MagicalActual::PlayerRig::GKJEIKOINDH)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "GKJEIKOINDH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::ShowHint
// Il2CppName: ShowHint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)(int, ::StringW, ::StringW)>(&MagicalActual::PlayerRig::ShowHint)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* IAOBAMAGDGA = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* IJIGDENBKFO = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "ShowHint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH, IAOBAMAGDGA, IJIGDENBKFO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::FJNPAONKDEN
// Il2CppName: FJNPAONKDEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::FJNPAONKDEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "FJNPAONKDEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::HideHints
// Il2CppName: HideHints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)(int)>(&MagicalActual::PlayerRig::HideHints)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "HideHints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::PEJGCNJDPBK
// Il2CppName: PEJGCNJDPBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)(int)>(&MagicalActual::PlayerRig::PEJGCNJDPBK)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "PEJGCNJDPBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::NJOBGBNGNNE
// Il2CppName: NJOBGBNGNNE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::NJOBGBNGNNE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "NJOBGBNGNNE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::OIGGBMOCCOC
// Il2CppName: OIGGBMOCCOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)(int, ::StringW, ::StringW)>(&MagicalActual::PlayerRig::OIGGBMOCCOC)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* IAOBAMAGDGA = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* IJIGDENBKFO = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "OIGGBMOCCOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH, IAOBAMAGDGA, IJIGDENBKFO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::MIPEOCANMMO
// Il2CppName: MIPEOCANMMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::MIPEOCANMMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "MIPEOCANMMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PlayerRig::ONNMAMMLKIB
// Il2CppName: ONNMAMMLKIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::ONNMAMMLKIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "ONNMAMMLKIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::NBEJDPCIBND
// Il2CppName: NBEJDPCIBND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::NBEJDPCIBND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "NBEJDPCIBND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::AMIPIMKIJMO
// Il2CppName: AMIPIMKIJMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::AMIPIMKIJMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "AMIPIMKIJMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::PAECOEHPINM
// Il2CppName: PAECOEHPINM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::PAECOEHPINM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "PAECOEHPINM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::get_isOculus
// Il2CppName: get_isOculus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::get_isOculus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "get_isOculus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::KKEABMBACIC
// Il2CppName: KKEABMBACIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::KKEABMBACIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "KKEABMBACIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::JBJGGMCKIEL
// Il2CppName: JBJGGMCKIEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)(int, ::StringW, ::StringW)>(&MagicalActual::PlayerRig::JBJGGMCKIEL)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* IAOBAMAGDGA = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* IJIGDENBKFO = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "JBJGGMCKIEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH, IAOBAMAGDGA, IJIGDENBKFO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::ADLGPKAIPAA
// Il2CppName: ADLGPKAIPAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::ADLGPKAIPAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "ADLGPKAIPAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::GGFAAMLCHGG
// Il2CppName: GGFAAMLCHGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)(int, ::StringW, ::StringW)>(&MagicalActual::PlayerRig::GGFAAMLCHGG)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* IAOBAMAGDGA = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* IJIGDENBKFO = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "GGFAAMLCHGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH, IAOBAMAGDGA, IJIGDENBKFO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::AOEOGAPEMEG
// Il2CppName: AOEOGAPEMEG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)(bool)>(&MagicalActual::PlayerRig::AOEOGAPEMEG)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "AOEOGAPEMEG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::CNBJHFMDCOE
// Il2CppName: CNBJHFMDCOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::CNBJHFMDCOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "CNBJHFMDCOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerRig::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerRig::*)()>(&MagicalActual::PlayerRig::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerRig*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
