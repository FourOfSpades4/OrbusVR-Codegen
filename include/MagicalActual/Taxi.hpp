// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Taxi
  class Taxi;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Taxi);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Taxi*, "MagicalActual", "Taxi");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x39
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Taxi
  // [TokenAttribute] Offset: FFFFFFFF
  class Taxi : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Vector4[] wayPoints
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::UnityEngine::Vector4> wayPoints;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector4>) == 0x8);
    // public System.Int32 startingWaypoint
    // Size: 0x4
    // Offset: 0x20
    int startingWaypoint;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: startingWaypoint and: OrbusNetComponent
    char __padding1[0x4] = {};
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE4FE0
    // private MagicalActual.NetEntity <JANFCAJMFMP>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::MagicalActual::NetEntity* JANFCAJMFMP;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public System.Boolean isDocked
    // Size: 0x1
    // Offset: 0x38
    bool isDocked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Vector4[] wayPoints
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& dyn_wayPoints();
    // Get instance field reference: public System.Int32 startingWaypoint
    [[deprecated("Use field access instead!")]] int& dyn_startingWaypoint();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity <JANFCAJMFMP>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_$JANFCAJMFMP$k__BackingField();
    // Get instance field reference: public System.Boolean isDocked
    [[deprecated("Use field access instead!")]] bool& dyn_isDocked();
    // private System.Void GDDBINCPIAJ()
    // Offset: 0x166E294
    void GDDBINCPIAJ();
    // private System.Void CIFIJDAJKEK()
    // Offset: 0x166E468
    void CIFIJDAJKEK();
    // public System.Void OFDMFGNMEOP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x166E608
    void OFDMFGNMEOP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void JJEJNGMIMOI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x166E6D8
    void JJEJNGMIMOI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void FBONHOOJHBG()
    // Offset: 0x166E7A8
    void FBONHOOJHBG();
    // public System.Void OAMOHIMHKEK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x166E98C
    void OAMOHIMHKEK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void OGALJHFFLHP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x166EA58
    void OGALJHFFLHP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JNFEEDCNFMH(System.Object LPBDOKJFOJI)
    // Offset: 0x166EB24
    void JNFEEDCNFMH(::Il2CppObject* LPBDOKJFOJI);
    // public MagicalActual.NetEntity KDDNJODNAKE()
    // Offset: 0x166ED3C
    ::MagicalActual::NetEntity* KDDNJODNAKE();
    // public MagicalActual.NetEntity FEJJNMAIHGI()
    // Offset: 0x166ED44
    ::MagicalActual::NetEntity* FEJJNMAIHGI();
    // public System.Void .ctor()
    // Offset: 0x166ED4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Taxi* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Taxi::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Taxi*, creationType>()));
    }
    // private System.Void DHKPPAENLLA(MagicalActual.NetEntity MMMEIONJJFJ)
    // Offset: 0x166EA50
    void DHKPPAENLLA(::MagicalActual::NetEntity* MMMEIONJJFJ);
    // private System.Void ALPOMOEPBFL()
    // Offset: 0x166EDA4
    void ALPOMOEPBFL();
    // private System.Void MHNAEMEFCOL(System.Object LPBDOKJFOJI)
    // Offset: 0x166EF6C
    void MHNAEMEFCOL(::Il2CppObject* LPBDOKJFOJI);
    // private System.Void PEBEGKADCEL(MagicalActual.NetEntity MMMEIONJJFJ)
    // Offset: 0x166E7A0
    void PEBEGKADCEL(::MagicalActual::NetEntity* MMMEIONJJFJ);
    // public MagicalActual.NetEntity get_myEntity()
    // Offset: 0x166F184
    ::MagicalActual::NetEntity* get_myEntity();
    // private System.Void NNNJFEHEDPP(MagicalActual.NetEntity MMMEIONJJFJ)
    // Offset: 0x166F18C
    void NNNJFEHEDPP(::MagicalActual::NetEntity* MMMEIONJJFJ);
    // public System.Void EGJMIHFLOKP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x166F194
    void EGJMIHFLOKP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EKFFDPIMDPP()
    // Offset: 0x166F264
    void EKFFDPIMDPP();
    // private System.Void LODHEFIKMLD()
    // Offset: 0x166EFD8
    void LODHEFIKMLD();
    // public MagicalActual.NetEntity FIGPLOCFPNF()
    // Offset: 0x166F42C
    ::MagicalActual::NetEntity* FIGPLOCFPNF();
    // public MagicalActual.NetEntity PKEIAHOANMK()
    // Offset: 0x166F434
    ::MagicalActual::NetEntity* PKEIAHOANMK();
    // public MagicalActual.NetEntity EGFAGMEPAPB()
    // Offset: 0x166F43C
    ::MagicalActual::NetEntity* EGFAGMEPAPB();
    // public System.Void IOOBCJAJKCJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x166F444
    void IOOBCJAJKCJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public MagicalActual.NetEntity JKOLNACNGMC()
    // Offset: 0x166F50C
    ::MagicalActual::NetEntity* JKOLNACNGMC();
    // public MagicalActual.NetEntity AGJMDNHKJFK()
    // Offset: 0x166F514
    ::MagicalActual::NetEntity* AGJMDNHKJFK();
    // public MagicalActual.NetEntity HPJAGCLIFEP()
    // Offset: 0x166F51C
    ::MagicalActual::NetEntity* HPJAGCLIFEP();
    // private System.Void CCFLCJLOFCI()
    // Offset: 0x166F524
    void CCFLCJLOFCI();
    // private System.Void Start()
    // Offset: 0x166F6F8
    void Start();
    // private System.Void PLPGMIILDJA(MagicalActual.NetEntity MMMEIONJJFJ)
    // Offset: 0x166EB1C
    void PLPGMIILDJA(::MagicalActual::NetEntity* MMMEIONJJFJ);
    // public MagicalActual.NetEntity AKIFBHFAMJE()
    // Offset: 0x166F708
    ::MagicalActual::NetEntity* AKIFBHFAMJE();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x166F710
    void JENOIOBAEPG();
    // private System.Void BFPCKHBCHHJ(MagicalActual.NetEntity MMMEIONJJFJ)
    // Offset: 0x166F25C
    void BFPCKHBCHHJ(::MagicalActual::NetEntity* MMMEIONJJFJ);
    // public System.Void DKDBFFDLADP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x166F720
    void DKDBFFDLADP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x166F7E4
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void CLKPBFHCJNN(MagicalActual.NetEntity MMMEIONJJFJ)
    // Offset: 0x166F8AC
    void CLKPBFHCJNN(::MagicalActual::NetEntity* MMMEIONJJFJ);
    // private System.Void BCBNCEMNGHI()
    // Offset: 0x166E7B8
    void BCBNCEMNGHI();
    // public MagicalActual.NetEntity MEFPIBHPFMO()
    // Offset: 0x166F8B4
    ::MagicalActual::NetEntity* MEFPIBHPFMO();
    // private System.Void APMNGLNBFNP()
    // Offset: 0x166F8BC
    void APMNGLNBFNP();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x166F8CC
    void FGIFGGNGKPK();
    // public MagicalActual.NetEntity EMNFBGDGMOA()
    // Offset: 0x166F8DC
    ::MagicalActual::NetEntity* EMNFBGDGMOA();
    // private System.Void DGIKKMCHFGM(System.Object LPBDOKJFOJI)
    // Offset: 0x166F8E4
    void DGIKKMCHFGM(::Il2CppObject* LPBDOKJFOJI);
    // private System.Void KCGPJGPCPJI(System.Object LPBDOKJFOJI)
    // Offset: 0x166F950
    void KCGPJGPCPJI(::Il2CppObject* LPBDOKJFOJI);
    // private System.Void KEOPPGPHEBB()
    // Offset: 0x166EB90
    void KEOPPGPHEBB();
    // private System.Void BLLLIJPBEMC(System.Object LPBDOKJFOJI)
    // Offset: 0x166F9BC
    void BLLLIJPBEMC(::Il2CppObject* LPBDOKJFOJI);
    // private System.Void EHPCJNJCACO(MagicalActual.NetEntity MMMEIONJJFJ)
    // Offset: 0x166E6D0
    void EHPCJNJCACO(::MagicalActual::NetEntity* MMMEIONJJFJ);
  }; // MagicalActual.Taxi
  #pragma pack(pop)
  static check_size<sizeof(Taxi), 56 + sizeof(bool)> __MagicalActual_TaxiSizeCheck;
  static_assert(sizeof(Taxi) == 0x39);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Taxi::GDDBINCPIAJ
// Il2CppName: GDDBINCPIAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::GDDBINCPIAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "GDDBINCPIAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::CIFIJDAJKEK
// Il2CppName: CIFIJDAJKEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::CIFIJDAJKEK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "CIFIJDAJKEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::OFDMFGNMEOP
// Il2CppName: OFDMFGNMEOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::OFDMFGNMEOP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "OFDMFGNMEOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::JJEJNGMIMOI
// Il2CppName: JJEJNGMIMOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::JJEJNGMIMOI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "JJEJNGMIMOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::FBONHOOJHBG
// Il2CppName: FBONHOOJHBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::FBONHOOJHBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "FBONHOOJHBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::OAMOHIMHKEK
// Il2CppName: OAMOHIMHKEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::OAMOHIMHKEK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "OAMOHIMHKEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::OGALJHFFLHP
// Il2CppName: OGALJHFFLHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::OGALJHFFLHP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "OGALJHFFLHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::JNFEEDCNFMH
// Il2CppName: JNFEEDCNFMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::Il2CppObject*)>(&MagicalActual::Taxi::JNFEEDCNFMH)> {
  static const MethodInfo* get() {
    static auto* LPBDOKJFOJI = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "JNFEEDCNFMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPBDOKJFOJI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::KDDNJODNAKE
// Il2CppName: KDDNJODNAKE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::KDDNJODNAKE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "KDDNJODNAKE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::FEJJNMAIHGI
// Il2CppName: FEJJNMAIHGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::FEJJNMAIHGI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "FEJJNMAIHGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Taxi::DHKPPAENLLA
// Il2CppName: DHKPPAENLLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::DHKPPAENLLA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "DHKPPAENLLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::ALPOMOEPBFL
// Il2CppName: ALPOMOEPBFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::ALPOMOEPBFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "ALPOMOEPBFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::MHNAEMEFCOL
// Il2CppName: MHNAEMEFCOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::Il2CppObject*)>(&MagicalActual::Taxi::MHNAEMEFCOL)> {
  static const MethodInfo* get() {
    static auto* LPBDOKJFOJI = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "MHNAEMEFCOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPBDOKJFOJI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::PEBEGKADCEL
// Il2CppName: PEBEGKADCEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::PEBEGKADCEL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "PEBEGKADCEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::get_myEntity
// Il2CppName: get_myEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::get_myEntity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "get_myEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::NNNJFEHEDPP
// Il2CppName: NNNJFEHEDPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::NNNJFEHEDPP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "NNNJFEHEDPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::EGJMIHFLOKP
// Il2CppName: EGJMIHFLOKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::EGJMIHFLOKP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "EGJMIHFLOKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::EKFFDPIMDPP
// Il2CppName: EKFFDPIMDPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::EKFFDPIMDPP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "EKFFDPIMDPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::LODHEFIKMLD
// Il2CppName: LODHEFIKMLD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::LODHEFIKMLD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "LODHEFIKMLD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::FIGPLOCFPNF
// Il2CppName: FIGPLOCFPNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::FIGPLOCFPNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "FIGPLOCFPNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::PKEIAHOANMK
// Il2CppName: PKEIAHOANMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::PKEIAHOANMK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "PKEIAHOANMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::EGFAGMEPAPB
// Il2CppName: EGFAGMEPAPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::EGFAGMEPAPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "EGFAGMEPAPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::IOOBCJAJKCJ
// Il2CppName: IOOBCJAJKCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::IOOBCJAJKCJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "IOOBCJAJKCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::JKOLNACNGMC
// Il2CppName: JKOLNACNGMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::JKOLNACNGMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "JKOLNACNGMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::AGJMDNHKJFK
// Il2CppName: AGJMDNHKJFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::AGJMDNHKJFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "AGJMDNHKJFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::HPJAGCLIFEP
// Il2CppName: HPJAGCLIFEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::HPJAGCLIFEP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "HPJAGCLIFEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::CCFLCJLOFCI
// Il2CppName: CCFLCJLOFCI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::CCFLCJLOFCI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "CCFLCJLOFCI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::PLPGMIILDJA
// Il2CppName: PLPGMIILDJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::PLPGMIILDJA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "PLPGMIILDJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::AKIFBHFAMJE
// Il2CppName: AKIFBHFAMJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::AKIFBHFAMJE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "AKIFBHFAMJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::BFPCKHBCHHJ
// Il2CppName: BFPCKHBCHHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::BFPCKHBCHHJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "BFPCKHBCHHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::DKDBFFDLADP
// Il2CppName: DKDBFFDLADP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::DKDBFFDLADP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "DKDBFFDLADP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::CLKPBFHCJNN
// Il2CppName: CLKPBFHCJNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::CLKPBFHCJNN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "CLKPBFHCJNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::BCBNCEMNGHI
// Il2CppName: BCBNCEMNGHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::BCBNCEMNGHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "BCBNCEMNGHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::MEFPIBHPFMO
// Il2CppName: MEFPIBHPFMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::MEFPIBHPFMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "MEFPIBHPFMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::APMNGLNBFNP
// Il2CppName: APMNGLNBFNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::APMNGLNBFNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "APMNGLNBFNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::EMNFBGDGMOA
// Il2CppName: EMNFBGDGMOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::EMNFBGDGMOA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "EMNFBGDGMOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::DGIKKMCHFGM
// Il2CppName: DGIKKMCHFGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::Il2CppObject*)>(&MagicalActual::Taxi::DGIKKMCHFGM)> {
  static const MethodInfo* get() {
    static auto* LPBDOKJFOJI = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "DGIKKMCHFGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPBDOKJFOJI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::KCGPJGPCPJI
// Il2CppName: KCGPJGPCPJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::Il2CppObject*)>(&MagicalActual::Taxi::KCGPJGPCPJI)> {
  static const MethodInfo* get() {
    static auto* LPBDOKJFOJI = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "KCGPJGPCPJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPBDOKJFOJI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::KEOPPGPHEBB
// Il2CppName: KEOPPGPHEBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)()>(&MagicalActual::Taxi::KEOPPGPHEBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "KEOPPGPHEBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::BLLLIJPBEMC
// Il2CppName: BLLLIJPBEMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::Il2CppObject*)>(&MagicalActual::Taxi::BLLLIJPBEMC)> {
  static const MethodInfo* get() {
    static auto* LPBDOKJFOJI = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "BLLLIJPBEMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPBDOKJFOJI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Taxi::EHPCJNJCACO
// Il2CppName: EHPCJNJCACO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Taxi::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Taxi::EHPCJNJCACO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Taxi*), "EHPCJNJCACO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
