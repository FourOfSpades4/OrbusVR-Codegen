// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_Wyrm
  class M_Wyrm;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_Wyrm);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_Wyrm*, "MagicalActual", "M_Wyrm");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_Wyrm
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD7734
  class M_Wyrm : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x13E4050
    void IDOCJGNLNFL();
    // public System.Void MKAECMFKIEN()
    // Offset: 0x13E40A8
    void MKAECMFKIEN();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x13E42CC
    void LPLGKBGLPOK();
    // private System.Void NOHHODKFFDI()
    // Offset: 0x13E4324
    void NOHHODKFFDI();
    // public System.Void PHMNKLJAEMC()
    // Offset: 0x13E4398
    void PHMNKLJAEMC();
    // private System.Void MIDPEAIOGNF()
    // Offset: 0x13E45BC
    void MIDPEAIOGNF();
    // public System.Void .ctor()
    // Offset: 0x13E4630
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_Wyrm* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_Wyrm::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_Wyrm*, creationType>()));
    }
    // public System.Void KDPEOPPDLLP()
    // Offset: 0x13E4638
    void KDPEOPPDLLP();
    // public System.Void KIBDAOLFNJM()
    // Offset: 0x13E485C
    void KIBDAOLFNJM();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x13E4A80
    void KBDGAPMJGLG();
    // public System.Void FMFOGAKFJGJ()
    // Offset: 0x13E4AD8
    void FMFOGAKFJGJ();
    // private System.Void GCMCMLJPDLB()
    // Offset: 0x13E4CFC
    void GCMCMLJPDLB();
    // public System.Void HJADIOCKECN()
    // Offset: 0x13E4D70
    void HJADIOCKECN();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x13E4F94
    void LBIKOKCCILF();
    // private System.Void Start()
    // Offset: 0x13E4FEC
    void Start();
    // public System.Void JFKKFKNHPFI()
    // Offset: 0x13E5044
    void JFKKFKNHPFI();
    // private System.Void LKDBEJJKJBG()
    // Offset: 0x13E5268
    void LKDBEJJKJBG();
    // private System.Void FMEEDNJNOLE()
    // Offset: 0x13E52DC
    void FMEEDNJNOLE();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x13E5350
    void GKIOLADOCOK();
    // public System.Void PKINMLEHJFB()
    // Offset: 0x13E53A8
    void PKINMLEHJFB();
    // private System.Void NNDCJJKFOLD()
    // Offset: 0x13E55CC
    void NNDCJJKFOLD();
    // public System.Void JFBOMHHGFDN()
    // Offset: 0x13E5640
    void JFBOMHHGFDN();
    // public System.Void GHHAMAIIFFG()
    // Offset: 0x13E5860
    void GHHAMAIIFFG();
    // public System.Void Slash()
    // Offset: 0x13E5A84
    void Slash();
    // public System.Void PNLNOOIGCBK()
    // Offset: 0x13E5C9C
    void PNLNOOIGCBK();
    // private System.Void CKPDCELIFBM()
    // Offset: 0x13E5EC0
    void CKPDCELIFBM();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x13E5F34
    void FNGLOIECKDG();
  }; // MagicalActual.M_Wyrm
  #pragma pack(pop)
  static check_size<sizeof(M_Wyrm), 32 + sizeof(::UnityEngine::GameObject*)> __MagicalActual_M_WyrmSizeCheck;
  static_assert(sizeof(M_Wyrm) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::MKAECMFKIEN
// Il2CppName: MKAECMFKIEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::MKAECMFKIEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "MKAECMFKIEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::NOHHODKFFDI
// Il2CppName: NOHHODKFFDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::NOHHODKFFDI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "NOHHODKFFDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::PHMNKLJAEMC
// Il2CppName: PHMNKLJAEMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::PHMNKLJAEMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "PHMNKLJAEMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::MIDPEAIOGNF
// Il2CppName: MIDPEAIOGNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::MIDPEAIOGNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "MIDPEAIOGNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::KDPEOPPDLLP
// Il2CppName: KDPEOPPDLLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::KDPEOPPDLLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "KDPEOPPDLLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::KIBDAOLFNJM
// Il2CppName: KIBDAOLFNJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::KIBDAOLFNJM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "KIBDAOLFNJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::FMFOGAKFJGJ
// Il2CppName: FMFOGAKFJGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::FMFOGAKFJGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "FMFOGAKFJGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::GCMCMLJPDLB
// Il2CppName: GCMCMLJPDLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::GCMCMLJPDLB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "GCMCMLJPDLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::HJADIOCKECN
// Il2CppName: HJADIOCKECN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::HJADIOCKECN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "HJADIOCKECN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::JFKKFKNHPFI
// Il2CppName: JFKKFKNHPFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::JFKKFKNHPFI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "JFKKFKNHPFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::LKDBEJJKJBG
// Il2CppName: LKDBEJJKJBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::LKDBEJJKJBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "LKDBEJJKJBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::FMEEDNJNOLE
// Il2CppName: FMEEDNJNOLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::FMEEDNJNOLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "FMEEDNJNOLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::PKINMLEHJFB
// Il2CppName: PKINMLEHJFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::PKINMLEHJFB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "PKINMLEHJFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::NNDCJJKFOLD
// Il2CppName: NNDCJJKFOLD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::NNDCJJKFOLD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "NNDCJJKFOLD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::JFBOMHHGFDN
// Il2CppName: JFBOMHHGFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::JFBOMHHGFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "JFBOMHHGFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::GHHAMAIIFFG
// Il2CppName: GHHAMAIIFFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::GHHAMAIIFFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "GHHAMAIIFFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::PNLNOOIGCBK
// Il2CppName: PNLNOOIGCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::PNLNOOIGCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "PNLNOOIGCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::CKPDCELIFBM
// Il2CppName: CKPDCELIFBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::CKPDCELIFBM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "CKPDCELIFBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Wyrm::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Wyrm::*)()>(&MagicalActual::M_Wyrm::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Wyrm*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
