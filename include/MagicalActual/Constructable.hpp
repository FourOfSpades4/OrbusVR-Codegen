// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ConstructablePiece
  class ConstructablePiece;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Constructable
  class Constructable;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Constructable);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Constructable*, "MagicalActual", "Constructable");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Constructable
  // [TokenAttribute] Offset: FFFFFFFF
  class Constructable : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public MagicalActual.ConstructablePiece[] pieces
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::MagicalActual::ConstructablePiece*> pieces;
    // Field size check
    static_assert(sizeof(::ArrayW<::MagicalActual::ConstructablePiece*>) == 0x8);
    // public UnityEngine.GameObject vfxCompleted
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxCompleted;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject completedObject
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* completedObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public MagicalActual.ConstructablePiece[] pieces
    [[deprecated("Use field access instead!")]] ::ArrayW<::MagicalActual::ConstructablePiece*>& dyn_pieces();
    // Get instance field reference: public UnityEngine.GameObject vfxCompleted
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxCompleted();
    // Get instance field reference: public UnityEngine.GameObject completedObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_completedObject();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x1D30C98
    void EIIKFEMCNKM();
    // private System.Void Start()
    // Offset: 0x1D30E04
    void Start();
    // private System.Void DDDILGPLPME()
    // Offset: 0x1D30F70
    void DDDILGPLPME();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x1D31294
    void HKINNMLBMMG();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x1D31400
    void KPOAAAHLGLA();
    // private System.Void CCEAMBNNKCO()
    // Offset: 0x1D31554
    void CCEAMBNNKCO();
    // private System.Void FCBFDJCAEBB()
    // Offset: 0x1D31850
    void FCBFDJCAEBB();
    // private System.Void PJBDNNFJHMA()
    // Offset: 0x1D31B74
    void PJBDNNFJHMA();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x1D31E98
    void ABIHCGOKNCL();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x1D32004
    void GKIOLADOCOK();
    // public System.Void .ctor()
    // Offset: 0x1D32154
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Constructable* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Constructable::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Constructable*, creationType>()));
    }
    // private System.Void GECHLDPLPCC()
    // Offset: 0x1D3215C
    void GECHLDPLPCC();
    // private System.Void OMAGAMPIFGH()
    // Offset: 0x1D322B0
    void OMAGAMPIFGH();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x1D325D4
    void FGIFGGNGKPK();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x1D3273C
    void BDEDGNGMHMN();
    // private System.Void pieceCompleted()
    // Offset: 0x1D328A0
    void pieceCompleted();
    // private System.Void KNMGLGKCEBM()
    // Offset: 0x1D32BC0
    void KNMGLGKCEBM();
    // private System.Void NHADFEMILCC()
    // Offset: 0x1D32EE4
    void NHADFEMILCC();
    // private System.Void BHPABKJLMKN()
    // Offset: 0x1D33034
    void BHPABKJLMKN();
    // private System.Void LCLDDHMPOHM()
    // Offset: 0x1D33330
    void LCLDDHMPOHM();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x1D3362C
    void DGJGAFKDIDK();
    // private System.Void OICAPJAHBBH()
    // Offset: 0x1D337AC
    void OICAPJAHBBH();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x1D33AD0
    void CBMDGNKFPIO();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x1D33C34
    void FNGLOIECKDG();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x1D33D98
    void IDOCJGNLNFL();
    // private System.Void DDGPMJIJANO()
    // Offset: 0x1D33F04
    void DDGPMJIJANO();
    // private System.Void BFGDLGEBHGK()
    // Offset: 0x1D34228
    void BFGDLGEBHGK();
  }; // MagicalActual.Constructable
  #pragma pack(pop)
  static check_size<sizeof(Constructable), 40 + sizeof(::UnityEngine::GameObject*)> __MagicalActual_ConstructableSizeCheck;
  static_assert(sizeof(Constructable) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Constructable::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::DDDILGPLPME
// Il2CppName: DDDILGPLPME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::DDDILGPLPME)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "DDDILGPLPME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::CCEAMBNNKCO
// Il2CppName: CCEAMBNNKCO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::CCEAMBNNKCO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "CCEAMBNNKCO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::FCBFDJCAEBB
// Il2CppName: FCBFDJCAEBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::FCBFDJCAEBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "FCBFDJCAEBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::PJBDNNFJHMA
// Il2CppName: PJBDNNFJHMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::PJBDNNFJHMA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "PJBDNNFJHMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Constructable::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::OMAGAMPIFGH
// Il2CppName: OMAGAMPIFGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::OMAGAMPIFGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "OMAGAMPIFGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::pieceCompleted
// Il2CppName: pieceCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::pieceCompleted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "pieceCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::KNMGLGKCEBM
// Il2CppName: KNMGLGKCEBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::KNMGLGKCEBM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "KNMGLGKCEBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::BHPABKJLMKN
// Il2CppName: BHPABKJLMKN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::BHPABKJLMKN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "BHPABKJLMKN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::LCLDDHMPOHM
// Il2CppName: LCLDDHMPOHM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::LCLDDHMPOHM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "LCLDDHMPOHM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::OICAPJAHBBH
// Il2CppName: OICAPJAHBBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::OICAPJAHBBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "OICAPJAHBBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::DDGPMJIJANO
// Il2CppName: DDGPMJIJANO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::DDGPMJIJANO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "DDGPMJIJANO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Constructable::BFGDLGEBHGK
// Il2CppName: BFGDLGEBHGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Constructable::*)()>(&MagicalActual::Constructable::BFGDLGEBHGK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Constructable*), "BFGDLGEBHGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
