// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Fisher
  class Fisher;
  // Forward declaring type: FisherReel
  class FisherReel;
  // Forward declaring type: PlayerTool
  class PlayerTool;
  // Forward declaring type: DynamicPlayerMap
  class DynamicPlayerMap;
  // Forward declaring type: Grabber
  class Grabber;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: FishingRod
  class FishingRod;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::FishingRod);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::FishingRod*, "MagicalActual", "FishingRod");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x58
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.FishingRod
  // [TokenAttribute] Offset: FFFFFFFF
  class FishingRod : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public MagicalActual.Fisher myFisher
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Fisher* myFisher;
    // Field size check
    static_assert(sizeof(::MagicalActual::Fisher*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE33F0
    // private MagicalActual.FisherReel <HPDMEHEEGHG>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::FisherReel* HPDMEHEEGHG;
    // Field size check
    static_assert(sizeof(::MagicalActual::FisherReel*) == 0x8);
    // private MagicalActual.PlayerTool FKJHGIFOJKD
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::PlayerTool* FKJHGIFOJKD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerTool*) == 0x8);
    // private UnityEngine.GameObject hipRod
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* hipRod;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject heldRod
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* heldRod;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Transform poleStatus
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Transform* poleStatus;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public System.Boolean isHeld
    // Size: 0x1
    // Offset: 0x48
    bool isHeld;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean isAlreadyHidden
    // Size: 0x1
    // Offset: 0x49
    bool isAlreadyHidden;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean isInit
    // Size: 0x1
    // Offset: 0x4A
    bool isInit;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isInit and: OOAIOOMLGHB
    char __padding8[0x5] = {};
    // private MagicalActual.DynamicPlayerMap OOAIOOMLGHB
    // Size: 0x8
    // Offset: 0x50
    ::MagicalActual::DynamicPlayerMap* OOAIOOMLGHB;
    // Field size check
    static_assert(sizeof(::MagicalActual::DynamicPlayerMap*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public MagicalActual.Fisher myFisher
    [[deprecated("Use field access instead!")]] ::MagicalActual::Fisher*& dyn_myFisher();
    // Get instance field reference: private MagicalActual.FisherReel <HPDMEHEEGHG>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::FisherReel*& dyn_$HPDMEHEEGHG$k__BackingField();
    // Get instance field reference: private MagicalActual.PlayerTool FKJHGIFOJKD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerTool*& dyn_FKJHGIFOJKD();
    // Get instance field reference: private UnityEngine.GameObject hipRod
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_hipRod();
    // Get instance field reference: private UnityEngine.GameObject heldRod
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_heldRod();
    // Get instance field reference: private UnityEngine.Transform poleStatus
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_poleStatus();
    // Get instance field reference: public System.Boolean isHeld
    [[deprecated("Use field access instead!")]] bool& dyn_isHeld();
    // Get instance field reference: public System.Boolean isAlreadyHidden
    [[deprecated("Use field access instead!")]] bool& dyn_isAlreadyHidden();
    // Get instance field reference: public System.Boolean isInit
    [[deprecated("Use field access instead!")]] bool& dyn_isInit();
    // Get instance field reference: private MagicalActual.DynamicPlayerMap OOAIOOMLGHB
    [[deprecated("Use field access instead!")]] ::MagicalActual::DynamicPlayerMap*& dyn_OOAIOOMLGHB();
    // private System.Void PHMBDONGMCD(MagicalActual.FisherReel MMMEIONJJFJ)
    // Offset: 0x14FE930
    void PHMBDONGMCD(::MagicalActual::FisherReel* MMMEIONJJFJ);
    // public MagicalActual.FisherReel LNEONIBMJMO()
    // Offset: 0x14FE938
    ::MagicalActual::FisherReel* LNEONIBMJMO();
    // public MagicalActual.PlayerTool ANGDHFLBBMF()
    // Offset: 0x14FE940
    ::MagicalActual::PlayerTool* ANGDHFLBBMF();
    // public System.Void DBLHNPALFEG(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x14FE948
    void DBLHNPALFEG(::MagicalActual::Grabber* FOIEAOKBGLM);
    // public System.Void NECPBDBFIAH()
    // Offset: 0x14FEA6C
    void NECPBDBFIAH();
    // public MagicalActual.FisherReel MAILLKIMLEA()
    // Offset: 0x14EC94C
    ::MagicalActual::FisherReel* MAILLKIMLEA();
    // public System.Void CDMELEDMKAD()
    // Offset: 0x14FEC1C
    void CDMELEDMKAD();
    // public MagicalActual.PlayerTool NDHJGDDHPLA()
    // Offset: 0x14FEDC0
    ::MagicalActual::PlayerTool* NDHJGDDHPLA();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x14FEDC8
    void AFIACGLCIPB();
    // public System.Void .ctor()
    // Offset: 0x14FEFA0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FishingRod* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::FishingRod::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FishingRod*, creationType>()));
    }
    // public MagicalActual.PlayerTool BCPGMPILHFF()
    // Offset: 0x14FEFB0
    ::MagicalActual::PlayerTool* BCPGMPILHFF();
    // public System.Void PhysicsInteractableGrip(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x14FEFB8
    void PhysicsInteractableGrip(::MagicalActual::Grabber* FOIEAOKBGLM);
    // public MagicalActual.PlayerTool GNAEMNFMLKA()
    // Offset: 0x14FF0DC
    ::MagicalActual::PlayerTool* GNAEMNFMLKA();
    // public System.Void HideFishingRod()
    // Offset: 0x14EF420
    void HideFishingRod();
    // private System.Void Awake()
    // Offset: 0x14FF0E4
    void Awake();
    // public System.Void DIFLEMCKKEJ(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x14FF15C
    void DIFLEMCKKEJ(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void LACFBAIDCBK()
    // Offset: 0x14FF27C
    void LACFBAIDCBK();
    // private System.Void HNKNNFLBPAC(MagicalActual.FisherReel MMMEIONJJFJ)
    // Offset: 0x14FF2EC
    void HNKNNFLBPAC(::MagicalActual::FisherReel* MMMEIONJJFJ);
    // public System.Void ALEFEKMPAJD()
    // Offset: 0x14FF2F4
    void ALEFEKMPAJD();
    // public MagicalActual.FisherReel get_myReel()
    // Offset: 0x14EDDE8
    ::MagicalActual::FisherReel* get_myReel();
    // public System.Void ANJKJGPMHDI()
    // Offset: 0x14FF498
    void ANJKJGPMHDI();
    // private System.Void GCAIKBCDAAN(MagicalActual.FisherReel MMMEIONJJFJ)
    // Offset: 0x14FF154
    void GCAIKBCDAAN(::MagicalActual::FisherReel* MMMEIONJJFJ);
    // private System.Void LMFIENPBFKA()
    // Offset: 0x14FF63C
    void LMFIENPBFKA();
    // private System.Void AKONOOIDPDA()
    // Offset: 0x14FF6AC
    void AKONOOIDPDA();
    // private System.Void Start()
    // Offset: 0x14FF71C
    void Start();
    // public System.Void OBNPGAMCJDD()
    // Offset: 0x14FF8DC
    void OBNPGAMCJDD();
    // public System.Void PhysicsInteractableUngrip(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x14FFA80
    void PhysicsInteractableUngrip(::MagicalActual::Grabber* FOIEAOKBGLM);
    // public System.Void NKCKOPGJCCM()
    // Offset: 0x14FFB98
    void NKCKOPGJCCM();
    // public MagicalActual.PlayerTool JMIKMOEDFNN()
    // Offset: 0x14FFD40
    ::MagicalActual::PlayerTool* JMIKMOEDFNN();
    // private System.Void CNBJHFMDCOE()
    // Offset: 0x14FFD48
    void CNBJHFMDCOE();
    // public System.Void ShowFishingRod()
    // Offset: 0x14EF27C
    void ShowFishingRod();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x14FFDB8
    void JENOIOBAEPG();
    // public MagicalActual.PlayerTool BHIPGHKKLFC()
    // Offset: 0x14FFF8C
    ::MagicalActual::PlayerTool* BHIPGHKKLFC();
    // private System.Void JNELNIGPBIM()
    // Offset: 0x14FFF94
    void JNELNIGPBIM();
    // public MagicalActual.FisherReel BADOLGAKPEC()
    // Offset: 0x1500004
    ::MagicalActual::FisherReel* BADOLGAKPEC();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x150000C
    void LPLGKBGLPOK();
    // public System.Void ABDLNOBADLF(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x15001E4
    void ABDLNOBADLF(::MagicalActual::Grabber* FOIEAOKBGLM);
    // public System.Void EMEFKDKEBNA(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1500308
    void EMEFKDKEBNA(::MagicalActual::Grabber* FOIEAOKBGLM);
    // public System.Void CHKCOPCNIDC(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1500420
    void CHKCOPCNIDC(::MagicalActual::Grabber* FOIEAOKBGLM);
    // public System.Void FCNMPDBDOCL()
    // Offset: 0x1500540
    void FCNMPDBDOCL();
    // public MagicalActual.PlayerTool getTool()
    // Offset: 0x14F30D4
    ::MagicalActual::PlayerTool* getTool();
    // public MagicalActual.PlayerTool ICADDJIEKDI()
    // Offset: 0x15006E4
    ::MagicalActual::PlayerTool* ICADDJIEKDI();
  }; // MagicalActual.FishingRod
  #pragma pack(pop)
  static check_size<sizeof(FishingRod), 80 + sizeof(::MagicalActual::DynamicPlayerMap*)> __MagicalActual_FishingRodSizeCheck;
  static_assert(sizeof(FishingRod) == 0x58);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::FishingRod::PHMBDONGMCD
// Il2CppName: PHMBDONGMCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)(::MagicalActual::FisherReel*)>(&MagicalActual::FishingRod::PHMBDONGMCD)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "FisherReel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "PHMBDONGMCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::LNEONIBMJMO
// Il2CppName: LNEONIBMJMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::FisherReel* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::LNEONIBMJMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "LNEONIBMJMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::ANGDHFLBBMF
// Il2CppName: ANGDHFLBBMF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerTool* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::ANGDHFLBBMF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "ANGDHFLBBMF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::DBLHNPALFEG
// Il2CppName: DBLHNPALFEG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)(::MagicalActual::Grabber*)>(&MagicalActual::FishingRod::DBLHNPALFEG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "DBLHNPALFEG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::NECPBDBFIAH
// Il2CppName: NECPBDBFIAH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::NECPBDBFIAH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "NECPBDBFIAH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::MAILLKIMLEA
// Il2CppName: MAILLKIMLEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::FisherReel* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::MAILLKIMLEA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "MAILLKIMLEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::CDMELEDMKAD
// Il2CppName: CDMELEDMKAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::CDMELEDMKAD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "CDMELEDMKAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::NDHJGDDHPLA
// Il2CppName: NDHJGDDHPLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerTool* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::NDHJGDDHPLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "NDHJGDDHPLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::FishingRod::BCPGMPILHFF
// Il2CppName: BCPGMPILHFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerTool* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::BCPGMPILHFF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "BCPGMPILHFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::PhysicsInteractableGrip
// Il2CppName: PhysicsInteractableGrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)(::MagicalActual::Grabber*)>(&MagicalActual::FishingRod::PhysicsInteractableGrip)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "PhysicsInteractableGrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::GNAEMNFMLKA
// Il2CppName: GNAEMNFMLKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerTool* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::GNAEMNFMLKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "GNAEMNFMLKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::HideFishingRod
// Il2CppName: HideFishingRod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::HideFishingRod)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "HideFishingRod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::DIFLEMCKKEJ
// Il2CppName: DIFLEMCKKEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)(::MagicalActual::Grabber*)>(&MagicalActual::FishingRod::DIFLEMCKKEJ)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "DIFLEMCKKEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::LACFBAIDCBK
// Il2CppName: LACFBAIDCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::LACFBAIDCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "LACFBAIDCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::HNKNNFLBPAC
// Il2CppName: HNKNNFLBPAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)(::MagicalActual::FisherReel*)>(&MagicalActual::FishingRod::HNKNNFLBPAC)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "FisherReel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "HNKNNFLBPAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::ALEFEKMPAJD
// Il2CppName: ALEFEKMPAJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::ALEFEKMPAJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "ALEFEKMPAJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::get_myReel
// Il2CppName: get_myReel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::FisherReel* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::get_myReel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "get_myReel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::ANJKJGPMHDI
// Il2CppName: ANJKJGPMHDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::ANJKJGPMHDI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "ANJKJGPMHDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::GCAIKBCDAAN
// Il2CppName: GCAIKBCDAAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)(::MagicalActual::FisherReel*)>(&MagicalActual::FishingRod::GCAIKBCDAAN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "FisherReel")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "GCAIKBCDAAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::LMFIENPBFKA
// Il2CppName: LMFIENPBFKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::LMFIENPBFKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "LMFIENPBFKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::AKONOOIDPDA
// Il2CppName: AKONOOIDPDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::AKONOOIDPDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "AKONOOIDPDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::OBNPGAMCJDD
// Il2CppName: OBNPGAMCJDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::OBNPGAMCJDD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "OBNPGAMCJDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::PhysicsInteractableUngrip
// Il2CppName: PhysicsInteractableUngrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)(::MagicalActual::Grabber*)>(&MagicalActual::FishingRod::PhysicsInteractableUngrip)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "PhysicsInteractableUngrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::NKCKOPGJCCM
// Il2CppName: NKCKOPGJCCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::NKCKOPGJCCM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "NKCKOPGJCCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::JMIKMOEDFNN
// Il2CppName: JMIKMOEDFNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerTool* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::JMIKMOEDFNN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "JMIKMOEDFNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::CNBJHFMDCOE
// Il2CppName: CNBJHFMDCOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::CNBJHFMDCOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "CNBJHFMDCOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::ShowFishingRod
// Il2CppName: ShowFishingRod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::ShowFishingRod)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "ShowFishingRod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::BHIPGHKKLFC
// Il2CppName: BHIPGHKKLFC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerTool* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::BHIPGHKKLFC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "BHIPGHKKLFC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::JNELNIGPBIM
// Il2CppName: JNELNIGPBIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::JNELNIGPBIM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "JNELNIGPBIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::BADOLGAKPEC
// Il2CppName: BADOLGAKPEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::FisherReel* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::BADOLGAKPEC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "BADOLGAKPEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::ABDLNOBADLF
// Il2CppName: ABDLNOBADLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)(::MagicalActual::Grabber*)>(&MagicalActual::FishingRod::ABDLNOBADLF)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "ABDLNOBADLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::EMEFKDKEBNA
// Il2CppName: EMEFKDKEBNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)(::MagicalActual::Grabber*)>(&MagicalActual::FishingRod::EMEFKDKEBNA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "EMEFKDKEBNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::CHKCOPCNIDC
// Il2CppName: CHKCOPCNIDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)(::MagicalActual::Grabber*)>(&MagicalActual::FishingRod::CHKCOPCNIDC)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "CHKCOPCNIDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::FCNMPDBDOCL
// Il2CppName: FCNMPDBDOCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::FCNMPDBDOCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "FCNMPDBDOCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::getTool
// Il2CppName: getTool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerTool* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::getTool)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "getTool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingRod::ICADDJIEKDI
// Il2CppName: ICADDJIEKDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerTool* (MagicalActual::FishingRod::*)()>(&MagicalActual::FishingRod::ICADDJIEKDI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingRod*), "ICADDJIEKDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
