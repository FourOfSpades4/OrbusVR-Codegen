// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: IPlayerClass
#include "GlobalNamespace/IPlayerClass.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObFlt
#include "CodeStage/AntiCheat/ObscuredTypes/ObFlt.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: PlayerCharacter
  class PlayerCharacter;
  // Forward declaring type: PlayerClass
  class PlayerClass;
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
  // Forward declaring type: ObjectHighlighter
  class ObjectHighlighter;
  // Forward declaring type: ArcherCriticalSpot
  class ArcherCriticalSpot;
  // Skipping declaration: arrowAbilities because it is already included!
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ClickedEventHandler
  class ClickedEventHandler;
  // Forward declaring type: OrbusTrackedController
  class OrbusTrackedController;
  // Forward declaring type: SuperTextMesh
  class SuperTextMesh;
  // Forward declaring type: ClickedEventArgs
  struct ClickedEventArgs;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: BoxCollider
  class BoxCollider;
  // Forward declaring type: Collider
  class Collider;
}
// Forward declaring namespace: Vectrosity
namespace Vectrosity {
  // Forward declaring type: VectorLine
  class VectorLine;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: BinaryWriter
  class BinaryWriter;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Archer
  class Archer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Archer);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Archer*, "MagicalActual", "Archer");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x3D0
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Archer
  // [TokenAttribute] Offset: FFFFFFFF
  class Archer : public ::UnityEngine::MonoBehaviour/*, public ::GlobalNamespace::IPlayerClass*/ {
    public:
    // Nested type: ::MagicalActual::Archer::useAxis
    struct useAxis;
    // Nested type: ::MagicalActual::Archer::orbusNetMethodIdx
    struct orbusNetMethodIdx;
    // Nested type: ::MagicalActual::Archer::orbusIncomingMethodIdx
    struct orbusIncomingMethodIdx;
    // Nested type: ::MagicalActual::Archer::arrowAbilities
    struct arrowAbilities;
    // Nested type: ::MagicalActual::Archer::$$c__DisplayClass159_0
    class $$c__DisplayClass159_0;
    // Nested type: ::MagicalActual::Archer::$$c__DisplayClass161_0
    class $$c__DisplayClass161_0;
    // Nested type: ::MagicalActual::Archer::$$c__DisplayClass163_0
    class $$c__DisplayClass163_0;
    // Nested type: ::MagicalActual::Archer::$$c
    class $$c;
    // Nested type: ::MagicalActual::Archer::$$c__DisplayClass168_0
    class $$c__DisplayClass168_0;
    // Nested type: ::MagicalActual::Archer::$$c__DisplayClass181_0
    class $$c__DisplayClass181_0;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: MagicalActual.Archer/useAxis
    // [TokenAttribute] Offset: FFFFFFFF
    struct useAxis/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: useAxis
      constexpr useAxis(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MagicalActual.Archer/useAxis EHPNBDGDGLH
      static constexpr const int EHPNBDGDGLH = 1;
      // Get static field: static public MagicalActual.Archer/useAxis EHPNBDGDGLH
      static ::MagicalActual::Archer::useAxis _get_EHPNBDGDGLH();
      // Set static field: static public MagicalActual.Archer/useAxis EHPNBDGDGLH
      static void _set_EHPNBDGDGLH(::MagicalActual::Archer::useAxis value);
      // static field const value: static public MagicalActual.Archer/useAxis HAPAOAMLEJG
      static constexpr const int HAPAOAMLEJG = 2;
      // Get static field: static public MagicalActual.Archer/useAxis HAPAOAMLEJG
      static ::MagicalActual::Archer::useAxis _get_HAPAOAMLEJG();
      // Set static field: static public MagicalActual.Archer/useAxis HAPAOAMLEJG
      static void _set_HAPAOAMLEJG(::MagicalActual::Archer::useAxis value);
      // static field const value: static public MagicalActual.Archer/useAxis FIJOGKJIGNJ
      static constexpr const int FIJOGKJIGNJ = 3;
      // Get static field: static public MagicalActual.Archer/useAxis FIJOGKJIGNJ
      static ::MagicalActual::Archer::useAxis _get_FIJOGKJIGNJ();
      // Set static field: static public MagicalActual.Archer/useAxis FIJOGKJIGNJ
      static void _set_FIJOGKJIGNJ(::MagicalActual::Archer::useAxis value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // MagicalActual.Archer/useAxis
    #pragma pack(pop)
    static check_size<sizeof(Archer::useAxis), 0 + sizeof(int)> __MagicalActual_Archer_useAxisSizeCheck;
    static_assert(sizeof(Archer::useAxis) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: MagicalActual.Archer/arrowAbilities
    // [TokenAttribute] Offset: FFFFFFFF
    struct arrowAbilities/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: arrowAbilities
      constexpr arrowAbilities(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MagicalActual.Archer/arrowAbilities NDEIOLIGOEC
      static constexpr const int NDEIOLIGOEC = 0;
      // Get static field: static public MagicalActual.Archer/arrowAbilities NDEIOLIGOEC
      static ::MagicalActual::Archer::arrowAbilities _get_NDEIOLIGOEC();
      // Set static field: static public MagicalActual.Archer/arrowAbilities NDEIOLIGOEC
      static void _set_NDEIOLIGOEC(::MagicalActual::Archer::arrowAbilities value);
      // static field const value: static public MagicalActual.Archer/arrowAbilities IHOCJOINOMJ
      static constexpr const int IHOCJOINOMJ = 1;
      // Get static field: static public MagicalActual.Archer/arrowAbilities IHOCJOINOMJ
      static ::MagicalActual::Archer::arrowAbilities _get_IHOCJOINOMJ();
      // Set static field: static public MagicalActual.Archer/arrowAbilities IHOCJOINOMJ
      static void _set_IHOCJOINOMJ(::MagicalActual::Archer::arrowAbilities value);
      // static field const value: static public MagicalActual.Archer/arrowAbilities MLDFAPAJIHP
      static constexpr const int MLDFAPAJIHP = 2;
      // Get static field: static public MagicalActual.Archer/arrowAbilities MLDFAPAJIHP
      static ::MagicalActual::Archer::arrowAbilities _get_MLDFAPAJIHP();
      // Set static field: static public MagicalActual.Archer/arrowAbilities MLDFAPAJIHP
      static void _set_MLDFAPAJIHP(::MagicalActual::Archer::arrowAbilities value);
      // static field const value: static public MagicalActual.Archer/arrowAbilities AFCIMMJEABN
      static constexpr const int AFCIMMJEABN = 3;
      // Get static field: static public MagicalActual.Archer/arrowAbilities AFCIMMJEABN
      static ::MagicalActual::Archer::arrowAbilities _get_AFCIMMJEABN();
      // Set static field: static public MagicalActual.Archer/arrowAbilities AFCIMMJEABN
      static void _set_AFCIMMJEABN(::MagicalActual::Archer::arrowAbilities value);
      // static field const value: static public MagicalActual.Archer/arrowAbilities OKAIFABKNNM
      static constexpr const int OKAIFABKNNM = 4;
      // Get static field: static public MagicalActual.Archer/arrowAbilities OKAIFABKNNM
      static ::MagicalActual::Archer::arrowAbilities _get_OKAIFABKNNM();
      // Set static field: static public MagicalActual.Archer/arrowAbilities OKAIFABKNNM
      static void _set_OKAIFABKNNM(::MagicalActual::Archer::arrowAbilities value);
      // static field const value: static public MagicalActual.Archer/arrowAbilities LIEGBFEPFFF
      static constexpr const int LIEGBFEPFFF = 5;
      // Get static field: static public MagicalActual.Archer/arrowAbilities LIEGBFEPFFF
      static ::MagicalActual::Archer::arrowAbilities _get_LIEGBFEPFFF();
      // Set static field: static public MagicalActual.Archer/arrowAbilities LIEGBFEPFFF
      static void _set_LIEGBFEPFFF(::MagicalActual::Archer::arrowAbilities value);
      // static field const value: static public MagicalActual.Archer/arrowAbilities NHANOGNDJPF
      static constexpr const int NHANOGNDJPF = 6;
      // Get static field: static public MagicalActual.Archer/arrowAbilities NHANOGNDJPF
      static ::MagicalActual::Archer::arrowAbilities _get_NHANOGNDJPF();
      // Set static field: static public MagicalActual.Archer/arrowAbilities NHANOGNDJPF
      static void _set_NHANOGNDJPF(::MagicalActual::Archer::arrowAbilities value);
      // static field const value: static public MagicalActual.Archer/arrowAbilities IKBKJFDFPLI
      static constexpr const int IKBKJFDFPLI = 7;
      // Get static field: static public MagicalActual.Archer/arrowAbilities IKBKJFDFPLI
      static ::MagicalActual::Archer::arrowAbilities _get_IKBKJFDFPLI();
      // Set static field: static public MagicalActual.Archer/arrowAbilities IKBKJFDFPLI
      static void _set_IKBKJFDFPLI(::MagicalActual::Archer::arrowAbilities value);
      // static field const value: static public MagicalActual.Archer/arrowAbilities BMCKFIMMIPA
      static constexpr const int BMCKFIMMIPA = 8;
      // Get static field: static public MagicalActual.Archer/arrowAbilities BMCKFIMMIPA
      static ::MagicalActual::Archer::arrowAbilities _get_BMCKFIMMIPA();
      // Set static field: static public MagicalActual.Archer/arrowAbilities BMCKFIMMIPA
      static void _set_BMCKFIMMIPA(::MagicalActual::Archer::arrowAbilities value);
      // static field const value: static public MagicalActual.Archer/arrowAbilities OIBFJLLJDKJ
      static constexpr const int OIBFJLLJDKJ = 9;
      // Get static field: static public MagicalActual.Archer/arrowAbilities OIBFJLLJDKJ
      static ::MagicalActual::Archer::arrowAbilities _get_OIBFJLLJDKJ();
      // Set static field: static public MagicalActual.Archer/arrowAbilities OIBFJLLJDKJ
      static void _set_OIBFJLLJDKJ(::MagicalActual::Archer::arrowAbilities value);
      // static field const value: static public MagicalActual.Archer/arrowAbilities NBJGAAHAJAE
      static constexpr const int NBJGAAHAJAE = 10;
      // Get static field: static public MagicalActual.Archer/arrowAbilities NBJGAAHAJAE
      static ::MagicalActual::Archer::arrowAbilities _get_NBJGAAHAJAE();
      // Set static field: static public MagicalActual.Archer/arrowAbilities NBJGAAHAJAE
      static void _set_NBJGAAHAJAE(::MagicalActual::Archer::arrowAbilities value);
      // static field const value: static public MagicalActual.Archer/arrowAbilities ECHHLACDICH
      static constexpr const int ECHHLACDICH = 99;
      // Get static field: static public MagicalActual.Archer/arrowAbilities ECHHLACDICH
      static ::MagicalActual::Archer::arrowAbilities _get_ECHHLACDICH();
      // Set static field: static public MagicalActual.Archer/arrowAbilities ECHHLACDICH
      static void _set_ECHHLACDICH(::MagicalActual::Archer::arrowAbilities value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // MagicalActual.Archer/arrowAbilities
    #pragma pack(pop)
    static check_size<sizeof(Archer::arrowAbilities), 0 + sizeof(int)> __MagicalActual_Archer_arrowAbilitiesSizeCheck;
    static_assert(sizeof(Archer::arrowAbilities) == 0x4);
    public:
    // private System.Boolean HNFCLAFDJBD
    // Size: 0x1
    // Offset: 0x18
    bool HNFCLAFDJBD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean CBOHFPEBBLA
    // Size: 0x1
    // Offset: 0x19
    bool CBOHFPEBBLA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: CBOHFPEBBLA and: HCFELEODBLD
    char __padding1[0x6] = {};
    // private MagicalActual.PlayerCharacter HCFELEODBLD
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::PlayerCharacter* HCFELEODBLD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerCharacter*) == 0x8);
    // private MagicalActual.PlayerClass FNINBDEICCD
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::PlayerClass* FNINBDEICCD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerClass*) == 0x8);
    // private MagicalActual.PlayerAvatar EENJNFDNJBD
    // Size: 0x8
    // Offset: 0x30
    ::MagicalActual::PlayerAvatar* EENJNFDNJBD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // public UnityEngine.GameObject controllerArrow
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* controllerArrow;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject DDNGGFCDOPM
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* DDNGGFCDOPM;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject AGODOPIILHA
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* AGODOPIILHA;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject bow
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GameObject* bow;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject ALOAALEHOBB
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* ALOAALEHOBB;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject POPBFNPBDOI
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::GameObject* POPBFNPBDOI;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject handlePoint
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::GameObject* handlePoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject flyingArrowPrefab
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::GameObject* flyingArrowPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject flyingArrowLongTailPrefab
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::GameObject* flyingArrowLongTailPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxBlood
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::GameObject* vfxBlood;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxCritHit
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::GameObject* vfxCritHit;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxRain
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::GameObject* vfxRain;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxTrapExplosion
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::GameObject* vfxTrapExplosion;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject[] vfxArrowTipVfx
    // Size: 0x8
    // Offset: 0xA0
    ::ArrayW<::UnityEngine::GameObject*> vfxArrowTipVfx;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // private UnityEngine.Transform DFGKDJFNDHC
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::Transform* DFGKDJFNDHC;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private System.Single BKIIHPLHGHI
    // Size: 0x4
    // Offset: 0xB0
    float BKIIHPLHGHI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 CNBGPJGNDHG
    // Size: 0xC
    // Offset: 0xB4
    ::UnityEngine::Vector3 CNBGPJGNDHG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 LBKEFFOMMDK
    // Size: 0xC
    // Offset: 0xC0
    ::UnityEngine::Vector3 LBKEFFOMMDK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single KCPPHLJOPGN
    // Size: 0x4
    // Offset: 0xCC
    float KCPPHLJOPGN;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single KGNMCBDDHBO
    // Size: 0x4
    // Offset: 0xD0
    float KGNMCBDDHBO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single JDJIEFKEIFJ
    // Size: 0x4
    // Offset: 0xD4
    float JDJIEFKEIFJ;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private Vectrosity.VectorLine KNNLNNHNMNE
    // Size: 0x8
    // Offset: 0xD8
    ::Vectrosity::VectorLine* KNNLNNHNMNE;
    // Field size check
    static_assert(sizeof(::Vectrosity::VectorLine*) == 0x8);
    // private System.Single FKKACPMOGKP
    // Size: 0x4
    // Offset: 0xE0
    float FKKACPMOGKP;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single DEKAKKMLCFG
    // Size: 0x4
    // Offset: 0xE4
    float DEKAKKMLCFG;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean DMCGIAPABOA
    // Size: 0x1
    // Offset: 0xE8
    bool DMCGIAPABOA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean NNDIPBGCGFH
    // Size: 0x1
    // Offset: 0xE9
    bool NNDIPBGCGFH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: NNDIPBGCGFH and: abil1_icon
    char __padding30[0x6] = {};
    // public UnityEngine.UI.Image abil1_icon
    // Size: 0x8
    // Offset: 0xF0
    ::UnityEngine::UI::Image* abil1_icon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private System.Single CJBIGLODBOF
    // Size: 0x4
    // Offset: 0xF8
    float CJBIGLODBOF;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single FKCFHOHJILE
    // Size: 0x4
    // Offset: 0xFC
    float FKCFHOHJILE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean GBHKONENNFO
    // Size: 0x1
    // Offset: 0x100
    bool GBHKONENNFO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GEOLNFIKBFI
    // Size: 0x1
    // Offset: 0x101
    bool GEOLNFIKBFI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: GEOLNFIKBFI and: abil2_icon
    char __padding35[0x6] = {};
    // public UnityEngine.UI.Image abil2_icon
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::UI::Image* abil2_icon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private System.Single IKPGOLILJAE
    // Size: 0x4
    // Offset: 0x110
    float IKPGOLILJAE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single EJAHAGPCLEH
    // Size: 0x4
    // Offset: 0x114
    float EJAHAGPCLEH;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean NCBPNNPCBGJ
    // Size: 0x1
    // Offset: 0x118
    bool NCBPNNPCBGJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GKIIALHBFME
    // Size: 0x1
    // Offset: 0x119
    bool GKIIALHBFME;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: GKIIALHBFME and: abil3_icon
    char __padding40[0x6] = {};
    // public UnityEngine.UI.Image abil3_icon
    // Size: 0x8
    // Offset: 0x120
    ::UnityEngine::UI::Image* abil3_icon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private System.Single MKDJFEPDHIB
    // Size: 0x4
    // Offset: 0x128
    float MKDJFEPDHIB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single AOJHNCKJJKH
    // Size: 0x4
    // Offset: 0x12C
    float AOJHNCKJJKH;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean KBKLKHGBNFD
    // Size: 0x1
    // Offset: 0x130
    bool KBKLKHGBNFD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: KBKLKHGBNFD and: abil4_icon
    char __padding44[0x7] = {};
    // public UnityEngine.UI.Image abil4_icon
    // Size: 0x8
    // Offset: 0x138
    ::UnityEngine::UI::Image* abil4_icon;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private System.Single MMBGGFGAOMA
    // Size: 0x4
    // Offset: 0x140
    float MMBGGFGAOMA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single JCPLOKNLJDE
    // Size: 0x4
    // Offset: 0x144
    float JCPLOKNLJDE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean LOOFPNFLHAF
    // Size: 0x1
    // Offset: 0x148
    bool LOOFPNFLHAF;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean DHKDOGJAOIG
    // Size: 0x1
    // Offset: 0x149
    bool DHKDOGJAOIG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean MBFHKOJKKLI
    // Size: 0x1
    // Offset: 0x14A
    bool MBFHKOJKKLI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean DIJNPBDLJHF
    // Size: 0x1
    // Offset: 0x14B
    bool DIJNPBDLJHF;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: DIJNPBDLJHF and: BCOFKLAEOMF
    char __padding51[0x4] = {};
    // private UnityEngine.GameObject BCOFKLAEOMF
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::GameObject* BCOFKLAEOMF;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Vector3 PKPAONONFFC
    // Size: 0xC
    // Offset: 0x158
    ::UnityEngine::Vector3 PKPAONONFFC;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: PKPAONONFFC and: beltTrap
    char __padding53[0x4] = {};
    // public UnityEngine.GameObject beltTrap
    // Size: 0x8
    // Offset: 0x168
    ::UnityEngine::GameObject* beltTrap;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.BoxCollider CHHNCGNNLPA
    // Size: 0x8
    // Offset: 0x170
    ::UnityEngine::BoxCollider* CHHNCGNNLPA;
    // Field size check
    static_assert(sizeof(::UnityEngine::BoxCollider*) == 0x8);
    // private System.Single FMJAJFCHDGK
    // Size: 0x4
    // Offset: 0x178
    float FMJAJFCHDGK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: FMJAJFCHDGK and: IHDIMJGLDIJ
    char __padding56[0x4] = {};
    // private UnityEngine.GameObject IHDIMJGLDIJ
    // Size: 0x8
    // Offset: 0x180
    ::UnityEngine::GameObject* IHDIMJGLDIJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.BoxCollider KEAJKAGBNDE
    // Size: 0x8
    // Offset: 0x188
    ::UnityEngine::BoxCollider* KEAJKAGBNDE;
    // Field size check
    static_assert(sizeof(::UnityEngine::BoxCollider*) == 0x8);
    // private UnityEngine.GameObject JECFNMKBJPK
    // Size: 0x8
    // Offset: 0x190
    ::UnityEngine::GameObject* JECFNMKBJPK;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.ObjectHighlighter MOBFGEGIHCG
    // Size: 0x8
    // Offset: 0x198
    ::MagicalActual::ObjectHighlighter* MOBFGEGIHCG;
    // Field size check
    static_assert(sizeof(::MagicalActual::ObjectHighlighter*) == 0x8);
    // private UnityEngine.GameObject CKIFGLEFIBD
    // Size: 0x8
    // Offset: 0x1A0
    ::UnityEngine::GameObject* CKIFGLEFIBD;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject BDDDDLHEGFG
    // Size: 0x8
    // Offset: 0x1A8
    ::UnityEngine::GameObject* BDDDDLHEGFG;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.BoxCollider NHIDNFFMEBD
    // Size: 0x8
    // Offset: 0x1B0
    ::UnityEngine::BoxCollider* NHIDNFFMEBD;
    // Field size check
    static_assert(sizeof(::UnityEngine::BoxCollider*) == 0x8);
    // private UnityEngine.GameObject CGLDGMBJMME
    // Size: 0x8
    // Offset: 0x1B8
    ::UnityEngine::GameObject* CGLDGMBJMME;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.ObjectHighlighter ECPICIOFHBM
    // Size: 0x8
    // Offset: 0x1C0
    ::MagicalActual::ObjectHighlighter* ECPICIOFHBM;
    // Field size check
    static_assert(sizeof(::MagicalActual::ObjectHighlighter*) == 0x8);
    // private UnityEngine.GameObject BFJGFPNIGIJ
    // Size: 0x8
    // Offset: 0x1C8
    ::UnityEngine::GameObject* BFJGFPNIGIJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject ACIFNEANCBL
    // Size: 0x8
    // Offset: 0x1D0
    ::UnityEngine::GameObject* ACIFNEANCBL;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject JFMDKCFOKCD
    // Size: 0x8
    // Offset: 0x1D8
    ::UnityEngine::GameObject* JFMDKCFOKCD;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject ICKGFJMICME
    // Size: 0x8
    // Offset: 0x1E0
    ::UnityEngine::GameObject* ICKGFJMICME;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt JLOOMEIDNFH
    // Size: 0x19
    // Offset: 0x1E8
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt JLOOMEIDNFH;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: JLOOMEIDNFH and: NAGDLHIDCAH
    char __padding70[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt NAGDLHIDCAH
    // Size: 0x19
    // Offset: 0x208
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt NAGDLHIDCAH;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: NAGDLHIDCAH and: IOGHDECGGKF
    char __padding71[0x7] = {};
    // private System.Single IOGHDECGGKF
    // Size: 0x4
    // Offset: 0x228
    float IOGHDECGGKF;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single NCCNAPLJMBM
    // Size: 0x4
    // Offset: 0x22C
    float NCCNAPLJMBM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 MCFENCIJGNG
    // Size: 0xC
    // Offset: 0x230
    ::UnityEngine::Vector3 MCFENCIJGNG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Color JMJKIJDCPDF
    // Size: 0x10
    // Offset: 0x23C
    ::UnityEngine::Color JMJKIJDCPDF;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color OFJLNPFPAAD
    // Size: 0x10
    // Offset: 0x24C
    ::UnityEngine::Color OFJLNPFPAAD;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Boolean GCCMBLOGLBA
    // Size: 0x1
    // Offset: 0x25C
    bool GCCMBLOGLBA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GHBBMIFHKGO
    // Size: 0x1
    // Offset: 0x25D
    bool GHBBMIFHKGO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean HIKIBDCNDAA
    // Size: 0x1
    // Offset: 0x25E
    bool HIKIBDCNDAA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean IMNDEEOEOKA
    // Size: 0x1
    // Offset: 0x25F
    bool IMNDEEOEOKA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Int32 AAIGNGFONBI
    // Size: 0x4
    // Offset: 0x260
    int AAIGNGFONBI;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.Vector3 GGEFNAGCKIM
    // Size: 0xC
    // Offset: 0x264
    ::UnityEngine::Vector3 GGEFNAGCKIM;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion PGEPDKMCMAG
    // Size: 0x10
    // Offset: 0x270
    ::UnityEngine::Quaternion PGEPDKMCMAG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private UnityEngine.GameObject FHLMGEOALGC
    // Size: 0x8
    // Offset: 0x280
    ::UnityEngine::GameObject* FHLMGEOALGC;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x288
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean IHHGAHCIFPM
    // Size: 0x1
    // Offset: 0x290
    bool IHHGAHCIFPM;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IHHGAHCIFPM and: CCEMBLKGKLN
    char __padding86[0x7] = {};
    // private UnityEngine.GameObject CCEMBLKGKLN
    // Size: 0x8
    // Offset: 0x298
    ::UnityEngine::GameObject* CCEMBLKGKLN;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject GKJEHAKEABK
    // Size: 0x8
    // Offset: 0x2A0
    ::UnityEngine::GameObject* GKJEHAKEABK;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Int32 GHDHNDFOEJD
    // Size: 0x4
    // Offset: 0x2A8
    int GHDHNDFOEJD;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 LOOMJHGPNOO
    // Size: 0x4
    // Offset: 0x2AC
    int LOOMJHGPNOO;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private OrbusTrackedController IKCANGJCBED
    // Size: 0x8
    // Offset: 0x2B0
    ::GlobalNamespace::OrbusTrackedController* IKCANGJCBED;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OrbusTrackedController*) == 0x8);
    // private OrbusTrackedController HKFGNKJKLPH
    // Size: 0x8
    // Offset: 0x2B8
    ::GlobalNamespace::OrbusTrackedController* HKFGNKJKLPH;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OrbusTrackedController*) == 0x8);
    // public UnityEngine.GameObject[] globesOn
    // Size: 0x8
    // Offset: 0x2C0
    ::ArrayW<::UnityEngine::GameObject*> globesOn;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject[] globesOff
    // Size: 0x8
    // Offset: 0x2C8
    ::ArrayW<::UnityEngine::GameObject*> globesOff;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public SuperTextMesh shotRatingIndicator
    // Size: 0x8
    // Offset: 0x2D0
    ::GlobalNamespace::SuperTextMesh* shotRatingIndicator;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SuperTextMesh*) == 0x8);
    // private System.Single JODNJDBJDNO
    // Size: 0x4
    // Offset: 0x2D8
    float JODNJDBJDNO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single JEOMDONEDFM
    // Size: 0x4
    // Offset: 0x2DC
    float JEOMDONEDFM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 JIBNAJKFJIA
    // Size: 0xC
    // Offset: 0x2E0
    ::UnityEngine::Vector3 JIBNAJKFJIA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: JIBNAJKFJIA and: ABKOIGAJPKE
    char __padding98[0x4] = {};
    // private UnityEngine.GameObject ABKOIGAJPKE
    // Size: 0x8
    // Offset: 0x2F0
    ::UnityEngine::GameObject* ABKOIGAJPKE;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Vector3 MLPCJDMEOLM
    // Size: 0xC
    // Offset: 0x2F8
    ::UnityEngine::Vector3 MLPCJDMEOLM;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: MLPCJDMEOLM and: bowHud
    char __padding100[0x4] = {};
    // public UnityEngine.GameObject bowHud
    // Size: 0x8
    // Offset: 0x308
    ::UnityEngine::GameObject* bowHud;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject HDMKCGKJCLA
    // Size: 0x8
    // Offset: 0x310
    ::UnityEngine::GameObject* HDMKCGKJCLA;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject critPrefab
    // Size: 0x8
    // Offset: 0x318
    ::UnityEngine::GameObject* critPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.Collections.Generic.List`1<MagicalActual.ArcherCriticalSpot> critSpots
    // Size: 0x8
    // Offset: 0x320
    ::System::Collections::Generic::List_1<::MagicalActual::ArcherCriticalSpot*>* critSpots;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::MagicalActual::ArcherCriticalSpot*>*) == 0x8);
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt DKKJDEGCOLN
    // Size: 0x19
    // Offset: 0x328
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt DKKJDEGCOLN;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: DKKJDEGCOLN and: MGEMIPNLONH
    char __padding105[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt MGEMIPNLONH
    // Size: 0x19
    // Offset: 0x348
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt MGEMIPNLONH;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: MGEMIPNLONH and: EEJPPOFELBG
    char __padding106[0x7] = {};
    // private System.Boolean EEJPPOFELBG
    // Size: 0x1
    // Offset: 0x368
    bool EEJPPOFELBG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: EEJPPOFELBG and: COLMMMMCHPF
    char __padding107[0x3] = {};
    // private System.Int32 COLMMMMCHPF
    // Size: 0x4
    // Offset: 0x36C
    int COLMMMMCHPF;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private MagicalActual.Archer/useAxis MOHANHGCAPP
    // Size: 0x4
    // Offset: 0x370
    ::MagicalActual::Archer::useAxis MOHANHGCAPP;
    // Field size check
    static_assert(sizeof(::MagicalActual::Archer::useAxis) == 0x4);
    // public MagicalActual.Archer/arrowAbilities arrowNotchedWithAbility
    // Size: 0x4
    // Offset: 0x374
    ::MagicalActual::Archer::arrowAbilities arrowNotchedWithAbility;
    // Field size check
    static_assert(sizeof(::MagicalActual::Archer::arrowAbilities) == 0x4);
    // private System.Int32 PEHHBDBEAEM
    // Size: 0x4
    // Offset: 0x378
    int PEHHBDBEAEM;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 NFOHLCAANJB
    // Size: 0x4
    // Offset: 0x37C
    int NFOHLCAANJB;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Byte HCIPCMLDHDD
    // Size: 0x1
    // Offset: 0x380
    uint8_t HCIPCMLDHDD;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Boolean DEAAGGEFHEE
    // Size: 0x1
    // Offset: 0x381
    bool DEAAGGEFHEE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean DKNPCJOMGBJ
    // Size: 0x1
    // Offset: 0x382
    bool DKNPCJOMGBJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Byte JNMJJKDAECC
    // Size: 0x1
    // Offset: 0x383
    uint8_t JNMJJKDAECC;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Boolean LGJCIINDCAL
    // Size: 0x1
    // Offset: 0x384
    bool LGJCIINDCAL;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: LGJCIINDCAL and: HCJEOHLOMGB
    char __padding117[0x3] = {};
    // private ClickedEventHandler HCJEOHLOMGB
    // Size: 0x8
    // Offset: 0x388
    ::GlobalNamespace::ClickedEventHandler* HCJEOHLOMGB;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler KEBNGJKMOCC
    // Size: 0x8
    // Offset: 0x390
    ::GlobalNamespace::ClickedEventHandler* KEBNGJKMOCC;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler HBOOKAFBIEP
    // Size: 0x8
    // Offset: 0x398
    ::GlobalNamespace::ClickedEventHandler* HBOOKAFBIEP;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler POBEHEJEEFA
    // Size: 0x8
    // Offset: 0x3A0
    ::GlobalNamespace::ClickedEventHandler* POBEHEJEEFA;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler BHLDGAKLBLB
    // Size: 0x8
    // Offset: 0x3A8
    ::GlobalNamespace::ClickedEventHandler* BHLDGAKLBLB;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler FHBKAFFKFOD
    // Size: 0x8
    // Offset: 0x3B0
    ::GlobalNamespace::ClickedEventHandler* FHBKAFFKFOD;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler MDEBIKPCABE
    // Size: 0x8
    // Offset: 0x3B8
    ::GlobalNamespace::ClickedEventHandler* MDEBIKPCABE;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler BMHNEDFCFFE
    // Size: 0x8
    // Offset: 0x3C0
    ::GlobalNamespace::ClickedEventHandler* BMHNEDFCFFE;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x3C8
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IPlayerClass
    operator ::GlobalNamespace::IPlayerClass() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IPlayerClass*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Boolean HNFCLAFDJBD
    [[deprecated("Use field access instead!")]] bool& dyn_HNFCLAFDJBD();
    // Get instance field reference: private System.Boolean CBOHFPEBBLA
    [[deprecated("Use field access instead!")]] bool& dyn_CBOHFPEBBLA();
    // Get instance field reference: private MagicalActual.PlayerCharacter HCFELEODBLD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerCharacter*& dyn_HCFELEODBLD();
    // Get instance field reference: private MagicalActual.PlayerClass FNINBDEICCD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerClass*& dyn_FNINBDEICCD();
    // Get instance field reference: private MagicalActual.PlayerAvatar EENJNFDNJBD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_EENJNFDNJBD();
    // Get instance field reference: public UnityEngine.GameObject controllerArrow
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_controllerArrow();
    // Get instance field reference: private UnityEngine.GameObject DDNGGFCDOPM
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_DDNGGFCDOPM();
    // Get instance field reference: private UnityEngine.GameObject AGODOPIILHA
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_AGODOPIILHA();
    // Get instance field reference: public UnityEngine.GameObject bow
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_bow();
    // Get instance field reference: private UnityEngine.GameObject ALOAALEHOBB
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ALOAALEHOBB();
    // Get instance field reference: private UnityEngine.GameObject POPBFNPBDOI
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_POPBFNPBDOI();
    // Get instance field reference: public UnityEngine.GameObject handlePoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_handlePoint();
    // Get instance field reference: public UnityEngine.GameObject flyingArrowPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_flyingArrowPrefab();
    // Get instance field reference: public UnityEngine.GameObject flyingArrowLongTailPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_flyingArrowLongTailPrefab();
    // Get instance field reference: public UnityEngine.GameObject vfxBlood
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxBlood();
    // Get instance field reference: public UnityEngine.GameObject vfxCritHit
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxCritHit();
    // Get instance field reference: public UnityEngine.GameObject vfxRain
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxRain();
    // Get instance field reference: public UnityEngine.GameObject vfxTrapExplosion
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxTrapExplosion();
    // Get instance field reference: public UnityEngine.GameObject[] vfxArrowTipVfx
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_vfxArrowTipVfx();
    // Get instance field reference: private UnityEngine.Transform DFGKDJFNDHC
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_DFGKDJFNDHC();
    // Get instance field reference: private System.Single BKIIHPLHGHI
    [[deprecated("Use field access instead!")]] float& dyn_BKIIHPLHGHI();
    // Get instance field reference: private UnityEngine.Vector3 CNBGPJGNDHG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_CNBGPJGNDHG();
    // Get instance field reference: private UnityEngine.Vector3 LBKEFFOMMDK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_LBKEFFOMMDK();
    // Get instance field reference: private System.Single KCPPHLJOPGN
    [[deprecated("Use field access instead!")]] float& dyn_KCPPHLJOPGN();
    // Get instance field reference: private System.Single KGNMCBDDHBO
    [[deprecated("Use field access instead!")]] float& dyn_KGNMCBDDHBO();
    // Get instance field reference: private System.Single JDJIEFKEIFJ
    [[deprecated("Use field access instead!")]] float& dyn_JDJIEFKEIFJ();
    // Get instance field reference: private Vectrosity.VectorLine KNNLNNHNMNE
    [[deprecated("Use field access instead!")]] ::Vectrosity::VectorLine*& dyn_KNNLNNHNMNE();
    // Get instance field reference: private System.Single FKKACPMOGKP
    [[deprecated("Use field access instead!")]] float& dyn_FKKACPMOGKP();
    // Get instance field reference: private System.Single DEKAKKMLCFG
    [[deprecated("Use field access instead!")]] float& dyn_DEKAKKMLCFG();
    // Get instance field reference: private System.Boolean DMCGIAPABOA
    [[deprecated("Use field access instead!")]] bool& dyn_DMCGIAPABOA();
    // Get instance field reference: private System.Boolean NNDIPBGCGFH
    [[deprecated("Use field access instead!")]] bool& dyn_NNDIPBGCGFH();
    // Get instance field reference: public UnityEngine.UI.Image abil1_icon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_abil1_icon();
    // Get instance field reference: private System.Single CJBIGLODBOF
    [[deprecated("Use field access instead!")]] float& dyn_CJBIGLODBOF();
    // Get instance field reference: private System.Single FKCFHOHJILE
    [[deprecated("Use field access instead!")]] float& dyn_FKCFHOHJILE();
    // Get instance field reference: private System.Boolean GBHKONENNFO
    [[deprecated("Use field access instead!")]] bool& dyn_GBHKONENNFO();
    // Get instance field reference: private System.Boolean GEOLNFIKBFI
    [[deprecated("Use field access instead!")]] bool& dyn_GEOLNFIKBFI();
    // Get instance field reference: public UnityEngine.UI.Image abil2_icon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_abil2_icon();
    // Get instance field reference: private System.Single IKPGOLILJAE
    [[deprecated("Use field access instead!")]] float& dyn_IKPGOLILJAE();
    // Get instance field reference: private System.Single EJAHAGPCLEH
    [[deprecated("Use field access instead!")]] float& dyn_EJAHAGPCLEH();
    // Get instance field reference: private System.Boolean NCBPNNPCBGJ
    [[deprecated("Use field access instead!")]] bool& dyn_NCBPNNPCBGJ();
    // Get instance field reference: private System.Boolean GKIIALHBFME
    [[deprecated("Use field access instead!")]] bool& dyn_GKIIALHBFME();
    // Get instance field reference: public UnityEngine.UI.Image abil3_icon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_abil3_icon();
    // Get instance field reference: private System.Single MKDJFEPDHIB
    [[deprecated("Use field access instead!")]] float& dyn_MKDJFEPDHIB();
    // Get instance field reference: private System.Single AOJHNCKJJKH
    [[deprecated("Use field access instead!")]] float& dyn_AOJHNCKJJKH();
    // Get instance field reference: private System.Boolean KBKLKHGBNFD
    [[deprecated("Use field access instead!")]] bool& dyn_KBKLKHGBNFD();
    // Get instance field reference: public UnityEngine.UI.Image abil4_icon
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_abil4_icon();
    // Get instance field reference: private System.Single MMBGGFGAOMA
    [[deprecated("Use field access instead!")]] float& dyn_MMBGGFGAOMA();
    // Get instance field reference: private System.Single JCPLOKNLJDE
    [[deprecated("Use field access instead!")]] float& dyn_JCPLOKNLJDE();
    // Get instance field reference: private System.Boolean LOOFPNFLHAF
    [[deprecated("Use field access instead!")]] bool& dyn_LOOFPNFLHAF();
    // Get instance field reference: private System.Boolean DHKDOGJAOIG
    [[deprecated("Use field access instead!")]] bool& dyn_DHKDOGJAOIG();
    // Get instance field reference: private System.Boolean MBFHKOJKKLI
    [[deprecated("Use field access instead!")]] bool& dyn_MBFHKOJKKLI();
    // Get instance field reference: private System.Boolean DIJNPBDLJHF
    [[deprecated("Use field access instead!")]] bool& dyn_DIJNPBDLJHF();
    // Get instance field reference: private UnityEngine.GameObject BCOFKLAEOMF
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_BCOFKLAEOMF();
    // Get instance field reference: private UnityEngine.Vector3 PKPAONONFFC
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_PKPAONONFFC();
    // Get instance field reference: public UnityEngine.GameObject beltTrap
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_beltTrap();
    // Get instance field reference: private UnityEngine.BoxCollider CHHNCGNNLPA
    [[deprecated("Use field access instead!")]] ::UnityEngine::BoxCollider*& dyn_CHHNCGNNLPA();
    // Get instance field reference: private System.Single FMJAJFCHDGK
    [[deprecated("Use field access instead!")]] float& dyn_FMJAJFCHDGK();
    // Get instance field reference: private UnityEngine.GameObject IHDIMJGLDIJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_IHDIMJGLDIJ();
    // Get instance field reference: private UnityEngine.BoxCollider KEAJKAGBNDE
    [[deprecated("Use field access instead!")]] ::UnityEngine::BoxCollider*& dyn_KEAJKAGBNDE();
    // Get instance field reference: private UnityEngine.GameObject JECFNMKBJPK
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_JECFNMKBJPK();
    // Get instance field reference: private MagicalActual.ObjectHighlighter MOBFGEGIHCG
    [[deprecated("Use field access instead!")]] ::MagicalActual::ObjectHighlighter*& dyn_MOBFGEGIHCG();
    // Get instance field reference: private UnityEngine.GameObject CKIFGLEFIBD
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_CKIFGLEFIBD();
    // Get instance field reference: private UnityEngine.GameObject BDDDDLHEGFG
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_BDDDDLHEGFG();
    // Get instance field reference: private UnityEngine.BoxCollider NHIDNFFMEBD
    [[deprecated("Use field access instead!")]] ::UnityEngine::BoxCollider*& dyn_NHIDNFFMEBD();
    // Get instance field reference: private UnityEngine.GameObject CGLDGMBJMME
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_CGLDGMBJMME();
    // Get instance field reference: private MagicalActual.ObjectHighlighter ECPICIOFHBM
    [[deprecated("Use field access instead!")]] ::MagicalActual::ObjectHighlighter*& dyn_ECPICIOFHBM();
    // Get instance field reference: private UnityEngine.GameObject BFJGFPNIGIJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_BFJGFPNIGIJ();
    // Get instance field reference: private UnityEngine.GameObject ACIFNEANCBL
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ACIFNEANCBL();
    // Get instance field reference: private UnityEngine.GameObject JFMDKCFOKCD
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_JFMDKCFOKCD();
    // Get instance field reference: private UnityEngine.GameObject ICKGFJMICME
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ICKGFJMICME();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt JLOOMEIDNFH
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_JLOOMEIDNFH();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt NAGDLHIDCAH
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_NAGDLHIDCAH();
    // Get instance field reference: private System.Single IOGHDECGGKF
    [[deprecated("Use field access instead!")]] float& dyn_IOGHDECGGKF();
    // Get instance field reference: private System.Single NCCNAPLJMBM
    [[deprecated("Use field access instead!")]] float& dyn_NCCNAPLJMBM();
    // Get instance field reference: private UnityEngine.Vector3 MCFENCIJGNG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_MCFENCIJGNG();
    // Get instance field reference: private UnityEngine.Color JMJKIJDCPDF
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_JMJKIJDCPDF();
    // Get instance field reference: private UnityEngine.Color OFJLNPFPAAD
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_OFJLNPFPAAD();
    // Get instance field reference: private System.Boolean GCCMBLOGLBA
    [[deprecated("Use field access instead!")]] bool& dyn_GCCMBLOGLBA();
    // Get instance field reference: private System.Boolean GHBBMIFHKGO
    [[deprecated("Use field access instead!")]] bool& dyn_GHBBMIFHKGO();
    // Get instance field reference: private System.Boolean HIKIBDCNDAA
    [[deprecated("Use field access instead!")]] bool& dyn_HIKIBDCNDAA();
    // Get instance field reference: private System.Boolean IMNDEEOEOKA
    [[deprecated("Use field access instead!")]] bool& dyn_IMNDEEOEOKA();
    // Get instance field reference: private System.Int32 AAIGNGFONBI
    [[deprecated("Use field access instead!")]] int& dyn_AAIGNGFONBI();
    // Get instance field reference: private UnityEngine.Vector3 GGEFNAGCKIM
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_GGEFNAGCKIM();
    // Get instance field reference: private UnityEngine.Quaternion PGEPDKMCMAG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_PGEPDKMCMAG();
    // Get instance field reference: private UnityEngine.GameObject FHLMGEOALGC
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_FHLMGEOALGC();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private System.Boolean IHHGAHCIFPM
    [[deprecated("Use field access instead!")]] bool& dyn_IHHGAHCIFPM();
    // Get instance field reference: private UnityEngine.GameObject CCEMBLKGKLN
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_CCEMBLKGKLN();
    // Get instance field reference: private UnityEngine.GameObject GKJEHAKEABK
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_GKJEHAKEABK();
    // Get instance field reference: private System.Int32 GHDHNDFOEJD
    [[deprecated("Use field access instead!")]] int& dyn_GHDHNDFOEJD();
    // Get instance field reference: private System.Int32 LOOMJHGPNOO
    [[deprecated("Use field access instead!")]] int& dyn_LOOMJHGPNOO();
    // Get instance field reference: private OrbusTrackedController IKCANGJCBED
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OrbusTrackedController*& dyn_IKCANGJCBED();
    // Get instance field reference: private OrbusTrackedController HKFGNKJKLPH
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OrbusTrackedController*& dyn_HKFGNKJKLPH();
    // Get instance field reference: public UnityEngine.GameObject[] globesOn
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_globesOn();
    // Get instance field reference: public UnityEngine.GameObject[] globesOff
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_globesOff();
    // Get instance field reference: public SuperTextMesh shotRatingIndicator
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& dyn_shotRatingIndicator();
    // Get instance field reference: private System.Single JODNJDBJDNO
    [[deprecated("Use field access instead!")]] float& dyn_JODNJDBJDNO();
    // Get instance field reference: private System.Single JEOMDONEDFM
    [[deprecated("Use field access instead!")]] float& dyn_JEOMDONEDFM();
    // Get instance field reference: private UnityEngine.Vector3 JIBNAJKFJIA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_JIBNAJKFJIA();
    // Get instance field reference: private UnityEngine.GameObject ABKOIGAJPKE
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ABKOIGAJPKE();
    // Get instance field reference: private UnityEngine.Vector3 MLPCJDMEOLM
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_MLPCJDMEOLM();
    // Get instance field reference: public UnityEngine.GameObject bowHud
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_bowHud();
    // Get instance field reference: private UnityEngine.GameObject HDMKCGKJCLA
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_HDMKCGKJCLA();
    // Get instance field reference: private UnityEngine.GameObject critPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_critPrefab();
    // Get instance field reference: public System.Collections.Generic.List`1<MagicalActual.ArcherCriticalSpot> critSpots
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::MagicalActual::ArcherCriticalSpot*>*& dyn_critSpots();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt DKKJDEGCOLN
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_DKKJDEGCOLN();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt MGEMIPNLONH
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_MGEMIPNLONH();
    // Get instance field reference: private System.Boolean EEJPPOFELBG
    [[deprecated("Use field access instead!")]] bool& dyn_EEJPPOFELBG();
    // Get instance field reference: private System.Int32 COLMMMMCHPF
    [[deprecated("Use field access instead!")]] int& dyn_COLMMMMCHPF();
    // Get instance field reference: private MagicalActual.Archer/useAxis MOHANHGCAPP
    [[deprecated("Use field access instead!")]] ::MagicalActual::Archer::useAxis& dyn_MOHANHGCAPP();
    // Get instance field reference: public MagicalActual.Archer/arrowAbilities arrowNotchedWithAbility
    [[deprecated("Use field access instead!")]] ::MagicalActual::Archer::arrowAbilities& dyn_arrowNotchedWithAbility();
    // Get instance field reference: private System.Int32 PEHHBDBEAEM
    [[deprecated("Use field access instead!")]] int& dyn_PEHHBDBEAEM();
    // Get instance field reference: private System.Int32 NFOHLCAANJB
    [[deprecated("Use field access instead!")]] int& dyn_NFOHLCAANJB();
    // Get instance field reference: private System.Byte HCIPCMLDHDD
    [[deprecated("Use field access instead!")]] uint8_t& dyn_HCIPCMLDHDD();
    // Get instance field reference: private System.Boolean DEAAGGEFHEE
    [[deprecated("Use field access instead!")]] bool& dyn_DEAAGGEFHEE();
    // Get instance field reference: private System.Boolean DKNPCJOMGBJ
    [[deprecated("Use field access instead!")]] bool& dyn_DKNPCJOMGBJ();
    // Get instance field reference: private System.Byte JNMJJKDAECC
    [[deprecated("Use field access instead!")]] uint8_t& dyn_JNMJJKDAECC();
    // Get instance field reference: private System.Boolean LGJCIINDCAL
    [[deprecated("Use field access instead!")]] bool& dyn_LGJCIINDCAL();
    // Get instance field reference: private ClickedEventHandler HCJEOHLOMGB
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_HCJEOHLOMGB();
    // Get instance field reference: private ClickedEventHandler KEBNGJKMOCC
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_KEBNGJKMOCC();
    // Get instance field reference: private ClickedEventHandler HBOOKAFBIEP
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_HBOOKAFBIEP();
    // Get instance field reference: private ClickedEventHandler POBEHEJEEFA
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_POBEHEJEEFA();
    // Get instance field reference: private ClickedEventHandler BHLDGAKLBLB
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_BHLDGAKLBLB();
    // Get instance field reference: private ClickedEventHandler FHBKAFFKFOD
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_FHBKAFFKFOD();
    // Get instance field reference: private ClickedEventHandler MDEBIKPCABE
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_MDEBIKPCABE();
    // Get instance field reference: private ClickedEventHandler BMHNEDFCFFE
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_BMHNEDFCFFE();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // private System.Void GBCHLGNALEH(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x10BB478
    void GBCHLGNALEH(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void IEAKMOHIBDD()
    // Offset: 0x10BBC78
    void IEAKMOHIBDD();
    // private System.Void EJEKFLAFDPP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10BBD54
    void EJEKFLAFDPP(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void JJLDHDGIOBN(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x10BBF28
    void JJLDHDGIOBN(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void CBJLCNPACLC(System.Int32 DDDGFHPKCAJ)
    // Offset: 0x10BBC80
    void CBJLCNPACLC(int DDDGFHPKCAJ);
    // public System.Boolean IBOCGGIDMCI(UnityEngine.Collider GCIPNKCIPNG, UnityEngine.Vector3 EENBBLBIKAL, out UnityEngine.Vector3 LPBDOKJFOJI)
    // Offset: 0x10BC548
    bool IBOCGGIDMCI(::UnityEngine::Collider* GCIPNKCIPNG, ::UnityEngine::Vector3 EENBBLBIKAL, ByRef<::UnityEngine::Vector3> LPBDOKJFOJI);
    // private System.Void BDGEOOANFAA(UnityEngine.Vector3 NHFBFBMNPFC, UnityEngine.Vector3 NKJBILNNJNP, System.Single LOOFLPBMPBM, System.Boolean PPDKOACOAGK, System.Byte DPNBMCJOGBN, System.Int32 ENMLJMBHBHE)
    // Offset: 0x10BC8CC
    void BDGEOOANFAA(::UnityEngine::Vector3 NHFBFBMNPFC, ::UnityEngine::Vector3 NKJBILNNJNP, float LOOFLPBMPBM, bool PPDKOACOAGK, uint8_t DPNBMCJOGBN, int ENMLJMBHBHE);
    // private System.Void KABCPGPDHIK()
    // Offset: 0x10BCB60
    void KABCPGPDHIK();
    // public System.Void spawnServerTrap()
    // Offset: 0x10BD4A8
    void spawnServerTrap();
    // private System.Void OnDisable()
    // Offset: 0x10BD558
    void OnDisable();
    // private System.Void FIJGNOGEJJD(System.Object OMLPNCLFFMJ)
    // Offset: 0x10BD76C
    void FIJGNOGEJJD(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LJOGPIGAHLH(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10BD9E4
    void LJOGPIGAHLH(::System::Collections::ArrayList* HPEANAHIBAH);
    // public UnityEngine.Vector3 GetHitInCollider(UnityEngine.Collider GCIPNKCIPNG, UnityEngine.Vector3 EENBBLBIKAL)
    // Offset: 0x10BDE0C
    ::UnityEngine::Vector3 GetHitInCollider(::UnityEngine::Collider* GCIPNKCIPNG, ::UnityEngine::Vector3 EENBBLBIKAL);
    // private System.Void DNEKCNINLAG()
    // Offset: 0x10BE0B0
    void DNEKCNINLAG();
    // public System.Void DLFAJDBBFJP()
    // Offset: 0x10BE1F8
    void DLFAJDBBFJP();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x10BE1FC
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void CHPPCNECJDP(System.Object OMLPNCLFFMJ)
    // Offset: 0x10BEAC4
    void CHPPCNECJDP(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Boolean GetPointOnSurface(UnityEngine.Collider GCIPNKCIPNG, UnityEngine.Vector3 EENBBLBIKAL, out UnityEngine.Vector3 LPBDOKJFOJI)
    // Offset: 0x10BF348
    bool GetPointOnSurface(::UnityEngine::Collider* GCIPNKCIPNG, ::UnityEngine::Vector3 EENBBLBIKAL, ByRef<::UnityEngine::Vector3> LPBDOKJFOJI);
    // private System.Void DIADDELCHHJ(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10BF6F0
    void DIADDELCHHJ(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void OONOKBNICOI(System.Int32 DDDGFHPKCAJ)
    // Offset: 0x10BF88C
    void OONOKBNICOI(int DDDGFHPKCAJ);
    // private System.Void AHPOIEOBIOE(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x10BF960
    void AHPOIEOBIOE(::System::IO::BinaryWriter* FFJEENIEPJH);
    // public System.Void CEHBCHNCIDL(System.Boolean AALBHOKGIOD)
    // Offset: 0x10BF99C
    void CEHBCHNCIDL(bool AALBHOKGIOD);
    // private System.Void EBNECGNLOPG(System.Byte DBJMBLGLHIH)
    // Offset: 0x10BFA1C
    void EBNECGNLOPG(uint8_t DBJMBLGLHIH);
    // private System.Void BFIAPGIHOGK()
    // Offset: 0x10BFE0C
    void BFIAPGIHOGK();
    // private System.Void FixedUpdate()
    // Offset: 0x10C0490
    void FixedUpdate();
    // private System.Void CJJGGCOFIEF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10C1108
    void CJJGGCOFIEF(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void Start()
    // Offset: 0x10C1310
    void Start();
    // private System.Void AMIBMIPNAOB()
    // Offset: 0x10BEE1C
    void AMIBMIPNAOB();
    // public System.Void ToggleAdjustWeapon()
    // Offset: 0x10C1F94
    void ToggleAdjustWeapon();
    // private System.Void EHNDGJGPMMK(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x10C24C4
    void EHNDGJGPMMK(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void HJOOEABHAPG(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10C25E4
    void HJOOEABHAPG(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void LCFDFCNIGII(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x10C2A44
    void LCFDFCNIGII(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public System.Void ClassEnabled()
    // Offset: 0x10C2F90
    void ClassEnabled();
    // private System.Void DPKCGEOMGBK()
    // Offset: 0x10C3350
    void DPKCGEOMGBK();
    // private System.Boolean CIBDJNJGODA()
    // Offset: 0x10C2D5C
    bool CIBDJNJGODA();
    // private System.Void FPJHADEFADP()
    // Offset: 0x10BB63C
    void FPJHADEFADP();
    // private System.Void Awake()
    // Offset: 0x10C3548
    void Awake();
    // public System.Void DKDOSPFDDA(System.UInt16 FNOCLFOKDFG, UnityEngine.Vector3 DLLPCCKKJGD, System.Int32 ENMLJMBHBHE, System.Byte DHPAKMDEPPF)
    // Offset: 0x10C3B10
    void DKDOSPFDDA(uint16_t FNOCLFOKDFG, ::UnityEngine::Vector3 DLLPCCKKJGD, int ENMLJMBHBHE, uint8_t DHPAKMDEPPF);
    // public System.Void hitEnemyWithTrap(System.UInt16 LICFEAKFMMP)
    // Offset: 0x10C1028
    void hitEnemyWithTrap(uint16_t LICFEAKFMMP);
    // private System.Void POOCKCIEHGK(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10C3C5C
    void POOCKCIEHGK(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void JENLPKILHLL()
    // Offset: 0x10C41EC
    void JENLPKILHLL();
    // private System.Void LateUpdate()
    // Offset: 0x10C41F0
    void LateUpdate();
    // private System.Void AAPHFMOHPIP()
    // Offset: 0x10BC0E0
    void AAPHFMOHPIP();
    // public System.Void NAJONKHGPOA(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x10C4A8C
    void NAJONKHGPOA(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void BELMOHCFMIL()
    // Offset: 0x10C4C9C
    void BELMOHCFMIL();
    // private System.Void NLHLMMCPBHL(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x10C5570
    void NLHLMMCPBHL(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void HBKAIKDAEIL(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x10C55AC
    void HBKAIKDAEIL(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void JAMEEGNKCDB(System.Object OMLPNCLFFMJ)
    // Offset: 0x10C5764
    void JAMEEGNKCDB(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void EnableSecondaryWeapon()
    // Offset: 0x10C58A8
    void EnableSecondaryWeapon();
    // private System.Void EDCEJJAPJBE(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10C59F0
    void EDCEJJAPJBE(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void CNGFKPEDKCA(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10C5B90
    void CNGFKPEDKCA(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void ONAAFDNJOJA()
    // Offset: 0x10C5DA0
    void ONAAFDNJOJA();
    // private System.Void POCNGAJLFBE()
    // Offset: 0x10C1B50
    void POCNGAJLFBE();
    // private System.Void MKJPBDEMNHD(UnityEngine.Vector3 NHFBFBMNPFC, UnityEngine.Vector3 NKJBILNNJNP, System.Single LOOFLPBMPBM, System.Boolean PPDKOACOAGK, System.Byte DPNBMCJOGBN, System.Int32 ENMLJMBHBHE)
    // Offset: 0x10C5E3C
    void MKJPBDEMNHD(::UnityEngine::Vector3 NHFBFBMNPFC, ::UnityEngine::Vector3 NKJBILNNJNP, float LOOFLPBMPBM, bool PPDKOACOAGK, uint8_t DPNBMCJOGBN, int ENMLJMBHBHE);
    // private System.Void OJAAAFCCJPM(System.Object OMLPNCLFFMJ)
    // Offset: 0x10C6110
    void OJAAAFCCJPM(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void WeaponAdjusted()
    // Offset: 0x10C6254
    void WeaponAdjusted();
    // private System.Void Update()
    // Offset: 0x10C62B0
    void Update();
    // private System.Void HEONHOEIMOA(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x10C657C
    void HEONHOEIMOA(::System::IO::BinaryWriter* FFJEENIEPJH);
    // public UnityEngine.GameObject GetWeaponSkin()
    // Offset: 0x10C2344
    ::UnityEngine::GameObject* GetWeaponSkin();
    // private System.Void BODFDJIGNCJ(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10C65B8
    void BODFDJIGNCJ(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void NBFDICHOCDC(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10C6754
    void NBFDICHOCDC(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void PHOBDICMJPP()
    // Offset: 0x10C58DC
    void PHOBDICMJPP();
    // public UnityEngine.GameObject GetWeaponObject()
    // Offset: 0x10C24BC
    ::UnityEngine::GameObject* GetWeaponObject();
    // private System.Void HNBGFJMCAFI()
    // Offset: 0x10C6B7C
    void HNBGFJMCAFI();
    // private System.Void EDHKLMJOIHB()
    // Offset: 0x10BD064
    void EDHKLMJOIHB();
    // private System.Void JGBKPNDCLJA(System.Object OMLPNCLFFMJ)
    // Offset: 0x10C71CC
    void JGBKPNDCLJA(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void orbusNetCleanup(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x10C7238
    void orbusNetCleanup(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JMPJIGKKJNJ()
    // Offset: 0x10C7448
    void JMPJIGKKJNJ();
    // private System.Void OBAMBAKAINK()
    // Offset: 0x10C7C74
    void OBAMBAKAINK();
    // private System.Void MNDPONGKIBM(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x10C7CB8
    void MNDPONGKIBM(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void EIIHBNHHOIO()
    // Offset: 0x10C7E70
    void EIIHBNHHOIO();
    // private System.Void MFNNNPEHKIE()
    // Offset: 0x10BD7D8
    void MFNNNPEHKIE();
    // private System.Void NGOBIOHOPOL(System.Object OMLPNCLFFMJ)
    // Offset: 0x10C85E4
    void NGOBIOHOPOL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MCLNPNGAJMC()
    // Offset: 0x10BCC08
    void MCLNPNGAJMC();
    // private System.Void OGPCADJGNPL()
    // Offset: 0x10C8728
    void OGPCADJGNPL();
    // public System.Void ClassDisabled()
    // Offset: 0x10C8A6C
    void ClassDisabled();
    // private System.Void AELHCLNHHNO()
    // Offset: 0x10C2D98
    void AELHCLNHHNO();
    // private System.Void LAAEMJHDEPN()
    // Offset: 0x10C8A70
    void LAAEMJHDEPN();
    // private System.Void JEIAGCBHHHI()
    // Offset: 0x10C8D30
    void JEIAGCBHHHI();
    // private System.Void MONGJJDMHOK(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10C900C
    void MONGJJDMHOK(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void IEKIAOEBELD(MagicalActual.Archer/arrowAbilities DKJBECDNMLG)
    // Offset: 0x10C00CC
    void IEKIAOEBELD(::MagicalActual::Archer::arrowAbilities DKJBECDNMLG);
    // private System.Void ENIGECPOHND(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x10C91AC
    void ENIGECPOHND(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void DisableSecondaryWeapon()
    // Offset: 0x10BD734
    void DisableSecondaryWeapon();
    // public System.Void SuperStatusChange(System.Boolean AALBHOKGIOD)
    // Offset: 0x10C94C8
    void SuperStatusChange(bool AALBHOKGIOD);
    // private System.Void KBOPMDHOMOL(System.Object OMLPNCLFFMJ)
    // Offset: 0x10C9548
    void KBOPMDHOMOL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void PIDBOFBDMPF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10C968C
    void PIDBOFBDMPF(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void IKKHGMBBEOO()
    // Offset: 0x10BEB60
    void IKKHGMBBEOO();
    // public System.Void OnDestroy()
    // Offset: 0x10C9860
    void OnDestroy();
    // private System.Void EnablePrimaryWeapon()
    // Offset: 0x10C9B10
    void EnablePrimaryWeapon();
    // private System.Void MCFOBNKIIHF(System.Object OMLPNCLFFMJ)
    // Offset: 0x10C9BAC
    void MCFOBNKIIHF(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void ECBECEEEEOP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10C9FA0
    void ECBECEEEEOP(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void DisablePrimaryWeapon()
    // Offset: 0x10BD64C
    void DisablePrimaryWeapon();
    // private System.Void EOOHNDMLMND(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10CA1BC
    void EOOHNDMLMND(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void FNHMDGIEABA()
    // Offset: 0x10CA3F4
    void FNHMDGIEABA();
    // public System.Void .ctor()
    // Offset: 0x10CA438
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Archer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Archer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Archer*, creationType>()));
    }
    // private System.Void GNEODEDIAMI(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x10CA62C
    void GNEODEDIAMI(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void NPOEKLDNCJJ(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x10CA668
    void NPOEKLDNCJJ(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void NFHKNAONEGM()
    // Offset: 0x10C2FD4
    void NFHKNAONEGM();
    // private System.Void SwitchWeaponHand(System.Byte DBJMBLGLHIH)
    // Offset: 0x10C173C
    void SwitchWeaponHand(uint8_t DBJMBLGLHIH);
    // public System.Void AvatarEquipmentChanged()
    // Offset: 0x10CA6A4
    void AvatarEquipmentChanged();
    // private System.Void ANKBEGMNKPA()
    // Offset: 0x10CA950
    void ANKBEGMNKPA();
    // public System.Void ShowArrowHit(UnityEngine.Vector3 NHFBFBMNPFC, System.Byte DHPAKMDEPPF)
    // Offset: 0x10CA0A0
    void ShowArrowHit(::UnityEngine::Vector3 NHFBFBMNPFC, uint8_t DHPAKMDEPPF);
    // private System.Void BKNGDELMLEG(UnityEngine.Vector3 LANJPMMODCK, UnityEngine.Vector3 ILIAANPPIIP)
    // Offset: 0x10C3F44
    void BKNGDELMLEG(::UnityEngine::Vector3 LANJPMMODCK, ::UnityEngine::Vector3 ILIAANPPIIP);
  }; // MagicalActual.Archer
  #pragma pack(pop)
  static check_size<sizeof(Archer), 968 + sizeof(::MagicalActual::NetEntity*)> __MagicalActual_ArcherSizeCheck;
  static_assert(sizeof(Archer) == 0x3D0);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Archer::arrowAbilities, "MagicalActual", "Archer/arrowAbilities");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Archer::useAxis, "MagicalActual", "Archer/useAxis");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Archer::GBCHLGNALEH
// Il2CppName: GBCHLGNALEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Archer::GBCHLGNALEH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "GBCHLGNALEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::IEAKMOHIBDD
// Il2CppName: IEAKMOHIBDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::IEAKMOHIBDD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "IEAKMOHIBDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::EJEKFLAFDPP
// Il2CppName: EJEKFLAFDPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::EJEKFLAFDPP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "EJEKFLAFDPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::JJLDHDGIOBN
// Il2CppName: JJLDHDGIOBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Archer::JJLDHDGIOBN)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "JJLDHDGIOBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::CBJLCNPACLC
// Il2CppName: CBJLCNPACLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(int)>(&MagicalActual::Archer::CBJLCNPACLC)> {
  static const MethodInfo* get() {
    static auto* DDDGFHPKCAJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "CBJLCNPACLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DDDGFHPKCAJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::IBOCGGIDMCI
// Il2CppName: IBOCGGIDMCI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Archer::*)(::UnityEngine::Collider*, ::UnityEngine::Vector3, ByRef<::UnityEngine::Vector3>)>(&MagicalActual::Archer::IBOCGGIDMCI)> {
  static const MethodInfo* get() {
    static auto* GCIPNKCIPNG = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    static auto* EENBBLBIKAL = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LPBDOKJFOJI = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "IBOCGGIDMCI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GCIPNKCIPNG, EENBBLBIKAL, LPBDOKJFOJI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::BDGEOOANFAA
// Il2CppName: BDGEOOANFAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, float, bool, uint8_t, int)>(&MagicalActual::Archer::BDGEOOANFAA)> {
  static const MethodInfo* get() {
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LOOFLPBMPBM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* PPDKOACOAGK = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* DPNBMCJOGBN = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* ENMLJMBHBHE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "BDGEOOANFAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHFBFBMNPFC, NKJBILNNJNP, LOOFLPBMPBM, PPDKOACOAGK, DPNBMCJOGBN, ENMLJMBHBHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::KABCPGPDHIK
// Il2CppName: KABCPGPDHIK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::KABCPGPDHIK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "KABCPGPDHIK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::spawnServerTrap
// Il2CppName: spawnServerTrap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::spawnServerTrap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "spawnServerTrap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::FIJGNOGEJJD
// Il2CppName: FIJGNOGEJJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*)>(&MagicalActual::Archer::FIJGNOGEJJD)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "FIJGNOGEJJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::LJOGPIGAHLH
// Il2CppName: LJOGPIGAHLH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::LJOGPIGAHLH)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "LJOGPIGAHLH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::GetHitInCollider
// Il2CppName: GetHitInCollider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::Archer::*)(::UnityEngine::Collider*, ::UnityEngine::Vector3)>(&MagicalActual::Archer::GetHitInCollider)> {
  static const MethodInfo* get() {
    static auto* GCIPNKCIPNG = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    static auto* EENBBLBIKAL = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "GetHitInCollider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GCIPNKCIPNG, EENBBLBIKAL});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::DNEKCNINLAG
// Il2CppName: DNEKCNINLAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::DNEKCNINLAG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "DNEKCNINLAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::DLFAJDBBFJP
// Il2CppName: DLFAJDBBFJP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::DLFAJDBBFJP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "DLFAJDBBFJP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Archer::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::CHPPCNECJDP
// Il2CppName: CHPPCNECJDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*)>(&MagicalActual::Archer::CHPPCNECJDP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "CHPPCNECJDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::GetPointOnSurface
// Il2CppName: GetPointOnSurface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Archer::*)(::UnityEngine::Collider*, ::UnityEngine::Vector3, ByRef<::UnityEngine::Vector3>)>(&MagicalActual::Archer::GetPointOnSurface)> {
  static const MethodInfo* get() {
    static auto* GCIPNKCIPNG = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    static auto* EENBBLBIKAL = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LPBDOKJFOJI = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "GetPointOnSurface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GCIPNKCIPNG, EENBBLBIKAL, LPBDOKJFOJI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::DIADDELCHHJ
// Il2CppName: DIADDELCHHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::DIADDELCHHJ)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "DIADDELCHHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::OONOKBNICOI
// Il2CppName: OONOKBNICOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(int)>(&MagicalActual::Archer::OONOKBNICOI)> {
  static const MethodInfo* get() {
    static auto* DDDGFHPKCAJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "OONOKBNICOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DDDGFHPKCAJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::AHPOIEOBIOE
// Il2CppName: AHPOIEOBIOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Archer::AHPOIEOBIOE)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "AHPOIEOBIOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::CEHBCHNCIDL
// Il2CppName: CEHBCHNCIDL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(bool)>(&MagicalActual::Archer::CEHBCHNCIDL)> {
  static const MethodInfo* get() {
    static auto* AALBHOKGIOD = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "CEHBCHNCIDL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AALBHOKGIOD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::EBNECGNLOPG
// Il2CppName: EBNECGNLOPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(uint8_t)>(&MagicalActual::Archer::EBNECGNLOPG)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "EBNECGNLOPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::BFIAPGIHOGK
// Il2CppName: BFIAPGIHOGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::BFIAPGIHOGK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "BFIAPGIHOGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::CJJGGCOFIEF
// Il2CppName: CJJGGCOFIEF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::CJJGGCOFIEF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "CJJGGCOFIEF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::AMIBMIPNAOB
// Il2CppName: AMIBMIPNAOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::AMIBMIPNAOB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "AMIBMIPNAOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::ToggleAdjustWeapon
// Il2CppName: ToggleAdjustWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::ToggleAdjustWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "ToggleAdjustWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::EHNDGJGPMMK
// Il2CppName: EHNDGJGPMMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Archer::EHNDGJGPMMK)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "EHNDGJGPMMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::HJOOEABHAPG
// Il2CppName: HJOOEABHAPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::HJOOEABHAPG)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "HJOOEABHAPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::LCFDFCNIGII
// Il2CppName: LCFDFCNIGII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Archer::LCFDFCNIGII)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "LCFDFCNIGII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::ClassEnabled
// Il2CppName: ClassEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::ClassEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "ClassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::DPKCGEOMGBK
// Il2CppName: DPKCGEOMGBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::DPKCGEOMGBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "DPKCGEOMGBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::CIBDJNJGODA
// Il2CppName: CIBDJNJGODA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Archer::*)()>(&MagicalActual::Archer::CIBDJNJGODA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "CIBDJNJGODA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::FPJHADEFADP
// Il2CppName: FPJHADEFADP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::FPJHADEFADP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "FPJHADEFADP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::DKDOSPFDDA
// Il2CppName: DKDOSPFDDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(uint16_t, ::UnityEngine::Vector3, int, uint8_t)>(&MagicalActual::Archer::DKDOSPFDDA)> {
  static const MethodInfo* get() {
    static auto* FNOCLFOKDFG = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* DLLPCCKKJGD = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ENMLJMBHBHE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* DHPAKMDEPPF = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "DKDOSPFDDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FNOCLFOKDFG, DLLPCCKKJGD, ENMLJMBHBHE, DHPAKMDEPPF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::hitEnemyWithTrap
// Il2CppName: hitEnemyWithTrap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(uint16_t)>(&MagicalActual::Archer::hitEnemyWithTrap)> {
  static const MethodInfo* get() {
    static auto* LICFEAKFMMP = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "hitEnemyWithTrap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LICFEAKFMMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::POOCKCIEHGK
// Il2CppName: POOCKCIEHGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::POOCKCIEHGK)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "POOCKCIEHGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::JENLPKILHLL
// Il2CppName: JENLPKILHLL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::JENLPKILHLL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "JENLPKILHLL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::AAPHFMOHPIP
// Il2CppName: AAPHFMOHPIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::AAPHFMOHPIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "AAPHFMOHPIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::NAJONKHGPOA
// Il2CppName: NAJONKHGPOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Archer::NAJONKHGPOA)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "NAJONKHGPOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::BELMOHCFMIL
// Il2CppName: BELMOHCFMIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::BELMOHCFMIL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "BELMOHCFMIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::NLHLMMCPBHL
// Il2CppName: NLHLMMCPBHL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Archer::NLHLMMCPBHL)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "NLHLMMCPBHL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::HBKAIKDAEIL
// Il2CppName: HBKAIKDAEIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Archer::HBKAIKDAEIL)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "HBKAIKDAEIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::JAMEEGNKCDB
// Il2CppName: JAMEEGNKCDB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*)>(&MagicalActual::Archer::JAMEEGNKCDB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "JAMEEGNKCDB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::EnableSecondaryWeapon
// Il2CppName: EnableSecondaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::EnableSecondaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "EnableSecondaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::EDCEJJAPJBE
// Il2CppName: EDCEJJAPJBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::EDCEJJAPJBE)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "EDCEJJAPJBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::CNGFKPEDKCA
// Il2CppName: CNGFKPEDKCA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::CNGFKPEDKCA)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "CNGFKPEDKCA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::ONAAFDNJOJA
// Il2CppName: ONAAFDNJOJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::ONAAFDNJOJA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "ONAAFDNJOJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::POCNGAJLFBE
// Il2CppName: POCNGAJLFBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::POCNGAJLFBE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "POCNGAJLFBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::MKJPBDEMNHD
// Il2CppName: MKJPBDEMNHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, float, bool, uint8_t, int)>(&MagicalActual::Archer::MKJPBDEMNHD)> {
  static const MethodInfo* get() {
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LOOFLPBMPBM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* PPDKOACOAGK = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* DPNBMCJOGBN = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* ENMLJMBHBHE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "MKJPBDEMNHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHFBFBMNPFC, NKJBILNNJNP, LOOFLPBMPBM, PPDKOACOAGK, DPNBMCJOGBN, ENMLJMBHBHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::OJAAAFCCJPM
// Il2CppName: OJAAAFCCJPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*)>(&MagicalActual::Archer::OJAAAFCCJPM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "OJAAAFCCJPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::WeaponAdjusted
// Il2CppName: WeaponAdjusted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::WeaponAdjusted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "WeaponAdjusted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::HEONHOEIMOA
// Il2CppName: HEONHOEIMOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Archer::HEONHOEIMOA)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "HEONHOEIMOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::GetWeaponSkin
// Il2CppName: GetWeaponSkin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Archer::*)()>(&MagicalActual::Archer::GetWeaponSkin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "GetWeaponSkin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::BODFDJIGNCJ
// Il2CppName: BODFDJIGNCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::BODFDJIGNCJ)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "BODFDJIGNCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::NBFDICHOCDC
// Il2CppName: NBFDICHOCDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::NBFDICHOCDC)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "NBFDICHOCDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::PHOBDICMJPP
// Il2CppName: PHOBDICMJPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::PHOBDICMJPP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "PHOBDICMJPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::GetWeaponObject
// Il2CppName: GetWeaponObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Archer::*)()>(&MagicalActual::Archer::GetWeaponObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "GetWeaponObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::HNBGFJMCAFI
// Il2CppName: HNBGFJMCAFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::HNBGFJMCAFI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "HNBGFJMCAFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::EDHKLMJOIHB
// Il2CppName: EDHKLMJOIHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::EDHKLMJOIHB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "EDHKLMJOIHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::JGBKPNDCLJA
// Il2CppName: JGBKPNDCLJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*)>(&MagicalActual::Archer::JGBKPNDCLJA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "JGBKPNDCLJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::orbusNetCleanup
// Il2CppName: orbusNetCleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Archer::orbusNetCleanup)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "orbusNetCleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::JMPJIGKKJNJ
// Il2CppName: JMPJIGKKJNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::JMPJIGKKJNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "JMPJIGKKJNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::OBAMBAKAINK
// Il2CppName: OBAMBAKAINK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::OBAMBAKAINK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "OBAMBAKAINK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::MNDPONGKIBM
// Il2CppName: MNDPONGKIBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Archer::MNDPONGKIBM)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "MNDPONGKIBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::EIIHBNHHOIO
// Il2CppName: EIIHBNHHOIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::EIIHBNHHOIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "EIIHBNHHOIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::MFNNNPEHKIE
// Il2CppName: MFNNNPEHKIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::MFNNNPEHKIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "MFNNNPEHKIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::NGOBIOHOPOL
// Il2CppName: NGOBIOHOPOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*)>(&MagicalActual::Archer::NGOBIOHOPOL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "NGOBIOHOPOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::MCLNPNGAJMC
// Il2CppName: MCLNPNGAJMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::MCLNPNGAJMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "MCLNPNGAJMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::OGPCADJGNPL
// Il2CppName: OGPCADJGNPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::OGPCADJGNPL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "OGPCADJGNPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::ClassDisabled
// Il2CppName: ClassDisabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::ClassDisabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "ClassDisabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::AELHCLNHHNO
// Il2CppName: AELHCLNHHNO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::AELHCLNHHNO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "AELHCLNHHNO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::LAAEMJHDEPN
// Il2CppName: LAAEMJHDEPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::LAAEMJHDEPN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "LAAEMJHDEPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::JEIAGCBHHHI
// Il2CppName: JEIAGCBHHHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::JEIAGCBHHHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "JEIAGCBHHHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::MONGJJDMHOK
// Il2CppName: MONGJJDMHOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::MONGJJDMHOK)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "MONGJJDMHOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::IEKIAOEBELD
// Il2CppName: IEKIAOEBELD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::MagicalActual::Archer::arrowAbilities)>(&MagicalActual::Archer::IEKIAOEBELD)> {
  static const MethodInfo* get() {
    static auto* DKJBECDNMLG = &::il2cpp_utils::GetClassFromName("MagicalActual", "Archer/arrowAbilities")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "IEKIAOEBELD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DKJBECDNMLG});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::ENIGECPOHND
// Il2CppName: ENIGECPOHND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Archer::ENIGECPOHND)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "ENIGECPOHND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::DisableSecondaryWeapon
// Il2CppName: DisableSecondaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::DisableSecondaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "DisableSecondaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::SuperStatusChange
// Il2CppName: SuperStatusChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(bool)>(&MagicalActual::Archer::SuperStatusChange)> {
  static const MethodInfo* get() {
    static auto* AALBHOKGIOD = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "SuperStatusChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AALBHOKGIOD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::KBOPMDHOMOL
// Il2CppName: KBOPMDHOMOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*)>(&MagicalActual::Archer::KBOPMDHOMOL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "KBOPMDHOMOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::PIDBOFBDMPF
// Il2CppName: PIDBOFBDMPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::PIDBOFBDMPF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "PIDBOFBDMPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::IKKHGMBBEOO
// Il2CppName: IKKHGMBBEOO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::IKKHGMBBEOO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "IKKHGMBBEOO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::EnablePrimaryWeapon
// Il2CppName: EnablePrimaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::EnablePrimaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "EnablePrimaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::MCFOBNKIIHF
// Il2CppName: MCFOBNKIIHF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::Il2CppObject*)>(&MagicalActual::Archer::MCFOBNKIIHF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "MCFOBNKIIHF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::ECBECEEEEOP
// Il2CppName: ECBECEEEEOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::ECBECEEEEOP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "ECBECEEEEOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::DisablePrimaryWeapon
// Il2CppName: DisablePrimaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::DisablePrimaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "DisablePrimaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::EOOHNDMLMND
// Il2CppName: EOOHNDMLMND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Archer::EOOHNDMLMND)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "EOOHNDMLMND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::FNHMDGIEABA
// Il2CppName: FNHMDGIEABA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::FNHMDGIEABA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "FNHMDGIEABA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Archer::GNEODEDIAMI
// Il2CppName: GNEODEDIAMI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Archer::GNEODEDIAMI)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "GNEODEDIAMI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::NPOEKLDNCJJ
// Il2CppName: NPOEKLDNCJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Archer::NPOEKLDNCJJ)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "NPOEKLDNCJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::NFHKNAONEGM
// Il2CppName: NFHKNAONEGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::NFHKNAONEGM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "NFHKNAONEGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::SwitchWeaponHand
// Il2CppName: SwitchWeaponHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(uint8_t)>(&MagicalActual::Archer::SwitchWeaponHand)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "SwitchWeaponHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::AvatarEquipmentChanged
// Il2CppName: AvatarEquipmentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::AvatarEquipmentChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "AvatarEquipmentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::ANKBEGMNKPA
// Il2CppName: ANKBEGMNKPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)()>(&MagicalActual::Archer::ANKBEGMNKPA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "ANKBEGMNKPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::ShowArrowHit
// Il2CppName: ShowArrowHit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::UnityEngine::Vector3, uint8_t)>(&MagicalActual::Archer::ShowArrowHit)> {
  static const MethodInfo* get() {
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* DHPAKMDEPPF = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "ShowArrowHit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHFBFBMNPFC, DHPAKMDEPPF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Archer::BKNGDELMLEG
// Il2CppName: BKNGDELMLEG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Archer::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&MagicalActual::Archer::BKNGDELMLEG)> {
  static const MethodInfo* get() {
    static auto* LANJPMMODCK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ILIAANPPIIP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Archer*), "BKNGDELMLEG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LANJPMMODCK, ILIAANPPIIP});
  }
};
