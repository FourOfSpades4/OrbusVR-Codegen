// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_DinoBoss
  class M_DinoBoss;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_DinoBoss);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_DinoBoss*, "MagicalActual", "M_DinoBoss");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x49
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_DinoBoss
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4CB8
  class M_DinoBoss : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxBreath
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxBreath;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x30
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.Transform KNGDCIAIKBB
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Transform* KNGDCIAIKBB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private System.Boolean KOCGIEBMCEN
    // Size: 0x1
    // Offset: 0x48
    bool KOCGIEBMCEN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public UnityEngine.GameObject vfxBreath
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxBreath();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private UnityEngine.Transform KNGDCIAIKBB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_KNGDCIAIKBB();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private System.Boolean KOCGIEBMCEN
    [[deprecated("Use field access instead!")]] bool& dyn_KOCGIEBMCEN();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x246CD54
    void EIIKFEMCNKM();
    // public System.Void PNLNOOIGCBK()
    // Offset: 0x246CE54
    void PNLNOOIGCBK();
    // public System.Void BFEOMBNEICE()
    // Offset: 0x246D078
    void BFEOMBNEICE();
    // public System.Void IBMKENLAMGB()
    // Offset: 0x246D29C
    void IBMKENLAMGB();
    // public System.Void KFELMMFPNOG()
    // Offset: 0x246D4C0
    void KFELMMFPNOG();
    // public System.Void PKINMLEHJFB()
    // Offset: 0x246D5DC
    void PKINMLEHJFB();
    // public System.Void JFDEDDEJJPK()
    // Offset: 0x246D800
    void JFDEDDEJJPK();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x246DA24
    void MLGBKBMHHLE();
    // public System.Void CBINCNIDFNC()
    // Offset: 0x246DB24
    void CBINCNIDFNC();
    // public System.Void .ctor()
    // Offset: 0x246DC40
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_DinoBoss* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_DinoBoss::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_DinoBoss*, creationType>()));
    }
    // public System.Void JFBOMHHGFDN()
    // Offset: 0x246DC98
    void JFBOMHHGFDN();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x246DEBC
    void ABIHCGOKNCL();
    // public System.Void ICJOOAHHFAD()
    // Offset: 0x246DFBC
    void ICJOOAHHFAD();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x246E0D8
    void DGJGAFKDIDK();
    // public System.Void Breath()
    // Offset: 0x246E1D8
    void Breath();
    // public System.Void GLJFFHNKKPI()
    // Offset: 0x246E2F0
    void GLJFFHNKKPI();
    // public System.Void MKGLNCAENAG()
    // Offset: 0x246E514
    void MKGLNCAENAG();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x246E630
    void LBIKOKCCILF();
    // public System.Void Slash()
    // Offset: 0x246E730
    void Slash();
    // public System.Void JJGHLGCAOPG()
    // Offset: 0x246E948
    void JJGHLGCAOPG();
    // private System.Void Start()
    // Offset: 0x246EA64
    void Start();
    // public System.Void HFOODOMELOG()
    // Offset: 0x246EB64
    void HFOODOMELOG();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x246EC80
    void CBMDGNKFPIO();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x246ED80
    void NNDKJCJFIAK();
  }; // MagicalActual.M_DinoBoss
  #pragma pack(pop)
  static check_size<sizeof(M_DinoBoss), 72 + sizeof(bool)> __MagicalActual_M_DinoBossSizeCheck;
  static_assert(sizeof(M_DinoBoss) == 0x49);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::PNLNOOIGCBK
// Il2CppName: PNLNOOIGCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::PNLNOOIGCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "PNLNOOIGCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::BFEOMBNEICE
// Il2CppName: BFEOMBNEICE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::BFEOMBNEICE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "BFEOMBNEICE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::IBMKENLAMGB
// Il2CppName: IBMKENLAMGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::IBMKENLAMGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "IBMKENLAMGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::KFELMMFPNOG
// Il2CppName: KFELMMFPNOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::KFELMMFPNOG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "KFELMMFPNOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::PKINMLEHJFB
// Il2CppName: PKINMLEHJFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::PKINMLEHJFB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "PKINMLEHJFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::JFDEDDEJJPK
// Il2CppName: JFDEDDEJJPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::JFDEDDEJJPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "JFDEDDEJJPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::CBINCNIDFNC
// Il2CppName: CBINCNIDFNC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::CBINCNIDFNC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "CBINCNIDFNC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::JFBOMHHGFDN
// Il2CppName: JFBOMHHGFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::JFBOMHHGFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "JFBOMHHGFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::ICJOOAHHFAD
// Il2CppName: ICJOOAHHFAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::ICJOOAHHFAD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "ICJOOAHHFAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::Breath
// Il2CppName: Breath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::Breath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "Breath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::GLJFFHNKKPI
// Il2CppName: GLJFFHNKKPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::GLJFFHNKKPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "GLJFFHNKKPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::MKGLNCAENAG
// Il2CppName: MKGLNCAENAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::MKGLNCAENAG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "MKGLNCAENAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::JJGHLGCAOPG
// Il2CppName: JJGHLGCAOPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::JJGHLGCAOPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "JJGHLGCAOPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::HFOODOMELOG
// Il2CppName: HFOODOMELOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::HFOODOMELOG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "HFOODOMELOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoBoss::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoBoss::*)()>(&MagicalActual::M_DinoBoss::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoBoss*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
