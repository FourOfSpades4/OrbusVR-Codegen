// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Shaman
  class Shaman;
  // Forward declaring type: Grabber
  class Grabber;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ShamanTotem
  class ShamanTotem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ShamanTotem);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ShamanTotem*, "MagicalActual", "ShamanTotem");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ShamanTotem
  // [TokenAttribute] Offset: FFFFFFFF
  class ShamanTotem : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.Boolean isThrown
    // Size: 0x1
    // Offset: 0x18
    bool isThrown;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean isHeld
    // Size: 0x1
    // Offset: 0x19
    bool isHeld;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isHeld and: JGOGJDHABHN
    char __padding1[0x6] = {};
    // private UnityEngine.Collider[] JGOGJDHABHN
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::Collider*> JGOGJDHABHN;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // public MagicalActual.Shaman myShaman
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::Shaman* myShaman;
    // Field size check
    static_assert(sizeof(::MagicalActual::Shaman*) == 0x8);
    // public System.Byte spellId
    // Size: 0x1
    // Offset: 0x30
    uint8_t spellId;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: spellId and: FCDNLCMGDPC
    char __padding4[0x3] = {};
    // private System.Single FCDNLCMGDPC
    // Size: 0x4
    // Offset: 0x34
    float FCDNLCMGDPC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Boolean isThrown
    [[deprecated("Use field access instead!")]] bool& dyn_isThrown();
    // Get instance field reference: public System.Boolean isHeld
    [[deprecated("Use field access instead!")]] bool& dyn_isHeld();
    // Get instance field reference: private UnityEngine.Collider[] JGOGJDHABHN
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_JGOGJDHABHN();
    // Get instance field reference: public MagicalActual.Shaman myShaman
    [[deprecated("Use field access instead!")]] ::MagicalActual::Shaman*& dyn_myShaman();
    // Get instance field reference: public System.Byte spellId
    [[deprecated("Use field access instead!")]] uint8_t& dyn_spellId();
    // Get instance field reference: private System.Single FCDNLCMGDPC
    [[deprecated("Use field access instead!")]] float& dyn_FCDNLCMGDPC();
    // private System.Void FGGKEEKHDHN()
    // Offset: 0x1C007EC
    void FGGKEEKHDHN();
    // private System.Void AGAEICIFBAN(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1C00AD8
    void AGAEICIFBAN(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void DDJINHIPKCE()
    // Offset: 0x1C00AE4
    void DDJINHIPKCE();
    // private System.Void NAPGGGFOEKO()
    // Offset: 0x1C00DCC
    void NAPGGGFOEKO();
    // private System.Void MBFJOCLEGKK(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1C010B4
    void MBFJOCLEGKK(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void DIFLEMCKKEJ(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1C010BC
    void DIFLEMCKKEJ(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void BLIPCIAAIHI()
    // Offset: 0x1C010C8
    void BLIPCIAAIHI();
    // private System.Void FGPHMNHNKHP(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1C013B8
    void FGPHMNHNKHP(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void NIGDKALGFHM(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C013C0
    void NIGDKALGFHM(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void CHOJJBHJHIE(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1C013D4
    void CHOJJBHJHIE(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void IGOICEDENHI(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C013DC
    void IGOICEDENHI(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void ELJFKEDCIMN(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C013F0
    void ELJFKEDCIMN(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void BHNCGLFPILK(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01408
    void BHNCGLFPILK(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void DMNAKMCKANG(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01420
    void DMNAKMCKANG(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void FKAAOMJGDAB(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01438
    void FKAAOMJGDAB(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void LMMGGIFNEDC(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C0144C
    void LMMGGIFNEDC(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void EEMBCPKCOIL()
    // Offset: 0x1C01460
    void EEMBCPKCOIL();
    // private System.Void AMGJNJLJIFO()
    // Offset: 0x1C01750
    void AMGJNJLJIFO();
    // private System.Void JODAPKNAIBG(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01A38
    void JODAPKNAIBG(::MagicalActual::Grabber* BALIAOKIHIC);
    // public System.Void .ctor()
    // Offset: 0x1C01A4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ShamanTotem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ShamanTotem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ShamanTotem*, creationType>()));
    }
    // private System.Void HABDJCEKMNH()
    // Offset: 0x1C01AAC
    void HABDJCEKMNH();
    // private System.Void BOMGKOAFMOP(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01D98
    void BOMGKOAFMOP(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void FOEGEJAMHBC(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01DB0
    void FOEGEJAMHBC(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void MDNMHCKOCNO(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01DC0
    void MDNMHCKOCNO(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void FALIOLCPAII(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01DD4
    void FALIOLCPAII(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void PhysicsInteractableUngrip(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01DEC
    void PhysicsInteractableUngrip(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void ALEGNMLPLKG(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01DFC
    void ALEGNMLPLKG(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void CLPIBCLDBCM(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01E14
    void CLPIBCLDBCM(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void PhysicsInteractableGrip(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1C01E2C
    void PhysicsInteractableGrip(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void IBJKJHPFKOC(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x1C01E38
    void IBJKJHPFKOC(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void FixedUpdate()
    // Offset: 0x1C01E48
    void FixedUpdate();
    // private System.Void PABPOCMFEJK(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1C02124
    void PABPOCMFEJK(::MagicalActual::Grabber* FOIEAOKBGLM);
  }; // MagicalActual.ShamanTotem
  #pragma pack(pop)
  static check_size<sizeof(ShamanTotem), 52 + sizeof(float)> __MagicalActual_ShamanTotemSizeCheck;
  static_assert(sizeof(ShamanTotem) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::FGGKEEKHDHN
// Il2CppName: FGGKEEKHDHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)()>(&MagicalActual::ShamanTotem::FGGKEEKHDHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "FGGKEEKHDHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::AGAEICIFBAN
// Il2CppName: AGAEICIFBAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::AGAEICIFBAN)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "AGAEICIFBAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::DDJINHIPKCE
// Il2CppName: DDJINHIPKCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)()>(&MagicalActual::ShamanTotem::DDJINHIPKCE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "DDJINHIPKCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::NAPGGGFOEKO
// Il2CppName: NAPGGGFOEKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)()>(&MagicalActual::ShamanTotem::NAPGGGFOEKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "NAPGGGFOEKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::MBFJOCLEGKK
// Il2CppName: MBFJOCLEGKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::MBFJOCLEGKK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "MBFJOCLEGKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::DIFLEMCKKEJ
// Il2CppName: DIFLEMCKKEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::DIFLEMCKKEJ)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "DIFLEMCKKEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::BLIPCIAAIHI
// Il2CppName: BLIPCIAAIHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)()>(&MagicalActual::ShamanTotem::BLIPCIAAIHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "BLIPCIAAIHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::FGPHMNHNKHP
// Il2CppName: FGPHMNHNKHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::FGPHMNHNKHP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "FGPHMNHNKHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::NIGDKALGFHM
// Il2CppName: NIGDKALGFHM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::NIGDKALGFHM)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "NIGDKALGFHM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::CHOJJBHJHIE
// Il2CppName: CHOJJBHJHIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::CHOJJBHJHIE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "CHOJJBHJHIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::IGOICEDENHI
// Il2CppName: IGOICEDENHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::IGOICEDENHI)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "IGOICEDENHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::ELJFKEDCIMN
// Il2CppName: ELJFKEDCIMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::ELJFKEDCIMN)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "ELJFKEDCIMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::BHNCGLFPILK
// Il2CppName: BHNCGLFPILK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::BHNCGLFPILK)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "BHNCGLFPILK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::DMNAKMCKANG
// Il2CppName: DMNAKMCKANG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::DMNAKMCKANG)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "DMNAKMCKANG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::FKAAOMJGDAB
// Il2CppName: FKAAOMJGDAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::FKAAOMJGDAB)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "FKAAOMJGDAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::LMMGGIFNEDC
// Il2CppName: LMMGGIFNEDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::LMMGGIFNEDC)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "LMMGGIFNEDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::EEMBCPKCOIL
// Il2CppName: EEMBCPKCOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)()>(&MagicalActual::ShamanTotem::EEMBCPKCOIL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "EEMBCPKCOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::AMGJNJLJIFO
// Il2CppName: AMGJNJLJIFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)()>(&MagicalActual::ShamanTotem::AMGJNJLJIFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "AMGJNJLJIFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::JODAPKNAIBG
// Il2CppName: JODAPKNAIBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::JODAPKNAIBG)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "JODAPKNAIBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::HABDJCEKMNH
// Il2CppName: HABDJCEKMNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)()>(&MagicalActual::ShamanTotem::HABDJCEKMNH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "HABDJCEKMNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::BOMGKOAFMOP
// Il2CppName: BOMGKOAFMOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::BOMGKOAFMOP)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "BOMGKOAFMOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::FOEGEJAMHBC
// Il2CppName: FOEGEJAMHBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::FOEGEJAMHBC)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "FOEGEJAMHBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::MDNMHCKOCNO
// Il2CppName: MDNMHCKOCNO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::MDNMHCKOCNO)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "MDNMHCKOCNO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::FALIOLCPAII
// Il2CppName: FALIOLCPAII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::FALIOLCPAII)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "FALIOLCPAII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::PhysicsInteractableUngrip
// Il2CppName: PhysicsInteractableUngrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::PhysicsInteractableUngrip)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "PhysicsInteractableUngrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::ALEGNMLPLKG
// Il2CppName: ALEGNMLPLKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::ALEGNMLPLKG)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "ALEGNMLPLKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::CLPIBCLDBCM
// Il2CppName: CLPIBCLDBCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::CLPIBCLDBCM)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "CLPIBCLDBCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::PhysicsInteractableGrip
// Il2CppName: PhysicsInteractableGrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::PhysicsInteractableGrip)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "PhysicsInteractableGrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::IBJKJHPFKOC
// Il2CppName: IBJKJHPFKOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::IBJKJHPFKOC)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "IBJKJHPFKOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)()>(&MagicalActual::ShamanTotem::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ShamanTotem::PABPOCMFEJK
// Il2CppName: PABPOCMFEJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ShamanTotem::*)(::MagicalActual::Grabber*)>(&MagicalActual::ShamanTotem::PABPOCMFEJK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ShamanTotem*), "PABPOCMFEJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
