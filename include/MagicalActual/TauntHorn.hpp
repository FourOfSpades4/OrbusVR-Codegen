// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Swordboard
  class Swordboard;
  // Forward declaring type: Grabber
  class Grabber;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: WaitForSeconds
  class WaitForSeconds;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: TauntHorn
  class TauntHorn;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::TauntHorn);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::TauntHorn*, "MagicalActual", "TauntHorn");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.TauntHorn
  // [TokenAttribute] Offset: FFFFFFFF
  class TauntHorn : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::TauntHorn::$SnapBack$d__10
    class $SnapBack$d__10;
    // Nested type: ::MagicalActual::TauntHorn::$DoTaunt$d__13
    class $DoTaunt$d__13;
    public:
    // private UnityEngine.Rigidbody EIPMBKLODIJ
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rigidbody* EIPMBKLODIJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private UnityEngine.Transform ONANMANNPAN
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Transform* ONANMANNPAN;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Quaternion IDFEBFFILHO
    // Size: 0x10
    // Offset: 0x28
    ::UnityEngine::Quaternion IDFEBFFILHO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private UnityEngine.Vector3 BHKMOANPDJK
    // Size: 0xC
    // Offset: 0x38
    ::UnityEngine::Vector3 BHKMOANPDJK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Boolean GGIIBLPLFDE
    // Size: 0x1
    // Offset: 0x44
    bool GGIIBLPLFDE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: GGIIBLPLFDE and: mySwordboard
    char __padding4[0x3] = {};
    // public MagicalActual.Swordboard mySwordboard
    // Size: 0x8
    // Offset: 0x48
    ::MagicalActual::Swordboard* mySwordboard;
    // Field size check
    static_assert(sizeof(::MagicalActual::Swordboard*) == 0x8);
    // private System.Boolean BGAMFIMIADO
    // Size: 0x1
    // Offset: 0x50
    bool BGAMFIMIADO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean HKFLFLKOPNG
    // Size: 0x1
    // Offset: 0x51
    bool HKFLFLKOPNG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HKFLFLKOPNG and: JHIDIGHMEIB
    char __padding7[0x6] = {};
    // private UnityEngine.WaitForSeconds JHIDIGHMEIB
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::WaitForSeconds* JHIDIGHMEIB;
    // Field size check
    static_assert(sizeof(::UnityEngine::WaitForSeconds*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Rigidbody EIPMBKLODIJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_EIPMBKLODIJ();
    // Get instance field reference: private UnityEngine.Transform ONANMANNPAN
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_ONANMANNPAN();
    // Get instance field reference: private UnityEngine.Quaternion IDFEBFFILHO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_IDFEBFFILHO();
    // Get instance field reference: private UnityEngine.Vector3 BHKMOANPDJK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_BHKMOANPDJK();
    // Get instance field reference: private System.Boolean GGIIBLPLFDE
    [[deprecated("Use field access instead!")]] bool& dyn_GGIIBLPLFDE();
    // Get instance field reference: public MagicalActual.Swordboard mySwordboard
    [[deprecated("Use field access instead!")]] ::MagicalActual::Swordboard*& dyn_mySwordboard();
    // Get instance field reference: private System.Boolean BGAMFIMIADO
    [[deprecated("Use field access instead!")]] bool& dyn_BGAMFIMIADO();
    // Get instance field reference: private System.Boolean HKFLFLKOPNG
    [[deprecated("Use field access instead!")]] bool& dyn_HKFLFLKOPNG();
    // Get instance field reference: private UnityEngine.WaitForSeconds JHIDIGHMEIB
    [[deprecated("Use field access instead!")]] ::UnityEngine::WaitForSeconds*& dyn_JHIDIGHMEIB();
    // private System.Void BEPJNOBCMMA()
    // Offset: 0x166C258
    void BEPJNOBCMMA();
    // private System.Collections.IEnumerator JEFBPEDNEHN()
    // Offset: 0x166C260
    ::System::Collections::IEnumerator* JEFBPEDNEHN();
    // private System.Void CKOKMNDKDFN()
    // Offset: 0x166C304
    void CKOKMNDKDFN();
    // private System.Void IJHGMFJADBP()
    // Offset: 0x166C3AC
    void IJHGMFJADBP();
    // private System.Void PhysicsInteractableUngrip(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x166C3B4
    void PhysicsInteractableUngrip(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void APINNLEGJBG()
    // Offset: 0x166C45C
    void APINNLEGJBG();
    // private System.Collections.IEnumerator PDAHJJHGBFG()
    // Offset: 0x166C504
    ::System::Collections::IEnumerator* PDAHJJHGBFG();
    // private System.Collections.IEnumerator JLELPELBLHM()
    // Offset: 0x166C57C
    ::System::Collections::IEnumerator* JLELPELBLHM();
    // private System.Void LODDPHAEIAD(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x166C5F4
    void LODDPHAEIAD(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void PhysicsInteractableGrip(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x166C5FC
    void PhysicsInteractableGrip(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Collections.IEnumerator DBPOBLODJAE()
    // Offset: 0x166C608
    ::System::Collections::IEnumerator* DBPOBLODJAE();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x166C6A8
    void GECHLDPLPCC();
    // private System.Collections.IEnumerator LPCBCPOONFB()
    // Offset: 0x166C7A8
    ::System::Collections::IEnumerator* LPCBCPOONFB();
    // public System.Void .ctor()
    // Offset: 0x166C81C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TauntHorn* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::TauntHorn::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TauntHorn*, creationType>()));
    }
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x166C824
    void GHLPBOJJHNG();
    // private System.Void GMGFCMJCALC(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x166C924
    void GMGFCMJCALC(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void HMHPJNKPLLN(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x166C92C
    void HMHPJNKPLLN(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void MLAEOIBIADP(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x166C938
    void MLAEOIBIADP(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void PlayerStoppedFacing()
    // Offset: 0x166C944
    void PlayerStoppedFacing();
    // private System.Void EJNKFLIEGKG()
    // Offset: 0x166C94C
    void EJNKFLIEGKG();
    // private System.Void FJMGMOMABFO(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x166C958
    void FJMGMOMABFO(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Collections.IEnumerator DHOJEPCGFOP()
    // Offset: 0x166CA04
    ::System::Collections::IEnumerator* DHOJEPCGFOP();
    // private System.Void PlayerFacing()
    // Offset: 0x166CA78
    void PlayerFacing();
    // private System.Void PPOFFEMHLKB()
    // Offset: 0x166CB20
    void PPOFFEMHLKB();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x166CB28
    void HKINNMLBMMG();
    // private System.Collections.IEnumerator PEIOFOIGGCI()
    // Offset: 0x166C334
    ::System::Collections::IEnumerator* PEIOFOIGGCI();
    // private System.Collections.IEnumerator CONJJFLOKFK()
    // Offset: 0x166C490
    ::System::Collections::IEnumerator* CONJJFLOKFK();
    // private System.Collections.IEnumerator IKNOAIJEEJF()
    // Offset: 0x166CC28
    ::System::Collections::IEnumerator* IKNOAIJEEJF();
    // private System.Void FJGIFGPLPFI(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x166CC9C
    void FJGIFGPLPFI(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Collections.IEnumerator SnapBack()
    // Offset: 0x166C3E8
    ::System::Collections::IEnumerator* SnapBack();
    // private System.Collections.IEnumerator EFGOHJILPPA()
    // Offset: 0x166CCD4
    ::System::Collections::IEnumerator* EFGOHJILPPA();
    // private System.Collections.IEnumerator PMEAGMADKCP()
    // Offset: 0x166CD4C
    ::System::Collections::IEnumerator* PMEAGMADKCP();
    // private System.Void LFDLOMLCGPB()
    // Offset: 0x166CDC0
    void LFDLOMLCGPB();
    // private System.Collections.IEnumerator FHEDDHKGFFN()
    // Offset: 0x166CDC8
    ::System::Collections::IEnumerator* FHEDDHKGFFN();
    // private System.Collections.IEnumerator AJNBBNOAPNO()
    // Offset: 0x166CE3C
    ::System::Collections::IEnumerator* AJNBBNOAPNO();
    // private System.Void DMNAKMCKANG(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x166CEB4
    void DMNAKMCKANG(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Collections.IEnumerator GNPPBCPNEBC()
    // Offset: 0x166CEEC
    ::System::Collections::IEnumerator* GNPPBCPNEBC();
    // private System.Collections.IEnumerator IGPLPGINNOJ()
    // Offset: 0x166C990
    ::System::Collections::IEnumerator* IGPLPGINNOJ();
    // private System.Collections.IEnumerator NAIONOAPNOH()
    // Offset: 0x166CAAC
    ::System::Collections::IEnumerator* NAIONOAPNOH();
    // private System.Void NHLNJFGKAJC()
    // Offset: 0x166CF60
    void NHLNJFGKAJC();
    // private System.Void EEBPBNKLIHI(MagicalActual.Grabber BALIAOKIHIC)
    // Offset: 0x166CF94
    void EEBPBNKLIHI(::MagicalActual::Grabber* BALIAOKIHIC);
    // private System.Void Start()
    // Offset: 0x166D040
    void Start();
    // private System.Collections.IEnumerator AODAOEALJKB()
    // Offset: 0x166CFCC
    ::System::Collections::IEnumerator* AODAOEALJKB();
  }; // MagicalActual.TauntHorn
  #pragma pack(pop)
  static check_size<sizeof(TauntHorn), 88 + sizeof(::UnityEngine::WaitForSeconds*)> __MagicalActual_TauntHornSizeCheck;
  static_assert(sizeof(TauntHorn) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::TauntHorn::BEPJNOBCMMA
// Il2CppName: BEPJNOBCMMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::BEPJNOBCMMA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "BEPJNOBCMMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::JEFBPEDNEHN
// Il2CppName: JEFBPEDNEHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::JEFBPEDNEHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "JEFBPEDNEHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::CKOKMNDKDFN
// Il2CppName: CKOKMNDKDFN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::CKOKMNDKDFN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "CKOKMNDKDFN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::IJHGMFJADBP
// Il2CppName: IJHGMFJADBP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::IJHGMFJADBP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "IJHGMFJADBP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::PhysicsInteractableUngrip
// Il2CppName: PhysicsInteractableUngrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)(::MagicalActual::Grabber*)>(&MagicalActual::TauntHorn::PhysicsInteractableUngrip)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "PhysicsInteractableUngrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::APINNLEGJBG
// Il2CppName: APINNLEGJBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::APINNLEGJBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "APINNLEGJBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::PDAHJJHGBFG
// Il2CppName: PDAHJJHGBFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::PDAHJJHGBFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "PDAHJJHGBFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::JLELPELBLHM
// Il2CppName: JLELPELBLHM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::JLELPELBLHM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "JLELPELBLHM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::LODDPHAEIAD
// Il2CppName: LODDPHAEIAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)(::MagicalActual::Grabber*)>(&MagicalActual::TauntHorn::LODDPHAEIAD)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "LODDPHAEIAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::PhysicsInteractableGrip
// Il2CppName: PhysicsInteractableGrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)(::MagicalActual::Grabber*)>(&MagicalActual::TauntHorn::PhysicsInteractableGrip)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "PhysicsInteractableGrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::DBPOBLODJAE
// Il2CppName: DBPOBLODJAE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::DBPOBLODJAE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "DBPOBLODJAE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::LPCBCPOONFB
// Il2CppName: LPCBCPOONFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::LPCBCPOONFB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "LPCBCPOONFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::TauntHorn::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::GMGFCMJCALC
// Il2CppName: GMGFCMJCALC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)(::MagicalActual::Grabber*)>(&MagicalActual::TauntHorn::GMGFCMJCALC)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "GMGFCMJCALC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::HMHPJNKPLLN
// Il2CppName: HMHPJNKPLLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)(::MagicalActual::Grabber*)>(&MagicalActual::TauntHorn::HMHPJNKPLLN)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "HMHPJNKPLLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::MLAEOIBIADP
// Il2CppName: MLAEOIBIADP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)(::MagicalActual::Grabber*)>(&MagicalActual::TauntHorn::MLAEOIBIADP)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "MLAEOIBIADP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::PlayerStoppedFacing
// Il2CppName: PlayerStoppedFacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::PlayerStoppedFacing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "PlayerStoppedFacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::EJNKFLIEGKG
// Il2CppName: EJNKFLIEGKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::EJNKFLIEGKG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "EJNKFLIEGKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::FJMGMOMABFO
// Il2CppName: FJMGMOMABFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)(::MagicalActual::Grabber*)>(&MagicalActual::TauntHorn::FJMGMOMABFO)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "FJMGMOMABFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::DHOJEPCGFOP
// Il2CppName: DHOJEPCGFOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::DHOJEPCGFOP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "DHOJEPCGFOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::PlayerFacing
// Il2CppName: PlayerFacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::PlayerFacing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "PlayerFacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::PPOFFEMHLKB
// Il2CppName: PPOFFEMHLKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::PPOFFEMHLKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "PPOFFEMHLKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::PEIOFOIGGCI
// Il2CppName: PEIOFOIGGCI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::PEIOFOIGGCI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "PEIOFOIGGCI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::CONJJFLOKFK
// Il2CppName: CONJJFLOKFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::CONJJFLOKFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "CONJJFLOKFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::IKNOAIJEEJF
// Il2CppName: IKNOAIJEEJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::IKNOAIJEEJF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "IKNOAIJEEJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::FJGIFGPLPFI
// Il2CppName: FJGIFGPLPFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)(::MagicalActual::Grabber*)>(&MagicalActual::TauntHorn::FJGIFGPLPFI)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "FJGIFGPLPFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::SnapBack
// Il2CppName: SnapBack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::SnapBack)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "SnapBack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::EFGOHJILPPA
// Il2CppName: EFGOHJILPPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::EFGOHJILPPA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "EFGOHJILPPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::PMEAGMADKCP
// Il2CppName: PMEAGMADKCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::PMEAGMADKCP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "PMEAGMADKCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::LFDLOMLCGPB
// Il2CppName: LFDLOMLCGPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::LFDLOMLCGPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "LFDLOMLCGPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::FHEDDHKGFFN
// Il2CppName: FHEDDHKGFFN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::FHEDDHKGFFN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "FHEDDHKGFFN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::AJNBBNOAPNO
// Il2CppName: AJNBBNOAPNO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::AJNBBNOAPNO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "AJNBBNOAPNO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::DMNAKMCKANG
// Il2CppName: DMNAKMCKANG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)(::MagicalActual::Grabber*)>(&MagicalActual::TauntHorn::DMNAKMCKANG)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "DMNAKMCKANG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::GNPPBCPNEBC
// Il2CppName: GNPPBCPNEBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::GNPPBCPNEBC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "GNPPBCPNEBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::IGPLPGINNOJ
// Il2CppName: IGPLPGINNOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::IGPLPGINNOJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "IGPLPGINNOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::NAIONOAPNOH
// Il2CppName: NAIONOAPNOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::NAIONOAPNOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "NAIONOAPNOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::NHLNJFGKAJC
// Il2CppName: NHLNJFGKAJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::NHLNJFGKAJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "NHLNJFGKAJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::EEBPBNKLIHI
// Il2CppName: EEBPBNKLIHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)(::MagicalActual::Grabber*)>(&MagicalActual::TauntHorn::EEBPBNKLIHI)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "EEBPBNKLIHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TauntHorn::AODAOEALJKB
// Il2CppName: AODAOEALJKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TauntHorn::*)()>(&MagicalActual::TauntHorn::AODAOEALJKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TauntHorn*), "AODAOEALJKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
