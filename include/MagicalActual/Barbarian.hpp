// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: BarbarianAxe
  class BarbarianAxe;
  // Forward declaring type: BarbarianTarget
  class BarbarianTarget;
  // Forward declaring type: PlayerCharacter
  class PlayerCharacter;
  // Forward declaring type: PlayerClass
  class PlayerClass;
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: OrbusNetManager
  class OrbusNetManager;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ClickedEventArgs
  struct ClickedEventArgs;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Barbarian
  class Barbarian;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Barbarian);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Barbarian*, "MagicalActual", "Barbarian");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0xE0
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Barbarian
  // [TokenAttribute] Offset: FFFFFFFF
  class Barbarian : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::Barbarian::axeAbilityIdx
    struct axeAbilityIdx;
    // Nested type: ::MagicalActual::Barbarian::$$c__DisplayClass35_0
    class $$c__DisplayClass35_0;
    // Nested type: ::MagicalActual::Barbarian::$$c__DisplayClass36_0
    class $$c__DisplayClass36_0;
    // Nested type: ::MagicalActual::Barbarian::$$c__DisplayClass38_0
    class $$c__DisplayClass38_0;
    public:
    // public MagicalActual.BarbarianAxe axeLeft
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::BarbarianAxe* axeLeft;
    // Field size check
    static_assert(sizeof(::MagicalActual::BarbarianAxe*) == 0x8);
    // public MagicalActual.BarbarianAxe axeRight
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::BarbarianAxe* axeRight;
    // Field size check
    static_assert(sizeof(::MagicalActual::BarbarianAxe*) == 0x8);
    // private System.Single PMELGNJJFDD
    // Size: 0x4
    // Offset: 0x28
    float PMELGNJJFDD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single LAEOENGPBJL
    // Size: 0x4
    // Offset: 0x2C
    float LAEOENGPBJL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MMJHKPCDMIM
    // Size: 0x4
    // Offset: 0x30
    float MMJHKPCDMIM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: MMJHKPCDMIM and: barbarianBeatPrefab
    char __padding4[0x4] = {};
    // public UnityEngine.GameObject barbarianBeatPrefab
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* barbarianBeatPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxHit
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* vfxHit;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxBlood
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* vfxBlood;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxTaunt
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GameObject* vfxTaunt;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean CBAGABHFFMA
    // Size: 0x1
    // Offset: 0x58
    bool CBAGABHFFMA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean LCLNEEMAIEN
    // Size: 0x1
    // Offset: 0x59
    bool LCLNEEMAIEN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: LCLNEEMAIEN and: OMLNIIBDLNG
    char __padding10[0x6] = {};
    // private UnityEngine.UI.Image OMLNIIBDLNG
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::UI::Image* OMLNIIBDLNG;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private System.Single HKPOGBIAGBO
    // Size: 0x4
    // Offset: 0x68
    float HKPOGBIAGBO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single BLOHAMJKLBC
    // Size: 0x4
    // Offset: 0x6C
    float BLOHAMJKLBC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.UI.Image GPPDIBPBIPJ
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::UI::Image* GPPDIBPBIPJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private System.Single FJBCDOIMFOI
    // Size: 0x4
    // Offset: 0x78
    float FJBCDOIMFOI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single HBEPFNLAKHG
    // Size: 0x4
    // Offset: 0x7C
    float HBEPFNLAKHG;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.UI.Image AHIODJENCPL
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::UI::Image* AHIODJENCPL;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private System.Single IEFLJJJMNII
    // Size: 0x4
    // Offset: 0x88
    float IEFLJJJMNII;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single EMOIDALBJHI
    // Size: 0x4
    // Offset: 0x8C
    float EMOIDALBJHI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.UI.Image IPAKBPLCKIH
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::UI::Image* IPAKBPLCKIH;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private System.Collections.Generic.List`1<MagicalActual.BarbarianTarget> MAFDLGCKFAJ
    // Size: 0x8
    // Offset: 0x98
    ::System::Collections::Generic::List_1<::MagicalActual::BarbarianTarget*>* MAFDLGCKFAJ;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::MagicalActual::BarbarianTarget*>*) == 0x8);
    // public MagicalActual.PlayerCharacter myPlayer
    // Size: 0x8
    // Offset: 0xA0
    ::MagicalActual::PlayerCharacter* myPlayer;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerCharacter*) == 0x8);
    // private MagicalActual.PlayerClass FNINBDEICCD
    // Size: 0x8
    // Offset: 0xA8
    ::MagicalActual::PlayerClass* FNINBDEICCD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerClass*) == 0x8);
    // private MagicalActual.PlayerAvatar EENJNFDNJBD
    // Size: 0x8
    // Offset: 0xB0
    ::MagicalActual::PlayerAvatar* EENJNFDNJBD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // private System.Boolean HNFCLAFDJBD
    // Size: 0x1
    // Offset: 0xB8
    bool HNFCLAFDJBD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HNFCLAFDJBD and: fury
    char __padding25[0x3] = {};
    // public System.Int32 fury
    // Size: 0x4
    // Offset: 0xBC
    int fury;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 maxFury
    // Size: 0x4
    // Offset: 0xC0
    int maxFury;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: maxFury and: OrbusNetComponent
    char __padding27[0x4] = {};
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0xC8
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0xD0
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.OrbusNetManager KPMLFHPFLBL
    // Size: 0x8
    // Offset: 0xD8
    ::MagicalActual::OrbusNetManager* KPMLFHPFLBL;
    // Field size check
    static_assert(sizeof(::MagicalActual::OrbusNetManager*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public MagicalActual.BarbarianAxe axeLeft
    [[deprecated("Use field access instead!")]] ::MagicalActual::BarbarianAxe*& dyn_axeLeft();
    // Get instance field reference: public MagicalActual.BarbarianAxe axeRight
    [[deprecated("Use field access instead!")]] ::MagicalActual::BarbarianAxe*& dyn_axeRight();
    // Get instance field reference: private System.Single PMELGNJJFDD
    [[deprecated("Use field access instead!")]] float& dyn_PMELGNJJFDD();
    // Get instance field reference: private System.Single LAEOENGPBJL
    [[deprecated("Use field access instead!")]] float& dyn_LAEOENGPBJL();
    // Get instance field reference: private System.Single MMJHKPCDMIM
    [[deprecated("Use field access instead!")]] float& dyn_MMJHKPCDMIM();
    // Get instance field reference: public UnityEngine.GameObject barbarianBeatPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_barbarianBeatPrefab();
    // Get instance field reference: public UnityEngine.GameObject vfxHit
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxHit();
    // Get instance field reference: public UnityEngine.GameObject vfxBlood
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxBlood();
    // Get instance field reference: public UnityEngine.GameObject vfxTaunt
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxTaunt();
    // Get instance field reference: private System.Boolean CBAGABHFFMA
    [[deprecated("Use field access instead!")]] bool& dyn_CBAGABHFFMA();
    // Get instance field reference: private System.Boolean LCLNEEMAIEN
    [[deprecated("Use field access instead!")]] bool& dyn_LCLNEEMAIEN();
    // Get instance field reference: private UnityEngine.UI.Image OMLNIIBDLNG
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_OMLNIIBDLNG();
    // Get instance field reference: private System.Single HKPOGBIAGBO
    [[deprecated("Use field access instead!")]] float& dyn_HKPOGBIAGBO();
    // Get instance field reference: private System.Single BLOHAMJKLBC
    [[deprecated("Use field access instead!")]] float& dyn_BLOHAMJKLBC();
    // Get instance field reference: private UnityEngine.UI.Image GPPDIBPBIPJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_GPPDIBPBIPJ();
    // Get instance field reference: private System.Single FJBCDOIMFOI
    [[deprecated("Use field access instead!")]] float& dyn_FJBCDOIMFOI();
    // Get instance field reference: private System.Single HBEPFNLAKHG
    [[deprecated("Use field access instead!")]] float& dyn_HBEPFNLAKHG();
    // Get instance field reference: private UnityEngine.UI.Image AHIODJENCPL
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_AHIODJENCPL();
    // Get instance field reference: private System.Single IEFLJJJMNII
    [[deprecated("Use field access instead!")]] float& dyn_IEFLJJJMNII();
    // Get instance field reference: private System.Single EMOIDALBJHI
    [[deprecated("Use field access instead!")]] float& dyn_EMOIDALBJHI();
    // Get instance field reference: private UnityEngine.UI.Image IPAKBPLCKIH
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_IPAKBPLCKIH();
    // Get instance field reference: private System.Collections.Generic.List`1<MagicalActual.BarbarianTarget> MAFDLGCKFAJ
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::MagicalActual::BarbarianTarget*>*& dyn_MAFDLGCKFAJ();
    // Get instance field reference: public MagicalActual.PlayerCharacter myPlayer
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerCharacter*& dyn_myPlayer();
    // Get instance field reference: private MagicalActual.PlayerClass FNINBDEICCD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerClass*& dyn_FNINBDEICCD();
    // Get instance field reference: private MagicalActual.PlayerAvatar EENJNFDNJBD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_EENJNFDNJBD();
    // Get instance field reference: private System.Boolean HNFCLAFDJBD
    [[deprecated("Use field access instead!")]] bool& dyn_HNFCLAFDJBD();
    // Get instance field reference: public System.Int32 fury
    [[deprecated("Use field access instead!")]] int& dyn_fury();
    // Get instance field reference: public System.Int32 maxFury
    [[deprecated("Use field access instead!")]] int& dyn_maxFury();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private MagicalActual.OrbusNetManager KPMLFHPFLBL
    [[deprecated("Use field access instead!")]] ::MagicalActual::OrbusNetManager*& dyn_KPMLFHPFLBL();
    // private System.Void PLAGAHDOGEM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10D0148
    void PLAGAHDOGEM(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void .ctor()
    // Offset: 0x10D02BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Barbarian* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Barbarian::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Barbarian*, creationType>()));
    }
    // private System.Void BMMHOJFIDDG(UnityEngine.GameObject BHIKMAFICAJ, System.Int32 CMHBEGEOMJF)
    // Offset: 0x10D0340
    void BMMHOJFIDDG(::UnityEngine::GameObject* BHIKMAFICAJ, int CMHBEGEOMJF);
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x10D0434
    void NNDKJCJFIAK();
    // private System.Void MHLJLDAOGAF(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x10D071C
    void MHLJLDAOGAF(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void FPAALNFGCBO(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10D0C94
    void FPAALNFGCBO(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x10D0E54
    void BDEDGNGMHMN();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x10D113C
    void KBDGAPMJGLG();
    // private System.Void Start()
    // Offset: 0x10D141C
    void Start();
    // private System.Void HBNLOELFBGO(System.Int32 DDDGFHPKCAJ)
    // Offset: 0x10D09DC
    void HBNLOELFBGO(int DDDGFHPKCAJ);
    // public System.Void KMPPLBBIMGJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x10D170C
    void KMPPLBBIMGJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void CBJLCNPACLC(System.Int32 DDDGFHPKCAJ)
    // Offset: 0x10D0880
    void CBJLCNPACLC(int DDDGFHPKCAJ);
    // public System.Void JJEJNGMIMOI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x10D1BC4
    void JJEJNGMIMOI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void BKHIGDBDOFL(System.Object OMLPNCLFFMJ)
    // Offset: 0x10D207C
    void BKHIGDBDOFL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BONHIOCGMFB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10D20E4
    void BONHIOCGMFB(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void CCGFOICBBAJ()
    // Offset: 0x10D0D34
    void CCGFOICBBAJ();
    // private System.Void AINOIADKFJG(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10D2830
    void AINOIADKFJG(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void MMJIKEBHBJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x10D29A4
    void MMJIKEBHBJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JCOEAIILOND()
    // Offset: 0x10D2E5C
    void JCOEAIILOND();
    // private System.Void BKKICCCHBBH(MagicalActual.BarbarianTarget AHEELFEFBHD)
    // Offset: 0x10D3788
    void BKKICCCHBBH(::MagicalActual::BarbarianTarget* AHEELFEFBHD);
    // private System.Void LMIEMOHCHBD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10D38AC
    void LMIEMOHCHBD(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x10D3948
    void MLGBKBMHHLE();
    // private System.Void LNIONLPIBKB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10D3C30
    void LNIONLPIBKB(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x10D3DA4
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void CCPFBKLKPLJ(MagicalActual.BarbarianTarget AHEELFEFBHD)
    // Offset: 0x10D41FC
    void CCPFBKLKPLJ(::MagicalActual::BarbarianTarget* AHEELFEFBHD);
    // private System.Void KGOKEIDIIHH()
    // Offset: 0x10D4320
    void KGOKEIDIIHH();
    // private System.Void KFFHKPMHMFK(MagicalActual.BarbarianTarget AHEELFEFBHD)
    // Offset: 0x10D4444
    void KFFHKPMHMFK(::MagicalActual::BarbarianTarget* AHEELFEFBHD);
    // private System.Void DIMFBAHINMJ(UnityEngine.GameObject BHIKMAFICAJ, System.Int32 CMHBEGEOMJF)
    // Offset: 0x10D369C
    void DIMFBAHINMJ(::UnityEngine::GameObject* BHIKMAFICAJ, int CMHBEGEOMJF);
    // private System.Void BIMCNDAFFJC()
    // Offset: 0x10D4568
    void BIMCNDAFFJC();
    // private System.Void IJIJCNOICEO(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10D4D8C
    void IJIJCNOICEO(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void KLIFNNNMOBO(System.Object OMLPNCLFFMJ)
    // Offset: 0x10D54E4
    void KLIFNNNMOBO(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BDKGMLBENBB(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x10D554C
    void BDKGMLBENBB(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void PMKHCMBGMOJ(MagicalActual.BarbarianTarget AHEELFEFBHD)
    // Offset: 0x10D5620
    void PMKHCMBGMOJ(::MagicalActual::BarbarianTarget* AHEELFEFBHD);
    // private System.Void EAAJPIPOFDB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10D5744
    void EAAJPIPOFDB(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void FixedUpdate()
    // Offset: 0x10D58B8
    void FixedUpdate();
    // private System.Void FMCGBKFJOIP()
    // Offset: 0x10D60E0
    void FMCGBKFJOIP();
    // private System.Void PGHOIIPKHEK(System.Int32 DDDGFHPKCAJ)
    // Offset: 0x10D0B38
    void PGHOIIPKHEK(int DDDGFHPKCAJ);
  }; // MagicalActual.Barbarian
  #pragma pack(pop)
  static check_size<sizeof(Barbarian), 216 + sizeof(::MagicalActual::OrbusNetManager*)> __MagicalActual_BarbarianSizeCheck;
  static_assert(sizeof(Barbarian) == 0xE0);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Barbarian::PLAGAHDOGEM
// Il2CppName: PLAGAHDOGEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::System::Collections::ArrayList*)>(&MagicalActual::Barbarian::PLAGAHDOGEM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "PLAGAHDOGEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Barbarian::BMMHOJFIDDG
// Il2CppName: BMMHOJFIDDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::UnityEngine::GameObject*, int)>(&MagicalActual::Barbarian::BMMHOJFIDDG)> {
  static const MethodInfo* get() {
    static auto* BHIKMAFICAJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* CMHBEGEOMJF = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "BMMHOJFIDDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHIKMAFICAJ, CMHBEGEOMJF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)()>(&MagicalActual::Barbarian::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::MHLJLDAOGAF
// Il2CppName: MHLJLDAOGAF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Barbarian::MHLJLDAOGAF)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "MHLJLDAOGAF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::FPAALNFGCBO
// Il2CppName: FPAALNFGCBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::System::Collections::ArrayList*)>(&MagicalActual::Barbarian::FPAALNFGCBO)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "FPAALNFGCBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)()>(&MagicalActual::Barbarian::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)()>(&MagicalActual::Barbarian::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)()>(&MagicalActual::Barbarian::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::HBNLOELFBGO
// Il2CppName: HBNLOELFBGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(int)>(&MagicalActual::Barbarian::HBNLOELFBGO)> {
  static const MethodInfo* get() {
    static auto* DDDGFHPKCAJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "HBNLOELFBGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DDDGFHPKCAJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::KMPPLBBIMGJ
// Il2CppName: KMPPLBBIMGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Barbarian::KMPPLBBIMGJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "KMPPLBBIMGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::CBJLCNPACLC
// Il2CppName: CBJLCNPACLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(int)>(&MagicalActual::Barbarian::CBJLCNPACLC)> {
  static const MethodInfo* get() {
    static auto* DDDGFHPKCAJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "CBJLCNPACLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DDDGFHPKCAJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::JJEJNGMIMOI
// Il2CppName: JJEJNGMIMOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Barbarian::JJEJNGMIMOI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "JJEJNGMIMOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::BKHIGDBDOFL
// Il2CppName: BKHIGDBDOFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::Il2CppObject*)>(&MagicalActual::Barbarian::BKHIGDBDOFL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "BKHIGDBDOFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::BONHIOCGMFB
// Il2CppName: BONHIOCGMFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::System::Collections::ArrayList*)>(&MagicalActual::Barbarian::BONHIOCGMFB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "BONHIOCGMFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::CCGFOICBBAJ
// Il2CppName: CCGFOICBBAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)()>(&MagicalActual::Barbarian::CCGFOICBBAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "CCGFOICBBAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::AINOIADKFJG
// Il2CppName: AINOIADKFJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::System::Collections::ArrayList*)>(&MagicalActual::Barbarian::AINOIADKFJG)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "AINOIADKFJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::MMJIKEBHBJF
// Il2CppName: MMJIKEBHBJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Barbarian::MMJIKEBHBJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "MMJIKEBHBJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::JCOEAIILOND
// Il2CppName: JCOEAIILOND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)()>(&MagicalActual::Barbarian::JCOEAIILOND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "JCOEAIILOND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::BKKICCCHBBH
// Il2CppName: BKKICCCHBBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::MagicalActual::BarbarianTarget*)>(&MagicalActual::Barbarian::BKKICCCHBBH)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "BarbarianTarget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "BKKICCCHBBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::LMIEMOHCHBD
// Il2CppName: LMIEMOHCHBD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::System::Collections::ArrayList*)>(&MagicalActual::Barbarian::LMIEMOHCHBD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "LMIEMOHCHBD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)()>(&MagicalActual::Barbarian::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::LNIONLPIBKB
// Il2CppName: LNIONLPIBKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::System::Collections::ArrayList*)>(&MagicalActual::Barbarian::LNIONLPIBKB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "LNIONLPIBKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Barbarian::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::CCPFBKLKPLJ
// Il2CppName: CCPFBKLKPLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::MagicalActual::BarbarianTarget*)>(&MagicalActual::Barbarian::CCPFBKLKPLJ)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "BarbarianTarget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "CCPFBKLKPLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::KGOKEIDIIHH
// Il2CppName: KGOKEIDIIHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)()>(&MagicalActual::Barbarian::KGOKEIDIIHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "KGOKEIDIIHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::KFFHKPMHMFK
// Il2CppName: KFFHKPMHMFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::MagicalActual::BarbarianTarget*)>(&MagicalActual::Barbarian::KFFHKPMHMFK)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "BarbarianTarget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "KFFHKPMHMFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::DIMFBAHINMJ
// Il2CppName: DIMFBAHINMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::UnityEngine::GameObject*, int)>(&MagicalActual::Barbarian::DIMFBAHINMJ)> {
  static const MethodInfo* get() {
    static auto* BHIKMAFICAJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* CMHBEGEOMJF = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "DIMFBAHINMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHIKMAFICAJ, CMHBEGEOMJF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::BIMCNDAFFJC
// Il2CppName: BIMCNDAFFJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)()>(&MagicalActual::Barbarian::BIMCNDAFFJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "BIMCNDAFFJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::IJIJCNOICEO
// Il2CppName: IJIJCNOICEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::System::Collections::ArrayList*)>(&MagicalActual::Barbarian::IJIJCNOICEO)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "IJIJCNOICEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::KLIFNNNMOBO
// Il2CppName: KLIFNNNMOBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::Il2CppObject*)>(&MagicalActual::Barbarian::KLIFNNNMOBO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "KLIFNNNMOBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::BDKGMLBENBB
// Il2CppName: BDKGMLBENBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Barbarian::BDKGMLBENBB)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "BDKGMLBENBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::PMKHCMBGMOJ
// Il2CppName: PMKHCMBGMOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::MagicalActual::BarbarianTarget*)>(&MagicalActual::Barbarian::PMKHCMBGMOJ)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "BarbarianTarget")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "PMKHCMBGMOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::EAAJPIPOFDB
// Il2CppName: EAAJPIPOFDB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(::System::Collections::ArrayList*)>(&MagicalActual::Barbarian::EAAJPIPOFDB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "EAAJPIPOFDB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)()>(&MagicalActual::Barbarian::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::FMCGBKFJOIP
// Il2CppName: FMCGBKFJOIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)()>(&MagicalActual::Barbarian::FMCGBKFJOIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "FMCGBKFJOIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Barbarian::PGHOIIPKHEK
// Il2CppName: PGHOIIPKHEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Barbarian::*)(int)>(&MagicalActual::Barbarian::PGHOIIPKHEK)> {
  static const MethodInfo* get() {
    static auto* DDDGFHPKCAJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Barbarian*), "PGHOIIPKHEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DDDGFHPKCAJ});
  }
};
