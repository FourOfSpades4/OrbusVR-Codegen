// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: BezierSpline
  class BezierSpline;
  // Forward declaring type: BezierSplineVelocity
  class BezierSplineVelocity;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: BezierSplineWalker
  class BezierSplineWalker;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::BezierSplineWalker);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::BezierSplineWalker*, "MagicalActual", "BezierSplineWalker");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.BezierSplineWalker
  // [TokenAttribute] Offset: FFFFFFFF
  class BezierSplineWalker : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::BezierSplineWalker::$Walk$d__5
    class $Walk$d__5;
    // Nested type: ::MagicalActual::BezierSplineWalker::$WalkWithVelocity$d__7
    class $WalkWithVelocity$d__7;
    public:
    // public MagicalActual.BezierSpline spline
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::BezierSpline* spline;
    // Field size check
    static_assert(sizeof(::MagicalActual::BezierSpline*) == 0x8);
    // public System.Single walkSpeed
    // Size: 0x4
    // Offset: 0x20
    float walkSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: walkSpeed and: OnWalkComplete
    char __padding1[0x4] = {};
    // public UnityEngine.Events.UnityEvent OnWalkComplete
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Events::UnityEvent* OnWalkComplete;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public MagicalActual.BezierSpline spline
    [[deprecated("Use field access instead!")]] ::MagicalActual::BezierSpline*& dyn_spline();
    // Get instance field reference: public System.Single walkSpeed
    [[deprecated("Use field access instead!")]] float& dyn_walkSpeed();
    // Get instance field reference: public UnityEngine.Events.UnityEvent OnWalkComplete
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_OnWalkComplete();
    // public System.Void MNKLAGBEKDK(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB1204
    void MNKLAGBEKDK(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // public System.Void IOIKJAJEBGG(System.Single OHOGONAFMPC)
    // Offset: 0x1CB12CC
    void IOIKJAJEBGG(float OHOGONAFMPC);
    // private System.Void NHADFEMILCC()
    // Offset: 0x1CB14E4
    void NHADFEMILCC();
    // public System.Void DOABLBHKFBG(System.Single OHOGONAFMPC)
    // Offset: 0x1CB14E8
    void DOABLBHKFBG(float OHOGONAFMPC);
    // private System.Void Start()
    // Offset: 0x1CB1704
    void Start();
    // private System.Void FDPLANCCNPK()
    // Offset: 0x1CB1708
    void FDPLANCCNPK();
    // public System.Void KBKDJIHKNEO(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB17DC
    void KBKDJIHKNEO(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // private System.Void EJPPHNJKFPP()
    // Offset: 0x1CB18A0
    void EJPPHNJKFPP();
    // public System.Void WalkPathWithVelocity(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB1974
    void WalkPathWithVelocity(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // private System.Collections.IEnumerator PCNJNEGEOHA(System.Single OAFNPDFNPOM)
    // Offset: 0x1CB1668
    ::System::Collections::IEnumerator* PCNJNEGEOHA(float OAFNPDFNPOM);
    // public System.Collections.IEnumerator EBKPKMHMJAD(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB1A64
    ::System::Collections::IEnumerator* EBKPKMHMJAD(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // public System.Void WalkPath(System.Single OHOGONAFMPC)
    // Offset: 0x1CB1B2C
    void WalkPath(float OHOGONAFMPC);
    // private System.Void LIFHHDAEPFK()
    // Offset: 0x1CB1D44
    void LIFHHDAEPFK();
    // private System.Void OnDestroy()
    // Offset: 0x1CB1E18
    void OnDestroy();
    // public System.Void .ctor()
    // Offset: 0x1CB1EEC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BezierSplineWalker* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::BezierSplineWalker::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BezierSplineWalker*, creationType>()));
    }
    // public System.Collections.IEnumerator WalkWithVelocity(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB19A0
    ::System::Collections::IEnumerator* WalkWithVelocity(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // public System.Collections.IEnumerator FIBOKPLHFCM(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB1EFC
    ::System::Collections::IEnumerator* FIBOKPLHFCM(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // private System.Collections.IEnumerator ONGBCOAIGLJ(System.Single OAFNPDFNPOM)
    // Offset: 0x1CB1F98
    ::System::Collections::IEnumerator* ONGBCOAIGLJ(float OAFNPDFNPOM);
    // public System.Void HCHKLFMHHDI(System.Single OHOGONAFMPC)
    // Offset: 0x1CB2034
    void HCHKLFMHHDI(float OHOGONAFMPC);
    // private System.Void MDOPMJPONBJ()
    // Offset: 0x1CB224C
    void MDOPMJPONBJ();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x1CB2320
    void NNDKJCJFIAK();
    // public System.Collections.IEnumerator AMPKFCJIJNM(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB1808
    ::System::Collections::IEnumerator* AMPKFCJIJNM(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // public System.Collections.IEnumerator EEFDPEDPJEC(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB2324
    ::System::Collections::IEnumerator* EEFDPEDPJEC(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // public System.Collections.IEnumerator EJOMECJGPFE(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB23C0
    ::System::Collections::IEnumerator* EJOMECJGPFE(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // public System.Void ACMKDLHIMJN(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB245C
    void ACMKDLHIMJN(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // public System.Collections.IEnumerator FKEELCODFBF(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB1230
    ::System::Collections::IEnumerator* FKEELCODFBF(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // public System.Void COKBEPGGJME(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB2488
    void COKBEPGGJME(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // public System.Collections.IEnumerator BAPANBOIFCC(MagicalActual.BezierSplineVelocity CLFNBCHDLGP)
    // Offset: 0x1CB24B4
    ::System::Collections::IEnumerator* BAPANBOIFCC(::MagicalActual::BezierSplineVelocity* CLFNBCHDLGP);
    // private System.Collections.IEnumerator CDCPBENCAON(System.Single OAFNPDFNPOM)
    // Offset: 0x1CB1CAC
    ::System::Collections::IEnumerator* CDCPBENCAON(float OAFNPDFNPOM);
    // private System.Void JKDFCMDDCIK()
    // Offset: 0x1CB254C
    void JKDFCMDDCIK();
    // private System.Collections.IEnumerator EKFNPAEENFC(System.Single OAFNPDFNPOM)
    // Offset: 0x1CB21B4
    ::System::Collections::IEnumerator* EKFNPAEENFC(float OAFNPDFNPOM);
    // private System.Collections.IEnumerator KPIEKHPBDCD(System.Single OAFNPDFNPOM)
    // Offset: 0x1CB144C
    ::System::Collections::IEnumerator* KPIEKHPBDCD(float OAFNPDFNPOM);
  }; // MagicalActual.BezierSplineWalker
  #pragma pack(pop)
  static check_size<sizeof(BezierSplineWalker), 40 + sizeof(::UnityEngine::Events::UnityEvent*)> __MagicalActual_BezierSplineWalkerSizeCheck;
  static_assert(sizeof(BezierSplineWalker) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::MNKLAGBEKDK
// Il2CppName: MNKLAGBEKDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::MNKLAGBEKDK)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "MNKLAGBEKDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::IOIKJAJEBGG
// Il2CppName: IOIKJAJEBGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)(float)>(&MagicalActual::BezierSplineWalker::IOIKJAJEBGG)> {
  static const MethodInfo* get() {
    static auto* OHOGONAFMPC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "IOIKJAJEBGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OHOGONAFMPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)()>(&MagicalActual::BezierSplineWalker::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::DOABLBHKFBG
// Il2CppName: DOABLBHKFBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)(float)>(&MagicalActual::BezierSplineWalker::DOABLBHKFBG)> {
  static const MethodInfo* get() {
    static auto* OHOGONAFMPC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "DOABLBHKFBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OHOGONAFMPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)()>(&MagicalActual::BezierSplineWalker::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::FDPLANCCNPK
// Il2CppName: FDPLANCCNPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)()>(&MagicalActual::BezierSplineWalker::FDPLANCCNPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "FDPLANCCNPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::KBKDJIHKNEO
// Il2CppName: KBKDJIHKNEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::KBKDJIHKNEO)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "KBKDJIHKNEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::EJPPHNJKFPP
// Il2CppName: EJPPHNJKFPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)()>(&MagicalActual::BezierSplineWalker::EJPPHNJKFPP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "EJPPHNJKFPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::WalkPathWithVelocity
// Il2CppName: WalkPathWithVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::WalkPathWithVelocity)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "WalkPathWithVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::PCNJNEGEOHA
// Il2CppName: PCNJNEGEOHA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(float)>(&MagicalActual::BezierSplineWalker::PCNJNEGEOHA)> {
  static const MethodInfo* get() {
    static auto* OAFNPDFNPOM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "PCNJNEGEOHA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OAFNPDFNPOM});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::EBKPKMHMJAD
// Il2CppName: EBKPKMHMJAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::EBKPKMHMJAD)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "EBKPKMHMJAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::WalkPath
// Il2CppName: WalkPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)(float)>(&MagicalActual::BezierSplineWalker::WalkPath)> {
  static const MethodInfo* get() {
    static auto* OHOGONAFMPC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "WalkPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OHOGONAFMPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::LIFHHDAEPFK
// Il2CppName: LIFHHDAEPFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)()>(&MagicalActual::BezierSplineWalker::LIFHHDAEPFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "LIFHHDAEPFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)()>(&MagicalActual::BezierSplineWalker::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::WalkWithVelocity
// Il2CppName: WalkWithVelocity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::WalkWithVelocity)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "WalkWithVelocity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::FIBOKPLHFCM
// Il2CppName: FIBOKPLHFCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::FIBOKPLHFCM)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "FIBOKPLHFCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::ONGBCOAIGLJ
// Il2CppName: ONGBCOAIGLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(float)>(&MagicalActual::BezierSplineWalker::ONGBCOAIGLJ)> {
  static const MethodInfo* get() {
    static auto* OAFNPDFNPOM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "ONGBCOAIGLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OAFNPDFNPOM});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::HCHKLFMHHDI
// Il2CppName: HCHKLFMHHDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)(float)>(&MagicalActual::BezierSplineWalker::HCHKLFMHHDI)> {
  static const MethodInfo* get() {
    static auto* OHOGONAFMPC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "HCHKLFMHHDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OHOGONAFMPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::MDOPMJPONBJ
// Il2CppName: MDOPMJPONBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)()>(&MagicalActual::BezierSplineWalker::MDOPMJPONBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "MDOPMJPONBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)()>(&MagicalActual::BezierSplineWalker::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::AMPKFCJIJNM
// Il2CppName: AMPKFCJIJNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::AMPKFCJIJNM)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "AMPKFCJIJNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::EEFDPEDPJEC
// Il2CppName: EEFDPEDPJEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::EEFDPEDPJEC)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "EEFDPEDPJEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::EJOMECJGPFE
// Il2CppName: EJOMECJGPFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::EJOMECJGPFE)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "EJOMECJGPFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::ACMKDLHIMJN
// Il2CppName: ACMKDLHIMJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::ACMKDLHIMJN)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "ACMKDLHIMJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::FKEELCODFBF
// Il2CppName: FKEELCODFBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::FKEELCODFBF)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "FKEELCODFBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::COKBEPGGJME
// Il2CppName: COKBEPGGJME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::COKBEPGGJME)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "COKBEPGGJME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::BAPANBOIFCC
// Il2CppName: BAPANBOIFCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(::MagicalActual::BezierSplineVelocity*)>(&MagicalActual::BezierSplineWalker::BAPANBOIFCC)> {
  static const MethodInfo* get() {
    static auto* CLFNBCHDLGP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BezierSplineVelocity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "BAPANBOIFCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CLFNBCHDLGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::CDCPBENCAON
// Il2CppName: CDCPBENCAON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(float)>(&MagicalActual::BezierSplineWalker::CDCPBENCAON)> {
  static const MethodInfo* get() {
    static auto* OAFNPDFNPOM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "CDCPBENCAON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OAFNPDFNPOM});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::JKDFCMDDCIK
// Il2CppName: JKDFCMDDCIK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BezierSplineWalker::*)()>(&MagicalActual::BezierSplineWalker::JKDFCMDDCIK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "JKDFCMDDCIK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::EKFNPAEENFC
// Il2CppName: EKFNPAEENFC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(float)>(&MagicalActual::BezierSplineWalker::EKFNPAEENFC)> {
  static const MethodInfo* get() {
    static auto* OAFNPDFNPOM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "EKFNPAEENFC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OAFNPDFNPOM});
  }
};
// Writing MetadataGetter for method: MagicalActual::BezierSplineWalker::KPIEKHPBDCD
// Il2CppName: KPIEKHPBDCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::BezierSplineWalker::*)(float)>(&MagicalActual::BezierSplineWalker::KPIEKHPBDCD)> {
  static const MethodInfo* get() {
    static auto* OAFNPDFNPOM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BezierSplineWalker*), "KPIEKHPBDCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OAFNPDFNPOM});
  }
};
