// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PegPuzzlePeg
  class PegPuzzlePeg;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PegPuzzleDoor
  class PegPuzzleDoor;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PegPuzzleDoor);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PegPuzzleDoor*, "MagicalActual", "PegPuzzleDoor");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PegPuzzleDoor
  // [TokenAttribute] Offset: FFFFFFFF
  class PegPuzzleDoor : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.PegPuzzlePeg[] GHHIHCFEHIC
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::MagicalActual::PegPuzzlePeg*> GHHIHCFEHIC;
    // Field size check
    static_assert(sizeof(::ArrayW<::MagicalActual::PegPuzzlePeg*>) == 0x8);
    // private System.Boolean KGMBMPJDBGG
    // Size: 0x1
    // Offset: 0x20
    bool KGMBMPJDBGG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: KGMBMPJDBGG and: questFlagToSetWhenComplete
    char __padding1[0x3] = {};
    // public System.Int32 questFlagToSetWhenComplete
    // Size: 0x4
    // Offset: 0x24
    int questFlagToSetWhenComplete;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.PegPuzzlePeg[] GHHIHCFEHIC
    [[deprecated("Use field access instead!")]] ::ArrayW<::MagicalActual::PegPuzzlePeg*>& dyn_GHHIHCFEHIC();
    // Get instance field reference: private System.Boolean KGMBMPJDBGG
    [[deprecated("Use field access instead!")]] bool& dyn_KGMBMPJDBGG();
    // Get instance field reference: public System.Int32 questFlagToSetWhenComplete
    [[deprecated("Use field access instead!")]] int& dyn_questFlagToSetWhenComplete();
    // private System.Void LOEFDHDIHGE()
    // Offset: 0x2234738
    void LOEFDHDIHGE();
    // private System.Void PJOIJIEDPMP()
    // Offset: 0x22348BC
    void PJOIJIEDPMP();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x2234A4C
    void PFABJJGAOMM();
    // private System.Void Start()
    // Offset: 0x2234AA4
    void Start();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x2234AFC
    void IPIFMKAGODD();
    // private System.Void FGGKEEKHDHN()
    // Offset: 0x2234B54
    void FGGKEEKHDHN();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x2234CA4
    void OACMGPBCPEL();
    // public System.Void .ctor()
    // Offset: 0x2234CFC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PegPuzzleDoor* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PegPuzzleDoor::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PegPuzzleDoor*, creationType>()));
    }
    // private System.Void NLFOPEAGLDJ()
    // Offset: 0x2234D04
    void NLFOPEAGLDJ();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x2234E90
    void KPOAAAHLGLA();
    // private System.Void FixedUpdate()
    // Offset: 0x2234EE8
    void FixedUpdate();
    // private System.Void JPHEBENNLCB()
    // Offset: 0x22350C8
    void JPHEBENNLCB();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x22351FC
    void IDOCJGNLNFL();
    // private System.Void CHEMMHEMDCB()
    // Offset: 0x2235254
    void CHEMMHEMDCB();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x22353E0
    void GKIOLADOCOK();
    // private System.Void MKHEDAAIDIE()
    // Offset: 0x2235438
    void MKHEDAAIDIE();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x223561C
    void NEDFCIDMJBB();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x2235674
    void KBDGAPMJGLG();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x22356CC
    void GECHLDPLPCC();
    // private System.Void DDJINHIPKCE()
    // Offset: 0x2235724
    void DDJINHIPKCE();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x22358B0
    void GHLPBOJJHNG();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x2235908
    void HKINNMLBMMG();
    // private System.Void NAPGGGFOEKO()
    // Offset: 0x2235960
    void NAPGGGFOEKO();
    // private System.Void ANKCGGIBCAI()
    // Offset: 0x2235AEC
    void ANKCGGIBCAI();
    // private System.Void ICFANEFPFBJ()
    // Offset: 0x2235C74
    void ICFANEFPFBJ();
    // private System.Void AHMLIMDJCJO()
    // Offset: 0x2235E28
    void AHMLIMDJCJO();
    // private System.Void AMIPIMKIJMO()
    // Offset: 0x2235FB0
    void AMIPIMKIJMO();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x2236104
    void GPFBGGFPINB();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x223615C
    void FGIFGGNGKPK();
    // private System.Void JEDINCAJKLC()
    // Offset: 0x22361B4
    void JEDINCAJKLC();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x2236350
    void DGJGAFKDIDK();
    // private System.Void EEMBCPKCOIL()
    // Offset: 0x22363A8
    void EEMBCPKCOIL();
  }; // MagicalActual.PegPuzzleDoor
  #pragma pack(pop)
  static check_size<sizeof(PegPuzzleDoor), 36 + sizeof(int)> __MagicalActual_PegPuzzleDoorSizeCheck;
  static_assert(sizeof(PegPuzzleDoor) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::LOEFDHDIHGE
// Il2CppName: LOEFDHDIHGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::LOEFDHDIHGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "LOEFDHDIHGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::PJOIJIEDPMP
// Il2CppName: PJOIJIEDPMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::PJOIJIEDPMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "PJOIJIEDPMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::FGGKEEKHDHN
// Il2CppName: FGGKEEKHDHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::FGGKEEKHDHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "FGGKEEKHDHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::NLFOPEAGLDJ
// Il2CppName: NLFOPEAGLDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::NLFOPEAGLDJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "NLFOPEAGLDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::JPHEBENNLCB
// Il2CppName: JPHEBENNLCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::JPHEBENNLCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "JPHEBENNLCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::CHEMMHEMDCB
// Il2CppName: CHEMMHEMDCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::CHEMMHEMDCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "CHEMMHEMDCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::MKHEDAAIDIE
// Il2CppName: MKHEDAAIDIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::MKHEDAAIDIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "MKHEDAAIDIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::DDJINHIPKCE
// Il2CppName: DDJINHIPKCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::DDJINHIPKCE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "DDJINHIPKCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::NAPGGGFOEKO
// Il2CppName: NAPGGGFOEKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::NAPGGGFOEKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "NAPGGGFOEKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::ANKCGGIBCAI
// Il2CppName: ANKCGGIBCAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::ANKCGGIBCAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "ANKCGGIBCAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::ICFANEFPFBJ
// Il2CppName: ICFANEFPFBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::ICFANEFPFBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "ICFANEFPFBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::AHMLIMDJCJO
// Il2CppName: AHMLIMDJCJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::AHMLIMDJCJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "AHMLIMDJCJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::AMIPIMKIJMO
// Il2CppName: AMIPIMKIJMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::AMIPIMKIJMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "AMIPIMKIJMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::JEDINCAJKLC
// Il2CppName: JEDINCAJKLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::JEDINCAJKLC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "JEDINCAJKLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PegPuzzleDoor::EEMBCPKCOIL
// Il2CppName: EEMBCPKCOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PegPuzzleDoor::*)()>(&MagicalActual::PegPuzzleDoor::EEMBCPKCOIL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PegPuzzleDoor*), "EEMBCPKCOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
