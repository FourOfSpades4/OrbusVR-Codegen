// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: MeshRenderer
  class MeshRenderer;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PointerEventHandler
  class PointerEventHandler;
  // Forward declaring type: PointerEventArgs
  struct PointerEventArgs;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: LaserPointer
  class LaserPointer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::LaserPointer);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::LaserPointer*, "MagicalActual", "LaserPointer");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.LaserPointer
  // [TokenAttribute] Offset: FFFFFFFF
  class LaserPointer : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.Boolean active
    // Size: 0x1
    // Offset: 0x18
    bool active;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: active and: color
    char __padding0[0x3] = {};
    // public UnityEngine.Color color
    // Size: 0x10
    // Offset: 0x1C
    ::UnityEngine::Color color;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public System.Single thickness
    // Size: 0x4
    // Offset: 0x2C
    float thickness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.Transform directionReferenceTransform
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Transform* directionReferenceTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public UnityEngine.GameObject holder
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* holder;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject pointer
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* pointer;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean EHJOPINNGII
    // Size: 0x1
    // Offset: 0x48
    bool EHJOPINNGII;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean addRigidBody
    // Size: 0x1
    // Offset: 0x49
    bool addRigidBody;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: addRigidBody and: LPABOOMFPOO
    char __padding7[0x6] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE4788
    // private MagicalActual.PointerEventHandler LPABOOMFPOO
    // Size: 0x8
    // Offset: 0x50
    ::MagicalActual::PointerEventHandler* LPABOOMFPOO;
    // Field size check
    static_assert(sizeof(::MagicalActual::PointerEventHandler*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE4798
    // private MagicalActual.PointerEventHandler BCIDFKEECDD
    // Size: 0x8
    // Offset: 0x58
    ::MagicalActual::PointerEventHandler* BCIDFKEECDD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PointerEventHandler*) == 0x8);
    // public System.Int32 targetLayer
    // Size: 0x4
    // Offset: 0x60
    int targetLayer;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 layerMask
    // Size: 0x4
    // Offset: 0x64
    int layerMask;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.Material ICBMBJHOBNH
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Material* ICBMBJHOBNH;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private UnityEngine.Material EABNLGNKMOA
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Material* EABNLGNKMOA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private UnityEngine.MeshRenderer DCNNPMFFLNB
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::MeshRenderer* DCNNPMFFLNB;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshRenderer*) == 0x8);
    // public UnityEngine.Transform previousContact
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::Transform* previousContact;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public UnityEngine.Vector3 contactPoint
    // Size: 0xC
    // Offset: 0x88
    ::UnityEngine::Vector3 contactPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public System.Single previousDistance
    // Size: 0x4
    // Offset: 0x94
    float previousDistance;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Boolean active
    [[deprecated("Use field access instead!")]] bool& dyn_active();
    // Get instance field reference: public UnityEngine.Color color
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_color();
    // Get instance field reference: public System.Single thickness
    [[deprecated("Use field access instead!")]] float& dyn_thickness();
    // Get instance field reference: public UnityEngine.Transform directionReferenceTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_directionReferenceTransform();
    // Get instance field reference: public UnityEngine.GameObject holder
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_holder();
    // Get instance field reference: public UnityEngine.GameObject pointer
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_pointer();
    // Get instance field reference: private System.Boolean EHJOPINNGII
    [[deprecated("Use field access instead!")]] bool& dyn_EHJOPINNGII();
    // Get instance field reference: public System.Boolean addRigidBody
    [[deprecated("Use field access instead!")]] bool& dyn_addRigidBody();
    // Get instance field reference: private MagicalActual.PointerEventHandler LPABOOMFPOO
    [[deprecated("Use field access instead!")]] ::MagicalActual::PointerEventHandler*& dyn_LPABOOMFPOO();
    // Get instance field reference: private MagicalActual.PointerEventHandler BCIDFKEECDD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PointerEventHandler*& dyn_BCIDFKEECDD();
    // Get instance field reference: public System.Int32 targetLayer
    [[deprecated("Use field access instead!")]] int& dyn_targetLayer();
    // Get instance field reference: public System.Int32 layerMask
    [[deprecated("Use field access instead!")]] int& dyn_layerMask();
    // Get instance field reference: private UnityEngine.Material ICBMBJHOBNH
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_ICBMBJHOBNH();
    // Get instance field reference: private UnityEngine.Material EABNLGNKMOA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_EABNLGNKMOA();
    // Get instance field reference: private UnityEngine.MeshRenderer DCNNPMFFLNB
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& dyn_DCNNPMFFLNB();
    // Get instance field reference: public UnityEngine.Transform previousContact
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_previousContact();
    // Get instance field reference: public UnityEngine.Vector3 contactPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_contactPoint();
    // Get instance field reference: public System.Single previousDistance
    [[deprecated("Use field access instead!")]] float& dyn_previousDistance();
    // public System.Void HJIDPLBGNLB()
    // Offset: 0x127453C
    void HJIDPLBGNLB();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x1274570
    void DFCOAPEIKLN();
    // public System.Void CGPOKGCMBKO()
    // Offset: 0x12749AC
    void CGPOKGCMBKO();
    // public System.Void CBBKMHDLGEO(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x12749E0
    void CBBKMHDLGEO(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void NGGPNCNBAIH(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x1274ACC
    void NGGPNCNBAIH(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void JGEJDJJDNDO(UnityEngine.Vector3 DBLJCGHBFMH, System.Boolean BAFMEHCEHAL)
    // Offset: 0x1274BB8
    void JGEJDJJDNDO(::UnityEngine::Vector3 DBLJCGHBFMH, bool BAFMEHCEHAL);
    // public System.Void remove_PointerIn(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x1274C10
    void remove_PointerIn(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // private System.Void NAPGGGFOEKO()
    // Offset: 0x1274CFC
    void NAPGGGFOEKO();
    // public System.Void remove_PointerOut(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x1274FE0
    void remove_PointerOut(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void EJCGMEGBGDE()
    // Offset: 0x12750CC
    void EJCGMEGBGDE();
    // private System.Void AMIPIMKIJMO()
    // Offset: 0x1275100
    void AMIPIMKIJMO();
    // public System.Void FIAFLFMDHNA(UnityEngine.Vector3 DBLJCGHBFMH, System.Boolean BAFMEHCEHAL)
    // Offset: 0x12753E4
    void FIAFLFMDHNA(::UnityEngine::Vector3 DBLJCGHBFMH, bool BAFMEHCEHAL);
    // public System.Void HKLAOPMAAIP(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x127545C
    void HKLAOPMAAIP(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void OnPointerOut(MagicalActual.PointerEventArgs LMKCFANDAKH)
    // Offset: 0x1275548
    void OnPointerOut(::MagicalActual::PointerEventArgs LMKCFANDAKH);
    // public System.Void BHCIFOBMGJB(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x127558C
    void BHCIFOBMGJB(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void add_PointerIn(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x1275678
    void add_PointerIn(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void DKFOGIGOJPB(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x1275764
    void DKFOGIGOJPB(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void FJNPHBICDFA(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x1275850
    void FJNPHBICDFA(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void FHFDLPBPKIP()
    // Offset: 0x127593C
    void FHFDLPBPKIP();
    // private System.Void GGAFMPPDBOH()
    // Offset: 0x1275970
    void GGAFMPPDBOH();
    // public System.Void MBOICJIKPFL(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x1275C54
    void MBOICJIKPFL(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void FLJJDBOAMIK(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x1275D40
    void FLJJDBOAMIK(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void IDIAOGGBLPG(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x1275E2C
    void IDIAOGGBLPG(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void turnOnPointer(UnityEngine.Vector3 DBLJCGHBFMH, System.Boolean BAFMEHCEHAL)
    // Offset: 0x1275F18
    void turnOnPointer(::UnityEngine::Vector3 DBLJCGHBFMH, bool BAFMEHCEHAL);
    // public System.Void turnOffPointer()
    // Offset: 0x1275F90
    void turnOffPointer();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x1275FC4
    void FGIFGGNGKPK();
    // public System.Void .ctor()
    // Offset: 0x1276400
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LaserPointer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::LaserPointer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LaserPointer*, creationType>()));
    }
    // private System.Void Start()
    // Offset: 0x1276424
    void Start();
    // public System.Void JBCAJJNIDLE(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x127684C
    void JBCAJJNIDLE(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void JNIKNBEOHPJ(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x1276938
    void JNIKNBEOHPJ(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // public System.Void FEFKAPOLKAH(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x1276A24
    void FEFKAPOLKAH(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // private System.Void FNGLOIECKDG()
    // Offset: 0x1276B10
    void FNGLOIECKDG();
    // public System.Void JLLGMEMNKGN(MagicalActual.PointerEventArgs LMKCFANDAKH)
    // Offset: 0x1276F4C
    void JLLGMEMNKGN(::MagicalActual::PointerEventArgs LMKCFANDAKH);
    // public System.Void OnPointerIn(MagicalActual.PointerEventArgs LMKCFANDAKH)
    // Offset: 0x1276F90
    void OnPointerIn(::MagicalActual::PointerEventArgs LMKCFANDAKH);
    // public System.Void ILOEMMFHOND(MagicalActual.PointerEventArgs LMKCFANDAKH)
    // Offset: 0x1276FD4
    void ILOEMMFHOND(::MagicalActual::PointerEventArgs LMKCFANDAKH);
    // public System.Void IIJJMKMLLDB(UnityEngine.Vector3 DBLJCGHBFMH, System.Boolean BAFMEHCEHAL)
    // Offset: 0x1277018
    void IIJJMKMLLDB(::UnityEngine::Vector3 DBLJCGHBFMH, bool BAFMEHCEHAL);
    // public System.Void HGCAAPPAJDM()
    // Offset: 0x1277090
    void HGCAAPPAJDM();
    // private System.Void ICEGDGKAIIB()
    // Offset: 0x12770C4
    void ICEGDGKAIIB();
    // public System.Void NMBCAAKOONA(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x12773A4
    void NMBCAAKOONA(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // private System.Void FixedUpdate()
    // Offset: 0x1277490
    void FixedUpdate();
    // public System.Void PODFKAOOLID()
    // Offset: 0x1277770
    void PODFKAOOLID();
    // public System.Void add_PointerOut(MagicalActual.PointerEventHandler MMMEIONJJFJ)
    // Offset: 0x12777A4
    void add_PointerOut(::MagicalActual::PointerEventHandler* MMMEIONJJFJ);
    // private System.Void OACMGPBCPEL()
    // Offset: 0x1277890
    void OACMGPBCPEL();
    // public System.Void HLOMIPBBBIM()
    // Offset: 0x1277CCC
    void HLOMIPBBBIM();
  }; // MagicalActual.LaserPointer
  #pragma pack(pop)
  static check_size<sizeof(LaserPointer), 148 + sizeof(float)> __MagicalActual_LaserPointerSizeCheck;
  static_assert(sizeof(LaserPointer) == 0x98);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::LaserPointer::HJIDPLBGNLB
// Il2CppName: HJIDPLBGNLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::HJIDPLBGNLB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "HJIDPLBGNLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::CGPOKGCMBKO
// Il2CppName: CGPOKGCMBKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::CGPOKGCMBKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "CGPOKGCMBKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::CBBKMHDLGEO
// Il2CppName: CBBKMHDLGEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::CBBKMHDLGEO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "CBBKMHDLGEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::NGGPNCNBAIH
// Il2CppName: NGGPNCNBAIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::NGGPNCNBAIH)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "NGGPNCNBAIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::JGEJDJJDNDO
// Il2CppName: JGEJDJJDNDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::UnityEngine::Vector3, bool)>(&MagicalActual::LaserPointer::JGEJDJJDNDO)> {
  static const MethodInfo* get() {
    static auto* DBLJCGHBFMH = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* BAFMEHCEHAL = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "JGEJDJJDNDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBLJCGHBFMH, BAFMEHCEHAL});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::remove_PointerIn
// Il2CppName: remove_PointerIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::remove_PointerIn)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "remove_PointerIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::NAPGGGFOEKO
// Il2CppName: NAPGGGFOEKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::NAPGGGFOEKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "NAPGGGFOEKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::remove_PointerOut
// Il2CppName: remove_PointerOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::remove_PointerOut)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "remove_PointerOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::EJCGMEGBGDE
// Il2CppName: EJCGMEGBGDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::EJCGMEGBGDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "EJCGMEGBGDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::AMIPIMKIJMO
// Il2CppName: AMIPIMKIJMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::AMIPIMKIJMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "AMIPIMKIJMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::FIAFLFMDHNA
// Il2CppName: FIAFLFMDHNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::UnityEngine::Vector3, bool)>(&MagicalActual::LaserPointer::FIAFLFMDHNA)> {
  static const MethodInfo* get() {
    static auto* DBLJCGHBFMH = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* BAFMEHCEHAL = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "FIAFLFMDHNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBLJCGHBFMH, BAFMEHCEHAL});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::HKLAOPMAAIP
// Il2CppName: HKLAOPMAAIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::HKLAOPMAAIP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "HKLAOPMAAIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::OnPointerOut
// Il2CppName: OnPointerOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventArgs)>(&MagicalActual::LaserPointer::OnPointerOut)> {
  static const MethodInfo* get() {
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "OnPointerOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::BHCIFOBMGJB
// Il2CppName: BHCIFOBMGJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::BHCIFOBMGJB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "BHCIFOBMGJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::add_PointerIn
// Il2CppName: add_PointerIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::add_PointerIn)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "add_PointerIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::DKFOGIGOJPB
// Il2CppName: DKFOGIGOJPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::DKFOGIGOJPB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "DKFOGIGOJPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::FJNPHBICDFA
// Il2CppName: FJNPHBICDFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::FJNPHBICDFA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "FJNPHBICDFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::FHFDLPBPKIP
// Il2CppName: FHFDLPBPKIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::FHFDLPBPKIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "FHFDLPBPKIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::GGAFMPPDBOH
// Il2CppName: GGAFMPPDBOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::GGAFMPPDBOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "GGAFMPPDBOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::MBOICJIKPFL
// Il2CppName: MBOICJIKPFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::MBOICJIKPFL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "MBOICJIKPFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::FLJJDBOAMIK
// Il2CppName: FLJJDBOAMIK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::FLJJDBOAMIK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "FLJJDBOAMIK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::IDIAOGGBLPG
// Il2CppName: IDIAOGGBLPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::IDIAOGGBLPG)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "IDIAOGGBLPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::turnOnPointer
// Il2CppName: turnOnPointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::UnityEngine::Vector3, bool)>(&MagicalActual::LaserPointer::turnOnPointer)> {
  static const MethodInfo* get() {
    static auto* DBLJCGHBFMH = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* BAFMEHCEHAL = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "turnOnPointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBLJCGHBFMH, BAFMEHCEHAL});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::turnOffPointer
// Il2CppName: turnOffPointer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::turnOffPointer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "turnOffPointer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::LaserPointer::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::JBCAJJNIDLE
// Il2CppName: JBCAJJNIDLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::JBCAJJNIDLE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "JBCAJJNIDLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::JNIKNBEOHPJ
// Il2CppName: JNIKNBEOHPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::JNIKNBEOHPJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "JNIKNBEOHPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::FEFKAPOLKAH
// Il2CppName: FEFKAPOLKAH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::FEFKAPOLKAH)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "FEFKAPOLKAH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::JLLGMEMNKGN
// Il2CppName: JLLGMEMNKGN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventArgs)>(&MagicalActual::LaserPointer::JLLGMEMNKGN)> {
  static const MethodInfo* get() {
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "JLLGMEMNKGN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::OnPointerIn
// Il2CppName: OnPointerIn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventArgs)>(&MagicalActual::LaserPointer::OnPointerIn)> {
  static const MethodInfo* get() {
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "OnPointerIn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::ILOEMMFHOND
// Il2CppName: ILOEMMFHOND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventArgs)>(&MagicalActual::LaserPointer::ILOEMMFHOND)> {
  static const MethodInfo* get() {
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "ILOEMMFHOND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::IIJJMKMLLDB
// Il2CppName: IIJJMKMLLDB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::UnityEngine::Vector3, bool)>(&MagicalActual::LaserPointer::IIJJMKMLLDB)> {
  static const MethodInfo* get() {
    static auto* DBLJCGHBFMH = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* BAFMEHCEHAL = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "IIJJMKMLLDB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBLJCGHBFMH, BAFMEHCEHAL});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::HGCAAPPAJDM
// Il2CppName: HGCAAPPAJDM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::HGCAAPPAJDM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "HGCAAPPAJDM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::ICEGDGKAIIB
// Il2CppName: ICEGDGKAIIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::ICEGDGKAIIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "ICEGDGKAIIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::NMBCAAKOONA
// Il2CppName: NMBCAAKOONA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::NMBCAAKOONA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "NMBCAAKOONA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::PODFKAOOLID
// Il2CppName: PODFKAOOLID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::PODFKAOOLID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "PODFKAOOLID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::add_PointerOut
// Il2CppName: add_PointerOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)(::MagicalActual::PointerEventHandler*)>(&MagicalActual::LaserPointer::add_PointerOut)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PointerEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "add_PointerOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LaserPointer::HLOMIPBBBIM
// Il2CppName: HLOMIPBBBIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LaserPointer::*)()>(&MagicalActual::LaserPointer::HLOMIPBBBIM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LaserPointer*), "HLOMIPBBBIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
