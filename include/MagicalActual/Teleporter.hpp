// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ClickedEventArgs
  struct ClickedEventArgs;
  // Forward declaring type: OrbusTrackedController
  class OrbusTrackedController;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: LaserPointer
  class LaserPointer;
  // Forward declaring type: PlayerCharacter
  class PlayerCharacter;
  // Forward declaring type: Grabber
  class Grabber;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: LineRenderer
  class LineRenderer;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Slider
  class Slider;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Teleporter
  class Teleporter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Teleporter);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Teleporter*, "MagicalActual", "Teleporter");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0xE0
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Teleporter
  // [TokenAttribute] Offset: FFFFFFFF
  class Teleporter : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::Teleporter::TeleporterState
    struct TeleporterState;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: MagicalActual.Teleporter/TeleporterState
    // [TokenAttribute] Offset: FFFFFFFF
    struct TeleporterState/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: TeleporterState
      constexpr TeleporterState(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MagicalActual.Teleporter/TeleporterState FNCIFCNLJBM
      static constexpr const int FNCIFCNLJBM = 1;
      // Get static field: static public MagicalActual.Teleporter/TeleporterState FNCIFCNLJBM
      static ::MagicalActual::Teleporter::TeleporterState _get_FNCIFCNLJBM();
      // Set static field: static public MagicalActual.Teleporter/TeleporterState FNCIFCNLJBM
      static void _set_FNCIFCNLJBM(::MagicalActual::Teleporter::TeleporterState value);
      // static field const value: static public MagicalActual.Teleporter/TeleporterState ANCLBBAOOMP
      static constexpr const int ANCLBBAOOMP = 2;
      // Get static field: static public MagicalActual.Teleporter/TeleporterState ANCLBBAOOMP
      static ::MagicalActual::Teleporter::TeleporterState _get_ANCLBBAOOMP();
      // Set static field: static public MagicalActual.Teleporter/TeleporterState ANCLBBAOOMP
      static void _set_ANCLBBAOOMP(::MagicalActual::Teleporter::TeleporterState value);
      // static field const value: static public MagicalActual.Teleporter/TeleporterState KKELIPGJJOP
      static constexpr const int KKELIPGJJOP = 3;
      // Get static field: static public MagicalActual.Teleporter/TeleporterState KKELIPGJJOP
      static ::MagicalActual::Teleporter::TeleporterState _get_KKELIPGJJOP();
      // Set static field: static public MagicalActual.Teleporter/TeleporterState KKELIPGJJOP
      static void _set_KKELIPGJJOP(::MagicalActual::Teleporter::TeleporterState value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // MagicalActual.Teleporter/TeleporterState
    #pragma pack(pop)
    static check_size<sizeof(Teleporter::TeleporterState), 0 + sizeof(int)> __MagicalActual_Teleporter_TeleporterStateSizeCheck;
    static_assert(sizeof(Teleporter::TeleporterState) == 0x4);
    public:
    // private OrbusTrackedController FIEOJOOJKCJ
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::OrbusTrackedController* FIEOJOOJKCJ;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OrbusTrackedController*) == 0x8);
    // private MagicalActual.LaserPointer LLDJNFONHFD
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::LaserPointer* LLDJNFONHFD;
    // Field size check
    static_assert(sizeof(::MagicalActual::LaserPointer*) == 0x8);
    // private UnityEngine.Vector3 HPEPOKANBPB
    // Size: 0xC
    // Offset: 0x28
    ::UnityEngine::Vector3 HPEPOKANBPB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: HPEPOKANBPB and: AAAKFEDFHEH
    char __padding2[0x4] = {};
    // private UnityEngine.GameObject AAAKFEDFHEH
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* AAAKFEDFHEH;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public MagicalActual.PlayerCharacter myPlayer
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::PlayerCharacter* myPlayer;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerCharacter*) == 0x8);
    // public UnityEngine.UI.Slider chargeBar
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::UI::Slider* chargeBar;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Slider*) == 0x8);
    // public UnityEngine.GameObject teleportPointPrefab
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GameObject* teleportPointPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject ILNMGONPOPB
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* ILNMGONPOPB;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Vector3[] KKGJPMDJOMJ
    // Size: 0x8
    // Offset: 0x60
    ::ArrayW<::UnityEngine::Vector3> KKGJPMDJOMJ;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector3>) == 0x8);
    // private UnityEngine.LineRenderer ADMMPKAAILI
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::LineRenderer* ADMMPKAAILI;
    // Field size check
    static_assert(sizeof(::UnityEngine::LineRenderer*) == 0x8);
    // private UnityEngine.GameObject CHOBOICMCCN
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::GameObject* CHOBOICMCCN;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean IPMLIBBPOGE
    // Size: 0x1
    // Offset: 0x78
    bool IPMLIBBPOGE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IPMLIBBPOGE and: OFCKIEOKCHC
    char __padding11[0x3] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE44A8
    // private System.Single <OFCKIEOKCHC>k__BackingField
    // Size: 0x4
    // Offset: 0x7C
    float OFCKIEOKCHC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE44B8
    // private System.Single <NIDFLJDJBLB>k__BackingField
    // Size: 0x4
    // Offset: 0x80
    float NIDFLJDJBLB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single NKGIEOJMCFO
    // Size: 0x4
    // Offset: 0x84
    float NKGIEOJMCFO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single DKCCNKCGCBD
    // Size: 0x4
    // Offset: 0x88
    float DKCCNKCGCBD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean autoRunEngaged
    // Size: 0x1
    // Offset: 0x8C
    bool autoRunEngaged;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: autoRunEngaged and: IAJKBBMNAON
    char __padding16[0x3] = {};
    // private UnityEngine.Vector3 IAJKBBMNAON
    // Size: 0xC
    // Offset: 0x90
    ::UnityEngine::Vector3 IAJKBBMNAON;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: IAJKBBMNAON and: DOJJNJHKNLK
    char __padding17[0x4] = {};
    // private MagicalActual.Grabber DOJJNJHKNLK
    // Size: 0x8
    // Offset: 0xA0
    ::MagicalActual::Grabber* DOJJNJHKNLK;
    // Field size check
    static_assert(sizeof(::MagicalActual::Grabber*) == 0x8);
    // private System.Single GMCGEKMLOKG
    // Size: 0x4
    // Offset: 0xA8
    float GMCGEKMLOKG;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE44D8
    // private System.Boolean <FDENODKKCAE>k__BackingField
    // Size: 0x1
    // Offset: 0xAC
    bool FDENODKKCAE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GDECEEMKIPA
    // Size: 0x1
    // Offset: 0xAD
    bool GDECEEMKIPA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: GDECEEMKIPA and: IGOPFAFMIIP
    char __padding21[0x2] = {};
    // private System.Int32 IGOPFAFMIIP
    // Size: 0x4
    // Offset: 0xB0
    int IGOPFAFMIIP;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE44E8
    // private System.Single <KCCEABPHKFN>k__BackingField
    // Size: 0x4
    // Offset: 0xB4
    float KCCEABPHKFN;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE44F8
    // private UnityEngine.Vector3 <OBGKJCDEDBI>k__BackingField
    // Size: 0xC
    // Offset: 0xB8
    ::UnityEngine::Vector3 OBGKJCDEDBI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // [CompilerGeneratedAttribute] Offset: 0xAE4508
    // private System.Single <ONLLLFMHCFO>k__BackingField
    // Size: 0x4
    // Offset: 0xC4
    float ONLLLFMHCFO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.String OCLOJMPJONI
    // Size: 0x8
    // Offset: 0xC8
    ::StringW OCLOJMPJONI;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String GNNCECPJLGO
    // Size: 0x8
    // Offset: 0xD0
    ::StringW GNNCECPJLGO;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean MDMPCFKHOFM
    // Size: 0x1
    // Offset: 0xD8
    bool MDMPCFKHOFM;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean isGrabberScrolling
    // Size: 0x1
    // Offset: 0xD9
    bool isGrabberScrolling;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isGrabberScrolling and: IICCABCMFCP
    char __padding29[0x2] = {};
    // private MagicalActual.Teleporter/TeleporterState IICCABCMFCP
    // Size: 0x4
    // Offset: 0xDC
    ::MagicalActual::Teleporter::TeleporterState IICCABCMFCP;
    // Field size check
    static_assert(sizeof(::MagicalActual::Teleporter::TeleporterState) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private OrbusTrackedController FIEOJOOJKCJ
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OrbusTrackedController*& dyn_FIEOJOOJKCJ();
    // Get instance field reference: private MagicalActual.LaserPointer LLDJNFONHFD
    [[deprecated("Use field access instead!")]] ::MagicalActual::LaserPointer*& dyn_LLDJNFONHFD();
    // Get instance field reference: private UnityEngine.Vector3 HPEPOKANBPB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_HPEPOKANBPB();
    // Get instance field reference: private UnityEngine.GameObject AAAKFEDFHEH
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_AAAKFEDFHEH();
    // Get instance field reference: public MagicalActual.PlayerCharacter myPlayer
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerCharacter*& dyn_myPlayer();
    // Get instance field reference: public UnityEngine.UI.Slider chargeBar
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Slider*& dyn_chargeBar();
    // Get instance field reference: public UnityEngine.GameObject teleportPointPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_teleportPointPrefab();
    // Get instance field reference: private UnityEngine.GameObject ILNMGONPOPB
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ILNMGONPOPB();
    // Get instance field reference: private UnityEngine.Vector3[] KKGJPMDJOMJ
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& dyn_KKGJPMDJOMJ();
    // Get instance field reference: private UnityEngine.LineRenderer ADMMPKAAILI
    [[deprecated("Use field access instead!")]] ::UnityEngine::LineRenderer*& dyn_ADMMPKAAILI();
    // Get instance field reference: private UnityEngine.GameObject CHOBOICMCCN
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_CHOBOICMCCN();
    // Get instance field reference: private System.Boolean IPMLIBBPOGE
    [[deprecated("Use field access instead!")]] bool& dyn_IPMLIBBPOGE();
    // Get instance field reference: private System.Single <OFCKIEOKCHC>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$OFCKIEOKCHC$k__BackingField();
    // Get instance field reference: private System.Single <NIDFLJDJBLB>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$NIDFLJDJBLB$k__BackingField();
    // Get instance field reference: private System.Single NKGIEOJMCFO
    [[deprecated("Use field access instead!")]] float& dyn_NKGIEOJMCFO();
    // Get instance field reference: private System.Single DKCCNKCGCBD
    [[deprecated("Use field access instead!")]] float& dyn_DKCCNKCGCBD();
    // Get instance field reference: public System.Boolean autoRunEngaged
    [[deprecated("Use field access instead!")]] bool& dyn_autoRunEngaged();
    // Get instance field reference: private UnityEngine.Vector3 IAJKBBMNAON
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_IAJKBBMNAON();
    // Get instance field reference: private MagicalActual.Grabber DOJJNJHKNLK
    [[deprecated("Use field access instead!")]] ::MagicalActual::Grabber*& dyn_DOJJNJHKNLK();
    // Get instance field reference: private System.Single GMCGEKMLOKG
    [[deprecated("Use field access instead!")]] float& dyn_GMCGEKMLOKG();
    // Get instance field reference: private System.Boolean <FDENODKKCAE>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$FDENODKKCAE$k__BackingField();
    // Get instance field reference: private System.Boolean GDECEEMKIPA
    [[deprecated("Use field access instead!")]] bool& dyn_GDECEEMKIPA();
    // Get instance field reference: private System.Int32 IGOPFAFMIIP
    [[deprecated("Use field access instead!")]] int& dyn_IGOPFAFMIIP();
    // Get instance field reference: private System.Single <KCCEABPHKFN>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$KCCEABPHKFN$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <OBGKJCDEDBI>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$OBGKJCDEDBI$k__BackingField();
    // Get instance field reference: private System.Single <ONLLLFMHCFO>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$ONLLLFMHCFO$k__BackingField();
    // Get instance field reference: private System.String OCLOJMPJONI
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OCLOJMPJONI();
    // Get instance field reference: private System.String GNNCECPJLGO
    [[deprecated("Use field access instead!")]] ::StringW& dyn_GNNCECPJLGO();
    // Get instance field reference: private System.Boolean MDMPCFKHOFM
    [[deprecated("Use field access instead!")]] bool& dyn_MDMPCFKHOFM();
    // Get instance field reference: public System.Boolean isGrabberScrolling
    [[deprecated("Use field access instead!")]] bool& dyn_isGrabberScrolling();
    // Get instance field reference: private MagicalActual.Teleporter/TeleporterState IICCABCMFCP
    [[deprecated("Use field access instead!")]] ::MagicalActual::Teleporter::TeleporterState& dyn_IICCABCMFCP();
    // private System.Void KNAGIBCAHOO(System.Single MMMEIONJJFJ)
    // Offset: 0x13A329C
    void KNAGIBCAHOO(float MMMEIONJJFJ);
    // public UnityEngine.Vector3 get_currentSlideDirection()
    // Offset: 0x13A32A4
    ::UnityEngine::Vector3 get_currentSlideDirection();
    // private System.Void PFCMHPEHMHE(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13A32B0
    void PFCMHPEHMHE(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public System.Void .ctor()
    // Offset: 0x13A32E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Teleporter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Teleporter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Teleporter*, creationType>()));
    }
    // private System.Void BGKPAPEKGDI(System.Single MMMEIONJJFJ)
    // Offset: 0x13A33C4
    void BGKPAPEKGDI(float MMMEIONJJFJ);
    // public System.Single get_currentSlideSpeed()
    // Offset: 0x13A33CC
    float get_currentSlideSpeed();
    // public System.Single NMEJLCMKECA()
    // Offset: 0x13A33D4
    float NMEJLCMKECA();
    // private System.Void MLAHOPHPJBG(System.Single MMMEIONJJFJ)
    // Offset: 0x13A33DC
    void MLAHOPHPJBG(float MMMEIONJJFJ);
    // public System.Single get_padYAxis()
    // Offset: 0x13A33E4
    float get_padYAxis();
    // private System.Void KEDEIDAGOHC(System.Single MMMEIONJJFJ)
    // Offset: 0x13A33EC
    void KEDEIDAGOHC(float MMMEIONJJFJ);
    // private System.Void CNBLGHJPMPO(System.Single MMMEIONJJFJ)
    // Offset: 0x13A33F4
    void CNBLGHJPMPO(float MMMEIONJJFJ);
    // private UnityEngine.Vector3 BPONBBMJFOJ(UnityEngine.Vector3 MILGJAJMKAB, UnityEngine.Vector3 LKMBPNJDCFN, System.Single BINJODOOEDL, System.Single FFNMEJOKJID)
    // Offset: 0x13A33FC
    ::UnityEngine::Vector3 BPONBBMJFOJ(::UnityEngine::Vector3 MILGJAJMKAB, ::UnityEngine::Vector3 LKMBPNJDCFN, float BINJODOOEDL, float FFNMEJOKJID);
    // public System.Single ELGDGPMFOIO()
    // Offset: 0x13A367C
    float ELGDGPMFOIO();
    // private System.Void FAHHINNDPMO(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13A3684
    void FAHHINNDPMO(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void MNHLKNJHFIL(UnityEngine.Vector3 MMMEIONJJFJ)
    // Offset: 0x13A36EC
    void MNHLKNJHFIL(::UnityEngine::Vector3 MMMEIONJJFJ);
    // private System.Void FFEBAINKOAH()
    // Offset: 0x13A36F8
    void FFEBAINKOAH();
    // private System.Void KGCMHEAFJBG(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13A3844
    void KGCMHEAFJBG(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void PHJOPEEPPCJ(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13A39DC
    void PHJOPEEPPCJ(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public System.Boolean get_isGripping()
    // Offset: 0x13A3DEC
    bool get_isGripping();
    // private System.Void HEEBDOJOBIG()
    // Offset: 0x13A3DF4
    void HEEBDOJOBIG();
    // public System.Void SetAllowTeleport(System.Boolean OMLPNCLFFMJ)
    // Offset: 0x13A4D64
    void SetAllowTeleport(bool OMLPNCLFFMJ);
    // public System.Single get_currentSmoothTurnDirection()
    // Offset: 0x13A4D70
    float get_currentSmoothTurnDirection();
    // private System.Void CFKIPBFPJHG(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13A4D78
    void CFKIPBFPJHG(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void Awake()
    // Offset: 0x13A4DBC
    void Awake();
    // private System.Void Start()
    // Offset: 0x13A4F24
    void Start();
    // private UnityEngine.Vector3 ONGMDOONEFJ(UnityEngine.Vector3 MILGJAJMKAB, UnityEngine.Vector3 LKMBPNJDCFN, System.Single BINJODOOEDL, System.Single FFNMEJOKJID)
    // Offset: 0x13A549C
    ::UnityEngine::Vector3 ONGMDOONEFJ(::UnityEngine::Vector3 MILGJAJMKAB, ::UnityEngine::Vector3 LKMBPNJDCFN, float BINJODOOEDL, float FFNMEJOKJID);
    // public System.Single ICNJJNJHCML()
    // Offset: 0x13A4D54
    float ICNJJNJHCML();
    // private System.Void MDMGBILHGLA(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13A5720
    void MDMGBILHGLA(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public System.Void AEDOLGMIGKP(System.Boolean OMLPNCLFFMJ)
    // Offset: 0x13A5958
    void AEDOLGMIGKP(bool OMLPNCLFFMJ);
    // private System.Void NGKGKJIFDCA(System.Single MMMEIONJJFJ)
    // Offset: 0x13A5964
    void NGKGKJIFDCA(float MMMEIONJJFJ);
    // private System.Void BGCFGDCFIHL(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13A596C
    void BGCFGDCFIHL(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void JGDCLAIPFIC()
    // Offset: 0x13A5A6C
    void JGDCLAIPFIC();
    // private System.Void GNKKIMHDDMN(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13A5BE0
    void GNKKIMHDDMN(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public UnityEngine.Vector3 COFNMOCLKBH()
    // Offset: 0x13A5CF0
    ::UnityEngine::Vector3 COFNMOCLKBH();
    // public System.Void CancelTeleport()
    // Offset: 0x13A3CE4
    void CancelTeleport();
    // private System.Void FIKMLBJHPAN(UnityEngine.Vector3 MMMEIONJJFJ)
    // Offset: 0x13A4D28
    void FIKMLBJHPAN(::UnityEngine::Vector3 MMMEIONJJFJ);
    // private System.Void INMKGMJMMNK(UnityEngine.Vector3 MMMEIONJJFJ)
    // Offset: 0x13A4D3C
    void INMKGMJMMNK(::UnityEngine::Vector3 MMMEIONJJFJ);
    // private System.Void NPOFAMMPICE(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13A5CFC
    void NPOFAMMPICE(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x13A5DF0
    void DGJGAFKDIDK();
    // private System.Void LateUpdate()
    // Offset: 0x13A6374
    void LateUpdate();
    // public System.Single PFFIIDOLFJD()
    // Offset: 0x13A4D34
    float PFFIIDOLFJD();
    // public System.Single PJLPAOBJKFD()
    // Offset: 0x13A729C
    float PJLPAOBJKFD();
    // private System.Void PJKLFMMHIOL(System.Single MMMEIONJJFJ)
    // Offset: 0x13A4D18
    void PJKLFMMHIOL(float MMMEIONJJFJ);
    // public System.Single get_padXAxis()
    // Offset: 0x13A4D20
    float get_padXAxis();
    // public UnityEngine.Vector3 OKNBAPLBPNL()
    // Offset: 0x13A4D48
    ::UnityEngine::Vector3 OKNBAPLBPNL();
    // private System.Void BIEOBFKKGEP(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13A72A4
    void BIEOBFKKGEP(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void FGKNKAGONMG(System.Single MMMEIONJJFJ)
    // Offset: 0x13A4D5C
    void FGKNKAGONMG(float MMMEIONJJFJ);
    // public System.Void IHFJGGACKEH()
    // Offset: 0x13A7430
    void IHFJGGACKEH();
    // private System.Void CINGBLEIBFB(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13A7534
    void CINGBLEIBFB(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void FJJIFFHBFHC(System.Boolean MMMEIONJJFJ)
    // Offset: 0x13A39D0
    void FJJIFFHBFHC(bool MMMEIONJJFJ);
  }; // MagicalActual.Teleporter
  #pragma pack(pop)
  static check_size<sizeof(Teleporter), 220 + sizeof(::MagicalActual::Teleporter::TeleporterState)> __MagicalActual_TeleporterSizeCheck;
  static_assert(sizeof(Teleporter) == 0xE0);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Teleporter::TeleporterState, "MagicalActual", "Teleporter/TeleporterState");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Teleporter::KNAGIBCAHOO
// Il2CppName: KNAGIBCAHOO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(float)>(&MagicalActual::Teleporter::KNAGIBCAHOO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "KNAGIBCAHOO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::get_currentSlideDirection
// Il2CppName: get_currentSlideDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::get_currentSlideDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "get_currentSlideDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::PFCMHPEHMHE
// Il2CppName: PFCMHPEHMHE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Teleporter::PFCMHPEHMHE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "PFCMHPEHMHE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Teleporter::BGKPAPEKGDI
// Il2CppName: BGKPAPEKGDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(float)>(&MagicalActual::Teleporter::BGKPAPEKGDI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "BGKPAPEKGDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::get_currentSlideSpeed
// Il2CppName: get_currentSlideSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::get_currentSlideSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "get_currentSlideSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::NMEJLCMKECA
// Il2CppName: NMEJLCMKECA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::NMEJLCMKECA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "NMEJLCMKECA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::MLAHOPHPJBG
// Il2CppName: MLAHOPHPJBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(float)>(&MagicalActual::Teleporter::MLAHOPHPJBG)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "MLAHOPHPJBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::get_padYAxis
// Il2CppName: get_padYAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::get_padYAxis)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "get_padYAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::KEDEIDAGOHC
// Il2CppName: KEDEIDAGOHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(float)>(&MagicalActual::Teleporter::KEDEIDAGOHC)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "KEDEIDAGOHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::CNBLGHJPMPO
// Il2CppName: CNBLGHJPMPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(float)>(&MagicalActual::Teleporter::CNBLGHJPMPO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "CNBLGHJPMPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::BPONBBMJFOJ
// Il2CppName: BPONBBMJFOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::Teleporter::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, float, float)>(&MagicalActual::Teleporter::BPONBBMJFOJ)> {
  static const MethodInfo* get() {
    static auto* MILGJAJMKAB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LKMBPNJDCFN = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* BINJODOOEDL = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "BPONBBMJFOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MILGJAJMKAB, LKMBPNJDCFN, BINJODOOEDL, FFNMEJOKJID});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::ELGDGPMFOIO
// Il2CppName: ELGDGPMFOIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::ELGDGPMFOIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "ELGDGPMFOIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::FAHHINNDPMO
// Il2CppName: FAHHINNDPMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Teleporter::FAHHINNDPMO)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "FAHHINNDPMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::MNHLKNJHFIL
// Il2CppName: MNHLKNJHFIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::UnityEngine::Vector3)>(&MagicalActual::Teleporter::MNHLKNJHFIL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "MNHLKNJHFIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::FFEBAINKOAH
// Il2CppName: FFEBAINKOAH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::FFEBAINKOAH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "FFEBAINKOAH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::KGCMHEAFJBG
// Il2CppName: KGCMHEAFJBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Teleporter::KGCMHEAFJBG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "KGCMHEAFJBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::PHJOPEEPPCJ
// Il2CppName: PHJOPEEPPCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Teleporter::PHJOPEEPPCJ)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "PHJOPEEPPCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::get_isGripping
// Il2CppName: get_isGripping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::get_isGripping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "get_isGripping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::HEEBDOJOBIG
// Il2CppName: HEEBDOJOBIG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::HEEBDOJOBIG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "HEEBDOJOBIG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::SetAllowTeleport
// Il2CppName: SetAllowTeleport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(bool)>(&MagicalActual::Teleporter::SetAllowTeleport)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "SetAllowTeleport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::get_currentSmoothTurnDirection
// Il2CppName: get_currentSmoothTurnDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::get_currentSmoothTurnDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "get_currentSmoothTurnDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::CFKIPBFPJHG
// Il2CppName: CFKIPBFPJHG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Teleporter::CFKIPBFPJHG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "CFKIPBFPJHG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::ONGMDOONEFJ
// Il2CppName: ONGMDOONEFJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::Teleporter::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, float, float)>(&MagicalActual::Teleporter::ONGMDOONEFJ)> {
  static const MethodInfo* get() {
    static auto* MILGJAJMKAB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LKMBPNJDCFN = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* BINJODOOEDL = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "ONGMDOONEFJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MILGJAJMKAB, LKMBPNJDCFN, BINJODOOEDL, FFNMEJOKJID});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::ICNJJNJHCML
// Il2CppName: ICNJJNJHCML
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::ICNJJNJHCML)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "ICNJJNJHCML", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::MDMGBILHGLA
// Il2CppName: MDMGBILHGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Teleporter::MDMGBILHGLA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "MDMGBILHGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::AEDOLGMIGKP
// Il2CppName: AEDOLGMIGKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(bool)>(&MagicalActual::Teleporter::AEDOLGMIGKP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "AEDOLGMIGKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::NGKGKJIFDCA
// Il2CppName: NGKGKJIFDCA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(float)>(&MagicalActual::Teleporter::NGKGKJIFDCA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "NGKGKJIFDCA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::BGCFGDCFIHL
// Il2CppName: BGCFGDCFIHL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Teleporter::BGCFGDCFIHL)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "BGCFGDCFIHL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::JGDCLAIPFIC
// Il2CppName: JGDCLAIPFIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::JGDCLAIPFIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "JGDCLAIPFIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::GNKKIMHDDMN
// Il2CppName: GNKKIMHDDMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Teleporter::GNKKIMHDDMN)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "GNKKIMHDDMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::COFNMOCLKBH
// Il2CppName: COFNMOCLKBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::COFNMOCLKBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "COFNMOCLKBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::CancelTeleport
// Il2CppName: CancelTeleport
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::CancelTeleport)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "CancelTeleport", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::FIKMLBJHPAN
// Il2CppName: FIKMLBJHPAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::UnityEngine::Vector3)>(&MagicalActual::Teleporter::FIKMLBJHPAN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "FIKMLBJHPAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::INMKGMJMMNK
// Il2CppName: INMKGMJMMNK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::UnityEngine::Vector3)>(&MagicalActual::Teleporter::INMKGMJMMNK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "INMKGMJMMNK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::NPOFAMMPICE
// Il2CppName: NPOFAMMPICE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Teleporter::NPOFAMMPICE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "NPOFAMMPICE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::PFFIIDOLFJD
// Il2CppName: PFFIIDOLFJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::PFFIIDOLFJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "PFFIIDOLFJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::PJLPAOBJKFD
// Il2CppName: PJLPAOBJKFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::PJLPAOBJKFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "PJLPAOBJKFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::PJKLFMMHIOL
// Il2CppName: PJKLFMMHIOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(float)>(&MagicalActual::Teleporter::PJKLFMMHIOL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "PJKLFMMHIOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::get_padXAxis
// Il2CppName: get_padXAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::get_padXAxis)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "get_padXAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::OKNBAPLBPNL
// Il2CppName: OKNBAPLBPNL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::OKNBAPLBPNL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "OKNBAPLBPNL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::BIEOBFKKGEP
// Il2CppName: BIEOBFKKGEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Teleporter::BIEOBFKKGEP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "BIEOBFKKGEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::FGKNKAGONMG
// Il2CppName: FGKNKAGONMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(float)>(&MagicalActual::Teleporter::FGKNKAGONMG)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "FGKNKAGONMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::IHFJGGACKEH
// Il2CppName: IHFJGGACKEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)()>(&MagicalActual::Teleporter::IHFJGGACKEH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "IHFJGGACKEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::CINGBLEIBFB
// Il2CppName: CINGBLEIBFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Teleporter::CINGBLEIBFB)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "CINGBLEIBFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Teleporter::FJJIFFHBFHC
// Il2CppName: FJJIFFHBFHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Teleporter::*)(bool)>(&MagicalActual::Teleporter::FJJIFFHBFHC)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Teleporter*), "FJJIFFHBFHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
