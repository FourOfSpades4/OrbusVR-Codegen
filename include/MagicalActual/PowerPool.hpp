// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PowerPool
  class PowerPool;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PowerPool);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PowerPool*, "MagicalActual", "PowerPool");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x3D
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PowerPool
  // [TokenAttribute] Offset: FFFFFFFF
  class PowerPool : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject[] effects
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::GameObject*> effects;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private UnityEngine.GameObject DBFGEMEENCG
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* DBFGEMEENCG;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single NDBNGLEPFPI
    // Size: 0x4
    // Offset: 0x38
    float NDBNGLEPFPI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Byte AOCOICMJBKM
    // Size: 0x1
    // Offset: 0x3C
    uint8_t AOCOICMJBKM;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public UnityEngine.GameObject[] effects
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_effects();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private UnityEngine.GameObject DBFGEMEENCG
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_DBFGEMEENCG();
    // Get instance field reference: private System.Single NDBNGLEPFPI
    [[deprecated("Use field access instead!")]] float& dyn_NDBNGLEPFPI();
    // Get instance field reference: private System.Byte AOCOICMJBKM
    [[deprecated("Use field access instead!")]] uint8_t& dyn_AOCOICMJBKM();
    // public System.Void NMPGLDGDDNL(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1B0F580
    void NMPGLDGDDNL(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void HCPOGGKGLLE(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B0F694
    void HCPOGGKGLLE(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void PPKPHFHCELO(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1B0FAE8
    void PPKPHFHCELO(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void IMOMBNHAOOF()
    // Offset: 0x1B0FBFC
    void IMOMBNHAOOF();
    // public System.Void EBJDLAIJJJE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1B0FF10
    void EBJDLAIJJJE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x1B10024
    void NEDFCIDMJBB();
    // private System.Void HLPEENNNJIA()
    // Offset: 0x1B100B0
    void HLPEENNNJIA();
    // private System.Void GLEAHJGMOKP()
    // Offset: 0x1B103BC
    void GLEAHJGMOKP();
    // private System.Void OKKDFNMPICB()
    // Offset: 0x1B10444
    void OKKDFNMPICB();
    // private System.Void OFDLPPLEIMJ()
    // Offset: 0x1B0F7D4
    void OFDLPPLEIMJ();
    // private System.Void MDHBNHLHENF(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B10758
    void MDHBNHLHENF(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MAJPCEDPDGK(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B10838
    void MAJPCEDPDGK(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void PJKIBFEFNME()
    // Offset: 0x1B10C8C
    void PJKIBFEFNME();
    // private System.Void HCAODAADGBA(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B10D14
    void HCAODAADGBA(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NHADFEMILCC()
    // Offset: 0x1B10E54
    void NHADFEMILCC();
    // private System.Void OEBMOJCKDPJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B10EE0
    void OEBMOJCKDPJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MKAIFNHPHPO()
    // Offset: 0x1B11020
    void MKAIFNHPHPO();
    // private System.Void IPFIFLMBJCE(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B11334
    void IPFIFLMBJCE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x1B113A0
    void NNDKJCJFIAK();
    // private System.Void LPKMNMHNHIH()
    // Offset: 0x1B113A4
    void LPKMNMHNHIH();
    // public System.Void OIPLBADJHFI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1B116B8
    void OIPLBADJHFI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void NHAPFEJBHMN()
    // Offset: 0x1B10E58
    void NHAPFEJBHMN();
    // private System.Void DKCEPCAMFLE(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B117CC
    void DKCEPCAMFLE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void KJDEPIMMFNK(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B1190C
    void KJDEPIMMFNK(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x1B11978
    void BDEDGNGMHMN();
    // private System.Void APECFOKOAGG(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B1197C
    void APECFOKOAGG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BMJNBLJPOCF(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B119E8
    void BMJNBLJPOCF(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void JCAOFFAOBEL(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B11B28
    void JCAOFFAOBEL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x1B11F7C
    void EIIKFEMCNKM();
    // private System.Void PCMGEOEBHNM(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B11F80
    void PCMGEOEBHNM(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void EDGNKKKMBBD(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B11FEC
    void EDGNKKKMBBD(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1B120E0
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void KKHNPLBMOCO(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B121F4
    void KKHNPLBMOCO(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void JJFDAFGMDEA()
    // Offset: 0x1B12058
    void JJFDAFGMDEA();
    // private System.Void HKPFGADODCM()
    // Offset: 0x1B107C4
    void HKPFGADODCM();
    // private System.Void GIABFLLHPOB()
    // Offset: 0x1B11C68
    void GIABFLLHPOB();
    // private System.Void MKMICCLHLEM(System.Object OMLPNCLFFMJ)
    // Offset: 0x1B12260
    void MKMICCLHLEM(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void .ctor()
    // Offset: 0x1B122CC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PowerPool* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PowerPool::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PowerPool*, creationType>()));
    }
    // private System.Void MMGMFODMGME()
    // Offset: 0x1B10978
    void MMGMFODMGME();
    // private System.Void Start()
    // Offset: 0x1B1232C
    void Start();
    // private System.Void MAAGJAMEAKP()
    // Offset: 0x1B10028
    void MAAGJAMEAKP();
  }; // MagicalActual.PowerPool
  #pragma pack(pop)
  static check_size<sizeof(PowerPool), 60 + sizeof(uint8_t)> __MagicalActual_PowerPoolSizeCheck;
  static_assert(sizeof(PowerPool) == 0x3D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PowerPool::NMPGLDGDDNL
// Il2CppName: NMPGLDGDDNL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PowerPool::NMPGLDGDDNL)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "NMPGLDGDDNL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::HCPOGGKGLLE
// Il2CppName: HCPOGGKGLLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::HCPOGGKGLLE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "HCPOGGKGLLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::PPKPHFHCELO
// Il2CppName: PPKPHFHCELO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PowerPool::PPKPHFHCELO)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "PPKPHFHCELO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::IMOMBNHAOOF
// Il2CppName: IMOMBNHAOOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::IMOMBNHAOOF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "IMOMBNHAOOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::EBJDLAIJJJE
// Il2CppName: EBJDLAIJJJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PowerPool::EBJDLAIJJJE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "EBJDLAIJJJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::HLPEENNNJIA
// Il2CppName: HLPEENNNJIA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::HLPEENNNJIA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "HLPEENNNJIA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::GLEAHJGMOKP
// Il2CppName: GLEAHJGMOKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::GLEAHJGMOKP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "GLEAHJGMOKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::OKKDFNMPICB
// Il2CppName: OKKDFNMPICB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::OKKDFNMPICB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "OKKDFNMPICB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::OFDLPPLEIMJ
// Il2CppName: OFDLPPLEIMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::OFDLPPLEIMJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "OFDLPPLEIMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::MDHBNHLHENF
// Il2CppName: MDHBNHLHENF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::MDHBNHLHENF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "MDHBNHLHENF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::MAJPCEDPDGK
// Il2CppName: MAJPCEDPDGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::MAJPCEDPDGK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "MAJPCEDPDGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::PJKIBFEFNME
// Il2CppName: PJKIBFEFNME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::PJKIBFEFNME)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "PJKIBFEFNME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::HCAODAADGBA
// Il2CppName: HCAODAADGBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::HCAODAADGBA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "HCAODAADGBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::OEBMOJCKDPJ
// Il2CppName: OEBMOJCKDPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::OEBMOJCKDPJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "OEBMOJCKDPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::MKAIFNHPHPO
// Il2CppName: MKAIFNHPHPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::MKAIFNHPHPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "MKAIFNHPHPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::IPFIFLMBJCE
// Il2CppName: IPFIFLMBJCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::IPFIFLMBJCE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "IPFIFLMBJCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::LPKMNMHNHIH
// Il2CppName: LPKMNMHNHIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::LPKMNMHNHIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "LPKMNMHNHIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::OIPLBADJHFI
// Il2CppName: OIPLBADJHFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PowerPool::OIPLBADJHFI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "OIPLBADJHFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::NHAPFEJBHMN
// Il2CppName: NHAPFEJBHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::NHAPFEJBHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "NHAPFEJBHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::DKCEPCAMFLE
// Il2CppName: DKCEPCAMFLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::DKCEPCAMFLE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "DKCEPCAMFLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::KJDEPIMMFNK
// Il2CppName: KJDEPIMMFNK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::KJDEPIMMFNK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "KJDEPIMMFNK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::APECFOKOAGG
// Il2CppName: APECFOKOAGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::APECFOKOAGG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "APECFOKOAGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::BMJNBLJPOCF
// Il2CppName: BMJNBLJPOCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::BMJNBLJPOCF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "BMJNBLJPOCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::JCAOFFAOBEL
// Il2CppName: JCAOFFAOBEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::JCAOFFAOBEL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "JCAOFFAOBEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::PCMGEOEBHNM
// Il2CppName: PCMGEOEBHNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::PCMGEOEBHNM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "PCMGEOEBHNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::EDGNKKKMBBD
// Il2CppName: EDGNKKKMBBD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::EDGNKKKMBBD)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "EDGNKKKMBBD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PowerPool::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::KKHNPLBMOCO
// Il2CppName: KKHNPLBMOCO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::KKHNPLBMOCO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "KKHNPLBMOCO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::JJFDAFGMDEA
// Il2CppName: JJFDAFGMDEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::JJFDAFGMDEA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "JJFDAFGMDEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::HKPFGADODCM
// Il2CppName: HKPFGADODCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::HKPFGADODCM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "HKPFGADODCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::GIABFLLHPOB
// Il2CppName: GIABFLLHPOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::GIABFLLHPOB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "GIABFLLHPOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::MKMICCLHLEM
// Il2CppName: MKMICCLHLEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)(::Il2CppObject*)>(&MagicalActual::PowerPool::MKMICCLHLEM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "MKMICCLHLEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PowerPool::MMGMFODMGME
// Il2CppName: MMGMFODMGME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::MMGMFODMGME)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "MMGMFODMGME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PowerPool::MAAGJAMEAKP
// Il2CppName: MAAGJAMEAKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PowerPool::*)()>(&MagicalActual::PowerPool::MAAGJAMEAKP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PowerPool*), "MAAGJAMEAKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
