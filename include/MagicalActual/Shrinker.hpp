// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: ParticleSystem
  class ParticleSystem;
  // Forward declaring type: AudioSource
  class AudioSource;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerTool
  class PlayerTool;
  // Forward declaring type: Grabber
  class Grabber;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Shrinker
  class Shrinker;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Shrinker);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Shrinker*, "MagicalActual", "Shrinker");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x4D
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Shrinker
  // [TokenAttribute] Offset: FFFFFFFF
  class Shrinker : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.ParticleSystem boltsEffect
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::ParticleSystem* boltsEffect;
    // Field size check
    static_assert(sizeof(::UnityEngine::ParticleSystem*) == 0x8);
    // private UnityEngine.AudioSource boltsSound
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::AudioSource* boltsSound;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    // private UnityEngine.AudioSource goodScan
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::AudioSource* goodScan;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    // private UnityEngine.AudioSource badScan
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::AudioSource* badScan;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    // private MagicalActual.PlayerTool FKJHGIFOJKD
    // Size: 0x8
    // Offset: 0x38
    ::MagicalActual::PlayerTool* FKJHGIFOJKD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerTool*) == 0x8);
    // private System.Single LNFJGOLBGBB
    // Size: 0x4
    // Offset: 0x40
    float LNFJGOLBGBB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single CHLBNKPLICD
    // Size: 0x4
    // Offset: 0x44
    float CHLBNKPLICD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MKLMFNHLEHA
    // Size: 0x4
    // Offset: 0x48
    float MKLMFNHLEHA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean ILGPCBIMPEN
    // Size: 0x1
    // Offset: 0x4C
    bool ILGPCBIMPEN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.ParticleSystem boltsEffect
    [[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& dyn_boltsEffect();
    // Get instance field reference: private UnityEngine.AudioSource boltsSound
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& dyn_boltsSound();
    // Get instance field reference: private UnityEngine.AudioSource goodScan
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& dyn_goodScan();
    // Get instance field reference: private UnityEngine.AudioSource badScan
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& dyn_badScan();
    // Get instance field reference: private MagicalActual.PlayerTool FKJHGIFOJKD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerTool*& dyn_FKJHGIFOJKD();
    // Get instance field reference: private System.Single LNFJGOLBGBB
    [[deprecated("Use field access instead!")]] float& dyn_LNFJGOLBGBB();
    // Get instance field reference: private System.Single CHLBNKPLICD
    [[deprecated("Use field access instead!")]] float& dyn_CHLBNKPLICD();
    // Get instance field reference: private System.Single MKLMFNHLEHA
    [[deprecated("Use field access instead!")]] float& dyn_MKLMFNHLEHA();
    // Get instance field reference: private System.Boolean ILGPCBIMPEN
    [[deprecated("Use field access instead!")]] bool& dyn_ILGPCBIMPEN();
    // private System.Void DEGCMEJJNJI()
    // Offset: 0x1076F24
    void DEGCMEJJNJI();
    // private System.Void PGENGDMGJOK(System.Byte KLIPNGBEELK)
    // Offset: 0x1076F28
    void PGENGDMGJOK(uint8_t KLIPNGBEELK);
    // private System.Void ADLGPKAIPAA()
    // Offset: 0x1077088
    void ADLGPKAIPAA();
    // private System.Void ICBFACJBNPI()
    // Offset: 0x10770E0
    void ICBFACJBNPI();
    // private System.Void AMIPIMKIJMO()
    // Offset: 0x1077138
    void AMIPIMKIJMO();
    // private System.Void EMIPDKFHMPA(System.Byte KLIPNGBEELK)
    // Offset: 0x10772C4
    void EMIPDKFHMPA(uint8_t KLIPNGBEELK);
    // private System.Void PABPOCMFEJK(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1077420
    void PABPOCMFEJK(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void ABONCNLHCMP(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1077484
    void ABONCNLHCMP(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void LMFIENPBFKA()
    // Offset: 0x10774E8
    void LMFIENPBFKA();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x1077540
    void DFCOAPEIKLN();
    // private System.Void KDHCEDPPEOK(System.Byte KLIPNGBEELK)
    // Offset: 0x1077544
    void KDHCEDPPEOK(uint8_t KLIPNGBEELK);
    // private System.Void Start()
    // Offset: 0x10776A4
    void Start();
    // private System.Void SignalReceived(System.Byte KLIPNGBEELK)
    // Offset: 0x10776A8
    void SignalReceived(uint8_t KLIPNGBEELK);
    // private System.Void JAKEMFFOJGE(System.Byte KLIPNGBEELK)
    // Offset: 0x1077808
    void JAKEMFFOJGE(uint8_t KLIPNGBEELK);
    // private System.Void DJIGIJKOPDC()
    // Offset: 0x1077968
    void DJIGIJKOPDC();
    // private System.Void ECBJEKPINME(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x10779C0
    void ECBJEKPINME(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void LACFBAIDCBK()
    // Offset: 0x1077A20
    void LACFBAIDCBK();
    // private System.Void FGPHMNHNKHP(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1077A78
    void FGPHMNHNKHP(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void JDJILFHNOGP()
    // Offset: 0x1077AD4
    void JDJILFHNOGP();
    // private System.Void PhysicsInteractableUngrip(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1077B2C
    void PhysicsInteractableUngrip(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void Awake()
    // Offset: 0x1077B84
    void Awake();
    // private System.Void EEMBCPKCOIL()
    // Offset: 0x1077BDC
    void EEMBCPKCOIL();
    // private System.Void EMIJIIFBDLM()
    // Offset: 0x1077D6C
    void EMIJIIFBDLM();
    // private System.Void FixedUpdate()
    // Offset: 0x1077EF8
    void FixedUpdate();
    // private System.Void MGMOCPLJPAM(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1078084
    void MGMOCPLJPAM(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void DDJINHIPKCE()
    // Offset: 0x10780E8
    void DDJINHIPKCE();
    // private System.Void MILGJAHIOLC(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1078274
    void MILGJAHIOLC(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void BJILDGNACGK(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x10782D4
    void BJILDGNACGK(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void NIGOCBKLOFH()
    // Offset: 0x1078338
    void NIGOCBKLOFH();
    // private System.Void LODDPHAEIAD(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x10784C4
    void LODDPHAEIAD(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void BLIPCIAAIHI()
    // Offset: 0x1078528
    void BLIPCIAAIHI();
    // private System.Void NLFOPEAGLDJ()
    // Offset: 0x10786B8
    void NLFOPEAGLDJ();
    // private System.Void APIMIOELFAJ()
    // Offset: 0x1078844
    void APIMIOELFAJ();
    // private System.Void EDJIILEFNPD()
    // Offset: 0x1078848
    void EDJIILEFNPD();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x10788A0
    void OACMGPBCPEL();
    // private System.Void KGKKNFEMGAM()
    // Offset: 0x10788A4
    void KGKKNFEMGAM();
    // public System.Void .ctor()
    // Offset: 0x10788FC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Shrinker* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Shrinker::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Shrinker*, creationType>()));
    }
    // private System.Void AKONOOIDPDA()
    // Offset: 0x1078914
    void AKONOOIDPDA();
    // private System.Void DGNNJFGMCED(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x107896C
    void DGNNJFGMCED(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void LOEFDHDIHGE()
    // Offset: 0x10789D0
    void LOEFDHDIHGE();
    // private System.Void PhysicsInteractableGrip(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1078B5C
    void PhysicsInteractableGrip(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void KKEABMBACIC()
    // Offset: 0x1078BB8
    void KKEABMBACIC();
    // private System.Void OCFOKKHGALJ(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1078C10
    void OCFOKKHGALJ(::MagicalActual::Grabber* FOIEAOKBGLM);
    // private System.Void FLGPKPALCIO(System.Byte KLIPNGBEELK)
    // Offset: 0x1078C74
    void FLGPKPALCIO(uint8_t KLIPNGBEELK);
    // private System.Void EIFLPHNNCPC(MagicalActual.Grabber FOIEAOKBGLM)
    // Offset: 0x1078DD0
    void EIFLPHNNCPC(::MagicalActual::Grabber* FOIEAOKBGLM);
  }; // MagicalActual.Shrinker
  #pragma pack(pop)
  static check_size<sizeof(Shrinker), 76 + sizeof(bool)> __MagicalActual_ShrinkerSizeCheck;
  static_assert(sizeof(Shrinker) == 0x4D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Shrinker::DEGCMEJJNJI
// Il2CppName: DEGCMEJJNJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::DEGCMEJJNJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "DEGCMEJJNJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::PGENGDMGJOK
// Il2CppName: PGENGDMGJOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(uint8_t)>(&MagicalActual::Shrinker::PGENGDMGJOK)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "PGENGDMGJOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::ADLGPKAIPAA
// Il2CppName: ADLGPKAIPAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::ADLGPKAIPAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "ADLGPKAIPAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::ICBFACJBNPI
// Il2CppName: ICBFACJBNPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::ICBFACJBNPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "ICBFACJBNPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::AMIPIMKIJMO
// Il2CppName: AMIPIMKIJMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::AMIPIMKIJMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "AMIPIMKIJMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::EMIPDKFHMPA
// Il2CppName: EMIPDKFHMPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(uint8_t)>(&MagicalActual::Shrinker::EMIPDKFHMPA)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "EMIPDKFHMPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::PABPOCMFEJK
// Il2CppName: PABPOCMFEJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::PABPOCMFEJK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "PABPOCMFEJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::ABONCNLHCMP
// Il2CppName: ABONCNLHCMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::ABONCNLHCMP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "ABONCNLHCMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::LMFIENPBFKA
// Il2CppName: LMFIENPBFKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::LMFIENPBFKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "LMFIENPBFKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::KDHCEDPPEOK
// Il2CppName: KDHCEDPPEOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(uint8_t)>(&MagicalActual::Shrinker::KDHCEDPPEOK)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "KDHCEDPPEOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::SignalReceived
// Il2CppName: SignalReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(uint8_t)>(&MagicalActual::Shrinker::SignalReceived)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "SignalReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::JAKEMFFOJGE
// Il2CppName: JAKEMFFOJGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(uint8_t)>(&MagicalActual::Shrinker::JAKEMFFOJGE)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "JAKEMFFOJGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::DJIGIJKOPDC
// Il2CppName: DJIGIJKOPDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::DJIGIJKOPDC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "DJIGIJKOPDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::ECBJEKPINME
// Il2CppName: ECBJEKPINME
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::ECBJEKPINME)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "ECBJEKPINME", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::LACFBAIDCBK
// Il2CppName: LACFBAIDCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::LACFBAIDCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "LACFBAIDCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::FGPHMNHNKHP
// Il2CppName: FGPHMNHNKHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::FGPHMNHNKHP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "FGPHMNHNKHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::JDJILFHNOGP
// Il2CppName: JDJILFHNOGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::JDJILFHNOGP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "JDJILFHNOGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::PhysicsInteractableUngrip
// Il2CppName: PhysicsInteractableUngrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::PhysicsInteractableUngrip)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "PhysicsInteractableUngrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::EEMBCPKCOIL
// Il2CppName: EEMBCPKCOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::EEMBCPKCOIL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "EEMBCPKCOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::EMIJIIFBDLM
// Il2CppName: EMIJIIFBDLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::EMIJIIFBDLM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "EMIJIIFBDLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::MGMOCPLJPAM
// Il2CppName: MGMOCPLJPAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::MGMOCPLJPAM)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "MGMOCPLJPAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::DDJINHIPKCE
// Il2CppName: DDJINHIPKCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::DDJINHIPKCE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "DDJINHIPKCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::MILGJAHIOLC
// Il2CppName: MILGJAHIOLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::MILGJAHIOLC)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "MILGJAHIOLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::BJILDGNACGK
// Il2CppName: BJILDGNACGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::BJILDGNACGK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "BJILDGNACGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::NIGOCBKLOFH
// Il2CppName: NIGOCBKLOFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::NIGOCBKLOFH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "NIGOCBKLOFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::LODDPHAEIAD
// Il2CppName: LODDPHAEIAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::LODDPHAEIAD)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "LODDPHAEIAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::BLIPCIAAIHI
// Il2CppName: BLIPCIAAIHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::BLIPCIAAIHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "BLIPCIAAIHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::NLFOPEAGLDJ
// Il2CppName: NLFOPEAGLDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::NLFOPEAGLDJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "NLFOPEAGLDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::APIMIOELFAJ
// Il2CppName: APIMIOELFAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::APIMIOELFAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "APIMIOELFAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::EDJIILEFNPD
// Il2CppName: EDJIILEFNPD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::EDJIILEFNPD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "EDJIILEFNPD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::KGKKNFEMGAM
// Il2CppName: KGKKNFEMGAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::KGKKNFEMGAM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "KGKKNFEMGAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Shrinker::AKONOOIDPDA
// Il2CppName: AKONOOIDPDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::AKONOOIDPDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "AKONOOIDPDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::DGNNJFGMCED
// Il2CppName: DGNNJFGMCED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::DGNNJFGMCED)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "DGNNJFGMCED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::LOEFDHDIHGE
// Il2CppName: LOEFDHDIHGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::LOEFDHDIHGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "LOEFDHDIHGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::PhysicsInteractableGrip
// Il2CppName: PhysicsInteractableGrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::PhysicsInteractableGrip)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "PhysicsInteractableGrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::KKEABMBACIC
// Il2CppName: KKEABMBACIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)()>(&MagicalActual::Shrinker::KKEABMBACIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "KKEABMBACIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::OCFOKKHGALJ
// Il2CppName: OCFOKKHGALJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::OCFOKKHGALJ)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "OCFOKKHGALJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::FLGPKPALCIO
// Il2CppName: FLGPKPALCIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(uint8_t)>(&MagicalActual::Shrinker::FLGPKPALCIO)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "FLGPKPALCIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::Shrinker::EIFLPHNNCPC
// Il2CppName: EIFLPHNNCPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Shrinker::*)(::MagicalActual::Grabber*)>(&MagicalActual::Shrinker::EIFLPHNNCPC)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Shrinker*), "EIFLPHNNCPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
