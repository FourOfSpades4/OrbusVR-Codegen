// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Vectrosity
namespace Vectrosity {
  // Forward declaring type: VectorLine
  class VectorLine;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: DebugBox
  class DebugBox;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::DebugBox);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::DebugBox*, "MagicalActual", "DebugBox");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.DebugBox
  // [TokenAttribute] Offset: FFFFFFFF
  class DebugBox : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Vector3 OMBHDEFLBEE
    // Size: 0xC
    // Offset: 0x10
    ::UnityEngine::Vector3 OMBHDEFLBEE;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Vector3 HJAJPOEGCJK
    // Size: 0xC
    // Offset: 0x1C
    ::UnityEngine::Vector3 HJAJPOEGCJK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public System.Single ICMHFDCBDPJ
    // Size: 0x4
    // Offset: 0x28
    float ICMHFDCBDPJ;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single MKANKHGHGGL
    // Size: 0x4
    // Offset: 0x2C
    float MKANKHGHGGL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.Quaternion NOFFCFFNFEK
    // Size: 0x10
    // Offset: 0x30
    ::UnityEngine::Quaternion NOFFCFFNFEK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // public UnityEngine.Quaternion NMKNHDJPJIF
    // Size: 0x10
    // Offset: 0x40
    ::UnityEngine::Quaternion NMKNHDJPJIF;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // public UnityEngine.Vector3 HIJNLFBCAOK
    // Size: 0xC
    // Offset: 0x50
    ::UnityEngine::Vector3 HIJNLFBCAOK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public System.UInt16 BHHGMPLHEDC
    // Size: 0x2
    // Offset: 0x5C
    uint16_t BHHGMPLHEDC;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // Padding between fields: BHHGMPLHEDC and: HBPCBGINKIG
    char __padding7[0x2] = {};
    // private Vectrosity.VectorLine HBPCBGINKIG
    // Size: 0x8
    // Offset: 0x60
    ::Vectrosity::VectorLine* HBPCBGINKIG;
    // Field size check
    static_assert(sizeof(::Vectrosity::VectorLine*) == 0x8);
    // private UnityEngine.GameObject FMJCPBNAOEC
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::GameObject* FMJCPBNAOEC;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Vector3 OMBHDEFLBEE
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_OMBHDEFLBEE();
    // Get instance field reference: public UnityEngine.Vector3 HJAJPOEGCJK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_HJAJPOEGCJK();
    // Get instance field reference: public System.Single ICMHFDCBDPJ
    [[deprecated("Use field access instead!")]] float& dyn_ICMHFDCBDPJ();
    // Get instance field reference: public System.Single MKANKHGHGGL
    [[deprecated("Use field access instead!")]] float& dyn_MKANKHGHGGL();
    // Get instance field reference: public UnityEngine.Quaternion NOFFCFFNFEK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_NOFFCFFNFEK();
    // Get instance field reference: public UnityEngine.Quaternion NMKNHDJPJIF
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_NMKNHDJPJIF();
    // Get instance field reference: public UnityEngine.Vector3 HIJNLFBCAOK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_HIJNLFBCAOK();
    // Get instance field reference: public System.UInt16 BHHGMPLHEDC
    [[deprecated("Use field access instead!")]] uint16_t& dyn_BHHGMPLHEDC();
    // Get instance field reference: private Vectrosity.VectorLine HBPCBGINKIG
    [[deprecated("Use field access instead!")]] ::Vectrosity::VectorLine*& dyn_HBPCBGINKIG();
    // Get instance field reference: private UnityEngine.GameObject FMJCPBNAOEC
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_FMJCPBNAOEC();
    // public System.Void DIGAJFNICJA()
    // Offset: 0x19B93A0
    void DIGAJFNICJA();
    // public System.Void DMMKKJLHNJC(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19B95E0
    void DMMKKJLHNJC(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void ALHGJHKLEKN()
    // Offset: 0x19B9638
    void ALHGJHKLEKN();
    // public System.Void IMOBJFPIMCF(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19B9878
    void IMOBJFPIMCF(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void IDHHEHEIIAL()
    // Offset: 0x19B98D0
    void IDHHEHEIIAL();
    // public System.Void NHKKCFAJKPC()
    // Offset: 0x19B9B10
    void NHKKCFAJKPC();
    // public System.Void PIEPNIJFICN(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19B9D50
    void PIEPNIJFICN(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void KMOGIMDNJLJ()
    // Offset: 0x19B9DAC
    void KMOGIMDNJLJ();
    // public System.Void .ctor(System.UInt16 APOGAJNBFJI)
    // Offset: 0x19B9FEC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DebugBox* New_ctor(uint16_t APOGAJNBFJI) {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::DebugBox::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DebugBox*, creationType>(APOGAJNBFJI)));
    }
    // public System.Void LFMMLKDHEMJ()
    // Offset: 0x19BA0A8
    void LFMMLKDHEMJ();
    // public System.Void NGENLHFOJMD()
    // Offset: 0x19BA2E8
    void NGENLHFOJMD();
    // public System.Void OPJFGOOJGOI()
    // Offset: 0x19BA528
    void OPJFGOOJGOI();
    // public System.Void PPHGIIANAOI(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BA768
    void PPHGIIANAOI(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void LPKDECOLAKB()
    // Offset: 0x19BA7C4
    void LPKDECOLAKB();
    // public System.Void BFKABLHLFOD()
    // Offset: 0x19BAA04
    void BFKABLHLFOD();
    // public System.Void AACCKMAODEI()
    // Offset: 0x19BAC44
    void AACCKMAODEI();
    // public System.Void BJHCOHLDHNC(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BAE84
    void BJHCOHLDHNC(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void FGEIEBBBGGJ()
    // Offset: 0x19BAEE0
    void FGEIEBBBGGJ();
    // public System.Void CABDJMEPBPN()
    // Offset: 0x19BB120
    void CABDJMEPBPN();
    // public System.Void MJOCDKBBIHH(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BB360
    void MJOCDKBBIHH(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void KFCPNEBIIMA()
    // Offset: 0x19BB3B4
    void KFCPNEBIIMA();
    // public System.Void PBMBFEPAMKD()
    // Offset: 0x19BB5F4
    void PBMBFEPAMKD();
    // public System.Void HMDHCLGCBBJ()
    // Offset: 0x19BB834
    void HMDHCLGCBBJ();
    // public System.Void AHPKDAPMHKE(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BBA74
    void AHPKDAPMHKE(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void DGPNBLAEDCI(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BBAD0
    void DGPNBLAEDCI(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void OFNKMGGBFKK(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BBB2C
    void OFNKMGGBFKK(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void BCEFFONECGO()
    // Offset: 0x19BBB88
    void BCEFFONECGO();
    // public System.Void FNILDFLEFGE(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BBDC8
    void FNILDFLEFGE(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void DDKAAFJMCJF()
    // Offset: 0x19BBE24
    void DDKAAFJMCJF();
    // public System.Void CNAIBLEDCLI(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BC064
    void CNAIBLEDCLI(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void OKHMFCJLHNL()
    // Offset: 0x19BC0C0
    void OKHMFCJLHNL();
    // public System.Void NLFHPCHKJBI(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BC300
    void NLFHPCHKJBI(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void IOGNKOJKCGB()
    // Offset: 0x19BC358
    void IOGNKOJKCGB();
    // public System.Void LKBENKEDDKM(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BC598
    void LKBENKEDDKM(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void FGIOKHDOJKO()
    // Offset: 0x19BC5F4
    void FGIOKHDOJKO();
    // public System.Void JIIIHOMMGBF(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BC834
    void JIIIHOMMGBF(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
    // public System.Void AFKFOKKFBFP()
    // Offset: 0x19BC88C
    void AFKFOKKFBFP();
    // public System.Void IMJLNNAJEDP(UnityEngine.Vector3 LPAEJBEMKAK, UnityEngine.Quaternion JNKPNBBNGHC, UnityEngine.Vector3 HGMOFNCHNOA)
    // Offset: 0x19BCACC
    void IMJLNNAJEDP(::UnityEngine::Vector3 LPAEJBEMKAK, ::UnityEngine::Quaternion JNKPNBBNGHC, ::UnityEngine::Vector3 HGMOFNCHNOA);
  }; // MagicalActual.DebugBox
  #pragma pack(pop)
  static check_size<sizeof(DebugBox), 104 + sizeof(::UnityEngine::GameObject*)> __MagicalActual_DebugBoxSizeCheck;
  static_assert(sizeof(DebugBox) == 0x70);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::DebugBox::DIGAJFNICJA
// Il2CppName: DIGAJFNICJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::DIGAJFNICJA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "DIGAJFNICJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::DMMKKJLHNJC
// Il2CppName: DMMKKJLHNJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::DMMKKJLHNJC)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "DMMKKJLHNJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::ALHGJHKLEKN
// Il2CppName: ALHGJHKLEKN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::ALHGJHKLEKN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "ALHGJHKLEKN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::IMOBJFPIMCF
// Il2CppName: IMOBJFPIMCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::IMOBJFPIMCF)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "IMOBJFPIMCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::IDHHEHEIIAL
// Il2CppName: IDHHEHEIIAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::IDHHEHEIIAL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "IDHHEHEIIAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::NHKKCFAJKPC
// Il2CppName: NHKKCFAJKPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::NHKKCFAJKPC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "NHKKCFAJKPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::PIEPNIJFICN
// Il2CppName: PIEPNIJFICN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::PIEPNIJFICN)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "PIEPNIJFICN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::KMOGIMDNJLJ
// Il2CppName: KMOGIMDNJLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::KMOGIMDNJLJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "KMOGIMDNJLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::DebugBox::LFMMLKDHEMJ
// Il2CppName: LFMMLKDHEMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::LFMMLKDHEMJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "LFMMLKDHEMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::NGENLHFOJMD
// Il2CppName: NGENLHFOJMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::NGENLHFOJMD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "NGENLHFOJMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::OPJFGOOJGOI
// Il2CppName: OPJFGOOJGOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::OPJFGOOJGOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "OPJFGOOJGOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::PPHGIIANAOI
// Il2CppName: PPHGIIANAOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::PPHGIIANAOI)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "PPHGIIANAOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::LPKDECOLAKB
// Il2CppName: LPKDECOLAKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::LPKDECOLAKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "LPKDECOLAKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::BFKABLHLFOD
// Il2CppName: BFKABLHLFOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::BFKABLHLFOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "BFKABLHLFOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::AACCKMAODEI
// Il2CppName: AACCKMAODEI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::AACCKMAODEI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "AACCKMAODEI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::BJHCOHLDHNC
// Il2CppName: BJHCOHLDHNC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::BJHCOHLDHNC)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "BJHCOHLDHNC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::FGEIEBBBGGJ
// Il2CppName: FGEIEBBBGGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::FGEIEBBBGGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "FGEIEBBBGGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::CABDJMEPBPN
// Il2CppName: CABDJMEPBPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::CABDJMEPBPN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "CABDJMEPBPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::MJOCDKBBIHH
// Il2CppName: MJOCDKBBIHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::MJOCDKBBIHH)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "MJOCDKBBIHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::KFCPNEBIIMA
// Il2CppName: KFCPNEBIIMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::KFCPNEBIIMA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "KFCPNEBIIMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::PBMBFEPAMKD
// Il2CppName: PBMBFEPAMKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::PBMBFEPAMKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "PBMBFEPAMKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::HMDHCLGCBBJ
// Il2CppName: HMDHCLGCBBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::HMDHCLGCBBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "HMDHCLGCBBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::AHPKDAPMHKE
// Il2CppName: AHPKDAPMHKE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::AHPKDAPMHKE)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "AHPKDAPMHKE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::DGPNBLAEDCI
// Il2CppName: DGPNBLAEDCI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::DGPNBLAEDCI)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "DGPNBLAEDCI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::OFNKMGGBFKK
// Il2CppName: OFNKMGGBFKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::OFNKMGGBFKK)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "OFNKMGGBFKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::BCEFFONECGO
// Il2CppName: BCEFFONECGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::BCEFFONECGO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "BCEFFONECGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::FNILDFLEFGE
// Il2CppName: FNILDFLEFGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::FNILDFLEFGE)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "FNILDFLEFGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::DDKAAFJMCJF
// Il2CppName: DDKAAFJMCJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::DDKAAFJMCJF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "DDKAAFJMCJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::CNAIBLEDCLI
// Il2CppName: CNAIBLEDCLI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::CNAIBLEDCLI)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "CNAIBLEDCLI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::OKHMFCJLHNL
// Il2CppName: OKHMFCJLHNL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::OKHMFCJLHNL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "OKHMFCJLHNL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::NLFHPCHKJBI
// Il2CppName: NLFHPCHKJBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::NLFHPCHKJBI)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "NLFHPCHKJBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::IOGNKOJKCGB
// Il2CppName: IOGNKOJKCGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::IOGNKOJKCGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "IOGNKOJKCGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::LKBENKEDDKM
// Il2CppName: LKBENKEDDKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::LKBENKEDDKM)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "LKBENKEDDKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::FGIOKHDOJKO
// Il2CppName: FGIOKHDOJKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::FGIOKHDOJKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "FGIOKHDOJKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::JIIIHOMMGBF
// Il2CppName: JIIIHOMMGBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::JIIIHOMMGBF)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "JIIIHOMMGBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::AFKFOKKFBFP
// Il2CppName: AFKFOKKFBFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)()>(&MagicalActual::DebugBox::AFKFOKKFBFP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "AFKFOKKFBFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DebugBox::IMJLNNAJEDP
// Il2CppName: IMJLNNAJEDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DebugBox::*)(::UnityEngine::Vector3, ::UnityEngine::Quaternion, ::UnityEngine::Vector3)>(&MagicalActual::DebugBox::IMJLNNAJEDP)> {
  static const MethodInfo* get() {
    static auto* LPAEJBEMKAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* JNKPNBBNGHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* HGMOFNCHNOA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DebugBox*), "IMJLNNAJEDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LPAEJBEMKAK, JNKPNBBNGHC, HGMOFNCHNOA});
  }
};
