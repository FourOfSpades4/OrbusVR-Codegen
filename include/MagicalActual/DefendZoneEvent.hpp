// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MagicalActual.DynamicEvent
#include "MagicalActual/DynamicEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ZoneBoundary
  class ZoneBoundary;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: DefendZoneEvent
  class DefendZoneEvent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::DefendZoneEvent);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::DefendZoneEvent*, "MagicalActual", "DefendZoneEvent");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0xB1
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.DefendZoneEvent
  // [TokenAttribute] Offset: FFFFFFFF
  class DefendZoneEvent : public ::MagicalActual::DynamicEvent {
    public:
    // Writing base type padding for base size: 0x92 to desired offset: 0x94
    char ___base_padding[0x2] = {};
    // Nested type: ::MagicalActual::DefendZoneEvent::$$c__DisplayClass12_0
    class $$c__DisplayClass12_0;
    public:
    // public System.Single timeToDefend
    // Size: 0x4
    // Offset: 0x94
    float timeToDefend;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 spawnMonstersEvery
    // Size: 0x4
    // Offset: 0x98
    int spawnMonstersEvery;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: spawnMonstersEvery and: zoneBoundaries
    char __padding1[0x4] = {};
    // private ZoneBoundary[] zoneBoundaries
    // Size: 0x8
    // Offset: 0xA0
    ::ArrayW<::GlobalNamespace::ZoneBoundary*> zoneBoundaries;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::ZoneBoundary*>) == 0x8);
    // private System.String[] progressTitles
    // Size: 0x8
    // Offset: 0xA8
    ::ArrayW<::StringW> progressTitles;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private System.Byte DLGGFPBBFHL
    // Size: 0x1
    // Offset: 0xB0
    uint8_t DLGGFPBBFHL;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Get instance field reference: public System.Single timeToDefend
    [[deprecated("Use field access instead!")]] float& dyn_timeToDefend();
    // Get instance field reference: private System.Int32 spawnMonstersEvery
    [[deprecated("Use field access instead!")]] int& dyn_spawnMonstersEvery();
    // Get instance field reference: private ZoneBoundary[] zoneBoundaries
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ZoneBoundary*>& dyn_zoneBoundaries();
    // Get instance field reference: private System.String[] progressTitles
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_progressTitles();
    // Get instance field reference: private System.Byte DLGGFPBBFHL
    [[deprecated("Use field access instead!")]] uint8_t& dyn_DLGGFPBBFHL();
    // public System.Void HMKJKOKPOBP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1334028
    void HMKJKOKPOBP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GANLFNCBNGA(System.Int32 ODGKNOBEKLA, System.Byte LFKEOIDJMCK)
    // Offset: 0x13341E0
    void GANLFNCBNGA(int ODGKNOBEKLA, uint8_t LFKEOIDJMCK);
    // protected System.Void DKFGNJCPOEC()
    // Offset: 0x1334460
    void DKFGNJCPOEC();
    // protected System.Void JDEIPHBDFKF()
    // Offset: 0x1334574
    void JDEIPHBDFKF();
    // private System.Void APCEOAMIIBJ(System.Int32 ODGKNOBEKLA, System.Byte LFKEOIDJMCK)
    // Offset: 0x13345FC
    void APCEOAMIIBJ(int ODGKNOBEKLA, uint8_t LFKEOIDJMCK);
    // protected System.Void IMFKOLBBAHC()
    // Offset: 0x1334874
    void IMFKOLBBAHC();
    // private System.Void PGMPFIINFBE(System.Int32 ODGKNOBEKLA, System.Byte CEJDIBBJBPJ)
    // Offset: 0x1334914
    void PGMPFIINFBE(int ODGKNOBEKLA, uint8_t CEJDIBBJBPJ);
    // private System.Void HFEJJHEPFIK(System.Int32 ODGKNOBEKLA, System.Byte CEJDIBBJBPJ)
    // Offset: 0x1334D9C
    void HFEJJHEPFIK(int ODGKNOBEKLA, uint8_t CEJDIBBJBPJ);
    // private System.Void FECDNLOCCEK(System.Int32 ODGKNOBEKLA, System.Byte CEJDIBBJBPJ)
    // Offset: 0x13350CC
    void FECDNLOCCEK(int ODGKNOBEKLA, uint8_t CEJDIBBJBPJ);
    // private System.Void JLBNMBOBGLP(System.Int32 ODGKNOBEKLA, System.Byte CEJDIBBJBPJ)
    // Offset: 0x13353FC
    void JLBNMBOBGLP(int ODGKNOBEKLA, uint8_t CEJDIBBJBPJ);
    // protected System.Void HNAOJPAPKPL()
    // Offset: 0x1335844
    void HNAOJPAPKPL();
    // protected System.Void MNIPGMCGOEA(System.String CAGOMPGOIPH)
    // Offset: 0x13358D4
    void MNIPGMCGOEA(::StringW CAGOMPGOIPH);
    // private System.Void JGOJPNMEFLN(System.Int32 ODGKNOBEKLA, System.Byte LFKEOIDJMCK)
    // Offset: 0x133591C
    void JGOJPNMEFLN(int ODGKNOBEKLA, uint8_t LFKEOIDJMCK);
    // public System.Void EGJMIHFLOKP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1335B94
    void EGJMIHFLOKP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PFPDGLMCFAP(System.Int32 ODGKNOBEKLA, System.Byte LFKEOIDJMCK)
    // Offset: 0x1335DD8
    void PFPDGLMCFAP(int ODGKNOBEKLA, uint8_t LFKEOIDJMCK);
    // private System.Void HHABDJILNJB(System.Int32 ODGKNOBEKLA, System.Byte LFKEOIDJMCK)
    // Offset: 0x1336050
    void HHABDJILNJB(int ODGKNOBEKLA, uint8_t LFKEOIDJMCK);
    // private System.Void LABFJLADCFK(System.Int32 ODGKNOBEKLA, System.Byte LFKEOIDJMCK)
    // Offset: 0x13362CC
    void LABFJLADCFK(int ODGKNOBEKLA, uint8_t LFKEOIDJMCK);
    // public System.Void JOCIAJOCGNM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1336548
    void JOCIAJOCGNM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // protected System.Void AKFELPMLBBG()
    // Offset: 0x13366F4
    void AKFELPMLBBG();
    // private System.Void OHCPGDNDAKG(System.Int32 ODGKNOBEKLA, System.Byte CEJDIBBJBPJ)
    // Offset: 0x1336820
    void OHCPGDNDAKG(int ODGKNOBEKLA, uint8_t CEJDIBBJBPJ);
    // private System.Void FPNCLMJFNNG(System.Int32 ODGKNOBEKLA, System.Byte CEJDIBBJBPJ)
    // Offset: 0x1336B54
    void FPNCLMJFNNG(int ODGKNOBEKLA, uint8_t CEJDIBBJBPJ);
    // protected System.Void DOIBLGELOJL()
    // Offset: 0x1336E84
    void DOIBLGELOJL();
    // private System.Void CMAOBHCDCML(System.Int32 ODGKNOBEKLA, System.Byte LFKEOIDJMCK)
    // Offset: 0x1336F98
    void CMAOBHCDCML(int ODGKNOBEKLA, uint8_t LFKEOIDJMCK);
    // private System.Void BEEFEJILMIF(System.Int32 ODGKNOBEKLA, System.Byte CEJDIBBJBPJ)
    // Offset: 0x13372B0
    void BEEFEJILMIF(int ODGKNOBEKLA, uint8_t CEJDIBBJBPJ);
    // public override System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1333E68
    // Implemented from: MagicalActual.DynamicEvent
    // Base method: System.Void DynamicEvent::orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void .ctor()
    // Offset: 0x1334454
    // Implemented from: MagicalActual.DynamicEvent
    // Base method: System.Void DynamicEvent::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DefendZoneEvent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::DefendZoneEvent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DefendZoneEvent*, creationType>()));
    }
    // protected override System.Void EHDLOKMANHP()
    // Offset: 0x1334C48
    // Implemented from: MagicalActual.DynamicEvent
    // Base method: System.Void DynamicEvent::EHDLOKMANHP()
    void EHDLOKMANHP();
    // protected override System.Void GOCPJLOLIKK()
    // Offset: 0x1335734
    // Implemented from: MagicalActual.DynamicEvent
    // Base method: System.Void DynamicEvent::GOCPJLOLIKK()
    void GOCPJLOLIKK();
    // protected override System.Void PMFPHOLFCFI(System.String CAGOMPGOIPH)
    // Offset: 0x133588C
    // Implemented from: MagicalActual.DynamicEvent
    // Base method: System.Void DynamicEvent::PMFPHOLFCFI(System.String CAGOMPGOIPH)
    void PMFPHOLFCFI(::StringW CAGOMPGOIPH);
    // protected override System.Void KFFCCALBHMA()
    // Offset: 0x1335D38
    // Implemented from: MagicalActual.DynamicEvent
    // Base method: System.Void DynamicEvent::KFFCCALBHMA()
    void KFFCCALBHMA();
    // protected override System.Void EEKJFACLAJO()
    // Offset: 0x1337210
    // Implemented from: MagicalActual.DynamicEvent
    // Base method: System.Void DynamicEvent::EEKJFACLAJO()
    void EEKJFACLAJO();
    // protected override System.Void AKMECKCJAJF()
    // Offset: 0x13375E8
    // Implemented from: MagicalActual.DynamicEvent
    // Base method: System.Void DynamicEvent::AKMECKCJAJF()
    void AKMECKCJAJF();
  }; // MagicalActual.DefendZoneEvent
  #pragma pack(pop)
  static check_size<sizeof(DefendZoneEvent), 176 + sizeof(uint8_t)> __MagicalActual_DefendZoneEventSizeCheck;
  static_assert(sizeof(DefendZoneEvent) == 0xB1);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::HMKJKOKPOBP
// Il2CppName: HMKJKOKPOBP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DefendZoneEvent::HMKJKOKPOBP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "HMKJKOKPOBP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::GANLFNCBNGA
// Il2CppName: GANLFNCBNGA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::GANLFNCBNGA)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* LFKEOIDJMCK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "GANLFNCBNGA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, LFKEOIDJMCK});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::DKFGNJCPOEC
// Il2CppName: DKFGNJCPOEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)()>(&MagicalActual::DefendZoneEvent::DKFGNJCPOEC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "DKFGNJCPOEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::JDEIPHBDFKF
// Il2CppName: JDEIPHBDFKF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)()>(&MagicalActual::DefendZoneEvent::JDEIPHBDFKF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "JDEIPHBDFKF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::APCEOAMIIBJ
// Il2CppName: APCEOAMIIBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::APCEOAMIIBJ)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* LFKEOIDJMCK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "APCEOAMIIBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, LFKEOIDJMCK});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::IMFKOLBBAHC
// Il2CppName: IMFKOLBBAHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)()>(&MagicalActual::DefendZoneEvent::IMFKOLBBAHC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "IMFKOLBBAHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::PGMPFIINFBE
// Il2CppName: PGMPFIINFBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::PGMPFIINFBE)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* CEJDIBBJBPJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "PGMPFIINFBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, CEJDIBBJBPJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::HFEJJHEPFIK
// Il2CppName: HFEJJHEPFIK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::HFEJJHEPFIK)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* CEJDIBBJBPJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "HFEJJHEPFIK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, CEJDIBBJBPJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::FECDNLOCCEK
// Il2CppName: FECDNLOCCEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::FECDNLOCCEK)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* CEJDIBBJBPJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "FECDNLOCCEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, CEJDIBBJBPJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::JLBNMBOBGLP
// Il2CppName: JLBNMBOBGLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::JLBNMBOBGLP)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* CEJDIBBJBPJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "JLBNMBOBGLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, CEJDIBBJBPJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::HNAOJPAPKPL
// Il2CppName: HNAOJPAPKPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)()>(&MagicalActual::DefendZoneEvent::HNAOJPAPKPL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "HNAOJPAPKPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::MNIPGMCGOEA
// Il2CppName: MNIPGMCGOEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(::StringW)>(&MagicalActual::DefendZoneEvent::MNIPGMCGOEA)> {
  static const MethodInfo* get() {
    static auto* CAGOMPGOIPH = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "MNIPGMCGOEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CAGOMPGOIPH});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::JGOJPNMEFLN
// Il2CppName: JGOJPNMEFLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::JGOJPNMEFLN)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* LFKEOIDJMCK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "JGOJPNMEFLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, LFKEOIDJMCK});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::EGJMIHFLOKP
// Il2CppName: EGJMIHFLOKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DefendZoneEvent::EGJMIHFLOKP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "EGJMIHFLOKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::PFPDGLMCFAP
// Il2CppName: PFPDGLMCFAP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::PFPDGLMCFAP)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* LFKEOIDJMCK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "PFPDGLMCFAP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, LFKEOIDJMCK});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::HHABDJILNJB
// Il2CppName: HHABDJILNJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::HHABDJILNJB)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* LFKEOIDJMCK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "HHABDJILNJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, LFKEOIDJMCK});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::LABFJLADCFK
// Il2CppName: LABFJLADCFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::LABFJLADCFK)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* LFKEOIDJMCK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "LABFJLADCFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, LFKEOIDJMCK});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::JOCIAJOCGNM
// Il2CppName: JOCIAJOCGNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DefendZoneEvent::JOCIAJOCGNM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "JOCIAJOCGNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::AKFELPMLBBG
// Il2CppName: AKFELPMLBBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)()>(&MagicalActual::DefendZoneEvent::AKFELPMLBBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "AKFELPMLBBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::OHCPGDNDAKG
// Il2CppName: OHCPGDNDAKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::OHCPGDNDAKG)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* CEJDIBBJBPJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "OHCPGDNDAKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, CEJDIBBJBPJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::FPNCLMJFNNG
// Il2CppName: FPNCLMJFNNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::FPNCLMJFNNG)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* CEJDIBBJBPJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "FPNCLMJFNNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, CEJDIBBJBPJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::DOIBLGELOJL
// Il2CppName: DOIBLGELOJL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)()>(&MagicalActual::DefendZoneEvent::DOIBLGELOJL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "DOIBLGELOJL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::CMAOBHCDCML
// Il2CppName: CMAOBHCDCML
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::CMAOBHCDCML)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* LFKEOIDJMCK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "CMAOBHCDCML", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, LFKEOIDJMCK});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::BEEFEJILMIF
// Il2CppName: BEEFEJILMIF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(int, uint8_t)>(&MagicalActual::DefendZoneEvent::BEEFEJILMIF)> {
  static const MethodInfo* get() {
    static auto* ODGKNOBEKLA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* CEJDIBBJBPJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "BEEFEJILMIF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ODGKNOBEKLA, CEJDIBBJBPJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DefendZoneEvent::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::EHDLOKMANHP
// Il2CppName: EHDLOKMANHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)()>(&MagicalActual::DefendZoneEvent::EHDLOKMANHP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "EHDLOKMANHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::GOCPJLOLIKK
// Il2CppName: GOCPJLOLIKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)()>(&MagicalActual::DefendZoneEvent::GOCPJLOLIKK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "GOCPJLOLIKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::PMFPHOLFCFI
// Il2CppName: PMFPHOLFCFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)(::StringW)>(&MagicalActual::DefendZoneEvent::PMFPHOLFCFI)> {
  static const MethodInfo* get() {
    static auto* CAGOMPGOIPH = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "PMFPHOLFCFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CAGOMPGOIPH});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::KFFCCALBHMA
// Il2CppName: KFFCCALBHMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)()>(&MagicalActual::DefendZoneEvent::KFFCCALBHMA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "KFFCCALBHMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::EEKJFACLAJO
// Il2CppName: EEKJFACLAJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)()>(&MagicalActual::DefendZoneEvent::EEKJFACLAJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "EEKJFACLAJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DefendZoneEvent::AKMECKCJAJF
// Il2CppName: AKMECKCJAJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DefendZoneEvent::*)()>(&MagicalActual::DefendZoneEvent::AKMECKCJAJF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DefendZoneEvent*), "AKMECKCJAJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
