// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: DungeonTroll
  class DungeonTroll;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::DungeonTroll);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::DungeonTroll*, "MagicalActual", "DungeonTroll");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x42
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.DungeonTroll
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD3258
  class DungeonTroll : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject BlastBeam
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* BlastBeam;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x38
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private System.Boolean BAKECNCGMGK
    // Size: 0x1
    // Offset: 0x40
    bool BAKECNCGMGK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean JGJMFMOMKGC
    // Size: 0x1
    // Offset: 0x41
    bool JGJMFMOMKGC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public UnityEngine.GameObject BlastBeam
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_BlastBeam();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private System.Boolean BAKECNCGMGK
    [[deprecated("Use field access instead!")]] bool& dyn_BAKECNCGMGK();
    // Get instance field reference: private System.Boolean JGJMFMOMKGC
    [[deprecated("Use field access instead!")]] bool& dyn_JGJMFMOMKGC();
    // public System.Void HLGKLABMHHD()
    // Offset: 0x134D828
    void HLGKLABMHHD();
    // private System.Void OEBMOJCKDPJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x134DA4C
    void OEBMOJCKDPJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Start()
    // Offset: 0x134DB7C
    void Start();
    // public System.Void Slash()
    // Offset: 0x134DBD4
    void Slash();
    // private System.Void LFPMMLMMJBJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x134DDEC
    void LFPMMLMMJBJ(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x134DF1C
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void NEMKNLGDEAK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x134E034
    void NEMKNLGDEAK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void ELGMEGGIOCL(System.Object OMLPNCLFFMJ)
    // Offset: 0x134E14C
    void ELGMEGGIOCL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void KCGMGLFHADE(System.Object OMLPNCLFFMJ)
    // Offset: 0x134E220
    void KCGMGLFHADE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void IPIFMKAGODD()
    // Offset: 0x134E2F4
    void IPIFMKAGODD();
    // private System.Void BMJNBLJPOCF(System.Object OMLPNCLFFMJ)
    // Offset: 0x134E34C
    void BMJNBLJPOCF(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void JOGPGAPOBBK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x134E47C
    void JOGPGAPOBBK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void MDHBNHLHENF(System.Object OMLPNCLFFMJ)
    // Offset: 0x134E594
    void MDHBNHLHENF(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x134E668
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JCAOFFAOBEL(System.Object OMLPNCLFFMJ)
    // Offset: 0x134E780
    void JCAOFFAOBEL(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void DKDBFFDLADP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x134E8B0
    void DKDBFFDLADP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void NHADFEMILCC()
    // Offset: 0x134E9C8
    void NHADFEMILCC();
    // public System.Void FNAJKCKMHHJ()
    // Offset: 0x134EA20
    void FNAJKCKMHHJ();
    // public System.Void EBJDLAIJJJE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x134EC44
    void EBJDLAIJJJE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x134ED5C
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void KPMPBDPHIJO(System.Object OMLPNCLFFMJ)
    // Offset: 0x134EE74
    void KPMPBDPHIJO(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void .ctor()
    // Offset: 0x134EFA4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DungeonTroll* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::DungeonTroll::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DungeonTroll*, creationType>()));
    }
    // private System.Void MFBFFBOCFOB(System.Object OMLPNCLFFMJ)
    // Offset: 0x134EFFC
    void MFBFFBOCFOB(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void OAMOHIMHKEK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x134F0D0
    void OAMOHIMHKEK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void CILLLGMPJLL(System.Object OMLPNCLFFMJ)
    // Offset: 0x134F1E8
    void CILLLGMPJLL(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void JJEJNGMIMOI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x134F2BC
    void JJEJNGMIMOI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void GLJFFHNKKPI()
    // Offset: 0x134F3D4
    void GLJFFHNKKPI();
    // public System.Void KMPPLBBIMGJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x134F5F8
    void KMPPLBBIMGJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void AEMJLDCDKFK(System.Object OMLPNCLFFMJ)
    // Offset: 0x134F710
    void AEMJLDCDKFK(::Il2CppObject* OMLPNCLFFMJ);
  }; // MagicalActual.DungeonTroll
  #pragma pack(pop)
  static check_size<sizeof(DungeonTroll), 65 + sizeof(bool)> __MagicalActual_DungeonTrollSizeCheck;
  static_assert(sizeof(DungeonTroll) == 0x42);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::HLGKLABMHHD
// Il2CppName: HLGKLABMHHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)()>(&MagicalActual::DungeonTroll::HLGKLABMHHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "HLGKLABMHHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::OEBMOJCKDPJ
// Il2CppName: OEBMOJCKDPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::Il2CppObject*)>(&MagicalActual::DungeonTroll::OEBMOJCKDPJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "OEBMOJCKDPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)()>(&MagicalActual::DungeonTroll::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)()>(&MagicalActual::DungeonTroll::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::LFPMMLMMJBJ
// Il2CppName: LFPMMLMMJBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::Il2CppObject*)>(&MagicalActual::DungeonTroll::LFPMMLMMJBJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "LFPMMLMMJBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonTroll::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::NEMKNLGDEAK
// Il2CppName: NEMKNLGDEAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonTroll::NEMKNLGDEAK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "NEMKNLGDEAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::ELGMEGGIOCL
// Il2CppName: ELGMEGGIOCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::Il2CppObject*)>(&MagicalActual::DungeonTroll::ELGMEGGIOCL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "ELGMEGGIOCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::KCGMGLFHADE
// Il2CppName: KCGMGLFHADE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::Il2CppObject*)>(&MagicalActual::DungeonTroll::KCGMGLFHADE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "KCGMGLFHADE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)()>(&MagicalActual::DungeonTroll::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::BMJNBLJPOCF
// Il2CppName: BMJNBLJPOCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::Il2CppObject*)>(&MagicalActual::DungeonTroll::BMJNBLJPOCF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "BMJNBLJPOCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::JOGPGAPOBBK
// Il2CppName: JOGPGAPOBBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonTroll::JOGPGAPOBBK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "JOGPGAPOBBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::MDHBNHLHENF
// Il2CppName: MDHBNHLHENF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::Il2CppObject*)>(&MagicalActual::DungeonTroll::MDHBNHLHENF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "MDHBNHLHENF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonTroll::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::JCAOFFAOBEL
// Il2CppName: JCAOFFAOBEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::Il2CppObject*)>(&MagicalActual::DungeonTroll::JCAOFFAOBEL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "JCAOFFAOBEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::DKDBFFDLADP
// Il2CppName: DKDBFFDLADP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonTroll::DKDBFFDLADP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "DKDBFFDLADP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)()>(&MagicalActual::DungeonTroll::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::FNAJKCKMHHJ
// Il2CppName: FNAJKCKMHHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)()>(&MagicalActual::DungeonTroll::FNAJKCKMHHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "FNAJKCKMHHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::EBJDLAIJJJE
// Il2CppName: EBJDLAIJJJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonTroll::EBJDLAIJJJE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "EBJDLAIJJJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonTroll::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::KPMPBDPHIJO
// Il2CppName: KPMPBDPHIJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::Il2CppObject*)>(&MagicalActual::DungeonTroll::KPMPBDPHIJO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "KPMPBDPHIJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::MFBFFBOCFOB
// Il2CppName: MFBFFBOCFOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::Il2CppObject*)>(&MagicalActual::DungeonTroll::MFBFFBOCFOB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "MFBFFBOCFOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::OAMOHIMHKEK
// Il2CppName: OAMOHIMHKEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonTroll::OAMOHIMHKEK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "OAMOHIMHKEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::CILLLGMPJLL
// Il2CppName: CILLLGMPJLL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::Il2CppObject*)>(&MagicalActual::DungeonTroll::CILLLGMPJLL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "CILLLGMPJLL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::JJEJNGMIMOI
// Il2CppName: JJEJNGMIMOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonTroll::JJEJNGMIMOI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "JJEJNGMIMOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::GLJFFHNKKPI
// Il2CppName: GLJFFHNKKPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)()>(&MagicalActual::DungeonTroll::GLJFFHNKKPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "GLJFFHNKKPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::KMPPLBBIMGJ
// Il2CppName: KMPPLBBIMGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DungeonTroll::KMPPLBBIMGJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "KMPPLBBIMGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DungeonTroll::AEMJLDCDKFK
// Il2CppName: AEMJLDCDKFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DungeonTroll::*)(::Il2CppObject*)>(&MagicalActual::DungeonTroll::AEMJLDCDKFK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DungeonTroll*), "AEMJLDCDKFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
