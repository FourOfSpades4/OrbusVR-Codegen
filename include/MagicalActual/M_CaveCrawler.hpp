// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_CaveCrawler
  class M_CaveCrawler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_CaveCrawler);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_CaveCrawler*, "MagicalActual", "M_CaveCrawler");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_CaveCrawler
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4AB4
  class M_CaveCrawler : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxBreath
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxBreath;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.Transform breathPoint
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Transform* breathPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x38
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public UnityEngine.GameObject vfxBreath
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxBreath();
    // Get instance field reference: public UnityEngine.Transform breathPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_breathPoint();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x18B1C54
    void KBDGAPMJGLG();
    // public System.Void GAJPGJMCNMH()
    // Offset: 0x18B1CAC
    void GAJPGJMCNMH();
    // private System.Void CNPNCBFALMB()
    // Offset: 0x18B1DF8
    void CNPNCBFALMB();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x18B1E6C
    void IPIFMKAGODD();
    // public System.Void JFDEDDEJJPK()
    // Offset: 0x18B1EC4
    void JFDEDDEJJPK();
    // private System.Void Start()
    // Offset: 0x18B20E8
    void Start();
    // public System.Void ELPHOABBIMB()
    // Offset: 0x18B2140
    void ELPHOABBIMB();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x18B228C
    void ABIHCGOKNCL();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x18B22E4
    void JENOIOBAEPG();
    // public System.Void BIIPJEPNIBH()
    // Offset: 0x18B233C
    void BIIPJEPNIBH();
    // public System.Void PHMNKLJAEMC()
    // Offset: 0x18B2560
    void PHMNKLJAEMC();
    // private System.Void MAANKLPJHGB()
    // Offset: 0x18B2784
    void MAANKLPJHGB();
    // private System.Void FMEEDNJNOLE()
    // Offset: 0x18B27F8
    void FMEEDNJNOLE();
    // public System.Void KNJAINHFPJN()
    // Offset: 0x18B286C
    void KNJAINHFPJN();
    // public System.Void .ctor()
    // Offset: 0x18B29B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_CaveCrawler* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_CaveCrawler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_CaveCrawler*, creationType>()));
    }
    // public System.Void CCNOEAMFKOD()
    // Offset: 0x18B2A10
    void CCNOEAMFKOD();
    // public System.Void Slash()
    // Offset: 0x18B2B5C
    void Slash();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x18B2D74
    void LBIKOKCCILF();
    // public System.Void Breath()
    // Offset: 0x18B2DCC
    void Breath();
    // private System.Void FMBNGEICNEA()
    // Offset: 0x18B2F14
    void FMBNGEICNEA();
    // private System.Void NNDCJJKFOLD()
    // Offset: 0x18B2F88
    void NNDCJJKFOLD();
    // public System.Void HJADIOCKECN()
    // Offset: 0x18B2FFC
    void HJADIOCKECN();
    // private System.Void KPMEHJMOLCH()
    // Offset: 0x18B3220
    void KPMEHJMOLCH();
    // private System.Void MKBJMLMCLBP()
    // Offset: 0x18B3294
    void MKBJMLMCLBP();
    // private System.Void JEFICCCGFAO()
    // Offset: 0x18B3308
    void JEFICCCGFAO();
    // public System.Void HMDKBDDPDPO()
    // Offset: 0x18B337C
    void HMDKBDDPDPO();
    // public System.Void HFOODOMELOG()
    // Offset: 0x18B34C8
    void HFOODOMELOG();
    // public System.Void MKGLNCAENAG()
    // Offset: 0x18B3614
    void MKGLNCAENAG();
  }; // MagicalActual.M_CaveCrawler
  #pragma pack(pop)
  static check_size<sizeof(M_CaveCrawler), 56 + sizeof(::StringW)> __MagicalActual_M_CaveCrawlerSizeCheck;
  static_assert(sizeof(M_CaveCrawler) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::GAJPGJMCNMH
// Il2CppName: GAJPGJMCNMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::GAJPGJMCNMH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "GAJPGJMCNMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::CNPNCBFALMB
// Il2CppName: CNPNCBFALMB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::CNPNCBFALMB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "CNPNCBFALMB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::JFDEDDEJJPK
// Il2CppName: JFDEDDEJJPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::JFDEDDEJJPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "JFDEDDEJJPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::ELPHOABBIMB
// Il2CppName: ELPHOABBIMB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::ELPHOABBIMB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "ELPHOABBIMB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::BIIPJEPNIBH
// Il2CppName: BIIPJEPNIBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::BIIPJEPNIBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "BIIPJEPNIBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::PHMNKLJAEMC
// Il2CppName: PHMNKLJAEMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::PHMNKLJAEMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "PHMNKLJAEMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::MAANKLPJHGB
// Il2CppName: MAANKLPJHGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::MAANKLPJHGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "MAANKLPJHGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::FMEEDNJNOLE
// Il2CppName: FMEEDNJNOLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::FMEEDNJNOLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "FMEEDNJNOLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::KNJAINHFPJN
// Il2CppName: KNJAINHFPJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::KNJAINHFPJN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "KNJAINHFPJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::CCNOEAMFKOD
// Il2CppName: CCNOEAMFKOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::CCNOEAMFKOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "CCNOEAMFKOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::Breath
// Il2CppName: Breath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::Breath)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "Breath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::FMBNGEICNEA
// Il2CppName: FMBNGEICNEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::FMBNGEICNEA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "FMBNGEICNEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::NNDCJJKFOLD
// Il2CppName: NNDCJJKFOLD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::NNDCJJKFOLD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "NNDCJJKFOLD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::HJADIOCKECN
// Il2CppName: HJADIOCKECN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::HJADIOCKECN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "HJADIOCKECN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::KPMEHJMOLCH
// Il2CppName: KPMEHJMOLCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::KPMEHJMOLCH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "KPMEHJMOLCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::MKBJMLMCLBP
// Il2CppName: MKBJMLMCLBP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::MKBJMLMCLBP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "MKBJMLMCLBP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::JEFICCCGFAO
// Il2CppName: JEFICCCGFAO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::JEFICCCGFAO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "JEFICCCGFAO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::HMDKBDDPDPO
// Il2CppName: HMDKBDDPDPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::HMDKBDDPDPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "HMDKBDDPDPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::HFOODOMELOG
// Il2CppName: HFOODOMELOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::HFOODOMELOG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "HFOODOMELOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_CaveCrawler::MKGLNCAENAG
// Il2CppName: MKGLNCAENAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_CaveCrawler::*)()>(&MagicalActual::M_CaveCrawler::MKGLNCAENAG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_CaveCrawler*), "MKGLNCAENAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
