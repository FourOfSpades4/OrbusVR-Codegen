// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_EliteTentacle
  class M_EliteTentacle;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_EliteTentacle);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_EliteTentacle*, "MagicalActual", "M_EliteTentacle");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_EliteTentacle
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4F30
  class M_EliteTentacle : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // public System.Void .ctor()
    // Offset: 0x2488168
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_EliteTentacle* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_EliteTentacle::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_EliteTentacle*, creationType>()));
    }
    // public System.Void FMFOGAKFJGJ()
    // Offset: 0x24881C0
    void FMFOGAKFJGJ();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x24883E4
    void CBMDGNKFPIO();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x248843C
    void BDEDGNGMHMN();
    // public System.Void PKINMLEHJFB()
    // Offset: 0x2488494
    void PKINMLEHJFB();
    // public System.Void GILLJBIMGNJ()
    // Offset: 0x24886B8
    void GILLJBIMGNJ();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x24888DC
    void IDOCJGNLNFL();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x2488934
    void FGIFGGNGKPK();
    // public System.Void FNAJKCKMHHJ()
    // Offset: 0x248898C
    void FNAJKCKMHHJ();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x2488BAC
    void GKIOLADOCOK();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x2488C04
    void NNDKJCJFIAK();
    // public System.Void JFDEDDEJJPK()
    // Offset: 0x2488C5C
    void JFDEDDEJJPK();
    // public System.Void CEPPICBNJOI()
    // Offset: 0x2488E80
    void CEPPICBNJOI();
    // private System.Void AKGFEENGKJD()
    // Offset: 0x24890A4
    void AKGFEENGKJD();
    // public System.Void Slash()
    // Offset: 0x24890FC
    void Slash();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x2489314
    void GHLPBOJJHNG();
    // public System.Void JMPBEJDKDGJ()
    // Offset: 0x248936C
    void JMPBEJDKDGJ();
    // public System.Void KDPEOPPDLLP()
    // Offset: 0x2489590
    void KDPEOPPDLLP();
    // public System.Void PNLNOOIGCBK()
    // Offset: 0x24897B4
    void PNLNOOIGCBK();
    // public System.Void DKILGFBCKHD()
    // Offset: 0x24899D8
    void DKILGFBCKHD();
    // public System.Void BIIPJEPNIBH()
    // Offset: 0x2489BFC
    void BIIPJEPNIBH();
    // public System.Void HJADIOCKECN()
    // Offset: 0x2489E20
    void HJADIOCKECN();
    // public System.Void DBOKLBMPMJO()
    // Offset: 0x248A044
    void DBOKLBMPMJO();
    // public System.Void IBMKENLAMGB()
    // Offset: 0x248A268
    void IBMKENLAMGB();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x248A48C
    void PBEMGGBBDCK();
    // private System.Void Start()
    // Offset: 0x248A4E4
    void Start();
    // public System.Void OMKBAIIIFBJ()
    // Offset: 0x248A53C
    void OMKBAIIIFBJ();
    // public System.Void JFBOMHHGFDN()
    // Offset: 0x248A760
    void JFBOMHHGFDN();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x248A984
    void MLGBKBMHHLE();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x248A9DC
    void LBIKOKCCILF();
    // public System.Void KIBDAOLFNJM()
    // Offset: 0x248AA34
    void KIBDAOLFNJM();
  }; // MagicalActual.M_EliteTentacle
  #pragma pack(pop)
  static check_size<sizeof(M_EliteTentacle), 40 + sizeof(::StringW)> __MagicalActual_M_EliteTentacleSizeCheck;
  static_assert(sizeof(M_EliteTentacle) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::FMFOGAKFJGJ
// Il2CppName: FMFOGAKFJGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::FMFOGAKFJGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "FMFOGAKFJGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::PKINMLEHJFB
// Il2CppName: PKINMLEHJFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::PKINMLEHJFB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "PKINMLEHJFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::GILLJBIMGNJ
// Il2CppName: GILLJBIMGNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::GILLJBIMGNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "GILLJBIMGNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::FNAJKCKMHHJ
// Il2CppName: FNAJKCKMHHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::FNAJKCKMHHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "FNAJKCKMHHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::JFDEDDEJJPK
// Il2CppName: JFDEDDEJJPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::JFDEDDEJJPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "JFDEDDEJJPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::CEPPICBNJOI
// Il2CppName: CEPPICBNJOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::CEPPICBNJOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "CEPPICBNJOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::JMPBEJDKDGJ
// Il2CppName: JMPBEJDKDGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::JMPBEJDKDGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "JMPBEJDKDGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::KDPEOPPDLLP
// Il2CppName: KDPEOPPDLLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::KDPEOPPDLLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "KDPEOPPDLLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::PNLNOOIGCBK
// Il2CppName: PNLNOOIGCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::PNLNOOIGCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "PNLNOOIGCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::DKILGFBCKHD
// Il2CppName: DKILGFBCKHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::DKILGFBCKHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "DKILGFBCKHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::BIIPJEPNIBH
// Il2CppName: BIIPJEPNIBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::BIIPJEPNIBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "BIIPJEPNIBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::HJADIOCKECN
// Il2CppName: HJADIOCKECN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::HJADIOCKECN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "HJADIOCKECN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::DBOKLBMPMJO
// Il2CppName: DBOKLBMPMJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::DBOKLBMPMJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "DBOKLBMPMJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::IBMKENLAMGB
// Il2CppName: IBMKENLAMGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::IBMKENLAMGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "IBMKENLAMGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::OMKBAIIIFBJ
// Il2CppName: OMKBAIIIFBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::OMKBAIIIFBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "OMKBAIIIFBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::JFBOMHHGFDN
// Il2CppName: JFBOMHHGFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::JFBOMHHGFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "JFBOMHHGFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteTentacle::KIBDAOLFNJM
// Il2CppName: KIBDAOLFNJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteTentacle::*)()>(&MagicalActual::M_EliteTentacle::KIBDAOLFNJM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteTentacle*), "KIBDAOLFNJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
