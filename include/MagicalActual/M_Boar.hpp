// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_Boar
  class M_Boar;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_Boar);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_Boar*, "MagicalActual", "M_Boar");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_Boar
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4A40
  class M_Boar : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::M_Boar::$$c__DisplayClass7_0
    class $$c__DisplayClass7_0;
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject vfxLineTrail
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* vfxLineTrail;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject localScaler
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* localScaler;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public UnityEngine.GameObject vfxLineTrail
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxLineTrail();
    // Get instance field reference: public UnityEngine.GameObject localScaler
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_localScaler();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x18ACE28
    void KBDGAPMJGLG();
    // public System.Void AEEGDDOINFN()
    // Offset: 0x18ACE80
    void AEEGDDOINFN();
    // public System.Void DNONEPJMMNJ()
    // Offset: 0x18AD22C
    void DNONEPJMMNJ();
    // public System.Void KKENOOEHEEC()
    // Offset: 0x18AD5CC
    void KKENOOEHEEC();
    // public System.Void JFDEDDEJJPK()
    // Offset: 0x18AD970
    void JFDEDDEJJPK();
    // public System.Void LineCharge()
    // Offset: 0x18ADB94
    void LineCharge();
    // private System.Void Start()
    // Offset: 0x18ADF1C
    void Start();
    // public System.Void JMPBEJDKDGJ()
    // Offset: 0x18ADF74
    void JMPBEJDKDGJ();
    // public System.Void JFBOMHHGFDN()
    // Offset: 0x18AE198
    void JFBOMHHGFDN();
    // public System.Void FDJFJMOIFHF()
    // Offset: 0x18AE3BC
    void FDJFJMOIFHF();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x18AE760
    void BDEDGNGMHMN();
    // public System.Void OMFMIKPMPEL()
    // Offset: 0x18AE7B8
    void OMFMIKPMPEL();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x18AE9DC
    void NNDKJCJFIAK();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x18AEA34
    void GKIOLADOCOK();
    // public System.Void GNBIAGMIPOF()
    // Offset: 0x18AEA8C
    void GNBIAGMIPOF();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x18AEE2C
    void AFIACGLCIPB();
    // public System.Void Slash()
    // Offset: 0x18AEE84
    void Slash();
    // public System.Void FEOMBFHJIJF()
    // Offset: 0x18AF09C
    void FEOMBFHJIJF();
    // public System.Void GNKIMJMKDPC()
    // Offset: 0x18AF440
    void GNKIMJMKDPC();
    // public System.Void BIIPJEPNIBH()
    // Offset: 0x18AF7E4
    void BIIPJEPNIBH();
    // public System.Void LBHICEOGMMK()
    // Offset: 0x18AFA08
    void LBHICEOGMMK();
    // public System.Void HOAJNJFEALN()
    // Offset: 0x18AFDAC
    void HOAJNJFEALN();
    // public System.Void DIDADMBDAAK()
    // Offset: 0x18B014C
    void DIDADMBDAAK();
    // public System.Void KDPEOPPDLLP()
    // Offset: 0x18B0370
    void KDPEOPPDLLP();
    // public System.Void MEAJLHKFCEH()
    // Offset: 0x18B0594
    void MEAJLHKFCEH();
    // public System.Void GILLJBIMGNJ()
    // Offset: 0x18B0938
    void GILLJBIMGNJ();
    // public System.Void DLEHOEHICKO()
    // Offset: 0x18B0B5C
    void DLEHOEHICKO();
    // public System.Void CCOODLILKJD()
    // Offset: 0x18B0F00
    void CCOODLILKJD();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x18B1124
    void LPLGKBGLPOK();
    // public System.Void .ctor()
    // Offset: 0x18B117C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_Boar* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_Boar::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_Boar*, creationType>()));
    }
  }; // MagicalActual.M_Boar
  #pragma pack(pop)
  static check_size<sizeof(M_Boar), 56 + sizeof(::UnityEngine::GameObject*)> __MagicalActual_M_BoarSizeCheck;
  static_assert(sizeof(M_Boar) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_Boar::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::AEEGDDOINFN
// Il2CppName: AEEGDDOINFN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::AEEGDDOINFN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "AEEGDDOINFN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::DNONEPJMMNJ
// Il2CppName: DNONEPJMMNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::DNONEPJMMNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "DNONEPJMMNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::KKENOOEHEEC
// Il2CppName: KKENOOEHEEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::KKENOOEHEEC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "KKENOOEHEEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::JFDEDDEJJPK
// Il2CppName: JFDEDDEJJPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::JFDEDDEJJPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "JFDEDDEJJPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::LineCharge
// Il2CppName: LineCharge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::LineCharge)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "LineCharge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::JMPBEJDKDGJ
// Il2CppName: JMPBEJDKDGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::JMPBEJDKDGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "JMPBEJDKDGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::JFBOMHHGFDN
// Il2CppName: JFBOMHHGFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::JFBOMHHGFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "JFBOMHHGFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::FDJFJMOIFHF
// Il2CppName: FDJFJMOIFHF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::FDJFJMOIFHF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "FDJFJMOIFHF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::OMFMIKPMPEL
// Il2CppName: OMFMIKPMPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::OMFMIKPMPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "OMFMIKPMPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::GNBIAGMIPOF
// Il2CppName: GNBIAGMIPOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::GNBIAGMIPOF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "GNBIAGMIPOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::FEOMBFHJIJF
// Il2CppName: FEOMBFHJIJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::FEOMBFHJIJF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "FEOMBFHJIJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::GNKIMJMKDPC
// Il2CppName: GNKIMJMKDPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::GNKIMJMKDPC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "GNKIMJMKDPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::BIIPJEPNIBH
// Il2CppName: BIIPJEPNIBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::BIIPJEPNIBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "BIIPJEPNIBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::LBHICEOGMMK
// Il2CppName: LBHICEOGMMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::LBHICEOGMMK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "LBHICEOGMMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::HOAJNJFEALN
// Il2CppName: HOAJNJFEALN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::HOAJNJFEALN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "HOAJNJFEALN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::DIDADMBDAAK
// Il2CppName: DIDADMBDAAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::DIDADMBDAAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "DIDADMBDAAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::KDPEOPPDLLP
// Il2CppName: KDPEOPPDLLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::KDPEOPPDLLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "KDPEOPPDLLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::MEAJLHKFCEH
// Il2CppName: MEAJLHKFCEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::MEAJLHKFCEH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "MEAJLHKFCEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::GILLJBIMGNJ
// Il2CppName: GILLJBIMGNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::GILLJBIMGNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "GILLJBIMGNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::DLEHOEHICKO
// Il2CppName: DLEHOEHICKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::DLEHOEHICKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "DLEHOEHICKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::CCOODLILKJD
// Il2CppName: CCOODLILKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::CCOODLILKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "CCOODLILKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Boar::*)()>(&MagicalActual::M_Boar::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Boar*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Boar::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
