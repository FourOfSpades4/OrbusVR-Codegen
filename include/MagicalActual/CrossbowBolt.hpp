// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: CrossbowBolt
  class CrossbowBolt;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::CrossbowBolt);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::CrossbowBolt*, "MagicalActual", "CrossbowBolt");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.CrossbowBolt
  // [TokenAttribute] Offset: FFFFFFFF
  class CrossbowBolt : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.Transform DMNHBEIHGMA
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Transform* DMNHBEIHGMA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private System.Boolean IAMMIIGDNAI
    // Size: 0x1
    // Offset: 0x20
    bool IAMMIIGDNAI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IAMMIIGDNAI and: IMNKMKBFLNO
    char __padding1[0x3] = {};
    // private UnityEngine.Vector3 IMNKMKBFLNO
    // Size: 0xC
    // Offset: 0x24
    ::UnityEngine::Vector3 IMNKMKBFLNO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single PBEBICPLBOE
    // Size: 0x4
    // Offset: 0x30
    float PBEBICPLBOE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single HLMKKLHCOAI
    // Size: 0x4
    // Offset: 0x34
    float HLMKKLHCOAI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single PCDLACNIJLC
    // Size: 0x4
    // Offset: 0x38
    float PCDLACNIJLC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single JOENIMFPMHO
    // Size: 0x4
    // Offset: 0x3C
    float JOENIMFPMHO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Transform DMNHBEIHGMA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_DMNHBEIHGMA();
    // Get instance field reference: private System.Boolean IAMMIIGDNAI
    [[deprecated("Use field access instead!")]] bool& dyn_IAMMIIGDNAI();
    // Get instance field reference: private UnityEngine.Vector3 IMNKMKBFLNO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_IMNKMKBFLNO();
    // Get instance field reference: private System.Single PBEBICPLBOE
    [[deprecated("Use field access instead!")]] float& dyn_PBEBICPLBOE();
    // Get instance field reference: private System.Single HLMKKLHCOAI
    [[deprecated("Use field access instead!")]] float& dyn_HLMKKLHCOAI();
    // Get instance field reference: private System.Single PCDLACNIJLC
    [[deprecated("Use field access instead!")]] float& dyn_PCDLACNIJLC();
    // Get instance field reference: private System.Single JOENIMFPMHO
    [[deprecated("Use field access instead!")]] float& dyn_JOENIMFPMHO();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x19AE374
    void KPOAAAHLGLA();
    // public System.Void EJDIMBNEGPK(UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19AE39C
    void EJDIMBNEGPK(::UnityEngine::Vector3 NKJBILNNJNP);
    // private System.Void PFABJJGAOMM()
    // Offset: 0x19AE3AC
    void PFABJJGAOMM();
    // public System.Void CADCOJLJBOI(UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19A9A14
    void CADCOJLJBOI(::UnityEngine::Vector3 NKJBILNNJNP);
    // public System.Void GDDNJGODFPF(UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19AE3D4
    void GDDNJGODFPF(::UnityEngine::Vector3 NKJBILNNJNP);
    // public System.Void .ctor()
    // Offset: 0x19AE3E8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CrossbowBolt* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::CrossbowBolt::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CrossbowBolt*, creationType>()));
    }
    // public System.Void FCLBEPJENCA(UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19AE408
    void FCLBEPJENCA(::UnityEngine::Vector3 NKJBILNNJNP);
    // private System.Void Update()
    // Offset: 0x19AE41C
    void Update();
    // public System.Void FireBolt(UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19A8134
    void FireBolt(::UnityEngine::Vector3 NKJBILNNJNP);
    // public System.Void GIFBGIBCIED(UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19AE674
    void GIFBGIBCIED(::UnityEngine::Vector3 NKJBILNNJNP);
    // private System.Void HKINNMLBMMG()
    // Offset: 0x19AE688
    void HKINNMLBMMG();
    // public System.Void CDCMMJJMCEI(UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19AAE70
    void CDCMMJJMCEI(::UnityEngine::Vector3 NKJBILNNJNP);
    // private System.Void BJMMJNDCPLF()
    // Offset: 0x19AE6B0
    void BJMMJNDCPLF();
    // private System.Void PNKHLJDEJNA()
    // Offset: 0x19AE914
    void PNKHLJDEJNA();
    // public System.Void DNOCDCPMFPN(UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19AEB78
    void DNOCDCPMFPN(::UnityEngine::Vector3 NKJBILNNJNP);
    // private System.Void GPFBGGFPINB()
    // Offset: 0x19AEB8C
    void GPFBGGFPINB();
    // public System.Void OHNFEDBOKBC(UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19AB3FC
    void OHNFEDBOKBC(::UnityEngine::Vector3 NKJBILNNJNP);
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x19AEBB4
    void EPCHNEGNKNF();
    // private System.Void FMCFFLJCCCP()
    // Offset: 0x19AEBDC
    void FMCFFLJCCCP();
    // private System.Void CHMCEGMCENL()
    // Offset: 0x19AEE40
    void CHMCEGMCENL();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x19AF0A4
    void NNDKJCJFIAK();
    // public System.Void LIAIPJBIDAN(UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19AF0CC
    void LIAIPJBIDAN(::UnityEngine::Vector3 NKJBILNNJNP);
    // private System.Void Start()
    // Offset: 0x19AF0DC
    void Start();
    // public System.Void OOGFIDIBBBB(UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19AAA38
    void OOGFIDIBBBB(::UnityEngine::Vector3 NKJBILNNJNP);
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x19AF104
    void IDOCJGNLNFL();
  }; // MagicalActual.CrossbowBolt
  #pragma pack(pop)
  static check_size<sizeof(CrossbowBolt), 60 + sizeof(float)> __MagicalActual_CrossbowBoltSizeCheck;
  static_assert(sizeof(CrossbowBolt) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::EJDIMBNEGPK
// Il2CppName: EJDIMBNEGPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)(::UnityEngine::Vector3)>(&MagicalActual::CrossbowBolt::EJDIMBNEGPK)> {
  static const MethodInfo* get() {
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "EJDIMBNEGPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::CADCOJLJBOI
// Il2CppName: CADCOJLJBOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)(::UnityEngine::Vector3)>(&MagicalActual::CrossbowBolt::CADCOJLJBOI)> {
  static const MethodInfo* get() {
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "CADCOJLJBOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::GDDNJGODFPF
// Il2CppName: GDDNJGODFPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)(::UnityEngine::Vector3)>(&MagicalActual::CrossbowBolt::GDDNJGODFPF)> {
  static const MethodInfo* get() {
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "GDDNJGODFPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::FCLBEPJENCA
// Il2CppName: FCLBEPJENCA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)(::UnityEngine::Vector3)>(&MagicalActual::CrossbowBolt::FCLBEPJENCA)> {
  static const MethodInfo* get() {
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "FCLBEPJENCA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::FireBolt
// Il2CppName: FireBolt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)(::UnityEngine::Vector3)>(&MagicalActual::CrossbowBolt::FireBolt)> {
  static const MethodInfo* get() {
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "FireBolt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::GIFBGIBCIED
// Il2CppName: GIFBGIBCIED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)(::UnityEngine::Vector3)>(&MagicalActual::CrossbowBolt::GIFBGIBCIED)> {
  static const MethodInfo* get() {
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "GIFBGIBCIED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::CDCMMJJMCEI
// Il2CppName: CDCMMJJMCEI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)(::UnityEngine::Vector3)>(&MagicalActual::CrossbowBolt::CDCMMJJMCEI)> {
  static const MethodInfo* get() {
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "CDCMMJJMCEI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::BJMMJNDCPLF
// Il2CppName: BJMMJNDCPLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::BJMMJNDCPLF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "BJMMJNDCPLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::PNKHLJDEJNA
// Il2CppName: PNKHLJDEJNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::PNKHLJDEJNA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "PNKHLJDEJNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::DNOCDCPMFPN
// Il2CppName: DNOCDCPMFPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)(::UnityEngine::Vector3)>(&MagicalActual::CrossbowBolt::DNOCDCPMFPN)> {
  static const MethodInfo* get() {
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "DNOCDCPMFPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::OHNFEDBOKBC
// Il2CppName: OHNFEDBOKBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)(::UnityEngine::Vector3)>(&MagicalActual::CrossbowBolt::OHNFEDBOKBC)> {
  static const MethodInfo* get() {
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "OHNFEDBOKBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::FMCFFLJCCCP
// Il2CppName: FMCFFLJCCCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::FMCFFLJCCCP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "FMCFFLJCCCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::CHMCEGMCENL
// Il2CppName: CHMCEGMCENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::CHMCEGMCENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "CHMCEGMCENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::LIAIPJBIDAN
// Il2CppName: LIAIPJBIDAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)(::UnityEngine::Vector3)>(&MagicalActual::CrossbowBolt::LIAIPJBIDAN)> {
  static const MethodInfo* get() {
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "LIAIPJBIDAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::OOGFIDIBBBB
// Il2CppName: OOGFIDIBBBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)(::UnityEngine::Vector3)>(&MagicalActual::CrossbowBolt::OOGFIDIBBBB)> {
  static const MethodInfo* get() {
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "OOGFIDIBBBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::CrossbowBolt::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::CrossbowBolt::*)()>(&MagicalActual::CrossbowBolt::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::CrossbowBolt*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
