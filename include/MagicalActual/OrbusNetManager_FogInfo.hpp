// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MagicalActual.OrbusNetManager
#include "MagicalActual/OrbusNetManager.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::OrbusNetManager::FogInfo, "MagicalActual", "OrbusNetManager/FogInfo");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x15
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: MagicalActual.OrbusNetManager/FogInfo
  // [TokenAttribute] Offset: FFFFFFFF
  struct OrbusNetManager::FogInfo/*, public ::System::ValueType*/ {
    public:
    public:
    // public UnityEngine.Color KFCIGBKIPFK
    // Size: 0x10
    // Offset: 0x0
    ::UnityEngine::Color KFCIGBKIPFK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public System.Single BGGCNGLKIFA
    // Size: 0x4
    // Offset: 0x10
    float BGGCNGLKIFA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean BEIEDABEEBK
    // Size: 0x1
    // Offset: 0x14
    bool BEIEDABEEBK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: FogInfo
    constexpr FogInfo(::UnityEngine::Color KFCIGBKIPFK_ = {}, float BGGCNGLKIFA_ = {}, bool BEIEDABEEBK_ = {}) noexcept : KFCIGBKIPFK{KFCIGBKIPFK_}, BGGCNGLKIFA{BGGCNGLKIFA_}, BEIEDABEEBK{BEIEDABEEBK_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public UnityEngine.Color KFCIGBKIPFK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_KFCIGBKIPFK();
    // Get instance field reference: public System.Single BGGCNGLKIFA
    [[deprecated("Use field access instead!")]] float& dyn_BGGCNGLKIFA();
    // Get instance field reference: public System.Boolean BEIEDABEEBK
    [[deprecated("Use field access instead!")]] bool& dyn_BEIEDABEEBK();
    // public System.Void .ctor(UnityEngine.Color CGOPODCAGLD, System.Single ONPCBCIIPLO, System.Boolean LMKCFANDAKH)
    // Offset: 0xB945FC
    // ABORTED: conflicts with another method.  FogInfo(::UnityEngine::Color CGOPODCAGLD, float ONPCBCIIPLO, bool LMKCFANDAKH);
  }; // MagicalActual.OrbusNetManager/FogInfo
  #pragma pack(pop)
  static check_size<sizeof(OrbusNetManager::FogInfo), 20 + sizeof(bool)> __MagicalActual_OrbusNetManager_FogInfoSizeCheck;
  static_assert(sizeof(OrbusNetManager::FogInfo) == 0x15);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::OrbusNetManager::FogInfo::FogInfo
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
