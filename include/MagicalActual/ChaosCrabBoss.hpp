// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: ChaosTentacle
  class ChaosTentacle;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ChaosCrabBoss
  class ChaosCrabBoss;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ChaosCrabBoss);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ChaosCrabBoss*, "MagicalActual", "ChaosCrabBoss");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ChaosCrabBoss
  // [TokenAttribute] Offset: FFFFFFFF
  class ChaosCrabBoss : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private UnityEngine.GameObject tentacleParent1
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* tentacleParent1;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject tentacleParent2
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* tentacleParent2;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject tentacleObj
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* tentacleObj;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.ChaosTentacle GAOMMLDIEMK
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::ChaosTentacle* GAOMMLDIEMK;
    // Field size check
    static_assert(sizeof(::MagicalActual::ChaosTentacle*) == 0x8);
    // private MagicalActual.ChaosTentacle AMCCOLMJMDD
    // Size: 0x8
    // Offset: 0x48
    ::MagicalActual::ChaosTentacle* AMCCOLMJMDD;
    // Field size check
    static_assert(sizeof(::MagicalActual::ChaosTentacle*) == 0x8);
    // private UnityEngine.Vector3 DGNDIBDIKGH
    // Size: 0xC
    // Offset: 0x50
    ::UnityEngine::Vector3 DGNDIBDIKGH;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 BOPINMALGBC
    // Size: 0xC
    // Offset: 0x5C
    ::UnityEngine::Vector3 BOPINMALGBC;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion DKKPDBAAOKP
    // Size: 0x10
    // Offset: 0x68
    ::UnityEngine::Quaternion DKKPDBAAOKP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private UnityEngine.GameObject tentacleParent1
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_tentacleParent1();
    // Get instance field reference: private UnityEngine.GameObject tentacleParent2
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_tentacleParent2();
    // Get instance field reference: private UnityEngine.GameObject tentacleObj
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_tentacleObj();
    // Get instance field reference: private MagicalActual.ChaosTentacle GAOMMLDIEMK
    [[deprecated("Use field access instead!")]] ::MagicalActual::ChaosTentacle*& dyn_GAOMMLDIEMK();
    // Get instance field reference: private MagicalActual.ChaosTentacle AMCCOLMJMDD
    [[deprecated("Use field access instead!")]] ::MagicalActual::ChaosTentacle*& dyn_AMCCOLMJMDD();
    // Get instance field reference: private UnityEngine.Vector3 DGNDIBDIKGH
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_DGNDIBDIKGH();
    // Get instance field reference: private UnityEngine.Vector3 BOPINMALGBC
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_BOPINMALGBC();
    // Get instance field reference: private UnityEngine.Quaternion DKKPDBAAOKP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_DKKPDBAAOKP();
    // private System.Void DIBLOAOHNMO()
    // Offset: 0x1A6E108
    void DIBLOAOHNMO();
    // private System.Void FAHDGOAALEM()
    // Offset: 0x1A6E254
    void FAHDGOAALEM();
    // private System.Void IKFPBMPHNFF()
    // Offset: 0x1A6E3A0
    void IKFPBMPHNFF();
    // private System.Void GMNGPGDCAHO(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A6E4EC
    void GMNGPGDCAHO(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x1A6E5D0
    void KPOAAAHLGLA();
    // private System.Void ONHPADOLAED(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A6E728
    void ONHPADOLAED(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void FDPLANCCNPK()
    // Offset: 0x1A6E80C
    void FDPLANCCNPK();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A6E958
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void IPIFMKAGODD()
    // Offset: 0x1A6EA5C
    void IPIFMKAGODD();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x1A6EBB4
    void PFABJJGAOMM();
    // public System.Void MMJIKEBHBJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A6ED0C
    void MMJIKEBHBJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void HMKJKOKPOBP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A6EE10
    void HMKJKOKPOBP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void JOGPGAPOBBK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A6EF14
    void JOGPGAPOBBK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1A6F018
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x1A6F11C
    void ABIHCGOKNCL();
    // private System.Void BGBMPIGMHIF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A6F274
    void BGBMPIGMHIF(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void NHADFEMILCC()
    // Offset: 0x1A6F358
    void NHADFEMILCC();
    // private System.Void KDBGBFBCBCF()
    // Offset: 0x1A6F4B0
    void KDBGBFBCBCF();
    // private System.Void OnDestroy()
    // Offset: 0x1A6F5FC
    void OnDestroy();
    // public System.Void .ctor()
    // Offset: 0x1A6F748
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ChaosCrabBoss* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ChaosCrabBoss::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ChaosCrabBoss*, creationType>()));
    }
    // private System.Void CCFDCEMGPGE(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A6F868
    void CCFDCEMGPGE(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void Start()
    // Offset: 0x1A6F94C
    void Start();
    // private System.Void MDALPNHFBBJ()
    // Offset: 0x1A6FAA4
    void MDALPNHFBBJ();
    // private System.Void HDBJMOPDKKD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A6FBF0
    void HDBJMOPDKKD(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void GKGBMJPEHMK(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A6FD38
    void GKGBMJPEHMK(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void CDABCHCJOHP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A6FE1C
    void CDABCHCJOHP(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void FMAGPBAODIH(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1A6FF48
    void FMAGPBAODIH(::System::Collections::ArrayList* HPEANAHIBAH);
  }; // MagicalActual.ChaosCrabBoss
  #pragma pack(pop)
  static check_size<sizeof(ChaosCrabBoss), 104 + sizeof(::UnityEngine::Quaternion)> __MagicalActual_ChaosCrabBossSizeCheck;
  static_assert(sizeof(ChaosCrabBoss) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::DIBLOAOHNMO
// Il2CppName: DIBLOAOHNMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::DIBLOAOHNMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "DIBLOAOHNMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::FAHDGOAALEM
// Il2CppName: FAHDGOAALEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::FAHDGOAALEM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "FAHDGOAALEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::IKFPBMPHNFF
// Il2CppName: IKFPBMPHNFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::IKFPBMPHNFF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "IKFPBMPHNFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::GMNGPGDCAHO
// Il2CppName: GMNGPGDCAHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::ChaosCrabBoss::GMNGPGDCAHO)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "GMNGPGDCAHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::ONHPADOLAED
// Il2CppName: ONHPADOLAED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::ChaosCrabBoss::ONHPADOLAED)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "ONHPADOLAED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::FDPLANCCNPK
// Il2CppName: FDPLANCCNPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::FDPLANCCNPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "FDPLANCCNPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ChaosCrabBoss::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::MMJIKEBHBJF
// Il2CppName: MMJIKEBHBJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ChaosCrabBoss::MMJIKEBHBJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "MMJIKEBHBJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::HMKJKOKPOBP
// Il2CppName: HMKJKOKPOBP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ChaosCrabBoss::HMKJKOKPOBP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "HMKJKOKPOBP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::JOGPGAPOBBK
// Il2CppName: JOGPGAPOBBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ChaosCrabBoss::JOGPGAPOBBK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "JOGPGAPOBBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::ChaosCrabBoss::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::BGBMPIGMHIF
// Il2CppName: BGBMPIGMHIF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::ChaosCrabBoss::BGBMPIGMHIF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "BGBMPIGMHIF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::KDBGBFBCBCF
// Il2CppName: KDBGBFBCBCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::KDBGBFBCBCF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "KDBGBFBCBCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::CCFDCEMGPGE
// Il2CppName: CCFDCEMGPGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::ChaosCrabBoss::CCFDCEMGPGE)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "CCFDCEMGPGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::MDALPNHFBBJ
// Il2CppName: MDALPNHFBBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)()>(&MagicalActual::ChaosCrabBoss::MDALPNHFBBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "MDALPNHFBBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::HDBJMOPDKKD
// Il2CppName: HDBJMOPDKKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::ChaosCrabBoss::HDBJMOPDKKD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "HDBJMOPDKKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::GKGBMJPEHMK
// Il2CppName: GKGBMJPEHMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::ChaosCrabBoss::GKGBMJPEHMK)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "GKGBMJPEHMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::CDABCHCJOHP
// Il2CppName: CDABCHCJOHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::ChaosCrabBoss::CDABCHCJOHP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "CDABCHCJOHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::ChaosCrabBoss::FMAGPBAODIH
// Il2CppName: FMAGPBAODIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ChaosCrabBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::ChaosCrabBoss::FMAGPBAODIH)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ChaosCrabBoss*), "FMAGPBAODIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
