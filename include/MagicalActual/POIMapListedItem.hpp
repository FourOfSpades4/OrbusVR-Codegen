// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: POIMapIcon
  class POIMapIcon;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: POIMapListedItem
  class POIMapListedItem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::POIMapListedItem);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::POIMapListedItem*, "MagicalActual", "POIMapListedItem");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.POIMapListedItem
  // [TokenAttribute] Offset: FFFFFFFF
  class POIMapListedItem : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.UI.Text itemName
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UI::Text* itemName;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public System.String POIName
    // Size: 0x8
    // Offset: 0x20
    ::StringW POIName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public MagicalActual.POIMapIcon myMapIcon
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::POIMapIcon* myMapIcon;
    // Field size check
    static_assert(sizeof(::MagicalActual::POIMapIcon*) == 0x8);
    // private UnityEngine.Color KIFABALOFON
    // Size: 0x10
    // Offset: 0x30
    ::UnityEngine::Color KIFABALOFON;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color KOIKEPLFPNO
    // Size: 0x10
    // Offset: 0x40
    ::UnityEngine::Color KOIKEPLFPNO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.UI.Text itemName
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_itemName();
    // Get instance field reference: public System.String POIName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_POIName();
    // Get instance field reference: public MagicalActual.POIMapIcon myMapIcon
    [[deprecated("Use field access instead!")]] ::MagicalActual::POIMapIcon*& dyn_myMapIcon();
    // Get instance field reference: private UnityEngine.Color KIFABALOFON
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_KIFABALOFON();
    // Get instance field reference: private UnityEngine.Color KOIKEPLFPNO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_KOIKEPLFPNO();
    // public System.Void ItemClicked()
    // Offset: 0xFD2DDC
    void ItemClicked();
    // public System.Void MOJDMHCKNLC()
    // Offset: 0xFD2E30
    void MOJDMHCKNLC();
    // public System.Void GIFHIJBPOOP()
    // Offset: 0xFD2E90
    void GIFHIJBPOOP();
    // private System.Void GECHLDPLPCC()
    // Offset: 0xFD2EF0
    void GECHLDPLPCC();
    // public System.Void BHENCCILAMK()
    // Offset: 0xFD2F2C
    void BHENCCILAMK();
    // private System.Void JENOIOBAEPG()
    // Offset: 0xFD2F80
    void JENOIOBAEPG();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0xFD2FBC
    void ABIHCGOKNCL();
    // private System.Void Start()
    // Offset: 0xFD2FF8
    void Start();
    // public System.Void MOIMECOAIDA()
    // Offset: 0xFD3034
    void MOIMECOAIDA();
    // public System.Void ItemSelected()
    // Offset: 0xFD3094
    void ItemSelected();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0xFD30F4
    void CBMDGNKFPIO();
    // public System.Void HCGHAHDIOAL()
    // Offset: 0xFD3130
    void HCGHAHDIOAL();
    // public System.Void CLMNOEBAAII()
    // Offset: 0xFD3190
    void CLMNOEBAAII();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0xFD31F0
    void EIIKFEMCNKM();
    // public System.Void .ctor()
    // Offset: 0xFD322C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static POIMapListedItem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::POIMapListedItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<POIMapListedItem*, creationType>()));
    }
    // public System.Void FELMFGJNMPJ()
    // Offset: 0xFD32DC
    void FELMFGJNMPJ();
    // public System.Void ANIHHOKENPI()
    // Offset: 0xFD3330
    void ANIHHOKENPI();
    // public System.Void PEANHILKIIC()
    // Offset: 0xFD3390
    void PEANHILKIIC();
    // public System.Void MKANEEALNNB()
    // Offset: 0xFD33F0
    void MKANEEALNNB();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0xFD3444
    void MLGBKBMHHLE();
    // public System.Void DAMPAFJIOIO()
    // Offset: 0xFD3480
    void DAMPAFJIOIO();
    // private System.Void FNGLOIECKDG()
    // Offset: 0xFD34D4
    void FNGLOIECKDG();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0xFD3510
    void EPCHNEGNKNF();
    // public System.Void BJNEFEPICMM()
    // Offset: 0xFD354C
    void BJNEFEPICMM();
    // public System.Void ItemDeselected()
    // Offset: 0xFD35AC
    void ItemDeselected();
    // public System.Void OPFMOIIIIHD()
    // Offset: 0xFD360C
    void OPFMOIIIIHD();
    // public System.Void PNDGNPECMCF()
    // Offset: 0xFD366C
    void PNDGNPECMCF();
    // public System.Void FGIHDJFPCEP()
    // Offset: 0xFD36C0
    void FGIHDJFPCEP();
  }; // MagicalActual.POIMapListedItem
  #pragma pack(pop)
  static check_size<sizeof(POIMapListedItem), 64 + sizeof(::UnityEngine::Color)> __MagicalActual_POIMapListedItemSizeCheck;
  static_assert(sizeof(POIMapListedItem) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::ItemClicked
// Il2CppName: ItemClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::ItemClicked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "ItemClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::MOJDMHCKNLC
// Il2CppName: MOJDMHCKNLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::MOJDMHCKNLC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "MOJDMHCKNLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::GIFHIJBPOOP
// Il2CppName: GIFHIJBPOOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::GIFHIJBPOOP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "GIFHIJBPOOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::BHENCCILAMK
// Il2CppName: BHENCCILAMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::BHENCCILAMK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "BHENCCILAMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::MOIMECOAIDA
// Il2CppName: MOIMECOAIDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::MOIMECOAIDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "MOIMECOAIDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::ItemSelected
// Il2CppName: ItemSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::ItemSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "ItemSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::HCGHAHDIOAL
// Il2CppName: HCGHAHDIOAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::HCGHAHDIOAL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "HCGHAHDIOAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::CLMNOEBAAII
// Il2CppName: CLMNOEBAAII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::CLMNOEBAAII)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "CLMNOEBAAII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::FELMFGJNMPJ
// Il2CppName: FELMFGJNMPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::FELMFGJNMPJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "FELMFGJNMPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::ANIHHOKENPI
// Il2CppName: ANIHHOKENPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::ANIHHOKENPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "ANIHHOKENPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::PEANHILKIIC
// Il2CppName: PEANHILKIIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::PEANHILKIIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "PEANHILKIIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::MKANEEALNNB
// Il2CppName: MKANEEALNNB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::MKANEEALNNB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "MKANEEALNNB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::DAMPAFJIOIO
// Il2CppName: DAMPAFJIOIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::DAMPAFJIOIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "DAMPAFJIOIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::BJNEFEPICMM
// Il2CppName: BJNEFEPICMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::BJNEFEPICMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "BJNEFEPICMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::ItemDeselected
// Il2CppName: ItemDeselected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::ItemDeselected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "ItemDeselected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::OPFMOIIIIHD
// Il2CppName: OPFMOIIIIHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::OPFMOIIIIHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "OPFMOIIIIHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::PNDGNPECMCF
// Il2CppName: PNDGNPECMCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::PNDGNPECMCF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "PNDGNPECMCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::POIMapListedItem::FGIHDJFPCEP
// Il2CppName: FGIHDJFPCEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::POIMapListedItem::*)()>(&MagicalActual::POIMapListedItem::FGIHDJFPCEP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::POIMapListedItem*), "FGIHDJFPCEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
