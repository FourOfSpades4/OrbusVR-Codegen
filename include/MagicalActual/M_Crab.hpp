// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_Crab
  class M_Crab;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_Crab);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_Crab*, "MagicalActual", "M_Crab");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_Crab
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4B7C
  class M_Crab : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // public System.Void HLGKLABMHHD()
    // Offset: 0x18B5554
    void HLGKLABMHHD();
    // private System.Void JNHNEBOHOIB()
    // Offset: 0x18B5778
    void JNHNEBOHOIB();
    // public System.Void PHMNKLJAEMC()
    // Offset: 0x18B57D0
    void PHMNKLJAEMC();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x18B59F0
    void JENOIOBAEPG();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x18B5A48
    void EPCHNEGNKNF();
    // public System.Void OMKBAIIIFBJ()
    // Offset: 0x18B5AA0
    void OMKBAIIIFBJ();
    // public System.Void JFDEDDEJJPK()
    // Offset: 0x18B5CC4
    void JFDEDDEJJPK();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x18B5EE8
    void DFCOAPEIKLN();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x18B5F40
    void NNDKJCJFIAK();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x18B5F98
    void HKINNMLBMMG();
    // private System.Void OJFAEAIKFED()
    // Offset: 0x18B5FF0
    void OJFAEAIKFED();
    // public System.Void PKINMLEHJFB()
    // Offset: 0x18B6048
    void PKINMLEHJFB();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x18B626C
    void PFABJJGAOMM();
    // public System.Void MMGEIKLBBOH()
    // Offset: 0x18B62C4
    void MMGEIKLBBOH();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x18B64E8
    void GKIOLADOCOK();
    // private System.Void Start()
    // Offset: 0x18B6540
    void Start();
    // public System.Void KDPEOPPDLLP()
    // Offset: 0x18B6598
    void KDPEOPPDLLP();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x18B67BC
    void OACMGPBCPEL();
    // private System.Void APIMIOELFAJ()
    // Offset: 0x18B6814
    void APIMIOELFAJ();
    // public System.Void GHHAMAIIFFG()
    // Offset: 0x18B686C
    void GHHAMAIIFFG();
    // public System.Void GILLJBIMGNJ()
    // Offset: 0x18B6A90
    void GILLJBIMGNJ();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x18B6CB4
    void LBIKOKCCILF();
    // public System.Void BFEOMBNEICE()
    // Offset: 0x18B6D0C
    void BFEOMBNEICE();
    // public System.Void Slash()
    // Offset: 0x18B6F30
    void Slash();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x18B7148
    void ABIHCGOKNCL();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x18B71A0
    void IPIFMKAGODD();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x18B71F8
    void KPOAAAHLGLA();
    // private System.Void NHADFEMILCC()
    // Offset: 0x18B7250
    void NHADFEMILCC();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x18B72A8
    void PBEMGGBBDCK();
    // public System.Void OMFMIKPMPEL()
    // Offset: 0x18B7300
    void OMFMIKPMPEL();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x18B7524
    void GECHLDPLPCC();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x18B757C
    void KBDGAPMJGLG();
    // private System.Void APMNGLNBFNP()
    // Offset: 0x18B75D4
    void APMNGLNBFNP();
    // public System.Void .ctor()
    // Offset: 0x18B762C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_Crab* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_Crab::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_Crab*, creationType>()));
    }
    // public System.Void DKILGFBCKHD()
    // Offset: 0x18B7684
    void DKILGFBCKHD();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x18B78A8
    void LPLGKBGLPOK();
    // private System.Void AKGFEENGKJD()
    // Offset: 0x18B7900
    void AKGFEENGKJD();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x18B7958
    void MLGBKBMHHLE();
    // public System.Void CIGIPMPLKGF()
    // Offset: 0x18B79B0
    void CIGIPMPLKGF();
  }; // MagicalActual.M_Crab
  #pragma pack(pop)
  static check_size<sizeof(M_Crab), 40 + sizeof(::StringW)> __MagicalActual_M_CrabSizeCheck;
  static_assert(sizeof(M_Crab) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_Crab::HLGKLABMHHD
// Il2CppName: HLGKLABMHHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::HLGKLABMHHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "HLGKLABMHHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::JNHNEBOHOIB
// Il2CppName: JNHNEBOHOIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::JNHNEBOHOIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "JNHNEBOHOIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::PHMNKLJAEMC
// Il2CppName: PHMNKLJAEMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::PHMNKLJAEMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "PHMNKLJAEMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::OMKBAIIIFBJ
// Il2CppName: OMKBAIIIFBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::OMKBAIIIFBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "OMKBAIIIFBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::JFDEDDEJJPK
// Il2CppName: JFDEDDEJJPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::JFDEDDEJJPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "JFDEDDEJJPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::OJFAEAIKFED
// Il2CppName: OJFAEAIKFED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::OJFAEAIKFED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "OJFAEAIKFED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::PKINMLEHJFB
// Il2CppName: PKINMLEHJFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::PKINMLEHJFB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "PKINMLEHJFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::MMGEIKLBBOH
// Il2CppName: MMGEIKLBBOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::MMGEIKLBBOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "MMGEIKLBBOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::KDPEOPPDLLP
// Il2CppName: KDPEOPPDLLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::KDPEOPPDLLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "KDPEOPPDLLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::APIMIOELFAJ
// Il2CppName: APIMIOELFAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::APIMIOELFAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "APIMIOELFAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::GHHAMAIIFFG
// Il2CppName: GHHAMAIIFFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::GHHAMAIIFFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "GHHAMAIIFFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::GILLJBIMGNJ
// Il2CppName: GILLJBIMGNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::GILLJBIMGNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "GILLJBIMGNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::BFEOMBNEICE
// Il2CppName: BFEOMBNEICE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::BFEOMBNEICE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "BFEOMBNEICE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::OMFMIKPMPEL
// Il2CppName: OMFMIKPMPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::OMFMIKPMPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "OMFMIKPMPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::APMNGLNBFNP
// Il2CppName: APMNGLNBFNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::APMNGLNBFNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "APMNGLNBFNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_Crab::DKILGFBCKHD
// Il2CppName: DKILGFBCKHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::DKILGFBCKHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "DKILGFBCKHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Crab::CIGIPMPLKGF
// Il2CppName: CIGIPMPLKGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Crab::*)()>(&MagicalActual::M_Crab::CIGIPMPLKGF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Crab*), "CIGIPMPLKGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
