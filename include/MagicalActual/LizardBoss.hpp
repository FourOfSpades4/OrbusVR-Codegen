// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: LizardBoss
  class LizardBoss;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::LizardBoss);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::LizardBoss*, "MagicalActual", "LizardBoss");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x3A
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.LizardBoss
  // [TokenAttribute] Offset: FFFFFFFF
  class LizardBoss : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject breakShieldVfx
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* breakShieldVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean AKHIIFCMIPL
    // Size: 0x1
    // Offset: 0x38
    bool AKHIIFCMIPL;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GHGLDGBAINE
    // Size: 0x1
    // Offset: 0x39
    bool GHGLDGBAINE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject breakShieldVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_breakShieldVfx();
    // Get instance field reference: private System.Boolean AKHIIFCMIPL
    [[deprecated("Use field access instead!")]] bool& dyn_AKHIIFCMIPL();
    // Get instance field reference: private System.Boolean GHGLDGBAINE
    [[deprecated("Use field access instead!")]] bool& dyn_GHGLDGBAINE();
    // public System.Void .ctor()
    // Offset: 0x18982C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LizardBoss* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::LizardBoss::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LizardBoss*, creationType>()));
    }
    // private System.Void DDABEPJBPMN(System.Object OMLPNCLFFMJ)
    // Offset: 0x189831C
    void DDABEPJBPMN(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LAHKILPEGFC(System.Object OMLPNCLFFMJ)
    // Offset: 0x18983A4
    void LAHKILPEGFC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void DGIKKMCHFGM(System.Object OMLPNCLFFMJ)
    // Offset: 0x189840C
    void DGIKKMCHFGM(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Start()
    // Offset: 0x1898494
    void Start();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x1898498
    void ABIHCGOKNCL();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x189849C
    void HKINNMLBMMG();
    // private System.Void KKEABMBACIC()
    // Offset: 0x18984A0
    void KKEABMBACIC();
    // private System.Void FixedUpdate()
    // Offset: 0x18984F8
    void FixedUpdate();
    // private System.Void KAKCGCAIAPC(System.Object OMLPNCLFFMJ)
    // Offset: 0x18984FC
    void KAKCGCAIAPC(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void KEGEKFNLCJD(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898564
    void KEGEKFNLCJD(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void ICBFACJBNPI()
    // Offset: 0x1898678
    void ICBFACJBNPI();
    // private System.Void JCJCMKPOAKK()
    // Offset: 0x18986D0
    void JCJCMKPOAKK();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x1898728
    void FNGLOIECKDG();
    // private System.Void JMPPPHNKAFG()
    // Offset: 0x189872C
    void JMPPPHNKAFG();
    // private System.Void Awake()
    // Offset: 0x1898784
    void Awake();
    // public System.Void JJEJNGMIMOI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x18987DC
    void JJEJNGMIMOI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void LOKDCCBIBCM(System.Object OMLPNCLFFMJ)
    // Offset: 0x18988F0
    void LOKDCCBIBCM(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void IKPPCPJADAD(System.Object OMLPNCLFFMJ)
    // Offset: 0x1898978
    void IKPPCPJADAD(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x1898A00
    void FGIFGGNGKPK();
    // private System.Void NLFAOLFMJIE(System.Object OMLPNCLFFMJ)
    // Offset: 0x1898A04
    void NLFAOLFMJIE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void ANKCGGIBCAI()
    // Offset: 0x1898A6C
    void ANKCGGIBCAI();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898A70
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898B84
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OnDestroy()
    // Offset: 0x1898C98
    void OnDestroy();
    // private System.Void HDMHEDEGDFD()
    // Offset: 0x1898C9C
    void HDMHEDEGDFD();
    // public System.Void EBKMGINMPPJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898CF4
    void EBKMGINMPPJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void LIFHHDAEPFK()
    // Offset: 0x1898E08
    void LIFHHDAEPFK();
    // private System.Void CNBJHFMDCOE()
    // Offset: 0x1898E0C
    void CNBJHFMDCOE();
  }; // MagicalActual.LizardBoss
  #pragma pack(pop)
  static check_size<sizeof(LizardBoss), 57 + sizeof(bool)> __MagicalActual_LizardBossSizeCheck;
  static_assert(sizeof(LizardBoss) == 0x3A);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::LizardBoss::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::LizardBoss::DDABEPJBPMN
// Il2CppName: DDABEPJBPMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::Il2CppObject*)>(&MagicalActual::LizardBoss::DDABEPJBPMN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "DDABEPJBPMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::LAHKILPEGFC
// Il2CppName: LAHKILPEGFC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::Il2CppObject*)>(&MagicalActual::LizardBoss::LAHKILPEGFC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "LAHKILPEGFC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::DGIKKMCHFGM
// Il2CppName: DGIKKMCHFGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::Il2CppObject*)>(&MagicalActual::LizardBoss::DGIKKMCHFGM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "DGIKKMCHFGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::KKEABMBACIC
// Il2CppName: KKEABMBACIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::KKEABMBACIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "KKEABMBACIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::KAKCGCAIAPC
// Il2CppName: KAKCGCAIAPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::Il2CppObject*)>(&MagicalActual::LizardBoss::KAKCGCAIAPC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "KAKCGCAIAPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::KEGEKFNLCJD
// Il2CppName: KEGEKFNLCJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardBoss::KEGEKFNLCJD)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "KEGEKFNLCJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::ICBFACJBNPI
// Il2CppName: ICBFACJBNPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::ICBFACJBNPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "ICBFACJBNPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::JCJCMKPOAKK
// Il2CppName: JCJCMKPOAKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::JCJCMKPOAKK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "JCJCMKPOAKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::JMPPPHNKAFG
// Il2CppName: JMPPPHNKAFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::JMPPPHNKAFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "JMPPPHNKAFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::JJEJNGMIMOI
// Il2CppName: JJEJNGMIMOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardBoss::JJEJNGMIMOI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "JJEJNGMIMOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::LOKDCCBIBCM
// Il2CppName: LOKDCCBIBCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::Il2CppObject*)>(&MagicalActual::LizardBoss::LOKDCCBIBCM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "LOKDCCBIBCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::IKPPCPJADAD
// Il2CppName: IKPPCPJADAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::Il2CppObject*)>(&MagicalActual::LizardBoss::IKPPCPJADAD)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "IKPPCPJADAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::NLFAOLFMJIE
// Il2CppName: NLFAOLFMJIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::Il2CppObject*)>(&MagicalActual::LizardBoss::NLFAOLFMJIE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "NLFAOLFMJIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::ANKCGGIBCAI
// Il2CppName: ANKCGGIBCAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::ANKCGGIBCAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "ANKCGGIBCAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardBoss::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardBoss::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::HDMHEDEGDFD
// Il2CppName: HDMHEDEGDFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::HDMHEDEGDFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "HDMHEDEGDFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::EBKMGINMPPJ
// Il2CppName: EBKMGINMPPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardBoss::EBKMGINMPPJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "EBKMGINMPPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::LIFHHDAEPFK
// Il2CppName: LIFHHDAEPFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::LIFHHDAEPFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "LIFHHDAEPFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardBoss::CNBJHFMDCOE
// Il2CppName: CNBJHFMDCOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardBoss::*)()>(&MagicalActual::LizardBoss::CNBJHFMDCOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardBoss*), "CNBJHFMDCOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
