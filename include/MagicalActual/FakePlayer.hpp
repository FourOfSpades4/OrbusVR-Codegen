// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: FakePlayer
  class FakePlayer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::FakePlayer);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::FakePlayer*, "MagicalActual", "FakePlayer");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.FakePlayer
  // [TokenAttribute] Offset: FFFFFFFF
  class FakePlayer : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.PlayerAvatar EENJNFDNJBD
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::PlayerAvatar* EENJNFDNJBD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // private UnityEngine.Vector3 BMAOKBKFMDC
    // Size: 0xC
    // Offset: 0x20
    ::UnityEngine::Vector3 BMAOKBKFMDC;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.PlayerAvatar EENJNFDNJBD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_EENJNFDNJBD();
    // Get instance field reference: private UnityEngine.Vector3 BMAOKBKFMDC
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_BMAOKBKFMDC();
    // private System.Void IGIJBKHAMJH()
    // Offset: 0x1111620
    void IGIJBKHAMJH();
    // private System.Void ADLGPKAIPAA()
    // Offset: 0x11116A4
    void ADLGPKAIPAA();
    // public System.Void .ctor()
    // Offset: 0x1111728
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FakePlayer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::FakePlayer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FakePlayer*, creationType>()));
    }
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x1111730
    void LPLGKBGLPOK();
    // private System.Void KIKDHKHPEGF()
    // Offset: 0x11121E4
    void KIKDHKHPEGF();
    // private System.Void KGPENDIMDIE()
    // Offset: 0x1112240
    void KGPENDIMDIE();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x111229C
    void DGJGAFKDIDK();
    // private System.Void MEJNICHCADB()
    // Offset: 0x1112F58
    void MEJNICHCADB();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x1112FB4
    void HKINNMLBMMG();
    // private System.Void FEKIHHMEKDJ()
    // Offset: 0x1113C70
    void FEKIHHMEKDJ();
    // private System.Void KIPDPKEIOEO()
    // Offset: 0x1113CCC
    void KIPDPKEIOEO();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x1113D50
    void ABIHCGOKNCL();
    // private System.Void AKGFEENGKJD()
    // Offset: 0x1114A00
    void AKGFEENGKJD();
    // private System.Void PGIHEAMKOKB()
    // Offset: 0x11156B0
    void PGIHEAMKOKB();
    // private System.Void CAMMFAALPLJ()
    // Offset: 0x111570C
    void CAMMFAALPLJ();
    // private System.Void Start()
    // Offset: 0x1115768
    void Start();
    // private System.Void JMMEOBLNOFO()
    // Offset: 0x1116424
    void JMMEOBLNOFO();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x1116480
    void OACMGPBCPEL();
    // private System.Void EDJIILEFNPD()
    // Offset: 0x1116F38
    void EDJIILEFNPD();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x1116FBC
    void GHLPBOJJHNG();
    // private System.Void EOPHEHGOJBF()
    // Offset: 0x1117C88
    void EOPHEHGOJBF();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x1117CE4
    void CBMDGNKFPIO();
    // private System.Void HGJEGCLHLFG()
    // Offset: 0x1118788
    void HGJEGCLHLFG();
    // private System.Void NLOFBPNEFKD()
    // Offset: 0x11187E4
    void NLOFBPNEFKD();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x1118868
    void FGIFGGNGKPK();
    // private System.Void FMFMAFBPBHK()
    // Offset: 0x1119548
    void FMFMAFBPBHK();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x11195A4
    void JENOIOBAEPG();
    // private System.Void FFCPHOBKPEL()
    // Offset: 0x111A050
    void FFCPHOBKPEL();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x111A0AC
    void GKIOLADOCOK();
    // private System.Void NHADFEMILCC()
    // Offset: 0x111AD60
    void NHADFEMILCC();
    // private System.Void JCJCMKPOAKK()
    // Offset: 0x111BA28
    void JCJCMKPOAKK();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x111BAAC
    void GPFBGGFPINB();
    // private System.Void ICBFACJBNPI()
    // Offset: 0x111C56C
    void ICBFACJBNPI();
    // private System.Void Awake()
    // Offset: 0x111C5F0
    void Awake();
  }; // MagicalActual.FakePlayer
  #pragma pack(pop)
  static check_size<sizeof(FakePlayer), 32 + sizeof(::UnityEngine::Vector3)> __MagicalActual_FakePlayerSizeCheck;
  static_assert(sizeof(FakePlayer) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::FakePlayer::IGIJBKHAMJH
// Il2CppName: IGIJBKHAMJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::IGIJBKHAMJH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "IGIJBKHAMJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::ADLGPKAIPAA
// Il2CppName: ADLGPKAIPAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::ADLGPKAIPAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "ADLGPKAIPAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::FakePlayer::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::KIKDHKHPEGF
// Il2CppName: KIKDHKHPEGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::KIKDHKHPEGF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "KIKDHKHPEGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::KGPENDIMDIE
// Il2CppName: KGPENDIMDIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::KGPENDIMDIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "KGPENDIMDIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::MEJNICHCADB
// Il2CppName: MEJNICHCADB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::MEJNICHCADB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "MEJNICHCADB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::FEKIHHMEKDJ
// Il2CppName: FEKIHHMEKDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::FEKIHHMEKDJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "FEKIHHMEKDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::KIPDPKEIOEO
// Il2CppName: KIPDPKEIOEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::KIPDPKEIOEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "KIPDPKEIOEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::PGIHEAMKOKB
// Il2CppName: PGIHEAMKOKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::PGIHEAMKOKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "PGIHEAMKOKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::CAMMFAALPLJ
// Il2CppName: CAMMFAALPLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::CAMMFAALPLJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "CAMMFAALPLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::JMMEOBLNOFO
// Il2CppName: JMMEOBLNOFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::JMMEOBLNOFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "JMMEOBLNOFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::EDJIILEFNPD
// Il2CppName: EDJIILEFNPD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::EDJIILEFNPD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "EDJIILEFNPD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::EOPHEHGOJBF
// Il2CppName: EOPHEHGOJBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::EOPHEHGOJBF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "EOPHEHGOJBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::HGJEGCLHLFG
// Il2CppName: HGJEGCLHLFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::HGJEGCLHLFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "HGJEGCLHLFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::NLOFBPNEFKD
// Il2CppName: NLOFBPNEFKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::NLOFBPNEFKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "NLOFBPNEFKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::FMFMAFBPBHK
// Il2CppName: FMFMAFBPBHK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::FMFMAFBPBHK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "FMFMAFBPBHK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::FFCPHOBKPEL
// Il2CppName: FFCPHOBKPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::FFCPHOBKPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "FFCPHOBKPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::JCJCMKPOAKK
// Il2CppName: JCJCMKPOAKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::JCJCMKPOAKK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "JCJCMKPOAKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::ICBFACJBNPI
// Il2CppName: ICBFACJBNPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::ICBFACJBNPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "ICBFACJBNPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FakePlayer::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FakePlayer::*)()>(&MagicalActual::FakePlayer::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FakePlayer*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
