// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MagicalActual.PhysicsObject
#include "MagicalActual/PhysicsObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PhysicsObject::$$c__DisplayClass20_0);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PhysicsObject::$$c__DisplayClass20_0*, "MagicalActual", "PhysicsObject/<>c__DisplayClass20_0");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PhysicsObject/<>c__DisplayClass20_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AD3660
  class PhysicsObject::$$c__DisplayClass20_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Byte GFCOFEOGIDM
    // Size: 0x1
    // Offset: 0x10
    uint8_t GFCOFEOGIDM;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    public:
    // Creating conversion operator: operator uint8_t
    constexpr operator uint8_t() const noexcept {
      return GFCOFEOGIDM;
    }
    // Get instance field reference: public System.Byte GFCOFEOGIDM
    [[deprecated("Use field access instead!")]] uint8_t& dyn_GFCOFEOGIDM();
    // public System.Void .ctor()
    // Offset: 0xD95618
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PhysicsObject::$$c__DisplayClass20_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PhysicsObject::$$c__DisplayClass20_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PhysicsObject::$$c__DisplayClass20_0*, creationType>()));
    }
  }; // MagicalActual.PhysicsObject/<>c__DisplayClass20_0
  #pragma pack(pop)
  static check_size<sizeof(PhysicsObject::$$c__DisplayClass20_0), 16 + sizeof(uint8_t)> __MagicalActual_PhysicsObject_$$c__DisplayClass20_0SizeCheck;
  static_assert(sizeof(PhysicsObject::$$c__DisplayClass20_0) == 0x11);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PhysicsObject::$$c__DisplayClass20_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
