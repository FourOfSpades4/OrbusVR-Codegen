// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ItemContainer
  class ItemContainer;
  // Forward declaring type: GenericChest
  class GenericChest;
  // Forward declaring type: ButtonPresser
  class ButtonPresser;
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: WorldMenu
  class WorldMenu;
  // Forward declaring type: TinkerableObject
  class TinkerableObject;
  // Forward declaring type: BlueprintIcon
  class BlueprintIcon;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: TextAsset
  class TextAsset;
  // Forward declaring type: Canvas
  class Canvas;
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Coroutine
  class Coroutine;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItem
  class InventoryItem;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: BinaryWriter
  class BinaryWriter;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: TinkererStation
  class TinkererStation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::TinkererStation);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::TinkererStation*, "MagicalActual", "TinkererStation");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x140
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.TinkererStation
  // [TokenAttribute] Offset: FFFFFFFF
  class TinkererStation : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::TinkererStation::$$c__DisplayClass45_0
    class $$c__DisplayClass45_0;
    // Nested type: ::MagicalActual::TinkererStation::$DoRequestUnlockedBlueprints$d__46
    class $DoRequestUnlockedBlueprints$d__46;
    // Nested type: ::MagicalActual::TinkererStation::$$c__DisplayClass48_0
    class $$c__DisplayClass48_0;
    // Nested type: ::MagicalActual::TinkererStation::$ShowToolTip$d__53
    class $ShowToolTip$d__53;
    public:
    // private UnityEngine.GameObject tinkerableItemSpawnPoint
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* tinkerableItemSpawnPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject menuPoint
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* menuPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject tinkerableMenuPoint
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* tinkerableMenuPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject completedVFX
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* completedVFX;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject cancelButton
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* cancelButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject previewParticles
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* previewParticles;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject iconPrefab
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* iconPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject skinListContent
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GameObject* skinListContent;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject buildButton
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* buildButton;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject toolTip
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::GameObject* toolTip;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject cancelBuildPrompt
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::GameObject* cancelBuildPrompt;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject buttonControls
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::GameObject* buttonControls;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject buildParticles
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::GameObject* buildParticles;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.UI.Text requirementsText
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::UI::Text* requirementsText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private UnityEngine.UI.Text insufficentText
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::UI::Text* insufficentText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private UnityEngine.UI.Text cancelBuildText
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::UI::Text* cancelBuildText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private UnityEngine.UI.Text unlockedBlueprintsText
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::UI::Text* unlockedBlueprintsText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private MagicalActual.ItemContainer myItemContainer
    // Size: 0x8
    // Offset: 0xA0
    ::MagicalActual::ItemContainer* myItemContainer;
    // Field size check
    static_assert(sizeof(::MagicalActual::ItemContainer*) == 0x8);
    // private MagicalActual.GenericChest myChest
    // Size: 0x8
    // Offset: 0xA8
    ::MagicalActual::GenericChest* myChest;
    // Field size check
    static_assert(sizeof(::MagicalActual::GenericChest*) == 0x8);
    // private MagicalActual.ButtonPresser rotateLeftButton
    // Size: 0x8
    // Offset: 0xB0
    ::MagicalActual::ButtonPresser* rotateLeftButton;
    // Field size check
    static_assert(sizeof(::MagicalActual::ButtonPresser*) == 0x8);
    // private MagicalActual.ButtonPresser rotateRightButton
    // Size: 0x8
    // Offset: 0xB8
    ::MagicalActual::ButtonPresser* rotateRightButton;
    // Field size check
    static_assert(sizeof(::MagicalActual::ButtonPresser*) == 0x8);
    // private UnityEngine.RectTransform scrollableContent
    // Size: 0x8
    // Offset: 0xC0
    ::UnityEngine::RectTransform* scrollableContent;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.TextAsset tooltipHtml
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::TextAsset* tooltipHtml;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextAsset*) == 0x8);
    // private UnityEngine.Canvas uiCanvas
    // Size: 0x8
    // Offset: 0xD0
    ::UnityEngine::Canvas* uiCanvas;
    // Field size check
    static_assert(sizeof(::UnityEngine::Canvas*) == 0x8);
    // private System.Boolean FIHMKBLLNNE
    // Size: 0x1
    // Offset: 0xD8
    bool FIHMKBLLNNE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean LDDPFNHFAEL
    // Size: 0x1
    // Offset: 0xD9
    bool LDDPFNHFAEL;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean ABPHBJIJNNO
    // Size: 0x1
    // Offset: 0xDA
    bool ABPHBJIJNNO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean HDPKDEBPIEI
    // Size: 0x1
    // Offset: 0xDB
    bool HDPKDEBPIEI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HDPKDEBPIEI and: OrbusNetComponent
    char __padding27[0x4] = {};
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0xE0
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0xE8
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.WorldMenu KNCKPELAKBH
    // Size: 0x8
    // Offset: 0xF0
    ::MagicalActual::WorldMenu* KNCKPELAKBH;
    // Field size check
    static_assert(sizeof(::MagicalActual::WorldMenu*) == 0x8);
    // private UnityEngine.GameObject ILIDJGHKOIA
    // Size: 0x8
    // Offset: 0xF8
    ::UnityEngine::GameObject* ILIDJGHKOIA;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.TinkerableObject ECAHMKGMEOP
    // Size: 0x8
    // Offset: 0x100
    ::MagicalActual::TinkerableObject* ECAHMKGMEOP;
    // Field size check
    static_assert(sizeof(::MagicalActual::TinkerableObject*) == 0x8);
    // public System.Collections.Generic.List`1<System.Int32> unlockedBlueprints
    // Size: 0x8
    // Offset: 0x108
    ::System::Collections::Generic::List_1<int>* unlockedBlueprints;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<int>*) == 0x8);
    // private System.Collections.Generic.List`1<MagicalActual.BlueprintIcon> NKDJOJCBCBK
    // Size: 0x8
    // Offset: 0x110
    ::System::Collections::Generic::List_1<::MagicalActual::BlueprintIcon*>* NKDJOJCBCBK;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::MagicalActual::BlueprintIcon*>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Texture2D> OOCFIPOBKML
    // Size: 0x8
    // Offset: 0x118
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Texture2D*>* OOCFIPOBKML;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Texture2D*>*) == 0x8);
    // private MagicalActual.BlueprintIcon BODIFGKDPMC
    // Size: 0x8
    // Offset: 0x120
    ::MagicalActual::BlueprintIcon* BODIFGKDPMC;
    // Field size check
    static_assert(sizeof(::MagicalActual::BlueprintIcon*) == 0x8);
    // private MagicalActual.BlueprintIcon FMPHGHDGCNC
    // Size: 0x8
    // Offset: 0x128
    ::MagicalActual::BlueprintIcon* FMPHGHDGCNC;
    // Field size check
    static_assert(sizeof(::MagicalActual::BlueprintIcon*) == 0x8);
    // private UnityEngine.Coroutine EJIGECDJKLH
    // Size: 0x8
    // Offset: 0x130
    ::UnityEngine::Coroutine* EJIGECDJKLH;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private UnityEngine.Coroutine DDCOELDJDHA
    // Size: 0x8
    // Offset: 0x138
    ::UnityEngine::Coroutine* DDCOELDJDHA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.GameObject tinkerableItemSpawnPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_tinkerableItemSpawnPoint();
    // Get instance field reference: private UnityEngine.GameObject menuPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_menuPoint();
    // Get instance field reference: public UnityEngine.GameObject tinkerableMenuPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_tinkerableMenuPoint();
    // Get instance field reference: private UnityEngine.GameObject completedVFX
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_completedVFX();
    // Get instance field reference: private UnityEngine.GameObject cancelButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_cancelButton();
    // Get instance field reference: private UnityEngine.GameObject previewParticles
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_previewParticles();
    // Get instance field reference: private UnityEngine.GameObject iconPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_iconPrefab();
    // Get instance field reference: private UnityEngine.GameObject skinListContent
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_skinListContent();
    // Get instance field reference: private UnityEngine.GameObject buildButton
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_buildButton();
    // Get instance field reference: private UnityEngine.GameObject toolTip
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_toolTip();
    // Get instance field reference: private UnityEngine.GameObject cancelBuildPrompt
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_cancelBuildPrompt();
    // Get instance field reference: private UnityEngine.GameObject buttonControls
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_buttonControls();
    // Get instance field reference: private UnityEngine.GameObject buildParticles
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_buildParticles();
    // Get instance field reference: private UnityEngine.UI.Text requirementsText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_requirementsText();
    // Get instance field reference: private UnityEngine.UI.Text insufficentText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_insufficentText();
    // Get instance field reference: private UnityEngine.UI.Text cancelBuildText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_cancelBuildText();
    // Get instance field reference: private UnityEngine.UI.Text unlockedBlueprintsText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_unlockedBlueprintsText();
    // Get instance field reference: private MagicalActual.ItemContainer myItemContainer
    [[deprecated("Use field access instead!")]] ::MagicalActual::ItemContainer*& dyn_myItemContainer();
    // Get instance field reference: private MagicalActual.GenericChest myChest
    [[deprecated("Use field access instead!")]] ::MagicalActual::GenericChest*& dyn_myChest();
    // Get instance field reference: private MagicalActual.ButtonPresser rotateLeftButton
    [[deprecated("Use field access instead!")]] ::MagicalActual::ButtonPresser*& dyn_rotateLeftButton();
    // Get instance field reference: private MagicalActual.ButtonPresser rotateRightButton
    [[deprecated("Use field access instead!")]] ::MagicalActual::ButtonPresser*& dyn_rotateRightButton();
    // Get instance field reference: private UnityEngine.RectTransform scrollableContent
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_scrollableContent();
    // Get instance field reference: private UnityEngine.TextAsset tooltipHtml
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& dyn_tooltipHtml();
    // Get instance field reference: private UnityEngine.Canvas uiCanvas
    [[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& dyn_uiCanvas();
    // Get instance field reference: private System.Boolean FIHMKBLLNNE
    [[deprecated("Use field access instead!")]] bool& dyn_FIHMKBLLNNE();
    // Get instance field reference: private System.Boolean LDDPFNHFAEL
    [[deprecated("Use field access instead!")]] bool& dyn_LDDPFNHFAEL();
    // Get instance field reference: private System.Boolean ABPHBJIJNNO
    [[deprecated("Use field access instead!")]] bool& dyn_ABPHBJIJNNO();
    // Get instance field reference: private System.Boolean HDPKDEBPIEI
    [[deprecated("Use field access instead!")]] bool& dyn_HDPKDEBPIEI();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private MagicalActual.WorldMenu KNCKPELAKBH
    [[deprecated("Use field access instead!")]] ::MagicalActual::WorldMenu*& dyn_KNCKPELAKBH();
    // Get instance field reference: private UnityEngine.GameObject ILIDJGHKOIA
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ILIDJGHKOIA();
    // Get instance field reference: private MagicalActual.TinkerableObject ECAHMKGMEOP
    [[deprecated("Use field access instead!")]] ::MagicalActual::TinkerableObject*& dyn_ECAHMKGMEOP();
    // Get instance field reference: public System.Collections.Generic.List`1<System.Int32> unlockedBlueprints
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& dyn_unlockedBlueprints();
    // Get instance field reference: private System.Collections.Generic.List`1<MagicalActual.BlueprintIcon> NKDJOJCBCBK
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::MagicalActual::BlueprintIcon*>*& dyn_NKDJOJCBCBK();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Texture2D> OOCFIPOBKML
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Texture2D*>*& dyn_OOCFIPOBKML();
    // Get instance field reference: private MagicalActual.BlueprintIcon BODIFGKDPMC
    [[deprecated("Use field access instead!")]] ::MagicalActual::BlueprintIcon*& dyn_BODIFGKDPMC();
    // Get instance field reference: private MagicalActual.BlueprintIcon FMPHGHDGCNC
    [[deprecated("Use field access instead!")]] ::MagicalActual::BlueprintIcon*& dyn_FMPHGHDGCNC();
    // Get instance field reference: private UnityEngine.Coroutine EJIGECDJKLH
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_EJIGECDJKLH();
    // Get instance field reference: private UnityEngine.Coroutine DDCOELDJDHA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_DDCOELDJDHA();
    // private System.Void JLIMKOKPNBJ(MagicalActual.BlueprintIcon NEOALINPDNP)
    // Offset: 0x13AFD58
    void JLIMKOKPNBJ(::MagicalActual::BlueprintIcon* NEOALINPDNP);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13AFE24
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OnDestroy()
    // Offset: 0x13AFF28
    void OnDestroy();
    // private UnityEngine.Texture2D EJAIBHDAKCF(System.String DHKAMFAGAMD)
    // Offset: 0x13B028C
    ::UnityEngine::Texture2D* EJAIBHDAKCF(::StringW DHKAMFAGAMD);
    // private System.Void KHCFEKPGIAI()
    // Offset: 0x13B0478
    void KHCFEKPGIAI();
    // private System.Void LOPKDDIBBHJ(UnityEngine.GameObject HIBGDHKJNKD, System.Collections.Generic.List`1<MagicalActual.BlueprintIcon> NGOKOBFLHAH, System.Int32 PIEBOKNPEFP)
    // Offset: 0x13B07AC
    void LOPKDDIBBHJ(::UnityEngine::GameObject* HIBGDHKJNKD, ::System::Collections::Generic::List_1<::MagicalActual::BlueprintIcon*>* NGOKOBFLHAH, int PIEBOKNPEFP);
    // public System.Void .ctor()
    // Offset: 0x13B0980
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TinkererStation* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::TinkererStation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TinkererStation*, creationType>()));
    }
    // public System.Void BODIBHPIJKL()
    // Offset: 0x13B0A28
    void BODIBHPIJKL();
    // private System.Void Update()
    // Offset: 0x13B0C48
    void Update();
    // private System.Void KKCJENBILGG(System.Boolean FNGJFEILCDN)
    // Offset: 0x13B0EDC
    void KKCJENBILGG(bool FNGJFEILCDN);
    // private System.Void EFGJFMENOAL()
    // Offset: 0x13B12BC
    void EFGJFMENOAL();
    // public System.Void MEKDLBBKLDA()
    // Offset: 0x13B18A0
    void MEKDLBBKLDA();
    // private System.Void LHEFIPDJGJI(UnityEngine.GameObject HIBGDHKJNKD, System.Collections.Generic.List`1<MagicalActual.BlueprintIcon> NGOKOBFLHAH, System.Int32 PIEBOKNPEFP)
    // Offset: 0x13B196C
    void LHEFIPDJGJI(::UnityEngine::GameObject* HIBGDHKJNKD, ::System::Collections::Generic::List_1<::MagicalActual::BlueprintIcon*>* NGOKOBFLHAH, int PIEBOKNPEFP);
    // public System.Void ResetCancelPrompt()
    // Offset: 0x13B1B4C
    void ResetCancelPrompt();
    // public System.Void DCLGOHIJOIP()
    // Offset: 0x13B1C18
    void DCLGOHIJOIP();
    // private System.Collections.IEnumerator OODBAJHBAIC()
    // Offset: 0x13B1F64
    ::System::Collections::IEnumerator* OODBAJHBAIC();
    // public System.Void CancelBuildButtonClicked()
    // Offset: 0x13B2008
    void CancelBuildButtonClicked();
    // private System.Void LPEFDDHNDJC()
    // Offset: 0x13B20D4
    void LPEFDDHNDJC();
    // private System.Void BJMMJNDCPLF()
    // Offset: 0x13B2130
    void BJMMJNDCPLF();
    // private System.Void JBIPPLMDHCF()
    // Offset: 0x13B2684
    void JBIPPLMDHCF();
    // private System.Void IADKCONNCML()
    // Offset: 0x13B29B8
    void IADKCONNCML();
    // private System.Void ItemContainerInventoryChanged(MagicalActual.ItemContainer ADLACIABAGF)
    // Offset: 0x13B2A38
    void ItemContainerInventoryChanged(::MagicalActual::ItemContainer* ADLACIABAGF);
    // public System.Void KEEHKNHEMFF()
    // Offset: 0x13B2A44
    void KEEHKNHEMFF();
    // private System.Void DetachedFromInterface()
    // Offset: 0x13B2D94
    void DetachedFromInterface();
    // private System.Void CBPDFDGDKMM()
    // Offset: 0x13B2E84
    void CBPDFDGDKMM();
    // private System.Void GMLNECNAODG()
    // Offset: 0x13B0FF0
    void GMLNECNAODG();
    // private System.Collections.IEnumerator IMCFAIAGMPM()
    // Offset: 0x13B2E10
    ::System::Collections::IEnumerator* IMCFAIAGMPM();
    // private System.Void JIKJBAMGGBF()
    // Offset: 0x13B2EE0
    void JIKJBAMGGBF();
    // private System.Void GALJDBBBCBK(MagicalActual.BlueprintIcon NEOALINPDNP)
    // Offset: 0x13B2EE4
    void GALJDBBBCBK(::MagicalActual::BlueprintIcon* NEOALINPDNP);
    // private System.Void IHIEIOLOOBI(MagicalActual.BlueprintIcon NEOALINPDNP)
    // Offset: 0x13B2EE8
    void IHIEIOLOOBI(::MagicalActual::BlueprintIcon* NEOALINPDNP);
    // private System.Void EBHIHPBBKDO(ExtUI.InventoryItem CDIKIFBMIJC, System.Boolean DCJGJBIPCII)
    // Offset: 0x13B2EEC
    void EBHIHPBBKDO(::ExtUI::InventoryItem* CDIKIFBMIJC, bool DCJGJBIPCII);
    // public System.Void BeginBuilding()
    // Offset: 0x13B30FC
    void BeginBuilding();
    // public System.Void LJFOLHIICLI()
    // Offset: 0x13B3320
    void LJFOLHIICLI();
    // private System.Collections.IEnumerator OLGICCCBFFH()
    // Offset: 0x13B0734
    ::System::Collections::IEnumerator* OLGICCCBFFH();
    // private System.Void LIFHHDAEPFK()
    // Offset: 0x13B3544
    void LIFHHDAEPFK();
    // private System.Void NDPBKFBIELG(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x13B3548
    void NDPBKFBIELG(::System::Collections::ArrayList* HPEANAHIBAH);
    // private MagicalActual.BlueprintIcon GMLBEHJLLDH(ExtUI.InventoryItem CDIKIFBMIJC)
    // Offset: 0x13B3794
    ::MagicalActual::BlueprintIcon* GMLBEHJLLDH(::ExtUI::InventoryItem* CDIKIFBMIJC);
    // private UnityEngine.Texture2D DFFFMKJCODA(System.String DHKAMFAGAMD)
    // Offset: 0x13B3ACC
    ::UnityEngine::Texture2D* DFFFMKJCODA(::StringW DHKAMFAGAMD);
    // private System.Void KFBHLENNEAB(ExtUI.InventoryItem CDIKIFBMIJC, System.Boolean DCJGJBIPCII)
    // Offset: 0x13B3CB8
    void KFBHLENNEAB(::ExtUI::InventoryItem* CDIKIFBMIJC, bool DCJGJBIPCII);
    // private System.Void OMEJFJJJCMF()
    // Offset: 0x13B23C8
    void OMEJFJJJCMF();
    // public System.Void NAGCPJIOIOC()
    // Offset: 0x13B1554
    void NAGCPJIOIOC();
    // private System.Void AONPNDLCPGG(MagicalActual.ItemContainer ADLACIABAGF)
    // Offset: 0x13B3EC8
    void AONPNDLCPGG(::MagicalActual::ItemContainer* ADLACIABAGF);
    // private System.Collections.IEnumerator JCHGGEGGAFD(MagicalActual.BlueprintIcon NEOALINPDNP)
    // Offset: 0x13AFD8C
    ::System::Collections::IEnumerator* JCHGGEGGAFD(::MagicalActual::BlueprintIcon* NEOALINPDNP);
    // private UnityEngine.Texture2D DFPLOOIMBCP(System.String DHKAMFAGAMD)
    // Offset: 0x13B3EFC
    ::UnityEngine::Texture2D* DFPLOOIMBCP(::StringW DHKAMFAGAMD);
    // private System.Void FIABNGFMDMO(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x13B40E8
    void FIABNGFMDMO(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Collections.IEnumerator DIOIEOLOAOA()
    // Offset: 0x13B2940
    ::System::Collections::IEnumerator* DIOIEOLOAOA();
    // private System.Void EFHMJFDIBMO(UnityEngine.GameObject HIBGDHKJNKD, System.Collections.Generic.List`1<MagicalActual.BlueprintIcon> NGOKOBFLHAH, System.Int32 PIEBOKNPEFP)
    // Offset: 0x13B4148
    void EFHMJFDIBMO(::UnityEngine::GameObject* HIBGDHKJNKD, ::System::Collections::Generic::List_1<::MagicalActual::BlueprintIcon*>* NGOKOBFLHAH, int PIEBOKNPEFP);
    // private System.Void DPDDNOBAFIP()
    // Offset: 0x13B4328
    void DPDDNOBAFIP();
    // private System.Void Start()
    // Offset: 0x13B45C0
    void Start();
    // public System.Void KIDNJNOFOFF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13B48F0
    void KIDNJNOFOFF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void CleanUpTinkerableObject()
    // Offset: 0x13AFF2C
    void CleanUpTinkerableObject();
    // private System.Void NKPLKKMJOLB(MagicalActual.BlueprintIcon NEOALINPDNP)
    // Offset: 0x13B49F4
    void NKPLKKMJOLB(::MagicalActual::BlueprintIcon* NEOALINPDNP);
  }; // MagicalActual.TinkererStation
  #pragma pack(pop)
  static check_size<sizeof(TinkererStation), 312 + sizeof(::UnityEngine::Coroutine*)> __MagicalActual_TinkererStationSizeCheck;
  static_assert(sizeof(TinkererStation) == 0x140);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::TinkererStation::JLIMKOKPNBJ
// Il2CppName: JLIMKOKPNBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::MagicalActual::BlueprintIcon*)>(&MagicalActual::TinkererStation::JLIMKOKPNBJ)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BlueprintIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "JLIMKOKPNBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::TinkererStation::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::EJAIBHDAKCF
// Il2CppName: EJAIBHDAKCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (MagicalActual::TinkererStation::*)(::StringW)>(&MagicalActual::TinkererStation::EJAIBHDAKCF)> {
  static const MethodInfo* get() {
    static auto* DHKAMFAGAMD = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "EJAIBHDAKCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DHKAMFAGAMD});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::KHCFEKPGIAI
// Il2CppName: KHCFEKPGIAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::KHCFEKPGIAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "KHCFEKPGIAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::LOPKDDIBBHJ
// Il2CppName: LOPKDDIBBHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::UnityEngine::GameObject*, ::System::Collections::Generic::List_1<::MagicalActual::BlueprintIcon*>*, int)>(&MagicalActual::TinkererStation::LOPKDDIBBHJ)> {
  static const MethodInfo* get() {
    static auto* HIBGDHKJNKD = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* NGOKOBFLHAH = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("MagicalActual", "BlueprintIcon")})->byval_arg;
    static auto* PIEBOKNPEFP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "LOPKDDIBBHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HIBGDHKJNKD, NGOKOBFLHAH, PIEBOKNPEFP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::TinkererStation::BODIBHPIJKL
// Il2CppName: BODIBHPIJKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::BODIBHPIJKL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "BODIBHPIJKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::KKCJENBILGG
// Il2CppName: KKCJENBILGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(bool)>(&MagicalActual::TinkererStation::KKCJENBILGG)> {
  static const MethodInfo* get() {
    static auto* FNGJFEILCDN = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "KKCJENBILGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FNGJFEILCDN});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::EFGJFMENOAL
// Il2CppName: EFGJFMENOAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::EFGJFMENOAL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "EFGJFMENOAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::MEKDLBBKLDA
// Il2CppName: MEKDLBBKLDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::MEKDLBBKLDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "MEKDLBBKLDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::LHEFIPDJGJI
// Il2CppName: LHEFIPDJGJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::UnityEngine::GameObject*, ::System::Collections::Generic::List_1<::MagicalActual::BlueprintIcon*>*, int)>(&MagicalActual::TinkererStation::LHEFIPDJGJI)> {
  static const MethodInfo* get() {
    static auto* HIBGDHKJNKD = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* NGOKOBFLHAH = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("MagicalActual", "BlueprintIcon")})->byval_arg;
    static auto* PIEBOKNPEFP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "LHEFIPDJGJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HIBGDHKJNKD, NGOKOBFLHAH, PIEBOKNPEFP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::ResetCancelPrompt
// Il2CppName: ResetCancelPrompt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::ResetCancelPrompt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "ResetCancelPrompt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::DCLGOHIJOIP
// Il2CppName: DCLGOHIJOIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::DCLGOHIJOIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "DCLGOHIJOIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::OODBAJHBAIC
// Il2CppName: OODBAJHBAIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::OODBAJHBAIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "OODBAJHBAIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::CancelBuildButtonClicked
// Il2CppName: CancelBuildButtonClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::CancelBuildButtonClicked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "CancelBuildButtonClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::LPEFDDHNDJC
// Il2CppName: LPEFDDHNDJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::LPEFDDHNDJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "LPEFDDHNDJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::BJMMJNDCPLF
// Il2CppName: BJMMJNDCPLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::BJMMJNDCPLF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "BJMMJNDCPLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::JBIPPLMDHCF
// Il2CppName: JBIPPLMDHCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::JBIPPLMDHCF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "JBIPPLMDHCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::IADKCONNCML
// Il2CppName: IADKCONNCML
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::IADKCONNCML)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "IADKCONNCML", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::ItemContainerInventoryChanged
// Il2CppName: ItemContainerInventoryChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::MagicalActual::ItemContainer*)>(&MagicalActual::TinkererStation::ItemContainerInventoryChanged)> {
  static const MethodInfo* get() {
    static auto* ADLACIABAGF = &::il2cpp_utils::GetClassFromName("MagicalActual", "ItemContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "ItemContainerInventoryChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ADLACIABAGF});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::KEEHKNHEMFF
// Il2CppName: KEEHKNHEMFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::KEEHKNHEMFF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "KEEHKNHEMFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::DetachedFromInterface
// Il2CppName: DetachedFromInterface
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::DetachedFromInterface)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "DetachedFromInterface", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::CBPDFDGDKMM
// Il2CppName: CBPDFDGDKMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::CBPDFDGDKMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "CBPDFDGDKMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::GMLNECNAODG
// Il2CppName: GMLNECNAODG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::GMLNECNAODG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "GMLNECNAODG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::IMCFAIAGMPM
// Il2CppName: IMCFAIAGMPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::IMCFAIAGMPM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "IMCFAIAGMPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::JIKJBAMGGBF
// Il2CppName: JIKJBAMGGBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::JIKJBAMGGBF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "JIKJBAMGGBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::GALJDBBBCBK
// Il2CppName: GALJDBBBCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::MagicalActual::BlueprintIcon*)>(&MagicalActual::TinkererStation::GALJDBBBCBK)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BlueprintIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "GALJDBBBCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::IHIEIOLOOBI
// Il2CppName: IHIEIOLOOBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::MagicalActual::BlueprintIcon*)>(&MagicalActual::TinkererStation::IHIEIOLOOBI)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BlueprintIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "IHIEIOLOOBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::EBHIHPBBKDO
// Il2CppName: EBHIHPBBKDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::ExtUI::InventoryItem*, bool)>(&MagicalActual::TinkererStation::EBHIHPBBKDO)> {
  static const MethodInfo* get() {
    static auto* CDIKIFBMIJC = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItem")->byval_arg;
    static auto* DCJGJBIPCII = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "EBHIHPBBKDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CDIKIFBMIJC, DCJGJBIPCII});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::BeginBuilding
// Il2CppName: BeginBuilding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::BeginBuilding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "BeginBuilding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::LJFOLHIICLI
// Il2CppName: LJFOLHIICLI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::LJFOLHIICLI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "LJFOLHIICLI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::OLGICCCBFFH
// Il2CppName: OLGICCCBFFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::OLGICCCBFFH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "OLGICCCBFFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::LIFHHDAEPFK
// Il2CppName: LIFHHDAEPFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::LIFHHDAEPFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "LIFHHDAEPFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::NDPBKFBIELG
// Il2CppName: NDPBKFBIELG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::System::Collections::ArrayList*)>(&MagicalActual::TinkererStation::NDPBKFBIELG)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "NDPBKFBIELG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::GMLBEHJLLDH
// Il2CppName: GMLBEHJLLDH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::BlueprintIcon* (MagicalActual::TinkererStation::*)(::ExtUI::InventoryItem*)>(&MagicalActual::TinkererStation::GMLBEHJLLDH)> {
  static const MethodInfo* get() {
    static auto* CDIKIFBMIJC = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItem")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "GMLBEHJLLDH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CDIKIFBMIJC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::DFFFMKJCODA
// Il2CppName: DFFFMKJCODA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (MagicalActual::TinkererStation::*)(::StringW)>(&MagicalActual::TinkererStation::DFFFMKJCODA)> {
  static const MethodInfo* get() {
    static auto* DHKAMFAGAMD = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "DFFFMKJCODA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DHKAMFAGAMD});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::KFBHLENNEAB
// Il2CppName: KFBHLENNEAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::ExtUI::InventoryItem*, bool)>(&MagicalActual::TinkererStation::KFBHLENNEAB)> {
  static const MethodInfo* get() {
    static auto* CDIKIFBMIJC = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItem")->byval_arg;
    static auto* DCJGJBIPCII = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "KFBHLENNEAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CDIKIFBMIJC, DCJGJBIPCII});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::OMEJFJJJCMF
// Il2CppName: OMEJFJJJCMF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::OMEJFJJJCMF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "OMEJFJJJCMF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::NAGCPJIOIOC
// Il2CppName: NAGCPJIOIOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::NAGCPJIOIOC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "NAGCPJIOIOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::AONPNDLCPGG
// Il2CppName: AONPNDLCPGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::MagicalActual::ItemContainer*)>(&MagicalActual::TinkererStation::AONPNDLCPGG)> {
  static const MethodInfo* get() {
    static auto* ADLACIABAGF = &::il2cpp_utils::GetClassFromName("MagicalActual", "ItemContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "AONPNDLCPGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ADLACIABAGF});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::JCHGGEGGAFD
// Il2CppName: JCHGGEGGAFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TinkererStation::*)(::MagicalActual::BlueprintIcon*)>(&MagicalActual::TinkererStation::JCHGGEGGAFD)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BlueprintIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "JCHGGEGGAFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::DFPLOOIMBCP
// Il2CppName: DFPLOOIMBCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (MagicalActual::TinkererStation::*)(::StringW)>(&MagicalActual::TinkererStation::DFPLOOIMBCP)> {
  static const MethodInfo* get() {
    static auto* DHKAMFAGAMD = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "DFPLOOIMBCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DHKAMFAGAMD});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::FIABNGFMDMO
// Il2CppName: FIABNGFMDMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::System::IO::BinaryWriter*)>(&MagicalActual::TinkererStation::FIABNGFMDMO)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "FIABNGFMDMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::DIOIEOLOAOA
// Il2CppName: DIOIEOLOAOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::DIOIEOLOAOA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "DIOIEOLOAOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::EFHMJFDIBMO
// Il2CppName: EFHMJFDIBMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::UnityEngine::GameObject*, ::System::Collections::Generic::List_1<::MagicalActual::BlueprintIcon*>*, int)>(&MagicalActual::TinkererStation::EFHMJFDIBMO)> {
  static const MethodInfo* get() {
    static auto* HIBGDHKJNKD = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* NGOKOBFLHAH = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("MagicalActual", "BlueprintIcon")})->byval_arg;
    static auto* PIEBOKNPEFP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "EFHMJFDIBMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HIBGDHKJNKD, NGOKOBFLHAH, PIEBOKNPEFP});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::DPDDNOBAFIP
// Il2CppName: DPDDNOBAFIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::DPDDNOBAFIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "DPDDNOBAFIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::KIDNJNOFOFF
// Il2CppName: KIDNJNOFOFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::MagicalActual::NetEntity*)>(&MagicalActual::TinkererStation::KIDNJNOFOFF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "KIDNJNOFOFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::CleanUpTinkerableObject
// Il2CppName: CleanUpTinkerableObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)()>(&MagicalActual::TinkererStation::CleanUpTinkerableObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "CleanUpTinkerableObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::TinkererStation::NKPLKKMJOLB
// Il2CppName: NKPLKKMJOLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::TinkererStation::*)(::MagicalActual::BlueprintIcon*)>(&MagicalActual::TinkererStation::NKPLKKMJOLB)> {
  static const MethodInfo* get() {
    static auto* NEOALINPDNP = &::il2cpp_utils::GetClassFromName("MagicalActual", "BlueprintIcon")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::TinkererStation*), "NKPLKKMJOLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOALINPDNP});
  }
};
