// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: IPlayerClass
#include "GlobalNamespace/IPlayerClass.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredBool.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerCharacter
  class PlayerCharacter;
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: OrbusNetManager
  class OrbusNetManager;
  // Forward declaring type: PlayerClass
  class PlayerClass;
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
}
// Forward declaring namespace: Vectrosity
namespace Vectrosity {
  // Forward declaring type: VectorLine
  class VectorLine;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: PDollarGestureRecognizer
namespace PDollarGestureRecognizer {
  // Forward declaring type: Point
  class Point;
  // Forward declaring type: Gesture
  class Gesture;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: ParticleSystem
  class ParticleSystem;
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ClickedEventArgs
  struct ClickedEventArgs;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Runemage
  class Runemage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Runemage);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Runemage*, "MagicalActual", "Runemage");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x19C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Runemage
  // [TokenAttribute] Offset: FFFFFFFF
  class Runemage : public ::UnityEngine::MonoBehaviour/*, public ::GlobalNamespace::IPlayerClass*/ {
    public:
    // Nested type: ::MagicalActual::Runemage::wandState
    struct wandState;
    // Nested type: ::MagicalActual::Runemage::orbusNetMethodIdx
    struct orbusNetMethodIdx;
    // Nested type: ::MagicalActual::Runemage::orbusIncomingMethodIdx
    struct orbusIncomingMethodIdx;
    // Nested type: ::MagicalActual::Runemage::spellIdx
    struct spellIdx;
    // Nested type: ::MagicalActual::Runemage::$$c__DisplayClass74_0
    class $$c__DisplayClass74_0;
    // Nested type: ::MagicalActual::Runemage::$$c__DisplayClass88_0
    class $$c__DisplayClass88_0;
    // Nested type: ::MagicalActual::Runemage::$$c__DisplayClass89_0
    class $$c__DisplayClass89_0;
    // Nested type: ::MagicalActual::Runemage::$$c
    class $$c;
    // Nested type: ::MagicalActual::Runemage::$$c__DisplayClass102_0
    class $$c__DisplayClass102_0;
    // Nested type: ::MagicalActual::Runemage::$$c__DisplayClass102_1
    class $$c__DisplayClass102_1;
    // Nested type: ::MagicalActual::Runemage::$$c__DisplayClass117_0
    class $$c__DisplayClass117_0;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: MagicalActual.Runemage/wandState
    // [TokenAttribute] Offset: FFFFFFFF
    struct wandState/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: wandState
      constexpr wandState(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MagicalActual.Runemage/wandState FNCIFCNLJBM
      static constexpr const int FNCIFCNLJBM = 0;
      // Get static field: static public MagicalActual.Runemage/wandState FNCIFCNLJBM
      static ::MagicalActual::Runemage::wandState _get_FNCIFCNLJBM();
      // Set static field: static public MagicalActual.Runemage/wandState FNCIFCNLJBM
      static void _set_FNCIFCNLJBM(::MagicalActual::Runemage::wandState value);
      // static field const value: static public MagicalActual.Runemage/wandState GMDPCEBCCOP
      static constexpr const int GMDPCEBCCOP = 1;
      // Get static field: static public MagicalActual.Runemage/wandState GMDPCEBCCOP
      static ::MagicalActual::Runemage::wandState _get_GMDPCEBCCOP();
      // Set static field: static public MagicalActual.Runemage/wandState GMDPCEBCCOP
      static void _set_GMDPCEBCCOP(::MagicalActual::Runemage::wandState value);
      // static field const value: static public MagicalActual.Runemage/wandState HHFOPNCDBAN
      static constexpr const int HHFOPNCDBAN = 2;
      // Get static field: static public MagicalActual.Runemage/wandState HHFOPNCDBAN
      static ::MagicalActual::Runemage::wandState _get_HHFOPNCDBAN();
      // Set static field: static public MagicalActual.Runemage/wandState HHFOPNCDBAN
      static void _set_HHFOPNCDBAN(::MagicalActual::Runemage::wandState value);
      // static field const value: static public MagicalActual.Runemage/wandState GDDPMGGPLPF
      static constexpr const int GDDPMGGPLPF = 4;
      // Get static field: static public MagicalActual.Runemage/wandState GDDPMGGPLPF
      static ::MagicalActual::Runemage::wandState _get_GDDPMGGPLPF();
      // Set static field: static public MagicalActual.Runemage/wandState GDDPMGGPLPF
      static void _set_GDDPMGGPLPF(::MagicalActual::Runemage::wandState value);
      // static field const value: static public MagicalActual.Runemage/wandState OHHMFBOMPEK
      static constexpr const int OHHMFBOMPEK = 8;
      // Get static field: static public MagicalActual.Runemage/wandState OHHMFBOMPEK
      static ::MagicalActual::Runemage::wandState _get_OHHMFBOMPEK();
      // Set static field: static public MagicalActual.Runemage/wandState OHHMFBOMPEK
      static void _set_OHHMFBOMPEK(::MagicalActual::Runemage::wandState value);
      // static field const value: static public MagicalActual.Runemage/wandState PMIOAMHGOPB
      static constexpr const int PMIOAMHGOPB = 16;
      // Get static field: static public MagicalActual.Runemage/wandState PMIOAMHGOPB
      static ::MagicalActual::Runemage::wandState _get_PMIOAMHGOPB();
      // Set static field: static public MagicalActual.Runemage/wandState PMIOAMHGOPB
      static void _set_PMIOAMHGOPB(::MagicalActual::Runemage::wandState value);
      // static field const value: static public MagicalActual.Runemage/wandState NMOKNPGCLEA
      static constexpr const int NMOKNPGCLEA = 32;
      // Get static field: static public MagicalActual.Runemage/wandState NMOKNPGCLEA
      static ::MagicalActual::Runemage::wandState _get_NMOKNPGCLEA();
      // Set static field: static public MagicalActual.Runemage/wandState NMOKNPGCLEA
      static void _set_NMOKNPGCLEA(::MagicalActual::Runemage::wandState value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // MagicalActual.Runemage/wandState
    #pragma pack(pop)
    static check_size<sizeof(Runemage::wandState), 0 + sizeof(int)> __MagicalActual_Runemage_wandStateSizeCheck;
    static_assert(sizeof(Runemage::wandState) == 0x4);
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.OrbusNetManager KPMLFHPFLBL
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::OrbusNetManager* KPMLFHPFLBL;
    // Field size check
    static_assert(sizeof(::MagicalActual::OrbusNetManager*) == 0x8);
    // private System.Boolean HNFCLAFDJBD
    // Size: 0x1
    // Offset: 0x30
    bool HNFCLAFDJBD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean HIKIBDCNDAA
    // Size: 0x1
    // Offset: 0x31
    bool HIKIBDCNDAA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HIKIBDCNDAA and: ODFJDNJPMKL
    char __padding4[0x6] = {};
    // private Vectrosity.VectorLine[] ODFJDNJPMKL
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<::Vectrosity::VectorLine*> ODFJDNJPMKL;
    // Field size check
    static_assert(sizeof(::ArrayW<::Vectrosity::VectorLine*>) == 0x8);
    // private System.Collections.Generic.List`1<PDollarGestureRecognizer.Point> JJOMPINMIBH
    // Size: 0x8
    // Offset: 0x40
    ::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Point*>* JJOMPINMIBH;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Point*>*) == 0x8);
    // private System.Collections.Generic.List`1<PDollarGestureRecognizer.Gesture> JCJMLNLHAMO
    // Size: 0x8
    // Offset: 0x48
    ::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Gesture*>* JCJMLNLHAMO;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Gesture*>*) == 0x8);
    // private System.Int32 GBAINJLBOIK
    // Size: 0x4
    // Offset: 0x50
    int GBAINJLBOIK;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single FNLBLHGMMBL
    // Size: 0x4
    // Offset: 0x54
    float FNLBLHGMMBL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single IEECKABMODP
    // Size: 0x4
    // Offset: 0x58
    float IEECKABMODP;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean LMKBPNONGCC
    // Size: 0x1
    // Offset: 0x5C
    bool LMKBPNONGCC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: LMKBPNONGCC and: emptyGO
    char __padding11[0x3] = {};
    // public UnityEngine.GameObject emptyGO
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::GameObject* emptyGO;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject wand
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::GameObject* wand;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject mageSpark
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::GameObject* mageSpark;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject duplicationPoint1
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::GameObject* duplicationPoint1;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject duplicationPoint2
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::GameObject* duplicationPoint2;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE42C8
    // private UnityEngine.GameObject <IDDLMJEGBDN>k__BackingField
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::GameObject* IDDLMJEGBDN;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject ICGNDALJKGL
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::GameObject* ICGNDALJKGL;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.Color spellLineColor
    // Size: 0x10
    // Offset: 0x98
    ::UnityEngine::Color spellLineColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public UnityEngine.GameObject vfxSupercast
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::GameObject* vfxSupercast;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxFizzle
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::GameObject* vfxFizzle;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject HDMKCGKJCLA
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::GameObject* HDMKCGKJCLA;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.ParticleSystem IKGEFIIFEAK
    // Size: 0x8
    // Offset: 0xC0
    ::UnityEngine::ParticleSystem* IKGEFIIFEAK;
    // Field size check
    static_assert(sizeof(::UnityEngine::ParticleSystem*) == 0x8);
    // private System.Boolean MELGNEMADBG
    // Size: 0x1
    // Offset: 0xC8
    bool MELGNEMADBG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GKGDNIONPEN
    // Size: 0x1
    // Offset: 0xC9
    bool GKGDNIONPEN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: GKGDNIONPEN and: PEAKPGDDEJN
    char __padding25[0x2] = {};
    // private MagicalActual.Runemage/wandState PEAKPGDDEJN
    // Size: 0x4
    // Offset: 0xCC
    ::MagicalActual::Runemage::wandState PEAKPGDDEJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::Runemage::wandState) == 0x4);
    // private System.Int32 HOCHEMNFAIA
    // Size: 0x4
    // Offset: 0xD0
    int HOCHEMNFAIA;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 BGJIKHDAJAO
    // Size: 0x4
    // Offset: 0xD4
    int BGJIKHDAJAO;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 DIFLAOFCDAG
    // Size: 0x4
    // Offset: 0xD8
    int DIFLAOFCDAG;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean JJNCILANNED
    // Size: 0x1
    // Offset: 0xDC
    bool JJNCILANNED;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: JJNCILANNED and: recordingSessionName
    char __padding30[0x3] = {};
    // public System.String recordingSessionName
    // Size: 0x8
    // Offset: 0xE0
    ::StringW recordingSessionName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.PlayerCharacter HCFELEODBLD
    // Size: 0x8
    // Offset: 0xE8
    ::MagicalActual::PlayerCharacter* HCFELEODBLD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerCharacter*) == 0x8);
    // private MagicalActual.PlayerClass FNINBDEICCD
    // Size: 0x8
    // Offset: 0xF0
    ::MagicalActual::PlayerClass* FNINBDEICCD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerClass*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE42D8
    // private MagicalActual.PlayerAvatar <PEKPJNGCADH>k__BackingField
    // Size: 0x8
    // Offset: 0xF8
    ::MagicalActual::PlayerAvatar* PEKPJNGCADH;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // private UnityEngine.GameObject CCEMBLKGKLN
    // Size: 0x8
    // Offset: 0x100
    ::UnityEngine::GameObject* CCEMBLKGKLN;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject GKJEHAKEABK
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::GameObject* GKJEHAKEABK;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean GCCMBLOGLBA
    // Size: 0x1
    // Offset: 0x110
    bool GCCMBLOGLBA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GHBBMIFHKGO
    // Size: 0x1
    // Offset: 0x111
    bool GHBBMIFHKGO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: GHBBMIFHKGO and: forceKillPersistentSpell
    char __padding38[0x2] = {};
    // public CodeStage.AntiCheat.ObscuredTypes.ObscuredBool forceKillPersistentSpell
    // Size: 0xB
    // Offset: 0x114
    ::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool forceKillPersistentSpell;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool) == 0xB);
    // Padding between fields: forceKillPersistentSpell and: persistentSpellAlreadyActive
    char __padding39[0x1] = {};
    // public CodeStage.AntiCheat.ObscuredTypes.ObscuredBool persistentSpellAlreadyActive
    // Size: 0xB
    // Offset: 0x120
    ::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool persistentSpellAlreadyActive;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool) == 0xB);
    // Padding between fields: persistentSpellAlreadyActive and: spellVfxPreparing
    char __padding40[0x5] = {};
    // public UnityEngine.GameObject[] spellVfxPreparing
    // Size: 0x8
    // Offset: 0x130
    ::ArrayW<::UnityEngine::GameObject*> spellVfxPreparing;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject[] spellVfxRays
    // Size: 0x8
    // Offset: 0x138
    ::ArrayW<::UnityEngine::GameObject*> spellVfxRays;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject vfxCastSpark
    // Size: 0x8
    // Offset: 0x140
    ::UnityEngine::GameObject* vfxCastSpark;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Int32 PCNGMJFOMNJ
    // Size: 0x4
    // Offset: 0x148
    int PCNGMJFOMNJ;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: PCNGMJFOMNJ and: EMPAGHKLJEK
    char __padding44[0x4] = {};
    // private UnityEngine.GameObject EMPAGHKLJEK
    // Size: 0x8
    // Offset: 0x150
    ::UnityEngine::GameObject* EMPAGHKLJEK;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject JOFBIKNNINM
    // Size: 0x8
    // Offset: 0x158
    ::UnityEngine::GameObject* JOFBIKNNINM;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject DDDMBPHGFMG
    // Size: 0x8
    // Offset: 0x160
    ::UnityEngine::GameObject* DDDMBPHGFMG;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject CCJJKKAGECJ
    // Size: 0x8
    // Offset: 0x168
    ::UnityEngine::GameObject* CCJJKKAGECJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single OKCNACNHNKJ
    // Size: 0x4
    // Offset: 0x170
    float OKCNACNHNKJ;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single LHMEIBFFNMK
    // Size: 0x4
    // Offset: 0x174
    float LHMEIBFFNMK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 JHOJNPHBIGJ
    // Size: 0x4
    // Offset: 0x178
    int JHOJNPHBIGJ;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single EKLFFHLHKEA
    // Size: 0x4
    // Offset: 0x17C
    float EKLFFHLHKEA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single FEFADFECKJM
    // Size: 0x4
    // Offset: 0x180
    float FEFADFECKJM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single GFGLHKABFII
    // Size: 0x4
    // Offset: 0x184
    float GFGLHKABFII;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Byte LDPHPLHJMIC
    // Size: 0x1
    // Offset: 0x188
    uint8_t LDPHPLHJMIC;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Boolean NMCNFODEAIC
    // Size: 0x1
    // Offset: 0x189
    bool NMCNFODEAIC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Byte FFCBGJLHDBF
    // Size: 0x1
    // Offset: 0x18A
    uint8_t FFCBGJLHDBF;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte LKMMPOGJEMI
    // Size: 0x1
    // Offset: 0x18B
    uint8_t LKMMPOGJEMI;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Boolean FPBDCAGBGCH
    // Size: 0x1
    // Offset: 0x18C
    bool FPBDCAGBGCH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean FDEKHJIDAEP
    // Size: 0x1
    // Offset: 0x18D
    bool FDEKHJIDAEP;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: FDEKHJIDAEP and: HJPHJACOKID
    char __padding60[0x2] = {};
    // private UnityEngine.Vector3 HJPHJACOKID
    // Size: 0xC
    // Offset: 0x190
    ::UnityEngine::Vector3 HJPHJACOKID;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IPlayerClass
    operator ::GlobalNamespace::IPlayerClass() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IPlayerClass*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private MagicalActual.OrbusNetManager KPMLFHPFLBL
    [[deprecated("Use field access instead!")]] ::MagicalActual::OrbusNetManager*& dyn_KPMLFHPFLBL();
    // Get instance field reference: private System.Boolean HNFCLAFDJBD
    [[deprecated("Use field access instead!")]] bool& dyn_HNFCLAFDJBD();
    // Get instance field reference: private System.Boolean HIKIBDCNDAA
    [[deprecated("Use field access instead!")]] bool& dyn_HIKIBDCNDAA();
    // Get instance field reference: private Vectrosity.VectorLine[] ODFJDNJPMKL
    [[deprecated("Use field access instead!")]] ::ArrayW<::Vectrosity::VectorLine*>& dyn_ODFJDNJPMKL();
    // Get instance field reference: private System.Collections.Generic.List`1<PDollarGestureRecognizer.Point> JJOMPINMIBH
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Point*>*& dyn_JJOMPINMIBH();
    // Get instance field reference: private System.Collections.Generic.List`1<PDollarGestureRecognizer.Gesture> JCJMLNLHAMO
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PDollarGestureRecognizer::Gesture*>*& dyn_JCJMLNLHAMO();
    // Get instance field reference: private System.Int32 GBAINJLBOIK
    [[deprecated("Use field access instead!")]] int& dyn_GBAINJLBOIK();
    // Get instance field reference: private System.Single FNLBLHGMMBL
    [[deprecated("Use field access instead!")]] float& dyn_FNLBLHGMMBL();
    // Get instance field reference: private System.Single IEECKABMODP
    [[deprecated("Use field access instead!")]] float& dyn_IEECKABMODP();
    // Get instance field reference: private System.Boolean LMKBPNONGCC
    [[deprecated("Use field access instead!")]] bool& dyn_LMKBPNONGCC();
    // Get instance field reference: public UnityEngine.GameObject emptyGO
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_emptyGO();
    // Get instance field reference: public UnityEngine.GameObject wand
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_wand();
    // Get instance field reference: public UnityEngine.GameObject mageSpark
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_mageSpark();
    // Get instance field reference: public UnityEngine.GameObject duplicationPoint1
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_duplicationPoint1();
    // Get instance field reference: public UnityEngine.GameObject duplicationPoint2
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_duplicationPoint2();
    // Get instance field reference: private UnityEngine.GameObject <IDDLMJEGBDN>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_$IDDLMJEGBDN$k__BackingField();
    // Get instance field reference: private UnityEngine.GameObject ICGNDALJKGL
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ICGNDALJKGL();
    // Get instance field reference: public UnityEngine.Color spellLineColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_spellLineColor();
    // Get instance field reference: public UnityEngine.GameObject vfxSupercast
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSupercast();
    // Get instance field reference: public UnityEngine.GameObject vfxFizzle
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxFizzle();
    // Get instance field reference: private UnityEngine.GameObject HDMKCGKJCLA
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_HDMKCGKJCLA();
    // Get instance field reference: private UnityEngine.ParticleSystem IKGEFIIFEAK
    [[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& dyn_IKGEFIIFEAK();
    // Get instance field reference: private System.Boolean MELGNEMADBG
    [[deprecated("Use field access instead!")]] bool& dyn_MELGNEMADBG();
    // Get instance field reference: private System.Boolean GKGDNIONPEN
    [[deprecated("Use field access instead!")]] bool& dyn_GKGDNIONPEN();
    // Get instance field reference: private MagicalActual.Runemage/wandState PEAKPGDDEJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::Runemage::wandState& dyn_PEAKPGDDEJN();
    // Get instance field reference: private System.Int32 HOCHEMNFAIA
    [[deprecated("Use field access instead!")]] int& dyn_HOCHEMNFAIA();
    // Get instance field reference: private System.Int32 BGJIKHDAJAO
    [[deprecated("Use field access instead!")]] int& dyn_BGJIKHDAJAO();
    // Get instance field reference: private System.Int32 DIFLAOFCDAG
    [[deprecated("Use field access instead!")]] int& dyn_DIFLAOFCDAG();
    // Get instance field reference: private System.Boolean JJNCILANNED
    [[deprecated("Use field access instead!")]] bool& dyn_JJNCILANNED();
    // Get instance field reference: public System.String recordingSessionName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_recordingSessionName();
    // Get instance field reference: private MagicalActual.PlayerCharacter HCFELEODBLD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerCharacter*& dyn_HCFELEODBLD();
    // Get instance field reference: private MagicalActual.PlayerClass FNINBDEICCD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerClass*& dyn_FNINBDEICCD();
    // Get instance field reference: private MagicalActual.PlayerAvatar <PEKPJNGCADH>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_$PEKPJNGCADH$k__BackingField();
    // Get instance field reference: private UnityEngine.GameObject CCEMBLKGKLN
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_CCEMBLKGKLN();
    // Get instance field reference: private UnityEngine.GameObject GKJEHAKEABK
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_GKJEHAKEABK();
    // Get instance field reference: private System.Boolean GCCMBLOGLBA
    [[deprecated("Use field access instead!")]] bool& dyn_GCCMBLOGLBA();
    // Get instance field reference: private System.Boolean GHBBMIFHKGO
    [[deprecated("Use field access instead!")]] bool& dyn_GHBBMIFHKGO();
    // Get instance field reference: public CodeStage.AntiCheat.ObscuredTypes.ObscuredBool forceKillPersistentSpell
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool& dyn_forceKillPersistentSpell();
    // Get instance field reference: public CodeStage.AntiCheat.ObscuredTypes.ObscuredBool persistentSpellAlreadyActive
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool& dyn_persistentSpellAlreadyActive();
    // Get instance field reference: public UnityEngine.GameObject[] spellVfxPreparing
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_spellVfxPreparing();
    // Get instance field reference: public UnityEngine.GameObject[] spellVfxRays
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_spellVfxRays();
    // Get instance field reference: public UnityEngine.GameObject vfxCastSpark
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxCastSpark();
    // Get instance field reference: private System.Int32 PCNGMJFOMNJ
    [[deprecated("Use field access instead!")]] int& dyn_PCNGMJFOMNJ();
    // Get instance field reference: private UnityEngine.GameObject EMPAGHKLJEK
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_EMPAGHKLJEK();
    // Get instance field reference: private UnityEngine.GameObject JOFBIKNNINM
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_JOFBIKNNINM();
    // Get instance field reference: private UnityEngine.GameObject DDDMBPHGFMG
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_DDDMBPHGFMG();
    // Get instance field reference: private UnityEngine.GameObject CCJJKKAGECJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_CCJJKKAGECJ();
    // Get instance field reference: private System.Single OKCNACNHNKJ
    [[deprecated("Use field access instead!")]] float& dyn_OKCNACNHNKJ();
    // Get instance field reference: private System.Single LHMEIBFFNMK
    [[deprecated("Use field access instead!")]] float& dyn_LHMEIBFFNMK();
    // Get instance field reference: private System.Int32 JHOJNPHBIGJ
    [[deprecated("Use field access instead!")]] int& dyn_JHOJNPHBIGJ();
    // Get instance field reference: private System.Single EKLFFHLHKEA
    [[deprecated("Use field access instead!")]] float& dyn_EKLFFHLHKEA();
    // Get instance field reference: private System.Single FEFADFECKJM
    [[deprecated("Use field access instead!")]] float& dyn_FEFADFECKJM();
    // Get instance field reference: private System.Single GFGLHKABFII
    [[deprecated("Use field access instead!")]] float& dyn_GFGLHKABFII();
    // Get instance field reference: private System.Byte LDPHPLHJMIC
    [[deprecated("Use field access instead!")]] uint8_t& dyn_LDPHPLHJMIC();
    // Get instance field reference: private System.Boolean NMCNFODEAIC
    [[deprecated("Use field access instead!")]] bool& dyn_NMCNFODEAIC();
    // Get instance field reference: private System.Byte FFCBGJLHDBF
    [[deprecated("Use field access instead!")]] uint8_t& dyn_FFCBGJLHDBF();
    // Get instance field reference: private System.Byte LKMMPOGJEMI
    [[deprecated("Use field access instead!")]] uint8_t& dyn_LKMMPOGJEMI();
    // Get instance field reference: private System.Boolean FPBDCAGBGCH
    [[deprecated("Use field access instead!")]] bool& dyn_FPBDCAGBGCH();
    // Get instance field reference: private System.Boolean FDEKHJIDAEP
    [[deprecated("Use field access instead!")]] bool& dyn_FDEKHJIDAEP();
    // Get instance field reference: private UnityEngine.Vector3 HJPHJACOKID
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_HJPHJACOKID();
    // private System.Void HPOPJEPGLBM()
    // Offset: 0x1302500
    void HPOPJEPGLBM();
    // private System.Void LGPGIPOPNEN(UnityEngine.GameObject MMMEIONJJFJ)
    // Offset: 0x1302ADC
    void LGPGIPOPNEN(::UnityEngine::GameObject* MMMEIONJJFJ);
    // private System.Void JDALGMAAEIK()
    // Offset: 0x1302AE4
    void JDALGMAAEIK();
    // private System.Void CGIANJAAAJB()
    // Offset: 0x1302D18
    void CGIANJAAAJB();
    // private System.Void KDPDEAMBKDE(System.Int32 HGIGDEMGOOD)
    // Offset: 0x1302E84
    void KDPDEAMBKDE(int HGIGDEMGOOD);
    // private System.Void DisablePrimaryWeapon()
    // Offset: 0x13034E4
    void DisablePrimaryWeapon();
    // private System.Void BHBFEEJHKIH()
    // Offset: 0x13036B4
    void BHBFEEJHKIH();
    // private System.Void MLFAOKANEEP()
    // Offset: 0x13043EC
    void MLFAOKANEEP();
    // private System.Void ENIGECPOHND(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x13044A4
    void ENIGECPOHND(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void EGOFLOGAAFM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x130499C
    void EGOFLOGAAFM(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void FOGKLCAMGKD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1304A4C
    void FOGKLCAMGKD(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void IHIICHFFPLD(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x1304E74
    void IHIICHFFPLD(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void GJKDPNMCKAA()
    // Offset: 0x1305098
    void GJKDPNMCKAA();
    // private System.Void FixedUpdate()
    // Offset: 0x13051AC
    void FixedUpdate();
    // private System.Void CALPPEBHHCN(System.Object HFAIGGNKONJ)
    // Offset: 0x130593C
    void CALPPEBHHCN(::Il2CppObject* HFAIGGNKONJ);
    // private System.Void ANKGOPDMBMJ()
    // Offset: 0x1303EC0
    void ANKGOPDMBMJ();
    // private System.Void KPHNOAPCPMN(System.Object HFAIGGNKONJ)
    // Offset: 0x1305CA4
    void KPHNOAPCPMN(::Il2CppObject* HFAIGGNKONJ);
    // private System.Void PEDACBNOGJL()
    // Offset: 0x1305DE4
    void PEDACBNOGJL();
    // public UnityEngine.GameObject FBDIOGGEHGC()
    // Offset: 0x1305F00
    ::UnityEngine::GameObject* FBDIOGGEHGC();
    // private System.Void EOLPPEPPGJJ()
    // Offset: 0x1304804
    void EOLPPEPPGJJ();
    // private System.Void EHOILODKKOD()
    // Offset: 0x1305FC0
    void EHOILODKKOD();
    // private System.Void EnablePrimaryWeapon()
    // Offset: 0x13061A4
    void EnablePrimaryWeapon();
    // private System.Void CLGGFHBEHFO()
    // Offset: 0x13032E4
    void CLGGFHBEHFO();
    // private System.Void DisableSecondaryWeapon()
    // Offset: 0x1306804
    void DisableSecondaryWeapon();
    // private System.Void MOILOOONIMG()
    // Offset: 0x13049AC
    void MOILOOONIMG();
    // private System.Void MHKNFJJIJDO(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x13068D0
    void MHKNFJJIJDO(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void FHMPONOOAGD(UnityEngine.GameObject MMMEIONJJFJ)
    // Offset: 0x1306A9C
    void FHMPONOOAGD(::UnityEngine::GameObject* MMMEIONJJFJ);
    // private System.Void CEFIHDGLCAO(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x1306AA4
    void CEFIHDGLCAO(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void MKINHDEEOCP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1306D9C
    void MKINHDEEOCP(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void PMEHEMPNPIH()
    // Offset: 0x1306E44
    void PMEHEMPNPIH();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1306E48
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void LGGOLJAHHBB(MagicalActual.PlayerAvatar MMMEIONJJFJ)
    // Offset: 0x130737C
    void LGGOLJAHHBB(::MagicalActual::PlayerAvatar* MMMEIONJJFJ);
    // public UnityEngine.Vector3 getRelativePosition(UnityEngine.Transform EIJFPEAIJGM, UnityEngine.Vector3 NHFBFBMNPFC)
    // Offset: 0x1307384
    ::UnityEngine::Vector3 getRelativePosition(::UnityEngine::Transform* EIJFPEAIJGM, ::UnityEngine::Vector3 NHFBFBMNPFC);
    // private System.Void AADBALKKOEA()
    // Offset: 0x1306C68
    void AADBALKKOEA();
    // public System.Void AvatarEquipmentChanged()
    // Offset: 0x1307568
    void AvatarEquipmentChanged();
    // private System.Void GFDEINCDDPJ(System.Byte JDELICGENAH)
    // Offset: 0x13059B0
    void GFDEINCDDPJ(uint8_t JDELICGENAH);
    // public UnityEngine.GameObject get_wandTip()
    // Offset: 0x13034DC
    ::UnityEngine::GameObject* get_wandTip();
    // public UnityEngine.GameObject EGPFPCAPNCN()
    // Offset: 0x13077E4
    ::UnityEngine::GameObject* EGPFPCAPNCN();
    // public UnityEngine.GameObject FLLFBCNCKBA()
    // Offset: 0x1307954
    ::UnityEngine::GameObject* FLLFBCNCKBA();
    // private System.Void NFHKNAONEGM(System.Boolean BFIPCHNFAJI)
    // Offset: 0x1302BF8
    void NFHKNAONEGM(bool BFIPCHNFAJI);
    // private System.Void KAFEBJFJPDF(System.Byte GKCABMAFPBH)
    // Offset: 0x13035BC
    void KAFEBJFJPDF(uint8_t GKCABMAFPBH);
    // public System.Void ToggleAdjustWeapon()
    // Offset: 0x1307ACC
    void ToggleAdjustWeapon();
    // private System.Void Awake()
    // Offset: 0x1307FFC
    void Awake();
    // private System.Void HOHIHJMILHJ()
    // Offset: 0x130502C
    void HOHIHJMILHJ();
    // public UnityEngine.GameObject MKDLHJLAKLK()
    // Offset: 0x130837C
    ::UnityEngine::GameObject* MKDLHJLAKLK();
    // private System.Void MOGJCJHLFBF(System.Int32 HGIGDEMGOOD)
    // Offset: 0x13084F4
    void MOGJCJHLFBF(int HGIGDEMGOOD);
    // public System.Void IEMCKKHHJDH(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13088B0
    void IEMCKKHHJDH(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void UpdateClassBar()
    // Offset: 0x13088E8
    void UpdateClassBar();
    // private System.Void NIPLADHOCOG(System.Object HFAIGGNKONJ)
    // Offset: 0x1308AA0
    void NIPLADHOCOG(::Il2CppObject* HFAIGGNKONJ);
    // private System.Void NGKONJGKMBE()
    // Offset: 0x130540C
    void NGKONJGKMBE();
    // private System.Void GDAEFPAMNDO()
    // Offset: 0x1303244
    void GDAEFPAMNDO();
    // public System.Void LNAEFCNGMLK()
    // Offset: 0x1308B0C
    void LNAEFCNGMLK();
    // public System.Void FHAGLLNOJGK()
    // Offset: 0x1308B10
    void FHAGLLNOJGK();
    // private System.Void BCEJOCBPNBO(System.Object HFAIGGNKONJ)
    // Offset: 0x1308E8C
    void BCEJOCBPNBO(::Il2CppObject* HFAIGGNKONJ);
    // private System.Void IEAKMOHIBDD()
    // Offset: 0x1308F7C
    void IEAKMOHIBDD();
    // private System.Void OnDisable()
    // Offset: 0x1309094
    void OnDisable();
    // private System.Boolean CIBDJNJGODA()
    // Offset: 0x13047D4
    bool CIBDJNJGODA();
    // private System.Void GOOELHOGPNO(System.Object HFAIGGNKONJ)
    // Offset: 0x1309124
    void GOOELHOGPNO(::Il2CppObject* HFAIGGNKONJ);
    // private System.Void COCEINKKGPB(MagicalActual.PlayerAvatar MMMEIONJJFJ)
    // Offset: 0x130946C
    void COCEINKKGPB(::MagicalActual::PlayerAvatar* MMMEIONJJFJ);
    // public UnityEngine.GameObject GetWeaponSkin()
    // Offset: 0x1307E7C
    ::UnityEngine::GameObject* GetWeaponSkin();
    // private System.Void SwitchWeaponHand(System.Byte DBJMBLGLHIH)
    // Offset: 0x1309474
    void SwitchWeaponHand(uint8_t DBJMBLGLHIH);
    // public UnityEngine.Vector3 OHAEGONBFPG(UnityEngine.Transform EIJFPEAIJGM, UnityEngine.Vector3 NHFBFBMNPFC)
    // Offset: 0x1309664
    ::UnityEngine::Vector3 OHAEGONBFPG(::UnityEngine::Transform* EIJFPEAIJGM, ::UnityEngine::Vector3 NHFBFBMNPFC);
    // private System.Void EnableSecondaryWeapon()
    // Offset: 0x1309848
    void EnableSecondaryWeapon();
    // private System.Void PDIFBHHLCFI(System.Byte JDELICGENAH)
    // Offset: 0x1309198
    void PDIFBHHLCFI(uint8_t JDELICGENAH);
    // private System.Void DHCCHMKIDMJ(System.Object HFAIGGNKONJ)
    // Offset: 0x1309918
    void DHCCHMKIDMJ(::Il2CppObject* HFAIGGNKONJ);
    // private System.Void GDDLLMAADOL(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x130999C
    void GDDLLMAADOL(::System::Collections::ArrayList* HPEANAHIBAH);
    // public UnityEngine.Vector3 followDirection()
    // Offset: 0x130401C
    ::UnityEngine::Vector3 followDirection();
    // private System.Void HBOMBLNMJFD()
    // Offset: 0x13060FC
    void HBOMBLNMJFD();
    // public UnityEngine.Vector3 KKINDHHOJDP(UnityEngine.Transform EIJFPEAIJGM, UnityEngine.Vector3 NHFBFBMNPFC)
    // Offset: 0x1309B68
    ::UnityEngine::Vector3 KKINDHHOJDP(::UnityEngine::Transform* EIJFPEAIJGM, ::UnityEngine::Vector3 NHFBFBMNPFC);
    // public UnityEngine.GameObject AOMCFHCDKDN()
    // Offset: 0x1309D4C
    ::UnityEngine::GameObject* AOMCFHCDKDN();
    // public System.Void OnDestroy()
    // Offset: 0x1309EBC
    void OnDestroy();
    // private System.Void PMDIFMIMMON()
    // Offset: 0x130A0BC
    void PMDIFMIMMON();
    // public MagicalActual.PlayerAvatar get_myAvatar()
    // Offset: 0x1304AF4
    ::MagicalActual::PlayerAvatar* get_myAvatar();
    // private System.Void NAKDNGHGHAL()
    // Offset: 0x130A1D8
    void NAKDNGHGHAL();
    // private System.Void HAKCPPIJNBG(System.Int32 HGIGDEMGOOD)
    // Offset: 0x130A698
    void HAKCPPIJNBG(int HGIGDEMGOOD);
    // public System.Void WeaponAdjusted()
    // Offset: 0x130AA64
    void WeaponAdjusted();
    // public System.Void DLSDFPASFD(System.UInt16 FNOCLFOKDFG, UnityEngine.Vector3 DLLPCCKKJGD, System.Int32 ENMLJMBHBHE)
    // Offset: 0x130AA68
    void DLSDFPASFD(uint16_t FNOCLFOKDFG, ::UnityEngine::Vector3 DLLPCCKKJGD, int ENMLJMBHBHE);
    // private System.Void GBCHLGNALEH(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x130AB90
    void GBCHLGNALEH(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void GHGBCPHPMAA()
    // Offset: 0x1305F08
    void GHGBCPHPMAA();
    // private System.Void Start()
    // Offset: 0x130AD54
    void Start();
    // public System.Void ClassDisabled()
    // Offset: 0x130B0EC
    void ClassDisabled();
    // public UnityEngine.GameObject PKGFLONALEH()
    // Offset: 0x130B0F0
    ::UnityEngine::GameObject* PKGFLONALEH();
    // public System.Void .ctor()
    // Offset: 0x130B0F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Runemage* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Runemage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Runemage*, creationType>()));
    }
    // private System.Void MCDMBOIBABN(System.Object HFAIGGNKONJ)
    // Offset: 0x130B278
    void MCDMBOIBABN(::Il2CppObject* HFAIGGNKONJ);
    // private System.Void AGAGKCGPGIK()
    // Offset: 0x13029D4
    void AGAGKCGPGIK();
    // private System.Boolean JNKHKJGALLM()
    // Offset: 0x130B2E8
    bool JNKHKJGALLM();
    // public System.Void ClassEnabled()
    // Offset: 0x130B310
    void ClassEnabled();
    // public UnityEngine.Vector3 DFJELDBCDHO()
    // Offset: 0x1304204
    ::UnityEngine::Vector3 DFJELDBCDHO();
    // private System.Void MDMGBILHGLA(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x130B464
    void MDMGBILHGLA(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void BDGEOOANFAA(UnityEngine.Vector3 NHFBFBMNPFC, UnityEngine.Vector3 NKJBILNNJNP, System.Int32 HGIGDEMGOOD, System.Int32 ENMLJMBHBHE)
    // Offset: 0x130640C
    void BDGEOOANFAA(::UnityEngine::Vector3 NHFBFBMNPFC, ::UnityEngine::Vector3 NKJBILNNJNP, int HGIGDEMGOOD, int ENMLJMBHBHE);
    // private System.Void PFEPBFMJBEN()
    // Offset: 0x130B61C
    void PFEPBFMJBEN();
    // private System.Void AIFOHPNAAPF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x130B6BC
    void AIFOHPNAAPF(::System::Collections::ArrayList* HPEANAHIBAH);
    // public UnityEngine.GameObject GetWeaponObject()
    // Offset: 0x1307FF4
    ::UnityEngine::GameObject* GetWeaponObject();
    // private System.Void LLDHBKEEJDO(System.Object HFAIGGNKONJ)
    // Offset: 0x130B6CC
    void LLDHBKEEJDO(::Il2CppObject* HFAIGGNKONJ);
    // public System.Void orbusNetCleanup(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x130B73C
    void orbusNetCleanup(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void DDLNCFDNKEE()
    // Offset: 0x130B774
    void DDLNCFDNKEE();
    // public System.Void CastSpark()
    // Offset: 0x1304AFC
    void CastSpark();
    // private System.Void JCJCMKPOAKK()
    // Offset: 0x130B844
    void JCJCMKPOAKK();
    // public System.Void BBJGCNABFCG()
    // Offset: 0x130BBBC
    void BBJGCNABFCG();
    // private System.Void LDLFJMKKODH()
    // Offset: 0x1303968
    void LDLFJMKKODH();
    // private System.Void COKBPJNGFPL(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x130BDBC
    void COKBPJNGFPL(::System::Collections::ArrayList* HPEANAHIBAH);
  }; // MagicalActual.Runemage
  #pragma pack(pop)
  static check_size<sizeof(Runemage), 400 + sizeof(::UnityEngine::Vector3)> __MagicalActual_RunemageSizeCheck;
  static_assert(sizeof(Runemage) == 0x19C);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Runemage::wandState, "MagicalActual", "Runemage/wandState");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Runemage::HPOPJEPGLBM
// Il2CppName: HPOPJEPGLBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::HPOPJEPGLBM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "HPOPJEPGLBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::LGPGIPOPNEN
// Il2CppName: LGPGIPOPNEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::UnityEngine::GameObject*)>(&MagicalActual::Runemage::LGPGIPOPNEN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "LGPGIPOPNEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::JDALGMAAEIK
// Il2CppName: JDALGMAAEIK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::JDALGMAAEIK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "JDALGMAAEIK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::CGIANJAAAJB
// Il2CppName: CGIANJAAAJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::CGIANJAAAJB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "CGIANJAAAJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::KDPDEAMBKDE
// Il2CppName: KDPDEAMBKDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(int)>(&MagicalActual::Runemage::KDPDEAMBKDE)> {
  static const MethodInfo* get() {
    static auto* HGIGDEMGOOD = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "KDPDEAMBKDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HGIGDEMGOOD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::DisablePrimaryWeapon
// Il2CppName: DisablePrimaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::DisablePrimaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "DisablePrimaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::BHBFEEJHKIH
// Il2CppName: BHBFEEJHKIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::BHBFEEJHKIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "BHBFEEJHKIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::MLFAOKANEEP
// Il2CppName: MLFAOKANEEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::MLFAOKANEEP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "MLFAOKANEEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::ENIGECPOHND
// Il2CppName: ENIGECPOHND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Runemage::ENIGECPOHND)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "ENIGECPOHND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::EGOFLOGAAFM
// Il2CppName: EGOFLOGAAFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::System::Collections::ArrayList*)>(&MagicalActual::Runemage::EGOFLOGAAFM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "EGOFLOGAAFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::FOGKLCAMGKD
// Il2CppName: FOGKLCAMGKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::System::Collections::ArrayList*)>(&MagicalActual::Runemage::FOGKLCAMGKD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "FOGKLCAMGKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::IHIICHFFPLD
// Il2CppName: IHIICHFFPLD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Runemage::IHIICHFFPLD)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "IHIICHFFPLD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::GJKDPNMCKAA
// Il2CppName: GJKDPNMCKAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::GJKDPNMCKAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "GJKDPNMCKAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::CALPPEBHHCN
// Il2CppName: CALPPEBHHCN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*)>(&MagicalActual::Runemage::CALPPEBHHCN)> {
  static const MethodInfo* get() {
    static auto* HFAIGGNKONJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "CALPPEBHHCN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HFAIGGNKONJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::ANKGOPDMBMJ
// Il2CppName: ANKGOPDMBMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::ANKGOPDMBMJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "ANKGOPDMBMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::KPHNOAPCPMN
// Il2CppName: KPHNOAPCPMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*)>(&MagicalActual::Runemage::KPHNOAPCPMN)> {
  static const MethodInfo* get() {
    static auto* HFAIGGNKONJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "KPHNOAPCPMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HFAIGGNKONJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::PEDACBNOGJL
// Il2CppName: PEDACBNOGJL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::PEDACBNOGJL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "PEDACBNOGJL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::FBDIOGGEHGC
// Il2CppName: FBDIOGGEHGC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::FBDIOGGEHGC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "FBDIOGGEHGC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::EOLPPEPPGJJ
// Il2CppName: EOLPPEPPGJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::EOLPPEPPGJJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "EOLPPEPPGJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::EHOILODKKOD
// Il2CppName: EHOILODKKOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::EHOILODKKOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "EHOILODKKOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::EnablePrimaryWeapon
// Il2CppName: EnablePrimaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::EnablePrimaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "EnablePrimaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::CLGGFHBEHFO
// Il2CppName: CLGGFHBEHFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::CLGGFHBEHFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "CLGGFHBEHFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::DisableSecondaryWeapon
// Il2CppName: DisableSecondaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::DisableSecondaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "DisableSecondaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::MOILOOONIMG
// Il2CppName: MOILOOONIMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::MOILOOONIMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "MOILOOONIMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::MHKNFJJIJDO
// Il2CppName: MHKNFJJIJDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::System::Collections::ArrayList*)>(&MagicalActual::Runemage::MHKNFJJIJDO)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "MHKNFJJIJDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::FHMPONOOAGD
// Il2CppName: FHMPONOOAGD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::UnityEngine::GameObject*)>(&MagicalActual::Runemage::FHMPONOOAGD)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "FHMPONOOAGD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::CEFIHDGLCAO
// Il2CppName: CEFIHDGLCAO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Runemage::CEFIHDGLCAO)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "CEFIHDGLCAO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::MKINHDEEOCP
// Il2CppName: MKINHDEEOCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::System::Collections::ArrayList*)>(&MagicalActual::Runemage::MKINHDEEOCP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "MKINHDEEOCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::PMEHEMPNPIH
// Il2CppName: PMEHEMPNPIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::PMEHEMPNPIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "PMEHEMPNPIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Runemage::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::LGGOLJAHHBB
// Il2CppName: LGGOLJAHHBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::Runemage::LGGOLJAHHBB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "LGGOLJAHHBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::getRelativePosition
// Il2CppName: getRelativePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::Runemage::*)(::UnityEngine::Transform*, ::UnityEngine::Vector3)>(&MagicalActual::Runemage::getRelativePosition)> {
  static const MethodInfo* get() {
    static auto* EIJFPEAIJGM = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "getRelativePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EIJFPEAIJGM, NHFBFBMNPFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::AADBALKKOEA
// Il2CppName: AADBALKKOEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::AADBALKKOEA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "AADBALKKOEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::AvatarEquipmentChanged
// Il2CppName: AvatarEquipmentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::AvatarEquipmentChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "AvatarEquipmentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::GFDEINCDDPJ
// Il2CppName: GFDEINCDDPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(uint8_t)>(&MagicalActual::Runemage::GFDEINCDDPJ)> {
  static const MethodInfo* get() {
    static auto* JDELICGENAH = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "GFDEINCDDPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JDELICGENAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::get_wandTip
// Il2CppName: get_wandTip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::get_wandTip)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "get_wandTip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::EGPFPCAPNCN
// Il2CppName: EGPFPCAPNCN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::EGPFPCAPNCN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "EGPFPCAPNCN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::FLLFBCNCKBA
// Il2CppName: FLLFBCNCKBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::FLLFBCNCKBA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "FLLFBCNCKBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::NFHKNAONEGM
// Il2CppName: NFHKNAONEGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(bool)>(&MagicalActual::Runemage::NFHKNAONEGM)> {
  static const MethodInfo* get() {
    static auto* BFIPCHNFAJI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "NFHKNAONEGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BFIPCHNFAJI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::KAFEBJFJPDF
// Il2CppName: KAFEBJFJPDF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(uint8_t)>(&MagicalActual::Runemage::KAFEBJFJPDF)> {
  static const MethodInfo* get() {
    static auto* GKCABMAFPBH = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "KAFEBJFJPDF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GKCABMAFPBH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::ToggleAdjustWeapon
// Il2CppName: ToggleAdjustWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::ToggleAdjustWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "ToggleAdjustWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::HOHIHJMILHJ
// Il2CppName: HOHIHJMILHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::HOHIHJMILHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "HOHIHJMILHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::MKDLHJLAKLK
// Il2CppName: MKDLHJLAKLK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::MKDLHJLAKLK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "MKDLHJLAKLK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::MOGJCJHLFBF
// Il2CppName: MOGJCJHLFBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(int)>(&MagicalActual::Runemage::MOGJCJHLFBF)> {
  static const MethodInfo* get() {
    static auto* HGIGDEMGOOD = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "MOGJCJHLFBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HGIGDEMGOOD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::IEMCKKHHJDH
// Il2CppName: IEMCKKHHJDH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Runemage::IEMCKKHHJDH)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "IEMCKKHHJDH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::UpdateClassBar
// Il2CppName: UpdateClassBar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::UpdateClassBar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "UpdateClassBar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::NIPLADHOCOG
// Il2CppName: NIPLADHOCOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*)>(&MagicalActual::Runemage::NIPLADHOCOG)> {
  static const MethodInfo* get() {
    static auto* HFAIGGNKONJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "NIPLADHOCOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HFAIGGNKONJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::NGKONJGKMBE
// Il2CppName: NGKONJGKMBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::NGKONJGKMBE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "NGKONJGKMBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::GDAEFPAMNDO
// Il2CppName: GDAEFPAMNDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::GDAEFPAMNDO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "GDAEFPAMNDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::LNAEFCNGMLK
// Il2CppName: LNAEFCNGMLK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::LNAEFCNGMLK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "LNAEFCNGMLK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::FHAGLLNOJGK
// Il2CppName: FHAGLLNOJGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::FHAGLLNOJGK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "FHAGLLNOJGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::BCEJOCBPNBO
// Il2CppName: BCEJOCBPNBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*)>(&MagicalActual::Runemage::BCEJOCBPNBO)> {
  static const MethodInfo* get() {
    static auto* HFAIGGNKONJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "BCEJOCBPNBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HFAIGGNKONJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::IEAKMOHIBDD
// Il2CppName: IEAKMOHIBDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::IEAKMOHIBDD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "IEAKMOHIBDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::CIBDJNJGODA
// Il2CppName: CIBDJNJGODA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::CIBDJNJGODA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "CIBDJNJGODA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::GOOELHOGPNO
// Il2CppName: GOOELHOGPNO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*)>(&MagicalActual::Runemage::GOOELHOGPNO)> {
  static const MethodInfo* get() {
    static auto* HFAIGGNKONJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "GOOELHOGPNO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HFAIGGNKONJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::COCEINKKGPB
// Il2CppName: COCEINKKGPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::MagicalActual::PlayerAvatar*)>(&MagicalActual::Runemage::COCEINKKGPB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerAvatar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "COCEINKKGPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::GetWeaponSkin
// Il2CppName: GetWeaponSkin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::GetWeaponSkin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "GetWeaponSkin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::SwitchWeaponHand
// Il2CppName: SwitchWeaponHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(uint8_t)>(&MagicalActual::Runemage::SwitchWeaponHand)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "SwitchWeaponHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::OHAEGONBFPG
// Il2CppName: OHAEGONBFPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::Runemage::*)(::UnityEngine::Transform*, ::UnityEngine::Vector3)>(&MagicalActual::Runemage::OHAEGONBFPG)> {
  static const MethodInfo* get() {
    static auto* EIJFPEAIJGM = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "OHAEGONBFPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EIJFPEAIJGM, NHFBFBMNPFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::EnableSecondaryWeapon
// Il2CppName: EnableSecondaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::EnableSecondaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "EnableSecondaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::PDIFBHHLCFI
// Il2CppName: PDIFBHHLCFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(uint8_t)>(&MagicalActual::Runemage::PDIFBHHLCFI)> {
  static const MethodInfo* get() {
    static auto* JDELICGENAH = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "PDIFBHHLCFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JDELICGENAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::DHCCHMKIDMJ
// Il2CppName: DHCCHMKIDMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*)>(&MagicalActual::Runemage::DHCCHMKIDMJ)> {
  static const MethodInfo* get() {
    static auto* HFAIGGNKONJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "DHCCHMKIDMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HFAIGGNKONJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::GDDLLMAADOL
// Il2CppName: GDDLLMAADOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::System::Collections::ArrayList*)>(&MagicalActual::Runemage::GDDLLMAADOL)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "GDDLLMAADOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::followDirection
// Il2CppName: followDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::followDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "followDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::HBOMBLNMJFD
// Il2CppName: HBOMBLNMJFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::HBOMBLNMJFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "HBOMBLNMJFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::KKINDHHOJDP
// Il2CppName: KKINDHHOJDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::Runemage::*)(::UnityEngine::Transform*, ::UnityEngine::Vector3)>(&MagicalActual::Runemage::KKINDHHOJDP)> {
  static const MethodInfo* get() {
    static auto* EIJFPEAIJGM = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "KKINDHHOJDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EIJFPEAIJGM, NHFBFBMNPFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::AOMCFHCDKDN
// Il2CppName: AOMCFHCDKDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::AOMCFHCDKDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "AOMCFHCDKDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::PMDIFMIMMON
// Il2CppName: PMDIFMIMMON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::PMDIFMIMMON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "PMDIFMIMMON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::get_myAvatar
// Il2CppName: get_myAvatar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerAvatar* (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::get_myAvatar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "get_myAvatar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::NAKDNGHGHAL
// Il2CppName: NAKDNGHGHAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::NAKDNGHGHAL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "NAKDNGHGHAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::HAKCPPIJNBG
// Il2CppName: HAKCPPIJNBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(int)>(&MagicalActual::Runemage::HAKCPPIJNBG)> {
  static const MethodInfo* get() {
    static auto* HGIGDEMGOOD = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "HAKCPPIJNBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HGIGDEMGOOD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::WeaponAdjusted
// Il2CppName: WeaponAdjusted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::WeaponAdjusted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "WeaponAdjusted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::DLSDFPASFD
// Il2CppName: DLSDFPASFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(uint16_t, ::UnityEngine::Vector3, int)>(&MagicalActual::Runemage::DLSDFPASFD)> {
  static const MethodInfo* get() {
    static auto* FNOCLFOKDFG = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* DLLPCCKKJGD = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ENMLJMBHBHE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "DLSDFPASFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FNOCLFOKDFG, DLLPCCKKJGD, ENMLJMBHBHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::GBCHLGNALEH
// Il2CppName: GBCHLGNALEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Runemage::GBCHLGNALEH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "GBCHLGNALEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::GHGBCPHPMAA
// Il2CppName: GHGBCPHPMAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::GHGBCPHPMAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "GHGBCPHPMAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::ClassDisabled
// Il2CppName: ClassDisabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::ClassDisabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "ClassDisabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::PKGFLONALEH
// Il2CppName: PKGFLONALEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::PKGFLONALEH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "PKGFLONALEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Runemage::MCDMBOIBABN
// Il2CppName: MCDMBOIBABN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*)>(&MagicalActual::Runemage::MCDMBOIBABN)> {
  static const MethodInfo* get() {
    static auto* HFAIGGNKONJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "MCDMBOIBABN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HFAIGGNKONJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::AGAGKCGPGIK
// Il2CppName: AGAGKCGPGIK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::AGAGKCGPGIK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "AGAGKCGPGIK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::JNKHKJGALLM
// Il2CppName: JNKHKJGALLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::JNKHKJGALLM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "JNKHKJGALLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::ClassEnabled
// Il2CppName: ClassEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::ClassEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "ClassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::DFJELDBCDHO
// Il2CppName: DFJELDBCDHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::DFJELDBCDHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "DFJELDBCDHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::MDMGBILHGLA
// Il2CppName: MDMGBILHGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Runemage::MDMGBILHGLA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "MDMGBILHGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::BDGEOOANFAA
// Il2CppName: BDGEOOANFAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, int, int)>(&MagicalActual::Runemage::BDGEOOANFAA)> {
  static const MethodInfo* get() {
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* HGIGDEMGOOD = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* ENMLJMBHBHE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "BDGEOOANFAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHFBFBMNPFC, NKJBILNNJNP, HGIGDEMGOOD, ENMLJMBHBHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::PFEPBFMJBEN
// Il2CppName: PFEPBFMJBEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::PFEPBFMJBEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "PFEPBFMJBEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::AIFOHPNAAPF
// Il2CppName: AIFOHPNAAPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::System::Collections::ArrayList*)>(&MagicalActual::Runemage::AIFOHPNAAPF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "AIFOHPNAAPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::GetWeaponObject
// Il2CppName: GetWeaponObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::GetWeaponObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "GetWeaponObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::LLDHBKEEJDO
// Il2CppName: LLDHBKEEJDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::Il2CppObject*)>(&MagicalActual::Runemage::LLDHBKEEJDO)> {
  static const MethodInfo* get() {
    static auto* HFAIGGNKONJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "LLDHBKEEJDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HFAIGGNKONJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::orbusNetCleanup
// Il2CppName: orbusNetCleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Runemage::orbusNetCleanup)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "orbusNetCleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::DDLNCFDNKEE
// Il2CppName: DDLNCFDNKEE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::DDLNCFDNKEE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "DDLNCFDNKEE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::CastSpark
// Il2CppName: CastSpark
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::CastSpark)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "CastSpark", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::JCJCMKPOAKK
// Il2CppName: JCJCMKPOAKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::JCJCMKPOAKK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "JCJCMKPOAKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::BBJGCNABFCG
// Il2CppName: BBJGCNABFCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::BBJGCNABFCG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "BBJGCNABFCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::LDLFJMKKODH
// Il2CppName: LDLFJMKKODH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)()>(&MagicalActual::Runemage::LDLFJMKKODH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "LDLFJMKKODH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Runemage::COKBPJNGFPL
// Il2CppName: COKBPJNGFPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Runemage::*)(::System::Collections::ArrayList*)>(&MagicalActual::Runemage::COKBPJNGFPL)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Runemage*), "COKBPJNGFPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
