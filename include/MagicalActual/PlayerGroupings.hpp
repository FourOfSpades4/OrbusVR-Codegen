// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerGroupings
  class PlayerGroupings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PlayerGroupings);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PlayerGroupings*, "MagicalActual", "PlayerGroupings");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PlayerGroupings
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayerGroupings : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 size
    // Size: 0x4
    // Offset: 0x10
    int size;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: size and: grouping
    char __padding0[0x4] = {};
    // public System.String grouping
    // Size: 0x8
    // Offset: 0x18
    ::StringW grouping;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.Int32 size
    [[deprecated("Use field access instead!")]] int& dyn_size();
    // Get instance field reference: public System.String grouping
    [[deprecated("Use field access instead!")]] ::StringW& dyn_grouping();
    // public System.Void .ctor()
    // Offset: 0x11A75A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerGroupings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PlayerGroupings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerGroupings*, creationType>()));
    }
  }; // MagicalActual.PlayerGroupings
  #pragma pack(pop)
  static check_size<sizeof(PlayerGroupings), 24 + sizeof(::StringW)> __MagicalActual_PlayerGroupingsSizeCheck;
  static_assert(sizeof(PlayerGroupings) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PlayerGroupings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
