// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_Imp
  class M_Imp;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_Imp);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_Imp*, "MagicalActual", "M_Imp");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_Imp
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD539C
  class M_Imp : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // private System.Void DEGCMEJJNJI()
    // Offset: 0x24323BC
    void DEGCMEJJNJI();
    // private System.Void APMNGLNBFNP()
    // Offset: 0x2432414
    void APMNGLNBFNP();
    // public System.Void JFBOMHHGFDN()
    // Offset: 0x243246C
    void JFBOMHHGFDN();
    // public System.Void JFDEDDEJJPK()
    // Offset: 0x2432690
    void JFDEDDEJJPK();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x24328B4
    void NNDKJCJFIAK();
    // public System.Void Slash()
    // Offset: 0x243290C
    void Slash();
    // private System.Void NHADFEMILCC()
    // Offset: 0x2432B24
    void NHADFEMILCC();
    // public System.Void GHHAMAIIFFG()
    // Offset: 0x2432B7C
    void GHHAMAIIFFG();
    // public System.Void KDPEOPPDLLP()
    // Offset: 0x2432DA0
    void KDPEOPPDLLP();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x2432FC4
    void KPOAAAHLGLA();
    // public System.Void IBMKENLAMGB()
    // Offset: 0x243301C
    void IBMKENLAMGB();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x2433240
    void JENOIOBAEPG();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x2433298
    void NEDFCIDMJBB();
    // public System.Void OMFMIKPMPEL()
    // Offset: 0x24332F0
    void OMFMIKPMPEL();
    // public System.Void HMIDAAAHFCB()
    // Offset: 0x2433514
    void HMIDAAAHFCB();
    // public System.Void GLJFFHNKKPI()
    // Offset: 0x2433738
    void GLJFFHNKKPI();
    // private System.Void JNHNEBOHOIB()
    // Offset: 0x243395C
    void JNHNEBOHOIB();
    // public System.Void PNLNOOIGCBK()
    // Offset: 0x24339B4
    void PNLNOOIGCBK();
    // private System.Void OJFAEAIKFED()
    // Offset: 0x2433BD8
    void OJFAEAIKFED();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x2433C30
    void LPLGKBGLPOK();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x2433C88
    void AFIACGLCIPB();
    // public System.Void CIGIPMPLKGF()
    // Offset: 0x2433CE0
    void CIGIPMPLKGF();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x2433F04
    void FGIFGGNGKPK();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x2433F5C
    void GPFBGGFPINB();
    // public System.Void CCOODLILKJD()
    // Offset: 0x2433FB4
    void CCOODLILKJD();
    // public System.Void DIDADMBDAAK()
    // Offset: 0x24341D4
    void DIDADMBDAAK();
    // public System.Void .ctor()
    // Offset: 0x24343F8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_Imp* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_Imp::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_Imp*, creationType>()));
    }
    // public System.Void NHHIIEHJCFA()
    // Offset: 0x2434450
    void NHHIIEHJCFA();
    // public System.Void ALKHPPEDLNC()
    // Offset: 0x2434674
    void ALKHPPEDLNC();
    // public System.Void JMPBEJDKDGJ()
    // Offset: 0x2434898
    void JMPBEJDKDGJ();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x2434ABC
    void HKINNMLBMMG();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x2434B14
    void MLGBKBMHHLE();
    // public System.Void PHMNKLJAEMC()
    // Offset: 0x2434B6C
    void PHMNKLJAEMC();
    // private System.Void FBONHOOJHBG()
    // Offset: 0x2434D90
    void FBONHOOJHBG();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x2434DE8
    void IDOCJGNLNFL();
    // public System.Void GILLJBIMGNJ()
    // Offset: 0x2434E40
    void GILLJBIMGNJ();
    // private System.Void Start()
    // Offset: 0x2435064
    void Start();
    // public System.Void KIBDAOLFNJM()
    // Offset: 0x24350BC
    void KIBDAOLFNJM();
    // public System.Void CEPPICBNJOI()
    // Offset: 0x24352E0
    void CEPPICBNJOI();
    // public System.Void HMCPNNAOPLG()
    // Offset: 0x2435504
    void HMCPNNAOPLG();
    // private System.Void GOKMOBEADLE()
    // Offset: 0x2435728
    void GOKMOBEADLE();
  }; // MagicalActual.M_Imp
  #pragma pack(pop)
  static check_size<sizeof(M_Imp), 40 + sizeof(::StringW)> __MagicalActual_M_ImpSizeCheck;
  static_assert(sizeof(M_Imp) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_Imp::DEGCMEJJNJI
// Il2CppName: DEGCMEJJNJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::DEGCMEJJNJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "DEGCMEJJNJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::APMNGLNBFNP
// Il2CppName: APMNGLNBFNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::APMNGLNBFNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "APMNGLNBFNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::JFBOMHHGFDN
// Il2CppName: JFBOMHHGFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::JFBOMHHGFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "JFBOMHHGFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::JFDEDDEJJPK
// Il2CppName: JFDEDDEJJPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::JFDEDDEJJPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "JFDEDDEJJPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::GHHAMAIIFFG
// Il2CppName: GHHAMAIIFFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::GHHAMAIIFFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "GHHAMAIIFFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::KDPEOPPDLLP
// Il2CppName: KDPEOPPDLLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::KDPEOPPDLLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "KDPEOPPDLLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::IBMKENLAMGB
// Il2CppName: IBMKENLAMGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::IBMKENLAMGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "IBMKENLAMGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::OMFMIKPMPEL
// Il2CppName: OMFMIKPMPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::OMFMIKPMPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "OMFMIKPMPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::HMIDAAAHFCB
// Il2CppName: HMIDAAAHFCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::HMIDAAAHFCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "HMIDAAAHFCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::GLJFFHNKKPI
// Il2CppName: GLJFFHNKKPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::GLJFFHNKKPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "GLJFFHNKKPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::JNHNEBOHOIB
// Il2CppName: JNHNEBOHOIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::JNHNEBOHOIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "JNHNEBOHOIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::PNLNOOIGCBK
// Il2CppName: PNLNOOIGCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::PNLNOOIGCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "PNLNOOIGCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::OJFAEAIKFED
// Il2CppName: OJFAEAIKFED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::OJFAEAIKFED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "OJFAEAIKFED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::CIGIPMPLKGF
// Il2CppName: CIGIPMPLKGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::CIGIPMPLKGF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "CIGIPMPLKGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::CCOODLILKJD
// Il2CppName: CCOODLILKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::CCOODLILKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "CCOODLILKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::DIDADMBDAAK
// Il2CppName: DIDADMBDAAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::DIDADMBDAAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "DIDADMBDAAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_Imp::NHHIIEHJCFA
// Il2CppName: NHHIIEHJCFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::NHHIIEHJCFA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "NHHIIEHJCFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::ALKHPPEDLNC
// Il2CppName: ALKHPPEDLNC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::ALKHPPEDLNC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "ALKHPPEDLNC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::JMPBEJDKDGJ
// Il2CppName: JMPBEJDKDGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::JMPBEJDKDGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "JMPBEJDKDGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::PHMNKLJAEMC
// Il2CppName: PHMNKLJAEMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::PHMNKLJAEMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "PHMNKLJAEMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::FBONHOOJHBG
// Il2CppName: FBONHOOJHBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::FBONHOOJHBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "FBONHOOJHBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::GILLJBIMGNJ
// Il2CppName: GILLJBIMGNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::GILLJBIMGNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "GILLJBIMGNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::KIBDAOLFNJM
// Il2CppName: KIBDAOLFNJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::KIBDAOLFNJM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "KIBDAOLFNJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::CEPPICBNJOI
// Il2CppName: CEPPICBNJOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::CEPPICBNJOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "CEPPICBNJOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::HMCPNNAOPLG
// Il2CppName: HMCPNNAOPLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::HMCPNNAOPLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "HMCPNNAOPLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Imp::GOKMOBEADLE
// Il2CppName: GOKMOBEADLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Imp::*)()>(&MagicalActual::M_Imp::GOKMOBEADLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Imp*), "GOKMOBEADLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
