// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: HoverOverGround
  class HoverOverGround;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::HoverOverGround);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::HoverOverGround*, "MagicalActual", "HoverOverGround");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x6C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.HoverOverGround
  // [TokenAttribute] Offset: FFFFFFFF
  class HoverOverGround : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.PlayerAvatar myAvatar
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::PlayerAvatar* myAvatar;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // private UnityEngine.Transform ANMELKBIAHA
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Transform* ANMELKBIAHA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform DMNHBEIHGMA
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Transform* DMNHBEIHGMA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Vector3 IABEEIJMJFM
    // Size: 0xC
    // Offset: 0x30
    ::UnityEngine::Vector3 IABEEIJMJFM;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Int32 OPKIBGDPDBM
    // Size: 0x4
    // Offset: 0x3C
    int OPKIBGDPDBM;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.RaycastHit DGHNENKOPME
    // Size: 0x2C
    // Offset: 0x40
    ::UnityEngine::RaycastHit DGHNENKOPME;
    // Field size check
    static_assert(sizeof(::UnityEngine::RaycastHit) == 0x2C);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.PlayerAvatar myAvatar
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_myAvatar();
    // Get instance field reference: private UnityEngine.Transform ANMELKBIAHA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_ANMELKBIAHA();
    // Get instance field reference: private UnityEngine.Transform DMNHBEIHGMA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_DMNHBEIHGMA();
    // Get instance field reference: private UnityEngine.Vector3 IABEEIJMJFM
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_IABEEIJMJFM();
    // Get instance field reference: private System.Int32 OPKIBGDPDBM
    [[deprecated("Use field access instead!")]] int& dyn_OPKIBGDPDBM();
    // Get instance field reference: private UnityEngine.RaycastHit DGHNENKOPME
    [[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& dyn_DGHNENKOPME();
    // private System.Void Start()
    // Offset: 0x188C6F4
    void Start();
    // public System.Void NNCHGKMGBBF()
    // Offset: 0x188C774
    void NNCHGKMGBBF();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x188C964
    void MLGBKBMHHLE();
    // public System.Void DPJFMCAIPNB()
    // Offset: 0x188C9E4
    void DPJFMCAIPNB();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x188CBD4
    void GKIOLADOCOK();
    // public System.Void FBELEHBLKKI()
    // Offset: 0x188CC54
    void FBELEHBLKKI();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x188CE44
    void LBIKOKCCILF();
    // public System.Void BNDPLHGCDCN()
    // Offset: 0x188CEC4
    void BNDPLHGCDCN();
    // public System.Void LCJLPAAPKOJ()
    // Offset: 0x188D0B4
    void LCJLPAAPKOJ();
    // public System.Void MLPKPMMDIIK()
    // Offset: 0x188D2A4
    void MLPKPMMDIIK();
    // public System.Void ManualFixedUpdate()
    // Offset: 0x188D494
    void ManualFixedUpdate();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x188D680
    void KPOAAAHLGLA();
    // public System.Void OECJLEMDKGF()
    // Offset: 0x188D700
    void OECJLEMDKGF();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x188D8F0
    void DGJGAFKDIDK();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x188D970
    void IDOCJGNLNFL();
    // private System.Void NHADFEMILCC()
    // Offset: 0x188D9F0
    void NHADFEMILCC();
    // public System.Void ICJNGCGMIEE()
    // Offset: 0x188DA70
    void ICJNGCGMIEE();
    // public System.Void HOJCBJMOCLM()
    // Offset: 0x188DC60
    void HOJCBJMOCLM();
    // public System.Void .ctor()
    // Offset: 0x188DE50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HoverOverGround* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::HoverOverGround::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HoverOverGround*, creationType>()));
    }
    // private System.Void GECHLDPLPCC()
    // Offset: 0x188DE58
    void GECHLDPLPCC();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x188DED8
    void LPLGKBGLPOK();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x188DF58
    void EIIKFEMCNKM();
    // public System.Void JLBMBJHFOLF()
    // Offset: 0x188DFD8
    void JLBMBJHFOLF();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x188E1C8
    void FGIFGGNGKPK();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x188E248
    void JENOIOBAEPG();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x188E2C8
    void KBDGAPMJGLG();
  }; // MagicalActual.HoverOverGround
  #pragma pack(pop)
  static check_size<sizeof(HoverOverGround), 64 + sizeof(::UnityEngine::RaycastHit)> __MagicalActual_HoverOverGroundSizeCheck;
  static_assert(sizeof(HoverOverGround) == 0x6C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::NNCHGKMGBBF
// Il2CppName: NNCHGKMGBBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::NNCHGKMGBBF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "NNCHGKMGBBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::DPJFMCAIPNB
// Il2CppName: DPJFMCAIPNB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::DPJFMCAIPNB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "DPJFMCAIPNB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::FBELEHBLKKI
// Il2CppName: FBELEHBLKKI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::FBELEHBLKKI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "FBELEHBLKKI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::BNDPLHGCDCN
// Il2CppName: BNDPLHGCDCN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::BNDPLHGCDCN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "BNDPLHGCDCN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::LCJLPAAPKOJ
// Il2CppName: LCJLPAAPKOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::LCJLPAAPKOJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "LCJLPAAPKOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::MLPKPMMDIIK
// Il2CppName: MLPKPMMDIIK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::MLPKPMMDIIK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "MLPKPMMDIIK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::ManualFixedUpdate
// Il2CppName: ManualFixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::ManualFixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "ManualFixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::OECJLEMDKGF
// Il2CppName: OECJLEMDKGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::OECJLEMDKGF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "OECJLEMDKGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::ICJNGCGMIEE
// Il2CppName: ICJNGCGMIEE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::ICJNGCGMIEE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "ICJNGCGMIEE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::HOJCBJMOCLM
// Il2CppName: HOJCBJMOCLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::HOJCBJMOCLM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "HOJCBJMOCLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::JLBMBJHFOLF
// Il2CppName: JLBMBJHFOLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::JLBMBJHFOLF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "JLBMBJHFOLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::HoverOverGround::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::HoverOverGround::*)()>(&MagicalActual::HoverOverGround::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::HoverOverGround*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
