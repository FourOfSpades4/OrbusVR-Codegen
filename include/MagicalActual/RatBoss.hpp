// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: OrbusAudioParticleController
  class OrbusAudioParticleController;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: RatBoss
  class RatBoss;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::RatBoss);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::RatBoss*, "MagicalActual", "RatBoss");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.RatBoss
  // [TokenAttribute] Offset: FFFFFFFF
  class RatBoss : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.OrbusAudioParticleController HIMHKDOJGBM
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::OrbusAudioParticleController* HIMHKDOJGBM;
    // Field size check
    static_assert(sizeof(::MagicalActual::OrbusAudioParticleController*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private MagicalActual.OrbusAudioParticleController HIMHKDOJGBM
    [[deprecated("Use field access instead!")]] ::MagicalActual::OrbusAudioParticleController*& dyn_HIMHKDOJGBM();
    // private System.Void MDOPMJPONBJ()
    // Offset: 0x15B2248
    void MDOPMJPONBJ();
    // private System.Void IAMHAELCKHH()
    // Offset: 0x15B225C
    void IAMHAELCKHH();
    // private System.Void FEJNAOBCKJK()
    // Offset: 0x15B22E4
    void FEJNAOBCKJK();
    // private System.Void KIPDPKEIOEO()
    // Offset: 0x15B236C
    void KIPDPKEIOEO();
    // private System.Void LDGBMNHMGKN(System.Object OMLPNCLFFMJ)
    // Offset: 0x15B23F4
    void LDGBMNHMGKN(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NLOFBPNEFKD()
    // Offset: 0x15B2490
    void NLOFBPNEFKD();
    // private System.Void JNELNIGPBIM()
    // Offset: 0x15B2518
    void JNELNIGPBIM();
    // public System.Void .ctor()
    // Offset: 0x15B25A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RatBoss* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::RatBoss::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RatBoss*, creationType>()));
    }
    // private System.Void JMPPPHNKAFG()
    // Offset: 0x15B25F8
    void JMPPPHNKAFG();
    // private System.Void LJHMJPAGEEP()
    // Offset: 0x15B2680
    void LJHMJPAGEEP();
    // private System.Void HOCAAMOHPFG(System.Object OMLPNCLFFMJ)
    // Offset: 0x15B2694
    void HOCAAMOHPFG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MIPEOCANMMO()
    // Offset: 0x15B2730
    void MIPEOCANMMO();
    // private System.Void PGMMOPAODON(System.Object OMLPNCLFFMJ)
    // Offset: 0x15B27B8
    void PGMMOPAODON(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x15B2854
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void DGELIHGGOKB()
    // Offset: 0x15B2908
    void DGELIHGGOKB();
    // public System.Void MMJIKEBHBJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x15B2990
    void MMJIKEBHBJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PFPDONMFLDH()
    // Offset: 0x15B2A44
    void PFPDONMFLDH();
    // private System.Void NOMLLNKKACJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x15B2A58
    void NOMLLNKKACJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LHOABPAHIDE(System.Object OMLPNCLFFMJ)
    // Offset: 0x15B2AF4
    void LHOABPAHIDE(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void AKONOOIDPDA()
    // Offset: 0x15B2B90
    void AKONOOIDPDA();
    // private System.Void DAPFFOEMAAM()
    // Offset: 0x15B2C18
    void DAPFFOEMAAM();
    // private System.Void OnDestroy()
    // Offset: 0x15B2CA0
    void OnDestroy();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x15B2CB4
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JDJILFHNOGP()
    // Offset: 0x15B2D68
    void JDJILFHNOGP();
    // private System.Void HMHEDOLPGEG(System.Object OMLPNCLFFMJ)
    // Offset: 0x15B2DF0
    void HMHEDOLPGEG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NNPOAGKENPG(System.Object OMLPNCLFFMJ)
    // Offset: 0x15B2E8C
    void NNPOAGKENPG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void KKEABMBACIC()
    // Offset: 0x15B2F28
    void KKEABMBACIC();
    // private System.Void Awake()
    // Offset: 0x15B2FB0
    void Awake();
    // private System.Void BBJGCNABFCG()
    // Offset: 0x15B3038
    void BBJGCNABFCG();
    // private System.Void IGIJBKHAMJH()
    // Offset: 0x15B304C
    void IGIJBKHAMJH();
    // private System.Void HDMHEDEGDFD()
    // Offset: 0x15B30D4
    void HDMHEDEGDFD();
    // private System.Void EEONKAHJKAD(System.Object OMLPNCLFFMJ)
    // Offset: 0x15B315C
    void EEONKAHJKAD(::Il2CppObject* OMLPNCLFFMJ);
  }; // MagicalActual.RatBoss
  #pragma pack(pop)
  static check_size<sizeof(RatBoss), 40 + sizeof(::MagicalActual::OrbusAudioParticleController*)> __MagicalActual_RatBossSizeCheck;
  static_assert(sizeof(RatBoss) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::RatBoss::MDOPMJPONBJ
// Il2CppName: MDOPMJPONBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::MDOPMJPONBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "MDOPMJPONBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::IAMHAELCKHH
// Il2CppName: IAMHAELCKHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::IAMHAELCKHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "IAMHAELCKHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::FEJNAOBCKJK
// Il2CppName: FEJNAOBCKJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::FEJNAOBCKJK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "FEJNAOBCKJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::KIPDPKEIOEO
// Il2CppName: KIPDPKEIOEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::KIPDPKEIOEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "KIPDPKEIOEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::LDGBMNHMGKN
// Il2CppName: LDGBMNHMGKN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)(::Il2CppObject*)>(&MagicalActual::RatBoss::LDGBMNHMGKN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "LDGBMNHMGKN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::NLOFBPNEFKD
// Il2CppName: NLOFBPNEFKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::NLOFBPNEFKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "NLOFBPNEFKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::JNELNIGPBIM
// Il2CppName: JNELNIGPBIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::JNELNIGPBIM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "JNELNIGPBIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::RatBoss::JMPPPHNKAFG
// Il2CppName: JMPPPHNKAFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::JMPPPHNKAFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "JMPPPHNKAFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::LJHMJPAGEEP
// Il2CppName: LJHMJPAGEEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::LJHMJPAGEEP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "LJHMJPAGEEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::HOCAAMOHPFG
// Il2CppName: HOCAAMOHPFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)(::Il2CppObject*)>(&MagicalActual::RatBoss::HOCAAMOHPFG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "HOCAAMOHPFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::MIPEOCANMMO
// Il2CppName: MIPEOCANMMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::MIPEOCANMMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "MIPEOCANMMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::PGMMOPAODON
// Il2CppName: PGMMOPAODON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)(::Il2CppObject*)>(&MagicalActual::RatBoss::PGMMOPAODON)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "PGMMOPAODON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::RatBoss::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::DGELIHGGOKB
// Il2CppName: DGELIHGGOKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::DGELIHGGOKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "DGELIHGGOKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::MMJIKEBHBJF
// Il2CppName: MMJIKEBHBJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::RatBoss::MMJIKEBHBJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "MMJIKEBHBJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::PFPDONMFLDH
// Il2CppName: PFPDONMFLDH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::PFPDONMFLDH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "PFPDONMFLDH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::NOMLLNKKACJ
// Il2CppName: NOMLLNKKACJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)(::Il2CppObject*)>(&MagicalActual::RatBoss::NOMLLNKKACJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "NOMLLNKKACJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::LHOABPAHIDE
// Il2CppName: LHOABPAHIDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)(::Il2CppObject*)>(&MagicalActual::RatBoss::LHOABPAHIDE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "LHOABPAHIDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::AKONOOIDPDA
// Il2CppName: AKONOOIDPDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::AKONOOIDPDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "AKONOOIDPDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::DAPFFOEMAAM
// Il2CppName: DAPFFOEMAAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::DAPFFOEMAAM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "DAPFFOEMAAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::RatBoss::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::JDJILFHNOGP
// Il2CppName: JDJILFHNOGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::JDJILFHNOGP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "JDJILFHNOGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::HMHEDOLPGEG
// Il2CppName: HMHEDOLPGEG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)(::Il2CppObject*)>(&MagicalActual::RatBoss::HMHEDOLPGEG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "HMHEDOLPGEG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::NNPOAGKENPG
// Il2CppName: NNPOAGKENPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)(::Il2CppObject*)>(&MagicalActual::RatBoss::NNPOAGKENPG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "NNPOAGKENPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::KKEABMBACIC
// Il2CppName: KKEABMBACIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::KKEABMBACIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "KKEABMBACIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::BBJGCNABFCG
// Il2CppName: BBJGCNABFCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::BBJGCNABFCG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "BBJGCNABFCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::IGIJBKHAMJH
// Il2CppName: IGIJBKHAMJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::IGIJBKHAMJH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "IGIJBKHAMJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::HDMHEDEGDFD
// Il2CppName: HDMHEDEGDFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)()>(&MagicalActual::RatBoss::HDMHEDEGDFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "HDMHEDEGDFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RatBoss::EEONKAHJKAD
// Il2CppName: EEONKAHJKAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RatBoss::*)(::Il2CppObject*)>(&MagicalActual::RatBoss::EEONKAHJKAD)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RatBoss*), "EEONKAHJKAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
