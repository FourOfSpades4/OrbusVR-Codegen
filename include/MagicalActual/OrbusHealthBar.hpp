// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ProgressBarPro
  class ProgressBarPro;
  // Forward declaring type: SuperTextMesh
  class SuperTextMesh;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: MeshFilter
  class MeshFilter;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: OrbusHealthBar
  class OrbusHealthBar;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::OrbusHealthBar);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::OrbusHealthBar*, "MagicalActual", "OrbusHealthBar");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x110
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.OrbusHealthBar
  // [TokenAttribute] Offset: FFFFFFFF
  class OrbusHealthBar : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private System.Single PHMODMJFCIK
    // Size: 0x4
    // Offset: 0x18
    float PHMODMJFCIK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single BCMKMMLHGMG
    // Size: 0x4
    // Offset: 0x1C
    float BCMKMMLHGMG;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single POBAHEFBBFI
    // Size: 0x4
    // Offset: 0x20
    float POBAHEFBBFI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single ABONCFAKAOP
    // Size: 0x4
    // Offset: 0x24
    float ABONCFAKAOP;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single GENNOPEBNPI
    // Size: 0x4
    // Offset: 0x28
    float GENNOPEBNPI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single DCNDGFLKMCK
    // Size: 0x4
    // Offset: 0x2C
    float DCNDGFLKMCK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private ProgressBarPro MCCKEOCHMMN
    // Size: 0x8
    // Offset: 0x30
    ::GlobalNamespace::ProgressBarPro* MCCKEOCHMMN;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ProgressBarPro*) == 0x8);
    // private UnityEngine.Camera EMGKKLPHDEB
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Camera* EMGKKLPHDEB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE4998
    // private UnityEngine.Vector3 <OLMLEDCEJPG>k__BackingField
    // Size: 0xC
    // Offset: 0x40
    ::UnityEngine::Vector3 OLMLEDCEJPG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: OLMLEDCEJPG and: LHEJHHOHAPL
    char __padding8[0x4] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE49A8
    // private UnityEngine.Transform <LHEJHHOHAPL>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Transform* LHEJHHOHAPL;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform DMNHBEIHGMA
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Transform* DMNHBEIHGMA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x60
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private MagicalActual.PlayerAvatar EENJNFDNJBD
    // Size: 0x8
    // Offset: 0x68
    ::MagicalActual::PlayerAvatar* EENJNFDNJBD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // private System.Int32 LEEDFECEPGB
    // Size: 0x4
    // Offset: 0x70
    int LEEDFECEPGB;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 EFBKFIHDIDD
    // Size: 0x4
    // Offset: 0x74
    int EFBKFIHDIDD;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.String JNCPNDJCJLH
    // Size: 0x8
    // Offset: 0x78
    ::StringW JNCPNDJCJLH;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String IIJBPKDIABE
    // Size: 0x8
    // Offset: 0x80
    ::StringW IIJBPKDIABE;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String PELDBFCFMPM
    // Size: 0x8
    // Offset: 0x88
    ::StringW PELDBFCFMPM;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Int32 MICNFIMMMJH
    // Size: 0x4
    // Offset: 0x90
    int MICNFIMMMJH;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single CJMJNLPMCDN
    // Size: 0x4
    // Offset: 0x94
    float CJMJNLPMCDN;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color DNIFNFJALMD
    // Size: 0x10
    // Offset: 0x98
    ::UnityEngine::Color DNIFNFJALMD;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Boolean ILMKPAGMKJG
    // Size: 0x1
    // Offset: 0xA8
    bool ILMKPAGMKJG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean AFMHINJBDHE
    // Size: 0x1
    // Offset: 0xA9
    bool AFMHINJBDHE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean KLCLDIFBDNN
    // Size: 0x1
    // Offset: 0xAA
    bool KLCLDIFBDNN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Byte EMBNOIHOOGB
    // Size: 0x1
    // Offset: 0xAB
    uint8_t EMBNOIHOOGB;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // public System.Boolean alwaysShowBar
    // Size: 0x1
    // Offset: 0xAC
    bool alwaysShowBar;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean dontFaceCamera
    // Size: 0x1
    // Offset: 0xAD
    bool dontFaceCamera;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean hideStrengthIndicator
    // Size: 0x1
    // Offset: 0xAE
    bool hideStrengthIndicator;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean hideNameplate
    // Size: 0x1
    // Offset: 0xAF
    bool hideNameplate;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean EEKNIBCBNEK
    // Size: 0x1
    // Offset: 0xB0
    bool EEKNIBCBNEK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean alwaysShowName
    // Size: 0x1
    // Offset: 0xB1
    bool alwaysShowName;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean canFocus
    // Size: 0x1
    // Offset: 0xB2
    bool canFocus;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: canFocus and: defaultName
    char __padding31[0x5] = {};
    // public System.String defaultName
    // Size: 0x8
    // Offset: 0xB8
    ::StringW defaultName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String JFGOEIBGDFM
    // Size: 0x8
    // Offset: 0xC0
    ::StringW JFGOEIBGDFM;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.GameObject> NALCMNABJLP
    // Size: 0x8
    // Offset: 0xC8
    ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* NALCMNABJLP;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
    // private SuperTextMesh GDJECKCJFLO
    // Size: 0x8
    // Offset: 0xD0
    ::GlobalNamespace::SuperTextMesh* GDJECKCJFLO;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SuperTextMesh*) == 0x8);
    // private UnityEngine.GameObject EFNCFAEBFIN
    // Size: 0x8
    // Offset: 0xD8
    ::UnityEngine::GameObject* EFNCFAEBFIN;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.MeshFilter OCBCOCDBCNK
    // Size: 0x8
    // Offset: 0xE0
    ::UnityEngine::MeshFilter* OCBCOCDBCNK;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshFilter*) == 0x8);
    // private UnityEngine.GameObject GJDPABBEHIP
    // Size: 0x8
    // Offset: 0xE8
    ::UnityEngine::GameObject* GJDPABBEHIP;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject ANHGCOKBFEM
    // Size: 0x8
    // Offset: 0xF0
    ::UnityEngine::GameObject* ANHGCOKBFEM;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject JHLHNAJHDLD
    // Size: 0x8
    // Offset: 0xF8
    ::UnityEngine::GameObject* JHLHNAJHDLD;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean JPHGNIAHGOD
    // Size: 0x1
    // Offset: 0x100
    bool JPHGNIAHGOD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: JPHGNIAHGOD and: KFAEBLENKII
    char __padding41[0x7] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE49B8
    // private UnityEngine.Transform <KFAEBLENKII>k__BackingField
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::Transform* KFAEBLENKII;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Single PHMODMJFCIK
    [[deprecated("Use field access instead!")]] float& dyn_PHMODMJFCIK();
    // Get instance field reference: private System.Single BCMKMMLHGMG
    [[deprecated("Use field access instead!")]] float& dyn_BCMKMMLHGMG();
    // Get instance field reference: private System.Single POBAHEFBBFI
    [[deprecated("Use field access instead!")]] float& dyn_POBAHEFBBFI();
    // Get instance field reference: private System.Single ABONCFAKAOP
    [[deprecated("Use field access instead!")]] float& dyn_ABONCFAKAOP();
    // Get instance field reference: private System.Single GENNOPEBNPI
    [[deprecated("Use field access instead!")]] float& dyn_GENNOPEBNPI();
    // Get instance field reference: private System.Single DCNDGFLKMCK
    [[deprecated("Use field access instead!")]] float& dyn_DCNDGFLKMCK();
    // Get instance field reference: private ProgressBarPro MCCKEOCHMMN
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ProgressBarPro*& dyn_MCCKEOCHMMN();
    // Get instance field reference: private UnityEngine.Camera EMGKKLPHDEB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_EMGKKLPHDEB();
    // Get instance field reference: private UnityEngine.Vector3 <OLMLEDCEJPG>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$OLMLEDCEJPG$k__BackingField();
    // Get instance field reference: private UnityEngine.Transform <LHEJHHOHAPL>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_$LHEJHHOHAPL$k__BackingField();
    // Get instance field reference: private UnityEngine.Transform DMNHBEIHGMA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_DMNHBEIHGMA();
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: private MagicalActual.PlayerAvatar EENJNFDNJBD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_EENJNFDNJBD();
    // Get instance field reference: private System.Int32 LEEDFECEPGB
    [[deprecated("Use field access instead!")]] int& dyn_LEEDFECEPGB();
    // Get instance field reference: private System.Int32 EFBKFIHDIDD
    [[deprecated("Use field access instead!")]] int& dyn_EFBKFIHDIDD();
    // Get instance field reference: private System.String JNCPNDJCJLH
    [[deprecated("Use field access instead!")]] ::StringW& dyn_JNCPNDJCJLH();
    // Get instance field reference: private System.String IIJBPKDIABE
    [[deprecated("Use field access instead!")]] ::StringW& dyn_IIJBPKDIABE();
    // Get instance field reference: private System.String PELDBFCFMPM
    [[deprecated("Use field access instead!")]] ::StringW& dyn_PELDBFCFMPM();
    // Get instance field reference: private System.Int32 MICNFIMMMJH
    [[deprecated("Use field access instead!")]] int& dyn_MICNFIMMMJH();
    // Get instance field reference: private System.Single CJMJNLPMCDN
    [[deprecated("Use field access instead!")]] float& dyn_CJMJNLPMCDN();
    // Get instance field reference: private UnityEngine.Color DNIFNFJALMD
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_DNIFNFJALMD();
    // Get instance field reference: private System.Boolean ILMKPAGMKJG
    [[deprecated("Use field access instead!")]] bool& dyn_ILMKPAGMKJG();
    // Get instance field reference: private System.Boolean AFMHINJBDHE
    [[deprecated("Use field access instead!")]] bool& dyn_AFMHINJBDHE();
    // Get instance field reference: private System.Boolean KLCLDIFBDNN
    [[deprecated("Use field access instead!")]] bool& dyn_KLCLDIFBDNN();
    // Get instance field reference: private System.Byte EMBNOIHOOGB
    [[deprecated("Use field access instead!")]] uint8_t& dyn_EMBNOIHOOGB();
    // Get instance field reference: public System.Boolean alwaysShowBar
    [[deprecated("Use field access instead!")]] bool& dyn_alwaysShowBar();
    // Get instance field reference: public System.Boolean dontFaceCamera
    [[deprecated("Use field access instead!")]] bool& dyn_dontFaceCamera();
    // Get instance field reference: public System.Boolean hideStrengthIndicator
    [[deprecated("Use field access instead!")]] bool& dyn_hideStrengthIndicator();
    // Get instance field reference: public System.Boolean hideNameplate
    [[deprecated("Use field access instead!")]] bool& dyn_hideNameplate();
    // Get instance field reference: private System.Boolean EEKNIBCBNEK
    [[deprecated("Use field access instead!")]] bool& dyn_EEKNIBCBNEK();
    // Get instance field reference: public System.Boolean alwaysShowName
    [[deprecated("Use field access instead!")]] bool& dyn_alwaysShowName();
    // Get instance field reference: public System.Boolean canFocus
    [[deprecated("Use field access instead!")]] bool& dyn_canFocus();
    // Get instance field reference: public System.String defaultName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_defaultName();
    // Get instance field reference: private System.String JFGOEIBGDFM
    [[deprecated("Use field access instead!")]] ::StringW& dyn_JFGOEIBGDFM();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.GameObject> NALCMNABJLP
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn_NALCMNABJLP();
    // Get instance field reference: private SuperTextMesh GDJECKCJFLO
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& dyn_GDJECKCJFLO();
    // Get instance field reference: private UnityEngine.GameObject EFNCFAEBFIN
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_EFNCFAEBFIN();
    // Get instance field reference: private UnityEngine.MeshFilter OCBCOCDBCNK
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& dyn_OCBCOCDBCNK();
    // Get instance field reference: private UnityEngine.GameObject GJDPABBEHIP
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_GJDPABBEHIP();
    // Get instance field reference: private UnityEngine.GameObject ANHGCOKBFEM
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ANHGCOKBFEM();
    // Get instance field reference: private UnityEngine.GameObject JHLHNAJHDLD
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_JHLHNAJHDLD();
    // Get instance field reference: private System.Boolean JPHGNIAHGOD
    [[deprecated("Use field access instead!")]] bool& dyn_JPHGNIAHGOD();
    // Get instance field reference: private UnityEngine.Transform <KFAEBLENKII>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_$KFAEBLENKII$k__BackingField();
    // public System.Void UpdatedMonsterType()
    // Offset: 0x1738F50
    void UpdatedMonsterType();
    // public System.Void ForceUpdate()
    // Offset: 0x1738F5C
    void ForceUpdate();
    // public System.Void LNAPFGJNPFK(System.Byte MMMEIONJJFJ)
    // Offset: 0x1738F74
    void LNAPFGJNPFK(uint8_t MMMEIONJJFJ);
    // private System.String FANBOOFCKOC(System.Byte PNCGKMCNHAD)
    // Offset: 0x1738F84
    ::StringW FANBOOFCKOC(uint8_t PNCGKMCNHAD);
    // private System.String LGBNKFOEKLK()
    // Offset: 0x1738FE8
    ::StringW LGBNKFOEKLK();
    // private System.Void AJCGAGPIKII(UnityEngine.Vector3 MMMEIONJJFJ)
    // Offset: 0x1739684
    void AJCGAGPIKII(::UnityEngine::Vector3 MMMEIONJJFJ);
    // public System.Void LDBPFJKHLFE()
    // Offset: 0x1739690
    void LDBPFJKHLFE();
    // private System.Void PHBGDCAMELF(UnityEngine.Vector3 MMMEIONJJFJ)
    // Offset: 0x17396A0
    void PHBGDCAMELF(::UnityEngine::Vector3 MMMEIONJJFJ);
    // public System.Void hideBar()
    // Offset: 0x17396AC
    void hideBar();
    // public UnityEngine.Transform NDJMEDDFPFG()
    // Offset: 0x17396BC
    ::UnityEngine::Transform* NDJMEDDFPFG();
    // public UnityEngine.Color MLIIAJKHGFM()
    // Offset: 0x17396C4
    ::UnityEngine::Color MLIIAJKHGFM();
    // public System.Int32 get_Value()
    // Offset: 0x17396D0
    int get_Value();
    // public System.String PPNAOKOHODC()
    // Offset: 0x17396D8
    ::StringW PPNAOKOHODC();
    // public System.Void set_subName(System.String MMMEIONJJFJ)
    // Offset: 0x17396E0
    void set_subName(::StringW MMMEIONJJFJ);
    // public System.Void set_Surname(System.String MMMEIONJJFJ)
    // Offset: 0x17396F0
    void set_Surname(::StringW MMMEIONJJFJ);
    // private System.Void FixedUpdate()
    // Offset: 0x1739700
    void FixedUpdate();
    // private System.Void Awake()
    // Offset: 0x173B250
    void Awake();
    // public System.String GDHNMOIDIPC()
    // Offset: 0x173B880
    ::StringW GDHNMOIDIPC();
    // public UnityEngine.Transform get_myParentTransform()
    // Offset: 0x173A0F4
    ::UnityEngine::Transform* get_myParentTransform();
    // private System.String OLPFNAOHOCF()
    // Offset: 0x173B888
    ::StringW OLPFNAOHOCF();
    // public UnityEngine.Transform FDGMOHBECGO()
    // Offset: 0x173BB50
    ::UnityEngine::Transform* FDGMOHBECGO();
    // public System.Void set_Name(System.String MMMEIONJJFJ)
    // Offset: 0x173BB58
    void set_Name(::StringW MMMEIONJJFJ);
    // public System.Void OPEPEJKJMMF(System.Int32 MMMEIONJJFJ)
    // Offset: 0x173BB68
    void OPEPEJKJMMF(int MMMEIONJJFJ);
    // private System.String IPIGHKGKCDF()
    // Offset: 0x173BBB4
    ::StringW IPIGHKGKCDF();
    // public System.Int32 MCAHAPNANBN()
    // Offset: 0x173BC38
    int MCAHAPNANBN();
    // private System.Boolean HCMKJCNAAPA()
    // Offset: 0x173B974
    bool HCMKJCNAAPA();
    // public System.Void BFPENDJEDNK(System.Byte MMMEIONJJFJ)
    // Offset: 0x173BC40
    void BFPENDJEDNK(uint8_t MMMEIONJJFJ);
    // public System.String LDCNDDDIHGO()
    // Offset: 0x173BC50
    ::StringW LDCNDDDIHGO();
    // public System.Int32 get_Level()
    // Offset: 0x173BC58
    int get_Level();
    // public System.Void .ctor()
    // Offset: 0x173BC60
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OrbusHealthBar* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::OrbusHealthBar::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OrbusHealthBar*, creationType>()));
    }
    // public System.Int32 FKLECJAHIGL()
    // Offset: 0x173BCFC
    int FKLECJAHIGL();
    // public System.Boolean DCBPOICAMMC()
    // Offset: 0x173BD04
    bool DCBPOICAMMC();
    // public UnityEngine.Transform get_canvasTransform()
    // Offset: 0x173BD0C
    ::UnityEngine::Transform* get_canvasTransform();
    // public System.Void set_BossStyle(System.Boolean MMMEIONJJFJ)
    // Offset: 0x173963C
    void set_BossStyle(bool MMMEIONJJFJ);
    // private System.String LNOJNEFKAHP()
    // Offset: 0x173BD14
    ::StringW LNOJNEFKAHP();
    // public System.Boolean GEBDKLDMJPG()
    // Offset: 0x173BD98
    bool GEBDKLDMJPG();
    // private System.Void DEGCIANPPPH()
    // Offset: 0x173A0FC
    void DEGCIANPPPH();
    // public System.String GetPlayerTitle(System.Boolean IGIJEJKNJFN)
    // Offset: 0x173BDA0
    ::StringW GetPlayerTitle(bool IGIJEJKNJFN);
    // public System.Byte PGPONBIAAAL()
    // Offset: 0x17395BC
    uint8_t PGPONBIAAAL();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x173C604
    void NEDFCIDMJBB();
    // public UnityEngine.Color get_NameColor()
    // Offset: 0x173C8B8
    ::UnityEngine::Color get_NameColor();
    // public System.Void showBar()
    // Offset: 0x173C8C4
    void showBar();
    // public System.Void NHOKIGOMNHH()
    // Offset: 0x173C8D4
    void NHOKIGOMNHH();
    // public System.Void set_playerTitle(System.String MMMEIONJJFJ)
    // Offset: 0x173C8E4
    void set_playerTitle(::StringW MMMEIONJJFJ);
    // public System.Void StopFocus()
    // Offset: 0x173C8F4
    void StopFocus();
    // public System.Void set_NameColor(UnityEngine.Color MMMEIONJJFJ)
    // Offset: 0x173CA78
    void set_NameColor(::UnityEngine::Color MMMEIONJJFJ);
    // public System.Void set_MaxValue(System.Int32 MMMEIONJJFJ)
    // Offset: 0x173CB78
    void set_MaxValue(int MMMEIONJJFJ);
    // private System.Void JPOLGDLGGNA(UnityEngine.Transform MMMEIONJJFJ)
    // Offset: 0x173B870
    void JPOLGDLGGNA(::UnityEngine::Transform* MMMEIONJJFJ);
    // public System.Byte get_TargetType()
    // Offset: 0x17395C4
    uint8_t get_TargetType();
    // public System.Boolean get_Engaged()
    // Offset: 0x173CBC4
    bool get_Engaged();
    // public System.String PFOEIOFBMDC()
    // Offset: 0x173CBCC
    ::StringW PFOEIOFBMDC();
    // public System.Byte IAJDCEAGOND()
    // Offset: 0x173CBD4
    uint8_t IAJDCEAGOND();
    // public System.String get_subName()
    // Offset: 0x173CBDC
    ::StringW get_subName();
    // private System.Void EGBIGPFGMGO(UnityEngine.Vector3 MMMEIONJJFJ)
    // Offset: 0x173CBE4
    void EGBIGPFGMGO(::UnityEngine::Vector3 MMMEIONJJFJ);
    // private System.Void Start()
    // Offset: 0x173CBF0
    void Start();
    // public System.String get_playerTitle()
    // Offset: 0x173CECC
    ::StringW get_playerTitle();
    // private System.Void AKONOOIDPDA()
    // Offset: 0x173CED4
    void AKONOOIDPDA();
    // private System.Void FDILPFPJCCK()
    // Offset: 0x173D510
    void FDILPFPJCCK();
    // private System.String NGHNLKLBPPP()
    // Offset: 0x173BE6C
    ::StringW NGHNLKLBPPP();
    // private System.String JECODBJAEFH(System.Byte PNCGKMCNHAD)
    // Offset: 0x173DBC0
    ::StringW JECODBJAEFH(uint8_t PNCGKMCNHAD);
    // public System.Void set_Value(System.Int32 MMMEIONJJFJ)
    // Offset: 0x173DC34
    void set_Value(int MMMEIONJJFJ);
    // public System.String OAKIOOBNPEP()
    // Offset: 0x173DC80
    ::StringW OAKIOOBNPEP();
    // public System.String DOCIIPAHBLD(System.Boolean IABIHMBDHBK)
    // Offset: 0x173DC88
    ::StringW DOCIIPAHBLD(bool IABIHMBDHBK);
    // public System.Int32 NFOIBDICKBL()
    // Offset: 0x173DE2C
    int NFOIBDICKBL();
    // public System.Void set_Level(System.Int32 MMMEIONJJFJ)
    // Offset: 0x173DE34
    void set_Level(int MMMEIONJJFJ);
    // public System.String get_Name()
    // Offset: 0x173DE3C
    ::StringW get_Name();
    // private System.String OGEKJHBGKAB(System.Byte PNCGKMCNHAD)
    // Offset: 0x17395CC
    ::StringW OGEKJHBGKAB(uint8_t PNCGKMCNHAD);
    // public System.Void SetFocus(System.Single OHOGONAFMPC)
    // Offset: 0x173DE44
    void SetFocus(float OHOGONAFMPC);
    // public System.Int32 AANJCPICDJG()
    // Offset: 0x173DF8C
    int AANJCPICDJG();
    // private System.Void JOCFAHPBIKE()
    // Offset: 0x1738F68
    void JOCFAHPBIKE();
    // private System.Void DODPFEJKEJH(UnityEngine.Transform MMMEIONJJFJ)
    // Offset: 0x173B878
    void DODPFEJKEJH(::UnityEngine::Transform* MMMEIONJJFJ);
    // public System.Void JEEOJGOFHFM()
    // Offset: 0x173DF94
    void JEEOJGOFHFM();
    // public UnityEngine.Vector3 get_localOrigin()
    // Offset: 0x173B244
    ::UnityEngine::Vector3 get_localOrigin();
    // public System.Boolean get_BossStyle()
    // Offset: 0x173DFA4
    bool get_BossStyle();
    // public System.Single get_Width()
    // Offset: 0x173DFAC
    float get_Width();
    // public System.Void LKOKKLLCPJN()
    // Offset: 0x173DFB4
    void LKOKKLLCPJN();
    // public System.Void set_TargetType(System.Byte MMMEIONJJFJ)
    // Offset: 0x173E134
    void set_TargetType(uint8_t MMMEIONJJFJ);
    // public System.String CompleteName(System.Boolean IABIHMBDHBK)
    // Offset: 0x173C468
    ::StringW CompleteName(bool IABIHMBDHBK);
    // private System.String NFLFEBMOOFB(System.Byte PNCGKMCNHAD)
    // Offset: 0x173DB4C
    ::StringW NFLFEBMOOFB(uint8_t PNCGKMCNHAD);
    // public System.Void set_Engaged(System.Boolean MMMEIONJJFJ)
    // Offset: 0x173E144
    void set_Engaged(bool MMMEIONJJFJ);
    // private System.Void AHPDCIGFMJI()
    // Offset: 0x173E158
    void AHPDCIGFMJI();
    // public UnityEngine.Vector3 BGHGKANFHFL()
    // Offset: 0x173E40C
    ::UnityEngine::Vector3 BGHGKANFHFL();
    // public UnityEngine.Transform JDLDOELPOON()
    // Offset: 0x173E418
    ::UnityEngine::Transform* JDLDOELPOON();
    // public UnityEngine.Vector3 LKEILKAMDKD()
    // Offset: 0x173E420
    ::UnityEngine::Vector3 LKEILKAMDKD();
    // public System.String GLMCBKDJEND(System.Boolean IABIHMBDHBK)
    // Offset: 0x173E42C
    ::StringW GLMCBKDJEND(bool IABIHMBDHBK);
    // public System.String get_Surname()
    // Offset: 0x173E5D0
    ::StringW get_Surname();
    // public System.Int32 get_MaxValue()
    // Offset: 0x173E5D8
    int get_MaxValue();
    // public System.Void HDDPGGOMLLL(System.Boolean MMMEIONJJFJ)
    // Offset: 0x173E5E0
    void HDDPGGOMLLL(bool MMMEIONJJFJ);
  }; // MagicalActual.OrbusHealthBar
  #pragma pack(pop)
  static check_size<sizeof(OrbusHealthBar), 264 + sizeof(::UnityEngine::Transform*)> __MagicalActual_OrbusHealthBarSizeCheck;
  static_assert(sizeof(OrbusHealthBar) == 0x110);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::UpdatedMonsterType
// Il2CppName: UpdatedMonsterType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::UpdatedMonsterType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "UpdatedMonsterType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::ForceUpdate
// Il2CppName: ForceUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::ForceUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "ForceUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::LNAPFGJNPFK
// Il2CppName: LNAPFGJNPFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(uint8_t)>(&MagicalActual::OrbusHealthBar::LNAPFGJNPFK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "LNAPFGJNPFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::FANBOOFCKOC
// Il2CppName: FANBOOFCKOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)(uint8_t)>(&MagicalActual::OrbusHealthBar::FANBOOFCKOC)> {
  static const MethodInfo* get() {
    static auto* PNCGKMCNHAD = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "FANBOOFCKOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PNCGKMCNHAD});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::LGBNKFOEKLK
// Il2CppName: LGBNKFOEKLK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::LGBNKFOEKLK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "LGBNKFOEKLK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::AJCGAGPIKII
// Il2CppName: AJCGAGPIKII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(::UnityEngine::Vector3)>(&MagicalActual::OrbusHealthBar::AJCGAGPIKII)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "AJCGAGPIKII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::LDBPFJKHLFE
// Il2CppName: LDBPFJKHLFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::LDBPFJKHLFE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "LDBPFJKHLFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::PHBGDCAMELF
// Il2CppName: PHBGDCAMELF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(::UnityEngine::Vector3)>(&MagicalActual::OrbusHealthBar::PHBGDCAMELF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "PHBGDCAMELF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::hideBar
// Il2CppName: hideBar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::hideBar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "hideBar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::NDJMEDDFPFG
// Il2CppName: NDJMEDDFPFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::NDJMEDDFPFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "NDJMEDDFPFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::MLIIAJKHGFM
// Il2CppName: MLIIAJKHGFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::MLIIAJKHGFM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "MLIIAJKHGFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_Value)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::PPNAOKOHODC
// Il2CppName: PPNAOKOHODC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::PPNAOKOHODC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "PPNAOKOHODC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::set_subName
// Il2CppName: set_subName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(::StringW)>(&MagicalActual::OrbusHealthBar::set_subName)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "set_subName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::set_Surname
// Il2CppName: set_Surname
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(::StringW)>(&MagicalActual::OrbusHealthBar::set_Surname)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "set_Surname", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::GDHNMOIDIPC
// Il2CppName: GDHNMOIDIPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::GDHNMOIDIPC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "GDHNMOIDIPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_myParentTransform
// Il2CppName: get_myParentTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_myParentTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_myParentTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::OLPFNAOHOCF
// Il2CppName: OLPFNAOHOCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::OLPFNAOHOCF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "OLPFNAOHOCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::FDGMOHBECGO
// Il2CppName: FDGMOHBECGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::FDGMOHBECGO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "FDGMOHBECGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::set_Name
// Il2CppName: set_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(::StringW)>(&MagicalActual::OrbusHealthBar::set_Name)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "set_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::OPEPEJKJMMF
// Il2CppName: OPEPEJKJMMF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(int)>(&MagicalActual::OrbusHealthBar::OPEPEJKJMMF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "OPEPEJKJMMF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::IPIGHKGKCDF
// Il2CppName: IPIGHKGKCDF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::IPIGHKGKCDF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "IPIGHKGKCDF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::MCAHAPNANBN
// Il2CppName: MCAHAPNANBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::MCAHAPNANBN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "MCAHAPNANBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::HCMKJCNAAPA
// Il2CppName: HCMKJCNAAPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::HCMKJCNAAPA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "HCMKJCNAAPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::BFPENDJEDNK
// Il2CppName: BFPENDJEDNK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(uint8_t)>(&MagicalActual::OrbusHealthBar::BFPENDJEDNK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "BFPENDJEDNK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::LDCNDDDIHGO
// Il2CppName: LDCNDDDIHGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::LDCNDDDIHGO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "LDCNDDDIHGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_Level
// Il2CppName: get_Level
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_Level)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_Level", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::FKLECJAHIGL
// Il2CppName: FKLECJAHIGL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::FKLECJAHIGL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "FKLECJAHIGL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::DCBPOICAMMC
// Il2CppName: DCBPOICAMMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::DCBPOICAMMC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "DCBPOICAMMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_canvasTransform
// Il2CppName: get_canvasTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_canvasTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_canvasTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::set_BossStyle
// Il2CppName: set_BossStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(bool)>(&MagicalActual::OrbusHealthBar::set_BossStyle)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "set_BossStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::LNOJNEFKAHP
// Il2CppName: LNOJNEFKAHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::LNOJNEFKAHP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "LNOJNEFKAHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::GEBDKLDMJPG
// Il2CppName: GEBDKLDMJPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::GEBDKLDMJPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "GEBDKLDMJPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::DEGCIANPPPH
// Il2CppName: DEGCIANPPPH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::DEGCIANPPPH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "DEGCIANPPPH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::GetPlayerTitle
// Il2CppName: GetPlayerTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)(bool)>(&MagicalActual::OrbusHealthBar::GetPlayerTitle)> {
  static const MethodInfo* get() {
    static auto* IGIJEJKNJFN = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "GetPlayerTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IGIJEJKNJFN});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::PGPONBIAAAL
// Il2CppName: PGPONBIAAAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::PGPONBIAAAL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "PGPONBIAAAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_NameColor
// Il2CppName: get_NameColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_NameColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_NameColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::showBar
// Il2CppName: showBar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::showBar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "showBar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::NHOKIGOMNHH
// Il2CppName: NHOKIGOMNHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::NHOKIGOMNHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "NHOKIGOMNHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::set_playerTitle
// Il2CppName: set_playerTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(::StringW)>(&MagicalActual::OrbusHealthBar::set_playerTitle)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "set_playerTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::StopFocus
// Il2CppName: StopFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::StopFocus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "StopFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::set_NameColor
// Il2CppName: set_NameColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(::UnityEngine::Color)>(&MagicalActual::OrbusHealthBar::set_NameColor)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "set_NameColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::set_MaxValue
// Il2CppName: set_MaxValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(int)>(&MagicalActual::OrbusHealthBar::set_MaxValue)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "set_MaxValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::JPOLGDLGGNA
// Il2CppName: JPOLGDLGGNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(::UnityEngine::Transform*)>(&MagicalActual::OrbusHealthBar::JPOLGDLGGNA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "JPOLGDLGGNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_TargetType
// Il2CppName: get_TargetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_TargetType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_TargetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_Engaged
// Il2CppName: get_Engaged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_Engaged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_Engaged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::PFOEIOFBMDC
// Il2CppName: PFOEIOFBMDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::PFOEIOFBMDC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "PFOEIOFBMDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::IAJDCEAGOND
// Il2CppName: IAJDCEAGOND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::IAJDCEAGOND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "IAJDCEAGOND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_subName
// Il2CppName: get_subName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_subName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_subName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::EGBIGPFGMGO
// Il2CppName: EGBIGPFGMGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(::UnityEngine::Vector3)>(&MagicalActual::OrbusHealthBar::EGBIGPFGMGO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "EGBIGPFGMGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_playerTitle
// Il2CppName: get_playerTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_playerTitle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_playerTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::AKONOOIDPDA
// Il2CppName: AKONOOIDPDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::AKONOOIDPDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "AKONOOIDPDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::FDILPFPJCCK
// Il2CppName: FDILPFPJCCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::FDILPFPJCCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "FDILPFPJCCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::NGHNLKLBPPP
// Il2CppName: NGHNLKLBPPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::NGHNLKLBPPP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "NGHNLKLBPPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::JECODBJAEFH
// Il2CppName: JECODBJAEFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)(uint8_t)>(&MagicalActual::OrbusHealthBar::JECODBJAEFH)> {
  static const MethodInfo* get() {
    static auto* PNCGKMCNHAD = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "JECODBJAEFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PNCGKMCNHAD});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::set_Value
// Il2CppName: set_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(int)>(&MagicalActual::OrbusHealthBar::set_Value)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "set_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::OAKIOOBNPEP
// Il2CppName: OAKIOOBNPEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::OAKIOOBNPEP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "OAKIOOBNPEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::DOCIIPAHBLD
// Il2CppName: DOCIIPAHBLD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)(bool)>(&MagicalActual::OrbusHealthBar::DOCIIPAHBLD)> {
  static const MethodInfo* get() {
    static auto* IABIHMBDHBK = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "DOCIIPAHBLD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IABIHMBDHBK});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::NFOIBDICKBL
// Il2CppName: NFOIBDICKBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::NFOIBDICKBL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "NFOIBDICKBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::set_Level
// Il2CppName: set_Level
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(int)>(&MagicalActual::OrbusHealthBar::set_Level)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "set_Level", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::OGEKJHBGKAB
// Il2CppName: OGEKJHBGKAB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)(uint8_t)>(&MagicalActual::OrbusHealthBar::OGEKJHBGKAB)> {
  static const MethodInfo* get() {
    static auto* PNCGKMCNHAD = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "OGEKJHBGKAB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PNCGKMCNHAD});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::SetFocus
// Il2CppName: SetFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(float)>(&MagicalActual::OrbusHealthBar::SetFocus)> {
  static const MethodInfo* get() {
    static auto* OHOGONAFMPC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "SetFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OHOGONAFMPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::AANJCPICDJG
// Il2CppName: AANJCPICDJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::AANJCPICDJG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "AANJCPICDJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::JOCFAHPBIKE
// Il2CppName: JOCFAHPBIKE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::JOCFAHPBIKE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "JOCFAHPBIKE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::DODPFEJKEJH
// Il2CppName: DODPFEJKEJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(::UnityEngine::Transform*)>(&MagicalActual::OrbusHealthBar::DODPFEJKEJH)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "DODPFEJKEJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::JEEOJGOFHFM
// Il2CppName: JEEOJGOFHFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::JEEOJGOFHFM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "JEEOJGOFHFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_localOrigin
// Il2CppName: get_localOrigin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_localOrigin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_localOrigin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_BossStyle
// Il2CppName: get_BossStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_BossStyle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_BossStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_Width
// Il2CppName: get_Width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_Width)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_Width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::LKOKKLLCPJN
// Il2CppName: LKOKKLLCPJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::LKOKKLLCPJN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "LKOKKLLCPJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::set_TargetType
// Il2CppName: set_TargetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(uint8_t)>(&MagicalActual::OrbusHealthBar::set_TargetType)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "set_TargetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::CompleteName
// Il2CppName: CompleteName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)(bool)>(&MagicalActual::OrbusHealthBar::CompleteName)> {
  static const MethodInfo* get() {
    static auto* IABIHMBDHBK = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "CompleteName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IABIHMBDHBK});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::NFLFEBMOOFB
// Il2CppName: NFLFEBMOOFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)(uint8_t)>(&MagicalActual::OrbusHealthBar::NFLFEBMOOFB)> {
  static const MethodInfo* get() {
    static auto* PNCGKMCNHAD = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "NFLFEBMOOFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PNCGKMCNHAD});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::set_Engaged
// Il2CppName: set_Engaged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(bool)>(&MagicalActual::OrbusHealthBar::set_Engaged)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "set_Engaged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::AHPDCIGFMJI
// Il2CppName: AHPDCIGFMJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::AHPDCIGFMJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "AHPDCIGFMJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::BGHGKANFHFL
// Il2CppName: BGHGKANFHFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::BGHGKANFHFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "BGHGKANFHFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::JDLDOELPOON
// Il2CppName: JDLDOELPOON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::JDLDOELPOON)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "JDLDOELPOON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::LKEILKAMDKD
// Il2CppName: LKEILKAMDKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::LKEILKAMDKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "LKEILKAMDKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::GLMCBKDJEND
// Il2CppName: GLMCBKDJEND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)(bool)>(&MagicalActual::OrbusHealthBar::GLMCBKDJEND)> {
  static const MethodInfo* get() {
    static auto* IABIHMBDHBK = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "GLMCBKDJEND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IABIHMBDHBK});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_Surname
// Il2CppName: get_Surname
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_Surname)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_Surname", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::get_MaxValue
// Il2CppName: get_MaxValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::OrbusHealthBar::*)()>(&MagicalActual::OrbusHealthBar::get_MaxValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "get_MaxValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::OrbusHealthBar::HDDPGGOMLLL
// Il2CppName: HDDPGGOMLLL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::OrbusHealthBar::*)(bool)>(&MagicalActual::OrbusHealthBar::HDDPGGOMLLL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusHealthBar*), "HDDPGGOMLLL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
