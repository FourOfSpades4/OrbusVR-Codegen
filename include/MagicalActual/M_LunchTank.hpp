// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_LunchTank
  class M_LunchTank;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_LunchTank);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_LunchTank*, "MagicalActual", "M_LunchTank");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x49
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_LunchTank
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4710
  class M_LunchTank : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.GameObject vfxExploded
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* vfxExploded;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x30
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject wholeTank
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* wholeTank;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject brokenTank
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* brokenTank;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean PIGKINABECG
    // Size: 0x1
    // Offset: 0x48
    bool PIGKINABECG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.GameObject vfxExploded
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxExploded();
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public UnityEngine.GameObject wholeTank
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_wholeTank();
    // Get instance field reference: public UnityEngine.GameObject brokenTank
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_brokenTank();
    // Get instance field reference: private System.Boolean PIGKINABECG
    [[deprecated("Use field access instead!")]] bool& dyn_PIGKINABECG();
    // private System.Void BLDNGKHOIID(System.Object OMLPNCLFFMJ)
    // Offset: 0x2440B24
    void BLDNGKHOIID(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x2440E6C
    void BDEDGNGMHMN();
    // public System.Void Explode()
    // Offset: 0x2440BBC
    void Explode();
    // private System.Void DDABEPJBPMN(System.Object OMLPNCLFFMJ)
    // Offset: 0x2440F40
    void DDABEPJBPMN(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void KIDNJNOFOFF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24411F8
    void KIDNJNOFOFF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24412AC
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void BMPIKLBFKIP()
    // Offset: 0x2440EC8
    void BMPIKLBFKIP();
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2441360
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x2441414
    void CBMDGNKFPIO();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x2441470
    void NEDFCIDMJBB();
    // private System.Void PGCEBGGIDMA(System.Object OMLPNCLFFMJ)
    // Offset: 0x24414CC
    void PGCEBGGIDMA(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Start()
    // Offset: 0x2441564
    void Start();
    // public System.Void .ctor()
    // Offset: 0x24415C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_LunchTank* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_LunchTank::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_LunchTank*, creationType>()));
    }
    // private System.Void CFNMJKFDAOI()
    // Offset: 0x2441618
    void CFNMJKFDAOI();
    // public System.Void MJGOIILICDE()
    // Offset: 0x2440FD8
    void MJGOIILICDE();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x2441670
    void AFIACGLCIPB();
    // public System.Void AGKHMBHBNFM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24416CC
    void AGKHMBHBNFM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PMOJCEANELA(System.Object OMLPNCLFFMJ)
    // Offset: 0x2441780
    void PMOJCEANELA(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NHADFEMILCC()
    // Offset: 0x2441818
    void NHADFEMILCC();
    // public System.Void IOOBCJAJKCJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2441874
    void IOOBCJAJKCJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void MONCBOKMLEA(System.Object OMLPNCLFFMJ)
    // Offset: 0x2441928
    void MONCBOKMLEA(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void JOGPGAPOBBK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24419C0
    void JOGPGAPOBBK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void DGIKKMCHFGM(System.Object OMLPNCLFFMJ)
    // Offset: 0x2441A74
    void DGIKKMCHFGM(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void FELPKMBGFEC()
    // Offset: 0x2440DD4
    void FELPKMBGFEC();
    // private System.Void OCALNOEEPJK(System.Object OMLPNCLFFMJ)
    // Offset: 0x2441B0C
    void OCALNOEEPJK(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x2441BA4
    void MLGBKBMHHLE();
    // private System.Void MGIGOOFELCH(System.Object OMLPNCLFFMJ)
    // Offset: 0x2441C00
    void MGIGOOFELCH(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void EGJMIHFLOKP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2441C98
    void EGJMIHFLOKP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void LBNIKPDOGPK(System.Object OMLPNCLFFMJ)
    // Offset: 0x2441D4C
    void LBNIKPDOGPK(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void MMJIKEBHBJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2441DE4
    void MMJIKEBHBJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OHJOGJPPNLI(System.Object OMLPNCLFFMJ)
    // Offset: 0x2441E98
    void OHJOGJPPNLI(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void AKGFEENGKJD()
    // Offset: 0x2441F30
    void AKGFEENGKJD();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x2441F8C
    void PBEMGGBBDCK();
    // private System.Void DDOOFFHBJJN(System.Object OMLPNCLFFMJ)
    // Offset: 0x2441FE8
    void DDOOFFHBJJN(::Il2CppObject* OMLPNCLFFMJ);
  }; // MagicalActual.M_LunchTank
  #pragma pack(pop)
  static check_size<sizeof(M_LunchTank), 72 + sizeof(bool)> __MagicalActual_M_LunchTankSizeCheck;
  static_assert(sizeof(M_LunchTank) == 0x49);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::BLDNGKHOIID
// Il2CppName: BLDNGKHOIID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::Il2CppObject*)>(&MagicalActual::M_LunchTank::BLDNGKHOIID)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "BLDNGKHOIID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::Explode
// Il2CppName: Explode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::Explode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "Explode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::DDABEPJBPMN
// Il2CppName: DDABEPJBPMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::Il2CppObject*)>(&MagicalActual::M_LunchTank::DDABEPJBPMN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "DDABEPJBPMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::KIDNJNOFOFF
// Il2CppName: KIDNJNOFOFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_LunchTank::KIDNJNOFOFF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "KIDNJNOFOFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_LunchTank::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::BMPIKLBFKIP
// Il2CppName: BMPIKLBFKIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::BMPIKLBFKIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "BMPIKLBFKIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_LunchTank::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::PGCEBGGIDMA
// Il2CppName: PGCEBGGIDMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::Il2CppObject*)>(&MagicalActual::M_LunchTank::PGCEBGGIDMA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "PGCEBGGIDMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::CFNMJKFDAOI
// Il2CppName: CFNMJKFDAOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::CFNMJKFDAOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "CFNMJKFDAOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::MJGOIILICDE
// Il2CppName: MJGOIILICDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::MJGOIILICDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "MJGOIILICDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::AGKHMBHBNFM
// Il2CppName: AGKHMBHBNFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_LunchTank::AGKHMBHBNFM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "AGKHMBHBNFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::PMOJCEANELA
// Il2CppName: PMOJCEANELA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::Il2CppObject*)>(&MagicalActual::M_LunchTank::PMOJCEANELA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "PMOJCEANELA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::IOOBCJAJKCJ
// Il2CppName: IOOBCJAJKCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_LunchTank::IOOBCJAJKCJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "IOOBCJAJKCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::MONCBOKMLEA
// Il2CppName: MONCBOKMLEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::Il2CppObject*)>(&MagicalActual::M_LunchTank::MONCBOKMLEA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "MONCBOKMLEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::JOGPGAPOBBK
// Il2CppName: JOGPGAPOBBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_LunchTank::JOGPGAPOBBK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "JOGPGAPOBBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::DGIKKMCHFGM
// Il2CppName: DGIKKMCHFGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::Il2CppObject*)>(&MagicalActual::M_LunchTank::DGIKKMCHFGM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "DGIKKMCHFGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::FELPKMBGFEC
// Il2CppName: FELPKMBGFEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::FELPKMBGFEC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "FELPKMBGFEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::OCALNOEEPJK
// Il2CppName: OCALNOEEPJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::Il2CppObject*)>(&MagicalActual::M_LunchTank::OCALNOEEPJK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "OCALNOEEPJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::MGIGOOFELCH
// Il2CppName: MGIGOOFELCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::Il2CppObject*)>(&MagicalActual::M_LunchTank::MGIGOOFELCH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "MGIGOOFELCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::EGJMIHFLOKP
// Il2CppName: EGJMIHFLOKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_LunchTank::EGJMIHFLOKP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "EGJMIHFLOKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::LBNIKPDOGPK
// Il2CppName: LBNIKPDOGPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::Il2CppObject*)>(&MagicalActual::M_LunchTank::LBNIKPDOGPK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "LBNIKPDOGPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::MMJIKEBHBJF
// Il2CppName: MMJIKEBHBJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_LunchTank::MMJIKEBHBJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "MMJIKEBHBJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::OHJOGJPPNLI
// Il2CppName: OHJOGJPPNLI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::Il2CppObject*)>(&MagicalActual::M_LunchTank::OHJOGJPPNLI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "OHJOGJPPNLI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)()>(&MagicalActual::M_LunchTank::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LunchTank::DDOOFFHBJJN
// Il2CppName: DDOOFFHBJJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LunchTank::*)(::Il2CppObject*)>(&MagicalActual::M_LunchTank::DDOOFFHBJJN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LunchTank*), "DDOOFFHBJJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
