// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: IPlayerClass
#include "GlobalNamespace/IPlayerClass.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObscuredBool
#include "CodeStage/AntiCheat/ObscuredTypes/ObscuredBool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerCharacter
  class PlayerCharacter;
  // Forward declaring type: PlayerClass
  class PlayerClass;
  // Forward declaring type: OrbhealerArrow
  class OrbhealerArrow;
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: OrbhealerRotatingorb
  class OrbhealerRotatingorb;
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Animator
  class Animator;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: AudioSource
  class AudioSource;
  // Forward declaring type: AudioClip
  class AudioClip;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ClickedEventArgs
  struct ClickedEventArgs;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: BinaryWriter
  class BinaryWriter;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Orbhealer
  class Orbhealer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Orbhealer);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Orbhealer*, "MagicalActual", "Orbhealer");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x20E
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Orbhealer
  // [TokenAttribute] Offset: FFFFFFFF
  class Orbhealer : public ::UnityEngine::MonoBehaviour/*, public ::GlobalNamespace::IPlayerClass*/ {
    public:
    // Nested type: ::MagicalActual::Orbhealer::orbusNetMethodIdx
    struct orbusNetMethodIdx;
    // Nested type: ::MagicalActual::Orbhealer::orbusIncomingMethodIdx
    struct orbusIncomingMethodIdx;
    // Nested type: ::MagicalActual::Orbhealer::arrowSpellIdx
    struct arrowSpellIdx;
    // Nested type: ::MagicalActual::Orbhealer::$$c
    class $$c;
    // Nested type: ::MagicalActual::Orbhealer::$$c__DisplayClass99_0
    class $$c__DisplayClass99_0;
    // Nested type: ::MagicalActual::Orbhealer::$$c__DisplayClass107_0
    class $$c__DisplayClass107_0;
    // Nested type: ::MagicalActual::Orbhealer::$$c__DisplayClass109_0
    class $$c__DisplayClass109_0;
    public:
    // private System.Boolean HNFCLAFDJBD
    // Size: 0x1
    // Offset: 0x18
    bool HNFCLAFDJBD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HNFCLAFDJBD and: HCFELEODBLD
    char __padding0[0x7] = {};
    // private MagicalActual.PlayerCharacter HCFELEODBLD
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::PlayerCharacter* HCFELEODBLD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerCharacter*) == 0x8);
    // private MagicalActual.PlayerClass FNINBDEICCD
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::PlayerClass* FNINBDEICCD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerClass*) == 0x8);
    // private MagicalActual.OrbhealerArrow BFMPMGPHIAL
    // Size: 0x8
    // Offset: 0x30
    ::MagicalActual::OrbhealerArrow* BFMPMGPHIAL;
    // Field size check
    static_assert(sizeof(::MagicalActual::OrbhealerArrow*) == 0x8);
    // public UnityEngine.GameObject flyingArrowPrefab
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* flyingArrowPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxBlood
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* vfxBlood;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject[] vfxExplosions
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::UnityEngine::GameObject*> vfxExplosions;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject leftBow
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GameObject* leftBow;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject superVfx
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* superVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject gunFireVfx
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::GameObject* gunFireVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.Material defaultTurretMaterial
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Material* defaultTurretMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material redeployMaterial
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Material* redeployMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private UnityEngine.Animator IFDCDFKINIP
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::Animator* IFDCDFKINIP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animator*) == 0x8);
    // private UnityEngine.GameObject HDMKCGKJCLA
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::GameObject* HDMKCGKJCLA;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean HIKIBDCNDAA
    // Size: 0x1
    // Offset: 0x88
    bool HIKIBDCNDAA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HIKIBDCNDAA and: BIMDBFLIHFE
    char __padding14[0x7] = {};
    // private UnityEngine.UI.Image BIMDBFLIHFE
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::UI::Image* BIMDBFLIHFE;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private UnityEngine.UI.Image HNDFGKCHGNK
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::UI::Image* HNDFGKCHGNK;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private UnityEngine.UI.Image AJFDIIPGILB
    // Size: 0x8
    // Offset: 0xA0
    ::UnityEngine::UI::Image* AJFDIIPGILB;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private UnityEngine.Color JMJKIJDCPDF
    // Size: 0x10
    // Offset: 0xA8
    ::UnityEngine::Color JMJKIJDCPDF;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color OFJLNPFPAAD
    // Size: 0x10
    // Offset: 0xB8
    ::UnityEngine::Color OFJLNPFPAAD;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0xC8
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0xD0
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private System.Single IAIBPCPKDJE
    // Size: 0x4
    // Offset: 0xD8
    float IAIBPCPKDJE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single FABKFLBCALA
    // Size: 0x4
    // Offset: 0xDC
    float FABKFLBCALA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private MagicalActual.OrbhealerRotatingorb[] KMCCGJGACCL
    // Size: 0x8
    // Offset: 0xE0
    ::ArrayW<::MagicalActual::OrbhealerRotatingorb*> KMCCGJGACCL;
    // Field size check
    static_assert(sizeof(::ArrayW<::MagicalActual::OrbhealerRotatingorb*>) == 0x8);
    // public MagicalActual.OrbhealerRotatingorb[] rotatingOrbTemplates
    // Size: 0x8
    // Offset: 0xE8
    ::ArrayW<::MagicalActual::OrbhealerRotatingorb*> rotatingOrbTemplates;
    // Field size check
    static_assert(sizeof(::ArrayW<::MagicalActual::OrbhealerRotatingorb*>) == 0x8);
    // private MagicalActual.OrbhealerRotatingorb PCEDLPPNADD
    // Size: 0x8
    // Offset: 0xF0
    ::MagicalActual::OrbhealerRotatingorb* PCEDLPPNADD;
    // Field size check
    static_assert(sizeof(::MagicalActual::OrbhealerRotatingorb*) == 0x8);
    // public UnityEngine.GameObject bulletTrail
    // Size: 0x8
    // Offset: 0xF8
    ::UnityEngine::GameObject* bulletTrail;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Vector3[] ANIPNOADKLO
    // Size: 0x8
    // Offset: 0x100
    ::ArrayW<::UnityEngine::Vector3> ANIPNOADKLO;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector3>) == 0x8);
    // private UnityEngine.GameObject DJGBMGBIACC
    // Size: 0x8
    // Offset: 0x108
    ::UnityEngine::GameObject* DJGBMGBIACC;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject EIJPNPAILJO
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::GameObject* EIJPNPAILJO;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single POLLAOFOHEA
    // Size: 0x4
    // Offset: 0x118
    float POLLAOFOHEA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single NEGNHIHOOKD
    // Size: 0x4
    // Offset: 0x11C
    float NEGNHIHOOKD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.GameObject FIKHDMKMLAB
    // Size: 0x8
    // Offset: 0x120
    ::UnityEngine::GameObject* FIKHDMKMLAB;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject HCIJFOGINAI
    // Size: 0x8
    // Offset: 0x128
    ::UnityEngine::GameObject* HCIJFOGINAI;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single DPMAEKNLCHO
    // Size: 0x4
    // Offset: 0x130
    float DPMAEKNLCHO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single KMOCHJFANEP
    // Size: 0x4
    // Offset: 0x134
    float KMOCHJFANEP;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.GameObject HIPAEIODDMG
    // Size: 0x8
    // Offset: 0x138
    ::UnityEngine::GameObject* HIPAEIODDMG;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject thrownTurretPrefab
    // Size: 0x8
    // Offset: 0x140
    ::UnityEngine::GameObject* thrownTurretPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Transform MJIJELBANGO
    // Size: 0x8
    // Offset: 0x148
    ::UnityEngine::Transform* MJIJELBANGO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private System.Single AAJEKOOBJGB
    // Size: 0x4
    // Offset: 0x150
    float AAJEKOOBJGB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single KDEGPNCLAEI
    // Size: 0x4
    // Offset: 0x154
    float KDEGPNCLAEI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private MagicalActual.OrbhealerRotatingorb GBONJGCAKGN
    // Size: 0x8
    // Offset: 0x158
    ::MagicalActual::OrbhealerRotatingorb* GBONJGCAKGN;
    // Field size check
    static_assert(sizeof(::MagicalActual::OrbhealerRotatingorb*) == 0x8);
    // private UnityEngine.Vector3 EDMFJMGEKGI
    // Size: 0xC
    // Offset: 0x160
    ::UnityEngine::Vector3 EDMFJMGEKGI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion CPHDHODAFKP
    // Size: 0x10
    // Offset: 0x16C
    ::UnityEngine::Quaternion CPHDHODAFKP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // Padding between fields: CPHDHODAFKP and: lifewellPrefab
    char __padding44[0x4] = {};
    // public UnityEngine.GameObject lifewellPrefab
    // Size: 0x8
    // Offset: 0x180
    ::UnityEngine::GameObject* lifewellPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Transform HNGDCMCEOEI
    // Size: 0x8
    // Offset: 0x188
    ::UnityEngine::Transform* HNGDCMCEOEI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.AudioSource BPFOFPNPABM
    // Size: 0x8
    // Offset: 0x190
    ::UnityEngine::AudioSource* BPFOFPNPABM;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioSource*) == 0x8);
    // public UnityEngine.AudioClip gunFireSfx
    // Size: 0x8
    // Offset: 0x198
    ::UnityEngine::AudioClip* gunFireSfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioClip*) == 0x8);
    // private System.Single KPHINAFCLPC
    // Size: 0x4
    // Offset: 0x1A0
    float KPHINAFCLPC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single FMKGICEALKG
    // Size: 0x4
    // Offset: 0x1A4
    float FMKGICEALKG;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean GCCMBLOGLBA
    // Size: 0x1
    // Offset: 0x1A8
    bool GCCMBLOGLBA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GHBBMIFHKGO
    // Size: 0x1
    // Offset: 0x1A9
    bool GHBBMIFHKGO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: GHBBMIFHKGO and: CCEMBLKGKLN
    char __padding52[0x6] = {};
    // private UnityEngine.GameObject CCEMBLKGKLN
    // Size: 0x8
    // Offset: 0x1B0
    ::UnityEngine::GameObject* CCEMBLKGKLN;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject GKJEHAKEABK
    // Size: 0x8
    // Offset: 0x1B8
    ::UnityEngine::GameObject* GKJEHAKEABK;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Int32 GJJDIJAFLGA
    // Size: 0x4
    // Offset: 0x1C0
    int GJJDIJAFLGA;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single AEIDEJKFCGP
    // Size: 0x4
    // Offset: 0x1C4
    float AEIDEJKFCGP;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single AMEBJBGOCEK
    // Size: 0x4
    // Offset: 0x1C8
    float AMEBJBGOCEK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single COJHGLFBONC
    // Size: 0x4
    // Offset: 0x1CC
    float COJHGLFBONC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single IAJJMOHNBDC
    // Size: 0x4
    // Offset: 0x1D0
    float IAJJMOHNBDC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean HKFNOIINMNG
    // Size: 0x1
    // Offset: 0x1D4
    bool HKFNOIINMNG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean OIBFBGGJODG
    // Size: 0x1
    // Offset: 0x1D5
    bool OIBFBGGJODG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: OIBFBGGJODG and: chargeUpVFX
    char __padding61[0x2] = {};
    // private UnityEngine.GameObject chargeUpVFX
    // Size: 0x8
    // Offset: 0x1D8
    ::UnityEngine::GameObject* chargeUpVFX;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Transform[] BNOIKKALNCM
    // Size: 0x8
    // Offset: 0x1E0
    ::ArrayW<::UnityEngine::Transform*> BNOIKKALNCM;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Transform*>) == 0x8);
    // private MagicalActual.PlayerAvatar EENJNFDNJBD
    // Size: 0x8
    // Offset: 0x1E8
    ::MagicalActual::PlayerAvatar* EENJNFDNJBD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE35F0
    // private System.Byte <LENLAPNMNAI>k__BackingField
    // Size: 0x1
    // Offset: 0x1F0
    uint8_t LENLAPNMNAI;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: LENLAPNMNAI and: COLMMMMCHPF
    char __padding65[0x3] = {};
    // private System.Int32 COLMMMMCHPF
    // Size: 0x4
    // Offset: 0x1F4
    int COLMMMMCHPF;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean MLNOLMKEKHH
    // Size: 0x1
    // Offset: 0x1F8
    bool MLNOLMKEKHH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean KAJCMPLNHPB
    // Size: 0x1
    // Offset: 0x1F9
    bool KAJCMPLNHPB;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Byte DHKDOGJAOIG
    // Size: 0x1
    // Offset: 0x1FA
    uint8_t DHKDOGJAOIG;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte AMEHAHENPCD
    // Size: 0x1
    // Offset: 0x1FB
    uint8_t AMEHAHENPCD;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte OPOBPKDLAHC
    // Size: 0x1
    // Offset: 0x1FC
    uint8_t OPOBPKDLAHC;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte OFLDKIABLBN
    // Size: 0x1
    // Offset: 0x1FD
    uint8_t OFLDKIABLBN;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte LONFMBGCIHF
    // Size: 0x1
    // Offset: 0x1FE
    uint8_t LONFMBGCIHF;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Boolean EDPJBJOGLIK
    // Size: 0x1
    // Offset: 0x1FF
    bool EDPJBJOGLIK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private CodeStage.AntiCheat.ObscuredTypes.ObscuredBool MDMKEEIPOMI
    // Size: 0xB
    // Offset: 0x200
    ::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool MDMKEEIPOMI;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool) == 0xB);
    // Padding between fields: MDMKEEIPOMI and: OAKHDAAFGCB
    char __padding75[0x1] = {};
    // private System.Boolean OAKHDAAFGCB
    // Size: 0x1
    // Offset: 0x20C
    bool OAKHDAAFGCB;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean hasOneForAll
    // Size: 0x1
    // Offset: 0x20D
    bool hasOneForAll;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IPlayerClass
    operator ::GlobalNamespace::IPlayerClass() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IPlayerClass*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Boolean HNFCLAFDJBD
    [[deprecated("Use field access instead!")]] bool& dyn_HNFCLAFDJBD();
    // Get instance field reference: private MagicalActual.PlayerCharacter HCFELEODBLD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerCharacter*& dyn_HCFELEODBLD();
    // Get instance field reference: private MagicalActual.PlayerClass FNINBDEICCD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerClass*& dyn_FNINBDEICCD();
    // Get instance field reference: private MagicalActual.OrbhealerArrow BFMPMGPHIAL
    [[deprecated("Use field access instead!")]] ::MagicalActual::OrbhealerArrow*& dyn_BFMPMGPHIAL();
    // Get instance field reference: public UnityEngine.GameObject flyingArrowPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_flyingArrowPrefab();
    // Get instance field reference: public UnityEngine.GameObject vfxBlood
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxBlood();
    // Get instance field reference: public UnityEngine.GameObject[] vfxExplosions
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_vfxExplosions();
    // Get instance field reference: public UnityEngine.GameObject leftBow
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_leftBow();
    // Get instance field reference: public UnityEngine.GameObject superVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_superVfx();
    // Get instance field reference: public UnityEngine.GameObject gunFireVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_gunFireVfx();
    // Get instance field reference: public UnityEngine.Material defaultTurretMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_defaultTurretMaterial();
    // Get instance field reference: public UnityEngine.Material redeployMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_redeployMaterial();
    // Get instance field reference: private UnityEngine.Animator IFDCDFKINIP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& dyn_IFDCDFKINIP();
    // Get instance field reference: private UnityEngine.GameObject HDMKCGKJCLA
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_HDMKCGKJCLA();
    // Get instance field reference: private System.Boolean HIKIBDCNDAA
    [[deprecated("Use field access instead!")]] bool& dyn_HIKIBDCNDAA();
    // Get instance field reference: private UnityEngine.UI.Image BIMDBFLIHFE
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_BIMDBFLIHFE();
    // Get instance field reference: private UnityEngine.UI.Image HNDFGKCHGNK
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_HNDFGKCHGNK();
    // Get instance field reference: private UnityEngine.UI.Image AJFDIIPGILB
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_AJFDIIPGILB();
    // Get instance field reference: private UnityEngine.Color JMJKIJDCPDF
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_JMJKIJDCPDF();
    // Get instance field reference: private UnityEngine.Color OFJLNPFPAAD
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_OFJLNPFPAAD();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private System.Single IAIBPCPKDJE
    [[deprecated("Use field access instead!")]] float& dyn_IAIBPCPKDJE();
    // Get instance field reference: private System.Single FABKFLBCALA
    [[deprecated("Use field access instead!")]] float& dyn_FABKFLBCALA();
    // Get instance field reference: private MagicalActual.OrbhealerRotatingorb[] KMCCGJGACCL
    [[deprecated("Use field access instead!")]] ::ArrayW<::MagicalActual::OrbhealerRotatingorb*>& dyn_KMCCGJGACCL();
    // Get instance field reference: public MagicalActual.OrbhealerRotatingorb[] rotatingOrbTemplates
    [[deprecated("Use field access instead!")]] ::ArrayW<::MagicalActual::OrbhealerRotatingorb*>& dyn_rotatingOrbTemplates();
    // Get instance field reference: private MagicalActual.OrbhealerRotatingorb PCEDLPPNADD
    [[deprecated("Use field access instead!")]] ::MagicalActual::OrbhealerRotatingorb*& dyn_PCEDLPPNADD();
    // Get instance field reference: public UnityEngine.GameObject bulletTrail
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_bulletTrail();
    // Get instance field reference: private UnityEngine.Vector3[] ANIPNOADKLO
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& dyn_ANIPNOADKLO();
    // Get instance field reference: private UnityEngine.GameObject DJGBMGBIACC
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_DJGBMGBIACC();
    // Get instance field reference: private UnityEngine.GameObject EIJPNPAILJO
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_EIJPNPAILJO();
    // Get instance field reference: private System.Single POLLAOFOHEA
    [[deprecated("Use field access instead!")]] float& dyn_POLLAOFOHEA();
    // Get instance field reference: private System.Single NEGNHIHOOKD
    [[deprecated("Use field access instead!")]] float& dyn_NEGNHIHOOKD();
    // Get instance field reference: private UnityEngine.GameObject FIKHDMKMLAB
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_FIKHDMKMLAB();
    // Get instance field reference: private UnityEngine.GameObject HCIJFOGINAI
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_HCIJFOGINAI();
    // Get instance field reference: private System.Single DPMAEKNLCHO
    [[deprecated("Use field access instead!")]] float& dyn_DPMAEKNLCHO();
    // Get instance field reference: private System.Single KMOCHJFANEP
    [[deprecated("Use field access instead!")]] float& dyn_KMOCHJFANEP();
    // Get instance field reference: private UnityEngine.GameObject HIPAEIODDMG
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_HIPAEIODDMG();
    // Get instance field reference: public UnityEngine.GameObject thrownTurretPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_thrownTurretPrefab();
    // Get instance field reference: private UnityEngine.Transform MJIJELBANGO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_MJIJELBANGO();
    // Get instance field reference: private System.Single AAJEKOOBJGB
    [[deprecated("Use field access instead!")]] float& dyn_AAJEKOOBJGB();
    // Get instance field reference: private System.Single KDEGPNCLAEI
    [[deprecated("Use field access instead!")]] float& dyn_KDEGPNCLAEI();
    // Get instance field reference: private MagicalActual.OrbhealerRotatingorb GBONJGCAKGN
    [[deprecated("Use field access instead!")]] ::MagicalActual::OrbhealerRotatingorb*& dyn_GBONJGCAKGN();
    // Get instance field reference: private UnityEngine.Vector3 EDMFJMGEKGI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_EDMFJMGEKGI();
    // Get instance field reference: private UnityEngine.Quaternion CPHDHODAFKP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_CPHDHODAFKP();
    // Get instance field reference: public UnityEngine.GameObject lifewellPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_lifewellPrefab();
    // Get instance field reference: private UnityEngine.Transform HNGDCMCEOEI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_HNGDCMCEOEI();
    // Get instance field reference: private UnityEngine.AudioSource BPFOFPNPABM
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& dyn_BPFOFPNPABM();
    // Get instance field reference: public UnityEngine.AudioClip gunFireSfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& dyn_gunFireSfx();
    // Get instance field reference: private System.Single KPHINAFCLPC
    [[deprecated("Use field access instead!")]] float& dyn_KPHINAFCLPC();
    // Get instance field reference: private System.Single FMKGICEALKG
    [[deprecated("Use field access instead!")]] float& dyn_FMKGICEALKG();
    // Get instance field reference: private System.Boolean GCCMBLOGLBA
    [[deprecated("Use field access instead!")]] bool& dyn_GCCMBLOGLBA();
    // Get instance field reference: private System.Boolean GHBBMIFHKGO
    [[deprecated("Use field access instead!")]] bool& dyn_GHBBMIFHKGO();
    // Get instance field reference: private UnityEngine.GameObject CCEMBLKGKLN
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_CCEMBLKGKLN();
    // Get instance field reference: private UnityEngine.GameObject GKJEHAKEABK
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_GKJEHAKEABK();
    // Get instance field reference: private System.Int32 GJJDIJAFLGA
    [[deprecated("Use field access instead!")]] int& dyn_GJJDIJAFLGA();
    // Get instance field reference: private System.Single AEIDEJKFCGP
    [[deprecated("Use field access instead!")]] float& dyn_AEIDEJKFCGP();
    // Get instance field reference: private System.Single AMEBJBGOCEK
    [[deprecated("Use field access instead!")]] float& dyn_AMEBJBGOCEK();
    // Get instance field reference: private System.Single COJHGLFBONC
    [[deprecated("Use field access instead!")]] float& dyn_COJHGLFBONC();
    // Get instance field reference: private System.Single IAJJMOHNBDC
    [[deprecated("Use field access instead!")]] float& dyn_IAJJMOHNBDC();
    // Get instance field reference: private System.Boolean HKFNOIINMNG
    [[deprecated("Use field access instead!")]] bool& dyn_HKFNOIINMNG();
    // Get instance field reference: private System.Boolean OIBFBGGJODG
    [[deprecated("Use field access instead!")]] bool& dyn_OIBFBGGJODG();
    // Get instance field reference: private UnityEngine.GameObject chargeUpVFX
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_chargeUpVFX();
    // Get instance field reference: private UnityEngine.Transform[] BNOIKKALNCM
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& dyn_BNOIKKALNCM();
    // Get instance field reference: private MagicalActual.PlayerAvatar EENJNFDNJBD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_EENJNFDNJBD();
    // Get instance field reference: private System.Byte <LENLAPNMNAI>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$LENLAPNMNAI$k__BackingField();
    // Get instance field reference: private System.Int32 COLMMMMCHPF
    [[deprecated("Use field access instead!")]] int& dyn_COLMMMMCHPF();
    // Get instance field reference: private System.Boolean MLNOLMKEKHH
    [[deprecated("Use field access instead!")]] bool& dyn_MLNOLMKEKHH();
    // Get instance field reference: private System.Boolean KAJCMPLNHPB
    [[deprecated("Use field access instead!")]] bool& dyn_KAJCMPLNHPB();
    // Get instance field reference: private System.Byte DHKDOGJAOIG
    [[deprecated("Use field access instead!")]] uint8_t& dyn_DHKDOGJAOIG();
    // Get instance field reference: private System.Byte AMEHAHENPCD
    [[deprecated("Use field access instead!")]] uint8_t& dyn_AMEHAHENPCD();
    // Get instance field reference: private System.Byte OPOBPKDLAHC
    [[deprecated("Use field access instead!")]] uint8_t& dyn_OPOBPKDLAHC();
    // Get instance field reference: private System.Byte OFLDKIABLBN
    [[deprecated("Use field access instead!")]] uint8_t& dyn_OFLDKIABLBN();
    // Get instance field reference: private System.Byte LONFMBGCIHF
    [[deprecated("Use field access instead!")]] uint8_t& dyn_LONFMBGCIHF();
    // Get instance field reference: private System.Boolean EDPJBJOGLIK
    [[deprecated("Use field access instead!")]] bool& dyn_EDPJBJOGLIK();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObscuredBool MDMKEEIPOMI
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObscuredBool& dyn_MDMKEEIPOMI();
    // Get instance field reference: private System.Boolean OAKHDAAFGCB
    [[deprecated("Use field access instead!")]] bool& dyn_OAKHDAAFGCB();
    // Get instance field reference: public System.Boolean hasOneForAll
    [[deprecated("Use field access instead!")]] bool& dyn_hasOneForAll();
    // private System.Void SwitchWeaponHand(System.Byte DBJMBLGLHIH)
    // Offset: 0xEE3298
    void SwitchWeaponHand(uint8_t DBJMBLGLHIH);
    // private System.Void IDBPAJPIPFJ()
    // Offset: 0xEE33C4
    void IDBPAJPIPFJ();
    // private System.Void IEAKMOHIBDD()
    // Offset: 0xEE3B94
    void IEAKMOHIBDD();
    // private System.Void OKAPPDPDNLJ(System.Object OMLPNCLFFMJ)
    // Offset: 0xEE3CA0
    void OKAPPDPDNLJ(::Il2CppObject* OMLPNCLFFMJ);
    // public UnityEngine.GameObject GetWeaponSkin()
    // Offset: 0xEE41DC
    ::UnityEngine::GameObject* GetWeaponSkin();
    // private System.Void Start()
    // Offset: 0xEE4354
    void Start();
    // private System.Void DDLNCFDNKEE()
    // Offset: 0xEE47AC
    void DDLNCFDNKEE();
    // private System.Void AFLBMBLEHLF(System.Object OMLPNCLFFMJ)
    // Offset: 0xEE486C
    void AFLBMBLEHLF(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void ENIGECPOHND(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xEE49B4
    void ENIGECPOHND(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void NKMCAILACPN(System.Object OMLPNCLFFMJ)
    // Offset: 0xEE4D68
    void NKMCAILACPN(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void orbusNetCleanup(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0xEE4EB0
    void orbusNetCleanup(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void WeaponAdjusted()
    // Offset: 0xEE4F4C
    void WeaponAdjusted();
    // private System.Void GBCHLGNALEH(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xEE4F50
    void GBCHLGNALEH(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void EOLPPEPPGJJ()
    // Offset: 0xEE4CE8
    void EOLPPEPPGJJ();
    // private System.Void EKEOIECPIFA()
    // Offset: 0xEE53CC
    void EKEOIECPIFA();
    // public System.Void EmpowerTurret()
    // Offset: 0xEE5C74
    void EmpowerTurret();
    // private System.Boolean IEHJHIECGEA()
    // Offset: 0xEE5CF8
    bool IEHJHIECGEA();
    // private System.Void CNOBLOPAKPN(System.Int32 ABLOIPMGEJL, System.Byte LNEMPDHOLME)
    // Offset: 0xEE3DE8
    void CNOBLOPAKPN(int ABLOIPMGEJL, uint8_t LNEMPDHOLME);
    // private System.Void LMPGKPONKNJ(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xEE5D30
    void LMPGKPONKNJ(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void OnDestroy()
    // Offset: 0xEE621C
    void OnDestroy();
    // private System.Void PMJKAMHAGFL(System.Object OMLPNCLFFMJ)
    // Offset: 0xEE62DC
    void PMJKAMHAGFL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Boolean CIBDJNJGODA()
    // Offset: 0xEE4D30
    bool CIBDJNJGODA();
    // public System.Void SuperStatusChange(System.Boolean AALBHOKGIOD)
    // Offset: 0xEE6424
    void SuperStatusChange(bool AALBHOKGIOD);
    // public System.Void ToggleAdjustWeapon()
    // Offset: 0xEE64A4
    void ToggleAdjustWeapon();
    // public System.Void ClassEnabled()
    // Offset: 0xEE685C
    void ClassEnabled();
    // public System.Void CMGMKAOPJIP(UnityEngine.Vector3 NHFBFBMNPFC)
    // Offset: 0xEE68D4
    void CMGMKAOPJIP(::UnityEngine::Vector3 NHFBFBMNPFC);
    // private System.Void OKOGBDKKEGL(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xEE69D0
    void OKOGBDKKEGL(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void JCEOHIIBEOM(UnityEngine.Vector3 NHFBFBMNPFC, UnityEngine.Vector3 NKJBILNNJNP, System.Byte FJAOBANAPOB, System.Byte LNEMPDHOLME, System.Int32 ENMLJMBHBHE)
    // Offset: 0xEE5688
    void JCEOHIIBEOM(::UnityEngine::Vector3 NHFBFBMNPFC, ::UnityEngine::Vector3 NKJBILNNJNP, uint8_t FJAOBANAPOB, uint8_t LNEMPDHOLME, int ENMLJMBHBHE);
    // private System.Void LKFJIEIKOGM()
    // Offset: 0xEE6D48
    void LKFJIEIKOGM();
    // private System.Void FBNLDDMCEDG(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xEE7414
    void FBNLDDMCEDG(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void JDKHBKANBCO(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xEE75DC
    void JDKHBKANBCO(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void AADBALKKOEA()
    // Offset: 0xEE5114
    void AADBALKKOEA();
    // public UnityEngine.GameObject GetWeaponObject()
    // Offset: 0xEE6854
    ::UnityEngine::GameObject* GetWeaponObject();
    // private System.Void JDMHFOMIHFL()
    // Offset: 0xEE7664
    void JDMHFOMIHFL();
    // private System.Void BMEJPPJPMMI(System.Byte DBJMBLGLHIH)
    // Offset: 0xEE76B0
    void BMEJPPJPMMI(uint8_t DBJMBLGLHIH);
    // public System.Byte get_turretType()
    // Offset: 0xEE46C8
    uint8_t get_turretType();
    // public System.Void EMDNBNDPIDE()
    // Offset: 0xEE77DC
    void EMDNBNDPIDE();
    // private System.Void FDFMHLJJFFM(System.Object OMLPNCLFFMJ)
    // Offset: 0xEE7B94
    void FDFMHLJJFFM(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void PJOIJIEDPMP()
    // Offset: 0xEE7CDC
    void PJOIJIEDPMP();
    // public System.Void KOEGFEMBLIB(UnityEngine.GameObject FMJNABNGEBJ)
    // Offset: 0xEE868C
    void KOEGFEMBLIB(::UnityEngine::GameObject* FMJNABNGEBJ);
    // private System.Void DCLNJKEBEPI(System.Object OMLPNCLFFMJ)
    // Offset: 0xEE87D0
    void DCLNJKEBEPI(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void DisablePrimaryWeapon()
    // Offset: 0xEE8918
    void DisablePrimaryWeapon();
    // public System.Void AEHPEHBALJP()
    // Offset: 0xEE8C1C
    void AEHPEHBALJP();
    // public UnityEngine.GameObject AOMEIBOAPCB()
    // Offset: 0xEE7B8C
    ::UnityEngine::GameObject* AOMEIBOAPCB();
    // private System.Void MPMGBCMBBIN(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xEE8FCC
    void MPMGBCMBBIN(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // public System.Void EIFOJFDHHJK(System.Boolean AALBHOKGIOD)
    // Offset: 0xEE9190
    void EIFOJFDHHJK(bool AALBHOKGIOD);
    // private System.Void OnDisable()
    // Offset: 0xEE91EC
    void OnDisable();
    // public System.Void .ctor()
    // Offset: 0xEE961C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Orbhealer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Orbhealer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Orbhealer*, creationType>()));
    }
    // private System.Void NECNFGEPEKJ(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0xEE9748
    void NECNFGEPEKJ(::System::IO::BinaryWriter* FFJEENIEPJH);
    // public System.Void AvatarEquipmentChanged()
    // Offset: 0xEE9784
    void AvatarEquipmentChanged();
    // private System.Void LJOEOBPMKLH()
    // Offset: 0xEE9A00
    void LJOEOBPMKLH();
    // private System.Void PENMIFNJODO(System.Object OMLPNCLFFMJ)
    // Offset: 0xEE9CDC
    void PENMIFNJODO(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void IFHJPPOELKK(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0xEE9FB8
    void IFHJPPOELKK(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void DEPHOOHAGLM(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0xEEA2E8
    void DEPHOOHAGLM(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void OCLEKGPLCAF()
    // Offset: 0xEEA324
    void OCLEKGPLCAF();
    // private System.Void BJPECENBMMP()
    // Offset: 0xEEA7CC
    void BJPECENBMMP();
    // public System.Void TurretFinishedSpawning(UnityEngine.GameObject FMJNABNGEBJ)
    // Offset: 0xEEAF2C
    void TurretFinishedSpawning(::UnityEngine::GameObject* FMJNABNGEBJ);
    // private System.Void LICDEMPFNCK()
    // Offset: 0xEE6CFC
    void LICDEMPFNCK();
    // private System.Void CGBJOOEMENA()
    // Offset: 0xEE386C
    void CGBJOOEMENA();
    // public System.Void FKGIJLHEMDP()
    // Offset: 0xEEB068
    void FKGIJLHEMDP();
    // public System.Void ShowHitEffect(UnityEngine.Vector3 NHFBFBMNPFC)
    // Offset: 0xEE6120
    void ShowHitEffect(::UnityEngine::Vector3 NHFBFBMNPFC);
    // public System.Void ToggleTurretType()
    // Offset: 0xEEB0E8
    void ToggleTurretType();
    // private System.Void FKJHENPPAGK(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0xEEB1C0
    void FKJHENPPAGK(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void PAAHAHAOKBN(System.Object OMLPNCLFFMJ)
    // Offset: 0xEEB1FC
    void PAAHAHAOKBN(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void GIPNGLJHDAN(UnityEngine.Vector3 NHFBFBMNPFC)
    // Offset: 0xEEB2D8
    void GIPNGLJHDAN(::UnityEngine::Vector3 NHFBFBMNPFC);
    // private System.Void DisableSecondaryWeapon()
    // Offset: 0xEE9558
    void DisableSecondaryWeapon();
    // private System.Void Awake()
    // Offset: 0xEEB3D4
    void Awake();
    // private System.Void LateUpdate()
    // Offset: 0xEEBA38
    void LateUpdate();
    // private System.Void MGGMJFCIIFA(System.Object OMLPNCLFFMJ)
    // Offset: 0xEEBF2C
    void MGGMJFCIIFA(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void OLGCIPCDCBB(System.Boolean AALBHOKGIOD)
    // Offset: 0xEEBF98
    void OLGCIPCDCBB(bool AALBHOKGIOD);
    // public System.Void DLSPERSDFA(System.UInt16 FNOCLFOKDFG, UnityEngine.Vector3 DLLPCCKKJGD, System.Int32 ENMLJMBHBHE)
    // Offset: 0xEEBFF4
    void DLSPERSDFA(uint16_t FNOCLFOKDFG, ::UnityEngine::Vector3 DLLPCCKKJGD, int ENMLJMBHBHE);
    // private System.Void FixedUpdate()
    // Offset: 0xEEC140
    void FixedUpdate();
    // private System.Void LEAKGMMDFCH(System.Object OMLPNCLFFMJ)
    // Offset: 0xEEC9DC
    void LEAKGMMDFCH(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void ADPNCDJNJEC()
    // Offset: 0xEECB44
    void ADPNCDJNJEC();
    // private System.Void LKMDAOANCAH()
    // Offset: 0xEE8588
    void LKMDAOANCAH();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0xEECC50
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void BKLLIDDEIMI(System.Object OMLPNCLFFMJ)
    // Offset: 0xEED218
    void BKLLIDDEIMI(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void IPGJKEGCIBA()
    // Offset: 0xEEBA8C
    void IPGJKEGCIBA();
    // private System.Void KOBKNLOLDDA()
    // Offset: 0xEEA820
    void KOBKNLOLDDA();
    // private System.Void IJPENLKCGEC()
    // Offset: 0xEE46D0
    void IJPENLKCGEC();
    // private System.Void DANONFOIHJM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xEED360
    void DANONFOIHJM(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void EnablePrimaryWeapon()
    // Offset: 0xEED524
    void EnablePrimaryWeapon();
    // private System.Void NLGHKBAEMII(System.Object OMLPNCLFFMJ)
    // Offset: 0xEED7DC
    void NLGHKBAEMII(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void NPNEIAFEMLJ()
    // Offset: 0xEED944
    void NPNEIAFEMLJ();
    // private System.Void DNBFOFMIHEG(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0xEEDA04
    void DNBFOFMIHEG(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void EOKAOLBCMEM(System.Byte MMMEIONJJFJ)
    // Offset: 0xEE46C0
    void EOKAOLBCMEM(uint8_t MMMEIONJJFJ);
    // private System.Void EnableSecondaryWeapon()
    // Offset: 0xEEDDC8
    void EnableSecondaryWeapon();
    // public System.Void ClassDisabled()
    // Offset: 0xEEDE88
    void ClassDisabled();
    // private System.Void MHBPADEPAFE(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0xEEDE8C
    void MHBPADEPAFE(::System::IO::BinaryWriter* FFJEENIEPJH);
  }; // MagicalActual.Orbhealer
  #pragma pack(pop)
  static check_size<sizeof(Orbhealer), 525 + sizeof(bool)> __MagicalActual_OrbhealerSizeCheck;
  static_assert(sizeof(Orbhealer) == 0x20E);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Orbhealer::SwitchWeaponHand
// Il2CppName: SwitchWeaponHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(uint8_t)>(&MagicalActual::Orbhealer::SwitchWeaponHand)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "SwitchWeaponHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::IDBPAJPIPFJ
// Il2CppName: IDBPAJPIPFJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::IDBPAJPIPFJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "IDBPAJPIPFJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::IEAKMOHIBDD
// Il2CppName: IEAKMOHIBDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::IEAKMOHIBDD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "IEAKMOHIBDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::OKAPPDPDNLJ
// Il2CppName: OKAPPDPDNLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::OKAPPDPDNLJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "OKAPPDPDNLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::GetWeaponSkin
// Il2CppName: GetWeaponSkin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::GetWeaponSkin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "GetWeaponSkin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::DDLNCFDNKEE
// Il2CppName: DDLNCFDNKEE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::DDLNCFDNKEE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "DDLNCFDNKEE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::AFLBMBLEHLF
// Il2CppName: AFLBMBLEHLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::AFLBMBLEHLF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "AFLBMBLEHLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::ENIGECPOHND
// Il2CppName: ENIGECPOHND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Orbhealer::ENIGECPOHND)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "ENIGECPOHND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::NKMCAILACPN
// Il2CppName: NKMCAILACPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::NKMCAILACPN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "NKMCAILACPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::orbusNetCleanup
// Il2CppName: orbusNetCleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Orbhealer::orbusNetCleanup)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "orbusNetCleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::WeaponAdjusted
// Il2CppName: WeaponAdjusted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::WeaponAdjusted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "WeaponAdjusted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::GBCHLGNALEH
// Il2CppName: GBCHLGNALEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Orbhealer::GBCHLGNALEH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "GBCHLGNALEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::EOLPPEPPGJJ
// Il2CppName: EOLPPEPPGJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::EOLPPEPPGJJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "EOLPPEPPGJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::EKEOIECPIFA
// Il2CppName: EKEOIECPIFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::EKEOIECPIFA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "EKEOIECPIFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::EmpowerTurret
// Il2CppName: EmpowerTurret
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::EmpowerTurret)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "EmpowerTurret", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::IEHJHIECGEA
// Il2CppName: IEHJHIECGEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::IEHJHIECGEA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "IEHJHIECGEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::CNOBLOPAKPN
// Il2CppName: CNOBLOPAKPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(int, uint8_t)>(&MagicalActual::Orbhealer::CNOBLOPAKPN)> {
  static const MethodInfo* get() {
    static auto* ABLOIPMGEJL = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "CNOBLOPAKPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ABLOIPMGEJL, LNEMPDHOLME});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::LMPGKPONKNJ
// Il2CppName: LMPGKPONKNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Orbhealer::LMPGKPONKNJ)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "LMPGKPONKNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::PMJKAMHAGFL
// Il2CppName: PMJKAMHAGFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::PMJKAMHAGFL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "PMJKAMHAGFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::CIBDJNJGODA
// Il2CppName: CIBDJNJGODA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::CIBDJNJGODA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "CIBDJNJGODA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::SuperStatusChange
// Il2CppName: SuperStatusChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(bool)>(&MagicalActual::Orbhealer::SuperStatusChange)> {
  static const MethodInfo* get() {
    static auto* AALBHOKGIOD = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "SuperStatusChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AALBHOKGIOD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::ToggleAdjustWeapon
// Il2CppName: ToggleAdjustWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::ToggleAdjustWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "ToggleAdjustWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::ClassEnabled
// Il2CppName: ClassEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::ClassEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "ClassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::CMGMKAOPJIP
// Il2CppName: CMGMKAOPJIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::UnityEngine::Vector3)>(&MagicalActual::Orbhealer::CMGMKAOPJIP)> {
  static const MethodInfo* get() {
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "CMGMKAOPJIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHFBFBMNPFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::OKOGBDKKEGL
// Il2CppName: OKOGBDKKEGL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Orbhealer::OKOGBDKKEGL)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "OKOGBDKKEGL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::JCEOHIIBEOM
// Il2CppName: JCEOHIIBEOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, uint8_t, uint8_t, int)>(&MagicalActual::Orbhealer::JCEOHIIBEOM)> {
  static const MethodInfo* get() {
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* FJAOBANAPOB = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* LNEMPDHOLME = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* ENMLJMBHBHE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "JCEOHIIBEOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHFBFBMNPFC, NKJBILNNJNP, FJAOBANAPOB, LNEMPDHOLME, ENMLJMBHBHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::LKFJIEIKOGM
// Il2CppName: LKFJIEIKOGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::LKFJIEIKOGM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "LKFJIEIKOGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::FBNLDDMCEDG
// Il2CppName: FBNLDDMCEDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Orbhealer::FBNLDDMCEDG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "FBNLDDMCEDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::JDKHBKANBCO
// Il2CppName: JDKHBKANBCO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Orbhealer::JDKHBKANBCO)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "JDKHBKANBCO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::AADBALKKOEA
// Il2CppName: AADBALKKOEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::AADBALKKOEA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "AADBALKKOEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::GetWeaponObject
// Il2CppName: GetWeaponObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::GetWeaponObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "GetWeaponObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::JDMHFOMIHFL
// Il2CppName: JDMHFOMIHFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::JDMHFOMIHFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "JDMHFOMIHFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::BMEJPPJPMMI
// Il2CppName: BMEJPPJPMMI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(uint8_t)>(&MagicalActual::Orbhealer::BMEJPPJPMMI)> {
  static const MethodInfo* get() {
    static auto* DBJMBLGLHIH = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "BMEJPPJPMMI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DBJMBLGLHIH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::get_turretType
// Il2CppName: get_turretType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::get_turretType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "get_turretType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::EMDNBNDPIDE
// Il2CppName: EMDNBNDPIDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::EMDNBNDPIDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "EMDNBNDPIDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::FDFMHLJJFFM
// Il2CppName: FDFMHLJJFFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::FDFMHLJJFFM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "FDFMHLJJFFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::PJOIJIEDPMP
// Il2CppName: PJOIJIEDPMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::PJOIJIEDPMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "PJOIJIEDPMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::KOEGFEMBLIB
// Il2CppName: KOEGFEMBLIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::UnityEngine::GameObject*)>(&MagicalActual::Orbhealer::KOEGFEMBLIB)> {
  static const MethodInfo* get() {
    static auto* FMJNABNGEBJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "KOEGFEMBLIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FMJNABNGEBJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::DCLNJKEBEPI
// Il2CppName: DCLNJKEBEPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::DCLNJKEBEPI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "DCLNJKEBEPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::DisablePrimaryWeapon
// Il2CppName: DisablePrimaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::DisablePrimaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "DisablePrimaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::AEHPEHBALJP
// Il2CppName: AEHPEHBALJP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::AEHPEHBALJP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "AEHPEHBALJP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::AOMEIBOAPCB
// Il2CppName: AOMEIBOAPCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::AOMEIBOAPCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "AOMEIBOAPCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::MPMGBCMBBIN
// Il2CppName: MPMGBCMBBIN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Orbhealer::MPMGBCMBBIN)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "MPMGBCMBBIN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::EIFOJFDHHJK
// Il2CppName: EIFOJFDHHJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(bool)>(&MagicalActual::Orbhealer::EIFOJFDHHJK)> {
  static const MethodInfo* get() {
    static auto* AALBHOKGIOD = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "EIFOJFDHHJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AALBHOKGIOD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Orbhealer::NECNFGEPEKJ
// Il2CppName: NECNFGEPEKJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Orbhealer::NECNFGEPEKJ)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "NECNFGEPEKJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::AvatarEquipmentChanged
// Il2CppName: AvatarEquipmentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::AvatarEquipmentChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "AvatarEquipmentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::LJOEOBPMKLH
// Il2CppName: LJOEOBPMKLH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::LJOEOBPMKLH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "LJOEOBPMKLH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::PENMIFNJODO
// Il2CppName: PENMIFNJODO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::PENMIFNJODO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "PENMIFNJODO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::IFHJPPOELKK
// Il2CppName: IFHJPPOELKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::Orbhealer::IFHJPPOELKK)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "IFHJPPOELKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::DEPHOOHAGLM
// Il2CppName: DEPHOOHAGLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Orbhealer::DEPHOOHAGLM)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "DEPHOOHAGLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::OCLEKGPLCAF
// Il2CppName: OCLEKGPLCAF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::OCLEKGPLCAF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "OCLEKGPLCAF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::BJPECENBMMP
// Il2CppName: BJPECENBMMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::BJPECENBMMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "BJPECENBMMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::TurretFinishedSpawning
// Il2CppName: TurretFinishedSpawning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::UnityEngine::GameObject*)>(&MagicalActual::Orbhealer::TurretFinishedSpawning)> {
  static const MethodInfo* get() {
    static auto* FMJNABNGEBJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "TurretFinishedSpawning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FMJNABNGEBJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::LICDEMPFNCK
// Il2CppName: LICDEMPFNCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::LICDEMPFNCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "LICDEMPFNCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::CGBJOOEMENA
// Il2CppName: CGBJOOEMENA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::CGBJOOEMENA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "CGBJOOEMENA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::FKGIJLHEMDP
// Il2CppName: FKGIJLHEMDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::FKGIJLHEMDP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "FKGIJLHEMDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::ShowHitEffect
// Il2CppName: ShowHitEffect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::UnityEngine::Vector3)>(&MagicalActual::Orbhealer::ShowHitEffect)> {
  static const MethodInfo* get() {
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "ShowHitEffect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHFBFBMNPFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::ToggleTurretType
// Il2CppName: ToggleTurretType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::ToggleTurretType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "ToggleTurretType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::FKJHENPPAGK
// Il2CppName: FKJHENPPAGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Orbhealer::FKJHENPPAGK)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "FKJHENPPAGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::PAAHAHAOKBN
// Il2CppName: PAAHAHAOKBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::PAAHAHAOKBN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "PAAHAHAOKBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::GIPNGLJHDAN
// Il2CppName: GIPNGLJHDAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::UnityEngine::Vector3)>(&MagicalActual::Orbhealer::GIPNGLJHDAN)> {
  static const MethodInfo* get() {
    static auto* NHFBFBMNPFC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "GIPNGLJHDAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NHFBFBMNPFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::DisableSecondaryWeapon
// Il2CppName: DisableSecondaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::DisableSecondaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "DisableSecondaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::MGGMJFCIIFA
// Il2CppName: MGGMJFCIIFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::MGGMJFCIIFA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "MGGMJFCIIFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::OLGCIPCDCBB
// Il2CppName: OLGCIPCDCBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(bool)>(&MagicalActual::Orbhealer::OLGCIPCDCBB)> {
  static const MethodInfo* get() {
    static auto* AALBHOKGIOD = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "OLGCIPCDCBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AALBHOKGIOD});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::DLSPERSDFA
// Il2CppName: DLSPERSDFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(uint16_t, ::UnityEngine::Vector3, int)>(&MagicalActual::Orbhealer::DLSPERSDFA)> {
  static const MethodInfo* get() {
    static auto* FNOCLFOKDFG = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* DLLPCCKKJGD = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* ENMLJMBHBHE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "DLSPERSDFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FNOCLFOKDFG, DLLPCCKKJGD, ENMLJMBHBHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::LEAKGMMDFCH
// Il2CppName: LEAKGMMDFCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::LEAKGMMDFCH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "LEAKGMMDFCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::ADPNCDJNJEC
// Il2CppName: ADPNCDJNJEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::ADPNCDJNJEC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "ADPNCDJNJEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::LKMDAOANCAH
// Il2CppName: LKMDAOANCAH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::LKMDAOANCAH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "LKMDAOANCAH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Orbhealer::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::BKLLIDDEIMI
// Il2CppName: BKLLIDDEIMI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::BKLLIDDEIMI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "BKLLIDDEIMI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::IPGJKEGCIBA
// Il2CppName: IPGJKEGCIBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::IPGJKEGCIBA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "IPGJKEGCIBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::KOBKNLOLDDA
// Il2CppName: KOBKNLOLDDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::KOBKNLOLDDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "KOBKNLOLDDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::IJPENLKCGEC
// Il2CppName: IJPENLKCGEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::IJPENLKCGEC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "IJPENLKCGEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::DANONFOIHJM
// Il2CppName: DANONFOIHJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Orbhealer::DANONFOIHJM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "DANONFOIHJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::EnablePrimaryWeapon
// Il2CppName: EnablePrimaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::EnablePrimaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "EnablePrimaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::NLGHKBAEMII
// Il2CppName: NLGHKBAEMII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::Il2CppObject*)>(&MagicalActual::Orbhealer::NLGHKBAEMII)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "NLGHKBAEMII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::NPNEIAFEMLJ
// Il2CppName: NPNEIAFEMLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::NPNEIAFEMLJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "NPNEIAFEMLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::DNBFOFMIHEG
// Il2CppName: DNBFOFMIHEG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::System::Collections::ArrayList*)>(&MagicalActual::Orbhealer::DNBFOFMIHEG)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "DNBFOFMIHEG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::EOKAOLBCMEM
// Il2CppName: EOKAOLBCMEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(uint8_t)>(&MagicalActual::Orbhealer::EOKAOLBCMEM)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "EOKAOLBCMEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::EnableSecondaryWeapon
// Il2CppName: EnableSecondaryWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::EnableSecondaryWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "EnableSecondaryWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::ClassDisabled
// Il2CppName: ClassDisabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)()>(&MagicalActual::Orbhealer::ClassDisabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "ClassDisabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Orbhealer::MHBPADEPAFE
// Il2CppName: MHBPADEPAFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Orbhealer::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Orbhealer::MHBPADEPAFE)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Orbhealer*), "MHBPADEPAFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
