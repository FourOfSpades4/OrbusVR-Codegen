// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: CrossbowInteractable
  class CrossbowInteractable;
  // Forward declaring type: CrossbowBolt
  class CrossbowBolt;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Animation
  class Animation;
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: BinaryWriter
  class BinaryWriter;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Crossbow
  class Crossbow;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Crossbow);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Crossbow*, "MagicalActual", "Crossbow");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Crossbow
  // [TokenAttribute] Offset: FFFFFFFF
  class Crossbow : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::Crossbow::$$c
    class $$c;
    // Nested type: ::MagicalActual::Crossbow::$$c__DisplayClass20_0
    class $$c__DisplayClass20_0;
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // protected MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.CrossbowInteractable crossbow
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::CrossbowInteractable* crossbow;
    // Field size check
    static_assert(sizeof(::MagicalActual::CrossbowInteractable*) == 0x8);
    // private UnityEngine.GameObject boltPrefab
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* boltPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject fakeBolt
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* fakeBolt;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Animation fireAnim
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Animation* fireAnim;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animation*) == 0x8);
    // private UnityEngine.GameObject vfxHit
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* vfxHit;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Events.UnityEvent BoltNocked
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Events::UnityEvent* BoltNocked;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.Events.UnityEvent BoltFired
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Events::UnityEvent* BoltFired;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // public System.UInt16 pilotGuid
    // Size: 0x2
    // Offset: 0x60
    uint16_t pilotGuid;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.Boolean BGACBEDBILE
    // Size: 0x1
    // Offset: 0x62
    bool BGACBEDBILE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: BGACBEDBILE and: IEKBAFFCMNA
    char __padding10[0x5] = {};
    // private System.Collections.Generic.Dictionary`2<System.Byte,MagicalActual.CrossbowBolt> IEKBAFFCMNA
    // Size: 0x8
    // Offset: 0x68
    ::System::Collections::Generic::Dictionary_2<uint8_t, ::MagicalActual::CrossbowBolt*>* IEKBAFFCMNA;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<uint8_t, ::MagicalActual::CrossbowBolt*>*) == 0x8);
    // private UnityEngine.Quaternion CKBLEIAFBCC
    // Size: 0x10
    // Offset: 0x70
    ::UnityEngine::Quaternion CKBLEIAFBCC;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: protected MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private MagicalActual.CrossbowInteractable crossbow
    [[deprecated("Use field access instead!")]] ::MagicalActual::CrossbowInteractable*& dyn_crossbow();
    // Get instance field reference: private UnityEngine.GameObject boltPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_boltPrefab();
    // Get instance field reference: private UnityEngine.GameObject fakeBolt
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_fakeBolt();
    // Get instance field reference: private UnityEngine.Animation fireAnim
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& dyn_fireAnim();
    // Get instance field reference: private UnityEngine.GameObject vfxHit
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxHit();
    // Get instance field reference: private UnityEngine.Events.UnityEvent BoltNocked
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_BoltNocked();
    // Get instance field reference: private UnityEngine.Events.UnityEvent BoltFired
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_BoltFired();
    // Get instance field reference: public System.UInt16 pilotGuid
    [[deprecated("Use field access instead!")]] uint16_t& dyn_pilotGuid();
    // Get instance field reference: private System.Boolean BGACBEDBILE
    [[deprecated("Use field access instead!")]] bool& dyn_BGACBEDBILE();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Byte,MagicalActual.CrossbowBolt> IEKBAFFCMNA
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<uint8_t, ::MagicalActual::CrossbowBolt*>*& dyn_IEKBAFFCMNA();
    // Get instance field reference: private UnityEngine.Quaternion CKBLEIAFBCC
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_CKBLEIAFBCC();
    // public System.Void OIPLBADJHFI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19A7B3C
    void OIPLBADJHFI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void FireCrossbow(System.Byte BHHGMPLHEDC, UnityEngine.Vector3 KCOKPGCNCLA, UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19A7E9C
    void FireCrossbow(uint8_t BHHGMPLHEDC, ::UnityEngine::Vector3 KCOKPGCNCLA, ::UnityEngine::Vector3 NKJBILNNJNP);
    // public System.Void AGKHMBHBNFM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19A8148
    void AGKHMBHBNFM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GBHBLNEBOJP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x19A84A8
    void GBHBLNEBOJP(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void JHPGGLDGNMG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19A86B0
    void JHPGGLDGNMG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void FAEFADABDPP(System.Object OMLPNCLFFMJ)
    // Offset: 0x19A8A10
    void FAEFADABDPP(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void PLPDCBMCEJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19A8B34
    void PLPDCBMCEJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void NNABOEHLFPI()
    // Offset: 0x19A8E94
    void NNABOEHLFPI();
    // public System.Void BroadcastRotation(UnityEngine.Quaternion JMNFMKNBOAE)
    // Offset: 0x19A8FA0
    void BroadcastRotation(::UnityEngine::Quaternion JMNFMKNBOAE);
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x19A90CC
    void IDOCJGNLNFL();
    // private System.Void PEHEADNDNNB(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x19A9164
    void PEHEADNDNNB(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void JJNGFMDHFPD(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x19A9228
    void JJNGFMDHFPD(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void PlayerReleasedCrossbow()
    // Offset: 0x19A95D8
    void PlayerReleasedCrossbow();
    // private System.Void Start()
    // Offset: 0x19A96E4
    void Start();
    // public System.Void LNCBLKCLNBI(System.Byte BHHGMPLHEDC, UnityEngine.Vector3 KCOKPGCNCLA, UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19A977C
    void LNCBLKCLNBI(uint8_t BHHGMPLHEDC, ::UnityEngine::Vector3 KCOKPGCNCLA, ::UnityEngine::Vector3 NKJBILNNJNP);
    // public System.Void ForceReleaseCrossbow()
    // Offset: 0x19A9A28
    void ForceReleaseCrossbow();
    // public System.Void .ctor()
    // Offset: 0x19A9B58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Crossbow* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Crossbow::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Crossbow*, creationType>()));
    }
    // public System.Void BKDCFLENOGI()
    // Offset: 0x19A9BB0
    void BKDCFLENOGI();
    // private System.Void BIOJIBBENJJ(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x19A9CE0
    void BIOJIBBENJJ(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void OAPCGBIGFCL(System.Object OMLPNCLFFMJ)
    // Offset: 0x19A9EE8
    void OAPCGBIGFCL(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GOEKCLPAEKP(System.Object OMLPNCLFFMJ)
    // Offset: 0x19A9FA4
    void GOEKCLPAEKP(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void EDDHOECCANF()
    // Offset: 0x19AA0B0
    void EDDHOECCANF();
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19AA1BC
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void GJDAJNKEIIL(UnityEngine.Quaternion JMNFMKNBOAE)
    // Offset: 0x19AA51C
    void GJDAJNKEIIL(::UnityEngine::Quaternion JMNFMKNBOAE);
    // private System.Void CGJMCHPAMGP(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x19AA640
    void CGJMCHPAMGP(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x19AA704
    void LPLGKBGLPOK();
    // public System.Void FIHOKPFIKEM(System.Byte BHHGMPLHEDC, UnityEngine.Vector3 KCOKPGCNCLA, UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19AA79C
    void FIHOKPFIKEM(uint8_t BHHGMPLHEDC, ::UnityEngine::Vector3 KCOKPGCNCLA, ::UnityEngine::Vector3 NKJBILNNJNP);
    // public System.Void AKEEGHHHCKK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19AAA4C
    void AKEEGHHHCKK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PIJHKEJDNFM(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x19AADAC
    void PIJHKEJDNFM(::System::IO::BinaryWriter* FFJEENIEPJH);
    // public System.Void BPIENNNFAPN(System.Byte BHHGMPLHEDC, UnityEngine.Vector3 KCOKPGCNCLA, UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19A9340
    void BPIENNNFAPN(uint8_t BHHGMPLHEDC, ::UnityEngine::Vector3 KCOKPGCNCLA, ::UnityEngine::Vector3 NKJBILNNJNP);
    // private System.Void MGDMCAKLNJE(System.Object OMLPNCLFFMJ)
    // Offset: 0x19AAE80
    void MGDMCAKLNJE(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void CJNJLIPIPNB(UnityEngine.Quaternion JMNFMKNBOAE)
    // Offset: 0x19AAF24
    void CJNJLIPIPNB(::UnityEngine::Quaternion JMNFMKNBOAE);
    // private System.Void IJOBCLDDFDE(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x19AB048
    void IJOBCLDDFDE(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void MNFBJBELIAL(System.Byte BHHGMPLHEDC, UnityEngine.Vector3 KCOKPGCNCLA, UnityEngine.Vector3 NKJBILNNJNP)
    // Offset: 0x19AB160
    void MNFBJBELIAL(uint8_t BHHGMPLHEDC, ::UnityEngine::Vector3 KCOKPGCNCLA, ::UnityEngine::Vector3 NKJBILNNJNP);
    // private System.Void FIBHKMKIHLB(System.Object OMLPNCLFFMJ)
    // Offset: 0x19AB410
    void FIBHKMKIHLB(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void LLDMOLBDIOD()
    // Offset: 0x19AB534
    void LLDMOLBDIOD();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19AB674
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GKKELHJEFDL(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x19AB9CC
    void GKKELHJEFDL(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void PODMHPIOIDP(System.Object OMLPNCLFFMJ)
    // Offset: 0x19ABBD4
    void PODMHPIOIDP(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void FHOBPCMPEAI(UnityEngine.Quaternion JMNFMKNBOAE)
    // Offset: 0x19ABCB4
    void FHOBPCMPEAI(::UnityEngine::Quaternion JMNFMKNBOAE);
    // public System.Void PlayerFiredCrossbow()
    // Offset: 0x19ABDD8
    void PlayerFiredCrossbow();
    // private System.Void IIGFGAIECDF(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x19ABF18
    void IIGFGAIECDF(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void ABJPEFKCCOC(System.Object OMLPNCLFFMJ)
    // Offset: 0x19ABFDC
    void ABJPEFKCCOC(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void ODIFEONNGDF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x19AC0BC
    void ODIFEONNGDF(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void OJAIODKKMKI(System.Object OMLPNCLFFMJ)
    // Offset: 0x19AC2C4
    void OJAIODKKMKI(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NNNOKELCHFI(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x19AC380
    void NNNOKELCHFI(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void DGOJNBLFADF(System.Object OMLPNCLFFMJ)
    // Offset: 0x19AC498
    void DGOJNBLFADF(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void FFJEPFAIDEB(System.Object OMLPNCLFFMJ)
    // Offset: 0x19AC554
    void FFJEPFAIDEB(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void PlayerGrabbedCrossbow()
    // Offset: 0x19AC634
    void PlayerGrabbedCrossbow();
    // public System.Void CMMOODPDPKP()
    // Offset: 0x19AC740
    void CMMOODPDPKP();
    // public System.Void IEIJLBOJPMN()
    // Offset: 0x19AA084
    void IEIJLBOJPMN();
    // private System.Void HANFEOBDNFE(System.Object OMLPNCLFFMJ)
    // Offset: 0x19AC950
    void HANFEOBDNFE(::Il2CppObject* OMLPNCLFFMJ);
  }; // MagicalActual.Crossbow
  #pragma pack(pop)
  static check_size<sizeof(Crossbow), 112 + sizeof(::UnityEngine::Quaternion)> __MagicalActual_CrossbowSizeCheck;
  static_assert(sizeof(Crossbow) == 0x80);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Crossbow::OIPLBADJHFI
// Il2CppName: OIPLBADJHFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Crossbow::OIPLBADJHFI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "OIPLBADJHFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::FireCrossbow
// Il2CppName: FireCrossbow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(uint8_t, ::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&MagicalActual::Crossbow::FireCrossbow)> {
  static const MethodInfo* get() {
    static auto* BHHGMPLHEDC = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* KCOKPGCNCLA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "FireCrossbow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHHGMPLHEDC, KCOKPGCNCLA, NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::AGKHMBHBNFM
// Il2CppName: AGKHMBHBNFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Crossbow::AGKHMBHBNFM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "AGKHMBHBNFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::GBHBLNEBOJP
// Il2CppName: GBHBLNEBOJP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::System::Collections::ArrayList*)>(&MagicalActual::Crossbow::GBHBLNEBOJP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "GBHBLNEBOJP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::JHPGGLDGNMG
// Il2CppName: JHPGGLDGNMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Crossbow::JHPGGLDGNMG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "JHPGGLDGNMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::FAEFADABDPP
// Il2CppName: FAEFADABDPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::Il2CppObject*)>(&MagicalActual::Crossbow::FAEFADABDPP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "FAEFADABDPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::PLPDCBMCEJF
// Il2CppName: PLPDCBMCEJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Crossbow::PLPDCBMCEJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "PLPDCBMCEJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::NNABOEHLFPI
// Il2CppName: NNABOEHLFPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::NNABOEHLFPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "NNABOEHLFPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::BroadcastRotation
// Il2CppName: BroadcastRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::UnityEngine::Quaternion)>(&MagicalActual::Crossbow::BroadcastRotation)> {
  static const MethodInfo* get() {
    static auto* JMNFMKNBOAE = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "BroadcastRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JMNFMKNBOAE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::PEHEADNDNNB
// Il2CppName: PEHEADNDNNB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Crossbow::PEHEADNDNNB)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "PEHEADNDNNB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::JJNGFMDHFPD
// Il2CppName: JJNGFMDHFPD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::System::Collections::ArrayList*)>(&MagicalActual::Crossbow::JJNGFMDHFPD)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "JJNGFMDHFPD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::PlayerReleasedCrossbow
// Il2CppName: PlayerReleasedCrossbow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::PlayerReleasedCrossbow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "PlayerReleasedCrossbow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::LNCBLKCLNBI
// Il2CppName: LNCBLKCLNBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(uint8_t, ::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&MagicalActual::Crossbow::LNCBLKCLNBI)> {
  static const MethodInfo* get() {
    static auto* BHHGMPLHEDC = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* KCOKPGCNCLA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "LNCBLKCLNBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHHGMPLHEDC, KCOKPGCNCLA, NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::ForceReleaseCrossbow
// Il2CppName: ForceReleaseCrossbow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::ForceReleaseCrossbow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "ForceReleaseCrossbow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Crossbow::BKDCFLENOGI
// Il2CppName: BKDCFLENOGI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::BKDCFLENOGI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "BKDCFLENOGI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::BIOJIBBENJJ
// Il2CppName: BIOJIBBENJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::System::Collections::ArrayList*)>(&MagicalActual::Crossbow::BIOJIBBENJJ)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "BIOJIBBENJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::OAPCGBIGFCL
// Il2CppName: OAPCGBIGFCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::Il2CppObject*)>(&MagicalActual::Crossbow::OAPCGBIGFCL)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "OAPCGBIGFCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::GOEKCLPAEKP
// Il2CppName: GOEKCLPAEKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::Il2CppObject*)>(&MagicalActual::Crossbow::GOEKCLPAEKP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "GOEKCLPAEKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::EDDHOECCANF
// Il2CppName: EDDHOECCANF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::EDDHOECCANF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "EDDHOECCANF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Crossbow::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::GJDAJNKEIIL
// Il2CppName: GJDAJNKEIIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::UnityEngine::Quaternion)>(&MagicalActual::Crossbow::GJDAJNKEIIL)> {
  static const MethodInfo* get() {
    static auto* JMNFMKNBOAE = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "GJDAJNKEIIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JMNFMKNBOAE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::CGJMCHPAMGP
// Il2CppName: CGJMCHPAMGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Crossbow::CGJMCHPAMGP)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "CGJMCHPAMGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::FIHOKPFIKEM
// Il2CppName: FIHOKPFIKEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(uint8_t, ::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&MagicalActual::Crossbow::FIHOKPFIKEM)> {
  static const MethodInfo* get() {
    static auto* BHHGMPLHEDC = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* KCOKPGCNCLA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "FIHOKPFIKEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHHGMPLHEDC, KCOKPGCNCLA, NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::AKEEGHHHCKK
// Il2CppName: AKEEGHHHCKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Crossbow::AKEEGHHHCKK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "AKEEGHHHCKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::PIJHKEJDNFM
// Il2CppName: PIJHKEJDNFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Crossbow::PIJHKEJDNFM)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "PIJHKEJDNFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::BPIENNNFAPN
// Il2CppName: BPIENNNFAPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(uint8_t, ::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&MagicalActual::Crossbow::BPIENNNFAPN)> {
  static const MethodInfo* get() {
    static auto* BHHGMPLHEDC = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* KCOKPGCNCLA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "BPIENNNFAPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHHGMPLHEDC, KCOKPGCNCLA, NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::MGDMCAKLNJE
// Il2CppName: MGDMCAKLNJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::Il2CppObject*)>(&MagicalActual::Crossbow::MGDMCAKLNJE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "MGDMCAKLNJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::CJNJLIPIPNB
// Il2CppName: CJNJLIPIPNB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::UnityEngine::Quaternion)>(&MagicalActual::Crossbow::CJNJLIPIPNB)> {
  static const MethodInfo* get() {
    static auto* JMNFMKNBOAE = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "CJNJLIPIPNB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JMNFMKNBOAE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::IJOBCLDDFDE
// Il2CppName: IJOBCLDDFDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::System::Collections::ArrayList*)>(&MagicalActual::Crossbow::IJOBCLDDFDE)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "IJOBCLDDFDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::MNFBJBELIAL
// Il2CppName: MNFBJBELIAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(uint8_t, ::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&MagicalActual::Crossbow::MNFBJBELIAL)> {
  static const MethodInfo* get() {
    static auto* BHHGMPLHEDC = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* KCOKPGCNCLA = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* NKJBILNNJNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "MNFBJBELIAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BHHGMPLHEDC, KCOKPGCNCLA, NKJBILNNJNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::FIBHKMKIHLB
// Il2CppName: FIBHKMKIHLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::Il2CppObject*)>(&MagicalActual::Crossbow::FIBHKMKIHLB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "FIBHKMKIHLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::LLDMOLBDIOD
// Il2CppName: LLDMOLBDIOD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::LLDMOLBDIOD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "LLDMOLBDIOD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::Crossbow::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::GKKELHJEFDL
// Il2CppName: GKKELHJEFDL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::System::Collections::ArrayList*)>(&MagicalActual::Crossbow::GKKELHJEFDL)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "GKKELHJEFDL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::PODMHPIOIDP
// Il2CppName: PODMHPIOIDP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::Il2CppObject*)>(&MagicalActual::Crossbow::PODMHPIOIDP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "PODMHPIOIDP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::FHOBPCMPEAI
// Il2CppName: FHOBPCMPEAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::UnityEngine::Quaternion)>(&MagicalActual::Crossbow::FHOBPCMPEAI)> {
  static const MethodInfo* get() {
    static auto* JMNFMKNBOAE = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "FHOBPCMPEAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JMNFMKNBOAE});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::PlayerFiredCrossbow
// Il2CppName: PlayerFiredCrossbow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::PlayerFiredCrossbow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "PlayerFiredCrossbow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::IIGFGAIECDF
// Il2CppName: IIGFGAIECDF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::System::IO::BinaryWriter*)>(&MagicalActual::Crossbow::IIGFGAIECDF)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "IIGFGAIECDF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::ABJPEFKCCOC
// Il2CppName: ABJPEFKCCOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::Il2CppObject*)>(&MagicalActual::Crossbow::ABJPEFKCCOC)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "ABJPEFKCCOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::ODIFEONNGDF
// Il2CppName: ODIFEONNGDF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::System::Collections::ArrayList*)>(&MagicalActual::Crossbow::ODIFEONNGDF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "ODIFEONNGDF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::OJAIODKKMKI
// Il2CppName: OJAIODKKMKI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::Il2CppObject*)>(&MagicalActual::Crossbow::OJAIODKKMKI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "OJAIODKKMKI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::NNNOKELCHFI
// Il2CppName: NNNOKELCHFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::System::Collections::ArrayList*)>(&MagicalActual::Crossbow::NNNOKELCHFI)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "NNNOKELCHFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::DGOJNBLFADF
// Il2CppName: DGOJNBLFADF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::Il2CppObject*)>(&MagicalActual::Crossbow::DGOJNBLFADF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "DGOJNBLFADF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::FFJEPFAIDEB
// Il2CppName: FFJEPFAIDEB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::Il2CppObject*)>(&MagicalActual::Crossbow::FFJEPFAIDEB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "FFJEPFAIDEB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::PlayerGrabbedCrossbow
// Il2CppName: PlayerGrabbedCrossbow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::PlayerGrabbedCrossbow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "PlayerGrabbedCrossbow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::CMMOODPDPKP
// Il2CppName: CMMOODPDPKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::CMMOODPDPKP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "CMMOODPDPKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::IEIJLBOJPMN
// Il2CppName: IEIJLBOJPMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)()>(&MagicalActual::Crossbow::IEIJLBOJPMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "IEIJLBOJPMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::Crossbow::HANFEOBDNFE
// Il2CppName: HANFEOBDNFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Crossbow::*)(::Il2CppObject*)>(&MagicalActual::Crossbow::HANFEOBDNFE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Crossbow*), "HANFEOBDNFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
