// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_WolfMage
  class M_WolfMage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_WolfMage);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_WolfMage*, "MagicalActual", "M_WolfMage");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_WolfMage
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD766C
  class M_WolfMage : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject curseChargeRes
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* curseChargeRes;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject curseCastRes
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* curseCastRes;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject curseChargeBolster
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* curseChargeBolster;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject curseCastBolster
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* curseCastBolster;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject curseChargeHeal
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::GameObject* curseChargeHeal;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject curseCastHeal
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* curseCastHeal;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject LNGBKMEDEAC
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::GameObject* LNGBKMEDEAC;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject OPKDGFHHOMB
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::GameObject* OPKDGFHHOMB;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x70
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public UnityEngine.GameObject curseChargeRes
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_curseChargeRes();
    // Get instance field reference: public UnityEngine.GameObject curseCastRes
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_curseCastRes();
    // Get instance field reference: public UnityEngine.GameObject curseChargeBolster
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_curseChargeBolster();
    // Get instance field reference: public UnityEngine.GameObject curseCastBolster
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_curseCastBolster();
    // Get instance field reference: public UnityEngine.GameObject curseChargeHeal
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_curseChargeHeal();
    // Get instance field reference: public UnityEngine.GameObject curseCastHeal
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_curseCastHeal();
    // Get instance field reference: private UnityEngine.GameObject LNGBKMEDEAC
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_LNGBKMEDEAC();
    // Get instance field reference: private UnityEngine.GameObject OPKDGFHHOMB
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_OPKDGFHHOMB();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // public System.Void CastCurse()
    // Offset: 0x13DF214
    void CastCurse();
    // public System.Void BMDGPBIGFBE()
    // Offset: 0x13DF3BC
    void BMDGPBIGFBE();
    // private System.Void LOGINECNOFH(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x13DF45C
    void LOGINECNOFH(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void DKILGFBCKHD()
    // Offset: 0x13DF570
    void DKILGFBCKHD();
    // private System.Void GHBJFCCCMIB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x13DF794
    void GHBJFCCCMIB(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x13DF8A4
    void LPLGKBGLPOK();
    // public System.Void KIBMMOEKMID()
    // Offset: 0x13DF8FC
    void KIBMMOEKMID();
    // public System.Void EEPNKHPOEBO()
    // Offset: 0x13DFAA8
    void EEPNKHPOEBO();
    // public System.Void CCOODLILKJD()
    // Offset: 0x13DFC54
    void CCOODLILKJD();
    // private System.Void CBFFNBALJIG(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x13DFE78
    void CBFFNBALJIG(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void KJIBAEOKDDI()
    // Offset: 0x13DFF88
    void KJIBAEOKDDI();
    // public System.Void NMBJOALMFKI()
    // Offset: 0x13E0028
    void NMBJOALMFKI();
    // public System.Void AKAJICBGGIG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E01D4
    void AKAJICBGGIG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void .ctor()
    // Offset: 0x13E02DC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_WolfMage* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_WolfMage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_WolfMage*, creationType>()));
    }
    // public System.Void ENBDPHBEALH()
    // Offset: 0x13E0334
    void ENBDPHBEALH();
    // public System.Void KIDNJNOFOFF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E03D4
    void KIDNJNOFOFF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void ECMDHGFJJOP()
    // Offset: 0x13E04DC
    void ECMDHGFJJOP();
    // public System.Void GILLJBIMGNJ()
    // Offset: 0x13E057C
    void GILLJBIMGNJ();
    // public System.Void GHHAMAIIFFG()
    // Offset: 0x13E07A0
    void GHHAMAIIFFG();
    // public System.Void Slash()
    // Offset: 0x13E09C4
    void Slash();
    // public System.Void KDPEOPPDLLP()
    // Offset: 0x13E0BDC
    void KDPEOPPDLLP();
    // public System.Void FMFOGAKFJGJ()
    // Offset: 0x13E0E00
    void FMFOGAKFJGJ();
    // public System.Void PJIBDLLAKHA()
    // Offset: 0x13E1024
    void PJIBDLLAKHA();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E11D0
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void APOJNKDNEGC(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x13E12D8
    void APOJNKDNEGC(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void BOBDDMLIABF()
    // Offset: 0x13E13E8
    void BOBDDMLIABF();
    // private System.Void NNLPDIKCIMN(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x13E1488
    void NNLPDIKCIMN(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void BDJKOGLAMKH(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x13E159C
    void BDJKOGLAMKH(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void LFMMGBKGODC()
    // Offset: 0x13E16B0
    void LFMMGBKGODC();
    // public System.Void JOCIAJOCGNM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x13E1750
    void JOCIAJOCGNM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void IMLMPJDLJPE(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x13E1858
    void IMLMPJDLJPE(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void Start()
    // Offset: 0x13E196C
    void Start();
    // public System.Void ChargeCurse()
    // Offset: 0x13E19C4
    void ChargeCurse();
    // public System.Void LAMFFANHGNA()
    // Offset: 0x13E1A64
    void LAMFFANHGNA();
    // private System.Void MMCFHJIMCEA(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x13E1B04
    void MMCFHJIMCEA(::System::Collections::ArrayList* HPEANAHIBAH);
  }; // MagicalActual.M_WolfMage
  #pragma pack(pop)
  static check_size<sizeof(M_WolfMage), 112 + sizeof(::StringW)> __MagicalActual_M_WolfMageSizeCheck;
  static_assert(sizeof(M_WolfMage) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::CastCurse
// Il2CppName: CastCurse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::CastCurse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "CastCurse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::BMDGPBIGFBE
// Il2CppName: BMDGPBIGFBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::BMDGPBIGFBE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "BMDGPBIGFBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::LOGINECNOFH
// Il2CppName: LOGINECNOFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_WolfMage::LOGINECNOFH)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "LOGINECNOFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::DKILGFBCKHD
// Il2CppName: DKILGFBCKHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::DKILGFBCKHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "DKILGFBCKHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::GHBJFCCCMIB
// Il2CppName: GHBJFCCCMIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_WolfMage::GHBJFCCCMIB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "GHBJFCCCMIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::KIBMMOEKMID
// Il2CppName: KIBMMOEKMID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::KIBMMOEKMID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "KIBMMOEKMID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::EEPNKHPOEBO
// Il2CppName: EEPNKHPOEBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::EEPNKHPOEBO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "EEPNKHPOEBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::CCOODLILKJD
// Il2CppName: CCOODLILKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::CCOODLILKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "CCOODLILKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::CBFFNBALJIG
// Il2CppName: CBFFNBALJIG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_WolfMage::CBFFNBALJIG)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "CBFFNBALJIG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::KJIBAEOKDDI
// Il2CppName: KJIBAEOKDDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::KJIBAEOKDDI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "KJIBAEOKDDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::NMBJOALMFKI
// Il2CppName: NMBJOALMFKI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::NMBJOALMFKI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "NMBJOALMFKI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::AKAJICBGGIG
// Il2CppName: AKAJICBGGIG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_WolfMage::AKAJICBGGIG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "AKAJICBGGIG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::ENBDPHBEALH
// Il2CppName: ENBDPHBEALH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::ENBDPHBEALH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "ENBDPHBEALH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::KIDNJNOFOFF
// Il2CppName: KIDNJNOFOFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_WolfMage::KIDNJNOFOFF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "KIDNJNOFOFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::ECMDHGFJJOP
// Il2CppName: ECMDHGFJJOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::ECMDHGFJJOP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "ECMDHGFJJOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::GILLJBIMGNJ
// Il2CppName: GILLJBIMGNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::GILLJBIMGNJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "GILLJBIMGNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::GHHAMAIIFFG
// Il2CppName: GHHAMAIIFFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::GHHAMAIIFFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "GHHAMAIIFFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::KDPEOPPDLLP
// Il2CppName: KDPEOPPDLLP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::KDPEOPPDLLP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "KDPEOPPDLLP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::FMFOGAKFJGJ
// Il2CppName: FMFOGAKFJGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::FMFOGAKFJGJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "FMFOGAKFJGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::PJIBDLLAKHA
// Il2CppName: PJIBDLLAKHA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::PJIBDLLAKHA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "PJIBDLLAKHA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_WolfMage::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::APOJNKDNEGC
// Il2CppName: APOJNKDNEGC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_WolfMage::APOJNKDNEGC)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "APOJNKDNEGC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::BOBDDMLIABF
// Il2CppName: BOBDDMLIABF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::BOBDDMLIABF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "BOBDDMLIABF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::NNLPDIKCIMN
// Il2CppName: NNLPDIKCIMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_WolfMage::NNLPDIKCIMN)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "NNLPDIKCIMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::BDJKOGLAMKH
// Il2CppName: BDJKOGLAMKH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_WolfMage::BDJKOGLAMKH)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "BDJKOGLAMKH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::LFMMGBKGODC
// Il2CppName: LFMMGBKGODC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::LFMMGBKGODC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "LFMMGBKGODC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::JOCIAJOCGNM
// Il2CppName: JOCIAJOCGNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_WolfMage::JOCIAJOCGNM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "JOCIAJOCGNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::IMLMPJDLJPE
// Il2CppName: IMLMPJDLJPE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_WolfMage::IMLMPJDLJPE)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "IMLMPJDLJPE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::ChargeCurse
// Il2CppName: ChargeCurse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::ChargeCurse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "ChargeCurse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::LAMFFANHGNA
// Il2CppName: LAMFFANHGNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)()>(&MagicalActual::M_WolfMage::LAMFFANHGNA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "LAMFFANHGNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_WolfMage::MMCFHJIMCEA
// Il2CppName: MMCFHJIMCEA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_WolfMage::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_WolfMage::MMCFHJIMCEA)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_WolfMage*), "MMCFHJIMCEA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
