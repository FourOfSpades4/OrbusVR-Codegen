// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Animator
  class Animator;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: SpiderBoss
  class SpiderBoss;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::SpiderBoss);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::SpiderBoss*, "MagicalActual", "SpiderBoss");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.SpiderBoss
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD7CF8
  class SpiderBoss : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private UnityEngine.Transform shield
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Transform* shield;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Transform shieldAnchor
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Transform* shieldAnchor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Animator burrowController
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Animator* burrowController;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animator*) == 0x8);
    // private UnityEngine.Transform spider
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Transform* spider;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.GameObject leapHit
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::GameObject* leapHit;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x50
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean EAIGIJFGLHK
    // Size: 0x1
    // Offset: 0x58
    bool EAIGIJFGLHK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: EAIGIJFGLHK and: KCOKPGCNCLA
    char __padding8[0x3] = {};
    // private UnityEngine.Vector3 KCOKPGCNCLA
    // Size: 0xC
    // Offset: 0x5C
    ::UnityEngine::Vector3 KCOKPGCNCLA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 HMDMGGFFOGD
    // Size: 0xC
    // Offset: 0x68
    ::UnityEngine::Vector3 HMDMGGFFOGD;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single JLJLOCMFBKA
    // Size: 0x4
    // Offset: 0x74
    float JLJLOCMFBKA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single ANPNFLJBCNI
    // Size: 0x4
    // Offset: 0x78
    float ANPNFLJBCNI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single shieldRotationSpeed
    // Size: 0x4
    // Offset: 0x7C
    float shieldRotationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean JLCJAOHEOFA
    // Size: 0x1
    // Offset: 0x80
    bool JLCJAOHEOFA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: JLCJAOHEOFA and: EINNLBIEKGL
    char __padding14[0x3] = {};
    // private UnityEngine.Vector3 EINNLBIEKGL
    // Size: 0xC
    // Offset: 0x84
    ::UnityEngine::Vector3 EINNLBIEKGL;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: private UnityEngine.Transform shield
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_shield();
    // Get instance field reference: private UnityEngine.Transform shieldAnchor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_shieldAnchor();
    // Get instance field reference: private UnityEngine.Animator burrowController
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& dyn_burrowController();
    // Get instance field reference: private UnityEngine.Transform spider
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_spider();
    // Get instance field reference: private UnityEngine.GameObject leapHit
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_leapHit();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private System.Boolean EAIGIJFGLHK
    [[deprecated("Use field access instead!")]] bool& dyn_EAIGIJFGLHK();
    // Get instance field reference: private UnityEngine.Vector3 KCOKPGCNCLA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_KCOKPGCNCLA();
    // Get instance field reference: private UnityEngine.Vector3 HMDMGGFFOGD
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_HMDMGGFFOGD();
    // Get instance field reference: private System.Single JLJLOCMFBKA
    [[deprecated("Use field access instead!")]] float& dyn_JLJLOCMFBKA();
    // Get instance field reference: private System.Single ANPNFLJBCNI
    [[deprecated("Use field access instead!")]] float& dyn_ANPNFLJBCNI();
    // Get instance field reference: private System.Single shieldRotationSpeed
    [[deprecated("Use field access instead!")]] float& dyn_shieldRotationSpeed();
    // Get instance field reference: private System.Boolean JLCJAOHEOFA
    [[deprecated("Use field access instead!")]] bool& dyn_JLCJAOHEOFA();
    // Get instance field reference: private UnityEngine.Vector3 EINNLBIEKGL
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_EINNLBIEKGL();
    // private System.Void EKOMAFACJNN(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x10899E0
    void EKOMAFACJNN(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void ODKFPPKKNOB(System.Object OMLPNCLFFMJ)
    // Offset: 0x1089B9C
    void ODKFPPKKNOB(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void FBDBGKLFFOI()
    // Offset: 0x1089C2C
    void FBDBGKLFFOI();
    // private System.Void FDEGMFHFIEC(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1089F94
    void FDEGMFHFIEC(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void JFKKFKNHPFI()
    // Offset: 0x108A14C
    void JFKKFKNHPFI();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x108A150
    void PFABJJGAOMM();
    // private System.Void HBHPCBBCJND(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x108A1E8
    void HBHPCBBCJND(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void NAOKGBKFMMP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x108A3A4
    void NAOKGBKFMMP(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void Update()
    // Offset: 0x108A4D8
    void Update();
    // private System.Void PGCCFBOPNPL(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x108A83C
    void PGCCFBOPNPL(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void IMJDNECJLBE(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x108A978
    void IMJDNECJLBE(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void JKDFCMDDCIK()
    // Offset: 0x108AAB4
    void JKDFCMDDCIK();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x108AB64
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JCPANMGMANF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x108AE28
    void JCPANMGMANF(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void KNAFEDFFEGH(System.Object OMLPNCLFFMJ)
    // Offset: 0x108AFE4
    void KNAFEDFFEGH(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Start()
    // Offset: 0x108B088
    void Start();
    // private System.Void EKMDLPBNDHG(System.Object OMLPNCLFFMJ)
    // Offset: 0x108B120
    void EKMDLPBNDHG(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void .ctor()
    // Offset: 0x108B1B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SpiderBoss* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::SpiderBoss::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SpiderBoss*, creationType>()));
    }
    // public System.Void EBJDLAIJJJE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x108B210
    void EBJDLAIJJJE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void HIHDOPLNIBJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x108B4DC
    void HIHDOPLNIBJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void CHMCEGMCENL()
    // Offset: 0x108B580
    void CHMCEGMCENL();
    // private System.Void IKFPBMPHNFF()
    // Offset: 0x108B8EC
    void IKFPBMPHNFF();
    // private System.Void PHPABAAHFNL(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x108B99C
    void PHPABAAHFNL(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void OnDestroy()
    // Offset: 0x108BB58
    void OnDestroy();
    // private System.Void HGIPBBMPIOF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x108BC08
    void HGIPBBMPIOF(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void AGKHMBHBNFM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x108BD40
    void AGKHMBHBNFM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GPFBGGFPINB()
    // Offset: 0x108C00C
    void GPFBGGFPINB();
    // private System.Void PAEJEGKDKLM(System.Object OMLPNCLFFMJ)
    // Offset: 0x108C0A4
    void PAEJEGKDKLM(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void Slash()
    // Offset: 0x108C134
    void Slash();
    // public System.Void MKAECMFKIEN()
    // Offset: 0x108C138
    void MKAECMFKIEN();
    // private System.Void DLMDKPJENMP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x108C13C
    void DLMDKPJENMP(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void INJNMDOBFOI()
    // Offset: 0x108C2E8
    void INJNMDOBFOI();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x108C654
    void LPLGKBGLPOK();
    // public System.Void KEGEKFNLCJD(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x108C6EC
    void KEGEKFNLCJD(::MagicalActual::NetEntity* CMLIHJCOINC);
  }; // MagicalActual.SpiderBoss
  #pragma pack(pop)
  static check_size<sizeof(SpiderBoss), 132 + sizeof(::UnityEngine::Vector3)> __MagicalActual_SpiderBossSizeCheck;
  static_assert(sizeof(SpiderBoss) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::EKOMAFACJNN
// Il2CppName: EKOMAFACJNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::SpiderBoss::EKOMAFACJNN)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "EKOMAFACJNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::ODKFPPKKNOB
// Il2CppName: ODKFPPKKNOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::Il2CppObject*)>(&MagicalActual::SpiderBoss::ODKFPPKKNOB)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "ODKFPPKKNOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::FBDBGKLFFOI
// Il2CppName: FBDBGKLFFOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::FBDBGKLFFOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "FBDBGKLFFOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::FDEGMFHFIEC
// Il2CppName: FDEGMFHFIEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::SpiderBoss::FDEGMFHFIEC)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "FDEGMFHFIEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::JFKKFKNHPFI
// Il2CppName: JFKKFKNHPFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::JFKKFKNHPFI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "JFKKFKNHPFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::HBHPCBBCJND
// Il2CppName: HBHPCBBCJND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::SpiderBoss::HBHPCBBCJND)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "HBHPCBBCJND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::NAOKGBKFMMP
// Il2CppName: NAOKGBKFMMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::SpiderBoss::NAOKGBKFMMP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "NAOKGBKFMMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::PGCCFBOPNPL
// Il2CppName: PGCCFBOPNPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::SpiderBoss::PGCCFBOPNPL)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "PGCCFBOPNPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::IMJDNECJLBE
// Il2CppName: IMJDNECJLBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::SpiderBoss::IMJDNECJLBE)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "IMJDNECJLBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::JKDFCMDDCIK
// Il2CppName: JKDFCMDDCIK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::JKDFCMDDCIK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "JKDFCMDDCIK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SpiderBoss::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::JCPANMGMANF
// Il2CppName: JCPANMGMANF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::SpiderBoss::JCPANMGMANF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "JCPANMGMANF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::KNAFEDFFEGH
// Il2CppName: KNAFEDFFEGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::Il2CppObject*)>(&MagicalActual::SpiderBoss::KNAFEDFFEGH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "KNAFEDFFEGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::EKMDLPBNDHG
// Il2CppName: EKMDLPBNDHG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::Il2CppObject*)>(&MagicalActual::SpiderBoss::EKMDLPBNDHG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "EKMDLPBNDHG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::EBJDLAIJJJE
// Il2CppName: EBJDLAIJJJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SpiderBoss::EBJDLAIJJJE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "EBJDLAIJJJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::HIHDOPLNIBJ
// Il2CppName: HIHDOPLNIBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::Il2CppObject*)>(&MagicalActual::SpiderBoss::HIHDOPLNIBJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "HIHDOPLNIBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::CHMCEGMCENL
// Il2CppName: CHMCEGMCENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::CHMCEGMCENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "CHMCEGMCENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::IKFPBMPHNFF
// Il2CppName: IKFPBMPHNFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::IKFPBMPHNFF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "IKFPBMPHNFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::PHPABAAHFNL
// Il2CppName: PHPABAAHFNL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::SpiderBoss::PHPABAAHFNL)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "PHPABAAHFNL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::HGIPBBMPIOF
// Il2CppName: HGIPBBMPIOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::SpiderBoss::HGIPBBMPIOF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "HGIPBBMPIOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::AGKHMBHBNFM
// Il2CppName: AGKHMBHBNFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SpiderBoss::AGKHMBHBNFM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "AGKHMBHBNFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::PAEJEGKDKLM
// Il2CppName: PAEJEGKDKLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::Il2CppObject*)>(&MagicalActual::SpiderBoss::PAEJEGKDKLM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "PAEJEGKDKLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::MKAECMFKIEN
// Il2CppName: MKAECMFKIEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::MKAECMFKIEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "MKAECMFKIEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::DLMDKPJENMP
// Il2CppName: DLMDKPJENMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::System::Collections::ArrayList*)>(&MagicalActual::SpiderBoss::DLMDKPJENMP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "DLMDKPJENMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::INJNMDOBFOI
// Il2CppName: INJNMDOBFOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::INJNMDOBFOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "INJNMDOBFOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)()>(&MagicalActual::SpiderBoss::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SpiderBoss::KEGEKFNLCJD
// Il2CppName: KEGEKFNLCJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SpiderBoss::*)(::MagicalActual::NetEntity*)>(&MagicalActual::SpiderBoss::KEGEKFNLCJD)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SpiderBoss*), "KEGEKFNLCJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
