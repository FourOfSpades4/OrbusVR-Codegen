// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: MeshRenderer
  class MeshRenderer;
  // Forward declaring type: MeshFilter
  class MeshFilter;
  // Forward declaring type: MeshCollider
  class MeshCollider;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PhysicsInteractable
  class PhysicsInteractable;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ConstructablePiece
  class ConstructablePiece;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ConstructablePiece);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ConstructablePiece*, "MagicalActual", "ConstructablePiece");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x61
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ConstructablePiece
  // [TokenAttribute] Offset: FFFFFFFF
  class ConstructablePiece : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.Rigidbody DEDDHIEDNMH
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Rigidbody* DEDDHIEDNMH;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private UnityEngine.GameObject DDGCEAONKAK
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* DDGCEAONKAK;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.MeshRenderer JKLAGPELEEF
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::MeshRenderer* JKLAGPELEEF;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshRenderer*) == 0x8);
    // private UnityEngine.MeshFilter GGAGBPCDDMJ
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::MeshFilter* GGAGBPCDDMJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshFilter*) == 0x8);
    // private UnityEngine.MeshCollider MIOHHEKDNNO
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::MeshCollider* MIOHHEKDNNO;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshCollider*) == 0x8);
    // private PhysicsInteractable CMJCOEANHMP
    // Size: 0x8
    // Offset: 0x40
    ::GlobalNamespace::PhysicsInteractable* CMJCOEANHMP;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PhysicsInteractable*) == 0x8);
    // private UnityEngine.Vector3 FKKFPPDHEBJ
    // Size: 0xC
    // Offset: 0x48
    ::UnityEngine::Vector3 FKKFPPDHEBJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 ACNGEJPJIFP
    // Size: 0xC
    // Offset: 0x54
    ::UnityEngine::Vector3 ACNGEJPJIFP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public System.Boolean isLocked
    // Size: 0x1
    // Offset: 0x60
    bool isLocked;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Rigidbody DEDDHIEDNMH
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_DEDDHIEDNMH();
    // Get instance field reference: private UnityEngine.GameObject DDGCEAONKAK
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_DDGCEAONKAK();
    // Get instance field reference: private UnityEngine.MeshRenderer JKLAGPELEEF
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& dyn_JKLAGPELEEF();
    // Get instance field reference: private UnityEngine.MeshFilter GGAGBPCDDMJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshFilter*& dyn_GGAGBPCDDMJ();
    // Get instance field reference: private UnityEngine.MeshCollider MIOHHEKDNNO
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& dyn_MIOHHEKDNNO();
    // Get instance field reference: private PhysicsInteractable CMJCOEANHMP
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PhysicsInteractable*& dyn_CMJCOEANHMP();
    // Get instance field reference: private UnityEngine.Vector3 FKKFPPDHEBJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_FKKFPPDHEBJ();
    // Get instance field reference: private UnityEngine.Vector3 ACNGEJPJIFP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_ACNGEJPJIFP();
    // Get instance field reference: public System.Boolean isLocked
    [[deprecated("Use field access instead!")]] bool& dyn_isLocked();
    // private System.Void MABPCMHPPCC(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x2049C3C
    void MABPCMHPPCC(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void LLDJMDLDGMD(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x2049CA8
    void LLDJMDLDGMD(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void HKINNMLBMMG()
    // Offset: 0x204A0C8
    void HKINNMLBMMG();
    // private System.Void doGripInteraction(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204A58C
    void doGripInteraction(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x204A5F8
    void ABIHCGOKNCL();
    // private System.Void HDJOKAPCKNI(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204AABC
    void HDJOKAPCKNI(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void .ctor()
    // Offset: 0x204AB28
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ConstructablePiece* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ConstructablePiece::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ConstructablePiece*, creationType>()));
    }
    // public System.Void KECDGPHEOCK(System.Single OONKDGBBIEK)
    // Offset: 0x204AB30
    void KECDGPHEOCK(float OONKDGBBIEK);
    // private System.Void JFEOGKHDGDD(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204ABF0
    void JFEOGKHDGDD(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void LOGEAPGMCOF(System.Single OONKDGBBIEK)
    // Offset: 0x204B01C
    void LOGEAPGMCOF(float OONKDGBBIEK);
    // public System.Void AJKLGPBNHAD(System.Single OONKDGBBIEK)
    // Offset: 0x204B0E0
    void AJKLGPBNHAD(float OONKDGBBIEK);
    // private System.Void APMNGLNBFNP()
    // Offset: 0x204B1A4
    void APMNGLNBFNP();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x204B664
    void PFABJJGAOMM();
    // private System.Void HLFDABPBIPM(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204BB24
    void HLFDABPBIPM(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void ILFKPAJNLJM(System.Single OONKDGBBIEK)
    // Offset: 0x204BB90
    void ILFKPAJNLJM(float OONKDGBBIEK);
    // private System.Void DIBPBEPLJBE(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204BC54
    void DIBPBEPLJBE(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void EJGAJLCOJHK(System.Single OONKDGBBIEK)
    // Offset: 0x204BCC0
    void EJGAJLCOJHK(float OONKDGBBIEK);
    // private System.Void KNANGLHFKIO(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204BD84
    void KNANGLHFKIO(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void randomizePosition(System.Single OONKDGBBIEK)
    // Offset: 0x204BDF0
    void randomizePosition(float OONKDGBBIEK);
    // private System.Void Start()
    // Offset: 0x204BEAC
    void Start();
    // private System.Void AKGFEENGKJD()
    // Offset: 0x204C36C
    void AKGFEENGKJD();
    // private System.Void OKHDADEJJNB(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204C830
    void OKHDADEJJNB(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void PPCNNOOLAEB(System.Single OONKDGBBIEK)
    // Offset: 0x204C89C
    void PPCNNOOLAEB(float OONKDGBBIEK);
    // private System.Void CADKOELFLHA(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204C960
    void CADKOELFLHA(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void GKIOLADOCOK()
    // Offset: 0x204C9CC
    void GKIOLADOCOK();
    // private System.Void LDFHNNKLLMG(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204CE90
    void LDFHNNKLLMG(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void IFLBHLFCMLB(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204CEFC
    void IFLBHLFCMLB(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void doUnGripInteraction(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204D328
    void doUnGripInteraction(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x204D730
    void CBMDGNKFPIO();
    // private System.Void JHFMDLNGOGA(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204DBF4
    void JHFMDLNGOGA(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void DCHGOBMEJGG(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204E024
    void DCHGOBMEJGG(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void JLBICMDMFPP(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204E090
    void JLBICMDMFPP(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void IDDKMEKLAGB(System.Single OONKDGBBIEK)
    // Offset: 0x204E0FC
    void IDDKMEKLAGB(float OONKDGBBIEK);
    // public System.Void LPFKLEAIKJC(System.Single OONKDGBBIEK)
    // Offset: 0x204E1C0
    void LPFKLEAIKJC(float OONKDGBBIEK);
    // private System.Void OACMGPBCPEL()
    // Offset: 0x204E284
    void OACMGPBCPEL();
    // private System.Void AKPHPCNFDKC(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204E748
    void AKPHPCNFDKC(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void OFCOCAOMIDL(System.Single OONKDGBBIEK)
    // Offset: 0x204EB78
    void OFCOCAOMIDL(float OONKDGBBIEK);
    // public System.Void BKOJBCMDGJD(System.Single OONKDGBBIEK)
    // Offset: 0x204EC3C
    void BKOJBCMDGJD(float OONKDGBBIEK);
    // private System.Void BMOCPLKALGM(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204ECFC
    void BMOCPLKALGM(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void JNBMKOKAOMP(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204F128
    void JNBMKOKAOMP(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void NEINHILBNLA(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204F194
    void NEINHILBNLA(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void HLDEFDLBHHE(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204F5C4
    void HLDEFDLBHHE(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void FDLGAOOBNFC(System.Single OONKDGBBIEK)
    // Offset: 0x204F9F0
    void FDLGAOOBNFC(float OONKDGBBIEK);
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x204FAB4
    void DGJGAFKDIDK();
    // private System.Void PCJNFBMIJFF(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x204FF74
    void PCJNFBMIJFF(::UnityEngine::GameObject* FOIEAOKBGLM);
  }; // MagicalActual.ConstructablePiece
  #pragma pack(pop)
  static check_size<sizeof(ConstructablePiece), 96 + sizeof(bool)> __MagicalActual_ConstructablePieceSizeCheck;
  static_assert(sizeof(ConstructablePiece) == 0x61);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::MABPCMHPPCC
// Il2CppName: MABPCMHPPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::MABPCMHPPCC)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "MABPCMHPPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::LLDJMDLDGMD
// Il2CppName: LLDJMDLDGMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::LLDJMDLDGMD)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "LLDJMDLDGMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)()>(&MagicalActual::ConstructablePiece::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::doGripInteraction
// Il2CppName: doGripInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::doGripInteraction)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "doGripInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)()>(&MagicalActual::ConstructablePiece::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::HDJOKAPCKNI
// Il2CppName: HDJOKAPCKNI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::HDJOKAPCKNI)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "HDJOKAPCKNI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::KECDGPHEOCK
// Il2CppName: KECDGPHEOCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::KECDGPHEOCK)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "KECDGPHEOCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::JFEOGKHDGDD
// Il2CppName: JFEOGKHDGDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::JFEOGKHDGDD)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "JFEOGKHDGDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::LOGEAPGMCOF
// Il2CppName: LOGEAPGMCOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::LOGEAPGMCOF)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "LOGEAPGMCOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::AJKLGPBNHAD
// Il2CppName: AJKLGPBNHAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::AJKLGPBNHAD)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "AJKLGPBNHAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::APMNGLNBFNP
// Il2CppName: APMNGLNBFNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)()>(&MagicalActual::ConstructablePiece::APMNGLNBFNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "APMNGLNBFNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)()>(&MagicalActual::ConstructablePiece::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::HLFDABPBIPM
// Il2CppName: HLFDABPBIPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::HLFDABPBIPM)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "HLFDABPBIPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::ILFKPAJNLJM
// Il2CppName: ILFKPAJNLJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::ILFKPAJNLJM)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "ILFKPAJNLJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::DIBPBEPLJBE
// Il2CppName: DIBPBEPLJBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::DIBPBEPLJBE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "DIBPBEPLJBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::EJGAJLCOJHK
// Il2CppName: EJGAJLCOJHK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::EJGAJLCOJHK)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "EJGAJLCOJHK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::KNANGLHFKIO
// Il2CppName: KNANGLHFKIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::KNANGLHFKIO)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "KNANGLHFKIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::randomizePosition
// Il2CppName: randomizePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::randomizePosition)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "randomizePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)()>(&MagicalActual::ConstructablePiece::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)()>(&MagicalActual::ConstructablePiece::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::OKHDADEJJNB
// Il2CppName: OKHDADEJJNB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::OKHDADEJJNB)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "OKHDADEJJNB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::PPCNNOOLAEB
// Il2CppName: PPCNNOOLAEB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::PPCNNOOLAEB)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "PPCNNOOLAEB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::CADKOELFLHA
// Il2CppName: CADKOELFLHA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::CADKOELFLHA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "CADKOELFLHA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)()>(&MagicalActual::ConstructablePiece::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::LDFHNNKLLMG
// Il2CppName: LDFHNNKLLMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::LDFHNNKLLMG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "LDFHNNKLLMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::IFLBHLFCMLB
// Il2CppName: IFLBHLFCMLB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::IFLBHLFCMLB)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "IFLBHLFCMLB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::doUnGripInteraction
// Il2CppName: doUnGripInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::doUnGripInteraction)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "doUnGripInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)()>(&MagicalActual::ConstructablePiece::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::JHFMDLNGOGA
// Il2CppName: JHFMDLNGOGA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::JHFMDLNGOGA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "JHFMDLNGOGA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::DCHGOBMEJGG
// Il2CppName: DCHGOBMEJGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::DCHGOBMEJGG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "DCHGOBMEJGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::JLBICMDMFPP
// Il2CppName: JLBICMDMFPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::JLBICMDMFPP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "JLBICMDMFPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::IDDKMEKLAGB
// Il2CppName: IDDKMEKLAGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::IDDKMEKLAGB)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "IDDKMEKLAGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::LPFKLEAIKJC
// Il2CppName: LPFKLEAIKJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::LPFKLEAIKJC)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "LPFKLEAIKJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)()>(&MagicalActual::ConstructablePiece::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::AKPHPCNFDKC
// Il2CppName: AKPHPCNFDKC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::AKPHPCNFDKC)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "AKPHPCNFDKC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::OFCOCAOMIDL
// Il2CppName: OFCOCAOMIDL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::OFCOCAOMIDL)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "OFCOCAOMIDL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::BKOJBCMDGJD
// Il2CppName: BKOJBCMDGJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::BKOJBCMDGJD)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "BKOJBCMDGJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::BMOCPLKALGM
// Il2CppName: BMOCPLKALGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::BMOCPLKALGM)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "BMOCPLKALGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::JNBMKOKAOMP
// Il2CppName: JNBMKOKAOMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::JNBMKOKAOMP)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "JNBMKOKAOMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::NEINHILBNLA
// Il2CppName: NEINHILBNLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::NEINHILBNLA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "NEINHILBNLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::HLDEFDLBHHE
// Il2CppName: HLDEFDLBHHE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::HLDEFDLBHHE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "HLDEFDLBHHE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::FDLGAOOBNFC
// Il2CppName: FDLGAOOBNFC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(float)>(&MagicalActual::ConstructablePiece::FDLGAOOBNFC)> {
  static const MethodInfo* get() {
    static auto* OONKDGBBIEK = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "FDLGAOOBNFC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OONKDGBBIEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)()>(&MagicalActual::ConstructablePiece::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::ConstructablePiece::PCJNFBMIJFF
// Il2CppName: PCJNFBMIJFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ConstructablePiece::*)(::UnityEngine::GameObject*)>(&MagicalActual::ConstructablePiece::PCJNFBMIJFF)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ConstructablePiece*), "PCJNFBMIJFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
