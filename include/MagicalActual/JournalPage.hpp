// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: JournalPage
  class JournalPage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::JournalPage);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::JournalPage*, "MagicalActual", "JournalPage");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.JournalPage
  // [TokenAttribute] Offset: FFFFFFFF
  class JournalPage : public ::Il2CppObject {
    public:
    public:
    // public System.String data
    // Size: 0x8
    // Offset: 0x10
    ::StringW data;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String image
    // Size: 0x8
    // Offset: 0x18
    ::StringW image;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 tpl
    // Size: 0x4
    // Offset: 0x20
    int tpl;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: tpl and: nid
    char __padding2[0x4] = {};
    // public System.String nid
    // Size: 0x8
    // Offset: 0x28
    ::StringW nid;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String data
    [[deprecated("Use field access instead!")]] ::StringW& dyn_data();
    // Get instance field reference: public System.String image
    [[deprecated("Use field access instead!")]] ::StringW& dyn_image();
    // Get instance field reference: public System.Int32 tpl
    [[deprecated("Use field access instead!")]] int& dyn_tpl();
    // Get instance field reference: public System.String nid
    [[deprecated("Use field access instead!")]] ::StringW& dyn_nid();
    // public System.Void .ctor()
    // Offset: 0x12744DC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JournalPage* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::JournalPage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JournalPage*, creationType>()));
    }
  }; // MagicalActual.JournalPage
  #pragma pack(pop)
  static check_size<sizeof(JournalPage), 40 + sizeof(::StringW)> __MagicalActual_JournalPageSizeCheck;
  static_assert(sizeof(JournalPage) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::JournalPage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
