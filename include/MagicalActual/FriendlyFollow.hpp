// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: FriendlyFollow
  class FriendlyFollow;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::FriendlyFollow);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::FriendlyFollow*, "MagicalActual", "FriendlyFollow");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x3C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.FriendlyFollow
  // [TokenAttribute] Offset: FFFFFFFF
  class FriendlyFollow : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private UnityEngine.Animator NBNKFBECLJG
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Animator* NBNKFBECLJG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animator*) == 0x8);
    // public UnityEngine.Vector3 destination
    // Size: 0xC
    // Offset: 0x30
    ::UnityEngine::Vector3 destination;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private UnityEngine.Animator NBNKFBECLJG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& dyn_NBNKFBECLJG();
    // Get instance field reference: public UnityEngine.Vector3 destination
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_destination();
    // public System.Void MMJIKEBHBJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1219764
    void MMJIKEBHBJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1219868
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void HMHEDOLPGEG(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x121996C
    void HMHEDOLPGEG(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x1219A64
    void CBMDGNKFPIO();
    // public System.Void PLPDCBMCEJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1219ABC
    void PLPDCBMCEJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void CFDACDEPNGK(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1219BC0
    void CFDACDEPNGK(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x1219CB8
    void GHLPBOJJHNG();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x1219D10
    void FGIFGGNGKPK();
    // public System.Void IEDNIMMEJBL(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1219D68
    void IEDNIMMEJBL(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OACMGPBCPEL()
    // Offset: 0x1219E6C
    void OACMGPBCPEL();
    // public System.Void AKEEGHHHCKK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1219EC4
    void AKEEGHHHCKK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void KHOMLKJBDGE(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1219FC8
    void KHOMLKJBDGE(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GECHLDPLPCC()
    // Offset: 0x121A0CC
    void GECHLDPLPCC();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x121A124
    void ABIHCGOKNCL();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x121A17C
    void NEDFCIDMJBB();
    // public System.Void KIDNJNOFOFF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x121A1D4
    void KIDNJNOFOFF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void HOCAAMOHPFG(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x121A2D8
    void HOCAAMOHPFG(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void KEGEKFNLCJD(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x121A3D0
    void KEGEKFNLCJD(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void CDIEPMEFHLM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x121A4D4
    void CDIEPMEFHLM(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void LDGBMNHMGKN(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x121A5CC
    void LDGBMNHMGKN(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void .ctor()
    // Offset: 0x121A6C4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FriendlyFollow* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::FriendlyFollow::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FriendlyFollow*, creationType>()));
    }
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x121A71C
    void PBEMGGBBDCK();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x121A774
    void DGJGAFKDIDK();
    // private System.Void AHNCCJGHCOE(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x121A7CC
    void AHNCCJGHCOE(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void HMKJKOKPOBP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x121A8C4
    void HMKJKOKPOBP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void AFIACGLCIPB()
    // Offset: 0x121A9C8
    void AFIACGLCIPB();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x121AA20
    void EIIKFEMCNKM();
    // private System.Void AKGFEENGKJD()
    // Offset: 0x121AA78
    void AKGFEENGKJD();
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x121AAD0
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void FNGLOIECKDG()
    // Offset: 0x121ABD4
    void FNGLOIECKDG();
    // public System.Void AMBHFINDKPK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x121AC2C
    void AMBHFINDKPK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x121AD30
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void Start()
    // Offset: 0x121AE34
    void Start();
  }; // MagicalActual.FriendlyFollow
  #pragma pack(pop)
  static check_size<sizeof(FriendlyFollow), 48 + sizeof(::UnityEngine::Vector3)> __MagicalActual_FriendlyFollowSizeCheck;
  static_assert(sizeof(FriendlyFollow) == 0x3C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::MMJIKEBHBJF
// Il2CppName: MMJIKEBHBJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::MMJIKEBHBJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "MMJIKEBHBJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::HMHEDOLPGEG
// Il2CppName: HMHEDOLPGEG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::System::Collections::ArrayList*)>(&MagicalActual::FriendlyFollow::HMHEDOLPGEG)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "HMHEDOLPGEG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::PLPDCBMCEJF
// Il2CppName: PLPDCBMCEJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::PLPDCBMCEJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "PLPDCBMCEJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::CFDACDEPNGK
// Il2CppName: CFDACDEPNGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::System::Collections::ArrayList*)>(&MagicalActual::FriendlyFollow::CFDACDEPNGK)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "CFDACDEPNGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::IEDNIMMEJBL
// Il2CppName: IEDNIMMEJBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::IEDNIMMEJBL)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "IEDNIMMEJBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::AKEEGHHHCKK
// Il2CppName: AKEEGHHHCKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::AKEEGHHHCKK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "AKEEGHHHCKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::KHOMLKJBDGE
// Il2CppName: KHOMLKJBDGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::KHOMLKJBDGE)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "KHOMLKJBDGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::KIDNJNOFOFF
// Il2CppName: KIDNJNOFOFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::KIDNJNOFOFF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "KIDNJNOFOFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::HOCAAMOHPFG
// Il2CppName: HOCAAMOHPFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::System::Collections::ArrayList*)>(&MagicalActual::FriendlyFollow::HOCAAMOHPFG)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "HOCAAMOHPFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::KEGEKFNLCJD
// Il2CppName: KEGEKFNLCJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::KEGEKFNLCJD)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "KEGEKFNLCJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::CDIEPMEFHLM
// Il2CppName: CDIEPMEFHLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::System::Collections::ArrayList*)>(&MagicalActual::FriendlyFollow::CDIEPMEFHLM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "CDIEPMEFHLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::LDGBMNHMGKN
// Il2CppName: LDGBMNHMGKN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::System::Collections::ArrayList*)>(&MagicalActual::FriendlyFollow::LDGBMNHMGKN)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "LDGBMNHMGKN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::AHNCCJGHCOE
// Il2CppName: AHNCCJGHCOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::System::Collections::ArrayList*)>(&MagicalActual::FriendlyFollow::AHNCCJGHCOE)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "AHNCCJGHCOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::HMKJKOKPOBP
// Il2CppName: HMKJKOKPOBP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::HMKJKOKPOBP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "HMKJKOKPOBP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::AMBHFINDKPK
// Il2CppName: AMBHFINDKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::AMBHFINDKPK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "AMBHFINDKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)(::MagicalActual::NetEntity*)>(&MagicalActual::FriendlyFollow::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::FriendlyFollow::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FriendlyFollow::*)()>(&MagicalActual::FriendlyFollow::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FriendlyFollow*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
