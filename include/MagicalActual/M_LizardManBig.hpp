// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_LizardManBig
  class M_LizardManBig;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_LizardManBig);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_LizardManBig*, "MagicalActual", "M_LizardManBig");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_LizardManBig
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD552C
  class M_LizardManBig : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxExplode
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxExplode;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x30
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public UnityEngine.GameObject vfxExplode
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxExplode();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // public System.Void PEIGGFEDFMM()
    // Offset: 0x243D35C
    void PEIGGFEDFMM();
    // private System.Void Start()
    // Offset: 0x243D520
    void Start();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x243D578
    void ABIHCGOKNCL();
    // public System.Void HBLBDDEJMNN()
    // Offset: 0x243D5D0
    void HBLBDDEJMNN();
    // private System.Void APMNGLNBFNP()
    // Offset: 0x243D794
    void APMNGLNBFNP();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x243D7EC
    void CBMDGNKFPIO();
    // public System.Void .ctor()
    // Offset: 0x243D844
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_LizardManBig* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_LizardManBig::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_LizardManBig*, creationType>()));
    }
    // public System.Void KLPLAHINIGH()
    // Offset: 0x243D89C
    void KLPLAHINIGH();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x243DAC0
    void LPLGKBGLPOK();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x243DB18
    void NNDKJCJFIAK();
    // public System.Void ALKHPPEDLNC()
    // Offset: 0x243DB70
    void ALKHPPEDLNC();
    // public System.Void OOGIJKGKAPL()
    // Offset: 0x243DD94
    void OOGIJKGKAPL();
    // public System.Void IBMKENLAMGB()
    // Offset: 0x243DF58
    void IBMKENLAMGB();
    // public System.Void JFBOMHHGFDN()
    // Offset: 0x243E17C
    void JFBOMHHGFDN();
    // public System.Void IJOCMGEEIBI()
    // Offset: 0x243E3A0
    void IJOCMGEEIBI();
    // public System.Void GBAAICCOPFK()
    // Offset: 0x243E564
    void GBAAICCOPFK();
    // public System.Void Explode()
    // Offset: 0x243E728
    void Explode();
    // public System.Void JJJEEFJLNPO()
    // Offset: 0x243E8E4
    void JJJEEFJLNPO();
    // public System.Void CEPPICBNJOI()
    // Offset: 0x243EAA8
    void CEPPICBNJOI();
    // public System.Void LBLEIBFAKLL()
    // Offset: 0x243ECCC
    void LBLEIBFAKLL();
    // public System.Void CIFIFPACELH()
    // Offset: 0x243EE90
    void CIFIFPACELH();
    // public System.Void FLFKEECHDOK()
    // Offset: 0x243F054
    void FLFKEECHDOK();
    // public System.Void DJLDAFIBFJM()
    // Offset: 0x243F218
    void DJLDAFIBFJM();
    // public System.Void Slash()
    // Offset: 0x243F3DC
    void Slash();
    // public System.Void KCAJLADPCMK()
    // Offset: 0x243F5F4
    void KCAJLADPCMK();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x243F7B8
    void DGJGAFKDIDK();
    // public System.Void DNEFCABLMPG()
    // Offset: 0x243F810
    void DNEFCABLMPG();
    // public System.Void OHLDGNPDGJL()
    // Offset: 0x243F9D4
    void OHLDGNPDGJL();
    // public System.Void DIDADMBDAAK()
    // Offset: 0x243FB98
    void DIDADMBDAAK();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x243FDBC
    void OACMGPBCPEL();
    // public System.Void MACOPOONGCD()
    // Offset: 0x243FE14
    void MACOPOONGCD();
    // private System.Void AHPDCIGFMJI()
    // Offset: 0x243FFD8
    void AHPDCIGFMJI();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x2440030
    void NEDFCIDMJBB();
    // public System.Void CCOODLILKJD()
    // Offset: 0x2440088
    void CCOODLILKJD();
    // public System.Void HJHKHMKNJBP()
    // Offset: 0x24402AC
    void HJHKHMKNJBP();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x2440470
    void GPFBGGFPINB();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x24404C8
    void KPOAAAHLGLA();
    // public System.Void GHLJGHPFBJA()
    // Offset: 0x2440520
    void GHLJGHPFBJA();
    // public System.Void MMGEIKLBBOH()
    // Offset: 0x24406E4
    void MMGEIKLBBOH();
    // public System.Void OBJOMKAHFMP()
    // Offset: 0x2440908
    void OBJOMKAHFMP();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x2440ACC
    void IDOCJGNLNFL();
  }; // MagicalActual.M_LizardManBig
  #pragma pack(pop)
  static check_size<sizeof(M_LizardManBig), 48 + sizeof(::StringW)> __MagicalActual_M_LizardManBigSizeCheck;
  static_assert(sizeof(M_LizardManBig) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::PEIGGFEDFMM
// Il2CppName: PEIGGFEDFMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::PEIGGFEDFMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "PEIGGFEDFMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::HBLBDDEJMNN
// Il2CppName: HBLBDDEJMNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::HBLBDDEJMNN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "HBLBDDEJMNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::APMNGLNBFNP
// Il2CppName: APMNGLNBFNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::APMNGLNBFNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "APMNGLNBFNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::KLPLAHINIGH
// Il2CppName: KLPLAHINIGH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::KLPLAHINIGH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "KLPLAHINIGH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::ALKHPPEDLNC
// Il2CppName: ALKHPPEDLNC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::ALKHPPEDLNC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "ALKHPPEDLNC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::OOGIJKGKAPL
// Il2CppName: OOGIJKGKAPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::OOGIJKGKAPL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "OOGIJKGKAPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::IBMKENLAMGB
// Il2CppName: IBMKENLAMGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::IBMKENLAMGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "IBMKENLAMGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::JFBOMHHGFDN
// Il2CppName: JFBOMHHGFDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::JFBOMHHGFDN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "JFBOMHHGFDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::IJOCMGEEIBI
// Il2CppName: IJOCMGEEIBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::IJOCMGEEIBI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "IJOCMGEEIBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::GBAAICCOPFK
// Il2CppName: GBAAICCOPFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::GBAAICCOPFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "GBAAICCOPFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::Explode
// Il2CppName: Explode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::Explode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "Explode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::JJJEEFJLNPO
// Il2CppName: JJJEEFJLNPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::JJJEEFJLNPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "JJJEEFJLNPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::CEPPICBNJOI
// Il2CppName: CEPPICBNJOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::CEPPICBNJOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "CEPPICBNJOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::LBLEIBFAKLL
// Il2CppName: LBLEIBFAKLL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::LBLEIBFAKLL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "LBLEIBFAKLL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::CIFIFPACELH
// Il2CppName: CIFIFPACELH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::CIFIFPACELH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "CIFIFPACELH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::FLFKEECHDOK
// Il2CppName: FLFKEECHDOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::FLFKEECHDOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "FLFKEECHDOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::DJLDAFIBFJM
// Il2CppName: DJLDAFIBFJM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::DJLDAFIBFJM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "DJLDAFIBFJM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::KCAJLADPCMK
// Il2CppName: KCAJLADPCMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::KCAJLADPCMK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "KCAJLADPCMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::DNEFCABLMPG
// Il2CppName: DNEFCABLMPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::DNEFCABLMPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "DNEFCABLMPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::OHLDGNPDGJL
// Il2CppName: OHLDGNPDGJL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::OHLDGNPDGJL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "OHLDGNPDGJL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::DIDADMBDAAK
// Il2CppName: DIDADMBDAAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::DIDADMBDAAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "DIDADMBDAAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::MACOPOONGCD
// Il2CppName: MACOPOONGCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::MACOPOONGCD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "MACOPOONGCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::AHPDCIGFMJI
// Il2CppName: AHPDCIGFMJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::AHPDCIGFMJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "AHPDCIGFMJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::CCOODLILKJD
// Il2CppName: CCOODLILKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::CCOODLILKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "CCOODLILKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::HJHKHMKNJBP
// Il2CppName: HJHKHMKNJBP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::HJHKHMKNJBP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "HJHKHMKNJBP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::GHLJGHPFBJA
// Il2CppName: GHLJGHPFBJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::GHLJGHPFBJA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "GHLJGHPFBJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::MMGEIKLBBOH
// Il2CppName: MMGEIKLBBOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::MMGEIKLBBOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "MMGEIKLBBOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::OBJOMKAHFMP
// Il2CppName: OBJOMKAHFMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::OBJOMKAHFMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "OBJOMKAHFMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_LizardManBig::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_LizardManBig::*)()>(&MagicalActual::M_LizardManBig::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_LizardManBig*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
