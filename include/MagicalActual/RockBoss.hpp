// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: PlayerCharacter
  class PlayerCharacter;
  // Forward declaring type: DamageParams
  class DamageParams;
  // Skipping declaration: AI_STATE because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Animator
  class Animator;
  // Forward declaring type: MeshCollider
  class MeshCollider;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: RockBoss
  class RockBoss;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::RockBoss);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::RockBoss*, "MagicalActual", "RockBoss");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x9C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.RockBoss
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD7A9C
  // [RequireComponent] Offset: AD7A9C
  class RockBoss : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::RockBoss::AI_STATE
    struct AI_STATE;
    // Nested type: ::MagicalActual::RockBoss::$finishSpawn$d__29
    class $finishSpawn$d__29;
    // Nested type: ::MagicalActual::RockBoss::$FinishGroundSlam$d__32
    class $FinishGroundSlam$d__32;
    // Nested type: ::MagicalActual::RockBoss::$FinishRockThrow$d__35
    class $FinishRockThrow$d__35;
    // Nested type: ::MagicalActual::RockBoss::$DropBoulders$d__40
    class $DropBoulders$d__40;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: MagicalActual.RockBoss/AI_STATE
    // [TokenAttribute] Offset: FFFFFFFF
    struct AI_STATE/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: AI_STATE
      constexpr AI_STATE(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public MagicalActual.RockBoss/AI_STATE FNCIFCNLJBM
      static constexpr const int FNCIFCNLJBM = 0;
      // Get static field: static public MagicalActual.RockBoss/AI_STATE FNCIFCNLJBM
      static ::MagicalActual::RockBoss::AI_STATE _get_FNCIFCNLJBM();
      // Set static field: static public MagicalActual.RockBoss/AI_STATE FNCIFCNLJBM
      static void _set_FNCIFCNLJBM(::MagicalActual::RockBoss::AI_STATE value);
      // static field const value: static public MagicalActual.RockBoss/AI_STATE PMGGPLGBCNH
      static constexpr const int PMGGPLGBCNH = 1;
      // Get static field: static public MagicalActual.RockBoss/AI_STATE PMGGPLGBCNH
      static ::MagicalActual::RockBoss::AI_STATE _get_PMGGPLGBCNH();
      // Set static field: static public MagicalActual.RockBoss/AI_STATE PMGGPLGBCNH
      static void _set_PMGGPLGBCNH(::MagicalActual::RockBoss::AI_STATE value);
      // static field const value: static public MagicalActual.RockBoss/AI_STATE NMGAECHJKEO
      static constexpr const int NMGAECHJKEO = 2;
      // Get static field: static public MagicalActual.RockBoss/AI_STATE NMGAECHJKEO
      static ::MagicalActual::RockBoss::AI_STATE _get_NMGAECHJKEO();
      // Set static field: static public MagicalActual.RockBoss/AI_STATE NMGAECHJKEO
      static void _set_NMGAECHJKEO(::MagicalActual::RockBoss::AI_STATE value);
      // static field const value: static public MagicalActual.RockBoss/AI_STATE JBJOCEINIHD
      static constexpr const int JBJOCEINIHD = 4;
      // Get static field: static public MagicalActual.RockBoss/AI_STATE JBJOCEINIHD
      static ::MagicalActual::RockBoss::AI_STATE _get_JBJOCEINIHD();
      // Set static field: static public MagicalActual.RockBoss/AI_STATE JBJOCEINIHD
      static void _set_JBJOCEINIHD(::MagicalActual::RockBoss::AI_STATE value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // MagicalActual.RockBoss/AI_STATE
    #pragma pack(pop)
    static check_size<sizeof(RockBoss::AI_STATE), 0 + sizeof(int)> __MagicalActual_RockBoss_AI_STATESizeCheck;
    static_assert(sizeof(RockBoss::AI_STATE) == 0x4);
    public:
    // public UnityEngine.GameObject[] orbitingBoulders
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::UnityEngine::GameObject*> orbitingBoulders;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // private UnityEngine.GameObject[] IDBGAHCFNAD
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::GameObject*> IDBGAHCFNAD;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private UnityEngine.Animator NBNKFBECLJG
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Animator* NBNKFBECLJG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Animator*) == 0x8);
    // private UnityEngine.MeshCollider BBOMOHLELBB
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::MeshCollider* BBOMOHLELBB;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshCollider*) == 0x8);
    // private System.Single BBONPLEDFLA
    // Size: 0x4
    // Offset: 0x40
    float BBONPLEDFLA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single CCMLIMLLHCP
    // Size: 0x4
    // Offset: 0x44
    float CCMLIMLLHCP;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean AEPELIIAEGH
    // Size: 0x1
    // Offset: 0x48
    bool AEPELIIAEGH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GJKOLILBJAP
    // Size: 0x1
    // Offset: 0x49
    bool GJKOLILBJAP;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GAOFEMHIEPN
    // Size: 0x1
    // Offset: 0x4A
    bool GAOFEMHIEPN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: GAOFEMHIEPN and: CHAOEEDPMNH
    char __padding9[0x1] = {};
    // private System.Single CHAOEEDPMNH
    // Size: 0x4
    // Offset: 0x4C
    float CHAOEEDPMNH;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single COJEHKOEOLN
    // Size: 0x4
    // Offset: 0x50
    float COJEHKOEOLN;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single KGDHKLHPKJD
    // Size: 0x4
    // Offset: 0x54
    float KGDHKLHPKJD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.GameObject HEDCBMIACJI
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* HEDCBMIACJI;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Vector3 KFFKKPCPPOE
    // Size: 0xC
    // Offset: 0x60
    ::UnityEngine::Vector3 KFFKKPCPPOE;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 HOIFEENPHDB
    // Size: 0xC
    // Offset: 0x6C
    ::UnityEngine::Vector3 HOIFEENPHDB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single BJOHKIHOEMB
    // Size: 0x4
    // Offset: 0x78
    float BJOHKIHOEMB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single GCFPAGNBFBC
    // Size: 0x4
    // Offset: 0x7C
    float GCFPAGNBFBC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single IEIEKLNEHOF
    // Size: 0x4
    // Offset: 0x80
    float IEIEKLNEHOF;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: IEIEKLNEHOF and: HMCEFHDBDOI
    char __padding18[0x4] = {};
    // private MagicalActual.PlayerCharacter HMCEFHDBDOI
    // Size: 0x8
    // Offset: 0x88
    ::MagicalActual::PlayerCharacter* HMCEFHDBDOI;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerCharacter*) == 0x8);
    // public UnityEngine.GameObject eyeBeam
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::GameObject* eyeBeam;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.RockBoss/AI_STATE GPFLJOAGINM
    // Size: 0x4
    // Offset: 0x98
    ::MagicalActual::RockBoss::AI_STATE GPFLJOAGINM;
    // Field size check
    static_assert(sizeof(::MagicalActual::RockBoss::AI_STATE) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.GameObject[] orbitingBoulders
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_orbitingBoulders();
    // Get instance field reference: private UnityEngine.GameObject[] IDBGAHCFNAD
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_IDBGAHCFNAD();
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: private UnityEngine.Animator NBNKFBECLJG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& dyn_NBNKFBECLJG();
    // Get instance field reference: private UnityEngine.MeshCollider BBOMOHLELBB
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& dyn_BBOMOHLELBB();
    // Get instance field reference: private System.Single BBONPLEDFLA
    [[deprecated("Use field access instead!")]] float& dyn_BBONPLEDFLA();
    // Get instance field reference: private System.Single CCMLIMLLHCP
    [[deprecated("Use field access instead!")]] float& dyn_CCMLIMLLHCP();
    // Get instance field reference: private System.Boolean AEPELIIAEGH
    [[deprecated("Use field access instead!")]] bool& dyn_AEPELIIAEGH();
    // Get instance field reference: private System.Boolean GJKOLILBJAP
    [[deprecated("Use field access instead!")]] bool& dyn_GJKOLILBJAP();
    // Get instance field reference: private System.Boolean GAOFEMHIEPN
    [[deprecated("Use field access instead!")]] bool& dyn_GAOFEMHIEPN();
    // Get instance field reference: private System.Single CHAOEEDPMNH
    [[deprecated("Use field access instead!")]] float& dyn_CHAOEEDPMNH();
    // Get instance field reference: private System.Single COJEHKOEOLN
    [[deprecated("Use field access instead!")]] float& dyn_COJEHKOEOLN();
    // Get instance field reference: private System.Single KGDHKLHPKJD
    [[deprecated("Use field access instead!")]] float& dyn_KGDHKLHPKJD();
    // Get instance field reference: private UnityEngine.GameObject HEDCBMIACJI
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_HEDCBMIACJI();
    // Get instance field reference: private UnityEngine.Vector3 KFFKKPCPPOE
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_KFFKKPCPPOE();
    // Get instance field reference: private UnityEngine.Vector3 HOIFEENPHDB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_HOIFEENPHDB();
    // Get instance field reference: private System.Single BJOHKIHOEMB
    [[deprecated("Use field access instead!")]] float& dyn_BJOHKIHOEMB();
    // Get instance field reference: private System.Single GCFPAGNBFBC
    [[deprecated("Use field access instead!")]] float& dyn_GCFPAGNBFBC();
    // Get instance field reference: private System.Single IEIEKLNEHOF
    [[deprecated("Use field access instead!")]] float& dyn_IEIEKLNEHOF();
    // Get instance field reference: private MagicalActual.PlayerCharacter HMCEFHDBDOI
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerCharacter*& dyn_HMCEFHDBDOI();
    // Get instance field reference: public UnityEngine.GameObject eyeBeam
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_eyeBeam();
    // Get instance field reference: private MagicalActual.RockBoss/AI_STATE GPFLJOAGINM
    [[deprecated("Use field access instead!")]] ::MagicalActual::RockBoss::AI_STATE& dyn_GPFLJOAGINM();
    // private System.Void OLOCPOEOKFG()
    // Offset: 0x12EDF58
    void OLOCPOEOKFG();
    // private UnityEngine.Vector3 JALDGHHOBKH(UnityEngine.Vector3 MILGJAJMKAB, UnityEngine.Vector3 LKMBPNJDCFN, System.Single BINJODOOEDL, System.Single FFNMEJOKJID)
    // Offset: 0x12EE550
    ::UnityEngine::Vector3 JALDGHHOBKH(::UnityEngine::Vector3 MILGJAJMKAB, ::UnityEngine::Vector3 LKMBPNJDCFN, float BINJODOOEDL, float FFNMEJOKJID);
    // private System.Collections.IEnumerator PNIIMMBKFFA(System.Single OFJPDJMKFBF)
    // Offset: 0x12EE7D4
    ::System::Collections::IEnumerator* PNIIMMBKFFA(float OFJPDJMKFBF);
    // private System.Collections.IEnumerator HLGBINOABPK(System.Single OFJPDJMKFBF)
    // Offset: 0x12EE898
    ::System::Collections::IEnumerator* HLGBINOABPK(float OFJPDJMKFBF);
    // private System.Void OOJDINHHEGB()
    // Offset: 0x12EE95C
    void OOJDINHHEGB();
    // private System.Void LMKDKDFBGGC(MagicalActual.PlayerCharacter AHEELFEFBHD)
    // Offset: 0x12EE9E0
    void LMKDKDFBGGC(::MagicalActual::PlayerCharacter* AHEELFEFBHD);
    // private System.Collections.IEnumerator MAPHGCFMGED(UnityEngine.Vector3 CNOLPPFAHJO, System.Single OFJPDJMKFBF)
    // Offset: 0x12EEB5C
    ::System::Collections::IEnumerator* MAPHGCFMGED(::UnityEngine::Vector3 CNOLPPFAHJO, float OFJPDJMKFBF);
    // private System.Void OJFAEAIKFED()
    // Offset: 0x12EEC4C
    void OJFAEAIKFED();
    // private System.Void FixedUpdate()
    // Offset: 0x12EF03C
    void FixedUpdate();
    // private System.Void NJIEJPCCCJF()
    // Offset: 0x12EFA6C
    void NJIEJPCCCJF();
    // private System.Void EJDEBDPKOMK()
    // Offset: 0x12EFB0C
    void EJDEBDPKOMK();
    // private System.Void OIFBLEGJAEI()
    // Offset: 0x12EF9D0
    void OIFBLEGJAEI();
    // private System.Void dealDamage(MagicalActual.DamageParams LHJBCMKCCFC)
    // Offset: 0x12EFF2C
    void dealDamage(::MagicalActual::DamageParams* LHJBCMKCCFC);
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x12EFFE8
    void KPOAAAHLGLA();
    // private System.Collections.IEnumerator JPJLHELBCHK(System.Single OFJPDJMKFBF)
    // Offset: 0x12EFE94
    ::System::Collections::IEnumerator* JPJLHELBCHK(float OFJPDJMKFBF);
    // private UnityEngine.GameObject IHEKAEICKAF(UnityEngine.GameObject GMBKCPONPNJ)
    // Offset: 0x12F03B8
    ::UnityEngine::GameObject* IHEKAEICKAF(::UnityEngine::GameObject* GMBKCPONPNJ);
    // private System.Void AJMNCCNEHNK()
    // Offset: 0x12F04A0
    void AJMNCCNEHNK();
    // private System.Void MLFDCAACKIO()
    // Offset: 0x12F0544
    void MLFDCAACKIO();
    // private System.Void ICEGDGKAIIB()
    // Offset: 0x12F05E8
    void ICEGDGKAIIB();
    // private System.Void JEDINCAJKLC()
    // Offset: 0x12F0CF8
    void JEDINCAJKLC();
    // private System.Void LJIONBBEFND()
    // Offset: 0x12F1540
    void LJIONBBEFND();
    // private System.Void CIJPPCPNPCI()
    // Offset: 0x12F1564
    void CIJPPCPNPCI();
    // private System.Void PKOFCDGNDDO()
    // Offset: 0x12EF7C4
    void PKOFCDGNDDO();
    // private System.Collections.IEnumerator KIFPLNPBHKC(System.Single OFJPDJMKFBF)
    // Offset: 0x12F1DAC
    ::System::Collections::IEnumerator* KIFPLNPBHKC(float OFJPDJMKFBF);
    // private System.Void OFEMOGAGALE()
    // Offset: 0x12F0C58
    void OFEMOGAGALE();
    // private System.Void LNJIEGEAKPJ()
    // Offset: 0x12F1E44
    void LNJIEGEAKPJ();
    // private System.Void ABAPNLLHNCO()
    // Offset: 0x12F14A0
    void ABAPNLLHNCO();
    // private MagicalActual.RockBoss/AI_STATE MMFDKOKPAPG()
    // Offset: 0x12F1CDC
    ::MagicalActual::RockBoss::AI_STATE MMFDKOKPAPG();
    // private System.Void CBIJIODAMOL(MagicalActual.PlayerCharacter AHEELFEFBHD)
    // Offset: 0x12F1EE4
    void CBIJIODAMOL(::MagicalActual::PlayerCharacter* AHEELFEFBHD);
    // private System.Void DDEJMDHIBHN(MagicalActual.PlayerCharacter AHEELFEFBHD)
    // Offset: 0x12F1CE4
    void DDEJMDHIBHN(::MagicalActual::PlayerCharacter* AHEELFEFBHD);
    // public System.Void .ctor()
    // Offset: 0x12F1FB0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RockBoss* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::RockBoss::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RockBoss*, creationType>()));
    }
    // private System.Void MLDODOANCJC(MagicalActual.RockBoss/AI_STATE MMMEIONJJFJ)
    // Offset: 0x12F1FD4
    void MLDODOANCJC(::MagicalActual::RockBoss::AI_STATE MMMEIONJJFJ);
    // private System.Void ADEDHPLAGNI()
    // Offset: 0x12F1FEC
    void ADEDHPLAGNI();
    // private System.Void GFCMADDHGCG()
    // Offset: 0x12F2090
    void GFCMADDHGCG();
    // private System.Void ELCCHHBGCEN(MagicalActual.PlayerCharacter AHEELFEFBHD)
    // Offset: 0x12F20C4
    void ELCCHHBGCEN(::MagicalActual::PlayerCharacter* AHEELFEFBHD);
    // private System.Void FGGKEEKHDHN()
    // Offset: 0x12F2184
    void FGGKEEKHDHN();
    // private System.Void IHOHBJBGABC()
    // Offset: 0x12F0A4C
    void IHOHBJBGABC();
    // private System.Void PAIAFIKJBPH()
    // Offset: 0x12F2424
    void PAIAFIKJBPH();
    // private System.Collections.IEnumerator CDKGLEPMONO(UnityEngine.Vector3 CNOLPPFAHJO, System.Single OFJPDJMKFBF)
    // Offset: 0x12EEA9C
    ::System::Collections::IEnumerator* CDKGLEPMONO(::UnityEngine::Vector3 CNOLPPFAHJO, float OFJPDJMKFBF);
    // private System.Void NDLEFHPCJDJ()
    // Offset: 0x12F1734
    void NDLEFHPCJDJ();
    // private System.Void KKNDPAFENBH()
    // Offset: 0x12F2438
    void KKNDPAFENBH();
    // private System.Void HPEBJFHHLIO()
    // Offset: 0x12EF238
    void HPEBJFHHLIO();
    // private System.Void HCMALMEAHJD()
    // Offset: 0x12F2454
    void HCMALMEAHJD();
    // private UnityEngine.GameObject BMFMCFOLKDN(UnityEngine.GameObject GMBKCPONPNJ)
    // Offset: 0x12F24D8
    ::UnityEngine::GameObject* BMFMCFOLKDN(::UnityEngine::GameObject* GMBKCPONPNJ);
    // private System.Void AHNBNAKJFFH()
    // Offset: 0x12F25C0
    void AHNBNAKJFFH();
    // private System.Void KKPHDNEPAKJ()
    // Offset: 0x12F2644
    void KKPHDNEPAKJ();
    // private UnityEngine.GameObject CIFGPMGIFBL(UnityEngine.GameObject GMBKCPONPNJ)
    // Offset: 0x12F26E8
    ::UnityEngine::GameObject* CIFGPMGIFBL(::UnityEngine::GameObject* GMBKCPONPNJ);
    // private System.Void LMDPBMKAGJG(MagicalActual.PlayerCharacter AHEELFEFBHD)
    // Offset: 0x12F27D0
    void LMDPBMKAGJG(::MagicalActual::PlayerCharacter* AHEELFEFBHD);
    // private System.Void CBEDJNEPDBB()
    // Offset: 0x12F0EF8
    void CBEDJNEPDBB();
    // private System.Void LDLPKDONGCN(MagicalActual.RockBoss/AI_STATE MMMEIONJJFJ)
    // Offset: 0x12F1550
    void LDLPKDONGCN(::MagicalActual::RockBoss::AI_STATE MMMEIONJJFJ);
    // private UnityEngine.Vector3 LEJLLOFKHHN(UnityEngine.Vector3 MILGJAJMKAB, UnityEngine.Vector3 LKMBPNJDCFN, System.Single BINJODOOEDL, System.Single FFNMEJOKJID)
    // Offset: 0x12F289C
    ::UnityEngine::Vector3 LEJLLOFKHHN(::UnityEngine::Vector3 MILGJAJMKAB, ::UnityEngine::Vector3 LKMBPNJDCFN, float BINJODOOEDL, float FFNMEJOKJID);
    // private System.Void AGLIPHMNACH()
    // Offset: 0x12F2B20
    void AGLIPHMNACH();
    // private System.Void EBMJNDEFNPA()
    // Offset: 0x12F2384
    void EBMJNDEFNPA();
    // private System.Void OOEIJIIEPGG()
    // Offset: 0x12F2BA4
    void OOEIJIIEPGG();
    // private System.Collections.IEnumerator HMMLCPOAJOF(System.Single OFJPDJMKFBF)
    // Offset: 0x12F2C48
    ::System::Collections::IEnumerator* HMMLCPOAJOF(float OFJPDJMKFBF);
    // private System.Void FPEIGLELIHO()
    // Offset: 0x12F07E8
    void FPEIGLELIHO();
    // private UnityEngine.Vector3 BPONBBMJFOJ(UnityEngine.Vector3 MILGJAJMKAB, UnityEngine.Vector3 LKMBPNJDCFN, System.Single BINJODOOEDL, System.Single FFNMEJOKJID)
    // Offset: 0x12EE1B0
    ::UnityEngine::Vector3 BPONBBMJFOJ(::UnityEngine::Vector3 MILGJAJMKAB, ::UnityEngine::Vector3 LKMBPNJDCFN, float BINJODOOEDL, float FFNMEJOKJID);
    // private System.Void Start()
    // Offset: 0x12F2D0C
    void Start();
    // private System.Void ONCPBELDDLI(MagicalActual.RockBoss/AI_STATE MMMEIONJJFJ)
    // Offset: 0x12F20A8
    void ONCPBELDDLI(::MagicalActual::RockBoss::AI_STATE MMMEIONJJFJ);
    // private System.Void NNDCJJKFOLD()
    // Offset: 0x12F30FC
    void NNDCJJKFOLD();
  }; // MagicalActual.RockBoss
  #pragma pack(pop)
  static check_size<sizeof(RockBoss), 152 + sizeof(::MagicalActual::RockBoss::AI_STATE)> __MagicalActual_RockBossSizeCheck;
  static_assert(sizeof(RockBoss) == 0x9C);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::RockBoss::AI_STATE, "MagicalActual", "RockBoss/AI_STATE");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::RockBoss::OLOCPOEOKFG
// Il2CppName: OLOCPOEOKFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::OLOCPOEOKFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "OLOCPOEOKFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::JALDGHHOBKH
// Il2CppName: JALDGHHOBKH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RockBoss::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, float, float)>(&MagicalActual::RockBoss::JALDGHHOBKH)> {
  static const MethodInfo* get() {
    static auto* MILGJAJMKAB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LKMBPNJDCFN = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* BINJODOOEDL = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "JALDGHHOBKH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MILGJAJMKAB, LKMBPNJDCFN, BINJODOOEDL, FFNMEJOKJID});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::PNIIMMBKFFA
// Il2CppName: PNIIMMBKFFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::RockBoss::*)(float)>(&MagicalActual::RockBoss::PNIIMMBKFFA)> {
  static const MethodInfo* get() {
    static auto* OFJPDJMKFBF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "PNIIMMBKFFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OFJPDJMKFBF});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::HLGBINOABPK
// Il2CppName: HLGBINOABPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::RockBoss::*)(float)>(&MagicalActual::RockBoss::HLGBINOABPK)> {
  static const MethodInfo* get() {
    static auto* OFJPDJMKFBF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "HLGBINOABPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OFJPDJMKFBF});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::OOJDINHHEGB
// Il2CppName: OOJDINHHEGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::OOJDINHHEGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "OOJDINHHEGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::LMKDKDFBGGC
// Il2CppName: LMKDKDFBGGC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)(::MagicalActual::PlayerCharacter*)>(&MagicalActual::RockBoss::LMKDKDFBGGC)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerCharacter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "LMKDKDFBGGC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::MAPHGCFMGED
// Il2CppName: MAPHGCFMGED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::RockBoss::*)(::UnityEngine::Vector3, float)>(&MagicalActual::RockBoss::MAPHGCFMGED)> {
  static const MethodInfo* get() {
    static auto* CNOLPPFAHJO = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* OFJPDJMKFBF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "MAPHGCFMGED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CNOLPPFAHJO, OFJPDJMKFBF});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::OJFAEAIKFED
// Il2CppName: OJFAEAIKFED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::OJFAEAIKFED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "OJFAEAIKFED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::NJIEJPCCCJF
// Il2CppName: NJIEJPCCCJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::NJIEJPCCCJF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "NJIEJPCCCJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::EJDEBDPKOMK
// Il2CppName: EJDEBDPKOMK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::EJDEBDPKOMK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "EJDEBDPKOMK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::OIFBLEGJAEI
// Il2CppName: OIFBLEGJAEI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::OIFBLEGJAEI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "OIFBLEGJAEI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::dealDamage
// Il2CppName: dealDamage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)(::MagicalActual::DamageParams*)>(&MagicalActual::RockBoss::dealDamage)> {
  static const MethodInfo* get() {
    static auto* LHJBCMKCCFC = &::il2cpp_utils::GetClassFromName("MagicalActual", "DamageParams")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "dealDamage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LHJBCMKCCFC});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::JPJLHELBCHK
// Il2CppName: JPJLHELBCHK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::RockBoss::*)(float)>(&MagicalActual::RockBoss::JPJLHELBCHK)> {
  static const MethodInfo* get() {
    static auto* OFJPDJMKFBF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "JPJLHELBCHK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OFJPDJMKFBF});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::IHEKAEICKAF
// Il2CppName: IHEKAEICKAF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::RockBoss::*)(::UnityEngine::GameObject*)>(&MagicalActual::RockBoss::IHEKAEICKAF)> {
  static const MethodInfo* get() {
    static auto* GMBKCPONPNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "IHEKAEICKAF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMBKCPONPNJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::AJMNCCNEHNK
// Il2CppName: AJMNCCNEHNK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::AJMNCCNEHNK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "AJMNCCNEHNK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::MLFDCAACKIO
// Il2CppName: MLFDCAACKIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::MLFDCAACKIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "MLFDCAACKIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::ICEGDGKAIIB
// Il2CppName: ICEGDGKAIIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::ICEGDGKAIIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "ICEGDGKAIIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::JEDINCAJKLC
// Il2CppName: JEDINCAJKLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::JEDINCAJKLC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "JEDINCAJKLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::LJIONBBEFND
// Il2CppName: LJIONBBEFND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::LJIONBBEFND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "LJIONBBEFND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::CIJPPCPNPCI
// Il2CppName: CIJPPCPNPCI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::CIJPPCPNPCI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "CIJPPCPNPCI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::PKOFCDGNDDO
// Il2CppName: PKOFCDGNDDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::PKOFCDGNDDO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "PKOFCDGNDDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::KIFPLNPBHKC
// Il2CppName: KIFPLNPBHKC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::RockBoss::*)(float)>(&MagicalActual::RockBoss::KIFPLNPBHKC)> {
  static const MethodInfo* get() {
    static auto* OFJPDJMKFBF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "KIFPLNPBHKC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OFJPDJMKFBF});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::OFEMOGAGALE
// Il2CppName: OFEMOGAGALE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::OFEMOGAGALE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "OFEMOGAGALE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::LNJIEGEAKPJ
// Il2CppName: LNJIEGEAKPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::LNJIEGEAKPJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "LNJIEGEAKPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::ABAPNLLHNCO
// Il2CppName: ABAPNLLHNCO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::ABAPNLLHNCO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "ABAPNLLHNCO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::MMFDKOKPAPG
// Il2CppName: MMFDKOKPAPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::RockBoss::AI_STATE (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::MMFDKOKPAPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "MMFDKOKPAPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::CBIJIODAMOL
// Il2CppName: CBIJIODAMOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)(::MagicalActual::PlayerCharacter*)>(&MagicalActual::RockBoss::CBIJIODAMOL)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerCharacter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "CBIJIODAMOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::DDEJMDHIBHN
// Il2CppName: DDEJMDHIBHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)(::MagicalActual::PlayerCharacter*)>(&MagicalActual::RockBoss::DDEJMDHIBHN)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerCharacter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "DDEJMDHIBHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::RockBoss::MLDODOANCJC
// Il2CppName: MLDODOANCJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)(::MagicalActual::RockBoss::AI_STATE)>(&MagicalActual::RockBoss::MLDODOANCJC)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "RockBoss/AI_STATE")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "MLDODOANCJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::ADEDHPLAGNI
// Il2CppName: ADEDHPLAGNI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::ADEDHPLAGNI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "ADEDHPLAGNI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::GFCMADDHGCG
// Il2CppName: GFCMADDHGCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::GFCMADDHGCG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "GFCMADDHGCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::ELCCHHBGCEN
// Il2CppName: ELCCHHBGCEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)(::MagicalActual::PlayerCharacter*)>(&MagicalActual::RockBoss::ELCCHHBGCEN)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerCharacter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "ELCCHHBGCEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::FGGKEEKHDHN
// Il2CppName: FGGKEEKHDHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::FGGKEEKHDHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "FGGKEEKHDHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::IHOHBJBGABC
// Il2CppName: IHOHBJBGABC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::IHOHBJBGABC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "IHOHBJBGABC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::PAIAFIKJBPH
// Il2CppName: PAIAFIKJBPH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::PAIAFIKJBPH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "PAIAFIKJBPH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::CDKGLEPMONO
// Il2CppName: CDKGLEPMONO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::RockBoss::*)(::UnityEngine::Vector3, float)>(&MagicalActual::RockBoss::CDKGLEPMONO)> {
  static const MethodInfo* get() {
    static auto* CNOLPPFAHJO = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* OFJPDJMKFBF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "CDKGLEPMONO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CNOLPPFAHJO, OFJPDJMKFBF});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::NDLEFHPCJDJ
// Il2CppName: NDLEFHPCJDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::NDLEFHPCJDJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "NDLEFHPCJDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::KKNDPAFENBH
// Il2CppName: KKNDPAFENBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::KKNDPAFENBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "KKNDPAFENBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::HPEBJFHHLIO
// Il2CppName: HPEBJFHHLIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::HPEBJFHHLIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "HPEBJFHHLIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::HCMALMEAHJD
// Il2CppName: HCMALMEAHJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::HCMALMEAHJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "HCMALMEAHJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::BMFMCFOLKDN
// Il2CppName: BMFMCFOLKDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::RockBoss::*)(::UnityEngine::GameObject*)>(&MagicalActual::RockBoss::BMFMCFOLKDN)> {
  static const MethodInfo* get() {
    static auto* GMBKCPONPNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "BMFMCFOLKDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMBKCPONPNJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::AHNBNAKJFFH
// Il2CppName: AHNBNAKJFFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::AHNBNAKJFFH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "AHNBNAKJFFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::KKPHDNEPAKJ
// Il2CppName: KKPHDNEPAKJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::KKPHDNEPAKJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "KKPHDNEPAKJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::CIFGPMGIFBL
// Il2CppName: CIFGPMGIFBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::RockBoss::*)(::UnityEngine::GameObject*)>(&MagicalActual::RockBoss::CIFGPMGIFBL)> {
  static const MethodInfo* get() {
    static auto* GMBKCPONPNJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "CIFGPMGIFBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMBKCPONPNJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::LMDPBMKAGJG
// Il2CppName: LMDPBMKAGJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)(::MagicalActual::PlayerCharacter*)>(&MagicalActual::RockBoss::LMDPBMKAGJG)> {
  static const MethodInfo* get() {
    static auto* AHEELFEFBHD = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerCharacter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "LMDPBMKAGJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHEELFEFBHD});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::CBEDJNEPDBB
// Il2CppName: CBEDJNEPDBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::CBEDJNEPDBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "CBEDJNEPDBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::LDLPKDONGCN
// Il2CppName: LDLPKDONGCN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)(::MagicalActual::RockBoss::AI_STATE)>(&MagicalActual::RockBoss::LDLPKDONGCN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "RockBoss/AI_STATE")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "LDLPKDONGCN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::LEJLLOFKHHN
// Il2CppName: LEJLLOFKHHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RockBoss::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, float, float)>(&MagicalActual::RockBoss::LEJLLOFKHHN)> {
  static const MethodInfo* get() {
    static auto* MILGJAJMKAB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LKMBPNJDCFN = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* BINJODOOEDL = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "LEJLLOFKHHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MILGJAJMKAB, LKMBPNJDCFN, BINJODOOEDL, FFNMEJOKJID});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::AGLIPHMNACH
// Il2CppName: AGLIPHMNACH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::AGLIPHMNACH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "AGLIPHMNACH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::EBMJNDEFNPA
// Il2CppName: EBMJNDEFNPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::EBMJNDEFNPA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "EBMJNDEFNPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::OOEIJIIEPGG
// Il2CppName: OOEIJIIEPGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::OOEIJIIEPGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "OOEIJIIEPGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::HMMLCPOAJOF
// Il2CppName: HMMLCPOAJOF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::RockBoss::*)(float)>(&MagicalActual::RockBoss::HMMLCPOAJOF)> {
  static const MethodInfo* get() {
    static auto* OFJPDJMKFBF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "HMMLCPOAJOF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OFJPDJMKFBF});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::FPEIGLELIHO
// Il2CppName: FPEIGLELIHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::FPEIGLELIHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "FPEIGLELIHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::BPONBBMJFOJ
// Il2CppName: BPONBBMJFOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::RockBoss::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, float, float)>(&MagicalActual::RockBoss::BPONBBMJFOJ)> {
  static const MethodInfo* get() {
    static auto* MILGJAJMKAB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LKMBPNJDCFN = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* BINJODOOEDL = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "BPONBBMJFOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MILGJAJMKAB, LKMBPNJDCFN, BINJODOOEDL, FFNMEJOKJID});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::ONCPBELDDLI
// Il2CppName: ONCPBELDDLI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)(::MagicalActual::RockBoss::AI_STATE)>(&MagicalActual::RockBoss::ONCPBELDDLI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "RockBoss/AI_STATE")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "ONCPBELDDLI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::RockBoss::NNDCJJKFOLD
// Il2CppName: NNDCJJKFOLD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::RockBoss::*)()>(&MagicalActual::RockBoss::NNDCJJKFOLD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::RockBoss*), "NNDCJJKFOLD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
