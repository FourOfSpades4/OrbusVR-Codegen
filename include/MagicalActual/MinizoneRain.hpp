// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: MinizoneRain
  class MinizoneRain;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::MinizoneRain);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::MinizoneRain*, "MagicalActual", "MinizoneRain");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.MinizoneRain
  // [TokenAttribute] Offset: FFFFFFFF
  class MinizoneRain : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private UnityEngine.GameObject rain
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* rain;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.GameObject rain
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_rain();
    // private System.Void CEGEBCFNLFC()
    // Offset: 0x13EEFD8
    void CEGEBCFNLFC();
    // private System.Void NGCGKDPPDBG()
    // Offset: 0x13EF124
    void NGCGKDPPDBG();
    // private System.Void GEJIJMPGALF()
    // Offset: 0x13EF270
    void GEJIJMPGALF();
    // private System.Void DPDDNOBAFIP()
    // Offset: 0x13EF3BC
    void DPDDNOBAFIP();
    // private System.Void LIFGLIHALIG()
    // Offset: 0x13EF508
    void LIFGLIHALIG();
    // private System.Void ALBIFINHMJA()
    // Offset: 0x13EF654
    void ALBIFINHMJA();
    // private System.Void KEBOKGFLFJA()
    // Offset: 0x13EF7A0
    void KEBOKGFLFJA();
    // private System.Void EBNFNLMHNGE()
    // Offset: 0x13EF8EC
    void EBNFNLMHNGE();
    // private System.Void INJNMDOBFOI()
    // Offset: 0x13EFA38
    void INJNMDOBFOI();
    // private System.Void AGDFOIFHGGG()
    // Offset: 0x13EFB84
    void AGDFOIFHGGG();
    // private System.Void LJOGIPIJIPF()
    // Offset: 0x13EFCD0
    void LJOGIPIJIPF();
    // private System.Void ABCHNNEJECC()
    // Offset: 0x13EFE1C
    void ABCHNNEJECC();
    // private System.Void KCEPMBHOMCD()
    // Offset: 0x13EFF68
    void KCEPMBHOMCD();
    // private System.Void MHHFAOGFAPO()
    // Offset: 0x13F00B4
    void MHHFAOGFAPO();
    // private System.Void FEIGDJNEHBG()
    // Offset: 0x13F0200
    void FEIGDJNEHBG();
    // private System.Void MJKAGCAKHHO()
    // Offset: 0x13F034C
    void MJKAGCAKHHO();
    // public System.Void .ctor()
    // Offset: 0x13F0498
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MinizoneRain* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::MinizoneRain::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MinizoneRain*, creationType>()));
    }
    // private System.Void BJMMJNDCPLF()
    // Offset: 0x13F04A0
    void BJMMJNDCPLF();
    // private System.Void PPKHOKCIJBL()
    // Offset: 0x13F05EC
    void PPKHOKCIJBL();
    // private System.Void Update()
    // Offset: 0x13F0738
    void Update();
    // private System.Void EFGJFMENOAL()
    // Offset: 0x13F0884
    void EFGJFMENOAL();
    // private System.Void JEIAGCBHHHI()
    // Offset: 0x13F09D0
    void JEIAGCBHHHI();
    // private System.Void PKLDGKBPOAP()
    // Offset: 0x13F0B1C
    void PKLDGKBPOAP();
    // private System.Void GHBOEBHBEEJ()
    // Offset: 0x13F0C68
    void GHBOEBHBEEJ();
    // private System.Void BPEFOMJJHKO()
    // Offset: 0x13F0DB4
    void BPEFOMJJHKO();
    // private System.Void BBJMDBPOCMH()
    // Offset: 0x13F0F00
    void BBJMDBPOCMH();
    // private System.Void GLPPOHKJANF()
    // Offset: 0x13F104C
    void GLPPOHKJANF();
    // private System.Void JGPEKDOEPOC()
    // Offset: 0x13F1198
    void JGPEKDOEPOC();
    // private System.Void CMGMNHMIHFD()
    // Offset: 0x13F12E4
    void CMGMNHMIHFD();
    // private System.Void FBDBGKLFFOI()
    // Offset: 0x13F1430
    void FBDBGKLFFOI();
    // private System.Void EFLLEILOGJN()
    // Offset: 0x13F157C
    void EFLLEILOGJN();
    // private System.Void PNKHLJDEJNA()
    // Offset: 0x13F16C8
    void PNKHLJDEJNA();
    // private System.Void DMNMEKAJBNA()
    // Offset: 0x13F1814
    void DMNMEKAJBNA();
    // private System.Void FMCFFLJCCCP()
    // Offset: 0x13F1960
    void FMCFFLJCCCP();
    // private System.Void JJNHCABMBIH()
    // Offset: 0x13F1AAC
    void JJNHCABMBIH();
    // private System.Void DHCNJHAMIJO()
    // Offset: 0x13F1BF8
    void DHCNJHAMIJO();
    // private System.Void MGNEDHFLOCJ()
    // Offset: 0x13F1D44
    void MGNEDHFLOCJ();
    // private System.Void CHMCEGMCENL()
    // Offset: 0x13F1E90
    void CHMCEGMCENL();
    // private System.Void FGJDPFAAKOM()
    // Offset: 0x13F1FDC
    void FGJDPFAAKOM();
  }; // MagicalActual.MinizoneRain
  #pragma pack(pop)
  static check_size<sizeof(MinizoneRain), 24 + sizeof(::UnityEngine::GameObject*)> __MagicalActual_MinizoneRainSizeCheck;
  static_assert(sizeof(MinizoneRain) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::CEGEBCFNLFC
// Il2CppName: CEGEBCFNLFC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::CEGEBCFNLFC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "CEGEBCFNLFC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::NGCGKDPPDBG
// Il2CppName: NGCGKDPPDBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::NGCGKDPPDBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "NGCGKDPPDBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::GEJIJMPGALF
// Il2CppName: GEJIJMPGALF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::GEJIJMPGALF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "GEJIJMPGALF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::DPDDNOBAFIP
// Il2CppName: DPDDNOBAFIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::DPDDNOBAFIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "DPDDNOBAFIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::LIFGLIHALIG
// Il2CppName: LIFGLIHALIG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::LIFGLIHALIG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "LIFGLIHALIG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::ALBIFINHMJA
// Il2CppName: ALBIFINHMJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::ALBIFINHMJA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "ALBIFINHMJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::KEBOKGFLFJA
// Il2CppName: KEBOKGFLFJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::KEBOKGFLFJA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "KEBOKGFLFJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::EBNFNLMHNGE
// Il2CppName: EBNFNLMHNGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::EBNFNLMHNGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "EBNFNLMHNGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::INJNMDOBFOI
// Il2CppName: INJNMDOBFOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::INJNMDOBFOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "INJNMDOBFOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::AGDFOIFHGGG
// Il2CppName: AGDFOIFHGGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::AGDFOIFHGGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "AGDFOIFHGGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::LJOGIPIJIPF
// Il2CppName: LJOGIPIJIPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::LJOGIPIJIPF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "LJOGIPIJIPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::ABCHNNEJECC
// Il2CppName: ABCHNNEJECC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::ABCHNNEJECC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "ABCHNNEJECC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::KCEPMBHOMCD
// Il2CppName: KCEPMBHOMCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::KCEPMBHOMCD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "KCEPMBHOMCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::MHHFAOGFAPO
// Il2CppName: MHHFAOGFAPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::MHHFAOGFAPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "MHHFAOGFAPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::FEIGDJNEHBG
// Il2CppName: FEIGDJNEHBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::FEIGDJNEHBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "FEIGDJNEHBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::MJKAGCAKHHO
// Il2CppName: MJKAGCAKHHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::MJKAGCAKHHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "MJKAGCAKHHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::BJMMJNDCPLF
// Il2CppName: BJMMJNDCPLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::BJMMJNDCPLF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "BJMMJNDCPLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::PPKHOKCIJBL
// Il2CppName: PPKHOKCIJBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::PPKHOKCIJBL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "PPKHOKCIJBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::EFGJFMENOAL
// Il2CppName: EFGJFMENOAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::EFGJFMENOAL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "EFGJFMENOAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::JEIAGCBHHHI
// Il2CppName: JEIAGCBHHHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::JEIAGCBHHHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "JEIAGCBHHHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::PKLDGKBPOAP
// Il2CppName: PKLDGKBPOAP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::PKLDGKBPOAP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "PKLDGKBPOAP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::GHBOEBHBEEJ
// Il2CppName: GHBOEBHBEEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::GHBOEBHBEEJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "GHBOEBHBEEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::BPEFOMJJHKO
// Il2CppName: BPEFOMJJHKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::BPEFOMJJHKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "BPEFOMJJHKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::BBJMDBPOCMH
// Il2CppName: BBJMDBPOCMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::BBJMDBPOCMH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "BBJMDBPOCMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::GLPPOHKJANF
// Il2CppName: GLPPOHKJANF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::GLPPOHKJANF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "GLPPOHKJANF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::JGPEKDOEPOC
// Il2CppName: JGPEKDOEPOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::JGPEKDOEPOC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "JGPEKDOEPOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::CMGMNHMIHFD
// Il2CppName: CMGMNHMIHFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::CMGMNHMIHFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "CMGMNHMIHFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::FBDBGKLFFOI
// Il2CppName: FBDBGKLFFOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::FBDBGKLFFOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "FBDBGKLFFOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::EFLLEILOGJN
// Il2CppName: EFLLEILOGJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::EFLLEILOGJN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "EFLLEILOGJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::PNKHLJDEJNA
// Il2CppName: PNKHLJDEJNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::PNKHLJDEJNA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "PNKHLJDEJNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::DMNMEKAJBNA
// Il2CppName: DMNMEKAJBNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::DMNMEKAJBNA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "DMNMEKAJBNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::FMCFFLJCCCP
// Il2CppName: FMCFFLJCCCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::FMCFFLJCCCP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "FMCFFLJCCCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::JJNHCABMBIH
// Il2CppName: JJNHCABMBIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::JJNHCABMBIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "JJNHCABMBIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::DHCNJHAMIJO
// Il2CppName: DHCNJHAMIJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::DHCNJHAMIJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "DHCNJHAMIJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::MGNEDHFLOCJ
// Il2CppName: MGNEDHFLOCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::MGNEDHFLOCJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "MGNEDHFLOCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::CHMCEGMCENL
// Il2CppName: CHMCEGMCENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::CHMCEGMCENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "CHMCEGMCENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::MinizoneRain::FGJDPFAAKOM
// Il2CppName: FGJDPFAAKOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::MinizoneRain::*)()>(&MagicalActual::MinizoneRain::FGJDPFAAKOM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::MinizoneRain*), "FGJDPFAAKOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
