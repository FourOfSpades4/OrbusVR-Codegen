// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerTool
  class PlayerTool;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NarwahlHorn
  class NarwahlHorn;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::NarwahlHorn);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::NarwahlHorn*, "MagicalActual", "NarwahlHorn");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.NarwahlHorn
  // [TokenAttribute] Offset: FFFFFFFF
  class NarwahlHorn : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.PlayerTool FKJHGIFOJKD
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::PlayerTool* FKJHGIFOJKD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerTool*) == 0x8);
    // private System.Boolean IMAFJMEOHIF
    // Size: 0x1
    // Offset: 0x20
    bool IMAFJMEOHIF;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IMAFJMEOHIF and: JGOGJDHABHN
    char __padding1[0x7] = {};
    // private UnityEngine.Collider[] JGOGJDHABHN
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::UnityEngine::Collider*> JGOGJDHABHN;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // private System.String ACNINLKMMKB
    // Size: 0x8
    // Offset: 0x30
    ::StringW ACNINLKMMKB;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject activateVfx
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* activateVfx;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.PlayerTool FKJHGIFOJKD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerTool*& dyn_FKJHGIFOJKD();
    // Get instance field reference: private System.Boolean IMAFJMEOHIF
    [[deprecated("Use field access instead!")]] bool& dyn_IMAFJMEOHIF();
    // Get instance field reference: private UnityEngine.Collider[] JGOGJDHABHN
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_JGOGJDHABHN();
    // Get instance field reference: private System.String ACNINLKMMKB
    [[deprecated("Use field access instead!")]] ::StringW& dyn_ACNINLKMMKB();
    // Get instance field reference: public UnityEngine.GameObject activateVfx
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_activateVfx();
    // private System.Void CNHFEOKMHGF(System.Byte KLIPNGBEELK)
    // Offset: 0x193D3F8
    void CNHFEOKMHGF(uint8_t KLIPNGBEELK);
    // private System.Void BIMCNDAFFJC()
    // Offset: 0x193D584
    void BIMCNDAFFJC();
    // private System.Void NLOFBPNEFKD()
    // Offset: 0x193D930
    void NLOFBPNEFKD();
    // private System.Void FFHIPKJGIPK()
    // Offset: 0x193D7A0
    void FFHIPKJGIPK();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x193D988
    void BDEDGNGMHMN();
    // private System.Void JCJCMKPOAKK()
    // Offset: 0x193D9E0
    void JCJCMKPOAKK();
    // private System.Void AMIPIMKIJMO()
    // Offset: 0x193DA38
    void AMIPIMKIJMO();
    // private System.Void KILJDKHADHJ()
    // Offset: 0x193DDBC
    void KILJDKHADHJ();
    // private System.Void BMALDPKJJPG()
    // Offset: 0x193DE14
    void BMALDPKJJPG();
    // private System.Void NHADFEMILCC()
    // Offset: 0x193DE6C
    void NHADFEMILCC();
    // private System.Void NHGKENEFKKC(System.Byte KLIPNGBEELK)
    // Offset: 0x193DEC4
    void NHGKENEFKKC(uint8_t KLIPNGBEELK);
    // private System.Void AFALAKLIBEB()
    // Offset: 0x193E050
    void AFALAKLIBEB();
    // private System.Void DFKIOJBNELC()
    // Offset: 0x193E1DC
    void DFKIOJBNELC();
    // private System.Void GGDOLEEKBGN()
    // Offset: 0x193DC2C
    void GGDOLEEKBGN();
    // private System.Void BHBFEEJHKIH()
    // Offset: 0x193E36C
    void BHBFEEJHKIH();
    // private System.Void NLFOPEAGLDJ()
    // Offset: 0x193E574
    void NLFOPEAGLDJ();
    // private System.Void SignalReceived(System.Byte KLIPNGBEELK)
    // Offset: 0x193E780
    void SignalReceived(uint8_t KLIPNGBEELK);
    // public System.Void .ctor()
    // Offset: 0x193E908
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NarwahlHorn* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::NarwahlHorn::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NarwahlHorn*, creationType>()));
    }
    // private System.Void ADLGPKAIPAA()
    // Offset: 0x193E960
    void ADLGPKAIPAA();
    // private System.Void FLJMJKAKNBH()
    // Offset: 0x193E9B8
    void FLJMJKAKNBH();
    // private System.Void KGKKNFEMGAM()
    // Offset: 0x193EBB0
    void KGKKNFEMGAM();
    // private System.Void HMLPEKMDCDI(System.Byte KLIPNGBEELK)
    // Offset: 0x193EC08
    void HMLPEKMDCDI(uint8_t KLIPNGBEELK);
    // private System.Void BACDOHMFJHH(System.Byte KLIPNGBEELK)
    // Offset: 0x193ED94
    void BACDOHMFJHH(uint8_t KLIPNGBEELK);
    // private System.Void OOKAOJFGODO()
    // Offset: 0x193EF20
    void OOKAOJFGODO();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x193F0B0
    void PBEMGGBBDCK();
    // private System.Void Start()
    // Offset: 0x193F108
    void Start();
    // private System.Void JILNHAILHMO(System.Byte KLIPNGBEELK)
    // Offset: 0x193F160
    void JILNHAILHMO(uint8_t KLIPNGBEELK);
    // private System.Void IEDBMOOGDKM(System.Byte KLIPNGBEELK)
    // Offset: 0x193F2EC
    void IEDBMOOGDKM(uint8_t KLIPNGBEELK);
    // private System.Void JPHNAIDIBKL()
    // Offset: 0x193F478
    void JPHNAIDIBKL();
    // private System.Void OEFAHGAGHCF(System.Byte KLIPNGBEELK)
    // Offset: 0x193F810
    void OEFAHGAGHCF(uint8_t KLIPNGBEELK);
    // private System.Void FGGKEEKHDHN()
    // Offset: 0x193F99C
    void FGGKEEKHDHN();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x193FBA8
    void FNGLOIECKDG();
    // private System.Void FIJGCHFAFHN()
    // Offset: 0x193FC00
    void FIJGCHFAFHN();
    // private System.Void Awake()
    // Offset: 0x193FE0C
    void Awake();
    // private System.Void FixedUpdate()
    // Offset: 0x193FE64
    void FixedUpdate();
    // private System.Void LLFALEBAGKG()
    // Offset: 0x193F680
    void LLFALEBAGKG();
    // private System.Void NNBODOLEAFK()
    // Offset: 0x1940068
    void NNBODOLEAFK();
    // private System.Void DGELIHGGOKB()
    // Offset: 0x1940260
    void DGELIHGGOKB();
  }; // MagicalActual.NarwahlHorn
  #pragma pack(pop)
  static check_size<sizeof(NarwahlHorn), 56 + sizeof(::UnityEngine::GameObject*)> __MagicalActual_NarwahlHornSizeCheck;
  static_assert(sizeof(NarwahlHorn) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::CNHFEOKMHGF
// Il2CppName: CNHFEOKMHGF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)(uint8_t)>(&MagicalActual::NarwahlHorn::CNHFEOKMHGF)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "CNHFEOKMHGF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::BIMCNDAFFJC
// Il2CppName: BIMCNDAFFJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::BIMCNDAFFJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "BIMCNDAFFJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::NLOFBPNEFKD
// Il2CppName: NLOFBPNEFKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::NLOFBPNEFKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "NLOFBPNEFKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::FFHIPKJGIPK
// Il2CppName: FFHIPKJGIPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::FFHIPKJGIPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "FFHIPKJGIPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::JCJCMKPOAKK
// Il2CppName: JCJCMKPOAKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::JCJCMKPOAKK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "JCJCMKPOAKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::AMIPIMKIJMO
// Il2CppName: AMIPIMKIJMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::AMIPIMKIJMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "AMIPIMKIJMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::KILJDKHADHJ
// Il2CppName: KILJDKHADHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::KILJDKHADHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "KILJDKHADHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::BMALDPKJJPG
// Il2CppName: BMALDPKJJPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::BMALDPKJJPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "BMALDPKJJPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::NHGKENEFKKC
// Il2CppName: NHGKENEFKKC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)(uint8_t)>(&MagicalActual::NarwahlHorn::NHGKENEFKKC)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "NHGKENEFKKC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::AFALAKLIBEB
// Il2CppName: AFALAKLIBEB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::AFALAKLIBEB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "AFALAKLIBEB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::DFKIOJBNELC
// Il2CppName: DFKIOJBNELC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::DFKIOJBNELC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "DFKIOJBNELC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::GGDOLEEKBGN
// Il2CppName: GGDOLEEKBGN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::GGDOLEEKBGN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "GGDOLEEKBGN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::BHBFEEJHKIH
// Il2CppName: BHBFEEJHKIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::BHBFEEJHKIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "BHBFEEJHKIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::NLFOPEAGLDJ
// Il2CppName: NLFOPEAGLDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::NLFOPEAGLDJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "NLFOPEAGLDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::SignalReceived
// Il2CppName: SignalReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)(uint8_t)>(&MagicalActual::NarwahlHorn::SignalReceived)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "SignalReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::ADLGPKAIPAA
// Il2CppName: ADLGPKAIPAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::ADLGPKAIPAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "ADLGPKAIPAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::FLJMJKAKNBH
// Il2CppName: FLJMJKAKNBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::FLJMJKAKNBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "FLJMJKAKNBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::KGKKNFEMGAM
// Il2CppName: KGKKNFEMGAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::KGKKNFEMGAM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "KGKKNFEMGAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::HMLPEKMDCDI
// Il2CppName: HMLPEKMDCDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)(uint8_t)>(&MagicalActual::NarwahlHorn::HMLPEKMDCDI)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "HMLPEKMDCDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::BACDOHMFJHH
// Il2CppName: BACDOHMFJHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)(uint8_t)>(&MagicalActual::NarwahlHorn::BACDOHMFJHH)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "BACDOHMFJHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::OOKAOJFGODO
// Il2CppName: OOKAOJFGODO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::OOKAOJFGODO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "OOKAOJFGODO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::JILNHAILHMO
// Il2CppName: JILNHAILHMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)(uint8_t)>(&MagicalActual::NarwahlHorn::JILNHAILHMO)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "JILNHAILHMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::IEDBMOOGDKM
// Il2CppName: IEDBMOOGDKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)(uint8_t)>(&MagicalActual::NarwahlHorn::IEDBMOOGDKM)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "IEDBMOOGDKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::JPHNAIDIBKL
// Il2CppName: JPHNAIDIBKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::JPHNAIDIBKL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "JPHNAIDIBKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::OEFAHGAGHCF
// Il2CppName: OEFAHGAGHCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)(uint8_t)>(&MagicalActual::NarwahlHorn::OEFAHGAGHCF)> {
  static const MethodInfo* get() {
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "OEFAHGAGHCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::FGGKEEKHDHN
// Il2CppName: FGGKEEKHDHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::FGGKEEKHDHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "FGGKEEKHDHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::FIJGCHFAFHN
// Il2CppName: FIJGCHFAFHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::FIJGCHFAFHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "FIJGCHFAFHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::LLFALEBAGKG
// Il2CppName: LLFALEBAGKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::LLFALEBAGKG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "LLFALEBAGKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::NNBODOLEAFK
// Il2CppName: NNBODOLEAFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::NNBODOLEAFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "NNBODOLEAFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::NarwahlHorn::DGELIHGGOKB
// Il2CppName: DGELIHGGOKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::NarwahlHorn::*)()>(&MagicalActual::NarwahlHorn::DGELIHGGOKB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::NarwahlHorn*), "DGELIHGGOKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
