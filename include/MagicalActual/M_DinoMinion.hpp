// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_DinoMinion
  class M_DinoMinion;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_DinoMinion);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_DinoMinion*, "MagicalActual", "M_DinoMinion");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_DinoMinion
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4D1C
  class M_DinoMinion : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x28
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // public System.Void DIDADMBDAAK()
    // Offset: 0x246FCD8
    void DIDADMBDAAK();
    // public System.Void MKAECMFKIEN()
    // Offset: 0x246FEFC
    void MKAECMFKIEN();
    // public System.Void HJADIOCKECN()
    // Offset: 0x2470120
    void HJADIOCKECN();
    // private System.Void DEGCMEJJNJI()
    // Offset: 0x2470344
    void DEGCMEJJNJI();
    // public System.Void ALKHPPEDLNC()
    // Offset: 0x247039C
    void ALKHPPEDLNC();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x24705C0
    void DFCOAPEIKLN();
    // public System.Void HLGKLABMHHD()
    // Offset: 0x2470618
    void HLGKLABMHHD();
    // private System.Void Start()
    // Offset: 0x2470838
    void Start();
    // public System.Void .ctor()
    // Offset: 0x2470890
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_DinoMinion* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_DinoMinion::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_DinoMinion*, creationType>()));
    }
    // public System.Void HMIDAAAHFCB()
    // Offset: 0x24708E8
    void HMIDAAAHFCB();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x2470B0C
    void KPOAAAHLGLA();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x2470B64
    void JENOIOBAEPG();
    // private System.Void APMNGLNBFNP()
    // Offset: 0x2470BBC
    void APMNGLNBFNP();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x2470C14
    void GKIOLADOCOK();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x2470C6C
    void ABIHCGOKNCL();
    // public System.Void Slash()
    // Offset: 0x2470CC4
    void Slash();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x2470EDC
    void BDEDGNGMHMN();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x2470F34
    void PBEMGGBBDCK();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x2470F8C
    void AFIACGLCIPB();
    // public System.Void FNAJKCKMHHJ()
    // Offset: 0x2470FE4
    void FNAJKCKMHHJ();
    // public System.Void BIIPJEPNIBH()
    // Offset: 0x2471208
    void BIIPJEPNIBH();
    // public System.Void JFKKFKNHPFI()
    // Offset: 0x247142C
    void JFKKFKNHPFI();
    // public System.Void IBMKENLAMGB()
    // Offset: 0x2471650
    void IBMKENLAMGB();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x2471874
    void GPFBGGFPINB();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x24718CC
    void KBDGAPMJGLG();
    // private System.Void JNHNEBOHOIB()
    // Offset: 0x2471924
    void JNHNEBOHOIB();
    // public System.Void PNLNOOIGCBK()
    // Offset: 0x247197C
    void PNLNOOIGCBK();
    // private System.Void OJFAEAIKFED()
    // Offset: 0x2471BA0
    void OJFAEAIKFED();
    // public System.Void GHHAMAIIFFG()
    // Offset: 0x2471BF8
    void GHHAMAIIFFG();
    // private System.Void FBONHOOJHBG()
    // Offset: 0x2471E1C
    void FBONHOOJHBG();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x2471E74
    void FNGLOIECKDG();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x2471ECC
    void DGJGAFKDIDK();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x2471F24
    void NEDFCIDMJBB();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x2471F7C
    void IPIFMKAGODD();
    // public System.Void BFEOMBNEICE()
    // Offset: 0x2471FD4
    void BFEOMBNEICE();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x24721F8
    void EIIKFEMCNKM();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x2472250
    void GHLPBOJJHNG();
    // private System.Void AHPDCIGFMJI()
    // Offset: 0x24722A8
    void AHPDCIGFMJI();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x2472300
    void PFABJJGAOMM();
    // private System.Void AKGFEENGKJD()
    // Offset: 0x2472358
    void AKGFEENGKJD();
  }; // MagicalActual.M_DinoMinion
  #pragma pack(pop)
  static check_size<sizeof(M_DinoMinion), 40 + sizeof(::StringW)> __MagicalActual_M_DinoMinionSizeCheck;
  static_assert(sizeof(M_DinoMinion) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::DIDADMBDAAK
// Il2CppName: DIDADMBDAAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::DIDADMBDAAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "DIDADMBDAAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::MKAECMFKIEN
// Il2CppName: MKAECMFKIEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::MKAECMFKIEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "MKAECMFKIEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::HJADIOCKECN
// Il2CppName: HJADIOCKECN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::HJADIOCKECN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "HJADIOCKECN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::DEGCMEJJNJI
// Il2CppName: DEGCMEJJNJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::DEGCMEJJNJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "DEGCMEJJNJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::ALKHPPEDLNC
// Il2CppName: ALKHPPEDLNC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::ALKHPPEDLNC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "ALKHPPEDLNC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::HLGKLABMHHD
// Il2CppName: HLGKLABMHHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::HLGKLABMHHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "HLGKLABMHHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::HMIDAAAHFCB
// Il2CppName: HMIDAAAHFCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::HMIDAAAHFCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "HMIDAAAHFCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::APMNGLNBFNP
// Il2CppName: APMNGLNBFNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::APMNGLNBFNP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "APMNGLNBFNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::FNAJKCKMHHJ
// Il2CppName: FNAJKCKMHHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::FNAJKCKMHHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "FNAJKCKMHHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::BIIPJEPNIBH
// Il2CppName: BIIPJEPNIBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::BIIPJEPNIBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "BIIPJEPNIBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::JFKKFKNHPFI
// Il2CppName: JFKKFKNHPFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::JFKKFKNHPFI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "JFKKFKNHPFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::IBMKENLAMGB
// Il2CppName: IBMKENLAMGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::IBMKENLAMGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "IBMKENLAMGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::JNHNEBOHOIB
// Il2CppName: JNHNEBOHOIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::JNHNEBOHOIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "JNHNEBOHOIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::PNLNOOIGCBK
// Il2CppName: PNLNOOIGCBK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::PNLNOOIGCBK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "PNLNOOIGCBK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::OJFAEAIKFED
// Il2CppName: OJFAEAIKFED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::OJFAEAIKFED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "OJFAEAIKFED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::GHHAMAIIFFG
// Il2CppName: GHHAMAIIFFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::GHHAMAIIFFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "GHHAMAIIFFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::FBONHOOJHBG
// Il2CppName: FBONHOOJHBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::FBONHOOJHBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "FBONHOOJHBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::BFEOMBNEICE
// Il2CppName: BFEOMBNEICE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::BFEOMBNEICE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "BFEOMBNEICE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::AHPDCIGFMJI
// Il2CppName: AHPDCIGFMJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::AHPDCIGFMJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "AHPDCIGFMJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_DinoMinion::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_DinoMinion::*)()>(&MagicalActual::M_DinoMinion::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_DinoMinion*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
