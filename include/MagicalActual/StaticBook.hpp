// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ReadableBook
  class ReadableBook;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: StaticBook
  class StaticBook;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::StaticBook);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::StaticBook*, "MagicalActual", "StaticBook");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.StaticBook
  // [TokenAttribute] Offset: FFFFFFFF
  class StaticBook : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // [TextAreaAttribute] Offset: 0xAE4F78
    // public System.String[] pages
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::StringW> pages;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private MagicalActual.ReadableBook DJNABEAEGNB
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::ReadableBook* DJNABEAEGNB;
    // Field size check
    static_assert(sizeof(::MagicalActual::ReadableBook*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String[] pages
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_pages();
    // Get instance field reference: private MagicalActual.ReadableBook DJNABEAEGNB
    [[deprecated("Use field access instead!")]] ::MagicalActual::ReadableBook*& dyn_DJNABEAEGNB();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x108E5DC
    void FGIFGGNGKPK();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x108E6FC
    void KPOAAAHLGLA();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x108E800
    void LPLGKBGLPOK();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x108E920
    void EPCHNEGNKNF();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x108EA24
    void FNGLOIECKDG();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x108EB20
    void NNDKJCJFIAK();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x108EC20
    void JENOIOBAEPG();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x108ED28
    void MLGBKBMHHLE();
    // private System.Void Start()
    // Offset: 0x108EE48
    void Start();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x108EF68
    void CBMDGNKFPIO();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x108F064
    void PFABJJGAOMM();
    // private System.Void NHADFEMILCC()
    // Offset: 0x108F16C
    void NHADFEMILCC();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x108F28C
    void IDOCJGNLNFL();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x108F388
    void GKIOLADOCOK();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x108F484
    void EIIKFEMCNKM();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x108F5A4
    void BDEDGNGMHMN();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x108F6C4
    void KBDGAPMJGLG();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x108F7E4
    void ABIHCGOKNCL();
    // public System.Void .ctor()
    // Offset: 0x108F904
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StaticBook* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::StaticBook::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StaticBook*, creationType>()));
    }
    // private System.Void GECHLDPLPCC()
    // Offset: 0x108F90C
    void GECHLDPLPCC();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x108FA2C
    void GPFBGGFPINB();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x108FB2C
    void IPIFMKAGODD();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x108FC4C
    void DGJGAFKDIDK();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x108FD48
    void LBIKOKCCILF();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x108FE68
    void HKINNMLBMMG();
  }; // MagicalActual.StaticBook
  #pragma pack(pop)
  static check_size<sizeof(StaticBook), 32 + sizeof(::MagicalActual::ReadableBook*)> __MagicalActual_StaticBookSizeCheck;
  static_assert(sizeof(StaticBook) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::StaticBook::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::StaticBook::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::StaticBook::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::StaticBook::*)()>(&MagicalActual::StaticBook::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::StaticBook*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
