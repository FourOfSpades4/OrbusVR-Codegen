// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.EventSystems.IPointerEnterHandler
#include "UnityEngine/EventSystems/IPointerEnterHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerExitHandler
#include "UnityEngine/EventSystems/IPointerExitHandler.hpp"
// Including type: IPhysicsButton
#include "GlobalNamespace/IPhysicsButton.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
  // Forward declaring type: Button
  class Button;
  // Forward declaring type: RawImage
  class RawImage;
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItem
  class InventoryItem;
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityAction
  class UnityAction;
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: PointerEventData
  class PointerEventData;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: BlueprintIcon
  class BlueprintIcon;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::BlueprintIcon);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::BlueprintIcon*, "MagicalActual", "BlueprintIcon");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.BlueprintIcon
  // [TokenAttribute] Offset: FFFFFFFF
  class BlueprintIcon : public ::UnityEngine::MonoBehaviour/*, public ::UnityEngine::EventSystems::IPointerEnterHandler, public ::UnityEngine::EventSystems::IPointerExitHandler, public ::GlobalNamespace::IPhysicsButton*/ {
    public:
    public:
    // public UnityEngine.UI.Text blueprintName
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::UI::Text* blueprintName;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // public UnityEngine.UI.Button button
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::UI::Button* button;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Button*) == 0x8);
    // public UnityEngine.UI.RawImage outline
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::UI::RawImage* outline;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::RawImage*) == 0x8);
    // public ExtUI.InventoryItem itemData
    // Size: 0x8
    // Offset: 0x30
    ::ExtUI::InventoryItem* itemData;
    // Field size check
    static_assert(sizeof(::ExtUI::InventoryItem*) == 0x8);
    // public ExtUI.InventoryItemInstance itemInstanceData
    // Size: 0x8
    // Offset: 0x38
    ::ExtUI::InventoryItemInstance* itemInstanceData;
    // Field size check
    static_assert(sizeof(::ExtUI::InventoryItemInstance*) == 0x8);
    // public System.Boolean isAvailable
    // Size: 0x1
    // Offset: 0x40
    bool isAvailable;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isAvailable and: JFCGEMOGOID
    char __padding5[0x7] = {};
    // private UnityEngine.Events.UnityAction JFCGEMOGOID
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Events::UnityAction* JFCGEMOGOID;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityAction*) == 0x8);
    // private UnityEngine.Events.UnityAction EKICDLBDCGN
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Events::UnityAction* EKICDLBDCGN;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityAction*) == 0x8);
    // private UnityEngine.Color IDEHLKKDLIM
    // Size: 0x10
    // Offset: 0x58
    ::UnityEngine::Color IDEHLKKDLIM;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color IJNCFALHGCE
    // Size: 0x10
    // Offset: 0x68
    ::UnityEngine::Color IJNCFALHGCE;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerEnterHandler
    operator ::UnityEngine::EventSystems::IPointerEnterHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerEnterHandler*>(this);
    }
    // Creating interface conversion operator: operator ::UnityEngine::EventSystems::IPointerExitHandler
    operator ::UnityEngine::EventSystems::IPointerExitHandler() noexcept {
      return *reinterpret_cast<::UnityEngine::EventSystems::IPointerExitHandler*>(this);
    }
    // Creating interface conversion operator: operator ::GlobalNamespace::IPhysicsButton
    operator ::GlobalNamespace::IPhysicsButton() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IPhysicsButton*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.UI.Text blueprintName
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_blueprintName();
    // Get instance field reference: public UnityEngine.UI.Button button
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& dyn_button();
    // Get instance field reference: public UnityEngine.UI.RawImage outline
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::RawImage*& dyn_outline();
    // Get instance field reference: public ExtUI.InventoryItem itemData
    [[deprecated("Use field access instead!")]] ::ExtUI::InventoryItem*& dyn_itemData();
    // Get instance field reference: public ExtUI.InventoryItemInstance itemInstanceData
    [[deprecated("Use field access instead!")]] ::ExtUI::InventoryItemInstance*& dyn_itemInstanceData();
    // Get instance field reference: public System.Boolean isAvailable
    [[deprecated("Use field access instead!")]] bool& dyn_isAvailable();
    // Get instance field reference: private UnityEngine.Events.UnityAction JFCGEMOGOID
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction*& dyn_JFCGEMOGOID();
    // Get instance field reference: private UnityEngine.Events.UnityAction EKICDLBDCGN
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityAction*& dyn_EKICDLBDCGN();
    // Get instance field reference: private UnityEngine.Color IDEHLKKDLIM
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_IDEHLKKDLIM();
    // Get instance field reference: private UnityEngine.Color IJNCFALHGCE
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_IJNCFALHGCE();
    // public System.Void HCMBHLLDANM(UnityEngine.Events.UnityAction BBJNCCKJGCN)
    // Offset: 0x1787904
    void HCMBHLLDANM(::UnityEngine::Events::UnityAction* BBJNCCKJGCN);
    // public System.Void ICHECPMLFDK()
    // Offset: 0x17879C8
    void ICHECPMLFDK();
    // public System.Void NOAFIFFKOOE()
    // Offset: 0x17879CC
    void NOAFIFFKOOE();
    // public System.Void FLJOIEJJOOL(UnityEngine.EventSystems.PointerEventData ALEGFPIGIMP)
    // Offset: 0x1787A90
    void FLJOIEJJOOL(::UnityEngine::EventSystems::PointerEventData* ALEGFPIGIMP);
    // public System.Void JFMAOJLPFAK(UnityEngine.EventSystems.PointerEventData ALEGFPIGIMP)
    // Offset: 0x1787AA4
    void JFMAOJLPFAK(::UnityEngine::EventSystems::PointerEventData* ALEGFPIGIMP);
    // public System.Void KNPHACCNCIJ()
    // Offset: 0x1787AB8
    void KNPHACCNCIJ();
    // public System.Void ODEFGFPHLOA(UnityEngine.EventSystems.PointerEventData ALEGFPIGIMP)
    // Offset: 0x1787B88
    void ODEFGFPHLOA(::UnityEngine::EventSystems::PointerEventData* ALEGFPIGIMP);
    // public System.Void BELLIPABHHH(UnityEngine.EventSystems.PointerEventData ALEGFPIGIMP)
    // Offset: 0x1787B9C
    void BELLIPABHHH(::UnityEngine::EventSystems::PointerEventData* ALEGFPIGIMP);
    // public System.Void BMLAMCGGEAI()
    // Offset: 0x1787BB0
    void BMLAMCGGEAI();
    // public System.Void OODEAFJGNJE(UnityEngine.Events.UnityAction BBJNCCKJGCN)
    // Offset: 0x1787C74
    void OODEAFJGNJE(::UnityEngine::Events::UnityAction* BBJNCCKJGCN);
    // public System.Void EPCGMGHAHAN()
    // Offset: 0x1787D38
    void EPCGMGHAHAN();
    // public System.Void ClickButton()
    // Offset: 0x1787E08
    void ClickButton();
    // public System.Void NFKNNKMNGCA(UnityEngine.Events.UnityAction BBJNCCKJGCN)
    // Offset: 0x1787E0C
    void NFKNNKMNGCA(::UnityEngine::Events::UnityAction* BBJNCCKJGCN);
    // public System.Void OnPointerEnter(UnityEngine.EventSystems.PointerEventData ALEGFPIGIMP)
    // Offset: 0x1787ED0
    void OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* ALEGFPIGIMP);
    // public System.Void PBCEOEFGIFH(UnityEngine.EventSystems.PointerEventData ALEGFPIGIMP)
    // Offset: 0x1787EE4
    void PBCEOEFGIFH(::UnityEngine::EventSystems::PointerEventData* ALEGFPIGIMP);
    // public System.Void BFAFLAKIFEN(System.String FPMDFOGBJEJ)
    // Offset: 0x1787EF8
    void BFAFLAKIFEN(::StringW FPMDFOGBJEJ);
    // public System.Void OnPointerExit(UnityEngine.EventSystems.PointerEventData ALEGFPIGIMP)
    // Offset: 0x1787F9C
    void OnPointerExit(::UnityEngine::EventSystems::PointerEventData* ALEGFPIGIMP);
    // public System.Void BlueprintActive()
    // Offset: 0x1787FB0
    void BlueprintActive();
    // public System.Void GEFDPDMFMCH()
    // Offset: 0x1788080
    void GEFDPDMFMCH();
    // public System.Void ClearPointerExitListeners()
    // Offset: 0x1788144
    void ClearPointerExitListeners();
    // public System.Void OFJPGNJHJJK(UnityEngine.Events.UnityAction BBJNCCKJGCN)
    // Offset: 0x178814C
    void OFJPGNJHJJK(::UnityEngine::Events::UnityAction* BBJNCCKJGCN);
    // public System.Void CBJGJAKIGPO()
    // Offset: 0x1788210
    void CBJGJAKIGPO();
    // public System.Void HJACLBKAJAO()
    // Offset: 0x1788218
    void HJACLBKAJAO();
    // public System.Void BAMDJNGGLDK(UnityEngine.EventSystems.PointerEventData ALEGFPIGIMP)
    // Offset: 0x1788220
    void BAMDJNGGLDK(::UnityEngine::EventSystems::PointerEventData* ALEGFPIGIMP);
    // public System.Void KGGDKLAJNAL()
    // Offset: 0x1788234
    void KGGDKLAJNAL();
    // public System.Void NBOCDLGGLBI()
    // Offset: 0x1788238
    void NBOCDLGGLBI();
    // public System.Void MDKHHMCGDLC(UnityEngine.EventSystems.PointerEventData ALEGFPIGIMP)
    // Offset: 0x1788240
    void MDKHHMCGDLC(::UnityEngine::EventSystems::PointerEventData* ALEGFPIGIMP);
    // public System.Void .ctor()
    // Offset: 0x1788254
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BlueprintIcon* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::BlueprintIcon::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BlueprintIcon*, creationType>()));
    }
    // public System.Void BlueprintInactive()
    // Offset: 0x1788304
    void BlueprintInactive();
    // public System.Void SetBlueprintName(System.String FPMDFOGBJEJ)
    // Offset: 0x17883C8
    void SetBlueprintName(::StringW FPMDFOGBJEJ);
    // public System.Void PALMLFNIDLE()
    // Offset: 0x178846C
    void PALMLFNIDLE();
    // public System.Void KGELCEMACPB()
    // Offset: 0x178853C
    void KGELCEMACPB();
    // public System.Void EHMEDIGMAGD()
    // Offset: 0x1788544
    void EHMEDIGMAGD();
    // public System.Void FHHKFJNFLNB()
    // Offset: 0x1788608
    void FHHKFJNFLNB();
    // public System.Void AddPointerExitListener(UnityEngine.Events.UnityAction BBJNCCKJGCN)
    // Offset: 0x1788610
    void AddPointerExitListener(::UnityEngine::Events::UnityAction* BBJNCCKJGCN);
    // public System.Void EBFPGKFAHDE(UnityEngine.EventSystems.PointerEventData ALEGFPIGIMP)
    // Offset: 0x17886D4
    void EBFPGKFAHDE(::UnityEngine::EventSystems::PointerEventData* ALEGFPIGIMP);
    // public System.Void EBIGLPLHOHC(UnityEngine.EventSystems.PointerEventData ALEGFPIGIMP)
    // Offset: 0x17886E8
    void EBIGLPLHOHC(::UnityEngine::EventSystems::PointerEventData* ALEGFPIGIMP);
    // public System.Void JDCEHDPNEFD(System.String FPMDFOGBJEJ)
    // Offset: 0x17886FC
    void JDCEHDPNEFD(::StringW FPMDFOGBJEJ);
    // public System.Void AddPointerEnterListener(UnityEngine.Events.UnityAction BBJNCCKJGCN)
    // Offset: 0x17887A0
    void AddPointerEnterListener(::UnityEngine::Events::UnityAction* BBJNCCKJGCN);
    // public System.Void BAHAJHOHAGB()
    // Offset: 0x1788864
    void BAHAJHOHAGB();
    // public System.Void KDOOCGPEGEF()
    // Offset: 0x178886C
    void KDOOCGPEGEF();
    // public System.Void AHGMGIBPCFC(UnityEngine.Events.UnityAction BBJNCCKJGCN)
    // Offset: 0x1788870
    void AHGMGIBPCFC(::UnityEngine::Events::UnityAction* BBJNCCKJGCN);
    // public System.Void ClearPointerEnterListeners()
    // Offset: 0x1788934
    void ClearPointerEnterListeners();
  }; // MagicalActual.BlueprintIcon
  #pragma pack(pop)
  static check_size<sizeof(BlueprintIcon), 104 + sizeof(::UnityEngine::Color)> __MagicalActual_BlueprintIconSizeCheck;
  static_assert(sizeof(BlueprintIcon) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::HCMBHLLDANM
// Il2CppName: HCMBHLLDANM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::Events::UnityAction*)>(&MagicalActual::BlueprintIcon::HCMBHLLDANM)> {
  static const MethodInfo* get() {
    static auto* BBJNCCKJGCN = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "HCMBHLLDANM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BBJNCCKJGCN});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::ICHECPMLFDK
// Il2CppName: ICHECPMLFDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::ICHECPMLFDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "ICHECPMLFDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::NOAFIFFKOOE
// Il2CppName: NOAFIFFKOOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::NOAFIFFKOOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "NOAFIFFKOOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::FLJOIEJJOOL
// Il2CppName: FLJOIEJJOOL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::EventSystems::PointerEventData*)>(&MagicalActual::BlueprintIcon::FLJOIEJJOOL)> {
  static const MethodInfo* get() {
    static auto* ALEGFPIGIMP = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "FLJOIEJJOOL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALEGFPIGIMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::JFMAOJLPFAK
// Il2CppName: JFMAOJLPFAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::EventSystems::PointerEventData*)>(&MagicalActual::BlueprintIcon::JFMAOJLPFAK)> {
  static const MethodInfo* get() {
    static auto* ALEGFPIGIMP = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "JFMAOJLPFAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALEGFPIGIMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::KNPHACCNCIJ
// Il2CppName: KNPHACCNCIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::KNPHACCNCIJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "KNPHACCNCIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::ODEFGFPHLOA
// Il2CppName: ODEFGFPHLOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::EventSystems::PointerEventData*)>(&MagicalActual::BlueprintIcon::ODEFGFPHLOA)> {
  static const MethodInfo* get() {
    static auto* ALEGFPIGIMP = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "ODEFGFPHLOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALEGFPIGIMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::BELLIPABHHH
// Il2CppName: BELLIPABHHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::EventSystems::PointerEventData*)>(&MagicalActual::BlueprintIcon::BELLIPABHHH)> {
  static const MethodInfo* get() {
    static auto* ALEGFPIGIMP = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "BELLIPABHHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALEGFPIGIMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::BMLAMCGGEAI
// Il2CppName: BMLAMCGGEAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::BMLAMCGGEAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "BMLAMCGGEAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::OODEAFJGNJE
// Il2CppName: OODEAFJGNJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::Events::UnityAction*)>(&MagicalActual::BlueprintIcon::OODEAFJGNJE)> {
  static const MethodInfo* get() {
    static auto* BBJNCCKJGCN = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "OODEAFJGNJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BBJNCCKJGCN});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::EPCGMGHAHAN
// Il2CppName: EPCGMGHAHAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::EPCGMGHAHAN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "EPCGMGHAHAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::ClickButton
// Il2CppName: ClickButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::ClickButton)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "ClickButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::NFKNNKMNGCA
// Il2CppName: NFKNNKMNGCA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::Events::UnityAction*)>(&MagicalActual::BlueprintIcon::NFKNNKMNGCA)> {
  static const MethodInfo* get() {
    static auto* BBJNCCKJGCN = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "NFKNNKMNGCA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BBJNCCKJGCN});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::OnPointerEnter
// Il2CppName: OnPointerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::EventSystems::PointerEventData*)>(&MagicalActual::BlueprintIcon::OnPointerEnter)> {
  static const MethodInfo* get() {
    static auto* ALEGFPIGIMP = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "OnPointerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALEGFPIGIMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::PBCEOEFGIFH
// Il2CppName: PBCEOEFGIFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::EventSystems::PointerEventData*)>(&MagicalActual::BlueprintIcon::PBCEOEFGIFH)> {
  static const MethodInfo* get() {
    static auto* ALEGFPIGIMP = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "PBCEOEFGIFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALEGFPIGIMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::BFAFLAKIFEN
// Il2CppName: BFAFLAKIFEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::StringW)>(&MagicalActual::BlueprintIcon::BFAFLAKIFEN)> {
  static const MethodInfo* get() {
    static auto* FPMDFOGBJEJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "BFAFLAKIFEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FPMDFOGBJEJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::OnPointerExit
// Il2CppName: OnPointerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::EventSystems::PointerEventData*)>(&MagicalActual::BlueprintIcon::OnPointerExit)> {
  static const MethodInfo* get() {
    static auto* ALEGFPIGIMP = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "OnPointerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALEGFPIGIMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::BlueprintActive
// Il2CppName: BlueprintActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::BlueprintActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "BlueprintActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::GEFDPDMFMCH
// Il2CppName: GEFDPDMFMCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::GEFDPDMFMCH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "GEFDPDMFMCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::ClearPointerExitListeners
// Il2CppName: ClearPointerExitListeners
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::ClearPointerExitListeners)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "ClearPointerExitListeners", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::OFJPGNJHJJK
// Il2CppName: OFJPGNJHJJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::Events::UnityAction*)>(&MagicalActual::BlueprintIcon::OFJPGNJHJJK)> {
  static const MethodInfo* get() {
    static auto* BBJNCCKJGCN = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "OFJPGNJHJJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BBJNCCKJGCN});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::CBJGJAKIGPO
// Il2CppName: CBJGJAKIGPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::CBJGJAKIGPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "CBJGJAKIGPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::HJACLBKAJAO
// Il2CppName: HJACLBKAJAO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::HJACLBKAJAO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "HJACLBKAJAO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::BAMDJNGGLDK
// Il2CppName: BAMDJNGGLDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::EventSystems::PointerEventData*)>(&MagicalActual::BlueprintIcon::BAMDJNGGLDK)> {
  static const MethodInfo* get() {
    static auto* ALEGFPIGIMP = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "BAMDJNGGLDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALEGFPIGIMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::KGGDKLAJNAL
// Il2CppName: KGGDKLAJNAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::KGGDKLAJNAL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "KGGDKLAJNAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::NBOCDLGGLBI
// Il2CppName: NBOCDLGGLBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::NBOCDLGGLBI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "NBOCDLGGLBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::MDKHHMCGDLC
// Il2CppName: MDKHHMCGDLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::EventSystems::PointerEventData*)>(&MagicalActual::BlueprintIcon::MDKHHMCGDLC)> {
  static const MethodInfo* get() {
    static auto* ALEGFPIGIMP = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "MDKHHMCGDLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALEGFPIGIMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::BlueprintInactive
// Il2CppName: BlueprintInactive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::BlueprintInactive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "BlueprintInactive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::SetBlueprintName
// Il2CppName: SetBlueprintName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::StringW)>(&MagicalActual::BlueprintIcon::SetBlueprintName)> {
  static const MethodInfo* get() {
    static auto* FPMDFOGBJEJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "SetBlueprintName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FPMDFOGBJEJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::PALMLFNIDLE
// Il2CppName: PALMLFNIDLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::PALMLFNIDLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "PALMLFNIDLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::KGELCEMACPB
// Il2CppName: KGELCEMACPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::KGELCEMACPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "KGELCEMACPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::EHMEDIGMAGD
// Il2CppName: EHMEDIGMAGD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::EHMEDIGMAGD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "EHMEDIGMAGD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::FHHKFJNFLNB
// Il2CppName: FHHKFJNFLNB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::FHHKFJNFLNB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "FHHKFJNFLNB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::AddPointerExitListener
// Il2CppName: AddPointerExitListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::Events::UnityAction*)>(&MagicalActual::BlueprintIcon::AddPointerExitListener)> {
  static const MethodInfo* get() {
    static auto* BBJNCCKJGCN = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "AddPointerExitListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BBJNCCKJGCN});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::EBFPGKFAHDE
// Il2CppName: EBFPGKFAHDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::EventSystems::PointerEventData*)>(&MagicalActual::BlueprintIcon::EBFPGKFAHDE)> {
  static const MethodInfo* get() {
    static auto* ALEGFPIGIMP = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "EBFPGKFAHDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALEGFPIGIMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::EBIGLPLHOHC
// Il2CppName: EBIGLPLHOHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::EventSystems::PointerEventData*)>(&MagicalActual::BlueprintIcon::EBIGLPLHOHC)> {
  static const MethodInfo* get() {
    static auto* ALEGFPIGIMP = &::il2cpp_utils::GetClassFromName("UnityEngine.EventSystems", "PointerEventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "EBIGLPLHOHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ALEGFPIGIMP});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::JDCEHDPNEFD
// Il2CppName: JDCEHDPNEFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::StringW)>(&MagicalActual::BlueprintIcon::JDCEHDPNEFD)> {
  static const MethodInfo* get() {
    static auto* FPMDFOGBJEJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "JDCEHDPNEFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FPMDFOGBJEJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::AddPointerEnterListener
// Il2CppName: AddPointerEnterListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::Events::UnityAction*)>(&MagicalActual::BlueprintIcon::AddPointerEnterListener)> {
  static const MethodInfo* get() {
    static auto* BBJNCCKJGCN = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "AddPointerEnterListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BBJNCCKJGCN});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::BAHAJHOHAGB
// Il2CppName: BAHAJHOHAGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::BAHAJHOHAGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "BAHAJHOHAGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::KDOOCGPEGEF
// Il2CppName: KDOOCGPEGEF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::KDOOCGPEGEF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "KDOOCGPEGEF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::AHGMGIBPCFC
// Il2CppName: AHGMGIBPCFC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)(::UnityEngine::Events::UnityAction*)>(&MagicalActual::BlueprintIcon::AHGMGIBPCFC)> {
  static const MethodInfo* get() {
    static auto* BBJNCCKJGCN = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "AHGMGIBPCFC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BBJNCCKJGCN});
  }
};
// Writing MetadataGetter for method: MagicalActual::BlueprintIcon::ClearPointerEnterListeners
// Il2CppName: ClearPointerEnterListeners
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::BlueprintIcon::*)()>(&MagicalActual::BlueprintIcon::ClearPointerEnterListeners)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::BlueprintIcon*), "ClearPointerEnterListeners", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
