// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SuperTextMesh
  class SuperTextMesh;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: EventReward
  class EventReward;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::EventReward);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::EventReward*, "MagicalActual", "EventReward");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.EventReward
  // [TokenAttribute] Offset: FFFFFFFF
  class EventReward : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private SuperTextMesh superText
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::SuperTextMesh* superText;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SuperTextMesh*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private SuperTextMesh superText
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& dyn_superText();
    // public System.Void NHKEAKFOIHD(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x10FF888
    void NHKEAKFOIHD(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // private System.Void CMGMNHMIHFD()
    // Offset: 0x10FFA30
    void CMGMNHMIHFD();
    // public System.Void ONEEOJCDABK(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x10FFA34
    void ONEEOJCDABK(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // public System.Void GPPCMCEGHAA(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x10FFBD0
    void GPPCMCEGHAA(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // private System.Void Update()
    // Offset: 0x10FFD70
    void Update();
    // private System.Void CEGEBCFNLFC()
    // Offset: 0x10FFD74
    void CEGEBCFNLFC();
    // public System.Void BKICOLFCMBE(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x10FFD78
    void BKICOLFCMBE(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // private System.Void FBDBGKLFFOI()
    // Offset: 0x10FFF1C
    void FBDBGKLFFOI();
    // public System.Void JHMAIGAKHFO(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x10FFF20
    void JHMAIGAKHFO(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // private System.Void JEIAGCBHHHI()
    // Offset: 0x11000C4
    void JEIAGCBHHHI();
    // private System.Void PPKHOKCIJBL()
    // Offset: 0x11000C8
    void PPKHOKCIJBL();
    // private System.Void DMNMEKAJBNA()
    // Offset: 0x11000CC
    void DMNMEKAJBNA();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x11000D0
    void EIIKFEMCNKM();
    // public System.Void .ctor()
    // Offset: 0x1100154
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EventReward* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::EventReward::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EventReward*, creationType>()));
    }
    // private System.Void GKIOLADOCOK()
    // Offset: 0x110015C
    void GKIOLADOCOK();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x11001E0
    void JENOIOBAEPG();
    // public System.Void AMDLECLBCOP(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x1100264
    void AMDLECLBCOP(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // private System.Void GEJIJMPGALF()
    // Offset: 0x1100424
    void GEJIJMPGALF();
    // private System.Void BPEFOMJJHKO()
    // Offset: 0x1100428
    void BPEFOMJJHKO();
    // public System.Void SetContent(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x110042C
    void SetContent(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // private System.Void KCEPMBHOMCD()
    // Offset: 0x11005CC
    void KCEPMBHOMCD();
    // private System.Void JGPEKDOEPOC()
    // Offset: 0x11005D0
    void JGPEKDOEPOC();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x11005D4
    void NNDKJCJFIAK();
    // public System.Void JHIMCMLGELE(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x1100658
    void JHIMCMLGELE(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // private System.Void MHHFAOGFAPO()
    // Offset: 0x11007F8
    void MHHFAOGFAPO();
    // private System.Void MJKAGCAKHHO()
    // Offset: 0x11007FC
    void MJKAGCAKHHO();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x1100800
    void GPFBGGFPINB();
    // private System.Void CHMCEGMCENL()
    // Offset: 0x1100884
    void CHMCEGMCENL();
    // public System.Void BIFPGIDCGLI(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x1100888
    void BIFPGIDCGLI(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // private System.Void FMCFFLJCCCP()
    // Offset: 0x1100A24
    void FMCFFLJCCCP();
    // public System.Void DBJMKCBJOFE(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x1100A28
    void DBJMKCBJOFE(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // public System.Void IPEEKJEJFCD(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x1100BC4
    void IPEEKJEJFCD(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // public System.Void PICCLLMNELK(System.Boolean HJMKDGNPJIF, System.Int32 GPBGDPJOKKO, System.Int32 BBNIKFKCFAH, System.Int32 JLBDHHIPPIN)
    // Offset: 0x1100D68
    void PICCLLMNELK(bool HJMKDGNPJIF, int GPBGDPJOKKO, int BBNIKFKCFAH, int JLBDHHIPPIN);
    // private System.Void AFIACGLCIPB()
    // Offset: 0x1100F10
    void AFIACGLCIPB();
    // private System.Void Start()
    // Offset: 0x1100F94
    void Start();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x1101014
    void IPIFMKAGODD();
  }; // MagicalActual.EventReward
  #pragma pack(pop)
  static check_size<sizeof(EventReward), 24 + sizeof(::GlobalNamespace::SuperTextMesh*)> __MagicalActual_EventRewardSizeCheck;
  static_assert(sizeof(EventReward) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::EventReward::NHKEAKFOIHD
// Il2CppName: NHKEAKFOIHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::NHKEAKFOIHD)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "NHKEAKFOIHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::CMGMNHMIHFD
// Il2CppName: CMGMNHMIHFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::CMGMNHMIHFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "CMGMNHMIHFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::ONEEOJCDABK
// Il2CppName: ONEEOJCDABK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::ONEEOJCDABK)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "ONEEOJCDABK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::GPPCMCEGHAA
// Il2CppName: GPPCMCEGHAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::GPPCMCEGHAA)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "GPPCMCEGHAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::CEGEBCFNLFC
// Il2CppName: CEGEBCFNLFC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::CEGEBCFNLFC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "CEGEBCFNLFC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::BKICOLFCMBE
// Il2CppName: BKICOLFCMBE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::BKICOLFCMBE)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "BKICOLFCMBE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::FBDBGKLFFOI
// Il2CppName: FBDBGKLFFOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::FBDBGKLFFOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "FBDBGKLFFOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::JHMAIGAKHFO
// Il2CppName: JHMAIGAKHFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::JHMAIGAKHFO)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "JHMAIGAKHFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::JEIAGCBHHHI
// Il2CppName: JEIAGCBHHHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::JEIAGCBHHHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "JEIAGCBHHHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::PPKHOKCIJBL
// Il2CppName: PPKHOKCIJBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::PPKHOKCIJBL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "PPKHOKCIJBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::DMNMEKAJBNA
// Il2CppName: DMNMEKAJBNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::DMNMEKAJBNA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "DMNMEKAJBNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::EventReward::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::AMDLECLBCOP
// Il2CppName: AMDLECLBCOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::AMDLECLBCOP)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "AMDLECLBCOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::GEJIJMPGALF
// Il2CppName: GEJIJMPGALF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::GEJIJMPGALF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "GEJIJMPGALF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::BPEFOMJJHKO
// Il2CppName: BPEFOMJJHKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::BPEFOMJJHKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "BPEFOMJJHKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::SetContent
// Il2CppName: SetContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::SetContent)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "SetContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::KCEPMBHOMCD
// Il2CppName: KCEPMBHOMCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::KCEPMBHOMCD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "KCEPMBHOMCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::JGPEKDOEPOC
// Il2CppName: JGPEKDOEPOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::JGPEKDOEPOC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "JGPEKDOEPOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::JHIMCMLGELE
// Il2CppName: JHIMCMLGELE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::JHIMCMLGELE)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "JHIMCMLGELE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::MHHFAOGFAPO
// Il2CppName: MHHFAOGFAPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::MHHFAOGFAPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "MHHFAOGFAPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::MJKAGCAKHHO
// Il2CppName: MJKAGCAKHHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::MJKAGCAKHHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "MJKAGCAKHHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::CHMCEGMCENL
// Il2CppName: CHMCEGMCENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::CHMCEGMCENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "CHMCEGMCENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::BIFPGIDCGLI
// Il2CppName: BIFPGIDCGLI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::BIFPGIDCGLI)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "BIFPGIDCGLI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::FMCFFLJCCCP
// Il2CppName: FMCFFLJCCCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::FMCFFLJCCCP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "FMCFFLJCCCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::DBJMKCBJOFE
// Il2CppName: DBJMKCBJOFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::DBJMKCBJOFE)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "DBJMKCBJOFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::IPEEKJEJFCD
// Il2CppName: IPEEKJEJFCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::IPEEKJEJFCD)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "IPEEKJEJFCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::PICCLLMNELK
// Il2CppName: PICCLLMNELK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)(bool, int, int, int)>(&MagicalActual::EventReward::PICCLLMNELK)> {
  static const MethodInfo* get() {
    static auto* HJMKDGNPJIF = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* GPBGDPJOKKO = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* BBNIKFKCFAH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* JLBDHHIPPIN = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "PICCLLMNELK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HJMKDGNPJIF, GPBGDPJOKKO, BBNIKFKCFAH, JLBDHHIPPIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::EventReward::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::EventReward::*)()>(&MagicalActual::EventReward::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::EventReward*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
