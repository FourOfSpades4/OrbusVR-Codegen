// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerWand
  class PlayerWand;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: CapsuleCollider
  class CapsuleCollider;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: WandSword
  class WandSword;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::WandSword);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::WandSword*, "MagicalActual", "WandSword");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.WandSword
  // [TokenAttribute] Offset: FFFFFFFF
  class WandSword : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.PlayerWand ANKIFFLGHJP
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::PlayerWand* ANKIFFLGHJP;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerWand*) == 0x8);
    // private System.Single GJNNKPHKEIO
    // Size: 0x4
    // Offset: 0x20
    float GJNNKPHKEIO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: GJNNKPHKEIO and: OBPLLLICAAI
    char __padding1[0x4] = {};
    // private UnityEngine.Collider OBPLLLICAAI
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Collider* OBPLLLICAAI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Collider*) == 0x8);
    // private UnityEngine.Rigidbody EIPMBKLODIJ
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Rigidbody* EIPMBKLODIJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private UnityEngine.CapsuleCollider NOKOANLFLIC
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::CapsuleCollider* NOKOANLFLIC;
    // Field size check
    static_assert(sizeof(::UnityEngine::CapsuleCollider*) == 0x8);
    // public UnityEngine.GameObject vfxCollision
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* vfxCollision;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.PlayerWand ANKIFFLGHJP
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerWand*& dyn_ANKIFFLGHJP();
    // Get instance field reference: private System.Single GJNNKPHKEIO
    [[deprecated("Use field access instead!")]] float& dyn_GJNNKPHKEIO();
    // Get instance field reference: private UnityEngine.Collider OBPLLLICAAI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& dyn_OBPLLLICAAI();
    // Get instance field reference: private UnityEngine.Rigidbody EIPMBKLODIJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_EIPMBKLODIJ();
    // Get instance field reference: private UnityEngine.CapsuleCollider NOKOANLFLIC
    [[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& dyn_NOKOANLFLIC();
    // Get instance field reference: public UnityEngine.GameObject vfxCollision
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxCollision();
    // private System.Void FLJMJKAKNBH()
    // Offset: 0x1A1C274
    void FLJMJKAKNBH();
    // private System.Void PJOIJIEDPMP()
    // Offset: 0x1A1C844
    void PJOIJIEDPMP();
    // private System.Void NNBODOLEAFK()
    // Offset: 0x1A1CE18
    void NNBODOLEAFK();
    // private System.Void GGAFMPPDBOH()
    // Offset: 0x1A1D3EC
    void GGAFMPPDBOH();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x1A1D9C4
    void BDEDGNGMHMN();
    // private System.Void IDGLLGOOENO()
    // Offset: 0x1A1DA6C
    void IDGLLGOOENO();
    // private System.Void ICFANEFPFBJ()
    // Offset: 0x1A1E044
    void ICFANEFPFBJ();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x1A1E61C
    void DGJGAFKDIDK();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x1A1E6C4
    void PBEMGGBBDCK();
    // private System.Void EEMBCPKCOIL()
    // Offset: 0x1A1E76C
    void EEMBCPKCOIL();
    // private System.Void DDJINHIPKCE()
    // Offset: 0x1A1ED40
    void DDJINHIPKCE();
    // private System.Void HABDJCEKMNH()
    // Offset: 0x1A1F318
    void HABDJCEKMNH();
    // private System.Void CHEMMHEMDCB()
    // Offset: 0x1A1F8EC
    void CHEMMHEMDCB();
    // public System.Void .ctor()
    // Offset: 0x1A1FEC0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WandSword* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::WandSword::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WandSword*, creationType>()));
    }
    // private System.Void GKIOLADOCOK()
    // Offset: 0x1A1FEC8
    void GKIOLADOCOK();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x1A1FF70
    void NNDKJCJFIAK();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x1A20018
    void IDOCJGNLNFL();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x1A200C0
    void MLGBKBMHHLE();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x1A20168
    void FGIFGGNGKPK();
    // private System.Void BHBFEEJHKIH()
    // Offset: 0x1A20210
    void BHBFEEJHKIH();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x1A207E0
    void DFCOAPEIKLN();
    // private System.Void ICEGDGKAIIB()
    // Offset: 0x1A20888
    void ICEGDGKAIIB();
    // private System.Void OJFAEAIKFED()
    // Offset: 0x1A20E60
    void OJFAEAIKFED();
    // private System.Void ANKCGGIBCAI()
    // Offset: 0x1A20F08
    void ANKCGGIBCAI();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x1A214D8
    void LPLGKBGLPOK();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x1A21580
    void KBDGAPMJGLG();
    // private System.Void FixedUpdate()
    // Offset: 0x1A21628
    void FixedUpdate();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x1A21BBC
    void ABIHCGOKNCL();
    // private System.Void AHMLIMDJCJO()
    // Offset: 0x1A21C64
    void AHMLIMDJCJO();
    // private System.Void FIJGCHFAFHN()
    // Offset: 0x1A22238
    void FIJGCHFAFHN();
    // private System.Void LOEFDHDIHGE()
    // Offset: 0x1A22808
    void LOEFDHDIHGE();
    // private System.Void BIMCNDAFFJC()
    // Offset: 0x1A22DDC
    void BIMCNDAFFJC();
    // private System.Void Start()
    // Offset: 0x1A233AC
    void Start();
    // private System.Void LLBAENEGEMN()
    // Offset: 0x1A23454
    void LLBAENEGEMN();
    // private System.Void HHKOFMNJKDA()
    // Offset: 0x1A23A2C
    void HHKOFMNJKDA();
    // private System.Void AMGJNJLJIFO()
    // Offset: 0x1A24004
    void AMGJNJLJIFO();
    // private System.Void JPHEBENNLCB()
    // Offset: 0x1A245D4
    void JPHEBENNLCB();
  }; // MagicalActual.WandSword
  #pragma pack(pop)
  static check_size<sizeof(WandSword), 64 + sizeof(::UnityEngine::GameObject*)> __MagicalActual_WandSwordSizeCheck;
  static_assert(sizeof(WandSword) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::WandSword::FLJMJKAKNBH
// Il2CppName: FLJMJKAKNBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::FLJMJKAKNBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "FLJMJKAKNBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::PJOIJIEDPMP
// Il2CppName: PJOIJIEDPMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::PJOIJIEDPMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "PJOIJIEDPMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::NNBODOLEAFK
// Il2CppName: NNBODOLEAFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::NNBODOLEAFK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "NNBODOLEAFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::GGAFMPPDBOH
// Il2CppName: GGAFMPPDBOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::GGAFMPPDBOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "GGAFMPPDBOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::IDGLLGOOENO
// Il2CppName: IDGLLGOOENO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::IDGLLGOOENO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "IDGLLGOOENO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::ICFANEFPFBJ
// Il2CppName: ICFANEFPFBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::ICFANEFPFBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "ICFANEFPFBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::EEMBCPKCOIL
// Il2CppName: EEMBCPKCOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::EEMBCPKCOIL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "EEMBCPKCOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::DDJINHIPKCE
// Il2CppName: DDJINHIPKCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::DDJINHIPKCE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "DDJINHIPKCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::HABDJCEKMNH
// Il2CppName: HABDJCEKMNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::HABDJCEKMNH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "HABDJCEKMNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::CHEMMHEMDCB
// Il2CppName: CHEMMHEMDCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::CHEMMHEMDCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "CHEMMHEMDCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::WandSword::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::BHBFEEJHKIH
// Il2CppName: BHBFEEJHKIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::BHBFEEJHKIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "BHBFEEJHKIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::ICEGDGKAIIB
// Il2CppName: ICEGDGKAIIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::ICEGDGKAIIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "ICEGDGKAIIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::OJFAEAIKFED
// Il2CppName: OJFAEAIKFED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::OJFAEAIKFED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "OJFAEAIKFED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::ANKCGGIBCAI
// Il2CppName: ANKCGGIBCAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::ANKCGGIBCAI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "ANKCGGIBCAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::AHMLIMDJCJO
// Il2CppName: AHMLIMDJCJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::AHMLIMDJCJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "AHMLIMDJCJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::FIJGCHFAFHN
// Il2CppName: FIJGCHFAFHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::FIJGCHFAFHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "FIJGCHFAFHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::LOEFDHDIHGE
// Il2CppName: LOEFDHDIHGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::LOEFDHDIHGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "LOEFDHDIHGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::BIMCNDAFFJC
// Il2CppName: BIMCNDAFFJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::BIMCNDAFFJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "BIMCNDAFFJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::LLBAENEGEMN
// Il2CppName: LLBAENEGEMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::LLBAENEGEMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "LLBAENEGEMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::HHKOFMNJKDA
// Il2CppName: HHKOFMNJKDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::HHKOFMNJKDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "HHKOFMNJKDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::AMGJNJLJIFO
// Il2CppName: AMGJNJLJIFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::AMGJNJLJIFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "AMGJNJLJIFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WandSword::JPHEBENNLCB
// Il2CppName: JPHEBENNLCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WandSword::*)()>(&MagicalActual::WandSword::JPHEBENNLCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WandSword*), "JPHEBENNLCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
