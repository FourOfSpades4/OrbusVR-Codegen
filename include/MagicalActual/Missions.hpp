// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Mission
  class Mission;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Missions
  class Missions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Missions);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Missions*, "MagicalActual", "Missions");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Missions
  // [TokenAttribute] Offset: FFFFFFFF
  class Missions : public ::Il2CppObject {
    public:
    public:
    // public MagicalActual.Mission[] missions
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::MagicalActual::Mission*> missions;
    // Field size check
    static_assert(sizeof(::ArrayW<::MagicalActual::Mission*>) == 0x8);
    // public System.Int32 availableCredits
    // Size: 0x4
    // Offset: 0x18
    int availableCredits;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public MagicalActual.Mission[] missions
    [[deprecated("Use field access instead!")]] ::ArrayW<::MagicalActual::Mission*>& dyn_missions();
    // Get instance field reference: public System.Int32 availableCredits
    [[deprecated("Use field access instead!")]] int& dyn_availableCredits();
    // public System.Void .ctor()
    // Offset: 0x13F5068
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Missions* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Missions::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Missions*, creationType>()));
    }
  }; // MagicalActual.Missions
  #pragma pack(pop)
  static check_size<sizeof(Missions), 24 + sizeof(int)> __MagicalActual_MissionsSizeCheck;
  static_assert(sizeof(Missions) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Missions::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
