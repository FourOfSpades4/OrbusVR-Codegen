// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: BoxCollider
  class BoxCollider;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: WarriorCollisionBox
  class WarriorCollisionBox;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::WarriorCollisionBox);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::WarriorCollisionBox*, "MagicalActual", "WarriorCollisionBox");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.WarriorCollisionBox
  // [TokenAttribute] Offset: FFFFFFFF
  class WarriorCollisionBox : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public MagicalActual.Monster targetMonster
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* targetMonster;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private System.Boolean GFCMADNPNNI
    // Size: 0x1
    // Offset: 0x20
    bool GFCMADNPNNI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: GFCMADNPNNI and: IJGAJCIKPAF
    char __padding1[0x3] = {};
    // private UnityEngine.Vector3 IJGAJCIKPAF
    // Size: 0xC
    // Offset: 0x24
    ::UnityEngine::Vector3 IJGAJCIKPAF;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single CEDKCCPEEOI
    // Size: 0x4
    // Offset: 0x30
    float CEDKCCPEEOI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: CEDKCCPEEOI and: GJMHFEKNONJ
    char __padding3[0x4] = {};
    // private UnityEngine.BoxCollider GJMHFEKNONJ
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::BoxCollider* GJMHFEKNONJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::BoxCollider*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public MagicalActual.Monster targetMonster
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_targetMonster();
    // Get instance field reference: private System.Boolean GFCMADNPNNI
    [[deprecated("Use field access instead!")]] bool& dyn_GFCMADNPNNI();
    // Get instance field reference: private UnityEngine.Vector3 IJGAJCIKPAF
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_IJGAJCIKPAF();
    // Get instance field reference: private System.Single CEDKCCPEEOI
    [[deprecated("Use field access instead!")]] float& dyn_CEDKCCPEEOI();
    // Get instance field reference: private UnityEngine.BoxCollider GJMHFEKNONJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::BoxCollider*& dyn_GJMHFEKNONJ();
    // private System.Void AMIPIMKIJMO()
    // Offset: 0x1A24C48
    void AMIPIMKIJMO();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x1A2504C
    void CBMDGNKFPIO();
    // private System.Void LCJOLDDGOJP()
    // Offset: 0x1A24FA4
    void LCJOLDDGOJP();
    // public System.Void NAKLLPAGDPJ(MagicalActual.Monster CBAKFGCEIEL)
    // Offset: 0x1A25050
    void NAKLLPAGDPJ(::MagicalActual::Monster* CBAKFGCEIEL);
    // private System.Void GKIOLADOCOK()
    // Offset: 0x1A251F8
    void GKIOLADOCOK();
    // private System.Void FLJMJKAKNBH()
    // Offset: 0x1A251FC
    void FLJMJKAKNBH();
    // public System.Void AssignMonster(MagicalActual.Monster CBAKFGCEIEL)
    // Offset: 0x1A25600
    void AssignMonster(::MagicalActual::Monster* CBAKFGCEIEL);
    // private System.Void Start()
    // Offset: 0x1A257A0
    void Start();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x1A257A4
    void BDEDGNGMHMN();
    // private System.Void FixedUpdate()
    // Offset: 0x1A257A8
    void FixedUpdate();
    // public System.Void PLJNLLBOOEP()
    // Offset: 0x1A25B08
    void PLJNLLBOOEP();
    // private System.Void EEMBCPKCOIL()
    // Offset: 0x1A25BB0
    void EEMBCPKCOIL();
    // private System.Void OGHONBBPDLL()
    // Offset: 0x1A25F0C
    void OGHONBBPDLL();
    // public System.Void MonsterDied()
    // Offset: 0x1A25FB0
    void MonsterDied();
    // public System.Void DOEPPCLMCHE(MagicalActual.Monster CBAKFGCEIEL)
    // Offset: 0x1A25FB4
    void DOEPPCLMCHE(::MagicalActual::Monster* CBAKFGCEIEL);
    // public System.Void .ctor()
    // Offset: 0x1A2615C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WarriorCollisionBox* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::WarriorCollisionBox::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WarriorCollisionBox*, creationType>()));
    }
    // private System.Void PEACINOBBFG()
    // Offset: 0x1A25B0C
    void PEACINOBBFG();
    // private System.Void KKFHIIKIDKG()
    // Offset: 0x1A2616C
    void KKFHIIKIDKG();
    // private System.Void PJOIJIEDPMP()
    // Offset: 0x1A26214
    void PJOIJIEDPMP();
    // public System.Void BAPHHEFGEEH()
    // Offset: 0x1A26570
    void BAPHHEFGEEH();
    // private System.Void GBODGDBGOJD()
    // Offset: 0x1A25558
    void GBODGDBGOJD();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x1A26574
    void GHLPBOJJHNG();
    // private System.Void AMGJNJLJIFO()
    // Offset: 0x1A26578
    void AMGJNJLJIFO();
    // public System.Void JLLJMKFAGKD(MagicalActual.Monster CBAKFGCEIEL)
    // Offset: 0x1A268D4
    void JLLJMKFAGKD(::MagicalActual::Monster* CBAKFGCEIEL);
    // public System.Void NAFANOBEOJF()
    // Offset: 0x1A26A7C
    void NAFANOBEOJF();
    // public System.Void PIPAEOPKCBA(MagicalActual.Monster CBAKFGCEIEL)
    // Offset: 0x1A26A80
    void PIPAEOPKCBA(::MagicalActual::Monster* CBAKFGCEIEL);
    // private System.Void PFABJJGAOMM()
    // Offset: 0x1A26C28
    void PFABJJGAOMM();
    // private System.Void JEDINCAJKLC()
    // Offset: 0x1A26C2C
    void JEDINCAJKLC();
    // private System.Void KNMLKHLEFNF()
    // Offset: 0x1A26F88
    void KNMLKHLEFNF();
    // public System.Void ELFFINKEDDJ()
    // Offset: 0x1A2702C
    void ELFFINKEDDJ();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x1A27030
    void HKINNMLBMMG();
    // public System.Void JAHEOAPIBAO(MagicalActual.Monster CBAKFGCEIEL)
    // Offset: 0x1A27034
    void JAHEOAPIBAO(::MagicalActual::Monster* CBAKFGCEIEL);
    // public System.Void HMGHOOFBCEP(MagicalActual.Monster CBAKFGCEIEL)
    // Offset: 0x1A271DC
    void HMGHOOFBCEP(::MagicalActual::Monster* CBAKFGCEIEL);
    // public System.Void NAIKAHHEAJG(MagicalActual.Monster CBAKFGCEIEL)
    // Offset: 0x1A27384
    void NAIKAHHEAJG(::MagicalActual::Monster* CBAKFGCEIEL);
    // public System.Void MMDDBEMELOA()
    // Offset: 0x1A2752C
    void MMDDBEMELOA();
    // private System.Void NAPGGGFOEKO()
    // Offset: 0x1A27530
    void NAPGGGFOEKO();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x1A2788C
    void JENOIOBAEPG();
    // public System.Void IMNCDKDKJBL(MagicalActual.Monster CBAKFGCEIEL)
    // Offset: 0x1A27890
    void IMNCDKDKJBL(::MagicalActual::Monster* CBAKFGCEIEL);
  }; // MagicalActual.WarriorCollisionBox
  #pragma pack(pop)
  static check_size<sizeof(WarriorCollisionBox), 56 + sizeof(::UnityEngine::BoxCollider*)> __MagicalActual_WarriorCollisionBoxSizeCheck;
  static_assert(sizeof(WarriorCollisionBox) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::AMIPIMKIJMO
// Il2CppName: AMIPIMKIJMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::AMIPIMKIJMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "AMIPIMKIJMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::LCJOLDDGOJP
// Il2CppName: LCJOLDDGOJP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::LCJOLDDGOJP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "LCJOLDDGOJP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::NAKLLPAGDPJ
// Il2CppName: NAKLLPAGDPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)(::MagicalActual::Monster*)>(&MagicalActual::WarriorCollisionBox::NAKLLPAGDPJ)> {
  static const MethodInfo* get() {
    static auto* CBAKFGCEIEL = &::il2cpp_utils::GetClassFromName("MagicalActual", "Monster")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "NAKLLPAGDPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBAKFGCEIEL});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::FLJMJKAKNBH
// Il2CppName: FLJMJKAKNBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::FLJMJKAKNBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "FLJMJKAKNBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::AssignMonster
// Il2CppName: AssignMonster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)(::MagicalActual::Monster*)>(&MagicalActual::WarriorCollisionBox::AssignMonster)> {
  static const MethodInfo* get() {
    static auto* CBAKFGCEIEL = &::il2cpp_utils::GetClassFromName("MagicalActual", "Monster")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "AssignMonster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBAKFGCEIEL});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::PLJNLLBOOEP
// Il2CppName: PLJNLLBOOEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::PLJNLLBOOEP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "PLJNLLBOOEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::EEMBCPKCOIL
// Il2CppName: EEMBCPKCOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::EEMBCPKCOIL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "EEMBCPKCOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::OGHONBBPDLL
// Il2CppName: OGHONBBPDLL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::OGHONBBPDLL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "OGHONBBPDLL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::MonsterDied
// Il2CppName: MonsterDied
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::MonsterDied)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "MonsterDied", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::DOEPPCLMCHE
// Il2CppName: DOEPPCLMCHE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)(::MagicalActual::Monster*)>(&MagicalActual::WarriorCollisionBox::DOEPPCLMCHE)> {
  static const MethodInfo* get() {
    static auto* CBAKFGCEIEL = &::il2cpp_utils::GetClassFromName("MagicalActual", "Monster")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "DOEPPCLMCHE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBAKFGCEIEL});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::PEACINOBBFG
// Il2CppName: PEACINOBBFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::PEACINOBBFG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "PEACINOBBFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::KKFHIIKIDKG
// Il2CppName: KKFHIIKIDKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::KKFHIIKIDKG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "KKFHIIKIDKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::PJOIJIEDPMP
// Il2CppName: PJOIJIEDPMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::PJOIJIEDPMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "PJOIJIEDPMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::BAPHHEFGEEH
// Il2CppName: BAPHHEFGEEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::BAPHHEFGEEH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "BAPHHEFGEEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::GBODGDBGOJD
// Il2CppName: GBODGDBGOJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::GBODGDBGOJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "GBODGDBGOJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::AMGJNJLJIFO
// Il2CppName: AMGJNJLJIFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::AMGJNJLJIFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "AMGJNJLJIFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::JLLJMKFAGKD
// Il2CppName: JLLJMKFAGKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)(::MagicalActual::Monster*)>(&MagicalActual::WarriorCollisionBox::JLLJMKFAGKD)> {
  static const MethodInfo* get() {
    static auto* CBAKFGCEIEL = &::il2cpp_utils::GetClassFromName("MagicalActual", "Monster")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "JLLJMKFAGKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBAKFGCEIEL});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::NAFANOBEOJF
// Il2CppName: NAFANOBEOJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::NAFANOBEOJF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "NAFANOBEOJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::PIPAEOPKCBA
// Il2CppName: PIPAEOPKCBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)(::MagicalActual::Monster*)>(&MagicalActual::WarriorCollisionBox::PIPAEOPKCBA)> {
  static const MethodInfo* get() {
    static auto* CBAKFGCEIEL = &::il2cpp_utils::GetClassFromName("MagicalActual", "Monster")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "PIPAEOPKCBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBAKFGCEIEL});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::JEDINCAJKLC
// Il2CppName: JEDINCAJKLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::JEDINCAJKLC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "JEDINCAJKLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::KNMLKHLEFNF
// Il2CppName: KNMLKHLEFNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::KNMLKHLEFNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "KNMLKHLEFNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::ELFFINKEDDJ
// Il2CppName: ELFFINKEDDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::ELFFINKEDDJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "ELFFINKEDDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::JAHEOAPIBAO
// Il2CppName: JAHEOAPIBAO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)(::MagicalActual::Monster*)>(&MagicalActual::WarriorCollisionBox::JAHEOAPIBAO)> {
  static const MethodInfo* get() {
    static auto* CBAKFGCEIEL = &::il2cpp_utils::GetClassFromName("MagicalActual", "Monster")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "JAHEOAPIBAO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBAKFGCEIEL});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::HMGHOOFBCEP
// Il2CppName: HMGHOOFBCEP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)(::MagicalActual::Monster*)>(&MagicalActual::WarriorCollisionBox::HMGHOOFBCEP)> {
  static const MethodInfo* get() {
    static auto* CBAKFGCEIEL = &::il2cpp_utils::GetClassFromName("MagicalActual", "Monster")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "HMGHOOFBCEP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBAKFGCEIEL});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::NAIKAHHEAJG
// Il2CppName: NAIKAHHEAJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)(::MagicalActual::Monster*)>(&MagicalActual::WarriorCollisionBox::NAIKAHHEAJG)> {
  static const MethodInfo* get() {
    static auto* CBAKFGCEIEL = &::il2cpp_utils::GetClassFromName("MagicalActual", "Monster")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "NAIKAHHEAJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBAKFGCEIEL});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::MMDDBEMELOA
// Il2CppName: MMDDBEMELOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::MMDDBEMELOA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "MMDDBEMELOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::NAPGGGFOEKO
// Il2CppName: NAPGGGFOEKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::NAPGGGFOEKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "NAPGGGFOEKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)()>(&MagicalActual::WarriorCollisionBox::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::WarriorCollisionBox::IMNCDKDKJBL
// Il2CppName: IMNCDKDKJBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::WarriorCollisionBox::*)(::MagicalActual::Monster*)>(&MagicalActual::WarriorCollisionBox::IMNCDKDKJBL)> {
  static const MethodInfo* get() {
    static auto* CBAKFGCEIEL = &::il2cpp_utils::GetClassFromName("MagicalActual", "Monster")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::WarriorCollisionBox*), "IMNCDKDKJBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CBAKFGCEIEL});
  }
};
