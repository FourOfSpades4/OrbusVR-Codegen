// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: FogChange
  class FogChange;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::FogChange);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::FogChange*, "MagicalActual", "FogChange");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.FogChange
  // [TokenAttribute] Offset: FFFFFFFF
  class FogChange : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.Boolean doNotChangeFogColor
    // Size: 0x1
    // Offset: 0x18
    bool doNotChangeFogColor;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: doNotChangeFogColor and: fogColor
    char __padding0[0x3] = {};
    // public UnityEngine.Color fogColor
    // Size: 0x10
    // Offset: 0x1C
    ::UnityEngine::Color fogColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public System.Single fogDensity
    // Size: 0x4
    // Offset: 0x2C
    float fogDensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single lerpTime
    // Size: 0x4
    // Offset: 0x30
    float lerpTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single CAJOGEKCPGL
    // Size: 0x4
    // Offset: 0x34
    float CAJOGEKCPGL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single CHMMAFLLJBA
    // Size: 0x4
    // Offset: 0x38
    float CHMMAFLLJBA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color LJLNAAAAIND
    // Size: 0x10
    // Offset: 0x3C
    ::UnityEngine::Color LJLNAAAAIND;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color MKILAANKBLF
    // Size: 0x10
    // Offset: 0x4C
    ::UnityEngine::Color MKILAANKBLF;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Single NACAIOIMNBK
    // Size: 0x4
    // Offset: 0x5C
    float NACAIOIMNBK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single DNKOKEIOGFJ
    // Size: 0x4
    // Offset: 0x60
    float DNKOKEIOGFJ;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean BLOBNEEIBON
    // Size: 0x1
    // Offset: 0x64
    bool BLOBNEEIBON;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean BCHLKACHIOC
    // Size: 0x1
    // Offset: 0x65
    bool BCHLKACHIOC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean JIODMGKMDNL
    // Size: 0x1
    // Offset: 0x66
    bool JIODMGKMDNL;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean IEAINLLJHOD
    // Size: 0x1
    // Offset: 0x67
    bool IEAINLLJHOD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Single OKKAKDLGJKE
    // Size: 0x4
    // Offset: 0x68
    float OKKAKDLGJKE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: OKKAKDLGJKE and: BHHGMPLHEDC
    char __padding14[0x4] = {};
    // private System.String BHHGMPLHEDC
    // Size: 0x8
    // Offset: 0x70
    ::StringW BHHGMPLHEDC;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private UnityEngine.Collider BBOMOHLELBB
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::Collider* BBOMOHLELBB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Collider*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Boolean doNotChangeFogColor
    [[deprecated("Use field access instead!")]] bool& dyn_doNotChangeFogColor();
    // Get instance field reference: public UnityEngine.Color fogColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_fogColor();
    // Get instance field reference: public System.Single fogDensity
    [[deprecated("Use field access instead!")]] float& dyn_fogDensity();
    // Get instance field reference: public System.Single lerpTime
    [[deprecated("Use field access instead!")]] float& dyn_lerpTime();
    // Get instance field reference: private System.Single CAJOGEKCPGL
    [[deprecated("Use field access instead!")]] float& dyn_CAJOGEKCPGL();
    // Get instance field reference: private System.Single CHMMAFLLJBA
    [[deprecated("Use field access instead!")]] float& dyn_CHMMAFLLJBA();
    // Get instance field reference: private UnityEngine.Color LJLNAAAAIND
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_LJLNAAAAIND();
    // Get instance field reference: private UnityEngine.Color MKILAANKBLF
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_MKILAANKBLF();
    // Get instance field reference: private System.Single NACAIOIMNBK
    [[deprecated("Use field access instead!")]] float& dyn_NACAIOIMNBK();
    // Get instance field reference: private System.Single DNKOKEIOGFJ
    [[deprecated("Use field access instead!")]] float& dyn_DNKOKEIOGFJ();
    // Get instance field reference: private System.Boolean BLOBNEEIBON
    [[deprecated("Use field access instead!")]] bool& dyn_BLOBNEEIBON();
    // Get instance field reference: private System.Boolean BCHLKACHIOC
    [[deprecated("Use field access instead!")]] bool& dyn_BCHLKACHIOC();
    // Get instance field reference: private System.Boolean JIODMGKMDNL
    [[deprecated("Use field access instead!")]] bool& dyn_JIODMGKMDNL();
    // Get instance field reference: private System.Boolean IEAINLLJHOD
    [[deprecated("Use field access instead!")]] bool& dyn_IEAINLLJHOD();
    // Get instance field reference: private System.Single OKKAKDLGJKE
    [[deprecated("Use field access instead!")]] float& dyn_OKKAKDLGJKE();
    // Get instance field reference: private System.String BHHGMPLHEDC
    [[deprecated("Use field access instead!")]] ::StringW& dyn_BHHGMPLHEDC();
    // Get instance field reference: private UnityEngine.Collider BBOMOHLELBB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& dyn_BBOMOHLELBB();
    // private System.Void NKHBEHIENFP()
    // Offset: 0x1504E6C
    void NKHBEHIENFP();
    // private System.Void KDBGBFBCBCF()
    // Offset: 0x1504F74
    void KDBGBFBCBCF();
    // private System.Void NBGPOLGPGBN(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1504F78
    void NBGPOLGPGBN(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void GAAODDCPLLK(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x150527C
    void GAAODDCPLLK(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void LMICDBPDJFJ()
    // Offset: 0x150540C
    void LMICDBPDJFJ();
    // private System.Void GDLLKODAKPO()
    // Offset: 0x15055B4
    void GDLLKODAKPO();
    // private System.Void OnDestroy()
    // Offset: 0x15056BC
    void OnDestroy();
    // private System.Void NCOBMEOHHKD(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15056C0
    void NCOBMEOHHKD(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void GLNKPGBHPDE(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1505818
    void GLNKPGBHPDE(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x15059A8
    void IDOCJGNLNFL();
    // private System.Void EBBOEOAGJAE()
    // Offset: 0x1505A70
    void EBBOEOAGJAE();
    // private System.Void DGLEANMLLIJ(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1505C18
    void DGLEANMLLIJ(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void FHCHFLKKKGM(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1505D70
    void FHCHFLKKKGM(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void Update()
    // Offset: 0x1505EC8
    void Update();
    // private System.Void MIGCHKHOGEM()
    // Offset: 0x150649C
    void MIGCHKHOGEM();
    // private System.Void APKFAKMAMMA()
    // Offset: 0x15064A0
    void APKFAKMAMMA();
    // private System.Void HBIBNGPEAPC(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x15064A4
    void HBIBNGPEAPC(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void EGDFHMGHDJG()
    // Offset: 0x15065FC
    void EGDFHMGHDJG();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x15067AC
    void FGIFGGNGKPK();
    // private System.Void FMCFFLJCCCP()
    // Offset: 0x1506874
    void FMCFFLJCCCP();
    // private System.Void Start()
    // Offset: 0x1506CCC
    void Start();
    // private System.Void MJKAGCAKHHO()
    // Offset: 0x1506D94
    void MJKAGCAKHHO();
    // private System.Void JEIAGCBHHHI()
    // Offset: 0x15071F0
    void JEIAGCBHHHI();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x150764C
    void DGJGAFKDIDK();
    // private System.Void NPBBCLGBCKI(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1507714
    void NPBBCLGBCKI(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void AKGFEENGKJD()
    // Offset: 0x15078A0
    void AKGFEENGKJD();
    // private System.Void CMJMKPJJMPH()
    // Offset: 0x1507968
    void CMJMKPJJMPH();
    // private System.Void OPMANICPBBH()
    // Offset: 0x1507B14
    void OPMANICPBBH();
    // private System.Void OnTriggerEnter(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1506314
    void OnTriggerEnter(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void OnTriggerExit(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1507CC0
    void OnTriggerExit(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void DHCNJHAMIJO()
    // Offset: 0x1507E18
    void DHCNJHAMIJO();
    // private System.Void HKLCNEIKJLJ(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1508270
    void HKLCNEIKJLJ(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void DPDDNOBAFIP()
    // Offset: 0x15083C8
    void DPDDNOBAFIP();
    // private System.Void AGDFOIFHGGG()
    // Offset: 0x1508820
    void AGDFOIFHGGG();
    // public System.Void .ctor()
    // Offset: 0x1508C74
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FogChange* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::FogChange::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FogChange*, creationType>()));
    }
    // private System.Void LJFBDAHLNLC(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1508C88
    void LJFBDAHLNLC(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void ICKIELKIKPF()
    // Offset: 0x15050D0
    void ICKIELKIKPF();
    // private System.Void IEOHKOCHOIL(UnityEngine.Collider GMCJEAMJJEP)
    // Offset: 0x1508DE0
    void IEOHKOCHOIL(::UnityEngine::Collider* GMCJEAMJJEP);
    // private System.Void MDLALKIJEBN()
    // Offset: 0x1508F38
    void MDLALKIJEBN();
  }; // MagicalActual.FogChange
  #pragma pack(pop)
  static check_size<sizeof(FogChange), 120 + sizeof(::UnityEngine::Collider*)> __MagicalActual_FogChangeSizeCheck;
  static_assert(sizeof(FogChange) == 0x80);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::FogChange::NKHBEHIENFP
// Il2CppName: NKHBEHIENFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::NKHBEHIENFP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "NKHBEHIENFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::KDBGBFBCBCF
// Il2CppName: KDBGBFBCBCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::KDBGBFBCBCF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "KDBGBFBCBCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::NBGPOLGPGBN
// Il2CppName: NBGPOLGPGBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::NBGPOLGPGBN)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "NBGPOLGPGBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::GAAODDCPLLK
// Il2CppName: GAAODDCPLLK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::GAAODDCPLLK)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "GAAODDCPLLK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::LMICDBPDJFJ
// Il2CppName: LMICDBPDJFJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::LMICDBPDJFJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "LMICDBPDJFJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::GDLLKODAKPO
// Il2CppName: GDLLKODAKPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::GDLLKODAKPO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "GDLLKODAKPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::NCOBMEOHHKD
// Il2CppName: NCOBMEOHHKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::NCOBMEOHHKD)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "NCOBMEOHHKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::GLNKPGBHPDE
// Il2CppName: GLNKPGBHPDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::GLNKPGBHPDE)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "GLNKPGBHPDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::EBBOEOAGJAE
// Il2CppName: EBBOEOAGJAE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::EBBOEOAGJAE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "EBBOEOAGJAE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::DGLEANMLLIJ
// Il2CppName: DGLEANMLLIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::DGLEANMLLIJ)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "DGLEANMLLIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::FHCHFLKKKGM
// Il2CppName: FHCHFLKKKGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::FHCHFLKKKGM)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "FHCHFLKKKGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::MIGCHKHOGEM
// Il2CppName: MIGCHKHOGEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::MIGCHKHOGEM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "MIGCHKHOGEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::APKFAKMAMMA
// Il2CppName: APKFAKMAMMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::APKFAKMAMMA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "APKFAKMAMMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::HBIBNGPEAPC
// Il2CppName: HBIBNGPEAPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::HBIBNGPEAPC)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "HBIBNGPEAPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::EGDFHMGHDJG
// Il2CppName: EGDFHMGHDJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::EGDFHMGHDJG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "EGDFHMGHDJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::FMCFFLJCCCP
// Il2CppName: FMCFFLJCCCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::FMCFFLJCCCP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "FMCFFLJCCCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::MJKAGCAKHHO
// Il2CppName: MJKAGCAKHHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::MJKAGCAKHHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "MJKAGCAKHHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::JEIAGCBHHHI
// Il2CppName: JEIAGCBHHHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::JEIAGCBHHHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "JEIAGCBHHHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::NPBBCLGBCKI
// Il2CppName: NPBBCLGBCKI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::NPBBCLGBCKI)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "NPBBCLGBCKI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::CMJMKPJJMPH
// Il2CppName: CMJMKPJJMPH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::CMJMKPJJMPH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "CMJMKPJJMPH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::OPMANICPBBH
// Il2CppName: OPMANICPBBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::OPMANICPBBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "OPMANICPBBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::OnTriggerExit
// Il2CppName: OnTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::OnTriggerExit)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "OnTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::DHCNJHAMIJO
// Il2CppName: DHCNJHAMIJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::DHCNJHAMIJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "DHCNJHAMIJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::HKLCNEIKJLJ
// Il2CppName: HKLCNEIKJLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::HKLCNEIKJLJ)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "HKLCNEIKJLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::DPDDNOBAFIP
// Il2CppName: DPDDNOBAFIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::DPDDNOBAFIP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "DPDDNOBAFIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::AGDFOIFHGGG
// Il2CppName: AGDFOIFHGGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::AGDFOIFHGGG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "AGDFOIFHGGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::FogChange::LJFBDAHLNLC
// Il2CppName: LJFBDAHLNLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::LJFBDAHLNLC)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "LJFBDAHLNLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::ICKIELKIKPF
// Il2CppName: ICKIELKIKPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::ICKIELKIKPF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "ICKIELKIKPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::IEOHKOCHOIL
// Il2CppName: IEOHKOCHOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)(::UnityEngine::Collider*)>(&MagicalActual::FogChange::IEOHKOCHOIL)> {
  static const MethodInfo* get() {
    static auto* GMCJEAMJJEP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "IEOHKOCHOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GMCJEAMJJEP});
  }
};
// Writing MetadataGetter for method: MagicalActual::FogChange::MDLALKIJEBN
// Il2CppName: MDLALKIJEBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FogChange::*)()>(&MagicalActual::FogChange::MDLALKIJEBN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FogChange*), "MDLALKIJEBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
