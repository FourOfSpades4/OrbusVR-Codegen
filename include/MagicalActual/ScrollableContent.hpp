// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ScrollableContent
  class ScrollableContent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ScrollableContent);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ScrollableContent*, "MagicalActual", "ScrollableContent");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ScrollableContent
  // [TokenAttribute] Offset: FFFFFFFF
  class ScrollableContent : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.RectTransform content
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::RectTransform* content;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.RectTransform content
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_content();
    // public System.Void PELHFMFAICK(System.Single EDKKGFLKMAC)
    // Offset: 0x11EF700
    void PELHFMFAICK(float EDKKGFLKMAC);
    // public System.Void BGGGHJHADJB(System.Single EDKKGFLKMAC)
    // Offset: 0x11EF7EC
    void BGGGHJHADJB(float EDKKGFLKMAC);
    // public System.Void GOMABCGELJA(System.Single EDKKGFLKMAC)
    // Offset: 0x11EF8D8
    void GOMABCGELJA(float EDKKGFLKMAC);
    // public System.Void EONGNBIHIPO(System.Single EDKKGFLKMAC)
    // Offset: 0x11EF9C4
    void EONGNBIHIPO(float EDKKGFLKMAC);
    // public System.Void GFIMKBOIBDJ(System.Single EDKKGFLKMAC)
    // Offset: 0x11EFAB0
    void GFIMKBOIBDJ(float EDKKGFLKMAC);
    // public System.Void PKCBJCEDBNO(System.Single EDKKGFLKMAC)
    // Offset: 0x11EFB9C
    void PKCBJCEDBNO(float EDKKGFLKMAC);
    // public System.Void ScrollBy(System.Single EDKKGFLKMAC)
    // Offset: 0x11EFC88
    void ScrollBy(float EDKKGFLKMAC);
    // public System.Void AFHJKBJEAPE(System.Single EDKKGFLKMAC)
    // Offset: 0x11EFD74
    void AFHJKBJEAPE(float EDKKGFLKMAC);
    // public System.Void IIDOBLNJLDA(System.Single EDKKGFLKMAC)
    // Offset: 0x11EFE60
    void IIDOBLNJLDA(float EDKKGFLKMAC);
    // public System.Void IAKJGGJLLMC(System.Single EDKKGFLKMAC)
    // Offset: 0x11EFF4C
    void IAKJGGJLLMC(float EDKKGFLKMAC);
    // public System.Void JAKDAKHHDOO(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0038
    void JAKDAKHHDOO(float EDKKGFLKMAC);
    // public System.Void HJIKMKCDDDB(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0124
    void HJIKMKCDDDB(float EDKKGFLKMAC);
    // public System.Void PEOFMACCGKI(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0210
    void PEOFMACCGKI(float EDKKGFLKMAC);
    // public System.Void HIBBABBENMN(System.Single EDKKGFLKMAC)
    // Offset: 0x11F02FC
    void HIBBABBENMN(float EDKKGFLKMAC);
    // public System.Void DKEHCBCOOAE(System.Single EDKKGFLKMAC)
    // Offset: 0x11F03E8
    void DKEHCBCOOAE(float EDKKGFLKMAC);
    // public System.Void GPDCNPHLONK(System.Single EDKKGFLKMAC)
    // Offset: 0x11F04D4
    void GPDCNPHLONK(float EDKKGFLKMAC);
    // public System.Void MFOKNCAOIBB(System.Single EDKKGFLKMAC)
    // Offset: 0x11F05C0
    void MFOKNCAOIBB(float EDKKGFLKMAC);
    // public System.Void MGMPAGKNDJK(System.Single EDKKGFLKMAC)
    // Offset: 0x11F06AC
    void MGMPAGKNDJK(float EDKKGFLKMAC);
    // public System.Void EPLNAFLPCGL(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0798
    void EPLNAFLPCGL(float EDKKGFLKMAC);
    // public System.Void KDPGABFIFJE(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0884
    void KDPGABFIFJE(float EDKKGFLKMAC);
    // public System.Void HDALDABGKBO(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0970
    void HDALDABGKBO(float EDKKGFLKMAC);
    // public System.Void GDBFDDPJJGG(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0A5C
    void GDBFDDPJJGG(float EDKKGFLKMAC);
    // public System.Void CHJPONPCLCM(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0B48
    void CHJPONPCLCM(float EDKKGFLKMAC);
    // public System.Void .ctor()
    // Offset: 0x11F0C34
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScrollableContent* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ScrollableContent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScrollableContent*, creationType>()));
    }
    // public System.Void HKLIFELIEKO(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0C3C
    void HKLIFELIEKO(float EDKKGFLKMAC);
    // public System.Void MEJDJCDMMNN(System.Single EDKKGFLKMAC)
    // Offset: 0x11F0D28
    void MEJDJCDMMNN(float EDKKGFLKMAC);
  }; // MagicalActual.ScrollableContent
  #pragma pack(pop)
  static check_size<sizeof(ScrollableContent), 24 + sizeof(::UnityEngine::RectTransform*)> __MagicalActual_ScrollableContentSizeCheck;
  static_assert(sizeof(ScrollableContent) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::PELHFMFAICK
// Il2CppName: PELHFMFAICK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::PELHFMFAICK)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "PELHFMFAICK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::BGGGHJHADJB
// Il2CppName: BGGGHJHADJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::BGGGHJHADJB)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "BGGGHJHADJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::GOMABCGELJA
// Il2CppName: GOMABCGELJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::GOMABCGELJA)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "GOMABCGELJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::EONGNBIHIPO
// Il2CppName: EONGNBIHIPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::EONGNBIHIPO)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "EONGNBIHIPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::GFIMKBOIBDJ
// Il2CppName: GFIMKBOIBDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::GFIMKBOIBDJ)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "GFIMKBOIBDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::PKCBJCEDBNO
// Il2CppName: PKCBJCEDBNO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::PKCBJCEDBNO)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "PKCBJCEDBNO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::ScrollBy
// Il2CppName: ScrollBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::ScrollBy)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "ScrollBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::AFHJKBJEAPE
// Il2CppName: AFHJKBJEAPE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::AFHJKBJEAPE)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "AFHJKBJEAPE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::IIDOBLNJLDA
// Il2CppName: IIDOBLNJLDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::IIDOBLNJLDA)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "IIDOBLNJLDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::IAKJGGJLLMC
// Il2CppName: IAKJGGJLLMC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::IAKJGGJLLMC)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "IAKJGGJLLMC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::JAKDAKHHDOO
// Il2CppName: JAKDAKHHDOO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::JAKDAKHHDOO)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "JAKDAKHHDOO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::HJIKMKCDDDB
// Il2CppName: HJIKMKCDDDB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::HJIKMKCDDDB)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "HJIKMKCDDDB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::PEOFMACCGKI
// Il2CppName: PEOFMACCGKI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::PEOFMACCGKI)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "PEOFMACCGKI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::HIBBABBENMN
// Il2CppName: HIBBABBENMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::HIBBABBENMN)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "HIBBABBENMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::DKEHCBCOOAE
// Il2CppName: DKEHCBCOOAE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::DKEHCBCOOAE)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "DKEHCBCOOAE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::GPDCNPHLONK
// Il2CppName: GPDCNPHLONK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::GPDCNPHLONK)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "GPDCNPHLONK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::MFOKNCAOIBB
// Il2CppName: MFOKNCAOIBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::MFOKNCAOIBB)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "MFOKNCAOIBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::MGMPAGKNDJK
// Il2CppName: MGMPAGKNDJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::MGMPAGKNDJK)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "MGMPAGKNDJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::EPLNAFLPCGL
// Il2CppName: EPLNAFLPCGL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::EPLNAFLPCGL)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "EPLNAFLPCGL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::KDPGABFIFJE
// Il2CppName: KDPGABFIFJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::KDPGABFIFJE)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "KDPGABFIFJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::HDALDABGKBO
// Il2CppName: HDALDABGKBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::HDALDABGKBO)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "HDALDABGKBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::GDBFDDPJJGG
// Il2CppName: GDBFDDPJJGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::GDBFDDPJJGG)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "GDBFDDPJJGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::CHJPONPCLCM
// Il2CppName: CHJPONPCLCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::CHJPONPCLCM)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "CHJPONPCLCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::HKLIFELIEKO
// Il2CppName: HKLIFELIEKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::HKLIFELIEKO)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "HKLIFELIEKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::ScrollableContent::MEJDJCDMMNN
// Il2CppName: MEJDJCDMMNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::ScrollableContent::*)(float)>(&MagicalActual::ScrollableContent::MEJDJCDMMNN)> {
  static const MethodInfo* get() {
    static auto* EDKKGFLKMAC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::ScrollableContent*), "MEJDJCDMMNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EDKKGFLKMAC});
  }
};
