// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Catenary
  class Catenary;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::Catenary);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::Catenary*, "MagicalActual", "Catenary");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.Catenary
  // [TokenAttribute] Offset: FFFFFFFF
  class Catenary : public ::Il2CppObject {
    public:
    // public System.Single AADCNONPJHH(System.Single NEOMIOOMMPM, System.Single KAMMMBFNBLF)
    // Offset: 0x1A5C2E4
    float AADCNONPJHH(float NEOMIOOMMPM, float KAMMMBFNBLF);
    // public System.Void KMKOCACGDGJ(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5C398
    void KMKOCACGDGJ(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // public System.Void DLHDAFJBDII(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5C680
    void DLHDAFJBDII(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // public System.Void .ctor()
    // Offset: 0x1A5C938
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Catenary* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::Catenary::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Catenary*, creationType>()));
    }
    // private System.Single HMCCCNEIKAN(System.Single FFNMEJOKJID)
    // Offset: 0x1A5C940
    float HMCCCNEIKAN(float FFNMEJOKJID);
    // public System.Single FBGEBIDCFGA(System.Single NEOMIOOMMPM, System.Single KAMMMBFNBLF)
    // Offset: 0x1A5C9C8
    float FBGEBIDCFGA(float NEOMIOOMMPM, float KAMMMBFNBLF);
    // public System.Void JAFDHHOCFMG(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5CA7C
    void JAFDHHOCFMG(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // public System.Void PMDFCEABLKB(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5CD40
    void PMDFCEABLKB(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // public System.Void CNOANHKJBPO(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5D048
    void CNOANHKJBPO(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // private System.Single BCFDJFOLEGD(System.Single FFNMEJOKJID)
    // Offset: 0x1A5C9F0
    float BCFDJFOLEGD(float FFNMEJOKJID);
    // public System.Void FBHBMKGLICL(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5D2FC
    void FBHBMKGLICL(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // public System.Single EKHNKKEOEGL(System.Single NEOMIOOMMPM, System.Single KAMMMBFNBLF)
    // Offset: 0x1A5D5AC
    float EKHNKKEOEGL(float NEOMIOOMMPM, float KAMMMBFNBLF);
    // public System.Void LCKBMBAJJON(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5D660
    void LCKBMBAJJON(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // public System.Single LIHDAOPKLIJ(System.Single NEOMIOOMMPM, System.Single KAMMMBFNBLF)
    // Offset: 0x1A5C658
    float LIHDAOPKLIJ(float NEOMIOOMMPM, float KAMMMBFNBLF);
    // public System.Void GGEBFPKBLIM(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5D924
    void GGEBFPKBLIM(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // public System.Single LFPBGHDBGGG(System.Single NEOMIOOMMPM, System.Single KAMMMBFNBLF)
    // Offset: 0x1A5CFF8
    float LFPBGHDBGGG(float NEOMIOOMMPM, float KAMMMBFNBLF);
    // public System.Void CDHCACGKLMO(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5DC04
    void CDHCACGKLMO(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // public System.Single PJCKNEAIBCG(System.Single NEOMIOOMMPM, System.Single KAMMMBFNBLF)
    // Offset: 0x1A5C630
    float PJCKNEAIBCG(float NEOMIOOMMPM, float KAMMMBFNBLF);
    // private System.Single LFHKBNPPCBC(System.Single FFNMEJOKJID)
    // Offset: 0x1A5C30C
    float LFHKBNPPCBC(float FFNMEJOKJID);
    // private System.Single PJFKCOCGHKH(System.Single FFNMEJOKJID)
    // Offset: 0x1A5DECC
    float PJFKCOCGHKH(float FFNMEJOKJID);
    // public System.Single KOECJHDAFLF(System.Single NEOMIOOMMPM, System.Single KAMMMBFNBLF)
    // Offset: 0x1A5D020
    float KOECJHDAFLF(float NEOMIOOMMPM, float KAMMMBFNBLF);
    // public System.Void LNMBCHDFIKL(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5DF58
    void LNMBCHDFIKL(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // public System.Void AFKMCKPEBFA(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5E1F0
    void AFKMCKPEBFA(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // public System.Single KIMDAKOABLG(System.Single NEOMIOOMMPM, System.Single KAMMMBFNBLF)
    // Offset: 0x1A5DBDC
    float KIMDAKOABLG(float NEOMIOOMMPM, float KAMMMBFNBLF);
    // public System.Single JBIIBKCNNIL(System.Single NEOMIOOMMPM, System.Single KAMMMBFNBLF)
    // Offset: 0x1A5D8FC
    float JBIIBKCNNIL(float NEOMIOOMMPM, float KAMMMBFNBLF);
    // public System.Void MKBHONEEOGB(UnityEngine.Vector3 AEPEJPPIBAK, UnityEngine.Vector3 LECKFPDJNHC, UnityEngine.Vector3[] INBLGCJBBJJ, System.Int32 HLAFOPNMJKG, System.Single HLDJMGEFAIN, System.Single NMLEEJPDFMI)
    // Offset: 0x1A5E4A8
    void MKBHONEEOGB(::UnityEngine::Vector3 AEPEJPPIBAK, ::UnityEngine::Vector3 LECKFPDJNHC, ::ArrayW<::UnityEngine::Vector3> INBLGCJBBJJ, int HLAFOPNMJKG, float HLDJMGEFAIN, float NMLEEJPDFMI);
    // private System.Single EOOOGPMFIGC(System.Single FFNMEJOKJID)
    // Offset: 0x1A5E778
    float EOOOGPMFIGC(float FFNMEJOKJID);
    // public System.Single CPIGCOMMIGO(System.Single NEOMIOOMMPM, System.Single KAMMMBFNBLF)
    // Offset: 0x1A5CD18
    float CPIGCOMMIGO(float NEOMIOOMMPM, float KAMMMBFNBLF);
    // private System.Single NOPOFNJIGAC(System.Single FFNMEJOKJID)
    // Offset: 0x1A5D5D4
    float NOPOFNJIGAC(float FFNMEJOKJID);
  }; // MagicalActual.Catenary
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::Catenary::AADCNONPJHH
// Il2CppName: AADCNONPJHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float, float)>(&MagicalActual::Catenary::AADCNONPJHH)> {
  static const MethodInfo* get() {
    static auto* NEOMIOOMMPM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* KAMMMBFNBLF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "AADCNONPJHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOMIOOMMPM, KAMMMBFNBLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::KMKOCACGDGJ
// Il2CppName: KMKOCACGDGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::KMKOCACGDGJ)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "KMKOCACGDGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::DLHDAFJBDII
// Il2CppName: DLHDAFJBDII
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::DLHDAFJBDII)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "DLHDAFJBDII", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::Catenary::HMCCCNEIKAN
// Il2CppName: HMCCCNEIKAN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float)>(&MagicalActual::Catenary::HMCCCNEIKAN)> {
  static const MethodInfo* get() {
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "HMCCCNEIKAN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFNMEJOKJID});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::FBGEBIDCFGA
// Il2CppName: FBGEBIDCFGA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float, float)>(&MagicalActual::Catenary::FBGEBIDCFGA)> {
  static const MethodInfo* get() {
    static auto* NEOMIOOMMPM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* KAMMMBFNBLF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "FBGEBIDCFGA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOMIOOMMPM, KAMMMBFNBLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::JAFDHHOCFMG
// Il2CppName: JAFDHHOCFMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::JAFDHHOCFMG)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "JAFDHHOCFMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::PMDFCEABLKB
// Il2CppName: PMDFCEABLKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::PMDFCEABLKB)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "PMDFCEABLKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::CNOANHKJBPO
// Il2CppName: CNOANHKJBPO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::CNOANHKJBPO)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "CNOANHKJBPO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::BCFDJFOLEGD
// Il2CppName: BCFDJFOLEGD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float)>(&MagicalActual::Catenary::BCFDJFOLEGD)> {
  static const MethodInfo* get() {
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "BCFDJFOLEGD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFNMEJOKJID});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::FBHBMKGLICL
// Il2CppName: FBHBMKGLICL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::FBHBMKGLICL)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "FBHBMKGLICL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::EKHNKKEOEGL
// Il2CppName: EKHNKKEOEGL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float, float)>(&MagicalActual::Catenary::EKHNKKEOEGL)> {
  static const MethodInfo* get() {
    static auto* NEOMIOOMMPM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* KAMMMBFNBLF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "EKHNKKEOEGL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOMIOOMMPM, KAMMMBFNBLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::LCKBMBAJJON
// Il2CppName: LCKBMBAJJON
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::LCKBMBAJJON)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "LCKBMBAJJON", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::LIHDAOPKLIJ
// Il2CppName: LIHDAOPKLIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float, float)>(&MagicalActual::Catenary::LIHDAOPKLIJ)> {
  static const MethodInfo* get() {
    static auto* NEOMIOOMMPM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* KAMMMBFNBLF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "LIHDAOPKLIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOMIOOMMPM, KAMMMBFNBLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::GGEBFPKBLIM
// Il2CppName: GGEBFPKBLIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::GGEBFPKBLIM)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "GGEBFPKBLIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::LFPBGHDBGGG
// Il2CppName: LFPBGHDBGGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float, float)>(&MagicalActual::Catenary::LFPBGHDBGGG)> {
  static const MethodInfo* get() {
    static auto* NEOMIOOMMPM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* KAMMMBFNBLF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "LFPBGHDBGGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOMIOOMMPM, KAMMMBFNBLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::CDHCACGKLMO
// Il2CppName: CDHCACGKLMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::CDHCACGKLMO)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "CDHCACGKLMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::PJCKNEAIBCG
// Il2CppName: PJCKNEAIBCG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float, float)>(&MagicalActual::Catenary::PJCKNEAIBCG)> {
  static const MethodInfo* get() {
    static auto* NEOMIOOMMPM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* KAMMMBFNBLF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "PJCKNEAIBCG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOMIOOMMPM, KAMMMBFNBLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::LFHKBNPPCBC
// Il2CppName: LFHKBNPPCBC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float)>(&MagicalActual::Catenary::LFHKBNPPCBC)> {
  static const MethodInfo* get() {
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "LFHKBNPPCBC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFNMEJOKJID});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::PJFKCOCGHKH
// Il2CppName: PJFKCOCGHKH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float)>(&MagicalActual::Catenary::PJFKCOCGHKH)> {
  static const MethodInfo* get() {
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "PJFKCOCGHKH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFNMEJOKJID});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::KOECJHDAFLF
// Il2CppName: KOECJHDAFLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float, float)>(&MagicalActual::Catenary::KOECJHDAFLF)> {
  static const MethodInfo* get() {
    static auto* NEOMIOOMMPM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* KAMMMBFNBLF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "KOECJHDAFLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOMIOOMMPM, KAMMMBFNBLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::LNMBCHDFIKL
// Il2CppName: LNMBCHDFIKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::LNMBCHDFIKL)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "LNMBCHDFIKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::AFKMCKPEBFA
// Il2CppName: AFKMCKPEBFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::AFKMCKPEBFA)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "AFKMCKPEBFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::KIMDAKOABLG
// Il2CppName: KIMDAKOABLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float, float)>(&MagicalActual::Catenary::KIMDAKOABLG)> {
  static const MethodInfo* get() {
    static auto* NEOMIOOMMPM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* KAMMMBFNBLF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "KIMDAKOABLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOMIOOMMPM, KAMMMBFNBLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::JBIIBKCNNIL
// Il2CppName: JBIIBKCNNIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float, float)>(&MagicalActual::Catenary::JBIIBKCNNIL)> {
  static const MethodInfo* get() {
    static auto* NEOMIOOMMPM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* KAMMMBFNBLF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "JBIIBKCNNIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOMIOOMMPM, KAMMMBFNBLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::MKBHONEEOGB
// Il2CppName: MKBHONEEOGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::Catenary::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::ArrayW<::UnityEngine::Vector3>, int, float, float)>(&MagicalActual::Catenary::MKBHONEEOGB)> {
  static const MethodInfo* get() {
    static auto* AEPEJPPIBAK = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* LECKFPDJNHC = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* INBLGCJBBJJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* HLAFOPNMJKG = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* HLDJMGEFAIN = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* NMLEEJPDFMI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "MKBHONEEOGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AEPEJPPIBAK, LECKFPDJNHC, INBLGCJBBJJ, HLAFOPNMJKG, HLDJMGEFAIN, NMLEEJPDFMI});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::EOOOGPMFIGC
// Il2CppName: EOOOGPMFIGC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float)>(&MagicalActual::Catenary::EOOOGPMFIGC)> {
  static const MethodInfo* get() {
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "EOOOGPMFIGC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFNMEJOKJID});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::CPIGCOMMIGO
// Il2CppName: CPIGCOMMIGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float, float)>(&MagicalActual::Catenary::CPIGCOMMIGO)> {
  static const MethodInfo* get() {
    static auto* NEOMIOOMMPM = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* KAMMMBFNBLF = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "CPIGCOMMIGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NEOMIOOMMPM, KAMMMBFNBLF});
  }
};
// Writing MetadataGetter for method: MagicalActual::Catenary::NOPOFNJIGAC
// Il2CppName: NOPOFNJIGAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::Catenary::*)(float)>(&MagicalActual::Catenary::NOPOFNJIGAC)> {
  static const MethodInfo* get() {
    static auto* FFNMEJOKJID = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::Catenary*), "NOPOFNJIGAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFNMEJOKJID});
  }
};
