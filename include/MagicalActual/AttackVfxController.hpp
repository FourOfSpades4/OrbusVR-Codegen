// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: WaitForSeconds
  class WaitForSeconds;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityEvent
  class UnityEvent;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: AttackVfxController
  class AttackVfxController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::AttackVfxController);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::AttackVfxController*, "MagicalActual", "AttackVfxController");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x3C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.AttackVfxController
  // [TokenAttribute] Offset: FFFFFFFF
  class AttackVfxController : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::AttackVfxController::$CheckLifeTime$d__9
    class $CheckLifeTime$d__9;
    public:
    // public UnityEngine.Transform myTransform
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Transform* myTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private UnityEngine.Events.UnityEvent vfxEvent
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Events::UnityEvent* vfxEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::Events::UnityEvent*) == 0x8);
    // private UnityEngine.WaitForSeconds IOOEDNKLKDL
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::WaitForSeconds* IOOEDNKLKDL;
    // Field size check
    static_assert(sizeof(::UnityEngine::WaitForSeconds*) == 0x8);
    // private System.Boolean DHACKPICOMK
    // Size: 0x1
    // Offset: 0x30
    bool DHACKPICOMK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: DHACKPICOMK and: GMGIKAEKNCG
    char __padding3[0x3] = {};
    // private System.Single GMGIKAEKNCG
    // Size: 0x4
    // Offset: 0x34
    float GMGIKAEKNCG;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single GEAIKPMMEBI
    // Size: 0x4
    // Offset: 0x38
    float GEAIKPMMEBI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Transform myTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_myTransform();
    // Get instance field reference: private UnityEngine.Events.UnityEvent vfxEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& dyn_vfxEvent();
    // Get instance field reference: private UnityEngine.WaitForSeconds IOOEDNKLKDL
    [[deprecated("Use field access instead!")]] ::UnityEngine::WaitForSeconds*& dyn_IOOEDNKLKDL();
    // Get instance field reference: private System.Boolean DHACKPICOMK
    [[deprecated("Use field access instead!")]] bool& dyn_DHACKPICOMK();
    // Get instance field reference: private System.Single GMGIKAEKNCG
    [[deprecated("Use field access instead!")]] float& dyn_GMGIKAEKNCG();
    // Get instance field reference: private System.Single GEAIKPMMEBI
    [[deprecated("Use field access instead!")]] float& dyn_GEAIKPMMEBI();
    // private System.Collections.IEnumerator LEFLNBAEMMF()
    // Offset: 0x10CC948
    ::System::Collections::IEnumerator* LEFLNBAEMMF();
    // private System.Collections.IEnumerator GFHELGPCJCJ()
    // Offset: 0x10CC9E8
    ::System::Collections::IEnumerator* GFHELGPCJCJ();
    // private System.Void IGIJBKHAMJH()
    // Offset: 0x10CCA5C
    void IGIJBKHAMJH();
    // public System.Void NMGPJLDMMCB()
    // Offset: 0x10CCA88
    void NMGPJLDMMCB();
    // private System.Collections.IEnumerator NBOAGEDLNAJ()
    // Offset: 0x10CCACC
    ::System::Collections::IEnumerator* NBOAGEDLNAJ();
    // private System.Void Start()
    // Offset: 0x10CCB40
    void Start();
    // private System.Void FDPLANCCNPK()
    // Offset: 0x10CCBC4
    void FDPLANCCNPK();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x10CCBD0
    void OACMGPBCPEL();
    // public System.Void BNNHBOMOMNI()
    // Offset: 0x10CCC54
    void BNNHBOMOMNI();
    // private System.Void AKGFEENGKJD()
    // Offset: 0x10CCC98
    void AKGFEENGKJD();
    // private System.Void IAMHAELCKHH()
    // Offset: 0x10CCD1C
    void IAMHAELCKHH();
    // private System.Collections.IEnumerator JKOJPIKLDJC()
    // Offset: 0x10CCD4C
    ::System::Collections::IEnumerator* JKOJPIKLDJC();
    // public System.Void GGGJFHAOAJJ()
    // Offset: 0x10CCDC0
    void GGGJFHAOAJJ();
    // private System.Void FEJNAOBCKJK()
    // Offset: 0x10CCE04
    void FEJNAOBCKJK();
    // public System.Void PlayVfx()
    // Offset: 0x10CCE34
    void PlayVfx();
    // private System.Collections.IEnumerator MOPAPJAEFAP()
    // Offset: 0x10CCE78
    ::System::Collections::IEnumerator* MOPAPJAEFAP();
    // private System.Void NDAOHLAOCDE()
    // Offset: 0x10CCEEC
    void NDAOHLAOCDE();
    // private System.Void AKONOOIDPDA()
    // Offset: 0x10CCF18
    void AKONOOIDPDA();
    // private System.Void AFMOIOAGKLM()
    // Offset: 0x10CCF48
    void AFMOIOAGKLM();
    // public System.Void EJFGMJGGMHH()
    // Offset: 0x10CCF78
    void EJFGMJGGMHH();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x10CCFBC
    void DGJGAFKDIDK();
    // private System.Void OnDestroy()
    // Offset: 0x10CD040
    void OnDestroy();
    // private System.Void Awake()
    // Offset: 0x10CD048
    void Awake();
    // public System.Void KKKKODCEMFH()
    // Offset: 0x10CD078
    void KKKKODCEMFH();
    // public System.Void HAPOBBJAFBF()
    // Offset: 0x10CD0BC
    void HAPOBBJAFBF();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x10CD100
    void HKINNMLBMMG();
    // private System.Void MCNFKFNOPDC()
    // Offset: 0x10CD1FC
    void MCNFKFNOPDC();
    // public System.Void .ctor()
    // Offset: 0x10CD208
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AttackVfxController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::AttackVfxController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AttackVfxController*, creationType>()));
    }
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x10CD218
    void MLGBKBMHHLE();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x10CD29C
    void BDEDGNGMHMN();
    // private System.Collections.IEnumerator IPDLONDADAK()
    // Offset: 0x10CD184
    ::System::Collections::IEnumerator* IPDLONDADAK();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x10CD320
    void GECHLDPLPCC();
    // private System.Void DJIGIJKOPDC()
    // Offset: 0x10CD3A4
    void DJIGIJKOPDC();
    // private System.Void JDJILFHNOGP()
    // Offset: 0x10CD3D4
    void JDJILFHNOGP();
    // private System.Void DAPFFOEMAAM()
    // Offset: 0x10CD400
    void DAPFFOEMAAM();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x10CD430
    void GHLPBOJJHNG();
  }; // MagicalActual.AttackVfxController
  #pragma pack(pop)
  static check_size<sizeof(AttackVfxController), 56 + sizeof(float)> __MagicalActual_AttackVfxControllerSizeCheck;
  static_assert(sizeof(AttackVfxController) == 0x3C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::LEFLNBAEMMF
// Il2CppName: LEFLNBAEMMF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::LEFLNBAEMMF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "LEFLNBAEMMF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::GFHELGPCJCJ
// Il2CppName: GFHELGPCJCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::GFHELGPCJCJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "GFHELGPCJCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::IGIJBKHAMJH
// Il2CppName: IGIJBKHAMJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::IGIJBKHAMJH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "IGIJBKHAMJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::NMGPJLDMMCB
// Il2CppName: NMGPJLDMMCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::NMGPJLDMMCB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "NMGPJLDMMCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::NBOAGEDLNAJ
// Il2CppName: NBOAGEDLNAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::NBOAGEDLNAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "NBOAGEDLNAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::FDPLANCCNPK
// Il2CppName: FDPLANCCNPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::FDPLANCCNPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "FDPLANCCNPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::BNNHBOMOMNI
// Il2CppName: BNNHBOMOMNI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::BNNHBOMOMNI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "BNNHBOMOMNI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::IAMHAELCKHH
// Il2CppName: IAMHAELCKHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::IAMHAELCKHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "IAMHAELCKHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::JKOJPIKLDJC
// Il2CppName: JKOJPIKLDJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::JKOJPIKLDJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "JKOJPIKLDJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::GGGJFHAOAJJ
// Il2CppName: GGGJFHAOAJJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::GGGJFHAOAJJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "GGGJFHAOAJJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::FEJNAOBCKJK
// Il2CppName: FEJNAOBCKJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::FEJNAOBCKJK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "FEJNAOBCKJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::PlayVfx
// Il2CppName: PlayVfx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::PlayVfx)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "PlayVfx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::MOPAPJAEFAP
// Il2CppName: MOPAPJAEFAP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::MOPAPJAEFAP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "MOPAPJAEFAP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::NDAOHLAOCDE
// Il2CppName: NDAOHLAOCDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::NDAOHLAOCDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "NDAOHLAOCDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::AKONOOIDPDA
// Il2CppName: AKONOOIDPDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::AKONOOIDPDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "AKONOOIDPDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::AFMOIOAGKLM
// Il2CppName: AFMOIOAGKLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::AFMOIOAGKLM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "AFMOIOAGKLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::EJFGMJGGMHH
// Il2CppName: EJFGMJGGMHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::EJFGMJGGMHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "EJFGMJGGMHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::KKKKODCEMFH
// Il2CppName: KKKKODCEMFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::KKKKODCEMFH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "KKKKODCEMFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::HAPOBBJAFBF
// Il2CppName: HAPOBBJAFBF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::HAPOBBJAFBF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "HAPOBBJAFBF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::MCNFKFNOPDC
// Il2CppName: MCNFKFNOPDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::MCNFKFNOPDC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "MCNFKFNOPDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::IPDLONDADAK
// Il2CppName: IPDLONDADAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::IPDLONDADAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "IPDLONDADAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::DJIGIJKOPDC
// Il2CppName: DJIGIJKOPDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::DJIGIJKOPDC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "DJIGIJKOPDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::JDJILFHNOGP
// Il2CppName: JDJILFHNOGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::JDJILFHNOGP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "JDJILFHNOGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::DAPFFOEMAAM
// Il2CppName: DAPFFOEMAAM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::DAPFFOEMAAM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "DAPFFOEMAAM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::AttackVfxController::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::AttackVfxController::*)()>(&MagicalActual::AttackVfxController::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::AttackVfxController*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
