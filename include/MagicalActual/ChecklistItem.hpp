// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ChecklistItem
  class ChecklistItem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::ChecklistItem);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::ChecklistItem*, "MagicalActual", "ChecklistItem");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.ChecklistItem
  // [TokenAttribute] Offset: FFFFFFFF
  class ChecklistItem : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 id
    // Size: 0x4
    // Offset: 0x10
    int id;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: id and: description
    char __padding0[0x4] = {};
    // public System.String description
    // Size: 0x8
    // Offset: 0x18
    ::StringW description;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean completed
    // Size: 0x1
    // Offset: 0x20
    bool completed;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: completed and: timesToKill
    char __padding2[0x3] = {};
    // public System.Int32 timesToKill
    // Size: 0x4
    // Offset: 0x24
    int timesToKill;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Single killCount
    // Size: 0x4
    // Offset: 0x28
    float killCount;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public System.Int32 id
    [[deprecated("Use field access instead!")]] int& dyn_id();
    // Get instance field reference: public System.String description
    [[deprecated("Use field access instead!")]] ::StringW& dyn_description();
    // Get instance field reference: public System.Boolean completed
    [[deprecated("Use field access instead!")]] bool& dyn_completed();
    // Get instance field reference: public System.Int32 timesToKill
    [[deprecated("Use field access instead!")]] int& dyn_timesToKill();
    // Get instance field reference: public System.Single killCount
    [[deprecated("Use field access instead!")]] float& dyn_killCount();
    // public System.Void .ctor()
    // Offset: 0x1ADF24C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ChecklistItem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::ChecklistItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ChecklistItem*, creationType>()));
    }
  }; // MagicalActual.ChecklistItem
  #pragma pack(pop)
  static check_size<sizeof(ChecklistItem), 40 + sizeof(float)> __MagicalActual_ChecklistItemSizeCheck;
  static_assert(sizeof(ChecklistItem) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::ChecklistItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
