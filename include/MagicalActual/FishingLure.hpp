// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: MeshFilter
  class MeshFilter;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: FishingLure
  class FishingLure;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::FishingLure);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::FishingLure*, "MagicalActual", "FishingLure");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.FishingLure
  // [TokenAttribute] Offset: FFFFFFFF
  class FishingLure : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.GameObject[] slots
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::UnityEngine::GameObject*> slots;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // private UnityEngine.MeshFilter[] EBOCAFHFMBA
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::MeshFilter*> EBOCAFHFMBA;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::MeshFilter*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.GameObject[] slots
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_slots();
    // Get instance field reference: private UnityEngine.MeshFilter[] EBOCAFHFMBA
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::MeshFilter*>& dyn_EBOCAFHFMBA();
    // private System.Void IAMHAELCKHH()
    // Offset: 0x14FABB4
    void IAMHAELCKHH();
    // private System.Void LMFIENPBFKA()
    // Offset: 0x14FAD80
    void LMFIENPBFKA();
    // public System.Void DBIKAPEJEPL(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FAF4C
    void DBIKAPEJEPL(::ArrayW<int> HHGOMHONJCA);
    // public System.Void JGNEBPPCEIB(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FB17C
    void JGNEBPPCEIB(::ArrayW<int> HHGOMHONJCA);
    // private System.Void KIPDPKEIOEO()
    // Offset: 0x14FB36C
    void KIPDPKEIOEO();
    // public System.Void POBLGMHBDPC(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FB518
    void POBLGMHBDPC(::ArrayW<int> HHGOMHONJCA);
    // public System.Void ENAOEECDPGK(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FB708
    void ENAOEECDPGK(::ArrayW<int> HHGOMHONJCA);
    // private System.Void Awake()
    // Offset: 0x14FB8E8
    void Awake();
    // public System.Void HPBODDEFNDJ(System.String[] HHGOMHONJCA)
    // Offset: 0x14FBAB4
    void HPBODDEFNDJ(::ArrayW<::StringW> HHGOMHONJCA);
    // public System.Void PFCOOOIDMHH(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FBCCC
    void PFCOOOIDMHH(::ArrayW<int> HHGOMHONJCA);
    // public System.Void AAEILGKGGKH(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FBEBC
    void AAEILGKGGKH(::ArrayW<int> HHGOMHONJCA);
    // public System.Void EICCEMDJJEC(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FC0EC
    void EICCEMDJJEC(::ArrayW<int> HHGOMHONJCA);
    // public System.Void KNDCIKMKOEC(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FC31C
    void KNDCIKMKOEC(::ArrayW<int> HHGOMHONJCA);
    // private System.Void JBEJCKDIKIE()
    // Offset: 0x14FC4FC
    void JBEJCKDIKIE();
    // public System.Void KNCDCICDDKE(System.String[] HHGOMHONJCA)
    // Offset: 0x14FC6C8
    void KNCDCICDDKE(::ArrayW<::StringW> HHGOMHONJCA);
    // public System.Void BMPILMAHBMH(System.String[] HHGOMHONJCA)
    // Offset: 0x14FC8E0
    void BMPILMAHBMH(::ArrayW<::StringW> HHGOMHONJCA);
    // public System.Void UpdateLure(System.String[] HHGOMHONJCA)
    // Offset: 0x14F330C
    void UpdateLure(::ArrayW<::StringW> HHGOMHONJCA);
    // public System.Void MHPFKJJKLJF(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FCAF8
    void MHPFKJJKLJF(::ArrayW<int> HHGOMHONJCA);
    // public System.Void OEIFDDCJNBD(System.String[] HHGOMHONJCA)
    // Offset: 0x14FCD28
    void OEIFDDCJNBD(::ArrayW<::StringW> HHGOMHONJCA);
    // public System.Void .ctor()
    // Offset: 0x14FCF40
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FishingLure* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::FishingLure::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FishingLure*, creationType>()));
    }
    // public System.Void IDIOFBBBGMH(System.String[] HHGOMHONJCA)
    // Offset: 0x14FCF48
    void IDIOFBBBGMH(::ArrayW<::StringW> HHGOMHONJCA);
    // public System.Void FMIEEBHCNGJ(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FD11C
    void FMIEEBHCNGJ(::ArrayW<int> HHGOMHONJCA);
    // private System.Void NDAOHLAOCDE()
    // Offset: 0x14FD30C
    void NDAOHLAOCDE();
    // public System.Void UpdateLure(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14F30DC
    void UpdateLure(::ArrayW<int> HHGOMHONJCA);
    // private System.Void CNBJHFMDCOE()
    // Offset: 0x14FD4D8
    void CNBJHFMDCOE();
    // public System.Void EOONMJPGIMD(System.String[] HHGOMHONJCA)
    // Offset: 0x14FD6A4
    void EOONMJPGIMD(::ArrayW<::StringW> HHGOMHONJCA);
    // public System.Void PHBGNONKOAG(System.String[] HHGOMHONJCA)
    // Offset: 0x14FD8BC
    void PHBGNONKOAG(::ArrayW<::StringW> HHGOMHONJCA);
    // public System.Void BHAEDPCINNP(System.String[] HHGOMHONJCA)
    // Offset: 0x14FDA80
    void BHAEDPCINNP(::ArrayW<::StringW> HHGOMHONJCA);
    // public System.Void JLPOMGPNNBB(System.String[] HHGOMHONJCA)
    // Offset: 0x14FDC98
    void JLPOMGPNNBB(::ArrayW<::StringW> HHGOMHONJCA);
    // public System.Void EDDABAPCCDJ(System.String[] HHGOMHONJCA)
    // Offset: 0x14FDE5C
    void EDDABAPCCDJ(::ArrayW<::StringW> HHGOMHONJCA);
    // public System.Void EHJEAPDOJKK(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FE020
    void EHJEAPDOJKK(::ArrayW<int> HHGOMHONJCA);
    // public System.Void EAEFCOOHEFK(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FE210
    void EAEFCOOHEFK(::ArrayW<int> HHGOMHONJCA);
    // private System.Void MIPEOCANMMO()
    // Offset: 0x14FE400
    void MIPEOCANMMO();
    // public System.Void BGDGDGLBLHF(System.Int32[] HHGOMHONJCA)
    // Offset: 0x14FE5A0
    void BGDGDGLBLHF(::ArrayW<int> HHGOMHONJCA);
    // private System.Void DJIGIJKOPDC()
    // Offset: 0x14FE790
    void DJIGIJKOPDC();
  }; // MagicalActual.FishingLure
  #pragma pack(pop)
  static check_size<sizeof(FishingLure), 32 + sizeof(::ArrayW<::UnityEngine::MeshFilter*>)> __MagicalActual_FishingLureSizeCheck;
  static_assert(sizeof(FishingLure) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::FishingLure::IAMHAELCKHH
// Il2CppName: IAMHAELCKHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)()>(&MagicalActual::FishingLure::IAMHAELCKHH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "IAMHAELCKHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::LMFIENPBFKA
// Il2CppName: LMFIENPBFKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)()>(&MagicalActual::FishingLure::LMFIENPBFKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "LMFIENPBFKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::DBIKAPEJEPL
// Il2CppName: DBIKAPEJEPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::DBIKAPEJEPL)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "DBIKAPEJEPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::JGNEBPPCEIB
// Il2CppName: JGNEBPPCEIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::JGNEBPPCEIB)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "JGNEBPPCEIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::KIPDPKEIOEO
// Il2CppName: KIPDPKEIOEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)()>(&MagicalActual::FishingLure::KIPDPKEIOEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "KIPDPKEIOEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::POBLGMHBDPC
// Il2CppName: POBLGMHBDPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::POBLGMHBDPC)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "POBLGMHBDPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::ENAOEECDPGK
// Il2CppName: ENAOEECDPGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::ENAOEECDPGK)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "ENAOEECDPGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)()>(&MagicalActual::FishingLure::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::HPBODDEFNDJ
// Il2CppName: HPBODDEFNDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<::StringW>)>(&MagicalActual::FishingLure::HPBODDEFNDJ)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "HPBODDEFNDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::PFCOOOIDMHH
// Il2CppName: PFCOOOIDMHH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::PFCOOOIDMHH)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "PFCOOOIDMHH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::AAEILGKGGKH
// Il2CppName: AAEILGKGGKH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::AAEILGKGGKH)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "AAEILGKGGKH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::EICCEMDJJEC
// Il2CppName: EICCEMDJJEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::EICCEMDJJEC)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "EICCEMDJJEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::KNDCIKMKOEC
// Il2CppName: KNDCIKMKOEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::KNDCIKMKOEC)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "KNDCIKMKOEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::JBEJCKDIKIE
// Il2CppName: JBEJCKDIKIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)()>(&MagicalActual::FishingLure::JBEJCKDIKIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "JBEJCKDIKIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::KNCDCICDDKE
// Il2CppName: KNCDCICDDKE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<::StringW>)>(&MagicalActual::FishingLure::KNCDCICDDKE)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "KNCDCICDDKE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::BMPILMAHBMH
// Il2CppName: BMPILMAHBMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<::StringW>)>(&MagicalActual::FishingLure::BMPILMAHBMH)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "BMPILMAHBMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::UpdateLure
// Il2CppName: UpdateLure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<::StringW>)>(&MagicalActual::FishingLure::UpdateLure)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "UpdateLure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::MHPFKJJKLJF
// Il2CppName: MHPFKJJKLJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::MHPFKJJKLJF)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "MHPFKJJKLJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::OEIFDDCJNBD
// Il2CppName: OEIFDDCJNBD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<::StringW>)>(&MagicalActual::FishingLure::OEIFDDCJNBD)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "OEIFDDCJNBD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::FishingLure::IDIOFBBBGMH
// Il2CppName: IDIOFBBBGMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<::StringW>)>(&MagicalActual::FishingLure::IDIOFBBBGMH)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "IDIOFBBBGMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::FMIEEBHCNGJ
// Il2CppName: FMIEEBHCNGJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::FMIEEBHCNGJ)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "FMIEEBHCNGJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::NDAOHLAOCDE
// Il2CppName: NDAOHLAOCDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)()>(&MagicalActual::FishingLure::NDAOHLAOCDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "NDAOHLAOCDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::UpdateLure
// Il2CppName: UpdateLure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::UpdateLure)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "UpdateLure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::CNBJHFMDCOE
// Il2CppName: CNBJHFMDCOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)()>(&MagicalActual::FishingLure::CNBJHFMDCOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "CNBJHFMDCOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::EOONMJPGIMD
// Il2CppName: EOONMJPGIMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<::StringW>)>(&MagicalActual::FishingLure::EOONMJPGIMD)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "EOONMJPGIMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::PHBGNONKOAG
// Il2CppName: PHBGNONKOAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<::StringW>)>(&MagicalActual::FishingLure::PHBGNONKOAG)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "PHBGNONKOAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::BHAEDPCINNP
// Il2CppName: BHAEDPCINNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<::StringW>)>(&MagicalActual::FishingLure::BHAEDPCINNP)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "BHAEDPCINNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::JLPOMGPNNBB
// Il2CppName: JLPOMGPNNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<::StringW>)>(&MagicalActual::FishingLure::JLPOMGPNNBB)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "JLPOMGPNNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::EDDABAPCCDJ
// Il2CppName: EDDABAPCCDJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<::StringW>)>(&MagicalActual::FishingLure::EDDABAPCCDJ)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "EDDABAPCCDJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::EHJEAPDOJKK
// Il2CppName: EHJEAPDOJKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::EHJEAPDOJKK)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "EHJEAPDOJKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::EAEFCOOHEFK
// Il2CppName: EAEFCOOHEFK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::EAEFCOOHEFK)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "EAEFCOOHEFK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::MIPEOCANMMO
// Il2CppName: MIPEOCANMMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)()>(&MagicalActual::FishingLure::MIPEOCANMMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "MIPEOCANMMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::BGDGDGLBLHF
// Il2CppName: BGDGDGLBLHF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)(::ArrayW<int>)>(&MagicalActual::FishingLure::BGDGDGLBLHF)> {
  static const MethodInfo* get() {
    static auto* HHGOMHONJCA = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "BGDGDGLBLHF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HHGOMHONJCA});
  }
};
// Writing MetadataGetter for method: MagicalActual::FishingLure::DJIGIJKOPDC
// Il2CppName: DJIGIJKOPDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::FishingLure::*)()>(&MagicalActual::FishingLure::DJIGIJKOPDC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::FishingLure*), "DJIGIJKOPDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
