// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: CodeStage.AntiCheat.ObscuredTypes.ObFlt
#include "CodeStage/AntiCheat/ObscuredTypes/ObFlt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerCharacter
  class PlayerCharacter;
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: PlayerPet
  class PlayerPet;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Coroutine
  class Coroutine;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SuperTextMesh
  class SuperTextMesh;
  // Forward declaring type: OrbusTrackedController
  class OrbusTrackedController;
  // Forward declaring type: ClickedEventHandler
  class ClickedEventHandler;
  // Forward declaring type: ClickedEventArgs
  struct ClickedEventArgs;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: BinaryWriter
  class BinaryWriter;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: DragonPilot
  class DragonPilot;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::DragonPilot);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::DragonPilot*, "MagicalActual", "DragonPilot");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x23C
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.DragonPilot
  // [TokenAttribute] Offset: FFFFFFFF
  class DragonPilot : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::DragonPilot::$$c
    class $$c;
    // Nested type: ::MagicalActual::DragonPilot::$DoLoseAnimation$d__65
    class $DoLoseAnimation$d__65;
    // Nested type: ::MagicalActual::DragonPilot::$DoCountDown$d__66
    class $DoCountDown$d__66;
    public:
    // private MagicalActual.PlayerCharacter HCFELEODBLD
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::PlayerCharacter* HCFELEODBLD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerCharacter*) == 0x8);
    // private MagicalActual.PlayerAvatar EENJNFDNJBD
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::PlayerAvatar* EENJNFDNJBD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerAvatar*) == 0x8);
    // private System.Boolean HNFCLAFDJBD
    // Size: 0x1
    // Offset: 0x28
    bool HNFCLAFDJBD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HNFCLAFDJBD and: IJJGNKLFGJN
    char __padding2[0x7] = {};
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x30
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public UnityEngine.GameObject targetPositionPrefab
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* targetPositionPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject raceTimerPrefab
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* raceTimerPrefab;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.UInt16 FNOCLFOKDFG
    // Size: 0x2
    // Offset: 0x48
    uint16_t FNOCLFOKDFG;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // Padding between fields: FNOCLFOKDFG and: HOKKHECIAAM
    char __padding6[0x2] = {};
    // private UnityEngine.Vector3 HOKKHECIAAM
    // Size: 0xC
    // Offset: 0x4C
    ::UnityEngine::Vector3 HOKKHECIAAM;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion EEMOFBPKBBA
    // Size: 0x10
    // Offset: 0x58
    ::UnityEngine::Quaternion EEMOFBPKBBA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private System.Boolean JLALEBBMHGP
    // Size: 0x1
    // Offset: 0x68
    bool JLALEBBMHGP;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: JLALEBBMHGP and: LIGIFCLLNHC
    char __padding9[0x7] = {};
    // private MagicalActual.PlayerPet LIGIFCLLNHC
    // Size: 0x8
    // Offset: 0x70
    ::MagicalActual::PlayerPet* LIGIFCLLNHC;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerPet*) == 0x8);
    // private UnityEngine.GameObject JBAPNLCMIHG
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::GameObject* JBAPNLCMIHG;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject KCBLHEDGPMF
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::GameObject* KCBLHEDGPMF;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private SuperTextMesh CBJFDNGEDJB
    // Size: 0x8
    // Offset: 0x88
    ::GlobalNamespace::SuperTextMesh* CBJFDNGEDJB;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SuperTextMesh*) == 0x8);
    // private UnityEngine.UI.Image ANGOGEINJAM
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::UI::Image* ANGOGEINJAM;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private System.Boolean FCJEBJONIFI
    // Size: 0x1
    // Offset: 0x98
    bool FCJEBJONIFI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean NEHNPLCFCCO
    // Size: 0x1
    // Offset: 0x99
    bool NEHNPLCFCCO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: NEHNPLCFCCO and: EPPIPLHANGD
    char __padding16[0x6] = {};
    // private UnityEngine.RaycastHit[] EPPIPLHANGD
    // Size: 0x8
    // Offset: 0xA0
    ::ArrayW<::UnityEngine::RaycastHit> EPPIPLHANGD;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::RaycastHit>) == 0x8);
    // private UnityEngine.Collider[] GJMNJANLAGG
    // Size: 0x8
    // Offset: 0xA8
    ::ArrayW<::UnityEngine::Collider*> GJMNJANLAGG;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Collider*>) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0xB0
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Single LOLLNPPPPIF
    // Size: 0x4
    // Offset: 0xB8
    float LOLLNPPPPIF;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: LOLLNPPPPIF and: LNFLDMGHLCK
    char __padding20[0x4] = {};
    // private OrbusTrackedController LNFLDMGHLCK
    // Size: 0x8
    // Offset: 0xC0
    ::GlobalNamespace::OrbusTrackedController* LNFLDMGHLCK;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OrbusTrackedController*) == 0x8);
    // private OrbusTrackedController EAKICLLKLCF
    // Size: 0x8
    // Offset: 0xC8
    ::GlobalNamespace::OrbusTrackedController* EAKICLLKLCF;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::OrbusTrackedController*) == 0x8);
    // private ClickedEventHandler ABABKJEGKMN
    // Size: 0x8
    // Offset: 0xD0
    ::GlobalNamespace::ClickedEventHandler* ABABKJEGKMN;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private ClickedEventHandler KNGDDDNBLGO
    // Size: 0x8
    // Offset: 0xD8
    ::GlobalNamespace::ClickedEventHandler* KNGDDDNBLGO;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ClickedEventHandler*) == 0x8);
    // private System.Object GPDKPJPEGDF
    // Size: 0x8
    // Offset: 0xE0
    ::Il2CppObject* GPDKPJPEGDF;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.Single FIEFLFPKHIH
    // Size: 0x4
    // Offset: 0xE8
    float FIEFLFPKHIH;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 BNGPIAPKBLN
    // Size: 0xC
    // Offset: 0xEC
    ::UnityEngine::Vector3 BNGPIAPKBLN;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion GAFPPEHJOEN
    // Size: 0x10
    // Offset: 0xF8
    ::UnityEngine::Quaternion GAFPPEHJOEN;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private UnityEngine.Vector3 CJMMBFKFGKP
    // Size: 0xC
    // Offset: 0x108
    ::UnityEngine::Vector3 CJMMBFKFGKP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion IJLHLANBMNP
    // Size: 0x10
    // Offset: 0x114
    ::UnityEngine::Quaternion IJLHLANBMNP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private System.Single NAICCNPLODB
    // Size: 0x4
    // Offset: 0x124
    float NAICCNPLODB;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single LKFMHJEMBAD
    // Size: 0x4
    // Offset: 0x128
    float LKFMHJEMBAD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single JIEEDGGLNPF
    // Size: 0x4
    // Offset: 0x12C
    float JIEEDGGLNPF;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single HFFHOFHFDJC
    // Size: 0x4
    // Offset: 0x130
    float HFFHOFHFDJC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean MLJNJDFDJLO
    // Size: 0x1
    // Offset: 0x134
    bool MLJNJDFDJLO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: MLJNJDFDJLO and: CNJCJKFNCEF
    char __padding35[0x3] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt CNJCJKFNCEF
    // Size: 0x19
    // Offset: 0x138
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt CNJCJKFNCEF;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: CNJCJKFNCEF and: EPMALIPDHFI
    char __padding36[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt EPMALIPDHFI
    // Size: 0x19
    // Offset: 0x158
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt EPMALIPDHFI;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: EPMALIPDHFI and: JMEFIOKGBCN
    char __padding37[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt JMEFIOKGBCN
    // Size: 0x19
    // Offset: 0x178
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt JMEFIOKGBCN;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: JMEFIOKGBCN and: NOECBELMCDD
    char __padding38[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt NOECBELMCDD
    // Size: 0x19
    // Offset: 0x198
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt NOECBELMCDD;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: NOECBELMCDD and: OHPNLJFLPKB
    char __padding39[0x7] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt OHPNLJFLPKB
    // Size: 0x19
    // Offset: 0x1B8
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt OHPNLJFLPKB;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: OHPNLJFLPKB and: JDFNALELBDG
    char __padding40[0x7] = {};
    // private System.Single JDFNALELBDG
    // Size: 0x4
    // Offset: 0x1D8
    float JDFNALELBDG;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: JDFNALELBDG and: GMPJAEPKLKG
    char __padding41[0x4] = {};
    // private CodeStage.AntiCheat.ObscuredTypes.ObFlt GMPJAEPKLKG
    // Size: 0x19
    // Offset: 0x1E0
    ::CodeStage::AntiCheat::ObscuredTypes::ObFlt GMPJAEPKLKG;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObFlt) == 0x19);
    // Padding between fields: GMPJAEPKLKG and: EODEKFABMIA
    char __padding42[0x7] = {};
    // private System.String EODEKFABMIA
    // Size: 0x8
    // Offset: 0x200
    ::StringW EODEKFABMIA;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.GameObject vfxLoopPickup
    // Size: 0x8
    // Offset: 0x208
    ::UnityEngine::GameObject* vfxLoopPickup;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxWhirlwindPickup
    // Size: 0x8
    // Offset: 0x210
    ::UnityEngine::GameObject* vfxWhirlwindPickup;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxFinish
    // Size: 0x8
    // Offset: 0x218
    ::UnityEngine::GameObject* vfxFinish;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Boolean MINKOPDEIAB
    // Size: 0x1
    // Offset: 0x220
    bool MINKOPDEIAB;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean EHJOPINNGII
    // Size: 0x1
    // Offset: 0x221
    bool EHJOPINNGII;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean EICNJCGBFIC
    // Size: 0x1
    // Offset: 0x222
    bool EICNJCGBFIC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: EICNJCGBFIC and: FHICMMCONAE
    char __padding49[0x5] = {};
    // private UnityEngine.Coroutine FHICMMCONAE
    // Size: 0x8
    // Offset: 0x228
    ::UnityEngine::Coroutine* FHICMMCONAE;
    // Field size check
    static_assert(sizeof(::UnityEngine::Coroutine*) == 0x8);
    // private UnityEngine.Vector3 MIHLINCIBGF
    // Size: 0xC
    // Offset: 0x230
    ::UnityEngine::Vector3 MIHLINCIBGF;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.PlayerCharacter HCFELEODBLD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerCharacter*& dyn_HCFELEODBLD();
    // Get instance field reference: private MagicalActual.PlayerAvatar EENJNFDNJBD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerAvatar*& dyn_EENJNFDNJBD();
    // Get instance field reference: private System.Boolean HNFCLAFDJBD
    [[deprecated("Use field access instead!")]] bool& dyn_HNFCLAFDJBD();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public UnityEngine.GameObject targetPositionPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_targetPositionPrefab();
    // Get instance field reference: public UnityEngine.GameObject raceTimerPrefab
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_raceTimerPrefab();
    // Get instance field reference: private System.UInt16 FNOCLFOKDFG
    [[deprecated("Use field access instead!")]] uint16_t& dyn_FNOCLFOKDFG();
    // Get instance field reference: private UnityEngine.Vector3 HOKKHECIAAM
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_HOKKHECIAAM();
    // Get instance field reference: private UnityEngine.Quaternion EEMOFBPKBBA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_EEMOFBPKBBA();
    // Get instance field reference: private System.Boolean JLALEBBMHGP
    [[deprecated("Use field access instead!")]] bool& dyn_JLALEBBMHGP();
    // Get instance field reference: private MagicalActual.PlayerPet LIGIFCLLNHC
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerPet*& dyn_LIGIFCLLNHC();
    // Get instance field reference: private UnityEngine.GameObject JBAPNLCMIHG
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_JBAPNLCMIHG();
    // Get instance field reference: private UnityEngine.GameObject KCBLHEDGPMF
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_KCBLHEDGPMF();
    // Get instance field reference: private SuperTextMesh CBJFDNGEDJB
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& dyn_CBJFDNGEDJB();
    // Get instance field reference: private UnityEngine.UI.Image ANGOGEINJAM
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_ANGOGEINJAM();
    // Get instance field reference: private System.Boolean FCJEBJONIFI
    [[deprecated("Use field access instead!")]] bool& dyn_FCJEBJONIFI();
    // Get instance field reference: private System.Boolean NEHNPLCFCCO
    [[deprecated("Use field access instead!")]] bool& dyn_NEHNPLCFCCO();
    // Get instance field reference: private UnityEngine.RaycastHit[] EPPIPLHANGD
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& dyn_EPPIPLHANGD();
    // Get instance field reference: private UnityEngine.Collider[] GJMNJANLAGG
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& dyn_GJMNJANLAGG();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private System.Single LOLLNPPPPIF
    [[deprecated("Use field access instead!")]] float& dyn_LOLLNPPPPIF();
    // Get instance field reference: private OrbusTrackedController LNFLDMGHLCK
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OrbusTrackedController*& dyn_LNFLDMGHLCK();
    // Get instance field reference: private OrbusTrackedController EAKICLLKLCF
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::OrbusTrackedController*& dyn_EAKICLLKLCF();
    // Get instance field reference: private ClickedEventHandler ABABKJEGKMN
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_ABABKJEGKMN();
    // Get instance field reference: private ClickedEventHandler KNGDDDNBLGO
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ClickedEventHandler*& dyn_KNGDDDNBLGO();
    // Get instance field reference: private System.Object GPDKPJPEGDF
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_GPDKPJPEGDF();
    // Get instance field reference: private System.Single FIEFLFPKHIH
    [[deprecated("Use field access instead!")]] float& dyn_FIEFLFPKHIH();
    // Get instance field reference: private UnityEngine.Vector3 BNGPIAPKBLN
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_BNGPIAPKBLN();
    // Get instance field reference: private UnityEngine.Quaternion GAFPPEHJOEN
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_GAFPPEHJOEN();
    // Get instance field reference: private UnityEngine.Vector3 CJMMBFKFGKP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_CJMMBFKFGKP();
    // Get instance field reference: private UnityEngine.Quaternion IJLHLANBMNP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_IJLHLANBMNP();
    // Get instance field reference: private System.Single NAICCNPLODB
    [[deprecated("Use field access instead!")]] float& dyn_NAICCNPLODB();
    // Get instance field reference: private System.Single LKFMHJEMBAD
    [[deprecated("Use field access instead!")]] float& dyn_LKFMHJEMBAD();
    // Get instance field reference: private System.Single JIEEDGGLNPF
    [[deprecated("Use field access instead!")]] float& dyn_JIEEDGGLNPF();
    // Get instance field reference: private System.Single HFFHOFHFDJC
    [[deprecated("Use field access instead!")]] float& dyn_HFFHOFHFDJC();
    // Get instance field reference: private System.Boolean MLJNJDFDJLO
    [[deprecated("Use field access instead!")]] bool& dyn_MLJNJDFDJLO();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt CNJCJKFNCEF
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_CNJCJKFNCEF();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt EPMALIPDHFI
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_EPMALIPDHFI();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt JMEFIOKGBCN
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_JMEFIOKGBCN();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt NOECBELMCDD
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_NOECBELMCDD();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt OHPNLJFLPKB
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_OHPNLJFLPKB();
    // Get instance field reference: private System.Single JDFNALELBDG
    [[deprecated("Use field access instead!")]] float& dyn_JDFNALELBDG();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObFlt GMPJAEPKLKG
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& dyn_GMPJAEPKLKG();
    // Get instance field reference: private System.String EODEKFABMIA
    [[deprecated("Use field access instead!")]] ::StringW& dyn_EODEKFABMIA();
    // Get instance field reference: public UnityEngine.GameObject vfxLoopPickup
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxLoopPickup();
    // Get instance field reference: public UnityEngine.GameObject vfxWhirlwindPickup
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxWhirlwindPickup();
    // Get instance field reference: public UnityEngine.GameObject vfxFinish
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxFinish();
    // Get instance field reference: private System.Boolean MINKOPDEIAB
    [[deprecated("Use field access instead!")]] bool& dyn_MINKOPDEIAB();
    // Get instance field reference: private System.Boolean EHJOPINNGII
    [[deprecated("Use field access instead!")]] bool& dyn_EHJOPINNGII();
    // Get instance field reference: private System.Boolean EICNJCGBFIC
    [[deprecated("Use field access instead!")]] bool& dyn_EICNJCGBFIC();
    // Get instance field reference: private UnityEngine.Coroutine FHICMMCONAE
    [[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& dyn_FHICMMCONAE();
    // Get instance field reference: private UnityEngine.Vector3 MIHLINCIBGF
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_MIHLINCIBGF();
    // private System.Void HAGKDEDCENG()
    // Offset: 0x1338C18
    void HAGKDEDCENG();
    // private System.Void PHHIJICPLJO(System.Object OMLPNCLFFMJ)
    // Offset: 0x133941C
    void PHHIJICPLJO(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BOKKGOMJGKG(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x13394C8
    void BOKKGOMJGKG(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void KNDAMNAFBEO()
    // Offset: 0x1339714
    void KNDAMNAFBEO();
    // private System.Void GNFJCNENPPC()
    // Offset: 0x1339A1C
    void GNFJCNENPPC();
    // private System.Void KKHKKJBOCHM(System.Object OMLPNCLFFMJ)
    // Offset: 0x133A0F8
    void KKHKKJBOCHM(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GIPIHKMFCPJ()
    // Offset: 0x133A28C
    void GIPIHKMFCPJ();
    // private System.Void PICOODMMKPN(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x133A958
    void PICOODMMKPN(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void NPOFAMMPICE(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x133A974
    void NPOFAMMPICE(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void OHDALGMJHMO()
    // Offset: 0x133A9D0
    void OHDALGMJHMO();
    // private System.Void GPHMJHGMCPI()
    // Offset: 0x133AE18
    void GPHMJHGMCPI();
    // private System.Void DFJJMHBDCHP()
    // Offset: 0x133AED4
    void DFJJMHBDCHP();
    // private System.Void MJEOHIJNECG(System.Collections.ArrayList DAAGOHEFMBD)
    // Offset: 0x133B038
    void MJEOHIJNECG(::System::Collections::ArrayList* DAAGOHEFMBD);
    // private System.Void Update()
    // Offset: 0x133B13C
    void Update();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x133C3E0
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void AKMCFNLCJKD()
    // Offset: 0x133C7F8
    void AKMCFNLCJKD();
    // private System.Void FLKIDJBEEHI()
    // Offset: 0x13398E8
    void FLKIDJBEEHI();
    // private System.Void BIJBOLKDGOG(System.Object OMLPNCLFFMJ)
    // Offset: 0x133D000
    void BIJBOLKDGOG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void PGKIFKNNNJD()
    // Offset: 0x133B784
    void PGKIFKNNNJD();
    // private System.Void HGPMAEKLGPP(System.Object OMLPNCLFFMJ)
    // Offset: 0x133D084
    void HGPMAEKLGPP(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x133D0FC
    void BDEDGNGMHMN();
    // private System.Void PDNGOAGLBKK(System.Object OMLPNCLFFMJ)
    // Offset: 0x133D100
    void PDNGOAGLBKK(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void GMHFGMIBMHD(System.Collections.ArrayList DAAGOHEFMBD)
    // Offset: 0x133D1D8
    void GMHFGMIBMHD(::System::Collections::ArrayList* DAAGOHEFMBD);
    // private System.Void OnDisable()
    // Offset: 0x133D528
    void OnDisable();
    // private System.Void AKGABDEPMNH(System.Object OMLPNCLFFMJ)
    // Offset: 0x133D5E0
    void AKGABDEPMNH(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BDIGJGOEOCD(System.Object OMLPNCLFFMJ)
    // Offset: 0x133D6B8
    void BDIGJGOEOCD(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void BKDHMKNNOEH(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x133D740
    void BKDHMKNNOEH(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void HKNMKEICGFB()
    // Offset: 0x133D758
    void HKNMKEICGFB();
    // private System.Void NDPEIOHIGKM()
    // Offset: 0x133DE34
    void NDPEIOHIGKM();
    // public System.Void .ctor()
    // Offset: 0x133DF74
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DragonPilot* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::DragonPilot::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DragonPilot*, creationType>()));
    }
    // private System.Void JPLJDIMMFBA(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x133E1B4
    void JPLJDIMMFBA(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void NCHCJOHDINK()
    // Offset: 0x133E400
    void NCHCJOHDINK();
    // private System.Void FixedUpdate()
    // Offset: 0x133E510
    void FixedUpdate();
    // private System.Void GPJHELENEGB()
    // Offset: 0x133EFC8
    void GPJHELENEGB();
    // private System.Void Awake()
    // Offset: 0x133F6A0
    void Awake();
    // protected System.Void MBHNCKMLFOG()
    // Offset: 0x133AD6C
    void MBHNCKMLFOG();
    // private System.Void DCIFCDMKJCM()
    // Offset: 0x133F86C
    void DCIFCDMKJCM();
    // private System.Void PHAKALDNOOK()
    // Offset: 0x133F8B0
    void PHAKALDNOOK();
    // private System.Void EGBMOBMDBEI(System.Object OMLPNCLFFMJ)
    // Offset: 0x133FA7C
    void EGBMOBMDBEI(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LOLJJOKMCGO(System.Collections.ArrayList DAAGOHEFMBD)
    // Offset: 0x133FC10
    void LOLJJOKMCGO(::System::Collections::ArrayList* DAAGOHEFMBD);
    // private System.Void HBMBIMAPLMO(System.IO.BinaryWriter FFJEENIEPJH)
    // Offset: 0x133FC98
    void HBMBIMAPLMO(::System::IO::BinaryWriter* FFJEENIEPJH);
    // private System.Void AKGFEENGKJD()
    // Offset: 0x133FEE4
    void AKGFEENGKJD();
    // private System.Collections.IEnumerator KFGBGMCOHIO(System.String PHCECKJBHGP)
    // Offset: 0x133FEE8
    ::System::Collections::IEnumerator* KFGBGMCOHIO(::StringW PHCECKJBHGP);
    // private System.Void Start()
    // Offset: 0x133FFAC
    void Start();
    // public System.Void orbusNetCleanup(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x133FFB0
    void orbusNetCleanup(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void NLCPDJMIELA(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x133FFE8
    void NLCPDJMIELA(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void AECEKBHDPMG()
    // Offset: 0x1340050
    void AECEKBHDPMG();
    // private System.Void CJPFIMEOLCK(System.Object OMLPNCLFFMJ)
    // Offset: 0x134019C
    void CJPFIMEOLCK(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void LFDHDBDPFFA(System.Object OMLPNCLFFMJ)
    // Offset: 0x1340228
    void LFDHDBDPFFA(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void NDAOHLAOCDE()
    // Offset: 0x13403BC
    void NDAOHLAOCDE();
    // private System.Void INJLFNLKIPE(System.Object OMLPNCLFFMJ)
    // Offset: 0x1340584
    void INJLFNLKIPE(::Il2CppObject* OMLPNCLFFMJ);
    // protected System.Void HDKFGBFANIJ()
    // Offset: 0x13392F4
    void HDKFGBFANIJ();
    // private System.Void NPDPJGJAGPK()
    // Offset: 0x133EDF4
    void NPDPJGJAGPK();
    // public System.Void IOOBCJAJKCJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1340644
    void IOOBCJAJKCJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void MKBGIBLNFBG()
    // Offset: 0x133BC54
    void MKBGIBLNFBG();
    // private System.Void KIPHINEBDFG(System.Collections.ArrayList DAAGOHEFMBD)
    // Offset: 0x1340A64
    void KIPHINEBDFG(::System::Collections::ArrayList* DAAGOHEFMBD);
    // protected System.Void EBBBAEKOECO()
    // Offset: 0x1340B34
    void EBBBAEKOECO();
    // private System.Void EHLCGJDEPAO(System.Byte PNCGKMCNHAD)
    // Offset: 0x133D260
    void EHLCGJDEPAO(uint8_t PNCGKMCNHAD);
    // private System.Void JDJHPOKHGGP()
    // Offset: 0x1340BE0
    void JDJHPOKHGGP();
    // private System.Void BIJJICCEJOJ()
    // Offset: 0x133BB44
    void BIJJICCEJOJ();
    // private System.Void JHBEGECHFKF()
    // Offset: 0x1340D3C
    void JHBEGECHFKF();
    // private System.Void ENJDJJCABOC()
    // Offset: 0x1340EE8
    void ENJDJJCABOC();
    // private System.Void BODPDNMNNLG(System.Object OMLPNCLFFMJ)
    // Offset: 0x1341338
    void BODPDNMNNLG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void OCGMKHENKFD(System.Object FOIEAOKBGLM, ClickedEventArgs LMKCFANDAKH)
    // Offset: 0x1341410
    void OCGMKHENKFD(::Il2CppObject* FOIEAOKBGLM, ::GlobalNamespace::ClickedEventArgs LMKCFANDAKH);
    // private System.Void OPODGBNGLAJ(System.Collections.ArrayList DAAGOHEFMBD)
    // Offset: 0x1341428
    void OPODGBNGLAJ(::System::Collections::ArrayList* DAAGOHEFMBD);
    // private System.Void AFIACGLCIPB()
    // Offset: 0x13414B0
    void AFIACGLCIPB();
    // private System.Void OOBECBOJDED(System.String PHCECKJBHGP)
    // Offset: 0x133B0FC
    void OOBECBOJDED(::StringW PHCECKJBHGP);
    // private System.Collections.IEnumerator CEGHBBHCEGE(System.Single OHOGONAFMPC)
    // Offset: 0x13414B4
    ::System::Collections::IEnumerator* CEGHBBHCEGE(float OHOGONAFMPC);
    // private System.Void LateUpdate()
    // Offset: 0x1341578
    void LateUpdate();
  }; // MagicalActual.DragonPilot
  #pragma pack(pop)
  static check_size<sizeof(DragonPilot), 560 + sizeof(::UnityEngine::Vector3)> __MagicalActual_DragonPilotSizeCheck;
  static_assert(sizeof(DragonPilot) == 0x23C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::DragonPilot::HAGKDEDCENG
// Il2CppName: HAGKDEDCENG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::HAGKDEDCENG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "HAGKDEDCENG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::PHHIJICPLJO
// Il2CppName: PHHIJICPLJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::PHHIJICPLJO)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "PHHIJICPLJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::BOKKGOMJGKG
// Il2CppName: BOKKGOMJGKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::System::IO::BinaryWriter*)>(&MagicalActual::DragonPilot::BOKKGOMJGKG)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "BOKKGOMJGKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::KNDAMNAFBEO
// Il2CppName: KNDAMNAFBEO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::KNDAMNAFBEO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "KNDAMNAFBEO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::GNFJCNENPPC
// Il2CppName: GNFJCNENPPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::GNFJCNENPPC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "GNFJCNENPPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::KKHKKJBOCHM
// Il2CppName: KKHKKJBOCHM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::KKHKKJBOCHM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "KKHKKJBOCHM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::GIPIHKMFCPJ
// Il2CppName: GIPIHKMFCPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::GIPIHKMFCPJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "GIPIHKMFCPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::PICOODMMKPN
// Il2CppName: PICOODMMKPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::DragonPilot::PICOODMMKPN)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "PICOODMMKPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::NPOFAMMPICE
// Il2CppName: NPOFAMMPICE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::DragonPilot::NPOFAMMPICE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "NPOFAMMPICE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::OHDALGMJHMO
// Il2CppName: OHDALGMJHMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::OHDALGMJHMO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "OHDALGMJHMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::GPHMJHGMCPI
// Il2CppName: GPHMJHGMCPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::GPHMJHGMCPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "GPHMJHGMCPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::DFJJMHBDCHP
// Il2CppName: DFJJMHBDCHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::DFJJMHBDCHP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "DFJJMHBDCHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::MJEOHIJNECG
// Il2CppName: MJEOHIJNECG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::System::Collections::ArrayList*)>(&MagicalActual::DragonPilot::MJEOHIJNECG)> {
  static const MethodInfo* get() {
    static auto* DAAGOHEFMBD = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "MJEOHIJNECG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DAAGOHEFMBD});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DragonPilot::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::AKMCFNLCJKD
// Il2CppName: AKMCFNLCJKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::AKMCFNLCJKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "AKMCFNLCJKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::FLKIDJBEEHI
// Il2CppName: FLKIDJBEEHI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::FLKIDJBEEHI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "FLKIDJBEEHI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::BIJBOLKDGOG
// Il2CppName: BIJBOLKDGOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::BIJBOLKDGOG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "BIJBOLKDGOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::PGKIFKNNNJD
// Il2CppName: PGKIFKNNNJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::PGKIFKNNNJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "PGKIFKNNNJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::HGPMAEKLGPP
// Il2CppName: HGPMAEKLGPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::HGPMAEKLGPP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "HGPMAEKLGPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::PDNGOAGLBKK
// Il2CppName: PDNGOAGLBKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::PDNGOAGLBKK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "PDNGOAGLBKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::GMHFGMIBMHD
// Il2CppName: GMHFGMIBMHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::System::Collections::ArrayList*)>(&MagicalActual::DragonPilot::GMHFGMIBMHD)> {
  static const MethodInfo* get() {
    static auto* DAAGOHEFMBD = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "GMHFGMIBMHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DAAGOHEFMBD});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::AKGABDEPMNH
// Il2CppName: AKGABDEPMNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::AKGABDEPMNH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "AKGABDEPMNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::BDIGJGOEOCD
// Il2CppName: BDIGJGOEOCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::BDIGJGOEOCD)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "BDIGJGOEOCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::BKDHMKNNOEH
// Il2CppName: BKDHMKNNOEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::DragonPilot::BKDHMKNNOEH)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "BKDHMKNNOEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::HKNMKEICGFB
// Il2CppName: HKNMKEICGFB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::HKNMKEICGFB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "HKNMKEICGFB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::NDPEIOHIGKM
// Il2CppName: NDPEIOHIGKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::NDPEIOHIGKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "NDPEIOHIGKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::DragonPilot::JPLJDIMMFBA
// Il2CppName: JPLJDIMMFBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::System::IO::BinaryWriter*)>(&MagicalActual::DragonPilot::JPLJDIMMFBA)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "JPLJDIMMFBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::NCHCJOHDINK
// Il2CppName: NCHCJOHDINK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::NCHCJOHDINK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "NCHCJOHDINK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::GPJHELENEGB
// Il2CppName: GPJHELENEGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::GPJHELENEGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "GPJHELENEGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::MBHNCKMLFOG
// Il2CppName: MBHNCKMLFOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::MBHNCKMLFOG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "MBHNCKMLFOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::DCIFCDMKJCM
// Il2CppName: DCIFCDMKJCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::DCIFCDMKJCM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "DCIFCDMKJCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::PHAKALDNOOK
// Il2CppName: PHAKALDNOOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::PHAKALDNOOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "PHAKALDNOOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::EGBMOBMDBEI
// Il2CppName: EGBMOBMDBEI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::EGBMOBMDBEI)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "EGBMOBMDBEI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::LOLJJOKMCGO
// Il2CppName: LOLJJOKMCGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::System::Collections::ArrayList*)>(&MagicalActual::DragonPilot::LOLJJOKMCGO)> {
  static const MethodInfo* get() {
    static auto* DAAGOHEFMBD = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "LOLJJOKMCGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DAAGOHEFMBD});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::HBMBIMAPLMO
// Il2CppName: HBMBIMAPLMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::System::IO::BinaryWriter*)>(&MagicalActual::DragonPilot::HBMBIMAPLMO)> {
  static const MethodInfo* get() {
    static auto* FFJEENIEPJH = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "HBMBIMAPLMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FFJEENIEPJH});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::KFGBGMCOHIO
// Il2CppName: KFGBGMCOHIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::DragonPilot::*)(::StringW)>(&MagicalActual::DragonPilot::KFGBGMCOHIO)> {
  static const MethodInfo* get() {
    static auto* PHCECKJBHGP = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "KFGBGMCOHIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PHCECKJBHGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::orbusNetCleanup
// Il2CppName: orbusNetCleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DragonPilot::orbusNetCleanup)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "orbusNetCleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::NLCPDJMIELA
// Il2CppName: NLCPDJMIELA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::DragonPilot::NLCPDJMIELA)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "NLCPDJMIELA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::AECEKBHDPMG
// Il2CppName: AECEKBHDPMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::AECEKBHDPMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "AECEKBHDPMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::CJPFIMEOLCK
// Il2CppName: CJPFIMEOLCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::CJPFIMEOLCK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "CJPFIMEOLCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::LFDHDBDPFFA
// Il2CppName: LFDHDBDPFFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::LFDHDBDPFFA)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "LFDHDBDPFFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::NDAOHLAOCDE
// Il2CppName: NDAOHLAOCDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::NDAOHLAOCDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "NDAOHLAOCDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::INJLFNLKIPE
// Il2CppName: INJLFNLKIPE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::INJLFNLKIPE)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "INJLFNLKIPE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::HDKFGBFANIJ
// Il2CppName: HDKFGBFANIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::HDKFGBFANIJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "HDKFGBFANIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::NPDPJGJAGPK
// Il2CppName: NPDPJGJAGPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::NPDPJGJAGPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "NPDPJGJAGPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::IOOBCJAJKCJ
// Il2CppName: IOOBCJAJKCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DragonPilot::IOOBCJAJKCJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "IOOBCJAJKCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::MKBGIBLNFBG
// Il2CppName: MKBGIBLNFBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::MKBGIBLNFBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "MKBGIBLNFBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::KIPHINEBDFG
// Il2CppName: KIPHINEBDFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::System::Collections::ArrayList*)>(&MagicalActual::DragonPilot::KIPHINEBDFG)> {
  static const MethodInfo* get() {
    static auto* DAAGOHEFMBD = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "KIPHINEBDFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DAAGOHEFMBD});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::EBBBAEKOECO
// Il2CppName: EBBBAEKOECO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::EBBBAEKOECO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "EBBBAEKOECO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::EHLCGJDEPAO
// Il2CppName: EHLCGJDEPAO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(uint8_t)>(&MagicalActual::DragonPilot::EHLCGJDEPAO)> {
  static const MethodInfo* get() {
    static auto* PNCGKMCNHAD = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "EHLCGJDEPAO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PNCGKMCNHAD});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::JDJHPOKHGGP
// Il2CppName: JDJHPOKHGGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::JDJHPOKHGGP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "JDJHPOKHGGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::BIJJICCEJOJ
// Il2CppName: BIJJICCEJOJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::BIJJICCEJOJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "BIJJICCEJOJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::JHBEGECHFKF
// Il2CppName: JHBEGECHFKF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::JHBEGECHFKF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "JHBEGECHFKF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::ENJDJJCABOC
// Il2CppName: ENJDJJCABOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::ENJDJJCABOC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "ENJDJJCABOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::BODPDNMNNLG
// Il2CppName: BODPDNMNNLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*)>(&MagicalActual::DragonPilot::BODPDNMNNLG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "BODPDNMNNLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::OCGMKHENKFD
// Il2CppName: OCGMKHENKFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::Il2CppObject*, ::GlobalNamespace::ClickedEventArgs)>(&MagicalActual::DragonPilot::OCGMKHENKFD)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* LMKCFANDAKH = &::il2cpp_utils::GetClassFromName("", "ClickedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "OCGMKHENKFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM, LMKCFANDAKH});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::OPODGBNGLAJ
// Il2CppName: OPODGBNGLAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::System::Collections::ArrayList*)>(&MagicalActual::DragonPilot::OPODGBNGLAJ)> {
  static const MethodInfo* get() {
    static auto* DAAGOHEFMBD = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "OPODGBNGLAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DAAGOHEFMBD});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::OOBECBOJDED
// Il2CppName: OOBECBOJDED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)(::StringW)>(&MagicalActual::DragonPilot::OOBECBOJDED)> {
  static const MethodInfo* get() {
    static auto* PHCECKJBHGP = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "OOBECBOJDED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PHCECKJBHGP});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::CEGHBBHCEGE
// Il2CppName: CEGHBBHCEGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::DragonPilot::*)(float)>(&MagicalActual::DragonPilot::CEGHBBHCEGE)> {
  static const MethodInfo* get() {
    static auto* OHOGONAFMPC = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "CEGHBBHCEGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OHOGONAFMPC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DragonPilot::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DragonPilot::*)()>(&MagicalActual::DragonPilot::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DragonPilot*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
