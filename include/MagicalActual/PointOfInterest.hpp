// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PointOfInterest
  class PointOfInterest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PointOfInterest);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PointOfInterest*, "MagicalActual", "PointOfInterest");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x2D
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PointOfInterest
  // [TokenAttribute] Offset: FFFFFFFF
  class PointOfInterest : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String poiName
    // Size: 0x8
    // Offset: 0x18
    ::StringW poiName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String zoneName
    // Size: 0x8
    // Offset: 0x20
    ::StringW zoneName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 distanceRating
    // Size: 0x4
    // Offset: 0x28
    int distanceRating;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean discovered
    // Size: 0x1
    // Offset: 0x2C
    bool discovered;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String poiName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_poiName();
    // Get instance field reference: public System.String zoneName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_zoneName();
    // Get instance field reference: public System.Int32 distanceRating
    [[deprecated("Use field access instead!")]] int& dyn_distanceRating();
    // Get instance field reference: public System.Boolean discovered
    [[deprecated("Use field access instead!")]] bool& dyn_discovered();
    // private System.Void AHPDCIGFMJI()
    // Offset: 0x1AFE3D4
    void AHPDCIGFMJI();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x1AFE440
    void MLGBKBMHHLE();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x1AFE4AC
    void ABIHCGOKNCL();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x1AFE518
    void OACMGPBCPEL();
    // public System.Void .ctor()
    // Offset: 0x1AFE584
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PointOfInterest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PointOfInterest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PointOfInterest*, creationType>()));
    }
    // private System.Void APIMIOELFAJ()
    // Offset: 0x1AFE5F4
    void APIMIOELFAJ();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x1AFE660
    void IDOCJGNLNFL();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x1AFE6CC
    void JENOIOBAEPG();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x1AFE738
    void DGJGAFKDIDK();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x1AFE7A4
    void GECHLDPLPCC();
    // private System.Void JNHNEBOHOIB()
    // Offset: 0x1AFE810
    void JNHNEBOHOIB();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x1AFE87C
    void GHLPBOJJHNG();
    // private System.Void NHADFEMILCC()
    // Offset: 0x1AFE8E8
    void NHADFEMILCC();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x1AFE954
    void FGIFGGNGKPK();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x1AFE9C0
    void CBMDGNKFPIO();
    // private System.Void Start()
    // Offset: 0x1AFEA2C
    void Start();
    // private System.Void DFCOAPEIKLN()
    // Offset: 0x1AFEA98
    void DFCOAPEIKLN();
    // private System.Void KBDGAPMJGLG()
    // Offset: 0x1AFEB04
    void KBDGAPMJGLG();
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x1AFEB70
    void PBEMGGBBDCK();
    // private System.Void PFABJJGAOMM()
    // Offset: 0x1AFEBDC
    void PFABJJGAOMM();
    // private System.Void FNGLOIECKDG()
    // Offset: 0x1AFEC48
    void FNGLOIECKDG();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x1AFECB4
    void LBIKOKCCILF();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x1AFED20
    void KPOAAAHLGLA();
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x1AFED8C
    void LPLGKBGLPOK();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x1AFEDF8
    void NEDFCIDMJBB();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x1AFEE64
    void BDEDGNGMHMN();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x1AFEED0
    void EIIKFEMCNKM();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x1AFEF3C
    void IPIFMKAGODD();
    // private System.Void GPFBGGFPINB()
    // Offset: 0x1AFEFA8
    void GPFBGGFPINB();
    // private System.Void AKGFEENGKJD()
    // Offset: 0x1AFF014
    void AKGFEENGKJD();
    // private System.Void NNDKJCJFIAK()
    // Offset: 0x1AFF080
    void NNDKJCJFIAK();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x1AFF0EC
    void GKIOLADOCOK();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x1AFF158
    void HKINNMLBMMG();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x1AFF1C4
    void EPCHNEGNKNF();
    // private System.Void AFIACGLCIPB()
    // Offset: 0x1AFF230
    void AFIACGLCIPB();
  }; // MagicalActual.PointOfInterest
  #pragma pack(pop)
  static check_size<sizeof(PointOfInterest), 44 + sizeof(bool)> __MagicalActual_PointOfInterestSizeCheck;
  static_assert(sizeof(PointOfInterest) == 0x2D);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::AHPDCIGFMJI
// Il2CppName: AHPDCIGFMJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::AHPDCIGFMJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "AHPDCIGFMJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::APIMIOELFAJ
// Il2CppName: APIMIOELFAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::APIMIOELFAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "APIMIOELFAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::JNHNEBOHOIB
// Il2CppName: JNHNEBOHOIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::JNHNEBOHOIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "JNHNEBOHOIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::DFCOAPEIKLN
// Il2CppName: DFCOAPEIKLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::DFCOAPEIKLN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "DFCOAPEIKLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::KBDGAPMJGLG
// Il2CppName: KBDGAPMJGLG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::KBDGAPMJGLG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "KBDGAPMJGLG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::PFABJJGAOMM
// Il2CppName: PFABJJGAOMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::PFABJJGAOMM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "PFABJJGAOMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::NNDKJCJFIAK
// Il2CppName: NNDKJCJFIAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::NNDKJCJFIAK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "NNDKJCJFIAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PointOfInterest::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PointOfInterest::*)()>(&MagicalActual::PointOfInterest::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PointOfInterest*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
