// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: IPooling
#include "GlobalNamespace/IPooling.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: HoverOverGround
  class HoverOverGround;
  // Forward declaring type: PlayerTool
  class PlayerTool;
  // Forward declaring type: TopHud
  class TopHud;
  // Forward declaring type: FaceController
  class FaceController;
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: PlayerClass
  class PlayerClass;
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: AvatarAppearance
  class AvatarAppearance;
  // Forward declaring type: Teleporter
  class Teleporter;
  // Forward declaring type: FakeTeleporter
  class FakeTeleporter;
  // Forward declaring type: SpecialPopupManager
  class SpecialPopupManager;
  // Forward declaring type: WorldMenu
  class WorldMenu;
  // Forward declaring type: ObjectHighlighter
  class ObjectHighlighter;
  // Forward declaring type: Grabber
  class Grabber;
  // Forward declaring type: PlayerMount
  class PlayerMount;
  // Forward declaring type: GrindToolDeployed
  class GrindToolDeployed;
  // Forward declaring type: BoostBombDeployed
  class BoostBombDeployed;
  // Forward declaring type: BoostBomb
  class BoostBomb;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Cloth
  class Cloth;
  // Forward declaring type: Renderer
  class Renderer;
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: Color32
  struct Color32;
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SuperTextMesh
  class SuperTextMesh;
  // Forward declaring type: ProgressBarPro
  class ProgressBarPro;
  // Forward declaring type: SKManager
  class SKManager;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerAvatar
  class PlayerAvatar;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::PlayerAvatar);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::PlayerAvatar*, "MagicalActual", "PlayerAvatar");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x708
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.PlayerAvatar
  // [TokenAttribute] Offset: FFFFFFFF
  class PlayerAvatar : public ::UnityEngine::MonoBehaviour/*, public ::GlobalNamespace::IPooling*/ {
    public:
    // Nested type: ::MagicalActual::PlayerAvatar::orbusNetMethodIdx
    struct orbusNetMethodIdx;
    // Nested type: ::MagicalActual::PlayerAvatar::orbusNetIncomingIdx
    struct orbusNetIncomingIdx;
    // Nested type: ::MagicalActual::PlayerAvatar::fxTexturesTypes
    struct fxTexturesTypes;
    // Nested type: ::MagicalActual::PlayerAvatar::$$c__DisplayClass530_0
    class $$c__DisplayClass530_0;
    // Nested type: ::MagicalActual::PlayerAvatar::$equipGear$d__536
    class $equipGear$d__536;
    // Nested type: ::MagicalActual::PlayerAvatar::$$c__DisplayClass540_0
    class $$c__DisplayClass540_0;
    // Nested type: ::MagicalActual::PlayerAvatar::$$c__DisplayClass562_0
    class $$c__DisplayClass562_0;
    // Nested type: ::MagicalActual::PlayerAvatar::$$c__DisplayClass562_1
    class $$c__DisplayClass562_1;
    // Nested type: ::MagicalActual::PlayerAvatar::$$c__DisplayClass562_2
    class $$c__DisplayClass562_2;
    // Nested type: ::MagicalActual::PlayerAvatar::$$c__DisplayClass562_3
    class $$c__DisplayClass562_3;
    // Nested type: ::MagicalActual::PlayerAvatar::$$c
    class $$c;
    // Nested type: ::MagicalActual::PlayerAvatar::$$c__DisplayClass574_0
    class $$c__DisplayClass574_0;
    public:
    // public System.Boolean isDummyAvatar
    // Size: 0x1
    // Offset: 0x18
    bool isDummyAvatar;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isDummyAvatar and: leftController
    char __padding0[0x7] = {};
    // public UnityEngine.GameObject leftController
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* leftController;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject rightController
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* rightController;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject playerBase
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* playerBase;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject playerHead
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::GameObject* playerHead;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.Transform playerMountPosition
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::Transform* playerMountPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public UnityEngine.Transform startSummonMountPosition
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::Transform* startSummonMountPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private MagicalActual.HoverOverGround IMNMNEKLEBO
    // Size: 0x8
    // Offset: 0x50
    ::MagicalActual::HoverOverGround* IMNMNEKLEBO;
    // Field size check
    static_assert(sizeof(::MagicalActual::HoverOverGround*) == 0x8);
    // private UnityEngine.GameObject LNKGODGNNFD
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* LNKGODGNNFD;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject HODKEKHJBCJ
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::GameObject* HODKEKHJBCJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.PlayerTool[] BBJOBDADDEN
    // Size: 0x8
    // Offset: 0x68
    ::ArrayW<::MagicalActual::PlayerTool*> BBJOBDADDEN;
    // Field size check
    static_assert(sizeof(::ArrayW<::MagicalActual::PlayerTool*>) == 0x8);
    // private MagicalActual.PlayerTool[] AEJFAKIPNAD
    // Size: 0x8
    // Offset: 0x70
    ::ArrayW<::MagicalActual::PlayerTool*> AEJFAKIPNAD;
    // Field size check
    static_assert(sizeof(::ArrayW<::MagicalActual::PlayerTool*>) == 0x8);
    // private ExtUI.InventoryItemInstance ENJHIMCGIGG
    // Size: 0x8
    // Offset: 0x78
    ::ExtUI::InventoryItemInstance* ENJHIMCGIGG;
    // Field size check
    static_assert(sizeof(::ExtUI::InventoryItemInstance*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x80
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Single timeWhenPingSent
    // Size: 0x4
    // Offset: 0x88
    float timeWhenPingSent;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean localControl
    // Size: 0x1
    // Offset: 0x8C
    bool localControl;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: localControl and: topHud
    char __padding15[0x3] = {};
    // public MagicalActual.TopHud topHud
    // Size: 0x8
    // Offset: 0x90
    ::MagicalActual::TopHud* topHud;
    // Field size check
    static_assert(sizeof(::MagicalActual::TopHud*) == 0x8);
    // public UnityEngine.GameObject vfxLeveled
    // Size: 0x8
    // Offset: 0x98
    ::UnityEngine::GameObject* vfxLeveled;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public SuperTextMesh resurrectCooldownTimer
    // Size: 0x8
    // Offset: 0xA0
    ::GlobalNamespace::SuperTextMesh* resurrectCooldownTimer;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SuperTextMesh*) == 0x8);
    // public UnityEngine.Material playerSkinMaterial
    // Size: 0x8
    // Offset: 0xA8
    ::UnityEngine::Material* playerSkinMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material playerGhostMaterial
    // Size: 0x8
    // Offset: 0xB0
    ::UnityEngine::Material* playerGhostMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // public UnityEngine.Material dyedGearMaterial
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::Material* dyedGearMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE37F8
    // private MagicalActual.FaceController <MDJMKEKMEDF>k__BackingField
    // Size: 0x8
    // Offset: 0xC0
    ::MagicalActual::FaceController* MDJMKEKMEDF;
    // Field size check
    static_assert(sizeof(::MagicalActual::FaceController*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3808
    // private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Vector3> <IPCEPLFGLJP>k__BackingField
    // Size: 0x8
    // Offset: 0xC8
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Vector3>* IPCEPLFGLJP;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Vector3>*) == 0x8);
    // public UnityEngine.GameObject isSpeakingIndicator
    // Size: 0x8
    // Offset: 0xD0
    ::UnityEngine::GameObject* isSpeakingIndicator;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject isMutedIndicator
    // Size: 0x8
    // Offset: 0xD8
    ::UnityEngine::GameObject* isMutedIndicator;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single EJMFFBGJLPP
    // Size: 0x4
    // Offset: 0xE0
    float EJMFFBGJLPP;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single EGMFFJEMCEK
    // Size: 0x4
    // Offset: 0xE4
    float EGMFFJEMCEK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3828
    // private System.Boolean <NJGOJGLAKLL>k__BackingField
    // Size: 0x1
    // Offset: 0xE8
    bool NJGOJGLAKLL;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: NJGOJGLAKLL and: speakerVolume
    char __padding28[0x7] = {};
    // public System.Double speakerVolume
    // Size: 0x8
    // Offset: 0xF0
    double speakerVolume;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private UnityEngine.GameObject FNPNJLGDPKJ
    // Size: 0x8
    // Offset: 0xF8
    ::UnityEngine::GameObject* FNPNJLGDPKJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject commsTemplate
    // Size: 0x8
    // Offset: 0x100
    ::UnityEngine::GameObject* commsTemplate;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.String KIPDGIFLKIA
    // Size: 0x8
    // Offset: 0x108
    ::StringW KIPDGIFLKIA;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean EPFEEANIFMM
    // Size: 0x1
    // Offset: 0x110
    bool EPFEEANIFMM;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: EPFEEANIFMM and: JNPPMCGLMFG
    char __padding33[0x3] = {};
    // private System.Single JNPPMCGLMFG
    // Size: 0x4
    // Offset: 0x114
    float JNPPMCGLMFG;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3838
    // private MagicalActual.NetEntity <JANFCAJMFMP>k__BackingField
    // Size: 0x8
    // Offset: 0x118
    ::MagicalActual::NetEntity* JANFCAJMFMP;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public MagicalActual.PlayerClass[] classObjects
    // Size: 0x8
    // Offset: 0x120
    ::ArrayW<::MagicalActual::PlayerClass*> classObjects;
    // Field size check
    static_assert(sizeof(::ArrayW<::MagicalActual::PlayerClass*>) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> OELAHBEGJKL
    // Size: 0x8
    // Offset: 0x128
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>* OELAHBEGJKL;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*) == 0x8);
    // public MagicalActual.PlayerClass currentActiveClass
    // Size: 0x8
    // Offset: 0x130
    ::MagicalActual::PlayerClass* currentActiveClass;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerClass*) == 0x8);
    // public UnityEngine.GameObject playerHud
    // Size: 0x8
    // Offset: 0x138
    ::UnityEngine::GameObject* playerHud;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public ProgressBarPro superBar
    // Size: 0x8
    // Offset: 0x140
    ::GlobalNamespace::ProgressBarPro* superBar;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ProgressBarPro*) == 0x8);
    // public ProgressBarPro classBar
    // Size: 0x8
    // Offset: 0x148
    ::GlobalNamespace::ProgressBarPro* classBar;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ProgressBarPro*) == 0x8);
    // public ProgressBarPro staminaBar
    // Size: 0x8
    // Offset: 0x150
    ::GlobalNamespace::ProgressBarPro* staminaBar;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ProgressBarPro*) == 0x8);
    // public SuperTextMesh bountyStatus
    // Size: 0x8
    // Offset: 0x158
    ::GlobalNamespace::SuperTextMesh* bountyStatus;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SuperTextMesh*) == 0x8);
    // public UnityEngine.UI.Text classBarText
    // Size: 0x8
    // Offset: 0x160
    ::UnityEngine::UI::Text* classBarText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3878
    // private System.Collections.Generic.Dictionary`2<System.String,ExtUI.InventoryItemInstance> <BLIGDKCIIJK>k__BackingField
    // Size: 0x8
    // Offset: 0x168
    ::System::Collections::Generic::Dictionary_2<::StringW, ::ExtUI::InventoryItemInstance*>* BLIGDKCIIJK;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::ExtUI::InventoryItemInstance*>*) == 0x8);
    // private System.Int32[] CGDANEKHMFP
    // Size: 0x8
    // Offset: 0x170
    ::ArrayW<int> CGDANEKHMFP;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private System.Single EAPFFFHGLBE
    // Size: 0x4
    // Offset: 0x178
    float EAPFFFHGLBE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single EHKCPKLHIKC
    // Size: 0x4
    // Offset: 0x17C
    float EHKCPKLHIKC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean OJJKGAADEAC
    // Size: 0x1
    // Offset: 0x180
    bool OJJKGAADEAC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: OJJKGAADEAC and: GPPLIOOEONI
    char __padding49[0x3] = {};
    // private System.Int32 GPPLIOOEONI
    // Size: 0x4
    // Offset: 0x184
    int GPPLIOOEONI;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3888
    // private MagicalActual.Monster <INCGNEHCAOC>k__BackingField
    // Size: 0x8
    // Offset: 0x188
    ::MagicalActual::Monster* INCGNEHCAOC;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // private MagicalActual.AvatarAppearance EOFFJKCJLIP
    // Size: 0x8
    // Offset: 0x190
    ::MagicalActual::AvatarAppearance* EOFFJKCJLIP;
    // Field size check
    static_assert(sizeof(::MagicalActual::AvatarAppearance*) == 0x8);
    // public SKManager myManager
    // Size: 0x8
    // Offset: 0x198
    ::GlobalNamespace::SKManager* myManager;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SKManager*) == 0x8);
    // private UnityEngine.Cloth FCFOCFPODJI
    // Size: 0x8
    // Offset: 0x1A0
    ::UnityEngine::Cloth* FCFOCFPODJI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Cloth*) == 0x8);
    // public UnityEngine.GameObject grabberLeft
    // Size: 0x8
    // Offset: 0x1A8
    ::UnityEngine::GameObject* grabberLeft;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject grabberRight
    // Size: 0x8
    // Offset: 0x1B0
    ::UnityEngine::GameObject* grabberRight;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject JHHLCOENFIL
    // Size: 0x8
    // Offset: 0x1B8
    ::UnityEngine::GameObject* JHHLCOENFIL;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject PLAGOGDIKML
    // Size: 0x8
    // Offset: 0x1C0
    ::UnityEngine::GameObject* PLAGOGDIKML;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.Teleporter AICFMHMHDEN
    // Size: 0x8
    // Offset: 0x1C8
    ::MagicalActual::Teleporter* AICFMHMHDEN;
    // Field size check
    static_assert(sizeof(::MagicalActual::Teleporter*) == 0x8);
    // private MagicalActual.Teleporter JGLMNDDNPLM
    // Size: 0x8
    // Offset: 0x1D0
    ::MagicalActual::Teleporter* JGLMNDDNPLM;
    // Field size check
    static_assert(sizeof(::MagicalActual::Teleporter*) == 0x8);
    // public UnityEngine.GameObject fakeTeleporterLeft
    // Size: 0x8
    // Offset: 0x1D8
    ::UnityEngine::GameObject* fakeTeleporterLeft;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject fakeTeleporterRight
    // Size: 0x8
    // Offset: 0x1E0
    ::UnityEngine::GameObject* fakeTeleporterRight;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.FakeTeleporter JEOOBEJBGAI
    // Size: 0x8
    // Offset: 0x1E8
    ::MagicalActual::FakeTeleporter* JEOOBEJBGAI;
    // Field size check
    static_assert(sizeof(::MagicalActual::FakeTeleporter*) == 0x8);
    // private MagicalActual.FakeTeleporter HGFPENCJOND
    // Size: 0x8
    // Offset: 0x1F0
    ::MagicalActual::FakeTeleporter* HGFPENCJOND;
    // Field size check
    static_assert(sizeof(::MagicalActual::FakeTeleporter*) == 0x8);
    // public UnityEngine.GameObject headGearSlot
    // Size: 0x8
    // Offset: 0x1F8
    ::UnityEngine::GameObject* headGearSlot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject headGearSlotLod1
    // Size: 0x8
    // Offset: 0x200
    ::UnityEngine::GameObject* headGearSlotLod1;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject chestGearSlot
    // Size: 0x8
    // Offset: 0x208
    ::UnityEngine::GameObject* chestGearSlot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject chestGearSlotLod1
    // Size: 0x8
    // Offset: 0x210
    ::UnityEngine::GameObject* chestGearSlotLod1;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject gloveGearSlotLeft
    // Size: 0x8
    // Offset: 0x218
    ::UnityEngine::GameObject* gloveGearSlotLeft;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject gloveGearSlotLeftLod1
    // Size: 0x8
    // Offset: 0x220
    ::UnityEngine::GameObject* gloveGearSlotLeftLod1;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject gloveGearSlotRight
    // Size: 0x8
    // Offset: 0x228
    ::UnityEngine::GameObject* gloveGearSlotRight;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject gloveGearSlotRightLod1
    // Size: 0x8
    // Offset: 0x230
    ::UnityEngine::GameObject* gloveGearSlotRightLod1;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject shoulerGearSlot
    // Size: 0x8
    // Offset: 0x238
    ::UnityEngine::GameObject* shoulerGearSlot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject shoulderGearSlotLod1
    // Size: 0x8
    // Offset: 0x240
    ::UnityEngine::GameObject* shoulderGearSlotLod1;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject backGearSlot
    // Size: 0x8
    // Offset: 0x248
    ::UnityEngine::GameObject* backGearSlot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject backGearSlotLod1
    // Size: 0x8
    // Offset: 0x250
    ::UnityEngine::GameObject* backGearSlotLod1;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject wristGearSlotLeft
    // Size: 0x8
    // Offset: 0x258
    ::UnityEngine::GameObject* wristGearSlotLeft;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject wristGearSlotRight
    // Size: 0x8
    // Offset: 0x260
    ::UnityEngine::GameObject* wristGearSlotRight;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject ringGearSlotLeft
    // Size: 0x8
    // Offset: 0x268
    ::UnityEngine::GameObject* ringGearSlotLeft;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject ringGearSlotRight
    // Size: 0x8
    // Offset: 0x270
    ::UnityEngine::GameObject* ringGearSlotRight;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject hairSlot
    // Size: 0x8
    // Offset: 0x278
    ::UnityEngine::GameObject* hairSlot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject hairSlotLod1
    // Size: 0x8
    // Offset: 0x280
    ::UnityEngine::GameObject* hairSlotLod1;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject hairClippedSlot
    // Size: 0x8
    // Offset: 0x288
    ::UnityEngine::GameObject* hairClippedSlot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject hairClippedSlotLod1
    // Size: 0x8
    // Offset: 0x290
    ::UnityEngine::GameObject* hairClippedSlotLod1;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject noseSlot
    // Size: 0x8
    // Offset: 0x298
    ::UnityEngine::GameObject* noseSlot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject earSlot
    // Size: 0x8
    // Offset: 0x2A0
    ::UnityEngine::GameObject* earSlot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject backpackLevel1
    // Size: 0x8
    // Offset: 0x2A8
    ::UnityEngine::GameObject* backpackLevel1;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject backpackLevel2
    // Size: 0x8
    // Offset: 0x2B0
    ::UnityEngine::GameObject* backpackLevel2;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.Renderer[] lod0Renderers
    // Size: 0x8
    // Offset: 0x2B8
    ::ArrayW<::UnityEngine::Renderer*> lod0Renderers;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Renderer*>) == 0x8);
    // public UnityEngine.Renderer[] lod1Renderers
    // Size: 0x8
    // Offset: 0x2C0
    ::ArrayW<::UnityEngine::Renderer*> lod1Renderers;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Renderer*>) == 0x8);
    // public UnityEngine.Renderer[] lod2Renderers
    // Size: 0x8
    // Offset: 0x2C8
    ::ArrayW<::UnityEngine::Renderer*> lod2Renderers;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Renderer*>) == 0x8);
    // public UnityEngine.Renderer[] lod3Renderers
    // Size: 0x8
    // Offset: 0x2D0
    ::ArrayW<::UnityEngine::Renderer*> lod3Renderers;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Renderer*>) == 0x8);
    // public UnityEngine.UI.Image slot1CooldownGraphic
    // Size: 0x8
    // Offset: 0x2D8
    ::UnityEngine::UI::Image* slot1CooldownGraphic;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // public UnityEngine.UI.Image slot2CooldownGraphic
    // Size: 0x8
    // Offset: 0x2E0
    ::UnityEngine::UI::Image* slot2CooldownGraphic;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Image*) == 0x8);
    // private System.Single PHCOFDILEIP
    // Size: 0x4
    // Offset: 0x2E8
    float PHCOFDILEIP;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MPKHODMLNJL
    // Size: 0x4
    // Offset: 0x2EC
    float MPKHODMLNJL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single FIPALALHGAM
    // Size: 0x4
    // Offset: 0x2F0
    float FIPALALHGAM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single NPPFNIGKMBA
    // Size: 0x4
    // Offset: 0x2F4
    float NPPFNIGKMBA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public UnityEngine.GameObject[] teleportTrailPrefabs
    // Size: 0x8
    // Offset: 0x2F8
    ::ArrayW<::UnityEngine::GameObject*> teleportTrailPrefabs;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::GameObject*>) == 0x8);
    // public UnityEngine.GameObject enemyDisplay
    // Size: 0x8
    // Offset: 0x300
    ::UnityEngine::GameObject* enemyDisplay;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject soulDisplay
    // Size: 0x8
    // Offset: 0x308
    ::UnityEngine::GameObject* soulDisplay;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject lod3Display
    // Size: 0x8
    // Offset: 0x310
    ::UnityEngine::GameObject* lod3Display;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public SuperTextMesh runeNotification
    // Size: 0x8
    // Offset: 0x318
    ::GlobalNamespace::SuperTextMesh* runeNotification;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::SuperTextMesh*) == 0x8);
    // private System.Collections.Generic.List`1<System.String> BGDDHPEGMAA
    // Size: 0x8
    // Offset: 0x320
    ::System::Collections::Generic::List_1<::StringW>* BGDDHPEGMAA;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // private System.Single BPGCODKDPPE
    // Size: 0x4
    // Offset: 0x328
    float BPGCODKDPPE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single PBCNOLPEOGD
    // Size: 0x4
    // Offset: 0x32C
    float PBCNOLPEOGD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public MagicalActual.SpecialPopupManager specialPopupManager
    // Size: 0x8
    // Offset: 0x330
    ::MagicalActual::SpecialPopupManager* specialPopupManager;
    // Field size check
    static_assert(sizeof(::MagicalActual::SpecialPopupManager*) == 0x8);
    // private UnityEngine.GameObject IGOBDMPDAED
    // Size: 0x8
    // Offset: 0x338
    ::UnityEngine::GameObject* IGOBDMPDAED;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Color DNBDAECCIKK
    // Size: 0x10
    // Offset: 0x340
    ::UnityEngine::Color DNBDAECCIKK;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color BEAHHEPEHBA
    // Size: 0x10
    // Offset: 0x350
    ::UnityEngine::Color BEAHHEPEHBA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color EOLPBKPPODG
    // Size: 0x10
    // Offset: 0x360
    ::UnityEngine::Color EOLPBKPPODG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // [CompilerGeneratedAttribute] Offset: 0xAE38E8
    // private System.Boolean <NFNFLKCHCFD>k__BackingField
    // Size: 0x1
    // Offset: 0x370
    bool NFNFLKCHCFD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean BACJLLMMNDA
    // Size: 0x1
    // Offset: 0x371
    bool BACJLLMMNDA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE38F8
    // private System.Boolean <ONAMECHEGPM>k__BackingField
    // Size: 0x1
    // Offset: 0x372
    bool ONAMECHEGPM;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3908
    // private System.Boolean <EOADGKODIHA>k__BackingField
    // Size: 0x1
    // Offset: 0x373
    bool EOADGKODIHA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3918
    // private System.Boolean <LPNCGBJFBDK>k__BackingField
    // Size: 0x1
    // Offset: 0x374
    bool LPNCGBJFBDK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: LPNCGBJFBDK and: PJINHJLNLBC
    char __padding116[0x3] = {};
    // private UnityEngine.Color PJINHJLNLBC
    // Size: 0x10
    // Offset: 0x378
    ::UnityEngine::Color PJINHJLNLBC;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color OLLFFNOONAP
    // Size: 0x10
    // Offset: 0x388
    ::UnityEngine::Color OLLFFNOONAP;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color LKDJIIIJFAJ
    // Size: 0x10
    // Offset: 0x398
    ::UnityEngine::Color LKDJIIIJFAJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color GNKIJBFJOGO
    // Size: 0x10
    // Offset: 0x3A8
    ::UnityEngine::Color GNKIJBFJOGO;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color MPDHHPCAGFB
    // Size: 0x10
    // Offset: 0x3B8
    ::UnityEngine::Color MPDHHPCAGFB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color AAHDKGAALMA
    // Size: 0x10
    // Offset: 0x3C8
    ::UnityEngine::Color AAHDKGAALMA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color KGOEKCLNECG
    // Size: 0x10
    // Offset: 0x3D8
    ::UnityEngine::Color KGOEKCLNECG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color DEGILMKMLEI
    // Size: 0x10
    // Offset: 0x3E8
    ::UnityEngine::Color DEGILMKMLEI;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color JMPGHHJNKGN
    // Size: 0x10
    // Offset: 0x3F8
    ::UnityEngine::Color JMPGHHJNKGN;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color LCFJLAFLOGC
    // Size: 0x10
    // Offset: 0x408
    ::UnityEngine::Color LCFJLAFLOGC;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color KCKIMCKDPMJ
    // Size: 0x10
    // Offset: 0x418
    ::UnityEngine::Color KCKIMCKDPMJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color JCOONOEMCCN
    // Size: 0x10
    // Offset: 0x428
    ::UnityEngine::Color JCOONOEMCCN;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Vector3 PABODGFCCPB
    // Size: 0xC
    // Offset: 0x438
    ::UnityEngine::Vector3 PABODGFCCPB;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Quaternion GECBOKLOFKJ
    // Size: 0x10
    // Offset: 0x444
    ::UnityEngine::Quaternion GECBOKLOFKJ;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private System.Single DJKPHCOJBFD
    // Size: 0x4
    // Offset: 0x454
    float DJKPHCOJBFD;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single DMDCJOGKEII
    // Size: 0x4
    // Offset: 0x458
    float DMDCJOGKEII;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 PAAFEPICDJO
    // Size: 0x4
    // Offset: 0x45C
    int PAAFEPICDJO;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Boolean NADNHHBLKDO
    // Size: 0x1
    // Offset: 0x460
    bool NADNHHBLKDO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: NADNHHBLKDO and: JNHGDCCKIOI
    char __padding134[0x7] = {};
    // private UnityEngine.GameObject JNHGDCCKIOI
    // Size: 0x8
    // Offset: 0x468
    ::UnityEngine::GameObject* JNHGDCCKIOI;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject FDGLLFIIPCA
    // Size: 0x8
    // Offset: 0x470
    ::UnityEngine::GameObject* FDGLLFIIPCA;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3928
    // private System.Boolean <OPCKMPONFGP>k__BackingField
    // Size: 0x1
    // Offset: 0x478
    bool OPCKMPONFGP;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3938
    // private System.Boolean <ALLNLOIDOCG>k__BackingField
    // Size: 0x1
    // Offset: 0x479
    bool ALLNLOIDOCG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: ALLNLOIDOCG and: PDMHPDLJMCG
    char __padding138[0x6] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3948
    // private System.String <PDMHPDLJMCG>k__BackingField
    // Size: 0x8
    // Offset: 0x480
    ::StringW PDMHPDLJMCG;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3958
    // private System.String[] <KILMFODCKFA>k__BackingField
    // Size: 0x8
    // Offset: 0x488
    ::ArrayW<::StringW> KILMFODCKFA;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3968
    // private System.String[] <EOBAHKCIMDF>k__BackingField
    // Size: 0x8
    // Offset: 0x490
    ::ArrayW<::StringW> EOBAHKCIMDF;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3978
    // private System.Boolean <HHKIMKKKLEG>k__BackingField
    // Size: 0x1
    // Offset: 0x498
    bool HHKIMKKKLEG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3988
    // private System.Boolean <BEAALFEHEMK>k__BackingField
    // Size: 0x1
    // Offset: 0x499
    bool BEAALFEHEMK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3998
    // private System.Boolean <AFIMMKINDHK>k__BackingField
    // Size: 0x1
    // Offset: 0x49A
    bool AFIMMKINDHK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: AFIMMKINDHK and: BDHHHLBEHNK
    char __padding144[0x5] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE39A8
    // private System.String[] <BDHHHLBEHNK>k__BackingField
    // Size: 0x8
    // Offset: 0x4A0
    ::ArrayW<::StringW> BDHHHLBEHNK;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE39B8
    // private System.String[] <CKFACGGBAIF>k__BackingField
    // Size: 0x8
    // Offset: 0x4A8
    ::ArrayW<::StringW> CKFACGGBAIF;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE39C8
    // private System.Boolean <EOIHICBFNIE>k__BackingField
    // Size: 0x1
    // Offset: 0x4B0
    bool EOIHICBFNIE;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: EOIHICBFNIE and: NJKLCPOEBHF
    char __padding147[0x3] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE39D8
    // private System.Int32 <NJKLCPOEBHF>k__BackingField
    // Size: 0x4
    // Offset: 0x4B4
    int NJKLCPOEBHF;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE39E8
    // private System.Int32 <GMDHIGGMGPG>k__BackingField
    // Size: 0x4
    // Offset: 0x4B8
    int GMDHIGGMGPG;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: GMDHIGGMGPG and: DENDMIBBGPA
    char __padding149[0x4] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE39F8
    // private System.String[] <DENDMIBBGPA>k__BackingField
    // Size: 0x8
    // Offset: 0x4C0
    ::ArrayW<::StringW> DENDMIBBGPA;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3A08
    // private System.String[] <ODHPNAMADEB>k__BackingField
    // Size: 0x8
    // Offset: 0x4C8
    ::ArrayW<::StringW> ODHPNAMADEB;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3A18
    // private System.Boolean[] <BFJKKKPGKFK>k__BackingField
    // Size: 0x8
    // Offset: 0x4D0
    ::ArrayW<bool> BFJKKKPGKFK;
    // Field size check
    static_assert(sizeof(::ArrayW<bool>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3A28
    // private System.Int32 <CLGCLCFLHDF>k__BackingField
    // Size: 0x4
    // Offset: 0x4D8
    int CLGCLCFLHDF;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: CLGCLCFLHDF and: PFJDDCPLNNI
    char __padding153[0x4] = {};
    // private MagicalActual.WorldMenu PFJDDCPLNNI
    // Size: 0x8
    // Offset: 0x4E0
    ::MagicalActual::WorldMenu* PFJDDCPLNNI;
    // Field size check
    static_assert(sizeof(::MagicalActual::WorldMenu*) == 0x8);
    // private UnityEngine.Vector3 CLHAIFFHBBL
    // Size: 0xC
    // Offset: 0x4E8
    ::UnityEngine::Vector3 CLHAIFFHBBL;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single NDBKEHBBFIM
    // Size: 0x4
    // Offset: 0x4F4
    float NDBKEHBBFIM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private MagicalActual.ObjectHighlighter BGKMOLDAMCD
    // Size: 0x8
    // Offset: 0x4F8
    ::MagicalActual::ObjectHighlighter* BGKMOLDAMCD;
    // Field size check
    static_assert(sizeof(::MagicalActual::ObjectHighlighter*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3A38
    // private System.Boolean <JOKEANHMALO>k__BackingField
    // Size: 0x1
    // Offset: 0x500
    bool JOKEANHMALO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3A48
    // private System.Boolean <KIIOLIBEOEK>k__BackingField
    // Size: 0x1
    // Offset: 0x501
    bool KIIOLIBEOEK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3A58
    // private System.Boolean <DOBIGIBMGBC>k__BackingField
    // Size: 0x1
    // Offset: 0x502
    bool DOBIGIBMGBC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: DOBIGIBMGBC and: KFIHCBGPFAO
    char __padding160[0x1] = {};
    // private System.Single KFIHCBGPFAO
    // Size: 0x4
    // Offset: 0x504
    float KFIHCBGPFAO;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single FPNHDLOOMLK
    // Size: 0x4
    // Offset: 0x508
    float FPNHDLOOMLK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: FPNHDLOOMLK and: FHFBLMEFJLP
    char __padding162[0x4] = {};
    // private System.Int64 FHFBLMEFJLP
    // Size: 0x8
    // Offset: 0x510
    int64_t FHFBLMEFJLP;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // private System.Single BJKAACEGIOJ
    // Size: 0x4
    // Offset: 0x518
    float BJKAACEGIOJ;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MDBAGBJDFDC
    // Size: 0x4
    // Offset: 0x51C
    float MDBAGBJDFDC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3A68
    // private System.Byte <OCLILHEKJDI>k__BackingField
    // Size: 0x1
    // Offset: 0x520
    uint8_t OCLILHEKJDI;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: OCLILHEKJDI and: AKOCFJMKAPN
    char __padding166[0x7] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3A78
    // private MagicalActual.Grabber <AKOCFJMKAPN>k__BackingField
    // Size: 0x8
    // Offset: 0x528
    ::MagicalActual::Grabber* AKOCFJMKAPN;
    // Field size check
    static_assert(sizeof(::MagicalActual::Grabber*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3A88
    // private MagicalActual.Grabber <GKJNNAJPCBG>k__BackingField
    // Size: 0x8
    // Offset: 0x530
    ::MagicalActual::Grabber* GKJNNAJPCBG;
    // Field size check
    static_assert(sizeof(::MagicalActual::Grabber*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3A98
    // private System.Byte <EKDCMMMOIBO>k__BackingField
    // Size: 0x1
    // Offset: 0x538
    uint8_t EKDCMMMOIBO;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: EKDCMMMOIBO and: BBNIKFKCFAH
    char __padding169[0x3] = {};
    // private System.Int32 BBNIKFKCFAH
    // Size: 0x4
    // Offset: 0x53C
    int BBNIKFKCFAH;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 KEHLNLBAFHA
    // Size: 0x4
    // Offset: 0x540
    int KEHLNLBAFHA;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.UInt16 IAPBONGAJLK
    // Size: 0x2
    // Offset: 0x544
    uint16_t IAPBONGAJLK;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // private System.Boolean AALBHOKGIOD
    // Size: 0x1
    // Offset: 0x546
    bool AALBHOKGIOD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: AALBHOKGIOD and: HOENAJNNOAN
    char __padding173[0x1] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3AA8
    // private System.String <HOENAJNNOAN>k__BackingField
    // Size: 0x8
    // Offset: 0x548
    ::StringW HOENAJNNOAN;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String equipment
    // Size: 0x8
    // Offset: 0x550
    ::StringW equipment;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String playerPrefs
    // Size: 0x8
    // Offset: 0x558
    ::StringW playerPrefs;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3AC8
    // private System.Byte <IJJNLMHHHCL>k__BackingField
    // Size: 0x1
    // Offset: 0x560
    uint8_t IJJNLMHHHCL;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3AD8
    // private System.Byte <NCACHDJOOND>k__BackingField
    // Size: 0x1
    // Offset: 0x561
    uint8_t NCACHDJOOND;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3AE8
    // private System.Byte <NIBBECIMOHP>k__BackingField
    // Size: 0x1
    // Offset: 0x562
    uint8_t NIBBECIMOHP;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: NIBBECIMOHP and: basePosition
    char __padding179[0x1] = {};
    // public UnityEngine.Vector3 basePosition
    // Size: 0xC
    // Offset: 0x564
    ::UnityEngine::Vector3 basePosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public UnityEngine.Quaternion baseRotation
    // Size: 0x10
    // Offset: 0x570
    ::UnityEngine::Quaternion baseRotation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // public UnityEngine.Quaternion forcedRotation
    // Size: 0x10
    // Offset: 0x580
    ::UnityEngine::Quaternion forcedRotation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // public System.Boolean forceMyRotation
    // Size: 0x1
    // Offset: 0x590
    bool forceMyRotation;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: forceMyRotation and: MILMLIOLBDA
    char __padding183[0x1] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3B38
    // private System.UInt16 <MILMLIOLBDA>k__BackingField
    // Size: 0x2
    // Offset: 0x592
    uint16_t MILMLIOLBDA;
    // Field size check
    static_assert(sizeof(uint16_t) == 0x2);
    // Padding between fields: MILMLIOLBDA and: GPAAMHPKHML
    char __padding184[0x4] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3B48
    // private System.String <GPAAMHPKHML>k__BackingField
    // Size: 0x8
    // Offset: 0x598
    ::StringW GPAAMHPKHML;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3B58
    // private System.String <GLHEJOCEGNJ>k__BackingField
    // Size: 0x8
    // Offset: 0x5A0
    ::StringW GLHEJOCEGNJ;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3B68
    // private System.Byte <NCLACBKFIFB>k__BackingField
    // Size: 0x1
    // Offset: 0x5A8
    uint8_t NCLACBKFIFB;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: NCLACBKFIFB and: PMAODJGHCEK
    char __padding187[0x3] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3B78
    // private System.Single <PMAODJGHCEK>k__BackingField
    // Size: 0x4
    // Offset: 0x5AC
    float PMAODJGHCEK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3B88
    // private System.String <ONDDFMIGJNH>k__BackingField
    // Size: 0x8
    // Offset: 0x5B0
    ::StringW ONDDFMIGJNH;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3B98
    // private System.Int32 <EKNMFCHGAKN>k__BackingField
    // Size: 0x4
    // Offset: 0x5B8
    int EKNMFCHGAKN;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3BA8
    // private System.Single <PLMHJHBEPHL>k__BackingField
    // Size: 0x4
    // Offset: 0x5BC
    float PLMHJHBEPHL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3BB8
    // private System.Single <PCFPBDMFMBE>k__BackingField
    // Size: 0x4
    // Offset: 0x5C0
    float PCFPBDMFMBE;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3BC8
    // private System.Byte <GCGAMLDCHGL>k__BackingField
    // Size: 0x1
    // Offset: 0x5C4
    uint8_t GCGAMLDCHGL;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: GCGAMLDCHGL and: PDGPOGJHJCA
    char __padding193[0x3] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3BD8
    // private System.Single <PDGPOGJHJCA>k__BackingField
    // Size: 0x4
    // Offset: 0x5C8
    float PDGPOGJHJCA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3BE8
    // private System.Single <PPDDCAPKCJM>k__BackingField
    // Size: 0x4
    // Offset: 0x5CC
    float PPDDCAPKCJM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3BF8
    // private System.String <NDJLKGMJJIP>k__BackingField
    // Size: 0x8
    // Offset: 0x5D0
    ::StringW NDJLKGMJJIP;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3C08
    // private System.Boolean <HJOIMJJHDPC>k__BackingField
    // Size: 0x1
    // Offset: 0x5D8
    bool HJOIMJJHDPC;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3C18
    // private System.Boolean <GAPPALCEOGO>k__BackingField
    // Size: 0x1
    // Offset: 0x5D9
    bool GAPPALCEOGO;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3C28
    // private System.Boolean <JGAECBKOELP>k__BackingField
    // Size: 0x1
    // Offset: 0x5DA
    bool JGAECBKOELP;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: JGAECBKOELP and: MMCKHCJGFKG
    char __padding199[0x1] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3C38
    // private UnityEngine.Vector3 <MMCKHCJGFKG>k__BackingField
    // Size: 0xC
    // Offset: 0x5DC
    ::UnityEngine::Vector3 MMCKHCJGFKG;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // [CompilerGeneratedAttribute] Offset: 0xAE3C48
    // private System.Single <ELIDKNNPPCH>k__BackingField
    // Size: 0x4
    // Offset: 0x5E8
    float ELIDKNNPPCH;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3C58
    // private System.Single <GIHKCDBBOJM>k__BackingField
    // Size: 0x4
    // Offset: 0x5EC
    float GIHKCDBBOJM;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3C68
    // private System.Boolean <HJBHNCFCPMA>k__BackingField
    // Size: 0x1
    // Offset: 0x5F0
    bool HJBHNCFCPMA;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HJBHNCFCPMA and: HDBLIHNAEGJ
    char __padding203[0x7] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3C78
    // private System.String <HDBLIHNAEGJ>k__BackingField
    // Size: 0x8
    // Offset: 0x5F8
    ::StringW HDBLIHNAEGJ;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3C88
    // private System.String <PNNGHCAKKCA>k__BackingField
    // Size: 0x8
    // Offset: 0x600
    ::StringW PNNGHCAKKCA;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3C98
    // private System.String <JLMBMAIOLNA>k__BackingField
    // Size: 0x8
    // Offset: 0x608
    ::StringW JLMBMAIOLNA;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3CA8
    // private System.String <OEDIGMJDMAG>k__BackingField
    // Size: 0x8
    // Offset: 0x610
    ::StringW OEDIGMJDMAG;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3CB8
    // private System.Byte <OGNMHFKDEPF>k__BackingField
    // Size: 0x1
    // Offset: 0x618
    uint8_t OGNMHFKDEPF;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3CC8
    // private System.Byte <FCLEFKLEBGO>k__BackingField
    // Size: 0x1
    // Offset: 0x619
    uint8_t FCLEFKLEBGO;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: FCLEFKLEBGO and: FGAEEBMKKOE
    char __padding209[0x6] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3CD8
    // private System.String <FGAEEBMKKOE>k__BackingField
    // Size: 0x8
    // Offset: 0x620
    ::StringW FGAEEBMKKOE;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3CE8
    // private System.Boolean <HFIDPFHDLJB>k__BackingField
    // Size: 0x1
    // Offset: 0x628
    bool HFIDPFHDLJB;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: HFIDPFHDLJB and: HDBODOPJAON
    char __padding211[0x3] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3CF8
    // private System.Single <HDBODOPJAON>k__BackingField
    // Size: 0x4
    // Offset: 0x62C
    float HDBODOPJAON;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [CompilerGeneratedAttribute] Offset: 0xAE3D08
    // private System.String <GCBOMNPJLOM>k__BackingField
    // Size: 0x8
    // Offset: 0x630
    ::StringW GCBOMNPJLOM;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3D18
    // private System.String <IKCGBAIGFOJ>k__BackingField
    // Size: 0x8
    // Offset: 0x638
    ::StringW IKCGBAIGFOJ;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3D28
    // private System.Boolean <ANPDNPDNHDN>k__BackingField
    // Size: 0x1
    // Offset: 0x640
    bool ANPDNPDNHDN;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: ANPDNPDNHDN and: PCLNKFKAPCC
    char __padding215[0x3] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3D38
    // private UnityEngine.Quaternion <PCLNKFKAPCC>k__BackingField
    // Size: 0x10
    // Offset: 0x644
    ::UnityEngine::Quaternion PCLNKFKAPCC;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // [CompilerGeneratedAttribute] Offset: 0xAE3D48
    // private UnityEngine.Quaternion <NFBNGLJCDOE>k__BackingField
    // Size: 0x10
    // Offset: 0x654
    ::UnityEngine::Quaternion NFBNGLJCDOE;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // Padding between fields: NFBNGLJCDOE and: MAJOGJOPMDM
    char __padding217[0x4] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3D58
    // private System.String <MAJOGJOPMDM>k__BackingField
    // Size: 0x8
    // Offset: 0x668
    ::StringW MAJOGJOPMDM;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3D68
    // private System.Byte <HPAOFCKMEAF>k__BackingField
    // Size: 0x1
    // Offset: 0x670
    uint8_t HPAOFCKMEAF;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Boolean AHNPMPECJNH
    // Size: 0x1
    // Offset: 0x671
    bool AHNPMPECJNH;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean FKONEJFOFLM
    // Size: 0x1
    // Offset: 0x672
    bool FKONEJFOFLM;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean GHEKAJKEIBD
    // Size: 0x1
    // Offset: 0x673
    bool GHEKAJKEIBD;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: GHEKAJKEIBD and: FELNJLNABCI
    char __padding222[0x4] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3D78
    // private MagicalActual.PlayerMount <FELNJLNABCI>k__BackingField
    // Size: 0x8
    // Offset: 0x678
    ::MagicalActual::PlayerMount* FELNJLNABCI;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerMount*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3D88
    // private System.Byte <LCCFHAGINGA>k__BackingField
    // Size: 0x1
    // Offset: 0x680
    uint8_t LCCFHAGINGA;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // [CompilerGeneratedAttribute] Offset: 0xAE3D98
    // private System.Boolean <JCAMEPGAHNI>k__BackingField
    // Size: 0x1
    // Offset: 0x681
    bool JCAMEPGAHNI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: JCAMEPGAHNI and: OEOENDCIDKN
    char __padding225[0x6] = {};
    // [CompilerGeneratedAttribute] Offset: 0xAE3DA8
    // private System.Collections.Generic.List`1<System.String> <OEOENDCIDKN>k__BackingField
    // Size: 0x8
    // Offset: 0x688
    ::System::Collections::Generic::List_1<::StringW>* OEOENDCIDKN;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3DB8
    // private System.String[] <PJDMPDEAIMK>k__BackingField
    // Size: 0x8
    // Offset: 0x690
    ::ArrayW<::StringW> PJDMPDEAIMK;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // public System.String partyId
    // Size: 0x8
    // Offset: 0x698
    ::StringW partyId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String teamId
    // Size: 0x8
    // Offset: 0x6A0
    ::StringW teamId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String[] currentAchievements
    // Size: 0x8
    // Offset: 0x6A8
    ::ArrayW<::StringW> currentAchievements;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // public System.Collections.Generic.List`1<System.Single> achievementPercentages
    // Size: 0x8
    // Offset: 0x6B0
    ::System::Collections::Generic::List_1<float>* achievementPercentages;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<float>*) == 0x8);
    // private UnityEngine.Transform KLFOFJNLDFD
    // Size: 0x8
    // Offset: 0x6B8
    ::UnityEngine::Transform* KLFOFJNLDFD;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public MagicalActual.GrindToolDeployed deployedGrindTool
    // Size: 0x8
    // Offset: 0x6C0
    ::MagicalActual::GrindToolDeployed* deployedGrindTool;
    // Field size check
    static_assert(sizeof(::MagicalActual::GrindToolDeployed*) == 0x8);
    // public UnityEngine.Vector3 grindToolLocation
    // Size: 0xC
    // Offset: 0x6C8
    ::UnityEngine::Vector3 grindToolLocation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public System.Byte grindToolLevel
    // Size: 0x1
    // Offset: 0x6D4
    uint8_t grindToolLevel;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: grindToolLevel and: levelsPast30
    char __padding235[0x3] = {};
    // public System.Int32 levelsPast30
    // Size: 0x4
    // Offset: 0x6D8
    int levelsPast30;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 mountPerkTier
    // Size: 0x4
    // Offset: 0x6DC
    int mountPerkTier;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Collections.Generic.List`1<UnityEngine.Texture> fxTextures
    // Size: 0x8
    // Offset: 0x6E0
    ::System::Collections::Generic::List_1<::UnityEngine::Texture*>* fxTextures;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::Texture*>*) == 0x8);
    // public MagicalActual.BoostBombDeployed deployedBoostBomb
    // Size: 0x8
    // Offset: 0x6E8
    ::MagicalActual::BoostBombDeployed* deployedBoostBomb;
    // Field size check
    static_assert(sizeof(::MagicalActual::BoostBombDeployed*) == 0x8);
    // public UnityEngine.Vector3 boostBombLocation
    // Size: 0xC
    // Offset: 0x6F0
    ::UnityEngine::Vector3 boostBombLocation;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // Padding between fields: boostBombLocation and: currentBoostBomb
    char __padding240[0x4] = {};
    // public MagicalActual.BoostBomb currentBoostBomb
    // Size: 0x8
    // Offset: 0x700
    ::MagicalActual::BoostBomb* currentBoostBomb;
    // Field size check
    static_assert(sizeof(::MagicalActual::BoostBomb*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::GlobalNamespace::IPooling
    operator ::GlobalNamespace::IPooling() noexcept {
      return *reinterpret_cast<::GlobalNamespace::IPooling*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Boolean isDummyAvatar
    [[deprecated("Use field access instead!")]] bool& dyn_isDummyAvatar();
    // Get instance field reference: public UnityEngine.GameObject leftController
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_leftController();
    // Get instance field reference: public UnityEngine.GameObject rightController
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_rightController();
    // Get instance field reference: public UnityEngine.GameObject playerBase
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_playerBase();
    // Get instance field reference: public UnityEngine.GameObject playerHead
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_playerHead();
    // Get instance field reference: public UnityEngine.Transform playerMountPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_playerMountPosition();
    // Get instance field reference: public UnityEngine.Transform startSummonMountPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_startSummonMountPosition();
    // Get instance field reference: private MagicalActual.HoverOverGround IMNMNEKLEBO
    [[deprecated("Use field access instead!")]] ::MagicalActual::HoverOverGround*& dyn_IMNMNEKLEBO();
    // Get instance field reference: private UnityEngine.GameObject LNKGODGNNFD
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_LNKGODGNNFD();
    // Get instance field reference: private UnityEngine.GameObject HODKEKHJBCJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_HODKEKHJBCJ();
    // Get instance field reference: private MagicalActual.PlayerTool[] BBJOBDADDEN
    [[deprecated("Use field access instead!")]] ::ArrayW<::MagicalActual::PlayerTool*>& dyn_BBJOBDADDEN();
    // Get instance field reference: private MagicalActual.PlayerTool[] AEJFAKIPNAD
    [[deprecated("Use field access instead!")]] ::ArrayW<::MagicalActual::PlayerTool*>& dyn_AEJFAKIPNAD();
    // Get instance field reference: private ExtUI.InventoryItemInstance ENJHIMCGIGG
    [[deprecated("Use field access instead!")]] ::ExtUI::InventoryItemInstance*& dyn_ENJHIMCGIGG();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: public System.Single timeWhenPingSent
    [[deprecated("Use field access instead!")]] float& dyn_timeWhenPingSent();
    // Get instance field reference: public System.Boolean localControl
    [[deprecated("Use field access instead!")]] bool& dyn_localControl();
    // Get instance field reference: public MagicalActual.TopHud topHud
    [[deprecated("Use field access instead!")]] ::MagicalActual::TopHud*& dyn_topHud();
    // Get instance field reference: public UnityEngine.GameObject vfxLeveled
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxLeveled();
    // Get instance field reference: public SuperTextMesh resurrectCooldownTimer
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& dyn_resurrectCooldownTimer();
    // Get instance field reference: public UnityEngine.Material playerSkinMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_playerSkinMaterial();
    // Get instance field reference: public UnityEngine.Material playerGhostMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_playerGhostMaterial();
    // Get instance field reference: public UnityEngine.Material dyedGearMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_dyedGearMaterial();
    // Get instance field reference: private MagicalActual.FaceController <MDJMKEKMEDF>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::FaceController*& dyn_$MDJMKEKMEDF$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Vector3> <IPCEPLFGLJP>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Vector3>*& dyn_$IPCEPLFGLJP$k__BackingField();
    // Get instance field reference: public UnityEngine.GameObject isSpeakingIndicator
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_isSpeakingIndicator();
    // Get instance field reference: public UnityEngine.GameObject isMutedIndicator
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_isMutedIndicator();
    // Get instance field reference: private System.Single EJMFFBGJLPP
    [[deprecated("Use field access instead!")]] float& dyn_EJMFFBGJLPP();
    // Get instance field reference: private System.Single EGMFFJEMCEK
    [[deprecated("Use field access instead!")]] float& dyn_EGMFFJEMCEK();
    // Get instance field reference: private System.Boolean <NJGOJGLAKLL>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$NJGOJGLAKLL$k__BackingField();
    // Get instance field reference: public System.Double speakerVolume
    [[deprecated("Use field access instead!")]] double& dyn_speakerVolume();
    // Get instance field reference: private UnityEngine.GameObject FNPNJLGDPKJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_FNPNJLGDPKJ();
    // Get instance field reference: public UnityEngine.GameObject commsTemplate
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_commsTemplate();
    // Get instance field reference: private System.String KIPDGIFLKIA
    [[deprecated("Use field access instead!")]] ::StringW& dyn_KIPDGIFLKIA();
    // Get instance field reference: private System.Boolean EPFEEANIFMM
    [[deprecated("Use field access instead!")]] bool& dyn_EPFEEANIFMM();
    // Get instance field reference: private System.Single JNPPMCGLMFG
    [[deprecated("Use field access instead!")]] float& dyn_JNPPMCGLMFG();
    // Get instance field reference: private MagicalActual.NetEntity <JANFCAJMFMP>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_$JANFCAJMFMP$k__BackingField();
    // Get instance field reference: public MagicalActual.PlayerClass[] classObjects
    [[deprecated("Use field access instead!")]] ::ArrayW<::MagicalActual::PlayerClass*>& dyn_classObjects();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> OELAHBEGJKL
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*& dyn_OELAHBEGJKL();
    // Get instance field reference: public MagicalActual.PlayerClass currentActiveClass
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerClass*& dyn_currentActiveClass();
    // Get instance field reference: public UnityEngine.GameObject playerHud
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_playerHud();
    // Get instance field reference: public ProgressBarPro superBar
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ProgressBarPro*& dyn_superBar();
    // Get instance field reference: public ProgressBarPro classBar
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ProgressBarPro*& dyn_classBar();
    // Get instance field reference: public ProgressBarPro staminaBar
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ProgressBarPro*& dyn_staminaBar();
    // Get instance field reference: public SuperTextMesh bountyStatus
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& dyn_bountyStatus();
    // Get instance field reference: public UnityEngine.UI.Text classBarText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_classBarText();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,ExtUI.InventoryItemInstance> <BLIGDKCIIJK>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::ExtUI::InventoryItemInstance*>*& dyn_$BLIGDKCIIJK$k__BackingField();
    // Get instance field reference: private System.Int32[] CGDANEKHMFP
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_CGDANEKHMFP();
    // Get instance field reference: private System.Single EAPFFFHGLBE
    [[deprecated("Use field access instead!")]] float& dyn_EAPFFFHGLBE();
    // Get instance field reference: private System.Single EHKCPKLHIKC
    [[deprecated("Use field access instead!")]] float& dyn_EHKCPKLHIKC();
    // Get instance field reference: private System.Boolean OJJKGAADEAC
    [[deprecated("Use field access instead!")]] bool& dyn_OJJKGAADEAC();
    // Get instance field reference: private System.Int32 GPPLIOOEONI
    [[deprecated("Use field access instead!")]] int& dyn_GPPLIOOEONI();
    // Get instance field reference: private MagicalActual.Monster <INCGNEHCAOC>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_$INCGNEHCAOC$k__BackingField();
    // Get instance field reference: private MagicalActual.AvatarAppearance EOFFJKCJLIP
    [[deprecated("Use field access instead!")]] ::MagicalActual::AvatarAppearance*& dyn_EOFFJKCJLIP();
    // Get instance field reference: public SKManager myManager
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SKManager*& dyn_myManager();
    // Get instance field reference: private UnityEngine.Cloth FCFOCFPODJI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Cloth*& dyn_FCFOCFPODJI();
    // Get instance field reference: public UnityEngine.GameObject grabberLeft
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_grabberLeft();
    // Get instance field reference: public UnityEngine.GameObject grabberRight
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_grabberRight();
    // Get instance field reference: private UnityEngine.GameObject JHHLCOENFIL
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_JHHLCOENFIL();
    // Get instance field reference: private UnityEngine.GameObject PLAGOGDIKML
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_PLAGOGDIKML();
    // Get instance field reference: private MagicalActual.Teleporter AICFMHMHDEN
    [[deprecated("Use field access instead!")]] ::MagicalActual::Teleporter*& dyn_AICFMHMHDEN();
    // Get instance field reference: private MagicalActual.Teleporter JGLMNDDNPLM
    [[deprecated("Use field access instead!")]] ::MagicalActual::Teleporter*& dyn_JGLMNDDNPLM();
    // Get instance field reference: public UnityEngine.GameObject fakeTeleporterLeft
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_fakeTeleporterLeft();
    // Get instance field reference: public UnityEngine.GameObject fakeTeleporterRight
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_fakeTeleporterRight();
    // Get instance field reference: private MagicalActual.FakeTeleporter JEOOBEJBGAI
    [[deprecated("Use field access instead!")]] ::MagicalActual::FakeTeleporter*& dyn_JEOOBEJBGAI();
    // Get instance field reference: private MagicalActual.FakeTeleporter HGFPENCJOND
    [[deprecated("Use field access instead!")]] ::MagicalActual::FakeTeleporter*& dyn_HGFPENCJOND();
    // Get instance field reference: public UnityEngine.GameObject headGearSlot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_headGearSlot();
    // Get instance field reference: public UnityEngine.GameObject headGearSlotLod1
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_headGearSlotLod1();
    // Get instance field reference: public UnityEngine.GameObject chestGearSlot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_chestGearSlot();
    // Get instance field reference: public UnityEngine.GameObject chestGearSlotLod1
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_chestGearSlotLod1();
    // Get instance field reference: public UnityEngine.GameObject gloveGearSlotLeft
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_gloveGearSlotLeft();
    // Get instance field reference: public UnityEngine.GameObject gloveGearSlotLeftLod1
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_gloveGearSlotLeftLod1();
    // Get instance field reference: public UnityEngine.GameObject gloveGearSlotRight
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_gloveGearSlotRight();
    // Get instance field reference: public UnityEngine.GameObject gloveGearSlotRightLod1
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_gloveGearSlotRightLod1();
    // Get instance field reference: public UnityEngine.GameObject shoulerGearSlot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_shoulerGearSlot();
    // Get instance field reference: public UnityEngine.GameObject shoulderGearSlotLod1
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_shoulderGearSlotLod1();
    // Get instance field reference: public UnityEngine.GameObject backGearSlot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_backGearSlot();
    // Get instance field reference: public UnityEngine.GameObject backGearSlotLod1
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_backGearSlotLod1();
    // Get instance field reference: public UnityEngine.GameObject wristGearSlotLeft
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_wristGearSlotLeft();
    // Get instance field reference: public UnityEngine.GameObject wristGearSlotRight
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_wristGearSlotRight();
    // Get instance field reference: public UnityEngine.GameObject ringGearSlotLeft
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ringGearSlotLeft();
    // Get instance field reference: public UnityEngine.GameObject ringGearSlotRight
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ringGearSlotRight();
    // Get instance field reference: public UnityEngine.GameObject hairSlot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_hairSlot();
    // Get instance field reference: public UnityEngine.GameObject hairSlotLod1
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_hairSlotLod1();
    // Get instance field reference: public UnityEngine.GameObject hairClippedSlot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_hairClippedSlot();
    // Get instance field reference: public UnityEngine.GameObject hairClippedSlotLod1
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_hairClippedSlotLod1();
    // Get instance field reference: public UnityEngine.GameObject noseSlot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_noseSlot();
    // Get instance field reference: public UnityEngine.GameObject earSlot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_earSlot();
    // Get instance field reference: public UnityEngine.GameObject backpackLevel1
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_backpackLevel1();
    // Get instance field reference: public UnityEngine.GameObject backpackLevel2
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_backpackLevel2();
    // Get instance field reference: public UnityEngine.Renderer[] lod0Renderers
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Renderer*>& dyn_lod0Renderers();
    // Get instance field reference: public UnityEngine.Renderer[] lod1Renderers
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Renderer*>& dyn_lod1Renderers();
    // Get instance field reference: public UnityEngine.Renderer[] lod2Renderers
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Renderer*>& dyn_lod2Renderers();
    // Get instance field reference: public UnityEngine.Renderer[] lod3Renderers
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Renderer*>& dyn_lod3Renderers();
    // Get instance field reference: public UnityEngine.UI.Image slot1CooldownGraphic
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_slot1CooldownGraphic();
    // Get instance field reference: public UnityEngine.UI.Image slot2CooldownGraphic
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& dyn_slot2CooldownGraphic();
    // Get instance field reference: private System.Single PHCOFDILEIP
    [[deprecated("Use field access instead!")]] float& dyn_PHCOFDILEIP();
    // Get instance field reference: private System.Single MPKHODMLNJL
    [[deprecated("Use field access instead!")]] float& dyn_MPKHODMLNJL();
    // Get instance field reference: private System.Single FIPALALHGAM
    [[deprecated("Use field access instead!")]] float& dyn_FIPALALHGAM();
    // Get instance field reference: private System.Single NPPFNIGKMBA
    [[deprecated("Use field access instead!")]] float& dyn_NPPFNIGKMBA();
    // Get instance field reference: public UnityEngine.GameObject[] teleportTrailPrefabs
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& dyn_teleportTrailPrefabs();
    // Get instance field reference: public UnityEngine.GameObject enemyDisplay
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_enemyDisplay();
    // Get instance field reference: public UnityEngine.GameObject soulDisplay
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_soulDisplay();
    // Get instance field reference: public UnityEngine.GameObject lod3Display
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_lod3Display();
    // Get instance field reference: public SuperTextMesh runeNotification
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::SuperTextMesh*& dyn_runeNotification();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> BGDDHPEGMAA
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_BGDDHPEGMAA();
    // Get instance field reference: private System.Single BPGCODKDPPE
    [[deprecated("Use field access instead!")]] float& dyn_BPGCODKDPPE();
    // Get instance field reference: private System.Single PBCNOLPEOGD
    [[deprecated("Use field access instead!")]] float& dyn_PBCNOLPEOGD();
    // Get instance field reference: public MagicalActual.SpecialPopupManager specialPopupManager
    [[deprecated("Use field access instead!")]] ::MagicalActual::SpecialPopupManager*& dyn_specialPopupManager();
    // Get instance field reference: private UnityEngine.GameObject IGOBDMPDAED
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_IGOBDMPDAED();
    // Get instance field reference: private UnityEngine.Color DNBDAECCIKK
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_DNBDAECCIKK();
    // Get instance field reference: private UnityEngine.Color BEAHHEPEHBA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_BEAHHEPEHBA();
    // Get instance field reference: private UnityEngine.Color EOLPBKPPODG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_EOLPBKPPODG();
    // Get instance field reference: private System.Boolean <NFNFLKCHCFD>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$NFNFLKCHCFD$k__BackingField();
    // Get instance field reference: private System.Boolean BACJLLMMNDA
    [[deprecated("Use field access instead!")]] bool& dyn_BACJLLMMNDA();
    // Get instance field reference: private System.Boolean <ONAMECHEGPM>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$ONAMECHEGPM$k__BackingField();
    // Get instance field reference: private System.Boolean <EOADGKODIHA>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$EOADGKODIHA$k__BackingField();
    // Get instance field reference: private System.Boolean <LPNCGBJFBDK>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$LPNCGBJFBDK$k__BackingField();
    // Get instance field reference: private UnityEngine.Color PJINHJLNLBC
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_PJINHJLNLBC();
    // Get instance field reference: private UnityEngine.Color OLLFFNOONAP
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_OLLFFNOONAP();
    // Get instance field reference: private UnityEngine.Color LKDJIIIJFAJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_LKDJIIIJFAJ();
    // Get instance field reference: private UnityEngine.Color GNKIJBFJOGO
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_GNKIJBFJOGO();
    // Get instance field reference: private UnityEngine.Color MPDHHPCAGFB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_MPDHHPCAGFB();
    // Get instance field reference: private UnityEngine.Color AAHDKGAALMA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_AAHDKGAALMA();
    // Get instance field reference: private UnityEngine.Color KGOEKCLNECG
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_KGOEKCLNECG();
    // Get instance field reference: private UnityEngine.Color DEGILMKMLEI
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_DEGILMKMLEI();
    // Get instance field reference: private UnityEngine.Color JMPGHHJNKGN
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_JMPGHHJNKGN();
    // Get instance field reference: private UnityEngine.Color LCFJLAFLOGC
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_LCFJLAFLOGC();
    // Get instance field reference: private UnityEngine.Color KCKIMCKDPMJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_KCKIMCKDPMJ();
    // Get instance field reference: private UnityEngine.Color JCOONOEMCCN
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_JCOONOEMCCN();
    // Get instance field reference: private UnityEngine.Vector3 PABODGFCCPB
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_PABODGFCCPB();
    // Get instance field reference: private UnityEngine.Quaternion GECBOKLOFKJ
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_GECBOKLOFKJ();
    // Get instance field reference: private System.Single DJKPHCOJBFD
    [[deprecated("Use field access instead!")]] float& dyn_DJKPHCOJBFD();
    // Get instance field reference: private System.Single DMDCJOGKEII
    [[deprecated("Use field access instead!")]] float& dyn_DMDCJOGKEII();
    // Get instance field reference: private System.Int32 PAAFEPICDJO
    [[deprecated("Use field access instead!")]] int& dyn_PAAFEPICDJO();
    // Get instance field reference: private System.Boolean NADNHHBLKDO
    [[deprecated("Use field access instead!")]] bool& dyn_NADNHHBLKDO();
    // Get instance field reference: private UnityEngine.GameObject JNHGDCCKIOI
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_JNHGDCCKIOI();
    // Get instance field reference: private UnityEngine.GameObject FDGLLFIIPCA
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_FDGLLFIIPCA();
    // Get instance field reference: private System.Boolean <OPCKMPONFGP>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$OPCKMPONFGP$k__BackingField();
    // Get instance field reference: private System.Boolean <ALLNLOIDOCG>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$ALLNLOIDOCG$k__BackingField();
    // Get instance field reference: private System.String <PDMHPDLJMCG>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$PDMHPDLJMCG$k__BackingField();
    // Get instance field reference: private System.String[] <KILMFODCKFA>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$KILMFODCKFA$k__BackingField();
    // Get instance field reference: private System.String[] <EOBAHKCIMDF>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$EOBAHKCIMDF$k__BackingField();
    // Get instance field reference: private System.Boolean <HHKIMKKKLEG>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$HHKIMKKKLEG$k__BackingField();
    // Get instance field reference: private System.Boolean <BEAALFEHEMK>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$BEAALFEHEMK$k__BackingField();
    // Get instance field reference: private System.Boolean <AFIMMKINDHK>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$AFIMMKINDHK$k__BackingField();
    // Get instance field reference: private System.String[] <BDHHHLBEHNK>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$BDHHHLBEHNK$k__BackingField();
    // Get instance field reference: private System.String[] <CKFACGGBAIF>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$CKFACGGBAIF$k__BackingField();
    // Get instance field reference: private System.Boolean <EOIHICBFNIE>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$EOIHICBFNIE$k__BackingField();
    // Get instance field reference: private System.Int32 <NJKLCPOEBHF>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$NJKLCPOEBHF$k__BackingField();
    // Get instance field reference: private System.Int32 <GMDHIGGMGPG>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$GMDHIGGMGPG$k__BackingField();
    // Get instance field reference: private System.String[] <DENDMIBBGPA>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$DENDMIBBGPA$k__BackingField();
    // Get instance field reference: private System.String[] <ODHPNAMADEB>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$ODHPNAMADEB$k__BackingField();
    // Get instance field reference: private System.Boolean[] <BFJKKKPGKFK>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<bool>& dyn_$BFJKKKPGKFK$k__BackingField();
    // Get instance field reference: private System.Int32 <CLGCLCFLHDF>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$CLGCLCFLHDF$k__BackingField();
    // Get instance field reference: private MagicalActual.WorldMenu PFJDDCPLNNI
    [[deprecated("Use field access instead!")]] ::MagicalActual::WorldMenu*& dyn_PFJDDCPLNNI();
    // Get instance field reference: private UnityEngine.Vector3 CLHAIFFHBBL
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_CLHAIFFHBBL();
    // Get instance field reference: private System.Single NDBKEHBBFIM
    [[deprecated("Use field access instead!")]] float& dyn_NDBKEHBBFIM();
    // Get instance field reference: private MagicalActual.ObjectHighlighter BGKMOLDAMCD
    [[deprecated("Use field access instead!")]] ::MagicalActual::ObjectHighlighter*& dyn_BGKMOLDAMCD();
    // Get instance field reference: private System.Boolean <JOKEANHMALO>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$JOKEANHMALO$k__BackingField();
    // Get instance field reference: private System.Boolean <KIIOLIBEOEK>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$KIIOLIBEOEK$k__BackingField();
    // Get instance field reference: private System.Boolean <DOBIGIBMGBC>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$DOBIGIBMGBC$k__BackingField();
    // Get instance field reference: private System.Single KFIHCBGPFAO
    [[deprecated("Use field access instead!")]] float& dyn_KFIHCBGPFAO();
    // Get instance field reference: private System.Single FPNHDLOOMLK
    [[deprecated("Use field access instead!")]] float& dyn_FPNHDLOOMLK();
    // Get instance field reference: private System.Int64 FHFBLMEFJLP
    [[deprecated("Use field access instead!")]] int64_t& dyn_FHFBLMEFJLP();
    // Get instance field reference: private System.Single BJKAACEGIOJ
    [[deprecated("Use field access instead!")]] float& dyn_BJKAACEGIOJ();
    // Get instance field reference: private System.Single MDBAGBJDFDC
    [[deprecated("Use field access instead!")]] float& dyn_MDBAGBJDFDC();
    // Get instance field reference: private System.Byte <OCLILHEKJDI>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$OCLILHEKJDI$k__BackingField();
    // Get instance field reference: private MagicalActual.Grabber <AKOCFJMKAPN>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::Grabber*& dyn_$AKOCFJMKAPN$k__BackingField();
    // Get instance field reference: private MagicalActual.Grabber <GKJNNAJPCBG>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::Grabber*& dyn_$GKJNNAJPCBG$k__BackingField();
    // Get instance field reference: private System.Byte <EKDCMMMOIBO>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$EKDCMMMOIBO$k__BackingField();
    // Get instance field reference: private System.Int32 BBNIKFKCFAH
    [[deprecated("Use field access instead!")]] int& dyn_BBNIKFKCFAH();
    // Get instance field reference: private System.Int32 KEHLNLBAFHA
    [[deprecated("Use field access instead!")]] int& dyn_KEHLNLBAFHA();
    // Get instance field reference: private System.UInt16 IAPBONGAJLK
    [[deprecated("Use field access instead!")]] uint16_t& dyn_IAPBONGAJLK();
    // Get instance field reference: private System.Boolean AALBHOKGIOD
    [[deprecated("Use field access instead!")]] bool& dyn_AALBHOKGIOD();
    // Get instance field reference: private System.String <HOENAJNNOAN>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$HOENAJNNOAN$k__BackingField();
    // Get instance field reference: public System.String equipment
    [[deprecated("Use field access instead!")]] ::StringW& dyn_equipment();
    // Get instance field reference: public System.String playerPrefs
    [[deprecated("Use field access instead!")]] ::StringW& dyn_playerPrefs();
    // Get instance field reference: private System.Byte <IJJNLMHHHCL>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$IJJNLMHHHCL$k__BackingField();
    // Get instance field reference: private System.Byte <NCACHDJOOND>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$NCACHDJOOND$k__BackingField();
    // Get instance field reference: private System.Byte <NIBBECIMOHP>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$NIBBECIMOHP$k__BackingField();
    // Get instance field reference: public UnityEngine.Vector3 basePosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_basePosition();
    // Get instance field reference: public UnityEngine.Quaternion baseRotation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_baseRotation();
    // Get instance field reference: public UnityEngine.Quaternion forcedRotation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_forcedRotation();
    // Get instance field reference: public System.Boolean forceMyRotation
    [[deprecated("Use field access instead!")]] bool& dyn_forceMyRotation();
    // Get instance field reference: private System.UInt16 <MILMLIOLBDA>k__BackingField
    [[deprecated("Use field access instead!")]] uint16_t& dyn_$MILMLIOLBDA$k__BackingField();
    // Get instance field reference: private System.String <GPAAMHPKHML>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$GPAAMHPKHML$k__BackingField();
    // Get instance field reference: private System.String <GLHEJOCEGNJ>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$GLHEJOCEGNJ$k__BackingField();
    // Get instance field reference: private System.Byte <NCLACBKFIFB>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$NCLACBKFIFB$k__BackingField();
    // Get instance field reference: private System.Single <PMAODJGHCEK>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$PMAODJGHCEK$k__BackingField();
    // Get instance field reference: private System.String <ONDDFMIGJNH>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$ONDDFMIGJNH$k__BackingField();
    // Get instance field reference: private System.Int32 <EKNMFCHGAKN>k__BackingField
    [[deprecated("Use field access instead!")]] int& dyn_$EKNMFCHGAKN$k__BackingField();
    // Get instance field reference: private System.Single <PLMHJHBEPHL>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$PLMHJHBEPHL$k__BackingField();
    // Get instance field reference: private System.Single <PCFPBDMFMBE>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$PCFPBDMFMBE$k__BackingField();
    // Get instance field reference: private System.Byte <GCGAMLDCHGL>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$GCGAMLDCHGL$k__BackingField();
    // Get instance field reference: private System.Single <PDGPOGJHJCA>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$PDGPOGJHJCA$k__BackingField();
    // Get instance field reference: private System.Single <PPDDCAPKCJM>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$PPDDCAPKCJM$k__BackingField();
    // Get instance field reference: private System.String <NDJLKGMJJIP>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$NDJLKGMJJIP$k__BackingField();
    // Get instance field reference: private System.Boolean <HJOIMJJHDPC>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$HJOIMJJHDPC$k__BackingField();
    // Get instance field reference: private System.Boolean <GAPPALCEOGO>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$GAPPALCEOGO$k__BackingField();
    // Get instance field reference: private System.Boolean <JGAECBKOELP>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$JGAECBKOELP$k__BackingField();
    // Get instance field reference: private UnityEngine.Vector3 <MMCKHCJGFKG>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_$MMCKHCJGFKG$k__BackingField();
    // Get instance field reference: private System.Single <ELIDKNNPPCH>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$ELIDKNNPPCH$k__BackingField();
    // Get instance field reference: private System.Single <GIHKCDBBOJM>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$GIHKCDBBOJM$k__BackingField();
    // Get instance field reference: private System.Boolean <HJBHNCFCPMA>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$HJBHNCFCPMA$k__BackingField();
    // Get instance field reference: private System.String <HDBLIHNAEGJ>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$HDBLIHNAEGJ$k__BackingField();
    // Get instance field reference: private System.String <PNNGHCAKKCA>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$PNNGHCAKKCA$k__BackingField();
    // Get instance field reference: private System.String <JLMBMAIOLNA>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$JLMBMAIOLNA$k__BackingField();
    // Get instance field reference: private System.String <OEDIGMJDMAG>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$OEDIGMJDMAG$k__BackingField();
    // Get instance field reference: private System.Byte <OGNMHFKDEPF>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$OGNMHFKDEPF$k__BackingField();
    // Get instance field reference: private System.Byte <FCLEFKLEBGO>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$FCLEFKLEBGO$k__BackingField();
    // Get instance field reference: private System.String <FGAEEBMKKOE>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$FGAEEBMKKOE$k__BackingField();
    // Get instance field reference: private System.Boolean <HFIDPFHDLJB>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$HFIDPFHDLJB$k__BackingField();
    // Get instance field reference: private System.Single <HDBODOPJAON>k__BackingField
    [[deprecated("Use field access instead!")]] float& dyn_$HDBODOPJAON$k__BackingField();
    // Get instance field reference: private System.String <GCBOMNPJLOM>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$GCBOMNPJLOM$k__BackingField();
    // Get instance field reference: private System.String <IKCGBAIGFOJ>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$IKCGBAIGFOJ$k__BackingField();
    // Get instance field reference: private System.Boolean <ANPDNPDNHDN>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$ANPDNPDNHDN$k__BackingField();
    // Get instance field reference: private UnityEngine.Quaternion <PCLNKFKAPCC>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_$PCLNKFKAPCC$k__BackingField();
    // Get instance field reference: private UnityEngine.Quaternion <NFBNGLJCDOE>k__BackingField
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_$NFBNGLJCDOE$k__BackingField();
    // Get instance field reference: private System.String <MAJOGJOPMDM>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$MAJOGJOPMDM$k__BackingField();
    // Get instance field reference: private System.Byte <HPAOFCKMEAF>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$HPAOFCKMEAF$k__BackingField();
    // Get instance field reference: private System.Boolean AHNPMPECJNH
    [[deprecated("Use field access instead!")]] bool& dyn_AHNPMPECJNH();
    // Get instance field reference: private System.Boolean FKONEJFOFLM
    [[deprecated("Use field access instead!")]] bool& dyn_FKONEJFOFLM();
    // Get instance field reference: private System.Boolean GHEKAJKEIBD
    [[deprecated("Use field access instead!")]] bool& dyn_GHEKAJKEIBD();
    // Get instance field reference: private MagicalActual.PlayerMount <FELNJLNABCI>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerMount*& dyn_$FELNJLNABCI$k__BackingField();
    // Get instance field reference: private System.Byte <LCCFHAGINGA>k__BackingField
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$LCCFHAGINGA$k__BackingField();
    // Get instance field reference: private System.Boolean <JCAMEPGAHNI>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$JCAMEPGAHNI$k__BackingField();
    // Get instance field reference: private System.Collections.Generic.List`1<System.String> <OEOENDCIDKN>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_$OEOENDCIDKN$k__BackingField();
    // Get instance field reference: private System.String[] <PJDMPDEAIMK>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$PJDMPDEAIMK$k__BackingField();
    // Get instance field reference: public System.String partyId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_partyId();
    // Get instance field reference: public System.String teamId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_teamId();
    // Get instance field reference: public System.String[] currentAchievements
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_currentAchievements();
    // Get instance field reference: public System.Collections.Generic.List`1<System.Single> achievementPercentages
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& dyn_achievementPercentages();
    // Get instance field reference: private UnityEngine.Transform KLFOFJNLDFD
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_KLFOFJNLDFD();
    // Get instance field reference: public MagicalActual.GrindToolDeployed deployedGrindTool
    [[deprecated("Use field access instead!")]] ::MagicalActual::GrindToolDeployed*& dyn_deployedGrindTool();
    // Get instance field reference: public UnityEngine.Vector3 grindToolLocation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_grindToolLocation();
    // Get instance field reference: public System.Byte grindToolLevel
    [[deprecated("Use field access instead!")]] uint8_t& dyn_grindToolLevel();
    // Get instance field reference: public System.Int32 levelsPast30
    [[deprecated("Use field access instead!")]] int& dyn_levelsPast30();
    // Get instance field reference: public System.Int32 mountPerkTier
    [[deprecated("Use field access instead!")]] int& dyn_mountPerkTier();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.Texture> fxTextures
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Texture*>*& dyn_fxTextures();
    // Get instance field reference: public MagicalActual.BoostBombDeployed deployedBoostBomb
    [[deprecated("Use field access instead!")]] ::MagicalActual::BoostBombDeployed*& dyn_deployedBoostBomb();
    // Get instance field reference: public UnityEngine.Vector3 boostBombLocation
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_boostBombLocation();
    // Get instance field reference: public MagicalActual.BoostBomb currentBoostBomb
    [[deprecated("Use field access instead!")]] ::MagicalActual::BoostBomb*& dyn_currentBoostBomb();
    // public MagicalActual.Grabber LCCFHGHOPBB()
    // Offset: 0xDA0AA8
    ::MagicalActual::Grabber* LCCFHGHOPBB();
    // public System.Boolean isSuperActive()
    // Offset: 0xDA0AB0
    bool isSuperActive();
    // public UnityEngine.Vector3 get_tombstoneLocation()
    // Offset: 0xDA0AB8
    ::UnityEngine::Vector3 get_tombstoneLocation();
    // public System.String[] get_currentZoneShards()
    // Offset: 0xDA0AC8
    ::ArrayW<::StringW> get_currentZoneShards();
    // public System.Single get_logoutTimer()
    // Offset: 0xDA0AD0
    float get_logoutTimer();
    // public System.Void SetCooldownForTool(System.String PADCEOIPEMC, System.Single MKLMFNHLEHA)
    // Offset: 0xDA0AD8
    void SetCooldownForTool(::StringW PADCEOIPEMC, float MKLMFNHLEHA);
    // public UnityEngine.Quaternion PFJBPHECGKC()
    // Offset: 0xDA0B64
    ::UnityEngine::Quaternion PFJBPHECGKC();
    // private System.Void GEAGAIFPLAL(System.Int32 MMMEIONJJFJ)
    // Offset: 0xDA0B78
    void GEAGAIFPLAL(int MMMEIONJJFJ);
    // private System.Void KFPHAPELFFH()
    // Offset: 0xDA0B80
    void KFPHAPELFFH();
    // private System.Void BOAIICEJMKL(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDA0BD8
    void BOAIICEJMKL(bool MMMEIONJJFJ);
    // public System.Boolean get_isPartyLeader()
    // Offset: 0xDA0BE4
    bool get_isPartyLeader();
    // private System.Void KJLCNMJCMJE(System.Byte MMMEIONJJFJ)
    // Offset: 0xDA0BEC
    void KJLCNMJCMJE(uint8_t MMMEIONJJFJ);
    // public System.Single get_zoneTimeRemaining()
    // Offset: 0xDA0BF4
    float get_zoneTimeRemaining();
    // public System.Int32 get_currency()
    // Offset: 0xDA0BFC
    int get_currency();
    // private System.Void DLDJGCKEJMB(System.Boolean BJPAOMAMDAI)
    // Offset: 0xDA0C04
    void DLDJGCKEJMB(bool BJPAOMAMDAI);
    // public System.Void DLMHEDPLDBI(System.Byte GPKOKOJALNP)
    // Offset: 0xDA1010
    void DLMHEDPLDBI(uint8_t GPKOKOJALNP);
    // private System.Void KGIJJKGLKIH(System.Single MMMEIONJJFJ)
    // Offset: 0xDA20C0
    void KGIJJKGLKIH(float MMMEIONJJFJ);
    // private System.Void LLEAOOILBLA()
    // Offset: 0xDA20C8
    void LLEAOOILBLA();
    // public System.Boolean get_isGm()
    // Offset: 0xDA2634
    bool get_isGm();
    // private System.Void EJDOGKJBKKM(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDA263C
    void EJDOGKJBKKM(bool MMMEIONJJFJ);
    // public System.Boolean get_isMounted()
    // Offset: 0xDA0FF0
    bool get_isMounted();
    // public System.Void DisableHandsAndWeapons()
    // Offset: 0xDA2648
    void DisableHandsAndWeapons();
    // public System.Int32 get_currentResidentShard()
    // Offset: 0xDA2780
    int get_currentResidentShard();
    // private System.Void CHEDPKGPOLE(System.Int32 DOKHHJJJLFA, System.Int32 OBBOMMHLOEL, System.Int32 PPIIOLDJENH)
    // Offset: 0xDA2788
    void CHEDPKGPOLE(int DOKHHJJJLFA, int OBBOMMHLOEL, int PPIIOLDJENH);
    // private System.Void CBMAIBEBDKH(System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Vector3> MMMEIONJJFJ)
    // Offset: 0xDA28A4
    void CBMAIBEBDKH(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Vector3>* MMMEIONJJFJ);
    // private System.Void FOAEANFDGNP(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDA0FE4
    void FOAEANFDGNP(bool MMMEIONJJFJ);
    // private System.Void OACGNGNBIKO(System.String MMMEIONJJFJ)
    // Offset: 0xDA28AC
    void OACGNGNBIKO(::StringW MMMEIONJJFJ);
    // public System.Boolean[] get_currentZoneExpiring()
    // Offset: 0xDA28B4
    ::ArrayW<bool> get_currentZoneExpiring();
    // private System.Void MCKICKLDKNJ(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDA28BC
    void MCKICKLDKNJ(bool MMMEIONJJFJ);
    // private System.Void HIFOIADIDIF(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDA28C8
    void HIFOIADIDIF(bool MMMEIONJJFJ);
    // public System.Single ICPNIGINOGE()
    // Offset: 0xDA28D4
    float ICPNIGINOGE();
    // private System.Void HOJCAIMCCAP()
    // Offset: 0xDA28DC
    void HOJCAIMCCAP();
    // public System.Single BJNKLGMLOEI()
    // Offset: 0xDA2A28
    float BJNKLGMLOEI();
    // public MagicalActual.FaceController get_myFaceController()
    // Offset: 0xDA2A30
    ::MagicalActual::FaceController* get_myFaceController();
    // public System.String get_customAppearance()
    // Offset: 0xDA2A38
    ::StringW get_customAppearance();
    // public System.Byte get_primaryWeaponHandIdx()
    // Offset: 0xDA2A40
    uint8_t get_primaryWeaponHandIdx();
    // public System.Void EEFNLOEOODM()
    // Offset: 0xDA2A48
    void EEFNLOEOODM();
    // private System.Void CHGCAMLMDOA(System.Byte MMMEIONJJFJ)
    // Offset: 0xDA2A54
    void CHGCAMLMDOA(uint8_t MMMEIONJJFJ);
    // private System.Void IEENCPMLFOH()
    // Offset: 0xDA2A5C
    void IEENCPMLFOH();
    // public System.Boolean get_inParty()
    // Offset: 0xDA2A74
    bool get_inParty();
    // private System.Void FGEHMDKJHNG(System.String MMMEIONJJFJ)
    // Offset: 0xDA2A7C
    void FGEHMDKJHNG(::StringW MMMEIONJJFJ);
    // public System.String get_surname()
    // Offset: 0xDA2A84
    ::StringW get_surname();
    // private System.Void NFPGBJMHKIP(System.String MMMEIONJJFJ)
    // Offset: 0xDA2A8C
    void NFPGBJMHKIP(::StringW MMMEIONJJFJ);
    // public System.Byte get_backpackLevel()
    // Offset: 0xDA2A20
    uint8_t get_backpackLevel();
    // public System.Void ResetRigBasedAdjustments()
    // Offset: 0xDA2A94
    void ResetRigBasedAdjustments();
    // public System.Void PoolingReset()
    // Offset: 0xDA2B58
    void PoolingReset();
    // public System.String[] get_partyMemberIds()
    // Offset: 0xDA39C0
    ::ArrayW<::StringW> get_partyMemberIds();
    // public System.Boolean get_showHelm()
    // Offset: 0xDA39C8
    bool get_showHelm();
    // public System.String GetFontLetterForRune(System.Byte JHBJCIKGHIL)
    // Offset: 0xDA39D0
    ::StringW GetFontLetterForRune(uint8_t JHBJCIKGHIL);
    // private System.Void DFOLLKNFKIP(UnityEngine.Quaternion MMMEIONJJFJ)
    // Offset: 0xDA3A3C
    void DFOLLKNFKIP(::UnityEngine::Quaternion MMMEIONJJFJ);
    // private System.Void BCGFDMIHCFE(System.Byte MMMEIONJJFJ)
    // Offset: 0xDA3A50
    void BCGFDMIHCFE(uint8_t MMMEIONJJFJ);
    // private System.Void BMJDLBCLCFN(System.String[] MMMEIONJJFJ)
    // Offset: 0xDA3A58
    void BMJDLBCLCFN(::ArrayW<::StringW> MMMEIONJJFJ);
    // public System.Void ForceEarStyle(System.Byte LJMNLILKKBG)
    // Offset: 0xDA3A60
    void ForceEarStyle(uint8_t LJMNLILKKBG);
    // private System.Void HFBFCBFCMOK(System.String MMMEIONJJFJ)
    // Offset: 0xDA3BD0
    void HFBFCBFCMOK(::StringW MMMEIONJJFJ);
    // private System.Void KLLFJHOKAMM(MagicalActual.FaceController MMMEIONJJFJ)
    // Offset: 0xDA3BD8
    void KLLFJHOKAMM(::MagicalActual::FaceController* MMMEIONJJFJ);
    // private System.Void KKDJECFBLJF(System.String MMMEIONJJFJ)
    // Offset: 0xDA3BE0
    void KKDJECFBLJF(::StringW MMMEIONJJFJ);
    // private System.Void OnDestroy()
    // Offset: 0xDA3BE8
    void OnDestroy();
    // private System.Void MonsterLevelChanged(System.Int32 IGOICFCJHDB)
    // Offset: 0xDA3C94
    void MonsterLevelChanged(int IGOICFCJHDB);
    // public System.String[] get_currentZonePop()
    // Offset: 0xDA48D4
    ::ArrayW<::StringW> get_currentZonePop();
    // public System.Void setRightHandActive(System.Boolean PJPJPPPBLGC)
    // Offset: 0xDA48DC
    void setRightHandActive(bool PJPJPPPBLGC);
    // public System.String get_journalString()
    // Offset: 0xDA4B6C
    ::StringW get_journalString();
    // private System.Void DPJAEEFKCGB()
    // Offset: 0xDA4B74
    void DPJAEEFKCGB();
    // public System.String[] get_fellowshipMemberNames()
    // Offset: 0xDA4BE0
    ::ArrayW<::StringW> get_fellowshipMemberNames();
    // private System.Void AJJFEIGCOPD()
    // Offset: 0xDA3AA4
    void AJJFEIGCOPD();
    // public System.Boolean get_isFy()
    // Offset: 0xDA4BE8
    bool get_isFy();
    // public System.Single get_xpChainBonus()
    // Offset: 0xDA4BF0
    float get_xpChainBonus();
    // public System.Single get_banditTimer()
    // Offset: 0xDA4BF8
    float get_banditTimer();
    // public System.String get_activeModules()
    // Offset: 0xDA4C00
    ::StringW get_activeModules();
    // public MagicalActual.NetEntity get_myEntity()
    // Offset: 0xD96E94
    ::MagicalActual::NetEntity* get_myEntity();
    // private System.Void NAKBIMPBDOI(System.Single MMMEIONJJFJ)
    // Offset: 0xDA4C08
    void NAKBIMPBDOI(float MMMEIONJJFJ);
    // private System.Void HPKPPGCDHKD(System.String MMMEIONJJFJ)
    // Offset: 0xDA4C10
    void HPKPPGCDHKD(::StringW MMMEIONJJFJ);
    // public System.Void combatStatusRecieved()
    // Offset: 0xDA4C18
    void combatStatusRecieved();
    // private System.Void KAJMOLPCBDF()
    // Offset: 0xDA4DA0
    void KAJMOLPCBDF();
    // public System.Boolean HGFBLGKJELG()
    // Offset: 0xDA4FB4
    bool HGFBLGKJELG();
    // public System.Boolean get_isFellowshipOfficer()
    // Offset: 0xDA4FBC
    bool get_isFellowshipOfficer();
    // private System.Void BAOJHBBDCGC(MagicalActual.Monster MMMEIONJJFJ)
    // Offset: 0xDA4FC4
    void BAOJHBBDCGC(::MagicalActual::Monster* MMMEIONJJFJ);
    // public System.Void UpdateSkinTone()
    // Offset: 0xDA4FCC
    void UpdateSkinTone();
    // private System.Void PIJMPHDCCLL()
    // Offset: 0xDA58E4
    void PIJMPHDCCLL();
    // private System.Void NPJCGNAKKIE(UnityEngine.GameObject BJKNDBFNNHP)
    // Offset: 0xDA5A44
    void NPJCGNAKKIE(::UnityEngine::GameObject* BJKNDBFNNHP);
    // private System.Void OECNPOIMEJO(System.Byte MMMEIONJJFJ)
    // Offset: 0xDA5C1C
    void OECNPOIMEJO(uint8_t MMMEIONJJFJ);
    // public System.String get_myPrivateMessages()
    // Offset: 0xDA5C24
    ::StringW get_myPrivateMessages();
    // private System.Void HKIIOGJELAK(System.String[] MMMEIONJJFJ)
    // Offset: 0xDA5C2C
    void HKIIOGJELAK(::ArrayW<::StringW> MMMEIONJJFJ);
    // private System.Void JFCKGDGEOHJ(System.String MMMEIONJJFJ)
    // Offset: 0xDA5C34
    void JFCKGDGEOHJ(::StringW MMMEIONJJFJ);
    // private System.Void GHJHDIAAAOH()
    // Offset: 0xDA5C3C
    void GHJHDIAAAOH();
    // public System.Void UpdateBlocked()
    // Offset: 0xDA5EDC
    void UpdateBlocked();
    // public System.Boolean get_isGhost()
    // Offset: 0xDA2894
    bool get_isGhost();
    // private System.Void LKNEBNHFHEI(System.Boolean[] MMMEIONJJFJ)
    // Offset: 0xDA7A0C
    void LKNEBNHFHEI(::ArrayW<bool> MMMEIONJJFJ);
    // private System.Void AJNGCPNPLPL()
    // Offset: 0xDA7A14
    void AJNGCPNPLPL();
    // public System.Collections.Generic.Dictionary`2<System.String,UnityEngine.Vector3> get_partyMemberPositionCache()
    // Offset: 0xDA7BF4
    ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Vector3>* get_partyMemberPositionCache();
    // public System.Void MMGAJJBJPNB(System.Byte LJMNLILKKBG)
    // Offset: 0xDA7BFC
    void MMGAJJBJPNB(uint8_t LJMNLILKKBG);
    // private System.Void GOPJCFHNGDA()
    // Offset: 0xDA7C40
    void GOPJCFHNGDA();
    // private System.Void GMFMADJJPOP(System.Single MMMEIONJJFJ)
    // Offset: 0xDAB554
    void GMFMADJJPOP(float MMMEIONJJFJ);
    // public System.Single get_currentWeight()
    // Offset: 0xDAB55C
    float get_currentWeight();
    // private System.Void NEDFIDILLIK(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDAB564
    void NEDFIDILLIK(bool MMMEIONJJFJ);
    // public System.Void MakeRigBasedAdjustments()
    // Offset: 0xDAB570
    void MakeRigBasedAdjustments();
    // private System.Void JOHJPONDMKP(MagicalActual.Grabber MMMEIONJJFJ)
    // Offset: 0xDABC18
    void JOHJPONDMKP(::MagicalActual::Grabber* MMMEIONJJFJ);
    // private System.Void EDAPCGCAFIK(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDABC20
    void EDAPCGCAFIK(bool MMMEIONJJFJ);
    // public System.Byte get_hasNewMissions()
    // Offset: 0xDABC2C
    uint8_t get_hasNewMissions();
    // public System.Boolean get_recentBandit()
    // Offset: 0xDABC34
    bool get_recentBandit();
    // private System.Void OLLMBGKLGCK(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDABC3C
    void OLLMBGKLGCK(bool MMMEIONJJFJ);
    // private System.Void IABDOKDICHJ(System.String MMMEIONJJFJ)
    // Offset: 0xDABC48
    void IABDOKDICHJ(::StringW MMMEIONJJFJ);
    // public UnityEngine.GameObject getGrabberByIndex(System.Int32 FEHDKJKGNCE)
    // Offset: 0xDABC50
    ::UnityEngine::GameObject* getGrabberByIndex(int FEHDKJKGNCE);
    // public System.Boolean get_doNotDisturb()
    // Offset: 0xDABC68
    bool get_doNotDisturb();
    // public System.Boolean get_resurrectionLock()
    // Offset: 0xDABC70
    bool get_resurrectionLock();
    // public System.Boolean get_vfxEnabled()
    // Offset: 0xDABC78
    bool get_vfxEnabled();
    // public System.Void ForceHairStyle(System.Byte LJMNLILKKBG)
    // Offset: 0xDABC80
    void ForceHairStyle(uint8_t LJMNLILKKBG);
    // private System.Void PJALGLMCBDB(System.String[] MMMEIONJJFJ)
    // Offset: 0xDABCC4
    void PJALGLMCBDB(::ArrayW<::StringW> MMMEIONJJFJ);
    // private System.Void PLGJPLHABJO()
    // Offset: 0xDABCCC
    void PLGJPLHABJO();
    // public System.Boolean get_leftHandActive()
    // Offset: 0xDABD70
    bool get_leftHandActive();
    // public System.Void LAENJMJDPIE()
    // Offset: 0xDABD78
    void LAENJMJDPIE();
    // private System.Void PGHPEEGJFCP(System.Int32 KLJOBGIPDDF, ExtUI.InventoryItemInstance MPLBHJJHFOL, UnityEngine.GameObject BDHPOGHPJHJ)
    // Offset: 0xDA7EF8
    void PGHPEEGJFCP(int KLJOBGIPDDF, ::ExtUI::InventoryItemInstance* MPLBHJJHFOL, ::UnityEngine::GameObject* BDHPOGHPJHJ);
    // private System.Void JBGKDGIDIGN()
    // Offset: 0xDAC03C
    void JBGKDGIDIGN();
    // private System.Void EGLDHNFMONI()
    // Offset: 0xDAC288
    void EGLDHNFMONI();
    // private System.Void EDLCCBJJPLJ(System.UInt16 JGFIJDCMHDB, System.Int32 ADCNHKMKGHE)
    // Offset: 0xDAC50C
    void EDLCCBJJPLJ(uint16_t JGFIJDCMHDB, int ADCNHKMKGHE);
    // public System.String[] get_unlockedDLC()
    // Offset: 0xDACC40
    ::ArrayW<::StringW> get_unlockedDLC();
    // private System.Void JHNLAIJCIKH(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDA48E8
    void JHNLAIJCIKH(bool MMMEIONJJFJ);
    // private System.Void LALMKDPOCNE(UnityEngine.Quaternion MMMEIONJJFJ)
    // Offset: 0xDACC48
    void LALMKDPOCNE(::UnityEngine::Quaternion MMMEIONJJFJ);
    // private System.Void Update()
    // Offset: 0xDACC5C
    void Update();
    // public System.Int32 CJLOGMOCHOM()
    // Offset: 0xDACEB0
    int CJLOGMOCHOM();
    // public System.Byte get_teleportingHand()
    // Offset: 0xDA5A3C
    uint8_t get_teleportingHand();
    // private System.Void IPADCDFJIBA(System.String[] MMMEIONJJFJ)
    // Offset: 0xDACEB8
    void IPADCDFJIBA(::ArrayW<::StringW> MMMEIONJJFJ);
    // public System.Void DisableToolbelt()
    // Offset: 0xDA7B9C
    void DisableToolbelt();
    // private System.Void MBLBENENIBB(System.String MMMEIONJJFJ)
    // Offset: 0xDACEC0
    void MBLBENENIBB(::StringW MMMEIONJJFJ);
    // public System.Collections.Generic.Dictionary`2<System.String,ExtUI.InventoryItemInstance> get_equipmentBySlot()
    // Offset: 0xDA1000
    ::System::Collections::Generic::Dictionary_2<::StringW, ::ExtUI::InventoryItemInstance*>* get_equipmentBySlot();
    // private System.Void POOMBNMHAKE()
    // Offset: 0xDAC814
    void POOMBNMHAKE();
    // private UnityEngine.Color32 LBJANOBPPDN(System.Int32 EFPDHLNIAOM)
    // Offset: 0xDABFFC
    ::UnityEngine::Color32 LBJANOBPPDN(int EFPDHLNIAOM);
    // public System.Byte get_rigType()
    // Offset: 0xDACFA8
    uint8_t get_rigType();
    // public System.Void LoadDummyModule(System.String CPOHGNBHACO, System.String IOMFFCKFIHE)
    // Offset: 0xDACFB0
    void LoadDummyModule(::StringW CPOHGNBHACO, ::StringW IOMFFCKFIHE);
    // public System.Byte get_currentClassId()
    // Offset: 0xDA0BD0
    uint8_t get_currentClassId();
    // private System.Void MFHLDCADNKD(UnityEngine.GameObject BJKNDBFNNHP)
    // Offset: 0xDAD248
    void MFHLDCADNKD(::UnityEngine::GameObject* BJKNDBFNNHP);
    // public System.Void equipSlot(UnityEngine.GameObject BDHPOGHPJHJ, System.Int32 FMMGOLGHEJP, System.Int32 KIIKEMANPPI, System.Boolean GGKJJEBAMBP, System.Action OOMLAOPBDDP)
    // Offset: 0xDAD41C
    void equipSlot(::UnityEngine::GameObject* BDHPOGHPJHJ, int FMMGOLGHEJP, int KIIKEMANPPI, bool GGKJJEBAMBP, ::System::Action* OOMLAOPBDDP);
    // public System.String[] get_fellowshipMemberIds()
    // Offset: 0xDADB30
    ::ArrayW<::StringW> get_fellowshipMemberIds();
    // private System.Void IFGEFGNNFMO(UnityEngine.GameObject BDHPOGHPJHJ, System.String KCPBJJKEMPD, System.Int32 KIIKEMANPPI, ExtUI.InventoryItemInstance GNJPHGDOHAC)
    // Offset: 0xDADB38
    void IFGEFGNNFMO(::UnityEngine::GameObject* BDHPOGHPJHJ, ::StringW KCPBJJKEMPD, int KIIKEMANPPI, ::ExtUI::InventoryItemInstance* GNJPHGDOHAC);
    // private System.Void NJIECIBKGCB(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDAE278
    void NJIECIBKGCB(bool MMMEIONJJFJ);
    // private System.Void CGMKGMMIBEF(System.UInt16 MMMEIONJJFJ)
    // Offset: 0xDAE284
    void CGMKGMMIBEF(uint16_t MMMEIONJJFJ);
    // private System.Void DIGODPCJDOE()
    // Offset: 0xDA2FD4
    void DIGODPCJDOE();
    // public System.Void PromptDungeonQueue(System.String ANCJMBHEDKF)
    // Offset: 0xDAE2A4
    void PromptDungeonQueue(::StringW ANCJMBHEDKF);
    // public System.Int32 PGKGEJLAINF(UnityEngine.GameObject BALIAOKIHIC)
    // Offset: 0xDAE620
    int PGKGEJLAINF(::UnityEngine::GameObject* BALIAOKIHIC);
    // private System.Void JEIKBDBNBMA(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDAE6E0
    void JEIKBDBNBMA(bool MMMEIONJJFJ);
    // private System.Void JANKGOKLILL(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDAE6EC
    void JANKGOKLILL(bool MMMEIONJJFJ);
    // public System.Void AICDNAAEDBA()
    // Offset: 0xDAE6F8
    void AICDNAAEDBA();
    // public System.Collections.Generic.List`1<System.String> get_zoneMutations()
    // Offset: 0xDAE718
    ::System::Collections::Generic::List_1<::StringW>* get_zoneMutations();
    // private System.Void Awake()
    // Offset: 0xDAE720
    void Awake();
    // public System.Boolean get_inMyParty()
    // Offset: 0xDA288C
    bool get_inMyParty();
    // private System.Void KCCKHIJNILH(System.Single MMMEIONJJFJ)
    // Offset: 0xDAEF18
    void KCCKHIJNILH(float MMMEIONJJFJ);
    // private System.Void MIHEBFCBEOG(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDAEF20
    void MIHEBFCBEOG(bool MMMEIONJJFJ);
    // private System.Void LateUpdate()
    // Offset: 0xDAEF2C
    void LateUpdate();
    // private System.Void LBJIPBKPBCD()
    // Offset: 0xDA3D98
    void LBJIPBKPBCD();
    // private System.Void FixedUpdate()
    // Offset: 0xDAF184
    void FixedUpdate();
    // private System.Void GIAANMMEEIM()
    // Offset: 0xDAFB94
    void GIAANMMEEIM();
    // private System.Void LDPMCLGLMDG()
    // Offset: 0xDA3468
    void LDPMCLGLMDG();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0xDAFCC8
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void FBHFJDGAILB(System.String[] MMMEIONJJFJ)
    // Offset: 0xDB22D4
    void FBHFJDGAILB(::ArrayW<::StringW> MMMEIONJJFJ);
    // public System.Void ResetPosition()
    // Offset: 0xDB22DC
    void ResetPosition();
    // private System.Void IAGOEMIPAEL(System.Single MMMEIONJJFJ)
    // Offset: 0xDAFB84
    void IAGOEMIPAEL(float MMMEIONJJFJ);
    // private System.Void LBMABJFPFHB()
    // Offset: 0xDA1054
    void LBMABJFPFHB();
    // public MagicalActual.Grabber get_leftGrabberComponent()
    // Offset: 0xDB22E0
    ::MagicalActual::Grabber* get_leftGrabberComponent();
    // public System.Single get_skinTonePercent()
    // Offset: 0xDA5034
    float get_skinTonePercent();
    // public System.Void updateMyEquipment(System.String KOOIIFLJMFM, System.Byte GPIONJECACO)
    // Offset: 0xDB22E8
    void updateMyEquipment(::StringW KOOIIFLJMFM, uint8_t GPIONJECACO);
    // public System.Void UpdateCustomAppearance(System.String NDIOMBJMNAC)
    // Offset: 0xDB2348
    void UpdateCustomAppearance(::StringW NDIOMBJMNAC);
    // public System.Int32 get_fellowshipLevel()
    // Offset: 0xDB2734
    int get_fellowshipLevel();
    // private System.Void NBBGCNJAPOA(System.Int32 MMMEIONJJFJ)
    // Offset: 0xDB273C
    void NBBGCNJAPOA(int MMMEIONJJFJ);
    // public System.String get_zoneMessage()
    // Offset: 0xDAF174
    ::StringW get_zoneMessage();
    // public System.Byte get_rightHandStatus()
    // Offset: 0xDAFCC0
    uint8_t get_rightHandStatus();
    // private System.Void LMFKEJLGOKA(System.Byte MMMEIONJJFJ)
    // Offset: 0xDB2744
    void LMFKEJLGOKA(uint8_t MMMEIONJJFJ);
    // public System.Void ForceHairColor(System.Byte GPKOKOJALNP)
    // Offset: 0xDB274C
    void ForceHairColor(uint8_t GPKOKOJALNP);
    // public System.Boolean get_isBandit()
    // Offset: 0xDAE29C
    bool get_isBandit();
    // public System.Boolean get_showSpecialPopup()
    // Offset: 0xDB2790
    bool get_showSpecialPopup();
    // public System.Byte get_teleportTrailIdx()
    // Offset: 0xDB2798
    uint8_t get_teleportTrailIdx();
    // private System.Void LAGCJKOMMBL()
    // Offset: 0xDB256C
    void LAGCJKOMMBL();
    // public System.Single get_maxWeight()
    // Offset: 0xDAC084
    float get_maxWeight();
    // private System.Void EDGHKLDEGFE()
    // Offset: 0xDA2DAC
    void EDGHKLDEGFE();
    // private System.Void CIPAPJNEAJB(System.String MMMEIONJJFJ)
    // Offset: 0xDB284C
    void CIPAPJNEAJB(::StringW MMMEIONJJFJ);
    // public System.Void .ctor()
    // Offset: 0xDB2854
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerAvatar* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::PlayerAvatar::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerAvatar*, creationType>()));
    }
    // private System.Void LIFBKPOGPAF(UnityEngine.Vector3 MMMEIONJJFJ)
    // Offset: 0xDB280C
    void LIFBKPOGPAF(::UnityEngine::Vector3 MMMEIONJJFJ);
    // public System.Void EnableToolbelt()
    // Offset: 0xDA7B44
    void EnableToolbelt();
    // private System.Void GHAJFPOFLPN(System.Int32 MMMEIONJJFJ)
    // Offset: 0xDB2D9C
    void GHAJFPOFLPN(int MMMEIONJJFJ);
    // public System.String get_fellowshipName()
    // Offset: 0xDAE28C
    ::StringW get_fellowshipName();
    // private System.Void DOLCLACKKHO()
    // Offset: 0xDB2DA4
    void DOLCLACKKHO();
    // public System.Void UnloadDummyModule(System.String CPOHGNBHACO)
    // Offset: 0xDB3474
    void UnloadDummyModule(::StringW CPOHGNBHACO);
    // public System.Boolean get_voicePlaybackStarted()
    // Offset: 0xDB3594
    bool get_voicePlaybackStarted();
    // public System.Void PromptClickChoice(System.String ANCJMBHEDKF)
    // Offset: 0xDB359C
    void PromptClickChoice(::StringW ANCJMBHEDKF);
    // private System.Void ALBFJELCLAD(System.Byte MMMEIONJJFJ)
    // Offset: 0xDB27AC
    void ALBFJELCLAD(uint8_t MMMEIONJJFJ);
    // public System.Void ForceMouthSet(System.Byte PFCCGJGBKKL)
    // Offset: 0xDB3798
    void ForceMouthSet(uint8_t PFCCGJGBKKL);
    // private System.Void MEPJCAMMCCK(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDB27A0
    void MEPJCAMMCCK(bool MMMEIONJJFJ);
    // private System.Void IBKMFOHGBAA()
    // Offset: 0xDB37DC
    void IBKMFOHGBAA();
    // public System.Void ForceSkinTonePercent(System.Single OCLHGBCNNEI)
    // Offset: 0xDB382C
    void ForceSkinTonePercent(float OCLHGBCNNEI);
    // public UnityEngine.GameObject JDMPFPMBFJP(System.Int32 FEHDKJKGNCE)
    // Offset: 0xDB3834
    ::UnityEngine::GameObject* JDMPFPMBFJP(int FEHDKJKGNCE);
    // public System.Boolean get_isFellowshipLeader()
    // Offset: 0xDB384C
    bool get_isFellowshipLeader();
    // public System.Void updateMyEquipment()
    // Offset: 0xDB231C
    void updateMyEquipment();
    // public System.Void ResetForLogout()
    // Offset: 0xDB38C8
    void ResetForLogout();
    // public System.Void InitialPoolingStart()
    // Offset: 0xDB3958
    void InitialPoolingStart();
    // public System.String get_inventory()
    // Offset: 0xDB3964
    ::StringW get_inventory();
    // private System.Void MCABIIOCIBD(System.Single MMMEIONJJFJ)
    // Offset: 0xDAFB8C
    void MCABIIOCIBD(float MMMEIONJJFJ);
    // public System.Single HJLLJMIKMML()
    // Offset: 0xDB396C
    float HJLLJMIKMML();
    // public System.Int32 getGrabberIndex(UnityEngine.GameObject BALIAOKIHIC)
    // Offset: 0xDB3974
    int getGrabberIndex(::UnityEngine::GameObject* BALIAOKIHIC);
    // private System.Void DHKPPAENLLA(MagicalActual.NetEntity MMMEIONJJFJ)
    // Offset: 0xDB22CC
    void DHKPPAENLLA(::MagicalActual::NetEntity* MMMEIONJJFJ);
    // public System.UInt16 get_onTaxi()
    // Offset: 0xDB3A34
    uint16_t get_onTaxi();
    // public System.Void UnloadAllModules()
    // Offset: 0xDB3A3C
    void UnloadAllModules();
    // private System.Void EPDAFBKIMKD()
    // Offset: 0xDAFB80
    void EPDAFBKIMKD();
    // public System.Void StopFlying()
    // Offset: 0xDB3CAC
    void StopFlying();
    // private System.Void DLOMBPGIKPF(System.Byte MMMEIONJJFJ)
    // Offset: 0xDAC08C
    void DLOMBPGIKPF(uint8_t MMMEIONJJFJ);
    // public System.String get_partyStatus()
    // Offset: 0xDB3CBC
    ::StringW get_partyStatus();
    // public System.Void UnloadModule(System.String CPOHGNBHACO)
    // Offset: 0xDB3B60
    void UnloadModule(::StringW CPOHGNBHACO);
    // private System.Void MAKLACOCBDM(System.Byte MMMEIONJJFJ)
    // Offset: 0xDAEF00
    void MAKLACOCBDM(uint8_t MMMEIONJJFJ);
    // public System.Byte get_encumberedStatus()
    // Offset: 0xDB3CC4
    uint8_t get_encumberedStatus();
    // private System.Void GOCJHIEMOML(System.String MMMEIONJJFJ)
    // Offset: 0xDB3CCC
    void GOCJHIEMOML(::StringW MMMEIONJJFJ);
    // public System.Void ForceShowHelm(System.Boolean JBAKFAAGDOM)
    // Offset: 0xDB3CD4
    void ForceShowHelm(bool JBAKFAAGDOM);
    // private System.Void MDHMJBKLBBJ(System.String MMMEIONJJFJ)
    // Offset: 0xDB2834
    void MDHMJBKLBBJ(::StringW MMMEIONJJFJ);
    // public System.Void UpdateWarningText()
    // Offset: 0xDAC094
    void UpdateWarningText();
    // private System.Void NJCCCBJEAHF(System.String MMMEIONJJFJ)
    // Offset: 0xDB3CE0
    void NJCCCBJEAHF(::StringW MMMEIONJJFJ);
    // public UnityEngine.Vector3 myPositionAtGroundLevel()
    // Offset: 0xDB3CE8
    ::UnityEngine::Vector3 myPositionAtGroundLevel();
    // private System.Void LHDNLJPCEBI()
    // Offset: 0xDA503C
    void LHDNLJPCEBI();
    // public System.Void ReceiveToolSignal(System.Byte MLJHLAGOCMM, System.Byte KLIPNGBEELK)
    // Offset: 0xDB3DB8
    void ReceiveToolSignal(uint8_t MLJHLAGOCMM, uint8_t KLIPNGBEELK);
    // public System.Void ForceEyeSet(System.Byte PFCCGJGBKKL)
    // Offset: 0xDB3EDC
    void ForceEyeSet(uint8_t PFCCGJGBKKL);
    // private System.Void OOFBMFMKKHJ(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDB2800
    void OOFBMFMKKHJ(bool MMMEIONJJFJ);
    // public MagicalActual.Monster get_myMonster()
    // Offset: 0xDA289C
    ::MagicalActual::Monster* get_myMonster();
    // public System.Void setVoicePlayerbackStarted(System.Boolean PJPJPPPBLGC)
    // Offset: 0xDB3F20
    void setVoicePlayerbackStarted(bool PJPJPPPBLGC);
    // public System.String[] get_partyMemberNames()
    // Offset: 0xDB3F2C
    ::ArrayW<::StringW> get_partyMemberNames();
    // private System.Void GJPLIJLGMHD(System.Byte MMMEIONJJFJ)
    // Offset: 0xDB27F8
    void GJPLIJLGMHD(uint8_t MMMEIONJJFJ);
    // public System.Boolean get_isSpeaking()
    // Offset: 0xDB3F34
    bool get_isSpeaking();
    // public System.String get_partyRole()
    // Offset: 0xDAF17C
    ::StringW get_partyRole();
    // private System.Void LNLAILPGKDO(MagicalActual.Grabber MMMEIONJJFJ)
    // Offset: 0xDAEF10
    void LNLAILPGKDO(::MagicalActual::Grabber* MMMEIONJJFJ);
    // private System.Void ECFGMCCBAFN()
    // Offset: 0xDB3F3C
    void ECFGMCCBAFN();
    // public System.Byte get_leftHandStatus()
    // Offset: 0xDA2620
    uint8_t get_leftHandStatus();
    // public System.Void setLeftHandActive(System.Boolean PJPJPPPBLGC)
    // Offset: 0xDA2628
    void setLeftHandActive(bool PJPJPPPBLGC);
    // private System.Void GFMNHHOCHMO(System.Single MMMEIONJJFJ)
    // Offset: 0xDB281C
    void GFMNHHOCHMO(float MMMEIONJJFJ);
    // private System.Void KNHNNHKCGNP(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDB344C
    void KNHNNHKCGNP(bool MMMEIONJJFJ);
    // public System.Void AADKLNELPHF()
    // Offset: 0xDB43EC
    void AADKLNELPHF();
    // private System.Collections.IEnumerator DOMMNGBGKMF()
    // Offset: 0xDB3854
    ::System::Collections::IEnumerator* DOMMNGBGKMF();
    // public System.Void StartClass(MagicalActual.PlayerClass LHACLEFKABL)
    // Offset: 0xDB4AAC
    void StartClass(::MagicalActual::PlayerClass* LHACLEFKABL);
    // private System.Void GJBDLAOAMCK()
    // Offset: 0xDB5428
    void GJBDLAOAMCK();
    // public System.Void ForceEyeColor(System.Byte GPKOKOJALNP)
    // Offset: 0xDB5F9C
    void ForceEyeColor(uint8_t GPKOKOJALNP);
    // private System.Void LNMDJLDJEBM(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDB27DC
    void LNMDJLDJEBM(bool MMMEIONJJFJ);
    // public System.Void SetFellowshipChat(System.Boolean MNGIKDGFMIK)
    // Offset: 0xDB5FE0
    void SetFellowshipChat(bool MNGIKDGFMIK);
    // public System.Void IJMCALBKFKM()
    // Offset: 0xDB60A4
    void IJMCALBKFKM();
    // private System.Void Start()
    // Offset: 0xDB61B8
    void Start();
    // public UnityEngine.Quaternion get_rightFingerStatus()
    // Offset: 0xDB676C
    ::UnityEngine::Quaternion get_rightFingerStatus();
    // private System.Void NNPKKFHFHCP(System.String MMMEIONJJFJ)
    // Offset: 0xDB282C
    void NNPKKFHFHCP(::StringW MMMEIONJJFJ);
    // private System.Void GJCIBJKKHNN(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDB6780
    void GJCIBJKKHNN(bool MMMEIONJJFJ);
    // public System.Int32 lodLevel()
    // Offset: 0xDB678C
    int lodLevel();
    // private System.Void NDKKFPHEHNC(System.String MMMEIONJJFJ)
    // Offset: 0xDB6794
    void NDKKFPHEHNC(::StringW MMMEIONJJFJ);
    // public System.Void OverrideSkinTone(UnityEngine.Color GPKOKOJALNP)
    // Offset: 0xDB679C
    void OverrideSkinTone(::UnityEngine::Color GPKOKOJALNP);
    // private System.Void IFMJPMMKIDN(System.Byte MMMEIONJJFJ)
    // Offset: 0xDB283C
    void IFMJPMMKIDN(uint8_t MMMEIONJJFJ);
    // public MagicalActual.Grabber get_rightGrabberComponent()
    // Offset: 0xDB6764
    ::MagicalActual::Grabber* get_rightGrabberComponent();
    // public System.String getControllerType()
    // Offset: 0xDB67B0
    ::StringW getControllerType();
    // public System.Boolean KJJILFNKGJH()
    // Offset: 0xDB6960
    bool KJJILFNKGJH();
    // private System.Void PJHPOPMEDDI(System.Byte MMMEIONJJFJ)
    // Offset: 0xDB27F0
    void PJHPOPMEDDI(uint8_t MMMEIONJJFJ);
    // private System.Void FBLAMKJHKND(System.Boolean BMDFAJBDDEK)
    // Offset: 0xDB6968
    void FBLAMKJHKND(bool BMDFAJBDDEK);
    // private System.Void NOMGBJBJADP(System.Collections.Generic.List`1<System.String> MMMEIONJJFJ)
    // Offset: 0xDB700C
    void NOMGBJBJADP(::System::Collections::Generic::List_1<::StringW>* MMMEIONJJFJ);
    // public System.Void SetToLodLevel(System.Int32 IGOICFCJHDB)
    // Offset: 0xDA5FF0
    void SetToLodLevel(int IGOICFCJHDB);
    // public System.Int32 get_fellowshipXP()
    // Offset: 0xDB7014
    int get_fellowshipXP();
    // private System.Void PLFBFLPDAHP(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDB3458
    void PLFBFLPDAHP(bool MMMEIONJJFJ);
    // public UnityEngine.Quaternion get_leftFingerStatus()
    // Offset: 0xDB701C
    ::UnityEngine::Quaternion get_leftFingerStatus();
    // public System.Void UpdateRightHandWeaponActive()
    // Offset: 0xDA48F4
    void UpdateRightHandWeaponActive();
    // private System.Void HKFOHGNFHMJ()
    // Offset: 0xDB66AC
    void HKFOHGNFHMJ();
    // private System.Void MHBIKJJLPLH()
    // Offset: 0xDB7030
    void MHBIKJJLPLH();
    // private System.Void OIFAIHHIJLF(System.String MMMEIONJJFJ)
    // Offset: 0xDB7D4C
    void OIFAIHHIJLF(::StringW MMMEIONJJFJ);
    // public System.Void set_playerMount(MagicalActual.PlayerMount MMMEIONJJFJ)
    // Offset: 0xDA1008
    void set_playerMount(::MagicalActual::PlayerMount* MMMEIONJJFJ);
    // private System.Void NKOJDPHEDIF(System.Single MMMEIONJJFJ)
    // Offset: 0xDB2824
    void NKOJDPHEDIF(float MMMEIONJJFJ);
    // public System.Void indicateSpeaking()
    // Offset: 0xDB7D54
    void indicateSpeaking();
    // private System.Void CAPEJDIIMFA(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDB27D0
    void CAPEJDIIMFA(bool MMMEIONJJFJ);
    // private System.Void AEBIMHIMCGA()
    // Offset: 0xDB249C
    void AEBIMHIMCGA();
    // public System.Boolean shouldShowVfx()
    // Offset: 0xDB7DB8
    bool shouldShowVfx();
    // private System.Void MKCAIANIGFE(System.Collections.Generic.Dictionary`2<System.String,ExtUI.InventoryItemInstance> MMMEIONJJFJ)
    // Offset: 0xDAEF08
    void MKCAIANIGFE(::System::Collections::Generic::Dictionary_2<::StringW, ::ExtUI::InventoryItemInstance*>* MMMEIONJJFJ);
    // public System.String get_playerTitle()
    // Offset: 0xDAE294
    ::StringW get_playerTitle();
    // public System.Boolean get_inFellowship()
    // Offset: 0xDB346C
    bool get_inFellowship();
    // public MagicalActual.PlayerMount get_playerMount()
    // Offset: 0xDA0FF8
    ::MagicalActual::PlayerMount* get_playerMount();
    // private System.Void LCBAFHFEIGP(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDB7DAC
    void LCBAFHFEIGP(bool MMMEIONJJFJ);
    // private System.Void KPNHDIAIECC(UnityEngine.Vector3 PBDNAOOOFGN, UnityEngine.Vector3 BBBDDEHKJIN)
    // Offset: 0xDACEC8
    void KPNHDIAIECC(::UnityEngine::Vector3 PBDNAOOOFGN, ::UnityEngine::Vector3 BBBDDEHKJIN);
    // public System.Void ReadyUpPromptClickChoice(System.String ANCJMBHEDKF)
    // Offset: 0xDB8010
    void ReadyUpPromptClickChoice(::StringW ANCJMBHEDKF);
    // public MagicalActual.AvatarAppearance getMyAppearance()
    // Offset: 0xDB8234
    ::MagicalActual::AvatarAppearance* getMyAppearance();
    // private System.Void KIFKIPGACMO(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDAE70C
    void KIFKIPGACMO(bool MMMEIONJJFJ);
    // private System.Void BEDCMOHLKOP(System.Boolean MMMEIONJJFJ)
    // Offset: 0xDB27B4
    void BEDCMOHLKOP(bool MMMEIONJJFJ);
    // public System.Void LoadModule(System.String CPOHGNBHACO)
    // Offset: 0xDB823C
    void LoadModule(::StringW CPOHGNBHACO);
    // private System.Void GPNCINHIINH(System.String[] MMMEIONJJFJ)
    // Offset: 0xDB27C0
    void GPNCINHIINH(::ArrayW<::StringW> MMMEIONJJFJ);
    // public System.Single get_xpChainBonusExpires()
    // Offset: 0xDAF16C
    float get_xpChainBonusExpires();
    // private System.Void FAMJJMAIBFP()
    // Offset: 0xDB84FC
    void FAMJJMAIBFP();
    // public System.String get_fellowshipStatus()
    // Offset: 0xDB3444
    ::StringW get_fellowshipStatus();
    // public System.String get_fellowshipId()
    // Offset: 0xDB609C
    ::StringW get_fellowshipId();
    // public System.Void SetIsSpeaking(System.Boolean AHLKDAJPCLA, System.Double NOGJKMLEEDM)
    // Offset: 0xDB8634
    void SetIsSpeaking(bool AHLKDAJPCLA, double NOGJKMLEEDM);
    // private System.Void KEBOKGFLFJA()
    // Offset: 0xDB8714
    void KEBOKGFLFJA();
    // public System.String get_playerDbId()
    // Offset: 0xDA4BD8
    ::StringW get_playerDbId();
    // private System.Void HJDHDBPOLBN(System.String MMMEIONJJFJ)
    // Offset: 0xDB27E8
    void HJDHDBPOLBN(::StringW MMMEIONJJFJ);
    // private System.Void KJAKHBDCAGG(System.String[] MMMEIONJJFJ)
    // Offset: 0xDB27C8
    void KJAKHBDCAGG(::ArrayW<::StringW> MMMEIONJJFJ);
    // public System.Byte get_banditFlag()
    // Offset: 0xDB3824
    uint8_t get_banditFlag();
    // private System.Void KAGHKNKKDEI()
    // Offset: 0xDA2F80
    void KAGHKNKKDEI();
    // private System.Void OLDINLJOOOC(System.Int32 MMMEIONJJFJ)
    // Offset: 0xDB2844
    void OLDINLJOOOC(int MMMEIONJJFJ);
    // public System.Void ForceNoseStyle(System.Byte LJMNLILKKBG)
    // Offset: 0xDB8968
    void ForceNoseStyle(uint8_t LJMNLILKKBG);
    // private System.Void LMMKABHGOIL(System.String[] MMMEIONJJFJ)
    // Offset: 0xDB3464
    void LMMKABHGOIL(::ArrayW<::StringW> MMMEIONJJFJ);
    // public System.Void indicateStoppedSpeaking()
    // Offset: 0xDB86AC
    void indicateStoppedSpeaking();
    // public System.Boolean get_rightHandActive()
    // Offset: 0xDABFF4
    bool get_rightHandActive();
    // public System.Void markersCreatedRecieved()
    // Offset: 0xDB89AC
    void markersCreatedRecieved();
    // public System.Void UpdateLeftHandWeaponActive()
    // Offset: 0xDB4178
    void UpdateLeftHandWeaponActive();
  }; // MagicalActual.PlayerAvatar
  #pragma pack(pop)
  static check_size<sizeof(PlayerAvatar), 1792 + sizeof(::MagicalActual::BoostBomb*)> __MagicalActual_PlayerAvatarSizeCheck;
  static_assert(sizeof(PlayerAvatar) == 0x708);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LCCFHGHOPBB
// Il2CppName: LCCFHGHOPBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::Grabber* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::LCCFHGHOPBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LCCFHGHOPBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::isSuperActive
// Il2CppName: isSuperActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::isSuperActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "isSuperActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_tombstoneLocation
// Il2CppName: get_tombstoneLocation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_tombstoneLocation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_tombstoneLocation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_currentZoneShards
// Il2CppName: get_currentZoneShards
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_currentZoneShards)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_currentZoneShards", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_logoutTimer
// Il2CppName: get_logoutTimer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_logoutTimer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_logoutTimer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::SetCooldownForTool
// Il2CppName: SetCooldownForTool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW, float)>(&MagicalActual::PlayerAvatar::SetCooldownForTool)> {
  static const MethodInfo* get() {
    static auto* PADCEOIPEMC = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* MKLMFNHLEHA = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "SetCooldownForTool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PADCEOIPEMC, MKLMFNHLEHA});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::PFJBPHECGKC
// Il2CppName: PFJBPHECGKC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::PFJBPHECGKC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "PFJBPHECGKC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GEAGAIFPLAL
// Il2CppName: GEAGAIFPLAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(int)>(&MagicalActual::PlayerAvatar::GEAGAIFPLAL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GEAGAIFPLAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KFPHAPELFFH
// Il2CppName: KFPHAPELFFH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::KFPHAPELFFH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KFPHAPELFFH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::BOAIICEJMKL
// Il2CppName: BOAIICEJMKL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::BOAIICEJMKL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "BOAIICEJMKL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_isPartyLeader
// Il2CppName: get_isPartyLeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_isPartyLeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_isPartyLeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KJLCNMJCMJE
// Il2CppName: KJLCNMJCMJE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::KJLCNMJCMJE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KJLCNMJCMJE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_zoneTimeRemaining
// Il2CppName: get_zoneTimeRemaining
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_zoneTimeRemaining)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_zoneTimeRemaining", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_currency
// Il2CppName: get_currency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_currency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_currency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::DLDJGCKEJMB
// Il2CppName: DLDJGCKEJMB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::DLDJGCKEJMB)> {
  static const MethodInfo* get() {
    static auto* BJPAOMAMDAI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "DLDJGCKEJMB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BJPAOMAMDAI});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::DLMHEDPLDBI
// Il2CppName: DLMHEDPLDBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::DLMHEDPLDBI)> {
  static const MethodInfo* get() {
    static auto* GPKOKOJALNP = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "DLMHEDPLDBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GPKOKOJALNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KGIJJKGLKIH
// Il2CppName: KGIJJKGLKIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(float)>(&MagicalActual::PlayerAvatar::KGIJJKGLKIH)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KGIJJKGLKIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LLEAOOILBLA
// Il2CppName: LLEAOOILBLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::LLEAOOILBLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LLEAOOILBLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_isGm
// Il2CppName: get_isGm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_isGm)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_isGm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::EJDOGKJBKKM
// Il2CppName: EJDOGKJBKKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::EJDOGKJBKKM)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "EJDOGKJBKKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_isMounted
// Il2CppName: get_isMounted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_isMounted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_isMounted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::DisableHandsAndWeapons
// Il2CppName: DisableHandsAndWeapons
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::DisableHandsAndWeapons)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "DisableHandsAndWeapons", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_currentResidentShard
// Il2CppName: get_currentResidentShard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_currentResidentShard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_currentResidentShard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::CHEDPKGPOLE
// Il2CppName: CHEDPKGPOLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(int, int, int)>(&MagicalActual::PlayerAvatar::CHEDPKGPOLE)> {
  static const MethodInfo* get() {
    static auto* DOKHHJJJLFA = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* OBBOMMHLOEL = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* PPIIOLDJENH = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "CHEDPKGPOLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{DOKHHJJJLFA, OBBOMMHLOEL, PPIIOLDJENH});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::CBMAIBEBDKH
// Il2CppName: CBMAIBEBDKH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Vector3>*)>(&MagicalActual::PlayerAvatar::CBMAIBEBDKH)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "CBMAIBEBDKH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::FOAEANFDGNP
// Il2CppName: FOAEANFDGNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::FOAEANFDGNP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "FOAEANFDGNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::OACGNGNBIKO
// Il2CppName: OACGNGNBIKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::OACGNGNBIKO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "OACGNGNBIKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_currentZoneExpiring
// Il2CppName: get_currentZoneExpiring
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<bool> (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_currentZoneExpiring)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_currentZoneExpiring", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MCKICKLDKNJ
// Il2CppName: MCKICKLDKNJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::MCKICKLDKNJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MCKICKLDKNJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::HIFOIADIDIF
// Il2CppName: HIFOIADIDIF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::HIFOIADIDIF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "HIFOIADIDIF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ICPNIGINOGE
// Il2CppName: ICPNIGINOGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::ICPNIGINOGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ICPNIGINOGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::HOJCAIMCCAP
// Il2CppName: HOJCAIMCCAP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::HOJCAIMCCAP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "HOJCAIMCCAP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::BJNKLGMLOEI
// Il2CppName: BJNKLGMLOEI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::BJNKLGMLOEI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "BJNKLGMLOEI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_myFaceController
// Il2CppName: get_myFaceController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::FaceController* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_myFaceController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_myFaceController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_customAppearance
// Il2CppName: get_customAppearance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_customAppearance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_customAppearance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_primaryWeaponHandIdx
// Il2CppName: get_primaryWeaponHandIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_primaryWeaponHandIdx)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_primaryWeaponHandIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::EEFNLOEOODM
// Il2CppName: EEFNLOEOODM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::EEFNLOEOODM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "EEFNLOEOODM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::CHGCAMLMDOA
// Il2CppName: CHGCAMLMDOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::CHGCAMLMDOA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "CHGCAMLMDOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::IEENCPMLFOH
// Il2CppName: IEENCPMLFOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::IEENCPMLFOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "IEENCPMLFOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_inParty
// Il2CppName: get_inParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_inParty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_inParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::FGEHMDKJHNG
// Il2CppName: FGEHMDKJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::FGEHMDKJHNG)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "FGEHMDKJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_surname
// Il2CppName: get_surname
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_surname)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_surname", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::NFPGBJMHKIP
// Il2CppName: NFPGBJMHKIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::NFPGBJMHKIP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "NFPGBJMHKIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_backpackLevel
// Il2CppName: get_backpackLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_backpackLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_backpackLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ResetRigBasedAdjustments
// Il2CppName: ResetRigBasedAdjustments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::ResetRigBasedAdjustments)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ResetRigBasedAdjustments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::PoolingReset
// Il2CppName: PoolingReset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::PoolingReset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "PoolingReset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_partyMemberIds
// Il2CppName: get_partyMemberIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_partyMemberIds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_partyMemberIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_showHelm
// Il2CppName: get_showHelm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_showHelm)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_showHelm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GetFontLetterForRune
// Il2CppName: GetFontLetterForRune
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::GetFontLetterForRune)> {
  static const MethodInfo* get() {
    static auto* JHBJCIKGHIL = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GetFontLetterForRune", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JHBJCIKGHIL});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::DFOLLKNFKIP
// Il2CppName: DFOLLKNFKIP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::UnityEngine::Quaternion)>(&MagicalActual::PlayerAvatar::DFOLLKNFKIP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "DFOLLKNFKIP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::BCGFDMIHCFE
// Il2CppName: BCGFDMIHCFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::BCGFDMIHCFE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "BCGFDMIHCFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::BMJDLBCLCFN
// Il2CppName: BMJDLBCLCFN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::ArrayW<::StringW>)>(&MagicalActual::PlayerAvatar::BMJDLBCLCFN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "BMJDLBCLCFN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ForceEarStyle
// Il2CppName: ForceEarStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::ForceEarStyle)> {
  static const MethodInfo* get() {
    static auto* LJMNLILKKBG = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ForceEarStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LJMNLILKKBG});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::HFBFCBFCMOK
// Il2CppName: HFBFCBFCMOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::HFBFCBFCMOK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "HFBFCBFCMOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KLLFJHOKAMM
// Il2CppName: KLLFJHOKAMM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::MagicalActual::FaceController*)>(&MagicalActual::PlayerAvatar::KLLFJHOKAMM)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "FaceController")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KLLFJHOKAMM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KKDJECFBLJF
// Il2CppName: KKDJECFBLJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::KKDJECFBLJF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KKDJECFBLJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MonsterLevelChanged
// Il2CppName: MonsterLevelChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(int)>(&MagicalActual::PlayerAvatar::MonsterLevelChanged)> {
  static const MethodInfo* get() {
    static auto* IGOICFCJHDB = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MonsterLevelChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IGOICFCJHDB});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_currentZonePop
// Il2CppName: get_currentZonePop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_currentZonePop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_currentZonePop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::setRightHandActive
// Il2CppName: setRightHandActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::setRightHandActive)> {
  static const MethodInfo* get() {
    static auto* PJPJPPPBLGC = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "setRightHandActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PJPJPPPBLGC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_journalString
// Il2CppName: get_journalString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_journalString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_journalString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::DPJAEEFKCGB
// Il2CppName: DPJAEEFKCGB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::DPJAEEFKCGB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "DPJAEEFKCGB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_fellowshipMemberNames
// Il2CppName: get_fellowshipMemberNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_fellowshipMemberNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_fellowshipMemberNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::AJJFEIGCOPD
// Il2CppName: AJJFEIGCOPD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::AJJFEIGCOPD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "AJJFEIGCOPD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_isFy
// Il2CppName: get_isFy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_isFy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_isFy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_xpChainBonus
// Il2CppName: get_xpChainBonus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_xpChainBonus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_xpChainBonus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_banditTimer
// Il2CppName: get_banditTimer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_banditTimer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_banditTimer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_activeModules
// Il2CppName: get_activeModules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_activeModules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_activeModules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_myEntity
// Il2CppName: get_myEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::NetEntity* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_myEntity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_myEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::NAKBIMPBDOI
// Il2CppName: NAKBIMPBDOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(float)>(&MagicalActual::PlayerAvatar::NAKBIMPBDOI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "NAKBIMPBDOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::HPKPPGCDHKD
// Il2CppName: HPKPPGCDHKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::HPKPPGCDHKD)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "HPKPPGCDHKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::combatStatusRecieved
// Il2CppName: combatStatusRecieved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::combatStatusRecieved)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "combatStatusRecieved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KAJMOLPCBDF
// Il2CppName: KAJMOLPCBDF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::KAJMOLPCBDF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KAJMOLPCBDF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::HGFBLGKJELG
// Il2CppName: HGFBLGKJELG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::HGFBLGKJELG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "HGFBLGKJELG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_isFellowshipOfficer
// Il2CppName: get_isFellowshipOfficer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_isFellowshipOfficer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_isFellowshipOfficer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::BAOJHBBDCGC
// Il2CppName: BAOJHBBDCGC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::MagicalActual::Monster*)>(&MagicalActual::PlayerAvatar::BAOJHBBDCGC)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "Monster")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "BAOJHBBDCGC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::UpdateSkinTone
// Il2CppName: UpdateSkinTone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::UpdateSkinTone)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "UpdateSkinTone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::PIJMPHDCCLL
// Il2CppName: PIJMPHDCCLL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::PIJMPHDCCLL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "PIJMPHDCCLL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::NPJCGNAKKIE
// Il2CppName: NPJCGNAKKIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::UnityEngine::GameObject*)>(&MagicalActual::PlayerAvatar::NPJCGNAKKIE)> {
  static const MethodInfo* get() {
    static auto* BJKNDBFNNHP = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "NPJCGNAKKIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BJKNDBFNNHP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::OECNPOIMEJO
// Il2CppName: OECNPOIMEJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::OECNPOIMEJO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "OECNPOIMEJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_myPrivateMessages
// Il2CppName: get_myPrivateMessages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_myPrivateMessages)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_myPrivateMessages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::HKIIOGJELAK
// Il2CppName: HKIIOGJELAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::ArrayW<::StringW>)>(&MagicalActual::PlayerAvatar::HKIIOGJELAK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "HKIIOGJELAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::JFCKGDGEOHJ
// Il2CppName: JFCKGDGEOHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::JFCKGDGEOHJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "JFCKGDGEOHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GHJHDIAAAOH
// Il2CppName: GHJHDIAAAOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::GHJHDIAAAOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GHJHDIAAAOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::UpdateBlocked
// Il2CppName: UpdateBlocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::UpdateBlocked)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "UpdateBlocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_isGhost
// Il2CppName: get_isGhost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_isGhost)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_isGhost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LKNEBNHFHEI
// Il2CppName: LKNEBNHFHEI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::ArrayW<bool>)>(&MagicalActual::PlayerAvatar::LKNEBNHFHEI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Boolean"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LKNEBNHFHEI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::AJNGCPNPLPL
// Il2CppName: AJNGCPNPLPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::AJNGCPNPLPL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "AJNGCPNPLPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_partyMemberPositionCache
// Il2CppName: get_partyMemberPositionCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::Vector3>* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_partyMemberPositionCache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_partyMemberPositionCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MMGAJJBJPNB
// Il2CppName: MMGAJJBJPNB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::MMGAJJBJPNB)> {
  static const MethodInfo* get() {
    static auto* LJMNLILKKBG = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MMGAJJBJPNB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LJMNLILKKBG});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GOPJCFHNGDA
// Il2CppName: GOPJCFHNGDA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::GOPJCFHNGDA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GOPJCFHNGDA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GMFMADJJPOP
// Il2CppName: GMFMADJJPOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(float)>(&MagicalActual::PlayerAvatar::GMFMADJJPOP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GMFMADJJPOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_currentWeight
// Il2CppName: get_currentWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_currentWeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_currentWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::NEDFIDILLIK
// Il2CppName: NEDFIDILLIK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::NEDFIDILLIK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "NEDFIDILLIK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MakeRigBasedAdjustments
// Il2CppName: MakeRigBasedAdjustments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::MakeRigBasedAdjustments)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MakeRigBasedAdjustments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::JOHJPONDMKP
// Il2CppName: JOHJPONDMKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::MagicalActual::Grabber*)>(&MagicalActual::PlayerAvatar::JOHJPONDMKP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "JOHJPONDMKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::EDAPCGCAFIK
// Il2CppName: EDAPCGCAFIK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::EDAPCGCAFIK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "EDAPCGCAFIK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_hasNewMissions
// Il2CppName: get_hasNewMissions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_hasNewMissions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_hasNewMissions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_recentBandit
// Il2CppName: get_recentBandit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_recentBandit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_recentBandit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::OLLMBGKLGCK
// Il2CppName: OLLMBGKLGCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::OLLMBGKLGCK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "OLLMBGKLGCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::IABDOKDICHJ
// Il2CppName: IABDOKDICHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::IABDOKDICHJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "IABDOKDICHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::getGrabberByIndex
// Il2CppName: getGrabberByIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::PlayerAvatar::*)(int)>(&MagicalActual::PlayerAvatar::getGrabberByIndex)> {
  static const MethodInfo* get() {
    static auto* FEHDKJKGNCE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "getGrabberByIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FEHDKJKGNCE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_doNotDisturb
// Il2CppName: get_doNotDisturb
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_doNotDisturb)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_doNotDisturb", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_resurrectionLock
// Il2CppName: get_resurrectionLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_resurrectionLock)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_resurrectionLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_vfxEnabled
// Il2CppName: get_vfxEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_vfxEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_vfxEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ForceHairStyle
// Il2CppName: ForceHairStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::ForceHairStyle)> {
  static const MethodInfo* get() {
    static auto* LJMNLILKKBG = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ForceHairStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LJMNLILKKBG});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::PJALGLMCBDB
// Il2CppName: PJALGLMCBDB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::ArrayW<::StringW>)>(&MagicalActual::PlayerAvatar::PJALGLMCBDB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "PJALGLMCBDB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::PLGJPLHABJO
// Il2CppName: PLGJPLHABJO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::PLGJPLHABJO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "PLGJPLHABJO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_leftHandActive
// Il2CppName: get_leftHandActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_leftHandActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_leftHandActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LAENJMJDPIE
// Il2CppName: LAENJMJDPIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::LAENJMJDPIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LAENJMJDPIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::PGHPEEGJFCP
// Il2CppName: PGHPEEGJFCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(int, ::ExtUI::InventoryItemInstance*, ::UnityEngine::GameObject*)>(&MagicalActual::PlayerAvatar::PGHPEEGJFCP)> {
  static const MethodInfo* get() {
    static auto* KLJOBGIPDDF = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* MPLBHJJHFOL = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    static auto* BDHPOGHPJHJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "PGHPEEGJFCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KLJOBGIPDDF, MPLBHJJHFOL, BDHPOGHPJHJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::JBGKDGIDIGN
// Il2CppName: JBGKDGIDIGN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::JBGKDGIDIGN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "JBGKDGIDIGN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::EGLDHNFMONI
// Il2CppName: EGLDHNFMONI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::EGLDHNFMONI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "EGLDHNFMONI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::EDLCCBJJPLJ
// Il2CppName: EDLCCBJJPLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint16_t, int)>(&MagicalActual::PlayerAvatar::EDLCCBJJPLJ)> {
  static const MethodInfo* get() {
    static auto* JGFIJDCMHDB = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    static auto* ADCNHKMKGHE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "EDLCCBJJPLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JGFIJDCMHDB, ADCNHKMKGHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_unlockedDLC
// Il2CppName: get_unlockedDLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_unlockedDLC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_unlockedDLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::JHNLAIJCIKH
// Il2CppName: JHNLAIJCIKH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::JHNLAIJCIKH)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "JHNLAIJCIKH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LALMKDPOCNE
// Il2CppName: LALMKDPOCNE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::UnityEngine::Quaternion)>(&MagicalActual::PlayerAvatar::LALMKDPOCNE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LALMKDPOCNE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::CJLOGMOCHOM
// Il2CppName: CJLOGMOCHOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::CJLOGMOCHOM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "CJLOGMOCHOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_teleportingHand
// Il2CppName: get_teleportingHand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_teleportingHand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_teleportingHand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::IPADCDFJIBA
// Il2CppName: IPADCDFJIBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::ArrayW<::StringW>)>(&MagicalActual::PlayerAvatar::IPADCDFJIBA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "IPADCDFJIBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::DisableToolbelt
// Il2CppName: DisableToolbelt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::DisableToolbelt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "DisableToolbelt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MBLBENENIBB
// Il2CppName: MBLBENENIBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::MBLBENENIBB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MBLBENENIBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_equipmentBySlot
// Il2CppName: get_equipmentBySlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::ExtUI::InventoryItemInstance*>* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_equipmentBySlot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_equipmentBySlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::POOMBNMHAKE
// Il2CppName: POOMBNMHAKE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::POOMBNMHAKE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "POOMBNMHAKE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LBJANOBPPDN
// Il2CppName: LBJANOBPPDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color32 (MagicalActual::PlayerAvatar::*)(int)>(&MagicalActual::PlayerAvatar::LBJANOBPPDN)> {
  static const MethodInfo* get() {
    static auto* EFPDHLNIAOM = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LBJANOBPPDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EFPDHLNIAOM});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_rigType
// Il2CppName: get_rigType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_rigType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_rigType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LoadDummyModule
// Il2CppName: LoadDummyModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW, ::StringW)>(&MagicalActual::PlayerAvatar::LoadDummyModule)> {
  static const MethodInfo* get() {
    static auto* CPOHGNBHACO = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* IOMFFCKFIHE = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LoadDummyModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CPOHGNBHACO, IOMFFCKFIHE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_currentClassId
// Il2CppName: get_currentClassId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_currentClassId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_currentClassId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MFHLDCADNKD
// Il2CppName: MFHLDCADNKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::UnityEngine::GameObject*)>(&MagicalActual::PlayerAvatar::MFHLDCADNKD)> {
  static const MethodInfo* get() {
    static auto* BJKNDBFNNHP = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MFHLDCADNKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BJKNDBFNNHP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::equipSlot
// Il2CppName: equipSlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::UnityEngine::GameObject*, int, int, bool, ::System::Action*)>(&MagicalActual::PlayerAvatar::equipSlot)> {
  static const MethodInfo* get() {
    static auto* BDHPOGHPJHJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* FMMGOLGHEJP = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* KIIKEMANPPI = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* GGKJJEBAMBP = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* OOMLAOPBDDP = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "equipSlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BDHPOGHPJHJ, FMMGOLGHEJP, KIIKEMANPPI, GGKJJEBAMBP, OOMLAOPBDDP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_fellowshipMemberIds
// Il2CppName: get_fellowshipMemberIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_fellowshipMemberIds)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_fellowshipMemberIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::IFGEFGNNFMO
// Il2CppName: IFGEFGNNFMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::UnityEngine::GameObject*, ::StringW, int, ::ExtUI::InventoryItemInstance*)>(&MagicalActual::PlayerAvatar::IFGEFGNNFMO)> {
  static const MethodInfo* get() {
    static auto* BDHPOGHPJHJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* KCPBJJKEMPD = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* KIIKEMANPPI = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* GNJPHGDOHAC = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "IFGEFGNNFMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BDHPOGHPJHJ, KCPBJJKEMPD, KIIKEMANPPI, GNJPHGDOHAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::NJIECIBKGCB
// Il2CppName: NJIECIBKGCB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::NJIECIBKGCB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "NJIECIBKGCB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::CGMKGMMIBEF
// Il2CppName: CGMKGMMIBEF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint16_t)>(&MagicalActual::PlayerAvatar::CGMKGMMIBEF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "CGMKGMMIBEF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::DIGODPCJDOE
// Il2CppName: DIGODPCJDOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::DIGODPCJDOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "DIGODPCJDOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::PromptDungeonQueue
// Il2CppName: PromptDungeonQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::PromptDungeonQueue)> {
  static const MethodInfo* get() {
    static auto* ANCJMBHEDKF = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "PromptDungeonQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ANCJMBHEDKF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::PGKGEJLAINF
// Il2CppName: PGKGEJLAINF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PlayerAvatar::*)(::UnityEngine::GameObject*)>(&MagicalActual::PlayerAvatar::PGKGEJLAINF)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "PGKGEJLAINF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::JEIKBDBNBMA
// Il2CppName: JEIKBDBNBMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::JEIKBDBNBMA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "JEIKBDBNBMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::JANKGOKLILL
// Il2CppName: JANKGOKLILL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::JANKGOKLILL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "JANKGOKLILL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::AICDNAAEDBA
// Il2CppName: AICDNAAEDBA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::AICDNAAEDBA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "AICDNAAEDBA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_zoneMutations
// Il2CppName: get_zoneMutations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::StringW>* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_zoneMutations)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_zoneMutations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_inMyParty
// Il2CppName: get_inMyParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_inMyParty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_inMyParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KCCKHIJNILH
// Il2CppName: KCCKHIJNILH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(float)>(&MagicalActual::PlayerAvatar::KCCKHIJNILH)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KCCKHIJNILH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MIHEBFCBEOG
// Il2CppName: MIHEBFCBEOG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::MIHEBFCBEOG)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MIHEBFCBEOG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LBJIPBKPBCD
// Il2CppName: LBJIPBKPBCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::LBJIPBKPBCD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LBJIPBKPBCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GIAANMMEEIM
// Il2CppName: GIAANMMEEIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::GIAANMMEEIM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GIAANMMEEIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LDPMCLGLMDG
// Il2CppName: LDPMCLGLMDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::LDPMCLGLMDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LDPMCLGLMDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PlayerAvatar::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::FBHFJDGAILB
// Il2CppName: FBHFJDGAILB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::ArrayW<::StringW>)>(&MagicalActual::PlayerAvatar::FBHFJDGAILB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "FBHFJDGAILB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ResetPosition
// Il2CppName: ResetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::ResetPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ResetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::IAGOEMIPAEL
// Il2CppName: IAGOEMIPAEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(float)>(&MagicalActual::PlayerAvatar::IAGOEMIPAEL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "IAGOEMIPAEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LBMABJFPFHB
// Il2CppName: LBMABJFPFHB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::LBMABJFPFHB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LBMABJFPFHB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_leftGrabberComponent
// Il2CppName: get_leftGrabberComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::Grabber* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_leftGrabberComponent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_leftGrabberComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_skinTonePercent
// Il2CppName: get_skinTonePercent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_skinTonePercent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_skinTonePercent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::updateMyEquipment
// Il2CppName: updateMyEquipment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW, uint8_t)>(&MagicalActual::PlayerAvatar::updateMyEquipment)> {
  static const MethodInfo* get() {
    static auto* KOOIIFLJMFM = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* GPIONJECACO = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "updateMyEquipment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{KOOIIFLJMFM, GPIONJECACO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::UpdateCustomAppearance
// Il2CppName: UpdateCustomAppearance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::UpdateCustomAppearance)> {
  static const MethodInfo* get() {
    static auto* NDIOMBJMNAC = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "UpdateCustomAppearance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{NDIOMBJMNAC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_fellowshipLevel
// Il2CppName: get_fellowshipLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_fellowshipLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_fellowshipLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::NBBGCNJAPOA
// Il2CppName: NBBGCNJAPOA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(int)>(&MagicalActual::PlayerAvatar::NBBGCNJAPOA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "NBBGCNJAPOA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_zoneMessage
// Il2CppName: get_zoneMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_zoneMessage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_zoneMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_rightHandStatus
// Il2CppName: get_rightHandStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_rightHandStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_rightHandStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LMFKEJLGOKA
// Il2CppName: LMFKEJLGOKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::LMFKEJLGOKA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LMFKEJLGOKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ForceHairColor
// Il2CppName: ForceHairColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::ForceHairColor)> {
  static const MethodInfo* get() {
    static auto* GPKOKOJALNP = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ForceHairColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GPKOKOJALNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_isBandit
// Il2CppName: get_isBandit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_isBandit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_isBandit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_showSpecialPopup
// Il2CppName: get_showSpecialPopup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_showSpecialPopup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_showSpecialPopup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_teleportTrailIdx
// Il2CppName: get_teleportTrailIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_teleportTrailIdx)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_teleportTrailIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LAGCJKOMMBL
// Il2CppName: LAGCJKOMMBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::LAGCJKOMMBL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LAGCJKOMMBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_maxWeight
// Il2CppName: get_maxWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_maxWeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_maxWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::EDGHKLDEGFE
// Il2CppName: EDGHKLDEGFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::EDGHKLDEGFE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "EDGHKLDEGFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::CIPAPJNEAJB
// Il2CppName: CIPAPJNEAJB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::CIPAPJNEAJB)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "CIPAPJNEAJB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LIFBKPOGPAF
// Il2CppName: LIFBKPOGPAF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::UnityEngine::Vector3)>(&MagicalActual::PlayerAvatar::LIFBKPOGPAF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LIFBKPOGPAF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::EnableToolbelt
// Il2CppName: EnableToolbelt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::EnableToolbelt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "EnableToolbelt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GHAJFPOFLPN
// Il2CppName: GHAJFPOFLPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(int)>(&MagicalActual::PlayerAvatar::GHAJFPOFLPN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GHAJFPOFLPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_fellowshipName
// Il2CppName: get_fellowshipName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_fellowshipName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_fellowshipName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::DOLCLACKKHO
// Il2CppName: DOLCLACKKHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::DOLCLACKKHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "DOLCLACKKHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::UnloadDummyModule
// Il2CppName: UnloadDummyModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::UnloadDummyModule)> {
  static const MethodInfo* get() {
    static auto* CPOHGNBHACO = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "UnloadDummyModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CPOHGNBHACO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_voicePlaybackStarted
// Il2CppName: get_voicePlaybackStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_voicePlaybackStarted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_voicePlaybackStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::PromptClickChoice
// Il2CppName: PromptClickChoice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::PromptClickChoice)> {
  static const MethodInfo* get() {
    static auto* ANCJMBHEDKF = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "PromptClickChoice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ANCJMBHEDKF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ALBFJELCLAD
// Il2CppName: ALBFJELCLAD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::ALBFJELCLAD)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ALBFJELCLAD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ForceMouthSet
// Il2CppName: ForceMouthSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::ForceMouthSet)> {
  static const MethodInfo* get() {
    static auto* PFCCGJGBKKL = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ForceMouthSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PFCCGJGBKKL});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MEPJCAMMCCK
// Il2CppName: MEPJCAMMCCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::MEPJCAMMCCK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MEPJCAMMCCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::IBKMFOHGBAA
// Il2CppName: IBKMFOHGBAA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::IBKMFOHGBAA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "IBKMFOHGBAA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ForceSkinTonePercent
// Il2CppName: ForceSkinTonePercent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(float)>(&MagicalActual::PlayerAvatar::ForceSkinTonePercent)> {
  static const MethodInfo* get() {
    static auto* OCLHGBCNNEI = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ForceSkinTonePercent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OCLHGBCNNEI});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::JDMPFPMBFJP
// Il2CppName: JDMPFPMBFJP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (MagicalActual::PlayerAvatar::*)(int)>(&MagicalActual::PlayerAvatar::JDMPFPMBFJP)> {
  static const MethodInfo* get() {
    static auto* FEHDKJKGNCE = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "JDMPFPMBFJP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FEHDKJKGNCE});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_isFellowshipLeader
// Il2CppName: get_isFellowshipLeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_isFellowshipLeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_isFellowshipLeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::updateMyEquipment
// Il2CppName: updateMyEquipment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::updateMyEquipment)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "updateMyEquipment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ResetForLogout
// Il2CppName: ResetForLogout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::ResetForLogout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ResetForLogout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::InitialPoolingStart
// Il2CppName: InitialPoolingStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::InitialPoolingStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "InitialPoolingStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_inventory
// Il2CppName: get_inventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_inventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_inventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MCABIIOCIBD
// Il2CppName: MCABIIOCIBD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(float)>(&MagicalActual::PlayerAvatar::MCABIIOCIBD)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MCABIIOCIBD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::HJLLJMIKMML
// Il2CppName: HJLLJMIKMML
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::HJLLJMIKMML)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "HJLLJMIKMML", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::getGrabberIndex
// Il2CppName: getGrabberIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PlayerAvatar::*)(::UnityEngine::GameObject*)>(&MagicalActual::PlayerAvatar::getGrabberIndex)> {
  static const MethodInfo* get() {
    static auto* BALIAOKIHIC = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "getGrabberIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BALIAOKIHIC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::DHKPPAENLLA
// Il2CppName: DHKPPAENLLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::MagicalActual::NetEntity*)>(&MagicalActual::PlayerAvatar::DHKPPAENLLA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "DHKPPAENLLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_onTaxi
// Il2CppName: get_onTaxi
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_onTaxi)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_onTaxi", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::UnloadAllModules
// Il2CppName: UnloadAllModules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::UnloadAllModules)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "UnloadAllModules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::EPDAFBKIMKD
// Il2CppName: EPDAFBKIMKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::EPDAFBKIMKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "EPDAFBKIMKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::StopFlying
// Il2CppName: StopFlying
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::StopFlying)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "StopFlying", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::DLOMBPGIKPF
// Il2CppName: DLOMBPGIKPF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::DLOMBPGIKPF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "DLOMBPGIKPF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_partyStatus
// Il2CppName: get_partyStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_partyStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_partyStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::UnloadModule
// Il2CppName: UnloadModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::UnloadModule)> {
  static const MethodInfo* get() {
    static auto* CPOHGNBHACO = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "UnloadModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CPOHGNBHACO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MAKLACOCBDM
// Il2CppName: MAKLACOCBDM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::MAKLACOCBDM)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MAKLACOCBDM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_encumberedStatus
// Il2CppName: get_encumberedStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_encumberedStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_encumberedStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GOCJHIEMOML
// Il2CppName: GOCJHIEMOML
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::GOCJHIEMOML)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GOCJHIEMOML", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ForceShowHelm
// Il2CppName: ForceShowHelm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::ForceShowHelm)> {
  static const MethodInfo* get() {
    static auto* JBAKFAAGDOM = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ForceShowHelm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{JBAKFAAGDOM});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MDHMJBKLBBJ
// Il2CppName: MDHMJBKLBBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::MDHMJBKLBBJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MDHMJBKLBBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::UpdateWarningText
// Il2CppName: UpdateWarningText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::UpdateWarningText)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "UpdateWarningText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::NJCCCBJEAHF
// Il2CppName: NJCCCBJEAHF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::NJCCCBJEAHF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "NJCCCBJEAHF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::myPositionAtGroundLevel
// Il2CppName: myPositionAtGroundLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::myPositionAtGroundLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "myPositionAtGroundLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LHDNLJPCEBI
// Il2CppName: LHDNLJPCEBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::LHDNLJPCEBI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LHDNLJPCEBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ReceiveToolSignal
// Il2CppName: ReceiveToolSignal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t, uint8_t)>(&MagicalActual::PlayerAvatar::ReceiveToolSignal)> {
  static const MethodInfo* get() {
    static auto* MLJHLAGOCMM = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* KLIPNGBEELK = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ReceiveToolSignal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MLJHLAGOCMM, KLIPNGBEELK});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ForceEyeSet
// Il2CppName: ForceEyeSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::ForceEyeSet)> {
  static const MethodInfo* get() {
    static auto* PFCCGJGBKKL = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ForceEyeSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PFCCGJGBKKL});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::OOFBMFMKKHJ
// Il2CppName: OOFBMFMKKHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::OOFBMFMKKHJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "OOFBMFMKKHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_myMonster
// Il2CppName: get_myMonster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::Monster* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_myMonster)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_myMonster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::setVoicePlayerbackStarted
// Il2CppName: setVoicePlayerbackStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::setVoicePlayerbackStarted)> {
  static const MethodInfo* get() {
    static auto* PJPJPPPBLGC = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "setVoicePlayerbackStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PJPJPPPBLGC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_partyMemberNames
// Il2CppName: get_partyMemberNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_partyMemberNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_partyMemberNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GJPLIJLGMHD
// Il2CppName: GJPLIJLGMHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::GJPLIJLGMHD)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GJPLIJLGMHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_isSpeaking
// Il2CppName: get_isSpeaking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_isSpeaking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_isSpeaking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_partyRole
// Il2CppName: get_partyRole
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_partyRole)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_partyRole", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LNLAILPGKDO
// Il2CppName: LNLAILPGKDO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::MagicalActual::Grabber*)>(&MagicalActual::PlayerAvatar::LNLAILPGKDO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LNLAILPGKDO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ECFGMCCBAFN
// Il2CppName: ECFGMCCBAFN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::ECFGMCCBAFN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ECFGMCCBAFN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_leftHandStatus
// Il2CppName: get_leftHandStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_leftHandStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_leftHandStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::setLeftHandActive
// Il2CppName: setLeftHandActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::setLeftHandActive)> {
  static const MethodInfo* get() {
    static auto* PJPJPPPBLGC = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "setLeftHandActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PJPJPPPBLGC});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GFMNHHOCHMO
// Il2CppName: GFMNHHOCHMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(float)>(&MagicalActual::PlayerAvatar::GFMNHHOCHMO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GFMNHHOCHMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KNHNNHKCGNP
// Il2CppName: KNHNNHKCGNP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::KNHNNHKCGNP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KNHNNHKCGNP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::AADKLNELPHF
// Il2CppName: AADKLNELPHF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::AADKLNELPHF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "AADKLNELPHF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::DOMMNGBGKMF
// Il2CppName: DOMMNGBGKMF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::DOMMNGBGKMF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "DOMMNGBGKMF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::StartClass
// Il2CppName: StartClass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::MagicalActual::PlayerClass*)>(&MagicalActual::PlayerAvatar::StartClass)> {
  static const MethodInfo* get() {
    static auto* LHACLEFKABL = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerClass")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "StartClass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LHACLEFKABL});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GJBDLAOAMCK
// Il2CppName: GJBDLAOAMCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::GJBDLAOAMCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GJBDLAOAMCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ForceEyeColor
// Il2CppName: ForceEyeColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::ForceEyeColor)> {
  static const MethodInfo* get() {
    static auto* GPKOKOJALNP = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ForceEyeColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GPKOKOJALNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LNMDJLDJEBM
// Il2CppName: LNMDJLDJEBM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::LNMDJLDJEBM)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LNMDJLDJEBM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::SetFellowshipChat
// Il2CppName: SetFellowshipChat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::SetFellowshipChat)> {
  static const MethodInfo* get() {
    static auto* MNGIKDGFMIK = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "SetFellowshipChat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MNGIKDGFMIK});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::IJMCALBKFKM
// Il2CppName: IJMCALBKFKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::IJMCALBKFKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "IJMCALBKFKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_rightFingerStatus
// Il2CppName: get_rightFingerStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_rightFingerStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_rightFingerStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::NNPKKFHFHCP
// Il2CppName: NNPKKFHFHCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::NNPKKFHFHCP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "NNPKKFHFHCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GJCIBJKKHNN
// Il2CppName: GJCIBJKKHNN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::GJCIBJKKHNN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GJCIBJKKHNN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::lodLevel
// Il2CppName: lodLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::lodLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "lodLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::NDKKFPHEHNC
// Il2CppName: NDKKFPHEHNC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::NDKKFPHEHNC)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "NDKKFPHEHNC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::OverrideSkinTone
// Il2CppName: OverrideSkinTone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::UnityEngine::Color)>(&MagicalActual::PlayerAvatar::OverrideSkinTone)> {
  static const MethodInfo* get() {
    static auto* GPKOKOJALNP = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "OverrideSkinTone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{GPKOKOJALNP});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::IFMJPMMKIDN
// Il2CppName: IFMJPMMKIDN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::IFMJPMMKIDN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "IFMJPMMKIDN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_rightGrabberComponent
// Il2CppName: get_rightGrabberComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::Grabber* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_rightGrabberComponent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_rightGrabberComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::getControllerType
// Il2CppName: getControllerType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::getControllerType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "getControllerType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KJJILFNKGJH
// Il2CppName: KJJILFNKGJH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::KJJILFNKGJH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KJJILFNKGJH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::PJHPOPMEDDI
// Il2CppName: PJHPOPMEDDI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::PJHPOPMEDDI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "PJHPOPMEDDI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::FBLAMKJHKND
// Il2CppName: FBLAMKJHKND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::FBLAMKJHKND)> {
  static const MethodInfo* get() {
    static auto* BMDFAJBDDEK = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "FBLAMKJHKND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{BMDFAJBDDEK});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::NOMGBJBJADP
// Il2CppName: NOMGBJBJADP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::System::Collections::Generic::List_1<::StringW>*)>(&MagicalActual::PlayerAvatar::NOMGBJBJADP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "NOMGBJBJADP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::SetToLodLevel
// Il2CppName: SetToLodLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(int)>(&MagicalActual::PlayerAvatar::SetToLodLevel)> {
  static const MethodInfo* get() {
    static auto* IGOICFCJHDB = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "SetToLodLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{IGOICFCJHDB});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_fellowshipXP
// Il2CppName: get_fellowshipXP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_fellowshipXP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_fellowshipXP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::PLFBFLPDAHP
// Il2CppName: PLFBFLPDAHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::PLFBFLPDAHP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "PLFBFLPDAHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_leftFingerStatus
// Il2CppName: get_leftFingerStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_leftFingerStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_leftFingerStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::UpdateRightHandWeaponActive
// Il2CppName: UpdateRightHandWeaponActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::UpdateRightHandWeaponActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "UpdateRightHandWeaponActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::HKFOHGNFHMJ
// Il2CppName: HKFOHGNFHMJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::HKFOHGNFHMJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "HKFOHGNFHMJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MHBIKJJLPLH
// Il2CppName: MHBIKJJLPLH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::MHBIKJJLPLH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MHBIKJJLPLH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::OIFAIHHIJLF
// Il2CppName: OIFAIHHIJLF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::OIFAIHHIJLF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "OIFAIHHIJLF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::set_playerMount
// Il2CppName: set_playerMount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::MagicalActual::PlayerMount*)>(&MagicalActual::PlayerAvatar::set_playerMount)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "PlayerMount")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "set_playerMount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::NKOJDPHEDIF
// Il2CppName: NKOJDPHEDIF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(float)>(&MagicalActual::PlayerAvatar::NKOJDPHEDIF)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "NKOJDPHEDIF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::indicateSpeaking
// Il2CppName: indicateSpeaking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::indicateSpeaking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "indicateSpeaking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::CAPEJDIIMFA
// Il2CppName: CAPEJDIIMFA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::CAPEJDIIMFA)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "CAPEJDIIMFA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::AEBIMHIMCGA
// Il2CppName: AEBIMHIMCGA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::AEBIMHIMCGA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "AEBIMHIMCGA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::shouldShowVfx
// Il2CppName: shouldShowVfx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::shouldShowVfx)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "shouldShowVfx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::MKCAIANIGFE
// Il2CppName: MKCAIANIGFE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::System::Collections::Generic::Dictionary_2<::StringW, ::ExtUI::InventoryItemInstance*>*)>(&MagicalActual::PlayerAvatar::MKCAIANIGFE)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "MKCAIANIGFE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_playerTitle
// Il2CppName: get_playerTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_playerTitle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_playerTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_inFellowship
// Il2CppName: get_inFellowship
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_inFellowship)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_inFellowship", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_playerMount
// Il2CppName: get_playerMount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerMount* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_playerMount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_playerMount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LCBAFHFEIGP
// Il2CppName: LCBAFHFEIGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::LCBAFHFEIGP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LCBAFHFEIGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KPNHDIAIECC
// Il2CppName: KPNHDIAIECC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&MagicalActual::PlayerAvatar::KPNHDIAIECC)> {
  static const MethodInfo* get() {
    static auto* PBDNAOOOFGN = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* BBBDDEHKJIN = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KPNHDIAIECC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{PBDNAOOOFGN, BBBDDEHKJIN});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ReadyUpPromptClickChoice
// Il2CppName: ReadyUpPromptClickChoice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::ReadyUpPromptClickChoice)> {
  static const MethodInfo* get() {
    static auto* ANCJMBHEDKF = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ReadyUpPromptClickChoice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ANCJMBHEDKF});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::getMyAppearance
// Il2CppName: getMyAppearance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::AvatarAppearance* (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::getMyAppearance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "getMyAppearance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KIFKIPGACMO
// Il2CppName: KIFKIPGACMO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::KIFKIPGACMO)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KIFKIPGACMO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::BEDCMOHLKOP
// Il2CppName: BEDCMOHLKOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool)>(&MagicalActual::PlayerAvatar::BEDCMOHLKOP)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "BEDCMOHLKOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LoadModule
// Il2CppName: LoadModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::LoadModule)> {
  static const MethodInfo* get() {
    static auto* CPOHGNBHACO = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LoadModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CPOHGNBHACO});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::GPNCINHIINH
// Il2CppName: GPNCINHIINH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::ArrayW<::StringW>)>(&MagicalActual::PlayerAvatar::GPNCINHIINH)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "GPNCINHIINH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_xpChainBonusExpires
// Il2CppName: get_xpChainBonusExpires
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_xpChainBonusExpires)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_xpChainBonusExpires", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::FAMJJMAIBFP
// Il2CppName: FAMJJMAIBFP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::FAMJJMAIBFP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "FAMJJMAIBFP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_fellowshipStatus
// Il2CppName: get_fellowshipStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_fellowshipStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_fellowshipStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_fellowshipId
// Il2CppName: get_fellowshipId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_fellowshipId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_fellowshipId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::SetIsSpeaking
// Il2CppName: SetIsSpeaking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(bool, double)>(&MagicalActual::PlayerAvatar::SetIsSpeaking)> {
  static const MethodInfo* get() {
    static auto* AHLKDAJPCLA = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* NOGJKMLEEDM = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "SetIsSpeaking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{AHLKDAJPCLA, NOGJKMLEEDM});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KEBOKGFLFJA
// Il2CppName: KEBOKGFLFJA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::KEBOKGFLFJA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KEBOKGFLFJA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_playerDbId
// Il2CppName: get_playerDbId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_playerDbId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_playerDbId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::HJDHDBPOLBN
// Il2CppName: HJDHDBPOLBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::StringW)>(&MagicalActual::PlayerAvatar::HJDHDBPOLBN)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "HJDHDBPOLBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KJAKHBDCAGG
// Il2CppName: KJAKHBDCAGG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::ArrayW<::StringW>)>(&MagicalActual::PlayerAvatar::KJAKHBDCAGG)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KJAKHBDCAGG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_banditFlag
// Il2CppName: get_banditFlag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_banditFlag)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_banditFlag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::KAGHKNKKDEI
// Il2CppName: KAGHKNKKDEI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::KAGHKNKKDEI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "KAGHKNKKDEI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::OLDINLJOOOC
// Il2CppName: OLDINLJOOOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(int)>(&MagicalActual::PlayerAvatar::OLDINLJOOOC)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "OLDINLJOOOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::ForceNoseStyle
// Il2CppName: ForceNoseStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(uint8_t)>(&MagicalActual::PlayerAvatar::ForceNoseStyle)> {
  static const MethodInfo* get() {
    static auto* LJMNLILKKBG = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "ForceNoseStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{LJMNLILKKBG});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::LMMKABHGOIL
// Il2CppName: LMMKABHGOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)(::ArrayW<::StringW>)>(&MagicalActual::PlayerAvatar::LMMKABHGOIL)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "LMMKABHGOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::indicateStoppedSpeaking
// Il2CppName: indicateStoppedSpeaking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::indicateStoppedSpeaking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "indicateStoppedSpeaking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::get_rightHandActive
// Il2CppName: get_rightHandActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::get_rightHandActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "get_rightHandActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::markersCreatedRecieved
// Il2CppName: markersCreatedRecieved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::markersCreatedRecieved)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "markersCreatedRecieved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::PlayerAvatar::UpdateLeftHandWeaponActive
// Il2CppName: UpdateLeftHandWeaponActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::PlayerAvatar::*)()>(&MagicalActual::PlayerAvatar::UpdateLeftHandWeaponActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::PlayerAvatar*), "UpdateLeftHandWeaponActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
