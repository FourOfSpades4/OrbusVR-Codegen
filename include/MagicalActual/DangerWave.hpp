// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: SkinnedMeshRenderer
  class SkinnedMeshRenderer;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: DangerWave
  class DangerWave;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::DangerWave);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::DangerWave*, "MagicalActual", "DangerWave");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x6E
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.DangerWave
  // [TokenAttribute] Offset: FFFFFFFF
  class DangerWave : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::DangerWave::$$c
    class $$c;
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private UnityEngine.SkinnedMeshRenderer myRenderer
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::SkinnedMeshRenderer* myRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::SkinnedMeshRenderer*) == 0x8);
    // private UnityEngine.SkinnedMeshRenderer myRenderer2
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::SkinnedMeshRenderer* myRenderer2;
    // Field size check
    static_assert(sizeof(::UnityEngine::SkinnedMeshRenderer*) == 0x8);
    // private System.Single startSize
    // Size: 0x4
    // Offset: 0x38
    float startSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single endSize
    // Size: 0x4
    // Offset: 0x3C
    float endSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single startRadius
    // Size: 0x4
    // Offset: 0x40
    float startRadius;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single endRadius
    // Size: 0x4
    // Offset: 0x44
    float endRadius;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single thickness
    // Size: 0x4
    // Offset: 0x48
    float thickness;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single speed
    // Size: 0x4
    // Offset: 0x4C
    float speed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single expireTime
    // Size: 0x4
    // Offset: 0x50
    float expireTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: expireTime and: particles
    char __padding10[0x4] = {};
    // private UnityEngine.GameObject particles
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::GameObject* particles;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single LONMIFNBEAA
    // Size: 0x4
    // Offset: 0x60
    float LONMIFNBEAA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single PJEOPAJNNOC
    // Size: 0x4
    // Offset: 0x64
    float PJEOPAJNNOC;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MDDBKDNPEOK
    // Size: 0x4
    // Offset: 0x68
    float MDDBKDNPEOK;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean FECAIDNKEJJ
    // Size: 0x1
    // Offset: 0x6C
    bool FECAIDNKEJJ;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean AEMOLLFOCLI
    // Size: 0x1
    // Offset: 0x6D
    bool AEMOLLFOCLI;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private UnityEngine.SkinnedMeshRenderer myRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& dyn_myRenderer();
    // Get instance field reference: private UnityEngine.SkinnedMeshRenderer myRenderer2
    [[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& dyn_myRenderer2();
    // Get instance field reference: private System.Single startSize
    [[deprecated("Use field access instead!")]] float& dyn_startSize();
    // Get instance field reference: private System.Single endSize
    [[deprecated("Use field access instead!")]] float& dyn_endSize();
    // Get instance field reference: private System.Single startRadius
    [[deprecated("Use field access instead!")]] float& dyn_startRadius();
    // Get instance field reference: private System.Single endRadius
    [[deprecated("Use field access instead!")]] float& dyn_endRadius();
    // Get instance field reference: private System.Single thickness
    [[deprecated("Use field access instead!")]] float& dyn_thickness();
    // Get instance field reference: private System.Single speed
    [[deprecated("Use field access instead!")]] float& dyn_speed();
    // Get instance field reference: private System.Single expireTime
    [[deprecated("Use field access instead!")]] float& dyn_expireTime();
    // Get instance field reference: private UnityEngine.GameObject particles
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_particles();
    // Get instance field reference: private System.Single LONMIFNBEAA
    [[deprecated("Use field access instead!")]] float& dyn_LONMIFNBEAA();
    // Get instance field reference: private System.Single PJEOPAJNNOC
    [[deprecated("Use field access instead!")]] float& dyn_PJEOPAJNNOC();
    // Get instance field reference: private System.Single MDDBKDNPEOK
    [[deprecated("Use field access instead!")]] float& dyn_MDDBKDNPEOK();
    // Get instance field reference: private System.Boolean FECAIDNKEJJ
    [[deprecated("Use field access instead!")]] bool& dyn_FECAIDNKEJJ();
    // Get instance field reference: private System.Boolean AEMOLLFOCLI
    [[deprecated("Use field access instead!")]] bool& dyn_AEMOLLFOCLI();
    // private System.Void JNHNEBOHOIB()
    // Offset: 0x19B4758
    void JNHNEBOHOIB();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x19B4834
    void IDOCJGNLNFL();
    // public System.Void OFDMFGNMEOP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19B4910
    void OFDMFGNMEOP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x19B4918
    void EPCHNEGNKNF();
    // private System.Void FMCFFLJCCCP()
    // Offset: 0x19B49F4
    void FMCFFLJCCCP();
    // private System.Void GHLPBOJJHNG()
    // Offset: 0x19B4E04
    void GHLPBOJJHNG();
    // public System.Void DPFCHCEODPP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19B4EE0
    void DPFCHCEODPP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void Start()
    // Offset: 0x19B4EE8
    void Start();
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x19B4FBC
    void FGIFGGNGKPK();
    // private System.Void CHMCEGMCENL()
    // Offset: 0x19B5098
    void CHMCEGMCENL();
    // private System.Void Update()
    // Offset: 0x19B54AC
    void Update();
    // private System.Void GECHLDPLPCC()
    // Offset: 0x19B58BC
    void GECHLDPLPCC();
    // public System.Void IKDGLCBOCJG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19B5998
    void IKDGLCBOCJG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void AFIACGLCIPB()
    // Offset: 0x19B59A0
    void AFIACGLCIPB();
    // private System.Void PKLDGKBPOAP()
    // Offset: 0x19B5A7C
    void PKLDGKBPOAP();
    // public System.Void KEGEKFNLCJD(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19B5E8C
    void KEGEKFNLCJD(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void GEJIJMPGALF()
    // Offset: 0x19B5E94
    void GEJIJMPGALF();
    // private System.Void DEGCMEJJNJI()
    // Offset: 0x19B62A8
    void DEGCMEJJNJI();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x19B6384
    void CBMDGNKFPIO();
    // public System.Void MMJIKEBHBJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19B6460
    void MMJIKEBHBJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void NOLENMEIGLN(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19B6468
    void NOLENMEIGLN(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PNKHLJDEJNA()
    // Offset: 0x19B6470
    void PNKHLJDEJNA();
    // private System.Void MJKAGCAKHHO()
    // Offset: 0x19B6884
    void MJKAGCAKHHO();
    // public System.Void IEDNIMMEJBL(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19B6C94
    void IEDNIMMEJBL(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void FNMKMDHHFDG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19B6C9C
    void FNMKMDHHFDG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19B6CA4
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PPKHOKCIJBL()
    // Offset: 0x19B6CAC
    void PPKHOKCIJBL();
    // private System.Void FBDBGKLFFOI()
    // Offset: 0x19B70BC
    void FBDBGKLFFOI();
    // public System.Void BLBKOOGJNBB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19B74CC
    void BLBKOOGJNBB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x19B74D4
    void EIIKFEMCNKM();
    // private System.Void GHBOEBHBEEJ()
    // Offset: 0x19B75B0
    void GHBOEBHBEEJ();
    // private System.Void EBNFNLMHNGE()
    // Offset: 0x19B79C4
    void EBNFNLMHNGE();
    // private System.Void APIMIOELFAJ()
    // Offset: 0x19B7DD8
    void APIMIOELFAJ();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x19B7EB4
    void KPOAAAHLGLA();
    // private System.Void JJNHCABMBIH()
    // Offset: 0x19B7F90
    void JJNHCABMBIH();
    // private System.Void HJKFJENIJFO()
    // Offset: 0x19B83A0
    void HJKFJENIJFO();
    // private System.Void ABCHNNEJECC()
    // Offset: 0x19B847C
    void ABCHNNEJECC();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x19B888C
    void BDEDGNGMHMN();
    // private System.Void DGJGAFKDIDK()
    // Offset: 0x19B8968
    void DGJGAFKDIDK();
    // private System.Void GLPPOHKJANF()
    // Offset: 0x19B8A44
    void GLPPOHKJANF();
    // public System.Void .ctor()
    // Offset: 0x19B8E50
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DangerWave* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::DangerWave::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DangerWave*, creationType>()));
    }
    // public System.Void JOCIAJOCGNM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x19B8EA8
    void JOCIAJOCGNM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void JGPEKDOEPOC()
    // Offset: 0x19B8EB0
    void JGPEKDOEPOC();
  }; // MagicalActual.DangerWave
  #pragma pack(pop)
  static check_size<sizeof(DangerWave), 109 + sizeof(bool)> __MagicalActual_DangerWaveSizeCheck;
  static_assert(sizeof(DangerWave) == 0x6E);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::DangerWave::JNHNEBOHOIB
// Il2CppName: JNHNEBOHOIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::JNHNEBOHOIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "JNHNEBOHOIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::OFDMFGNMEOP
// Il2CppName: OFDMFGNMEOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DangerWave::OFDMFGNMEOP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "OFDMFGNMEOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::FMCFFLJCCCP
// Il2CppName: FMCFFLJCCCP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::FMCFFLJCCCP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "FMCFFLJCCCP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::GHLPBOJJHNG
// Il2CppName: GHLPBOJJHNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::GHLPBOJJHNG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "GHLPBOJJHNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::DPFCHCEODPP
// Il2CppName: DPFCHCEODPP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DangerWave::DPFCHCEODPP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "DPFCHCEODPP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::CHMCEGMCENL
// Il2CppName: CHMCEGMCENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::CHMCEGMCENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "CHMCEGMCENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::GECHLDPLPCC
// Il2CppName: GECHLDPLPCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::GECHLDPLPCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "GECHLDPLPCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::IKDGLCBOCJG
// Il2CppName: IKDGLCBOCJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DangerWave::IKDGLCBOCJG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "IKDGLCBOCJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::PKLDGKBPOAP
// Il2CppName: PKLDGKBPOAP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::PKLDGKBPOAP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "PKLDGKBPOAP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::KEGEKFNLCJD
// Il2CppName: KEGEKFNLCJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DangerWave::KEGEKFNLCJD)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "KEGEKFNLCJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::GEJIJMPGALF
// Il2CppName: GEJIJMPGALF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::GEJIJMPGALF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "GEJIJMPGALF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::DEGCMEJJNJI
// Il2CppName: DEGCMEJJNJI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::DEGCMEJJNJI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "DEGCMEJJNJI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::MMJIKEBHBJF
// Il2CppName: MMJIKEBHBJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DangerWave::MMJIKEBHBJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "MMJIKEBHBJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::NOLENMEIGLN
// Il2CppName: NOLENMEIGLN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DangerWave::NOLENMEIGLN)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "NOLENMEIGLN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::PNKHLJDEJNA
// Il2CppName: PNKHLJDEJNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::PNKHLJDEJNA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "PNKHLJDEJNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::MJKAGCAKHHO
// Il2CppName: MJKAGCAKHHO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::MJKAGCAKHHO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "MJKAGCAKHHO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::IEDNIMMEJBL
// Il2CppName: IEDNIMMEJBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DangerWave::IEDNIMMEJBL)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "IEDNIMMEJBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::FNMKMDHHFDG
// Il2CppName: FNMKMDHHFDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DangerWave::FNMKMDHHFDG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "FNMKMDHHFDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DangerWave::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::PPKHOKCIJBL
// Il2CppName: PPKHOKCIJBL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::PPKHOKCIJBL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "PPKHOKCIJBL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::FBDBGKLFFOI
// Il2CppName: FBDBGKLFFOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::FBDBGKLFFOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "FBDBGKLFFOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::BLBKOOGJNBB
// Il2CppName: BLBKOOGJNBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DangerWave::BLBKOOGJNBB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "BLBKOOGJNBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::GHBOEBHBEEJ
// Il2CppName: GHBOEBHBEEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::GHBOEBHBEEJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "GHBOEBHBEEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::EBNFNLMHNGE
// Il2CppName: EBNFNLMHNGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::EBNFNLMHNGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "EBNFNLMHNGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::APIMIOELFAJ
// Il2CppName: APIMIOELFAJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::APIMIOELFAJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "APIMIOELFAJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::JJNHCABMBIH
// Il2CppName: JJNHCABMBIH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::JJNHCABMBIH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "JJNHCABMBIH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::HJKFJENIJFO
// Il2CppName: HJKFJENIJFO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::HJKFJENIJFO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "HJKFJENIJFO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::ABCHNNEJECC
// Il2CppName: ABCHNNEJECC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::ABCHNNEJECC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "ABCHNNEJECC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::DGJGAFKDIDK
// Il2CppName: DGJGAFKDIDK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::DGJGAFKDIDK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "DGJGAFKDIDK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::GLPPOHKJANF
// Il2CppName: GLPPOHKJANF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::GLPPOHKJANF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "GLPPOHKJANF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::DangerWave::JOCIAJOCGNM
// Il2CppName: JOCIAJOCGNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)(::MagicalActual::NetEntity*)>(&MagicalActual::DangerWave::JOCIAJOCGNM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "JOCIAJOCGNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::DangerWave::JGPEKDOEPOC
// Il2CppName: JGPEKDOEPOC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::DangerWave::*)()>(&MagicalActual::DangerWave::JGPEKDOEPOC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::DangerWave*), "JGPEKDOEPOC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
