// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: OrbusNetComponents
  class OrbusNetComponents;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::OrbusNetComponents);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::OrbusNetComponents*, "MagicalActual", "OrbusNetComponents");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.OrbusNetComponents
  // [TokenAttribute] Offset: FFFFFFFF
  class OrbusNetComponents : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String[] NetComponents
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::StringW> NetComponents;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String[] NetComponents
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_NetComponents();
    // public System.Void .ctor()
    // Offset: 0x28AC2A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OrbusNetComponents* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::OrbusNetComponents::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OrbusNetComponents*, creationType>()));
    }
  }; // MagicalActual.OrbusNetComponents
  #pragma pack(pop)
  static check_size<sizeof(OrbusNetComponents), 24 + sizeof(::ArrayW<::StringW>)> __MagicalActual_OrbusNetComponentsSizeCheck;
  static_assert(sizeof(OrbusNetComponents) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::OrbusNetComponents::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
