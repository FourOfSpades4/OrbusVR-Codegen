// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: SphereCollider
  class SphereCollider;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: Imposter
  class Imposter;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: SphereCuller
  class SphereCuller;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::SphereCuller);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::SphereCuller*, "MagicalActual", "SphereCuller");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.SphereCuller
  // [TokenAttribute] Offset: FFFFFFFF
  class SphereCuller : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.SphereCollider myCollider
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::SphereCollider* myCollider;
    // Field size check
    static_assert(sizeof(::UnityEngine::SphereCollider*) == 0x8);
    // public UnityEngine.GameObject targetObject
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* targetObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private Imposter[] OPHDPGNIEMI
    // Size: 0x8
    // Offset: 0x28
    ::ArrayW<::GlobalNamespace::Imposter*> OPHDPGNIEMI;
    // Field size check
    static_assert(sizeof(::ArrayW<::GlobalNamespace::Imposter*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.SphereCollider myCollider
    [[deprecated("Use field access instead!")]] ::UnityEngine::SphereCollider*& dyn_myCollider();
    // Get instance field reference: public UnityEngine.GameObject targetObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_targetObject();
    // Get instance field reference: private Imposter[] OPHDPGNIEMI
    [[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::Imposter*>& dyn_OPHDPGNIEMI();
    // public System.Void OFNHFBHAACG()
    // Offset: 0x1088838
    void OFNHFBHAACG();
    // public System.Void ShutDownAllImposters()
    // Offset: 0x10888D4
    void ShutDownAllImposters();
    // public System.Void HNDOBIFDDBO()
    // Offset: 0x108897C
    void HNDOBIFDDBO();
    // public System.Void AHELCPCCOHA()
    // Offset: 0x1088A18
    void AHELCPCCOHA();
    // private System.Void Awake()
    // Offset: 0x1088AA4
    void Awake();
    // public System.Void HJAJIMJIOMB()
    // Offset: 0x1088C28
    void HJAJIMJIOMB();
    // public System.Void GNANNPECNJC()
    // Offset: 0x1088CB8
    void GNANNPECNJC();
    // public System.Void EIHBLMFOCFD()
    // Offset: 0x1088D48
    void EIHBLMFOCFD();
    // public System.Void CLHOBODNGPK()
    // Offset: 0x1088DE4
    void CLHOBODNGPK();
    // private System.Void JBEJCKDIKIE()
    // Offset: 0x1088E8C
    void JBEJCKDIKIE();
    // private System.Void LMFIENPBFKA()
    // Offset: 0x1089010
    void LMFIENPBFKA();
    // public System.Void .ctor()
    // Offset: 0x1089198
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SphereCuller* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::SphereCuller::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SphereCuller*, creationType>()));
    }
    // public System.Void FAOBEGPGJJN()
    // Offset: 0x10891A0
    void FAOBEGPGJJN();
    // public System.Void KPHFNPOCGPJ()
    // Offset: 0x1089220
    void KPHFNPOCGPJ();
    // public System.Void NFNICGFBAPJ()
    // Offset: 0x10892BC
    void NFNICGFBAPJ();
    // public System.Void POCDJDFBKEF()
    // Offset: 0x1089340
    void POCDJDFBKEF();
    // private System.Void JNELNIGPBIM()
    // Offset: 0x10893C0
    void JNELNIGPBIM();
    // public System.Void IEGCDNDFNPK()
    // Offset: 0x1089544
    void IEGCDNDFNPK();
    // public System.Void DPONDKENPBN()
    // Offset: 0x10895EC
    void DPONDKENPBN();
    // public System.Void ODPHKBIBGKH()
    // Offset: 0x1089688
    void ODPHKBIBGKH();
    // public System.Void SpinUpAllImposters()
    // Offset: 0x1089708
    void SpinUpAllImposters();
    // public System.Void IHJLNKJOIPL()
    // Offset: 0x10897A4
    void IHJLNKJOIPL();
    // public System.Void AJKMCAAHKOH()
    // Offset: 0x1089834
    void AJKMCAAHKOH();
    // public System.Void NNNGCNFCBMP()
    // Offset: 0x10898DC
    void NNNGCNFCBMP();
    // public System.Void BDMELAIEKEN()
    // Offset: 0x108995C
    void BDMELAIEKEN();
  }; // MagicalActual.SphereCuller
  #pragma pack(pop)
  static check_size<sizeof(SphereCuller), 40 + sizeof(::ArrayW<::GlobalNamespace::Imposter*>)> __MagicalActual_SphereCullerSizeCheck;
  static_assert(sizeof(SphereCuller) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::SphereCuller::OFNHFBHAACG
// Il2CppName: OFNHFBHAACG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::OFNHFBHAACG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "OFNHFBHAACG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::ShutDownAllImposters
// Il2CppName: ShutDownAllImposters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::ShutDownAllImposters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "ShutDownAllImposters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::HNDOBIFDDBO
// Il2CppName: HNDOBIFDDBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::HNDOBIFDDBO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "HNDOBIFDDBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::AHELCPCCOHA
// Il2CppName: AHELCPCCOHA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::AHELCPCCOHA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "AHELCPCCOHA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::HJAJIMJIOMB
// Il2CppName: HJAJIMJIOMB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::HJAJIMJIOMB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "HJAJIMJIOMB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::GNANNPECNJC
// Il2CppName: GNANNPECNJC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::GNANNPECNJC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "GNANNPECNJC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::EIHBLMFOCFD
// Il2CppName: EIHBLMFOCFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::EIHBLMFOCFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "EIHBLMFOCFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::CLHOBODNGPK
// Il2CppName: CLHOBODNGPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::CLHOBODNGPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "CLHOBODNGPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::JBEJCKDIKIE
// Il2CppName: JBEJCKDIKIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::JBEJCKDIKIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "JBEJCKDIKIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::LMFIENPBFKA
// Il2CppName: LMFIENPBFKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::LMFIENPBFKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "LMFIENPBFKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::SphereCuller::FAOBEGPGJJN
// Il2CppName: FAOBEGPGJJN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::FAOBEGPGJJN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "FAOBEGPGJJN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::KPHFNPOCGPJ
// Il2CppName: KPHFNPOCGPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::KPHFNPOCGPJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "KPHFNPOCGPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::NFNICGFBAPJ
// Il2CppName: NFNICGFBAPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::NFNICGFBAPJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "NFNICGFBAPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::POCDJDFBKEF
// Il2CppName: POCDJDFBKEF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::POCDJDFBKEF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "POCDJDFBKEF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::JNELNIGPBIM
// Il2CppName: JNELNIGPBIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::JNELNIGPBIM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "JNELNIGPBIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::IEGCDNDFNPK
// Il2CppName: IEGCDNDFNPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::IEGCDNDFNPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "IEGCDNDFNPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::DPONDKENPBN
// Il2CppName: DPONDKENPBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::DPONDKENPBN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "DPONDKENPBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::ODPHKBIBGKH
// Il2CppName: ODPHKBIBGKH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::ODPHKBIBGKH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "ODPHKBIBGKH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::SpinUpAllImposters
// Il2CppName: SpinUpAllImposters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::SpinUpAllImposters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "SpinUpAllImposters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::IHJLNKJOIPL
// Il2CppName: IHJLNKJOIPL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::IHJLNKJOIPL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "IHJLNKJOIPL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::AJKMCAAHKOH
// Il2CppName: AJKMCAAHKOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::AJKMCAAHKOH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "AJKMCAAHKOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::NNNGCNFCBMP
// Il2CppName: NNNGCNFCBMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::NNNGCNFCBMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "NNNGCNFCBMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::SphereCuller::BDMELAIEKEN
// Il2CppName: BDMELAIEKEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::SphereCuller::*)()>(&MagicalActual::SphereCuller::BDMELAIEKEN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::SphereCuller*), "BDMELAIEKEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
