// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: LizardMinion
  class LizardMinion;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::LizardMinion);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::LizardMinion*, "MagicalActual", "LizardMinion");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.LizardMinion
  // [TokenAttribute] Offset: FFFFFFFF
  class LizardMinion : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // private System.Void CNBJHFMDCOE()
    // Offset: 0x1898E64
    void CNBJHFMDCOE();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898E68
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void KKEABMBACIC()
    // Offset: 0x1898E70
    void KKEABMBACIC();
    // private System.Void JCJCMKPOAKK()
    // Offset: 0x1898E74
    void JCJCMKPOAKK();
    // private System.Void EIIKFEMCNKM()
    // Offset: 0x1898E78
    void EIIKFEMCNKM();
    // private System.Void JBEJCKDIKIE()
    // Offset: 0x1898E7C
    void JBEJCKDIKIE();
    // public System.Void AKAJICBGGIG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898E80
    void AKAJICBGGIG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void NEMKNLGDEAK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898E88
    void NEMKNLGDEAK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void AIEPGHLFDAL()
    // Offset: 0x1898E90
    void AIEPGHLFDAL();
    // private System.Void CAHEKCFLDHP()
    // Offset: 0x1898E94
    void CAHEKCFLDHP();
    // private System.Void DJIGIJKOPDC()
    // Offset: 0x1898E98
    void DJIGIJKOPDC();
    // private System.Void PJOIJIEDPMP()
    // Offset: 0x1898E9C
    void PJOIJIEDPMP();
    // private System.Void OACMGPBCPEL()
    // Offset: 0x1898EA0
    void OACMGPBCPEL();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x1898EA4
    void BDEDGNGMHMN();
    // private System.Void NDAOHLAOCDE()
    // Offset: 0x1898EA8
    void NDAOHLAOCDE();
    // private System.Void HNFEGEMMACF()
    // Offset: 0x1898EAC
    void HNFEGEMMACF();
    // private System.Void BMALDPKJJPG()
    // Offset: 0x1898EB0
    void BMALDPKJJPG();
    // private System.Void CODEKFLHLJG()
    // Offset: 0x1898EB4
    void CODEKFLHLJG();
    // private System.Void MDOPMJPONBJ()
    // Offset: 0x1898EB8
    void MDOPMJPONBJ();
    // public System.Void EGJMIHFLOKP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898EBC
    void EGJMIHFLOKP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void KGNNMOBOEFG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898EC4
    void KGNNMOBOEFG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void APKFAKMAMMA()
    // Offset: 0x1898ECC
    void APKFAKMAMMA();
    // private System.Void KPOAAAHLGLA()
    // Offset: 0x1898ED0
    void KPOAAAHLGLA();
    // public System.Void EIHONBBKDNH(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898ED4
    void EIHONBBKDNH(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void Awake()
    // Offset: 0x1898EDC
    void Awake();
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898EE0
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OJFAEAIKFED()
    // Offset: 0x1898EE8
    void OJFAEAIKFED();
    // private System.Void LBBHKKFNJPA()
    // Offset: 0x1898EEC
    void LBBHKKFNJPA();
    // private System.Void LMFIENPBFKA()
    // Offset: 0x1898EF0
    void LMFIENPBFKA();
    // private System.Void HABDJCEKMNH()
    // Offset: 0x1898EF4
    void HABDJCEKMNH();
    // private System.Void BLLECEOABBI()
    // Offset: 0x1898EF8
    void BLLECEOABBI();
    // private System.Void JCOEAIILOND()
    // Offset: 0x1898EFC
    void JCOEAIILOND();
    // private System.Void NAPGGGFOEKO()
    // Offset: 0x1898F00
    void NAPGGGFOEKO();
    // private System.Void FDHJJOJBEFN()
    // Offset: 0x1898F04
    void FDHJJOJBEFN();
    // private System.Void LLBAENEGEMN()
    // Offset: 0x1898F08
    void LLBAENEGEMN();
    // private System.Void Start()
    // Offset: 0x1898F0C
    void Start();
    // private System.Void CBMDGNKFPIO()
    // Offset: 0x1898F10
    void CBMDGNKFPIO();
    // public System.Void .ctor()
    // Offset: 0x1898F14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LizardMinion* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::LizardMinion::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LizardMinion*, creationType>()));
    }
    // private System.Void HDMHEDEGDFD()
    // Offset: 0x1898F6C
    void HDMHEDEGDFD();
    // private System.Void FIJGCHFAFHN()
    // Offset: 0x1898F70
    void FIJGCHFAFHN();
    // private System.Void EMIJIIFBDLM()
    // Offset: 0x1898F74
    void EMIJIIFBDLM();
    // private System.Void EEMBCPKCOIL()
    // Offset: 0x1898F78
    void EEMBCPKCOIL();
    // private System.Void FAHDGOAALEM()
    // Offset: 0x1898F7C
    void FAHDGOAALEM();
    // public System.Void JJEJNGMIMOI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1898F80
    void JJEJNGMIMOI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OnDestroy()
    // Offset: 0x1898F88
    void OnDestroy();
    // private System.Void FixedUpdate()
    // Offset: 0x1898F8C
    void FixedUpdate();
  }; // MagicalActual.LizardMinion
  #pragma pack(pop)
  static check_size<sizeof(LizardMinion), 32 + sizeof(::MagicalActual::NetEntity*)> __MagicalActual_LizardMinionSizeCheck;
  static_assert(sizeof(LizardMinion) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::LizardMinion::CNBJHFMDCOE
// Il2CppName: CNBJHFMDCOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::CNBJHFMDCOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "CNBJHFMDCOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardMinion::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::KKEABMBACIC
// Il2CppName: KKEABMBACIC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::KKEABMBACIC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "KKEABMBACIC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::JCJCMKPOAKK
// Il2CppName: JCJCMKPOAKK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::JCJCMKPOAKK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "JCJCMKPOAKK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::EIIKFEMCNKM
// Il2CppName: EIIKFEMCNKM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::EIIKFEMCNKM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "EIIKFEMCNKM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::JBEJCKDIKIE
// Il2CppName: JBEJCKDIKIE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::JBEJCKDIKIE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "JBEJCKDIKIE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::AKAJICBGGIG
// Il2CppName: AKAJICBGGIG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardMinion::AKAJICBGGIG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "AKAJICBGGIG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::NEMKNLGDEAK
// Il2CppName: NEMKNLGDEAK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardMinion::NEMKNLGDEAK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "NEMKNLGDEAK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::AIEPGHLFDAL
// Il2CppName: AIEPGHLFDAL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::AIEPGHLFDAL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "AIEPGHLFDAL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::CAHEKCFLDHP
// Il2CppName: CAHEKCFLDHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::CAHEKCFLDHP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "CAHEKCFLDHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::DJIGIJKOPDC
// Il2CppName: DJIGIJKOPDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::DJIGIJKOPDC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "DJIGIJKOPDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::PJOIJIEDPMP
// Il2CppName: PJOIJIEDPMP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::PJOIJIEDPMP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "PJOIJIEDPMP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::OACMGPBCPEL
// Il2CppName: OACMGPBCPEL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::OACMGPBCPEL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "OACMGPBCPEL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::NDAOHLAOCDE
// Il2CppName: NDAOHLAOCDE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::NDAOHLAOCDE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "NDAOHLAOCDE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::HNFEGEMMACF
// Il2CppName: HNFEGEMMACF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::HNFEGEMMACF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "HNFEGEMMACF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::BMALDPKJJPG
// Il2CppName: BMALDPKJJPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::BMALDPKJJPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "BMALDPKJJPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::CODEKFLHLJG
// Il2CppName: CODEKFLHLJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::CODEKFLHLJG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "CODEKFLHLJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::MDOPMJPONBJ
// Il2CppName: MDOPMJPONBJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::MDOPMJPONBJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "MDOPMJPONBJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::EGJMIHFLOKP
// Il2CppName: EGJMIHFLOKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardMinion::EGJMIHFLOKP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "EGJMIHFLOKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::KGNNMOBOEFG
// Il2CppName: KGNNMOBOEFG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardMinion::KGNNMOBOEFG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "KGNNMOBOEFG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::APKFAKMAMMA
// Il2CppName: APKFAKMAMMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::APKFAKMAMMA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "APKFAKMAMMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::KPOAAAHLGLA
// Il2CppName: KPOAAAHLGLA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::KPOAAAHLGLA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "KPOAAAHLGLA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::EIHONBBKDNH
// Il2CppName: EIHONBBKDNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardMinion::EIHONBBKDNH)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "EIHONBBKDNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardMinion::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::OJFAEAIKFED
// Il2CppName: OJFAEAIKFED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::OJFAEAIKFED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "OJFAEAIKFED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::LBBHKKFNJPA
// Il2CppName: LBBHKKFNJPA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::LBBHKKFNJPA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "LBBHKKFNJPA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::LMFIENPBFKA
// Il2CppName: LMFIENPBFKA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::LMFIENPBFKA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "LMFIENPBFKA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::HABDJCEKMNH
// Il2CppName: HABDJCEKMNH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::HABDJCEKMNH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "HABDJCEKMNH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::BLLECEOABBI
// Il2CppName: BLLECEOABBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::BLLECEOABBI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "BLLECEOABBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::JCOEAIILOND
// Il2CppName: JCOEAIILOND
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::JCOEAIILOND)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "JCOEAIILOND", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::NAPGGGFOEKO
// Il2CppName: NAPGGGFOEKO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::NAPGGGFOEKO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "NAPGGGFOEKO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::FDHJJOJBEFN
// Il2CppName: FDHJJOJBEFN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::FDHJJOJBEFN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "FDHJJOJBEFN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::LLBAENEGEMN
// Il2CppName: LLBAENEGEMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::LLBAENEGEMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "LLBAENEGEMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::CBMDGNKFPIO
// Il2CppName: CBMDGNKFPIO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::CBMDGNKFPIO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "CBMDGNKFPIO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::LizardMinion::HDMHEDEGDFD
// Il2CppName: HDMHEDEGDFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::HDMHEDEGDFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "HDMHEDEGDFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::FIJGCHFAFHN
// Il2CppName: FIJGCHFAFHN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::FIJGCHFAFHN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "FIJGCHFAFHN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::EMIJIIFBDLM
// Il2CppName: EMIJIIFBDLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::EMIJIIFBDLM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "EMIJIIFBDLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::EEMBCPKCOIL
// Il2CppName: EEMBCPKCOIL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::EEMBCPKCOIL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "EEMBCPKCOIL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::FAHDGOAALEM
// Il2CppName: FAHDGOAALEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::FAHDGOAALEM)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "FAHDGOAALEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::JJEJNGMIMOI
// Il2CppName: JJEJNGMIMOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)(::MagicalActual::NetEntity*)>(&MagicalActual::LizardMinion::JJEJNGMIMOI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "JJEJNGMIMOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::LizardMinion::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::LizardMinion::*)()>(&MagicalActual::LizardMinion::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::LizardMinion*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
