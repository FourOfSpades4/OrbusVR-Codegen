// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_Ghost
  class M_Ghost;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_Ghost);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_Ghost*, "MagicalActual", "M_Ghost");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_Ghost
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD51A8
  class M_Ghost : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::M_Ghost::orbusNetMethodIdx
    struct orbusNetMethodIdx;
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxSoulsuck
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* vfxSoulsuck;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxDisappear
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* vfxDisappear;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x38
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public UnityEngine.GameObject vfxSoulsuck
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSoulsuck();
    // Get instance field reference: public UnityEngine.GameObject vfxDisappear
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxDisappear();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24CEFF8
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void LPLGKBGLPOK()
    // Offset: 0x24CF1B0
    void LPLGKBGLPOK();
    // public System.Void Slash()
    // Offset: 0x24CF208
    void Slash();
    // public System.Void LCKDPMJKHEN(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24CF420
    void LCKDPMJKHEN(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void MCNDPKIFDBN()
    // Offset: 0x24CF5D8
    void MCNDPKIFDBN();
    // private System.Void IHINKDBEFAG(System.Object OMLPNCLFFMJ)
    // Offset: 0x24CF670
    void IHINKDBEFAG(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void Start()
    // Offset: 0x24CF85C
    void Start();
    // public System.Void GLJFFHNKKPI()
    // Offset: 0x24CF8B4
    void GLJFFHNKKPI();
    // private System.Void NHADFEMILCC()
    // Offset: 0x24CFAD8
    void NHADFEMILCC();
    // private System.Void ADDIOONLAPD(System.Object OMLPNCLFFMJ)
    // Offset: 0x24CFB30
    void ADDIOONLAPD(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void SoulAnimate()
    // Offset: 0x24CFD34
    void SoulAnimate();
    // private System.Void JEFICCCGFAO()
    // Offset: 0x24CFDCC
    void JEFICCCGFAO();
    // private System.Void HOHJJNKIDFD()
    // Offset: 0x24CFE40
    void HOHJJNKIDFD();
    // private System.Void FDADMCLAHEH(System.Object OMLPNCLFFMJ)
    // Offset: 0x24CFEB4
    void FDADMCLAHEH(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x24D00A0
    void ABIHCGOKNCL();
    // private System.Void DDEBBFNEDKD()
    // Offset: 0x24D00F8
    void DDEBBFNEDKD();
    // public System.Void ALKHPPEDLNC()
    // Offset: 0x24D016C
    void ALKHPPEDLNC();
    // public System.Void NFHMFOJOLKE()
    // Offset: 0x24D0390
    void NFHMFOJOLKE();
    // private System.Void NNDCJJKFOLD()
    // Offset: 0x24D0428
    void NNDCJJKFOLD();
    // public System.Void .ctor()
    // Offset: 0x24D049C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_Ghost* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_Ghost::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_Ghost*, creationType>()));
    }
    // private System.Void KCGPDPLABNM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24D04F4
    void KCGPDPLABNM(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void GFOMJLKNFMD()
    // Offset: 0x24D0674
    void GFOMJLKNFMD();
    // public System.Void LOECKJHFKKG()
    // Offset: 0x24D070C
    void LOECKJHFKKG();
    // public System.Void BIIPJEPNIBH()
    // Offset: 0x24D0838
    void BIIPJEPNIBH();
    // public System.Void BFEOMBNEICE()
    // Offset: 0x24D0A5C
    void BFEOMBNEICE();
    // public System.Void JFKKFKNHPFI()
    // Offset: 0x24D0C80
    void JFKKFKNHPFI();
    // private System.Void NEDFCIDMJBB()
    // Offset: 0x24D0EA4
    void NEDFCIDMJBB();
    // private System.Void DPBJHEEMMFF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24D0EFC
    void DPBJHEEMMFF(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void BJOLEBAICPJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D107C
    void BJOLEBAICPJ(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void IPIFMKAGODD()
    // Offset: 0x24D1270
    void IPIFMKAGODD();
    // private System.Void OJFAEAIKFED()
    // Offset: 0x24D12C8
    void OJFAEAIKFED();
    // private System.Void AOFCGAGIIOK(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D1320
    void AOFCGAGIIOK(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void IOOBCJAJKCJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24D1524
    void IOOBCJAJKCJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void HCLAICEHHEJ()
    // Offset: 0x24D16DC
    void HCLAICEHHEJ();
    // private System.Void CDABCHCJOHP(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x24D1774
    void CDABCHCJOHP(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x24D18F0
    void MLGBKBMHHLE();
    // private System.Void ABCFMEJHODJ(System.Object OMLPNCLFFMJ)
    // Offset: 0x24D1948
    void ABCFMEJHODJ(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void Soulsuck()
    // Offset: 0x24D1B34
    void Soulsuck();
    // private System.Void EOLDAJOCPHE()
    // Offset: 0x24D1C5C
    void EOLDAJOCPHE();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x24D1CD0
    void IDOCJGNLNFL();
    // public System.Void OIPLBADJHFI(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24D1D28
    void OIPLBADJHFI(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void HMKJKOKPOBP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24D1EE0
    void HMKJKOKPOBP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void KPMEHJMOLCH()
    // Offset: 0x24D2098
    void KPMEHJMOLCH();
  }; // MagicalActual.M_Ghost
  #pragma pack(pop)
  static check_size<sizeof(M_Ghost), 64 + sizeof(::MagicalActual::NetEntity*)> __MagicalActual_M_GhostSizeCheck;
  static_assert(sizeof(M_Ghost) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_Ghost::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_Ghost::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::LPLGKBGLPOK
// Il2CppName: LPLGKBGLPOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::LPLGKBGLPOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "LPLGKBGLPOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::LCKDPMJKHEN
// Il2CppName: LCKDPMJKHEN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_Ghost::LCKDPMJKHEN)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "LCKDPMJKHEN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::MCNDPKIFDBN
// Il2CppName: MCNDPKIFDBN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::MCNDPKIFDBN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "MCNDPKIFDBN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::IHINKDBEFAG
// Il2CppName: IHINKDBEFAG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::Il2CppObject*)>(&MagicalActual::M_Ghost::IHINKDBEFAG)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "IHINKDBEFAG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::GLJFFHNKKPI
// Il2CppName: GLJFFHNKKPI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::GLJFFHNKKPI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "GLJFFHNKKPI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::NHADFEMILCC
// Il2CppName: NHADFEMILCC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::NHADFEMILCC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "NHADFEMILCC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::ADDIOONLAPD
// Il2CppName: ADDIOONLAPD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::Il2CppObject*)>(&MagicalActual::M_Ghost::ADDIOONLAPD)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "ADDIOONLAPD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::SoulAnimate
// Il2CppName: SoulAnimate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::SoulAnimate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "SoulAnimate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::JEFICCCGFAO
// Il2CppName: JEFICCCGFAO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::JEFICCCGFAO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "JEFICCCGFAO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::HOHJJNKIDFD
// Il2CppName: HOHJJNKIDFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::HOHJJNKIDFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "HOHJJNKIDFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::FDADMCLAHEH
// Il2CppName: FDADMCLAHEH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::Il2CppObject*)>(&MagicalActual::M_Ghost::FDADMCLAHEH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "FDADMCLAHEH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::DDEBBFNEDKD
// Il2CppName: DDEBBFNEDKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::DDEBBFNEDKD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "DDEBBFNEDKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::ALKHPPEDLNC
// Il2CppName: ALKHPPEDLNC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::ALKHPPEDLNC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "ALKHPPEDLNC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::NFHMFOJOLKE
// Il2CppName: NFHMFOJOLKE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::NFHMFOJOLKE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "NFHMFOJOLKE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::NNDCJJKFOLD
// Il2CppName: NNDCJJKFOLD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::NNDCJJKFOLD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "NNDCJJKFOLD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_Ghost::KCGPDPLABNM
// Il2CppName: KCGPDPLABNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_Ghost::KCGPDPLABNM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "KCGPDPLABNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::GFOMJLKNFMD
// Il2CppName: GFOMJLKNFMD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::GFOMJLKNFMD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "GFOMJLKNFMD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::LOECKJHFKKG
// Il2CppName: LOECKJHFKKG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::LOECKJHFKKG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "LOECKJHFKKG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::BIIPJEPNIBH
// Il2CppName: BIIPJEPNIBH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::BIIPJEPNIBH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "BIIPJEPNIBH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::BFEOMBNEICE
// Il2CppName: BFEOMBNEICE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::BFEOMBNEICE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "BFEOMBNEICE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::JFKKFKNHPFI
// Il2CppName: JFKKFKNHPFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::JFKKFKNHPFI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "JFKKFKNHPFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::NEDFCIDMJBB
// Il2CppName: NEDFCIDMJBB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::NEDFCIDMJBB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "NEDFCIDMJBB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::DPBJHEEMMFF
// Il2CppName: DPBJHEEMMFF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_Ghost::DPBJHEEMMFF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "DPBJHEEMMFF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::BJOLEBAICPJ
// Il2CppName: BJOLEBAICPJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::Il2CppObject*)>(&MagicalActual::M_Ghost::BJOLEBAICPJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "BJOLEBAICPJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::OJFAEAIKFED
// Il2CppName: OJFAEAIKFED
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::OJFAEAIKFED)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "OJFAEAIKFED", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::AOFCGAGIIOK
// Il2CppName: AOFCGAGIIOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::Il2CppObject*)>(&MagicalActual::M_Ghost::AOFCGAGIIOK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "AOFCGAGIIOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::IOOBCJAJKCJ
// Il2CppName: IOOBCJAJKCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_Ghost::IOOBCJAJKCJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "IOOBCJAJKCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::HCLAICEHHEJ
// Il2CppName: HCLAICEHHEJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::HCLAICEHHEJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "HCLAICEHHEJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::CDABCHCJOHP
// Il2CppName: CDABCHCJOHP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_Ghost::CDABCHCJOHP)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "CDABCHCJOHP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::ABCFMEJHODJ
// Il2CppName: ABCFMEJHODJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::Il2CppObject*)>(&MagicalActual::M_Ghost::ABCFMEJHODJ)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "ABCFMEJHODJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::Soulsuck
// Il2CppName: Soulsuck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::Soulsuck)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "Soulsuck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::EOLDAJOCPHE
// Il2CppName: EOLDAJOCPHE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::EOLDAJOCPHE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "EOLDAJOCPHE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::OIPLBADJHFI
// Il2CppName: OIPLBADJHFI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_Ghost::OIPLBADJHFI)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "OIPLBADJHFI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::HMKJKOKPOBP
// Il2CppName: HMKJKOKPOBP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_Ghost::HMKJKOKPOBP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "HMKJKOKPOBP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_Ghost::KPMEHJMOLCH
// Il2CppName: KPMEHJMOLCH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_Ghost::*)()>(&MagicalActual::M_Ghost::KPMEHJMOLCH)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_Ghost*), "KPMEHJMOLCH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
