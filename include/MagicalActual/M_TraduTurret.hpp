// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_TraduTurret
  class M_TraduTurret;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_TraduTurret);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_TraduTurret*, "MagicalActual", "M_TraduTurret");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x49
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_TraduTurret
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD734C
  class M_TraduTurret : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.GameObject vfxShoot
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* vfxShoot;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxBullet
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxBullet;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.Transform firePoint
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Transform* firePoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x30
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x38
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // public System.Boolean aboveGround
    // Size: 0x1
    // Offset: 0x48
    bool aboveGround;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.GameObject vfxShoot
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxShoot();
    // Get instance field reference: public UnityEngine.GameObject vfxBullet
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxBullet();
    // Get instance field reference: public UnityEngine.Transform firePoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_firePoint();
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: public System.Boolean aboveGround
    [[deprecated("Use field access instead!")]] bool& dyn_aboveGround();
    // public System.Void JOCIAJOCGNM(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x275D0B0
    void JOCIAJOCGNM(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void EJNBANIMMFC()
    // Offset: 0x275D164
    void EJNBANIMMFC();
    // private System.Void MLGBKBMHHLE()
    // Offset: 0x275D40C
    void MLGBKBMHHLE();
    // private System.Void BNMBNFEHNBO()
    // Offset: 0x275D468
    void BNMBNFEHNBO();
    // public System.Void ADMNOOELBHJ()
    // Offset: 0x275D570
    void ADMNOOELBHJ();
    // private System.Void OBCJHGPENOH(System.Object OMLPNCLFFMJ)
    // Offset: 0x275D818
    void OBCJHGPENOH(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void EDLHLGCJCCK()
    // Offset: 0x275D884
    void EDLHLGCJCCK();
    // private System.Void DGIKKMCHFGM(System.Object OMLPNCLFFMJ)
    // Offset: 0x275D98C
    void DGIKKMCHFGM(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x275DB00
    void EPCHNEGNKNF();
    // public System.Void IKDGLCBOCJG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x275DB5C
    void IKDGLCBOCJG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void NBICGNAJJIA()
    // Offset: 0x275DC10
    void NBICGNAJJIA();
    // private System.Void LPNIFACJEKF(System.Object OMLPNCLFFMJ)
    // Offset: 0x275DEB8
    void LPNIFACJEKF(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void NDIMOJGPCEK()
    // Offset: 0x275DF24
    void NDIMOJGPCEK();
    // public System.Void Shoot()
    // Offset: 0x275E1CC
    void Shoot();
    // public System.Void IOOBCJAJKCJ(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x275E468
    void IOOBCJAJKCJ(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void AFIACGLCIPB()
    // Offset: 0x275E51C
    void AFIACGLCIPB();
    // private System.Void GKIOLADOCOK()
    // Offset: 0x275E578
    void GKIOLADOCOK();
    // private System.Void IPIFMKAGODD()
    // Offset: 0x275E5D4
    void IPIFMKAGODD();
    // private System.Void AGPEIDHOJPN(System.Object OMLPNCLFFMJ)
    // Offset: 0x275E630
    void AGPEIDHOJPN(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void FNGLOIECKDG()
    // Offset: 0x275E69C
    void FNGLOIECKDG();
    // public System.Void MMJIKEBHBJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x275E6F8
    void MMJIKEBHBJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PBEMGGBBDCK()
    // Offset: 0x275E7AC
    void PBEMGGBBDCK();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x275E808
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void LBNIKPDOGPK(System.Object OMLPNCLFFMJ)
    // Offset: 0x275E8BC
    void LBNIKPDOGPK(::Il2CppObject* OMLPNCLFFMJ);
    // private System.Void FGIFGGNGKPK()
    // Offset: 0x275E928
    void FGIFGGNGKPK();
    // private System.Void LBIKOKCCILF()
    // Offset: 0x275E984
    void LBIKOKCCILF();
    // private System.Void OCALNOEEPJK(System.Object OMLPNCLFFMJ)
    // Offset: 0x275E9E0
    void OCALNOEEPJK(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void OAMOHIMHKEK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x275EA4C
    void OAMOHIMHKEK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void .ctor()
    // Offset: 0x275EB00
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_TraduTurret* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_TraduTurret::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_TraduTurret*, creationType>()));
    }
    // private System.Void Start()
    // Offset: 0x275EB58
    void Start();
    // private System.Void BDEDGNGMHMN()
    // Offset: 0x275EBB4
    void BDEDGNGMHMN();
    // private System.Void DBMFAHJIEHA()
    // Offset: 0x275D9F8
    void DBMFAHJIEHA();
  }; // MagicalActual.M_TraduTurret
  #pragma pack(pop)
  static check_size<sizeof(M_TraduTurret), 72 + sizeof(bool)> __MagicalActual_M_TraduTurretSizeCheck;
  static_assert(sizeof(M_TraduTurret) == 0x49);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::JOCIAJOCGNM
// Il2CppName: JOCIAJOCGNM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_TraduTurret::JOCIAJOCGNM)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "JOCIAJOCGNM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::EJNBANIMMFC
// Il2CppName: EJNBANIMMFC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::EJNBANIMMFC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "EJNBANIMMFC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::MLGBKBMHHLE
// Il2CppName: MLGBKBMHHLE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::MLGBKBMHHLE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "MLGBKBMHHLE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::BNMBNFEHNBO
// Il2CppName: BNMBNFEHNBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::BNMBNFEHNBO)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "BNMBNFEHNBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::ADMNOOELBHJ
// Il2CppName: ADMNOOELBHJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::ADMNOOELBHJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "ADMNOOELBHJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::OBCJHGPENOH
// Il2CppName: OBCJHGPENOH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::Il2CppObject*)>(&MagicalActual::M_TraduTurret::OBCJHGPENOH)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "OBCJHGPENOH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::EDLHLGCJCCK
// Il2CppName: EDLHLGCJCCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::EDLHLGCJCCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "EDLHLGCJCCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::DGIKKMCHFGM
// Il2CppName: DGIKKMCHFGM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::Il2CppObject*)>(&MagicalActual::M_TraduTurret::DGIKKMCHFGM)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "DGIKKMCHFGM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::IKDGLCBOCJG
// Il2CppName: IKDGLCBOCJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_TraduTurret::IKDGLCBOCJG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "IKDGLCBOCJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::NBICGNAJJIA
// Il2CppName: NBICGNAJJIA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::NBICGNAJJIA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "NBICGNAJJIA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::LPNIFACJEKF
// Il2CppName: LPNIFACJEKF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::Il2CppObject*)>(&MagicalActual::M_TraduTurret::LPNIFACJEKF)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "LPNIFACJEKF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::NDIMOJGPCEK
// Il2CppName: NDIMOJGPCEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::NDIMOJGPCEK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "NDIMOJGPCEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::Shoot
// Il2CppName: Shoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::Shoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "Shoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::IOOBCJAJKCJ
// Il2CppName: IOOBCJAJKCJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_TraduTurret::IOOBCJAJKCJ)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "IOOBCJAJKCJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::AFIACGLCIPB
// Il2CppName: AFIACGLCIPB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::AFIACGLCIPB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "AFIACGLCIPB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::GKIOLADOCOK
// Il2CppName: GKIOLADOCOK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::GKIOLADOCOK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "GKIOLADOCOK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::IPIFMKAGODD
// Il2CppName: IPIFMKAGODD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::IPIFMKAGODD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "IPIFMKAGODD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::AGPEIDHOJPN
// Il2CppName: AGPEIDHOJPN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::Il2CppObject*)>(&MagicalActual::M_TraduTurret::AGPEIDHOJPN)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "AGPEIDHOJPN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::FNGLOIECKDG
// Il2CppName: FNGLOIECKDG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::FNGLOIECKDG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "FNGLOIECKDG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::MMJIKEBHBJF
// Il2CppName: MMJIKEBHBJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_TraduTurret::MMJIKEBHBJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "MMJIKEBHBJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::PBEMGGBBDCK
// Il2CppName: PBEMGGBBDCK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::PBEMGGBBDCK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "PBEMGGBBDCK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_TraduTurret::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::LBNIKPDOGPK
// Il2CppName: LBNIKPDOGPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::Il2CppObject*)>(&MagicalActual::M_TraduTurret::LBNIKPDOGPK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "LBNIKPDOGPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::FGIFGGNGKPK
// Il2CppName: FGIFGGNGKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::FGIFGGNGKPK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "FGIFGGNGKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::LBIKOKCCILF
// Il2CppName: LBIKOKCCILF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::LBIKOKCCILF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "LBIKOKCCILF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::OCALNOEEPJK
// Il2CppName: OCALNOEEPJK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::Il2CppObject*)>(&MagicalActual::M_TraduTurret::OCALNOEEPJK)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "OCALNOEEPJK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::OAMOHIMHKEK
// Il2CppName: OAMOHIMHKEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_TraduTurret::OAMOHIMHKEK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "OAMOHIMHKEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::BDEDGNGMHMN
// Il2CppName: BDEDGNGMHMN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::BDEDGNGMHMN)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "BDEDGNGMHMN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_TraduTurret::DBMFAHJIEHA
// Il2CppName: DBMFAHJIEHA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_TraduTurret::*)()>(&MagicalActual::M_TraduTurret::DBMFAHJIEHA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_TraduTurret*), "DBMFAHJIEHA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
