// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: BoxCollider
  class BoxCollider;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: OrbusUtils
  class OrbusUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::OrbusUtils);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::OrbusUtils*, "MagicalActual", "OrbusUtils");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.OrbusUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class OrbusUtils : public ::Il2CppObject {
    public:
    // static public System.Boolean HKFPPOEMMKD(UnityEngine.Vector3 EENBBLBIKAL, UnityEngine.BoxCollider FMJCPBNAOEC)
    // Offset: 0xFCC1B0
    static bool HKFPPOEMMKD(::UnityEngine::Vector3 EENBBLBIKAL, ::UnityEngine::BoxCollider* FMJCPBNAOEC);
  }; // MagicalActual.OrbusUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::OrbusUtils::HKFPPOEMMKD
// Il2CppName: HKFPPOEMMKD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Vector3, ::UnityEngine::BoxCollider*)>(&MagicalActual::OrbusUtils::HKFPPOEMMKD)> {
  static const MethodInfo* get() {
    static auto* EENBBLBIKAL = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* FMJCPBNAOEC = &::il2cpp_utils::GetClassFromName("UnityEngine", "BoxCollider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::OrbusUtils*), "HKFPPOEMMKD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{EENBBLBIKAL, FMJCPBNAOEC});
  }
};
