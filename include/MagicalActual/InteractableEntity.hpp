// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: Grabber
  class Grabber;
  // Forward declaring type: PhysicsObject
  class PhysicsObject;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Rigidbody
  class Rigidbody;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: PhysicsInteractable
  class PhysicsInteractable;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: InteractableEntity
  class InteractableEntity;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::InteractableEntity);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::InteractableEntity*, "MagicalActual", "InteractableEntity");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x71
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.InteractableEntity
  // [TokenAttribute] Offset: FFFFFFFF
  class InteractableEntity : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::InteractableEntity::$$c
    class $$c;
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private UnityEngine.GameObject interactableObject
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* interactableObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private System.Single positionResetTime
    // Size: 0x4
    // Offset: 0x30
    float positionResetTime;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: positionResetTime and: GFAJNDECHEH
    char __padding3[0x4] = {};
    // private UnityEngine.Rigidbody GFAJNDECHEH
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::Rigidbody* GFAJNDECHEH;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3550
    // private MagicalActual.Grabber <IFHNJOADBDH>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::MagicalActual::Grabber* IFHNJOADBDH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Grabber*) == 0x8);
    // private MagicalActual.PhysicsObject DHBKBGCCEGD
    // Size: 0x8
    // Offset: 0x48
    ::MagicalActual::PhysicsObject* DHBKBGCCEGD;
    // Field size check
    static_assert(sizeof(::MagicalActual::PhysicsObject*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE3560
    // private PhysicsInteractable <PHKBNECCACN>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::GlobalNamespace::PhysicsInteractable* PHKBNECCACN;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::PhysicsInteractable*) == 0x8);
    // public System.Boolean ignoreGripEvents
    // Size: 0x1
    // Offset: 0x58
    bool ignoreGripEvents;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: ignoreGripEvents and: MKOAFPEDEGF
    char __padding8[0x3] = {};
    // private System.Single MKOAFPEDEGF
    // Size: 0x4
    // Offset: 0x5C
    float MKOAFPEDEGF;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single MLJONPGDIPL
    // Size: 0x4
    // Offset: 0x60
    float MLJONPGDIPL;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean NHHDLNNDKOB
    // Size: 0x1
    // Offset: 0x64
    bool NHHDLNNDKOB;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: NHHDLNNDKOB and: FOOIJBAJDIG
    char __padding11[0x3] = {};
    // private System.UInt16[] FOOIJBAJDIG
    // Size: 0x8
    // Offset: 0x68
    ::ArrayW<uint16_t> FOOIJBAJDIG;
    // Field size check
    static_assert(sizeof(::ArrayW<uint16_t>) == 0x8);
    // private System.Boolean FINEHHIFJIG
    // Size: 0x1
    // Offset: 0x70
    bool FINEHHIFJIG;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // Get instance field reference: private UnityEngine.GameObject interactableObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_interactableObject();
    // Get instance field reference: private System.Single positionResetTime
    [[deprecated("Use field access instead!")]] float& dyn_positionResetTime();
    // Get instance field reference: private UnityEngine.Rigidbody GFAJNDECHEH
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_GFAJNDECHEH();
    // Get instance field reference: private MagicalActual.Grabber <IFHNJOADBDH>k__BackingField
    [[deprecated("Use field access instead!")]] ::MagicalActual::Grabber*& dyn_$IFHNJOADBDH$k__BackingField();
    // Get instance field reference: private MagicalActual.PhysicsObject DHBKBGCCEGD
    [[deprecated("Use field access instead!")]] ::MagicalActual::PhysicsObject*& dyn_DHBKBGCCEGD();
    // Get instance field reference: private PhysicsInteractable <PHKBNECCACN>k__BackingField
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::PhysicsInteractable*& dyn_$PHKBNECCACN$k__BackingField();
    // Get instance field reference: public System.Boolean ignoreGripEvents
    [[deprecated("Use field access instead!")]] bool& dyn_ignoreGripEvents();
    // Get instance field reference: private System.Single MKOAFPEDEGF
    [[deprecated("Use field access instead!")]] float& dyn_MKOAFPEDEGF();
    // Get instance field reference: private System.Single MLJONPGDIPL
    [[deprecated("Use field access instead!")]] float& dyn_MLJONPGDIPL();
    // Get instance field reference: private System.Boolean NHHDLNNDKOB
    [[deprecated("Use field access instead!")]] bool& dyn_NHHDLNNDKOB();
    // Get instance field reference: private System.UInt16[] FOOIJBAJDIG
    [[deprecated("Use field access instead!")]] ::ArrayW<uint16_t>& dyn_FOOIJBAJDIG();
    // Get instance field reference: private System.Boolean FINEHHIFJIG
    [[deprecated("Use field access instead!")]] bool& dyn_FINEHHIFJIG();
    // private System.Void DJIGIJKOPDC()
    // Offset: 0x1261830
    void DJIGIJKOPDC();
    // private System.Void ABIHCGOKNCL()
    // Offset: 0x1261938
    void ABIHCGOKNCL();
    // public System.Void .ctor()
    // Offset: 0x1261B14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InteractableEntity* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::InteractableEntity::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InteractableEntity*, creationType>()));
    }
    // private System.Void OnDestroy()
    // Offset: 0x1261B88
    void OnDestroy();
    // private System.Void Start()
    // Offset: 0x1261C20
    void Start();
    // private System.Void LCAKGFPEMAF(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1261DF4
    void LCAKGFPEMAF(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void IOPLEJOFIKJ(MagicalActual.Grabber MMMEIONJJFJ)
    // Offset: 0x1262290
    void IOPLEJOFIKJ(::MagicalActual::Grabber* MMMEIONJJFJ);
    // private System.Void NGFHBEONFOB(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1262298
    void NGFHBEONFOB(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void GPFBGGFPINB()
    // Offset: 0x12624C4
    void GPFBGGFPINB();
    // private System.Void KDBGBFBCBCF()
    // Offset: 0x12626A0
    void KDBGBFBCBCF();
    // public PhysicsInteractable MIMBNLJFABL()
    // Offset: 0x1262738
    ::GlobalNamespace::PhysicsInteractable* MIMBNLJFABL();
    // public System.Void doUngrip(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x1262028
    void doUngrip(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void OHNEMIPFGIM(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x1262740
    void OHNEMIPFGIM(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void LBFALGGKIBO(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x12629A0
    void LBFALGGKIBO(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void HKINNMLBMMG()
    // Offset: 0x1262C00
    void HKINNMLBMMG();
    // public System.Void OFDMFGNMEOP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1262DDC
    void OFDMFGNMEOP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void PNKHLJDEJNA()
    // Offset: 0x1262F48
    void PNKHLJDEJNA();
    // public System.Void DICPOOMKKKB(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x12631F4
    void DICPOOMKKKB(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void DABPBMEBPID(System.Boolean HOGABJDMADI)
    // Offset: 0x1263360
    void DABPBMEBPID(bool HOGABJDMADI);
    // public PhysicsInteractable get_physicsInteractable()
    // Offset: 0x1261B0C
    ::GlobalNamespace::PhysicsInteractable* get_physicsInteractable();
    // public System.Void AMBHFINDKPK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x12634F0
    void AMBHFINDKPK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void FGOCEJODPKJ(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x126365C
    void FGOCEJODPKJ(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void GCEJHCNAPCN(System.Boolean HOGABJDMADI)
    // Offset: 0x1263888
    void GCEJHCNAPCN(bool HOGABJDMADI);
    // public PhysicsInteractable JBKLPLHFDOE()
    // Offset: 0x1262DD4
    ::GlobalNamespace::PhysicsInteractable* JBKLPLHFDOE();
    // private System.Void LPLGDFLJPIJ(MagicalActual.Grabber MMMEIONJJFJ)
    // Offset: 0x12634E8
    void LPLGDFLJPIJ(::MagicalActual::Grabber* MMMEIONJJFJ);
    // private System.Void LPHEHHCIHFM(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x1263A10
    void LPHEHHCIHFM(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void JNHNEBOHOIB()
    // Offset: 0x1263C3C
    void JNHNEBOHOIB();
    // private System.Void MKHLHMJEOPK(MagicalActual.Grabber MMMEIONJJFJ)
    // Offset: 0x1262288
    void MKHLHMJEOPK(::MagicalActual::Grabber* MMMEIONJJFJ);
    // private System.Void HJIPDOMMNAI(PhysicsInteractable MMMEIONJJFJ)
    // Offset: 0x1261930
    void HJIPDOMMNAI(::GlobalNamespace::PhysicsInteractable* MMMEIONJJFJ);
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x1263E10
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void CGBLOLJLEJG(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x1263F7C
    void CGBLOLJLEJG(::UnityEngine::GameObject* FOIEAOKBGLM);
    // public System.Void JMJDGKEHCCE(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x12641DC
    void JMJDGKEHCCE(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void Update()
    // Offset: 0x126443C
    void Update();
    // public MagicalActual.Grabber get_attachedToPlayer()
    // Offset: 0x1262020
    ::MagicalActual::Grabber* get_attachedToPlayer();
    // private System.Void CHMCEGMCENL()
    // Offset: 0x12646E0
    void CHMCEGMCENL();
    // private System.Void BMALDPKJJPG()
    // Offset: 0x126498C
    void BMALDPKJJPG();
    // private System.Void GPKGKCDGLDM(System.Boolean HOGABJDMADI)
    // Offset: 0x1264A8C
    void GPKGKCDGLDM(bool HOGABJDMADI);
    // private System.Void CAMJLEDNJGP(System.Object OMLPNCLFFMJ)
    // Offset: 0x1264C14
    void CAMJLEDNJGP(::Il2CppObject* OMLPNCLFFMJ);
    // public System.Void GPJPHBIFBPM(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x12650AC
    void GPJPHBIFBPM(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void JENOIOBAEPG()
    // Offset: 0x12651B4
    void JENOIOBAEPG();
    // public PhysicsInteractable BPLFIBNAFGK()
    // Offset: 0x1262698
    ::GlobalNamespace::PhysicsInteractable* BPLFIBNAFGK();
    // public System.Void JKLPNMMHFCD(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x1265388
    void JKLPNMMHFCD(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void Awake()
    // Offset: 0x1265490
    void Awake();
    // private System.Void ABPAFOBNBDD(System.Boolean HOGABJDMADI)
    // Offset: 0x1265590
    void ABPAFOBNBDD(bool HOGABJDMADI);
    // public System.Void doGrip(UnityEngine.GameObject FOIEAOKBGLM)
    // Offset: 0x1265718
    void doGrip(::UnityEngine::GameObject* FOIEAOKBGLM);
    // private System.Void BHJFMOOPGGA(System.Boolean HOGABJDMADI)
    // Offset: 0x126581C
    void BHJFMOOPGGA(bool HOGABJDMADI);
    // private System.Void APKFAKMAMMA()
    // Offset: 0x12659A4
    void APKFAKMAMMA();
  }; // MagicalActual.InteractableEntity
  #pragma pack(pop)
  static check_size<sizeof(InteractableEntity), 112 + sizeof(bool)> __MagicalActual_InteractableEntitySizeCheck;
  static_assert(sizeof(InteractableEntity) == 0x71);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::DJIGIJKOPDC
// Il2CppName: DJIGIJKOPDC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::DJIGIJKOPDC)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "DJIGIJKOPDC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::ABIHCGOKNCL
// Il2CppName: ABIHCGOKNCL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::ABIHCGOKNCL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "ABIHCGOKNCL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::LCAKGFPEMAF
// Il2CppName: LCAKGFPEMAF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::System::Collections::ArrayList*)>(&MagicalActual::InteractableEntity::LCAKGFPEMAF)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "LCAKGFPEMAF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::IOPLEJOFIKJ
// Il2CppName: IOPLEJOFIKJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::MagicalActual::Grabber*)>(&MagicalActual::InteractableEntity::IOPLEJOFIKJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "IOPLEJOFIKJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::NGFHBEONFOB
// Il2CppName: NGFHBEONFOB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::System::Collections::ArrayList*)>(&MagicalActual::InteractableEntity::NGFHBEONFOB)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "NGFHBEONFOB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::GPFBGGFPINB
// Il2CppName: GPFBGGFPINB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::GPFBGGFPINB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "GPFBGGFPINB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::KDBGBFBCBCF
// Il2CppName: KDBGBFBCBCF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::KDBGBFBCBCF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "KDBGBFBCBCF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::MIMBNLJFABL
// Il2CppName: MIMBNLJFABL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PhysicsInteractable* (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::MIMBNLJFABL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "MIMBNLJFABL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::doUngrip
// Il2CppName: doUngrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::UnityEngine::GameObject*)>(&MagicalActual::InteractableEntity::doUngrip)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "doUngrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::OHNEMIPFGIM
// Il2CppName: OHNEMIPFGIM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::UnityEngine::GameObject*)>(&MagicalActual::InteractableEntity::OHNEMIPFGIM)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "OHNEMIPFGIM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::LBFALGGKIBO
// Il2CppName: LBFALGGKIBO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::UnityEngine::GameObject*)>(&MagicalActual::InteractableEntity::LBFALGGKIBO)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "LBFALGGKIBO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::OFDMFGNMEOP
// Il2CppName: OFDMFGNMEOP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::MagicalActual::NetEntity*)>(&MagicalActual::InteractableEntity::OFDMFGNMEOP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "OFDMFGNMEOP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::PNKHLJDEJNA
// Il2CppName: PNKHLJDEJNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::PNKHLJDEJNA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "PNKHLJDEJNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::DICPOOMKKKB
// Il2CppName: DICPOOMKKKB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::MagicalActual::NetEntity*)>(&MagicalActual::InteractableEntity::DICPOOMKKKB)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "DICPOOMKKKB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::DABPBMEBPID
// Il2CppName: DABPBMEBPID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(bool)>(&MagicalActual::InteractableEntity::DABPBMEBPID)> {
  static const MethodInfo* get() {
    static auto* HOGABJDMADI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "DABPBMEBPID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HOGABJDMADI});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::get_physicsInteractable
// Il2CppName: get_physicsInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PhysicsInteractable* (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::get_physicsInteractable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "get_physicsInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::AMBHFINDKPK
// Il2CppName: AMBHFINDKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::MagicalActual::NetEntity*)>(&MagicalActual::InteractableEntity::AMBHFINDKPK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "AMBHFINDKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::FGOCEJODPKJ
// Il2CppName: FGOCEJODPKJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::System::Collections::ArrayList*)>(&MagicalActual::InteractableEntity::FGOCEJODPKJ)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "FGOCEJODPKJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::GCEJHCNAPCN
// Il2CppName: GCEJHCNAPCN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(bool)>(&MagicalActual::InteractableEntity::GCEJHCNAPCN)> {
  static const MethodInfo* get() {
    static auto* HOGABJDMADI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "GCEJHCNAPCN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HOGABJDMADI});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::JBKLPLHFDOE
// Il2CppName: JBKLPLHFDOE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PhysicsInteractable* (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::JBKLPLHFDOE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "JBKLPLHFDOE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::LPLGDFLJPIJ
// Il2CppName: LPLGDFLJPIJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::MagicalActual::Grabber*)>(&MagicalActual::InteractableEntity::LPLGDFLJPIJ)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "LPLGDFLJPIJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::LPHEHHCIHFM
// Il2CppName: LPHEHHCIHFM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::System::Collections::ArrayList*)>(&MagicalActual::InteractableEntity::LPHEHHCIHFM)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "LPHEHHCIHFM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::JNHNEBOHOIB
// Il2CppName: JNHNEBOHOIB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::JNHNEBOHOIB)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "JNHNEBOHOIB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::MKHLHMJEOPK
// Il2CppName: MKHLHMJEOPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::MagicalActual::Grabber*)>(&MagicalActual::InteractableEntity::MKHLHMJEOPK)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("MagicalActual", "Grabber")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "MKHLHMJEOPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::HJIPDOMMNAI
// Il2CppName: HJIPDOMMNAI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::GlobalNamespace::PhysicsInteractable*)>(&MagicalActual::InteractableEntity::HJIPDOMMNAI)> {
  static const MethodInfo* get() {
    static auto* MMMEIONJJFJ = &::il2cpp_utils::GetClassFromName("", "PhysicsInteractable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "HJIPDOMMNAI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{MMMEIONJJFJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::MagicalActual::NetEntity*)>(&MagicalActual::InteractableEntity::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::CGBLOLJLEJG
// Il2CppName: CGBLOLJLEJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::UnityEngine::GameObject*)>(&MagicalActual::InteractableEntity::CGBLOLJLEJG)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "CGBLOLJLEJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::JMJDGKEHCCE
// Il2CppName: JMJDGKEHCCE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::UnityEngine::GameObject*)>(&MagicalActual::InteractableEntity::JMJDGKEHCCE)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "JMJDGKEHCCE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::get_attachedToPlayer
// Il2CppName: get_attachedToPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::Grabber* (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::get_attachedToPlayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "get_attachedToPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::CHMCEGMCENL
// Il2CppName: CHMCEGMCENL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::CHMCEGMCENL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "CHMCEGMCENL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::BMALDPKJJPG
// Il2CppName: BMALDPKJJPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::BMALDPKJJPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "BMALDPKJJPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::GPKGKCDGLDM
// Il2CppName: GPKGKCDGLDM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(bool)>(&MagicalActual::InteractableEntity::GPKGKCDGLDM)> {
  static const MethodInfo* get() {
    static auto* HOGABJDMADI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "GPKGKCDGLDM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HOGABJDMADI});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::CAMJLEDNJGP
// Il2CppName: CAMJLEDNJGP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::Il2CppObject*)>(&MagicalActual::InteractableEntity::CAMJLEDNJGP)> {
  static const MethodInfo* get() {
    static auto* OMLPNCLFFMJ = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "CAMJLEDNJGP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{OMLPNCLFFMJ});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::GPJPHBIFBPM
// Il2CppName: GPJPHBIFBPM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::UnityEngine::GameObject*)>(&MagicalActual::InteractableEntity::GPJPHBIFBPM)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "GPJPHBIFBPM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::BPLFIBNAFGK
// Il2CppName: BPLFIBNAFGK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::PhysicsInteractable* (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::BPLFIBNAFGK)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "BPLFIBNAFGK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::JKLPNMMHFCD
// Il2CppName: JKLPNMMHFCD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::UnityEngine::GameObject*)>(&MagicalActual::InteractableEntity::JKLPNMMHFCD)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "JKLPNMMHFCD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::ABPAFOBNBDD
// Il2CppName: ABPAFOBNBDD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(bool)>(&MagicalActual::InteractableEntity::ABPAFOBNBDD)> {
  static const MethodInfo* get() {
    static auto* HOGABJDMADI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "ABPAFOBNBDD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HOGABJDMADI});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::doGrip
// Il2CppName: doGrip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(::UnityEngine::GameObject*)>(&MagicalActual::InteractableEntity::doGrip)> {
  static const MethodInfo* get() {
    static auto* FOIEAOKBGLM = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "doGrip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOIEAOKBGLM});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::BHJFMOOPGGA
// Il2CppName: BHJFMOOPGGA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)(bool)>(&MagicalActual::InteractableEntity::BHJFMOOPGGA)> {
  static const MethodInfo* get() {
    static auto* HOGABJDMADI = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "BHJFMOOPGGA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HOGABJDMADI});
  }
};
// Writing MetadataGetter for method: MagicalActual::InteractableEntity::APKFAKMAMMA
// Il2CppName: APKFAKMAMMA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::InteractableEntity::*)()>(&MagicalActual::InteractableEntity::APKFAKMAMMA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::InteractableEntity*), "APKFAKMAMMA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
