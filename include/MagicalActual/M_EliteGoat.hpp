// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: Monster
  class Monster;
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: ArrayList
  class ArrayList;
}
// Completed forward declares
// Type namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: M_EliteGoat
  class M_EliteGoat;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MagicalActual::M_EliteGoat);
DEFINE_IL2CPP_ARG_TYPE(::MagicalActual::M_EliteGoat*, "MagicalActual", "M_EliteGoat");
// Type namespace: MagicalActual
namespace MagicalActual {
  // Size: 0x78
  #pragma pack(push, 1)
  // Autogenerated type: MagicalActual.M_EliteGoat
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD4570
  class M_EliteGoat : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::MagicalActual::M_EliteGoat::$$c__DisplayClass16_0
    class $$c__DisplayClass16_0;
    public:
    // private MagicalActual.Monster BIIBEOELIHH
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::Monster* BIIBEOELIHH;
    // Field size check
    static_assert(sizeof(::MagicalActual::Monster*) == 0x8);
    // public UnityEngine.GameObject vfxLineTrail
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* vfxLineTrail;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject localScaler
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* localScaler;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject vfxSlash
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* vfxSlash;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x38
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean EAIGIJFGLHK
    // Size: 0x1
    // Offset: 0x40
    bool EAIGIJFGLHK;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: EAIGIJFGLHK and: KCOKPGCNCLA
    char __padding5[0x3] = {};
    // private UnityEngine.Vector3 KCOKPGCNCLA
    // Size: 0xC
    // Offset: 0x44
    ::UnityEngine::Vector3 KCOKPGCNCLA;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private UnityEngine.Vector3 HMDMGGFFOGD
    // Size: 0xC
    // Offset: 0x50
    ::UnityEngine::Vector3 HMDMGGFFOGD;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private System.Single JLJLOCMFBKA
    // Size: 0x4
    // Offset: 0x5C
    float JLJLOCMFBKA;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single ANPNFLJBCNI
    // Size: 0x4
    // Offset: 0x60
    float ANPNFLJBCNI;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: ANPNFLJBCNI and: goat
    char __padding9[0x4] = {};
    // private UnityEngine.Transform goat
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Transform* goat;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // private MagicalActual.NetEntity IJJGNKLFGJN
    // Size: 0x8
    // Offset: 0x70
    ::MagicalActual::NetEntity* IJJGNKLFGJN;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.Monster BIIBEOELIHH
    [[deprecated("Use field access instead!")]] ::MagicalActual::Monster*& dyn_BIIBEOELIHH();
    // Get instance field reference: public UnityEngine.GameObject vfxLineTrail
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxLineTrail();
    // Get instance field reference: public UnityEngine.GameObject localScaler
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_localScaler();
    // Get instance field reference: public UnityEngine.GameObject vfxSlash
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_vfxSlash();
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private System.Boolean EAIGIJFGLHK
    [[deprecated("Use field access instead!")]] bool& dyn_EAIGIJFGLHK();
    // Get instance field reference: private UnityEngine.Vector3 KCOKPGCNCLA
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_KCOKPGCNCLA();
    // Get instance field reference: private UnityEngine.Vector3 HMDMGGFFOGD
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_HMDMGGFFOGD();
    // Get instance field reference: private System.Single JLJLOCMFBKA
    [[deprecated("Use field access instead!")]] float& dyn_JLJLOCMFBKA();
    // Get instance field reference: private System.Single ANPNFLJBCNI
    [[deprecated("Use field access instead!")]] float& dyn_ANPNFLJBCNI();
    // Get instance field reference: private UnityEngine.Transform goat
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_goat();
    // Get instance field reference: private MagicalActual.NetEntity IJJGNKLFGJN
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_IJJGNKLFGJN();
    // private System.Void CMGMNHMIHFD()
    // Offset: 0x247D648
    void CMGMNHMIHFD();
    // public System.Void orbusNetInit(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x247D954
    void orbusNetInit(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void MMJIKEBHBJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x247DAF0
    void MMJIKEBHBJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void LineCharge(UnityEngine.Vector3 FOAKBKPGHMB)
    // Offset: 0x247DC8C
    void LineCharge(::UnityEngine::Vector3 FOAKBKPGHMB);
    // private System.Void Update()
    // Offset: 0x247E034
    void Update();
    // public System.Void .ctor()
    // Offset: 0x247E330
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static M_EliteGoat* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::MagicalActual::M_EliteGoat::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<M_EliteGoat*, creationType>()));
    }
    // public System.Void NKFEBDDCFCI(UnityEngine.Vector3 FOAKBKPGHMB)
    // Offset: 0x247E388
    void NKFEBDDCFCI(::UnityEngine::Vector3 FOAKBKPGHMB);
    // public System.Void JHGIKEDAECA(UnityEngine.Vector3 FOAKBKPGHMB)
    // Offset: 0x247E738
    void JHGIKEDAECA(::UnityEngine::Vector3 FOAKBKPGHMB);
    // private System.Void NPNEIAFEMLJ()
    // Offset: 0x247EAE8
    void NPNEIAFEMLJ();
    // private System.Void IDOCJGNLNFL()
    // Offset: 0x247EB74
    void IDOCJGNLNFL();
    // private System.Void JJPHCBLJLHC(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x247EBCC
    void JJPHCBLJLHC(::System::Collections::ArrayList* HPEANAHIBAH);
    // private System.Void Start()
    // Offset: 0x247ED78
    void Start();
    // private System.Void HKINNMLBMMG()
    // Offset: 0x247EDD0
    void HKINNMLBMMG();
    // public System.Void AMBHFINDKPK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x247EE28
    void AMBHFINDKPK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EBNFNLMHNGE()
    // Offset: 0x247EFC4
    void EBNFNLMHNGE();
    // private System.Void BMPAMLHHDLC(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x247F2D0
    void BMPAMLHHDLC(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void GBEJOMKIPMH(UnityEngine.Vector3 FOAKBKPGHMB)
    // Offset: 0x247F474
    void GBEJOMKIPMH(::UnityEngine::Vector3 FOAKBKPGHMB);
    // private System.Void NGCGKDPPDBG()
    // Offset: 0x247F820
    void NGCGKDPPDBG();
    // private System.Void EPCHNEGNKNF()
    // Offset: 0x247FB2C
    void EPCHNEGNKNF();
    // private System.Void DPCICCGDFOO(System.Collections.ArrayList HPEANAHIBAH)
    // Offset: 0x247FB84
    void DPCICCGDFOO(::System::Collections::ArrayList* HPEANAHIBAH);
    // public System.Void FEOMBFHJIJF(UnityEngine.Vector3 FOAKBKPGHMB)
    // Offset: 0x247FD28
    void FEOMBFHJIJF(::UnityEngine::Vector3 FOAKBKPGHMB);
    // private System.Void AKGFEENGKJD()
    // Offset: 0x24800D8
    void AKGFEENGKJD();
    // public System.Void HOAJNJFEALN(UnityEngine.Vector3 FOAKBKPGHMB)
    // Offset: 0x2480130
    void HOAJNJFEALN(::UnityEngine::Vector3 FOAKBKPGHMB);
    // private System.Void PNKHLJDEJNA()
    // Offset: 0x24804E0
    void PNKHLJDEJNA();
    // public System.Void Slash()
    // Offset: 0x24807EC
    void Slash();
    // public System.Void IKDGLCBOCJG(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2480A04
    void IKDGLCBOCJG(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void OnDestroy()
    // Offset: 0x2480BA0
    void OnDestroy();
    // public System.Void EGJMIHFLOKP(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2480C2C
    void EGJMIHFLOKP(::MagicalActual::NetEntity* CMLIHJCOINC);
    // private System.Void EKEDCCIDOBI()
    // Offset: 0x2480DC8
    void EKEDCCIDOBI();
    // public System.Void CILEGMGIGJF(UnityEngine.Vector3 FOAKBKPGHMB)
    // Offset: 0x2480E54
    void CILEGMGIGJF(::UnityEngine::Vector3 FOAKBKPGHMB);
    // public System.Void DKILGFBCKHD()
    // Offset: 0x2481204
    void DKILGFBCKHD();
    // public System.Void OAMOHIMHKEK(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x2481428
    void OAMOHIMHKEK(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void PLPDCBMCEJF(MagicalActual.NetEntity CMLIHJCOINC)
    // Offset: 0x24815C4
    void PLPDCBMCEJF(::MagicalActual::NetEntity* CMLIHJCOINC);
    // public System.Void KKENOOEHEEC(UnityEngine.Vector3 FOAKBKPGHMB)
    // Offset: 0x2481760
    void KKENOOEHEEC(::UnityEngine::Vector3 FOAKBKPGHMB);
    // public System.Void CEPPICBNJOI()
    // Offset: 0x2481B10
    void CEPPICBNJOI();
    // private System.Void JENOIOBAEPG()
    // Offset: 0x2481D34
    void JENOIOBAEPG();
  }; // MagicalActual.M_EliteGoat
  #pragma pack(pop)
  static check_size<sizeof(M_EliteGoat), 112 + sizeof(::MagicalActual::NetEntity*)> __MagicalActual_M_EliteGoatSizeCheck;
  static_assert(sizeof(M_EliteGoat) == 0x78);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::CMGMNHMIHFD
// Il2CppName: CMGMNHMIHFD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::CMGMNHMIHFD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "CMGMNHMIHFD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_EliteGoat::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::MMJIKEBHBJF
// Il2CppName: MMJIKEBHBJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_EliteGoat::MMJIKEBHBJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "MMJIKEBHBJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::LineCharge
// Il2CppName: LineCharge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::UnityEngine::Vector3)>(&MagicalActual::M_EliteGoat::LineCharge)> {
  static const MethodInfo* get() {
    static auto* FOAKBKPGHMB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "LineCharge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOAKBKPGHMB});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::NKFEBDDCFCI
// Il2CppName: NKFEBDDCFCI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::UnityEngine::Vector3)>(&MagicalActual::M_EliteGoat::NKFEBDDCFCI)> {
  static const MethodInfo* get() {
    static auto* FOAKBKPGHMB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "NKFEBDDCFCI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOAKBKPGHMB});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::JHGIKEDAECA
// Il2CppName: JHGIKEDAECA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::UnityEngine::Vector3)>(&MagicalActual::M_EliteGoat::JHGIKEDAECA)> {
  static const MethodInfo* get() {
    static auto* FOAKBKPGHMB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "JHGIKEDAECA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOAKBKPGHMB});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::NPNEIAFEMLJ
// Il2CppName: NPNEIAFEMLJ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::NPNEIAFEMLJ)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "NPNEIAFEMLJ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::IDOCJGNLNFL
// Il2CppName: IDOCJGNLNFL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::IDOCJGNLNFL)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "IDOCJGNLNFL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::JJPHCBLJLHC
// Il2CppName: JJPHCBLJLHC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_EliteGoat::JJPHCBLJLHC)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "JJPHCBLJLHC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::HKINNMLBMMG
// Il2CppName: HKINNMLBMMG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::HKINNMLBMMG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "HKINNMLBMMG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::AMBHFINDKPK
// Il2CppName: AMBHFINDKPK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_EliteGoat::AMBHFINDKPK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "AMBHFINDKPK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::EBNFNLMHNGE
// Il2CppName: EBNFNLMHNGE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::EBNFNLMHNGE)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "EBNFNLMHNGE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::BMPAMLHHDLC
// Il2CppName: BMPAMLHHDLC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_EliteGoat::BMPAMLHHDLC)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "BMPAMLHHDLC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::GBEJOMKIPMH
// Il2CppName: GBEJOMKIPMH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::UnityEngine::Vector3)>(&MagicalActual::M_EliteGoat::GBEJOMKIPMH)> {
  static const MethodInfo* get() {
    static auto* FOAKBKPGHMB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "GBEJOMKIPMH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOAKBKPGHMB});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::NGCGKDPPDBG
// Il2CppName: NGCGKDPPDBG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::NGCGKDPPDBG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "NGCGKDPPDBG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::EPCHNEGNKNF
// Il2CppName: EPCHNEGNKNF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::EPCHNEGNKNF)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "EPCHNEGNKNF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::DPCICCGDFOO
// Il2CppName: DPCICCGDFOO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::System::Collections::ArrayList*)>(&MagicalActual::M_EliteGoat::DPCICCGDFOO)> {
  static const MethodInfo* get() {
    static auto* HPEANAHIBAH = &::il2cpp_utils::GetClassFromName("System.Collections", "ArrayList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "DPCICCGDFOO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{HPEANAHIBAH});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::FEOMBFHJIJF
// Il2CppName: FEOMBFHJIJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::UnityEngine::Vector3)>(&MagicalActual::M_EliteGoat::FEOMBFHJIJF)> {
  static const MethodInfo* get() {
    static auto* FOAKBKPGHMB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "FEOMBFHJIJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOAKBKPGHMB});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::AKGFEENGKJD
// Il2CppName: AKGFEENGKJD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::AKGFEENGKJD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "AKGFEENGKJD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::HOAJNJFEALN
// Il2CppName: HOAJNJFEALN
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::UnityEngine::Vector3)>(&MagicalActual::M_EliteGoat::HOAJNJFEALN)> {
  static const MethodInfo* get() {
    static auto* FOAKBKPGHMB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "HOAJNJFEALN", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOAKBKPGHMB});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::PNKHLJDEJNA
// Il2CppName: PNKHLJDEJNA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::PNKHLJDEJNA)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "PNKHLJDEJNA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::Slash
// Il2CppName: Slash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::Slash)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "Slash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::IKDGLCBOCJG
// Il2CppName: IKDGLCBOCJG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_EliteGoat::IKDGLCBOCJG)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "IKDGLCBOCJG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::EGJMIHFLOKP
// Il2CppName: EGJMIHFLOKP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_EliteGoat::EGJMIHFLOKP)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "EGJMIHFLOKP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::EKEDCCIDOBI
// Il2CppName: EKEDCCIDOBI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::EKEDCCIDOBI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "EKEDCCIDOBI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::CILEGMGIGJF
// Il2CppName: CILEGMGIGJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::UnityEngine::Vector3)>(&MagicalActual::M_EliteGoat::CILEGMGIGJF)> {
  static const MethodInfo* get() {
    static auto* FOAKBKPGHMB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "CILEGMGIGJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOAKBKPGHMB});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::DKILGFBCKHD
// Il2CppName: DKILGFBCKHD
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::DKILGFBCKHD)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "DKILGFBCKHD", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::OAMOHIMHKEK
// Il2CppName: OAMOHIMHKEK
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_EliteGoat::OAMOHIMHKEK)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "OAMOHIMHKEK", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::PLPDCBMCEJF
// Il2CppName: PLPDCBMCEJF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::MagicalActual::NetEntity*)>(&MagicalActual::M_EliteGoat::PLPDCBMCEJF)> {
  static const MethodInfo* get() {
    static auto* CMLIHJCOINC = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "PLPDCBMCEJF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{CMLIHJCOINC});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::KKENOOEHEEC
// Il2CppName: KKENOOEHEEC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)(::UnityEngine::Vector3)>(&MagicalActual::M_EliteGoat::KKENOOEHEEC)> {
  static const MethodInfo* get() {
    static auto* FOAKBKPGHMB = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "KKENOOEHEEC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{FOAKBKPGHMB});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::CEPPICBNJOI
// Il2CppName: CEPPICBNJOI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::CEPPICBNJOI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "CEPPICBNJOI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MagicalActual::M_EliteGoat::JENOIOBAEPG
// Il2CppName: JENOIOBAEPG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MagicalActual::M_EliteGoat::*)()>(&MagicalActual::M_EliteGoat::JENOIOBAEPG)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MagicalActual::M_EliteGoat*), "JENOIOBAEPG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
