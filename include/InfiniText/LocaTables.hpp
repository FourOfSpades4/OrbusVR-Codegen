// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: InfiniText
namespace InfiniText {
  // Forward declaring type: FontParser
  class FontParser;
}
// Completed forward declares
// Type namespace: InfiniText
namespace InfiniText {
  // Forward declaring type: LocaTables
  class LocaTables;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::InfiniText::LocaTables);
DEFINE_IL2CPP_ARG_TYPE(::InfiniText::LocaTables*, "InfiniText", "LocaTables");
// Type namespace: InfiniText
namespace InfiniText {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: InfiniText.LocaTables
  // [TokenAttribute] Offset: FFFFFFFF
  class LocaTables : public ::Il2CppObject {
    public:
    // static public System.UInt32[] Load(InfiniText.FontParser parser, System.Int32 offset, System.Int32 numGlyphs, System.Boolean shortVersion)
    // Offset: 0x14AA620
    static ::ArrayW<uint> Load(::InfiniText::FontParser* parser, int offset, int numGlyphs, bool shortVersion);
  }; // InfiniText.LocaTables
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: InfiniText::LocaTables::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint> (*)(::InfiniText::FontParser*, int, int, bool)>(&InfiniText::LocaTables::Load)> {
  static const MethodInfo* get() {
    static auto* parser = &::il2cpp_utils::GetClassFromName("InfiniText", "FontParser")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* numGlyphs = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* shortVersion = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::LocaTables*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parser, offset, numGlyphs, shortVersion});
  }
};
