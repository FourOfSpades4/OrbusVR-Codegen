// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: InfiniText
namespace InfiniText {
  // Forward declaring type: OnGetDistance
  class OnGetDistance;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::InfiniText::OnGetDistance);
DEFINE_IL2CPP_ARG_TYPE(::InfiniText::OnGetDistance*, "InfiniText", "OnGetDistance");
// Type namespace: InfiniText
namespace InfiniText {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: InfiniText.OnGetDistance
  // [TokenAttribute] Offset: FFFFFFFF
  class OnGetDistance : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x105506C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OnGetDistance* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::InfiniText::OnGetDistance::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OnGetDistance*, creationType>(object, method)));
    }
    // public System.Single Invoke(System.Single x, System.Single y, System.Int32 vertexIndex, System.Int32 totalVertices)
    // Offset: 0x105507C
    float Invoke(float x, float y, int vertexIndex, int totalVertices);
    // public System.IAsyncResult BeginInvoke(System.Single x, System.Single y, System.Int32 vertexIndex, System.Int32 totalVertices, System.AsyncCallback callback, System.Object object)
    // Offset: 0x1055578
    ::System::IAsyncResult* BeginInvoke(float x, float y, int vertexIndex, int totalVertices, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Single EndInvoke(System.IAsyncResult result)
    // Offset: 0x1055650
    float EndInvoke(::System::IAsyncResult* result);
  }; // InfiniText.OnGetDistance
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: InfiniText::OnGetDistance::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: InfiniText::OnGetDistance::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InfiniText::OnGetDistance::*)(float, float, int, int)>(&InfiniText::OnGetDistance::Invoke)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vertexIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* totalVertices = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::OnGetDistance*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y, vertexIndex, totalVertices});
  }
};
// Writing MetadataGetter for method: InfiniText::OnGetDistance::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (InfiniText::OnGetDistance::*)(float, float, int, int, ::System::AsyncCallback*, ::Il2CppObject*)>(&InfiniText::OnGetDistance::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* vertexIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* totalVertices = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::OnGetDistance*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y, vertexIndex, totalVertices, callback, object});
  }
};
// Writing MetadataGetter for method: InfiniText::OnGetDistance::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (InfiniText::OnGetDistance::*)(::System::IAsyncResult*)>(&InfiniText::OnGetDistance::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::OnGetDistance*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
