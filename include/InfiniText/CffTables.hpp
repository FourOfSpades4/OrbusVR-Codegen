// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: InfiniText
namespace InfiniText {
  // Forward declaring type: Glyph
  class Glyph;
  // Forward declaring type: FontParser
  class FontParser;
  // Forward declaring type: CffGlyphParser
  class CffGlyphParser;
  // Forward declaring type: CffSubPosition
  class CffSubPosition;
  // Forward declaring type: FontFace
  class FontFace;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: InfiniText
namespace InfiniText {
  // Forward declaring type: CffTables
  class CffTables;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::InfiniText::CffTables);
DEFINE_IL2CPP_ARG_TYPE(::InfiniText::CffTables*, "InfiniText", "CffTables");
// Type namespace: InfiniText
namespace InfiniText {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: InfiniText.CffTables
  // [TokenAttribute] Offset: FFFFFFFF
  class CffTables : public ::Il2CppObject {
    public:
    // static private InfiniText.Glyph[] LoadIndex(InfiniText.FontParser parser, InfiniText.CffGlyphParser cffParser)
    // Offset: 0x14A5250
    static ::ArrayW<::InfiniText::Glyph*> LoadIndex(::InfiniText::FontParser* parser, ::InfiniText::CffGlyphParser* cffParser);
    // static private InfiniText.CffSubPosition[] LoadSubIndex(InfiniText.FontParser parser)
    // Offset: 0x14A5608
    static ::ArrayW<::InfiniText::CffSubPosition*> LoadSubIndex(::InfiniText::FontParser* parser);
    // static private System.Void SkipIndex(InfiniText.FontParser parser)
    // Offset: 0x14A589C
    static void SkipIndex(::InfiniText::FontParser* parser);
    // static public System.Int32 GetBias(InfiniText.CffSubPosition[] set)
    // Offset: 0x14A5994
    static int GetBias(::ArrayW<::InfiniText::CffSubPosition*> set);
    // static private System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.List`1<System.Int32>> LoadDict(InfiniText.FontParser parser)
    // Offset: 0x14A59C4
    static ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<int>*>* LoadDict(::InfiniText::FontParser* parser);
    // static public System.Int32 ParseOperand(InfiniText.FontParser parser, System.Int32 b0)
    // Offset: 0x14A5D28
    static int ParseOperand(::InfiniText::FontParser* parser, int b0);
    // static public System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.List`1<System.Int32>> ParseCFFDict(InfiniText.FontParser parser, System.Int32 length)
    // Offset: 0x14A5BA8
    static ::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<int>*>* ParseCFFDict(::InfiniText::FontParser* parser, int length);
    // static public System.Int32 ReadDict(System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.List`1<System.Int32>> dict, System.Int32 index)
    // Offset: 0x14A5E54
    static int ReadDict(::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<int>*>* dict, int index);
    // static public InfiniText.Glyph[] Load(InfiniText.FontParser parser, System.Int32 offset, InfiniText.FontFace font)
    // Offset: 0x14A5F00
    static ::ArrayW<::InfiniText::Glyph*> Load(::InfiniText::FontParser* parser, int offset, ::InfiniText::FontFace* font);
  }; // InfiniText.CffTables
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: InfiniText::CffTables::LoadIndex
// Il2CppName: LoadIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::InfiniText::Glyph*> (*)(::InfiniText::FontParser*, ::InfiniText::CffGlyphParser*)>(&InfiniText::CffTables::LoadIndex)> {
  static const MethodInfo* get() {
    static auto* parser = &::il2cpp_utils::GetClassFromName("InfiniText", "FontParser")->byval_arg;
    static auto* cffParser = &::il2cpp_utils::GetClassFromName("InfiniText", "CffGlyphParser")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::CffTables*), "LoadIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parser, cffParser});
  }
};
// Writing MetadataGetter for method: InfiniText::CffTables::LoadSubIndex
// Il2CppName: LoadSubIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::InfiniText::CffSubPosition*> (*)(::InfiniText::FontParser*)>(&InfiniText::CffTables::LoadSubIndex)> {
  static const MethodInfo* get() {
    static auto* parser = &::il2cpp_utils::GetClassFromName("InfiniText", "FontParser")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::CffTables*), "LoadSubIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parser});
  }
};
// Writing MetadataGetter for method: InfiniText::CffTables::SkipIndex
// Il2CppName: SkipIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::InfiniText::FontParser*)>(&InfiniText::CffTables::SkipIndex)> {
  static const MethodInfo* get() {
    static auto* parser = &::il2cpp_utils::GetClassFromName("InfiniText", "FontParser")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::CffTables*), "SkipIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parser});
  }
};
// Writing MetadataGetter for method: InfiniText::CffTables::GetBias
// Il2CppName: GetBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<::InfiniText::CffSubPosition*>)>(&InfiniText::CffTables::GetBias)> {
  static const MethodInfo* get() {
    static auto* set = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("InfiniText", "CffSubPosition"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::CffTables*), "GetBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{set});
  }
};
// Writing MetadataGetter for method: InfiniText::CffTables::LoadDict
// Il2CppName: LoadDict
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<int>*>* (*)(::InfiniText::FontParser*)>(&InfiniText::CffTables::LoadDict)> {
  static const MethodInfo* get() {
    static auto* parser = &::il2cpp_utils::GetClassFromName("InfiniText", "FontParser")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::CffTables*), "LoadDict", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parser});
  }
};
// Writing MetadataGetter for method: InfiniText::CffTables::ParseOperand
// Il2CppName: ParseOperand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::InfiniText::FontParser*, int)>(&InfiniText::CffTables::ParseOperand)> {
  static const MethodInfo* get() {
    static auto* parser = &::il2cpp_utils::GetClassFromName("InfiniText", "FontParser")->byval_arg;
    static auto* b0 = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::CffTables*), "ParseOperand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parser, b0});
  }
};
// Writing MetadataGetter for method: InfiniText::CffTables::ParseCFFDict
// Il2CppName: ParseCFFDict
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<int>*>* (*)(::InfiniText::FontParser*, int)>(&InfiniText::CffTables::ParseCFFDict)> {
  static const MethodInfo* get() {
    static auto* parser = &::il2cpp_utils::GetClassFromName("InfiniText", "FontParser")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::CffTables*), "ParseCFFDict", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parser, length});
  }
};
// Writing MetadataGetter for method: InfiniText::CffTables::ReadDict
// Il2CppName: ReadDict
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::List_1<int>*>*, int)>(&InfiniText::CffTables::ReadDict)> {
  static const MethodInfo* get() {
    static auto* dict = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})})->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::CffTables*), "ReadDict", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dict, index});
  }
};
// Writing MetadataGetter for method: InfiniText::CffTables::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::InfiniText::Glyph*> (*)(::InfiniText::FontParser*, int, ::InfiniText::FontFace*)>(&InfiniText::CffTables::Load)> {
  static const MethodInfo* get() {
    static auto* parser = &::il2cpp_utils::GetClassFromName("InfiniText", "FontParser")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* font = &::il2cpp_utils::GetClassFromName("InfiniText", "FontFace")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(InfiniText::CffTables*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parser, offset, font});
  }
};
