// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: InfiniText
namespace InfiniText {
  // Forward declaring type: CffStackEntry
  class CffStackEntry;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::InfiniText::CffStackEntry);
DEFINE_IL2CPP_ARG_TYPE(::InfiniText::CffStackEntry*, "InfiniText", "CffStackEntry");
// Type namespace: InfiniText
namespace InfiniText {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: InfiniText.CffStackEntry
  // [TokenAttribute] Offset: FFFFFFFF
  class CffStackEntry : public ::Il2CppObject {
    public:
    public:
    // public InfiniText.CffStackEntry Next
    // Size: 0x8
    // Offset: 0x10
    ::InfiniText::CffStackEntry* Next;
    // Field size check
    static_assert(sizeof(::InfiniText::CffStackEntry*) == 0x8);
    // public InfiniText.CffStackEntry Previous
    // Size: 0x8
    // Offset: 0x18
    ::InfiniText::CffStackEntry* Previous;
    // Field size check
    static_assert(sizeof(::InfiniText::CffStackEntry*) == 0x8);
    // public System.Single Value
    // Size: 0x4
    // Offset: 0x20
    float Value;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public InfiniText.CffStackEntry Next
    [[deprecated("Use field access instead!")]] ::InfiniText::CffStackEntry*& dyn_Next();
    // Get instance field reference: public InfiniText.CffStackEntry Previous
    [[deprecated("Use field access instead!")]] ::InfiniText::CffStackEntry*& dyn_Previous();
    // Get instance field reference: public System.Single Value
    [[deprecated("Use field access instead!")]] float& dyn_Value();
    // public System.Void .ctor(System.Single value)
    // Offset: 0x14A51E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CffStackEntry* New_ctor(float value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::InfiniText::CffStackEntry::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CffStackEntry*, creationType>(value)));
    }
  }; // InfiniText.CffStackEntry
  #pragma pack(pop)
  static check_size<sizeof(CffStackEntry), 32 + sizeof(float)> __InfiniText_CffStackEntrySizeCheck;
  static_assert(sizeof(CffStackEntry) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: InfiniText::CffStackEntry::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
