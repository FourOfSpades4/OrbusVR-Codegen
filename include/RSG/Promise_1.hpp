// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: RSG.IPromise`1
#include "RSG/IPromise_1.hpp"
// Including type: RSG.IPendingPromise`1
#include "RSG/IPendingPromise_1.hpp"
// Including type: RSG.IPromiseInfo
#include "RSG/IPromiseInfo.hpp"
// Including type: RSG.RejectHandler
#include "RSG/RejectHandler.hpp"
// Including type: RSG.ProgressHandler
#include "RSG/ProgressHandler.hpp"
// Including type: RSG.PromiseState
#include "RSG/PromiseState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RSG
namespace RSG {
  // Skipping declaration: <>c__DisplayClass24_0 because it is already included!
  // Skipping declaration: IRejectable because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: RSG
namespace RSG {
  // Forward declaring type: Promise`1<PromisedT>
  template<typename PromisedT>
  class Promise_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::RSG::Promise_1, "RSG", "Promise`1");
// Type namespace: RSG
namespace RSG {
  // WARNING Size may be invalid!
  // Autogenerated type: RSG.Promise`1
  // [TokenAttribute] Offset: FFFFFFFF
  template<typename PromisedT>
  class Promise_1 : public ::Il2CppObject/*, public ::RSG::IPromise_1<PromisedT>, public ::RSG::IPendingPromise_1<PromisedT>, public ::RSG::IPromiseInfo*/ {
    public:
    // Nested type: ::RSG::Promise_1::$$c__DisplayClass24_0<PromisedT>
    class $$c__DisplayClass24_0;
    // WARNING Size may be invalid!
    // Autogenerated type: RSG.Promise`1/<>c__DisplayClass24_0
    // [TokenAttribute] Offset: FFFFFFFF
    // [CompilerGeneratedAttribute] Offset: ABC3D0
    class $$c__DisplayClass24_0 : public ::il2cpp_utils::il2cpp_type_check::NestedType, public ::Il2CppObject {
      public:
      using declaring_type = Promise_1<PromisedT>*;
      static constexpr std::string_view NESTED_NAME = "<>c__DisplayClass24_0";
      static constexpr bool IS_VALUE_TYPE = false;
      public:
      // public RSG.Promise`1<PromisedT> <>4__this
      // Size: 0x8
      // Offset: 0x0
      ::RSG::Promise_1<PromisedT>* $$4__this;
      // Field size check
      static_assert(sizeof(::RSG::Promise_1<PromisedT>*) == 0x8);
      // public System.Exception ex
      // Size: 0x8
      // Offset: 0x0
      ::System::Exception* ex;
      // Field size check
      static_assert(sizeof(::System::Exception*) == 0x8);
      public:
      // Autogenerated instance field getter
      // Get instance field: public RSG.Promise`1<PromisedT> <>4__this
      [[deprecated("Use field access instead!")]] ::RSG::Promise_1<PromisedT>*& dyn_$$4__this() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass24_0::dyn_$$4__this");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
        return *reinterpret_cast<::RSG::Promise_1<PromisedT>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // Autogenerated instance field getter
      // Get instance field: public System.Exception ex
      [[deprecated("Use field access instead!")]] ::System::Exception*& dyn_ex() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass24_0::dyn_ex");
        auto ___internal__instance = this;
        static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ex"))->offset;
        return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
      }
      // public System.Void .ctor()
      // Offset: 0xFFFFFFFFFFFFFFFF
      template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
      static typename Promise_1<PromisedT>::$$c__DisplayClass24_0* New_ctor() {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass24_0::.ctor");
        return THROW_UNLESS((::il2cpp_utils::New<typename Promise_1<PromisedT>::$$c__DisplayClass24_0*, creationType>()));
      }
      // System.Void <InvokeRejectHandlers>b__0(RSG.RejectHandler handler)
      // Offset: 0xFFFFFFFFFFFFFFFF
      void $InvokeRejectHandlers$b__0(::RSG::RejectHandler handler) {
        static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::$$c__DisplayClass24_0::<InvokeRejectHandlers>b__0");
        static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InvokeRejectHandlers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
        ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handler);
      }
    }; // RSG.Promise`1/<>c__DisplayClass24_0
    // Could not write size check! Type: RSG.Promise`1/<>c__DisplayClass24_0 is generic, or has no fields that are valid for size checks!
    public:
    // private System.Exception rejectionException
    // Size: 0x8
    // Offset: 0x0
    ::System::Exception* rejectionException;
    // Field size check
    static_assert(sizeof(::System::Exception*) == 0x8);
    // private PromisedT resolveValue
    // Size: 0xFFFFFFFF
    // Offset: 0x0
    PromisedT resolveValue;
    // private System.Collections.Generic.List`1<RSG.RejectHandler> rejectHandlers
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::RSG::RejectHandler>* rejectHandlers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::RSG::RejectHandler>*) == 0x8);
    // private System.Collections.Generic.List`1<RSG.ProgressHandler> progressHandlers
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::RSG::ProgressHandler>* progressHandlers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::RSG::ProgressHandler>*) == 0x8);
    // private System.Collections.Generic.List`1<System.Action`1<PromisedT>> resolveCallbacks
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::System::Action_1<PromisedT>*>* resolveCallbacks;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::System::Action_1<PromisedT>*>*) == 0x8);
    // private System.Collections.Generic.List`1<RSG.IRejectable> resolveRejectables
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<::RSG::IRejectable*>* resolveRejectables;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::RSG::IRejectable*>*) == 0x8);
    // private readonly System.Int32 id
    // Size: 0x4
    // Offset: 0x0
    int id;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [DebuggerBrowsableAttribute] Offset: 0xABC400
    // [CompilerGeneratedAttribute] Offset: 0xABC400
    // private RSG.PromiseState <CurState>k__BackingField
    // Size: 0x4
    // Offset: 0x0
    ::RSG::PromiseState CurState;
    // Field size check
    static_assert(sizeof(::RSG::PromiseState) == 0x4);
    public:
    // Creating interface conversion operator: operator ::RSG::IPromise_1<PromisedT>
    operator ::RSG::IPromise_1<PromisedT>() noexcept {
      return *reinterpret_cast<::RSG::IPromise_1<PromisedT>*>(this);
    }
    // Creating interface conversion operator: operator ::RSG::IPendingPromise_1<PromisedT>
    operator ::RSG::IPendingPromise_1<PromisedT>() noexcept {
      return *reinterpret_cast<::RSG::IPendingPromise_1<PromisedT>*>(this);
    }
    // Creating interface conversion operator: operator ::RSG::IPromiseInfo
    operator ::RSG::IPromiseInfo() noexcept {
      return *reinterpret_cast<::RSG::IPromiseInfo*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Exception rejectionException
    [[deprecated("Use field access instead!")]] ::System::Exception*& dyn_rejectionException() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_rejectionException");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rejectionException"))->offset;
      return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private PromisedT resolveValue
    [[deprecated("Use field access instead!")]] PromisedT& dyn_resolveValue() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_resolveValue");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolveValue"))->offset;
      return *reinterpret_cast<PromisedT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<RSG.RejectHandler> rejectHandlers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::RSG::RejectHandler>*& dyn_rejectHandlers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_rejectHandlers");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rejectHandlers"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::RSG::RejectHandler>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<RSG.ProgressHandler> progressHandlers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::RSG::ProgressHandler>*& dyn_progressHandlers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_progressHandlers");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressHandlers"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::RSG::ProgressHandler>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<System.Action`1<PromisedT>> resolveCallbacks
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Action_1<PromisedT>*>*& dyn_resolveCallbacks() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_resolveCallbacks");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolveCallbacks"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Action_1<PromisedT>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private System.Collections.Generic.List`1<RSG.IRejectable> resolveRejectables
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::RSG::IRejectable*>*& dyn_resolveRejectables() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_resolveRejectables");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolveRejectables"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<::RSG::IRejectable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private readonly System.Int32 id
    [[deprecated("Use field access instead!")]] int& dyn_id() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_id");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
      return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: private RSG.PromiseState <CurState>k__BackingField
    [[deprecated("Use field access instead!")]] ::RSG::PromiseState& dyn_$CurState$k__BackingField() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::dyn_$CurState$k__BackingField");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurState>k__BackingField"))->offset;
      return *reinterpret_cast<::RSG::PromiseState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public RSG.PromiseState get_CurState()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::PromiseState get_CurState() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::get_CurState");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::PromiseState, false>(this, ___internal__method);
    }
    // private System.Void set_CurState(RSG.PromiseState value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_CurState(::RSG::PromiseState value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::set_CurState");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Promise_1<PromisedT>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Promise_1<PromisedT>*, creationType>()));
    }
    // private System.Void InvokeHandler(System.Action`1<T> callback, RSG.IRejectable rejectable, T value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    void InvokeHandler(::System::Action_1<T>* callback, ::RSG::IRejectable* rejectable, T value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::InvokeHandler");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeHandler", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(rejectable), ::il2cpp_utils::ExtractType(value)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___generic__method, callback, rejectable, value);
    }
    // private System.Void ClearHandlers()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClearHandlers() {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::ClearHandlers");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // private System.Void InvokeRejectHandlers(System.Exception ex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InvokeRejectHandlers(::System::Exception* ex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::InvokeRejectHandlers");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRejectHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
    }
    // private System.Void InvokeResolveHandlers(PromisedT value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void InvokeResolveHandlers(PromisedT value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::InvokeResolveHandlers");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeResolveHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
    // public System.Void Reject(System.Exception ex)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Reject(::System::Exception* ex) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Reject");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
    }
    // public System.Void Resolve(PromisedT value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Resolve(PromisedT value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise_1::Resolve");
      auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise_1<PromisedT>*), -1));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
    }
  }; // RSG.Promise`1
  // Could not write size check! Type: RSG.Promise`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
