// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnLogickFactory.SkinnedMeshOptions
#include "UnLogickFactory/SkinnedMeshOptions.hpp"
// Including type: UnLogickFactory.BlendShapeOptions
#include "UnLogickFactory/BlendShapeOptions.hpp"
// Including type: UnLogickFactory.ObjectExportMask
#include "UnLogickFactory/ObjectExportMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnLogickFactory
namespace UnLogickFactory {
  // Forward declaring type: FbxLODScheme
  class FbxLODScheme;
  // Forward declaring type: FbxTextureExportScheme
  class FbxTextureExportScheme;
  // Forward declaring type: FbxNodeCallback
  class FbxNodeCallback;
  // Forward declaring type: FbxMeshCallback
  class FbxMeshCallback;
  // Forward declaring type: FbxSkinnedMeshCallback
  class FbxSkinnedMeshCallback;
  // Forward declaring type: FbxTerrainCallback
  class FbxTerrainCallback;
  // Forward declaring type: FbxMaterialCallback
  class FbxMaterialCallback;
}
// Completed forward declares
// Type namespace: UnLogickFactory
namespace UnLogickFactory {
  // Forward declaring type: FbxExportSettings
  class FbxExportSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnLogickFactory::FbxExportSettings);
DEFINE_IL2CPP_ARG_TYPE(::UnLogickFactory::FbxExportSettings*, "UnLogickFactory", "FbxExportSettings");
// Type namespace: UnLogickFactory
namespace UnLogickFactory {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: UnLogickFactory.FbxExportSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class FbxExportSettings : public ::Il2CppObject {
    public:
    public:
    // public UnLogickFactory.FbxLODScheme LODScheme
    // Size: 0x8
    // Offset: 0x10
    ::UnLogickFactory::FbxLODScheme* LODScheme;
    // Field size check
    static_assert(sizeof(::UnLogickFactory::FbxLODScheme*) == 0x8);
    // public System.Int32 logLevel
    // Size: 0x4
    // Offset: 0x18
    int logLevel;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: logLevel and: textureScheme
    char __padding1[0x4] = {};
    // public UnLogickFactory.FbxTextureExportScheme textureScheme
    // Size: 0x8
    // Offset: 0x20
    ::UnLogickFactory::FbxTextureExportScheme* textureScheme;
    // Field size check
    static_assert(sizeof(::UnLogickFactory::FbxTextureExportScheme*) == 0x8);
    // public System.Int32 formatId
    // Size: 0x4
    // Offset: 0x28
    int formatId;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean embedTextures
    // Size: 0x1
    // Offset: 0x2C
    bool embedTextures;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean embedShaderProperty
    // Size: 0x1
    // Offset: 0x2D
    bool embedShaderProperty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: embedShaderProperty and: terrainQuality
    char __padding5[0x2] = {};
    // public System.Int32 terrainQuality
    // Size: 0x4
    // Offset: 0x30
    int terrainQuality;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnLogickFactory.SkinnedMeshOptions skinnedMeshOptions
    // Size: 0x4
    // Offset: 0x34
    ::UnLogickFactory::SkinnedMeshOptions skinnedMeshOptions;
    // Field size check
    static_assert(sizeof(::UnLogickFactory::SkinnedMeshOptions) == 0x4);
    // public UnLogickFactory.BlendShapeOptions blendShapeOptions
    // Size: 0x4
    // Offset: 0x38
    ::UnLogickFactory::BlendShapeOptions blendShapeOptions;
    // Field size check
    static_assert(sizeof(::UnLogickFactory::BlendShapeOptions) == 0x4);
    // public UnLogickFactory.ObjectExportMask objectExportMask
    // Size: 0x4
    // Offset: 0x3C
    ::UnLogickFactory::ObjectExportMask objectExportMask;
    // Field size check
    static_assert(sizeof(::UnLogickFactory::ObjectExportMask) == 0x4);
    // public UnLogickFactory.FbxNodeCallback OnFbxNodeCreated
    // Size: 0x8
    // Offset: 0x40
    ::UnLogickFactory::FbxNodeCallback* OnFbxNodeCreated;
    // Field size check
    static_assert(sizeof(::UnLogickFactory::FbxNodeCallback*) == 0x8);
    // public UnLogickFactory.FbxMeshCallback OnFbxMeshCreated
    // Size: 0x8
    // Offset: 0x48
    ::UnLogickFactory::FbxMeshCallback* OnFbxMeshCreated;
    // Field size check
    static_assert(sizeof(::UnLogickFactory::FbxMeshCallback*) == 0x8);
    // public UnLogickFactory.FbxSkinnedMeshCallback OnFbxSkinnedMeshCreated
    // Size: 0x8
    // Offset: 0x50
    ::UnLogickFactory::FbxSkinnedMeshCallback* OnFbxSkinnedMeshCreated;
    // Field size check
    static_assert(sizeof(::UnLogickFactory::FbxSkinnedMeshCallback*) == 0x8);
    // public UnLogickFactory.FbxTerrainCallback OnFbxTerrainCreated
    // Size: 0x8
    // Offset: 0x58
    ::UnLogickFactory::FbxTerrainCallback* OnFbxTerrainCreated;
    // Field size check
    static_assert(sizeof(::UnLogickFactory::FbxTerrainCallback*) == 0x8);
    // public UnLogickFactory.FbxMaterialCallback OnFbxMaterialCreated
    // Size: 0x8
    // Offset: 0x60
    ::UnLogickFactory::FbxMaterialCallback* OnFbxMaterialCreated;
    // Field size check
    static_assert(sizeof(::UnLogickFactory::FbxMaterialCallback*) == 0x8);
    public:
    // Get instance field reference: public UnLogickFactory.FbxLODScheme LODScheme
    [[deprecated("Use field access instead!")]] ::UnLogickFactory::FbxLODScheme*& dyn_LODScheme();
    // Get instance field reference: public System.Int32 logLevel
    [[deprecated("Use field access instead!")]] int& dyn_logLevel();
    // Get instance field reference: public UnLogickFactory.FbxTextureExportScheme textureScheme
    [[deprecated("Use field access instead!")]] ::UnLogickFactory::FbxTextureExportScheme*& dyn_textureScheme();
    // Get instance field reference: public System.Int32 formatId
    [[deprecated("Use field access instead!")]] int& dyn_formatId();
    // Get instance field reference: public System.Boolean embedTextures
    [[deprecated("Use field access instead!")]] bool& dyn_embedTextures();
    // Get instance field reference: public System.Boolean embedShaderProperty
    [[deprecated("Use field access instead!")]] bool& dyn_embedShaderProperty();
    // Get instance field reference: public System.Int32 terrainQuality
    [[deprecated("Use field access instead!")]] int& dyn_terrainQuality();
    // Get instance field reference: public UnLogickFactory.SkinnedMeshOptions skinnedMeshOptions
    [[deprecated("Use field access instead!")]] ::UnLogickFactory::SkinnedMeshOptions& dyn_skinnedMeshOptions();
    // Get instance field reference: public UnLogickFactory.BlendShapeOptions blendShapeOptions
    [[deprecated("Use field access instead!")]] ::UnLogickFactory::BlendShapeOptions& dyn_blendShapeOptions();
    // Get instance field reference: public UnLogickFactory.ObjectExportMask objectExportMask
    [[deprecated("Use field access instead!")]] ::UnLogickFactory::ObjectExportMask& dyn_objectExportMask();
    // Get instance field reference: public UnLogickFactory.FbxNodeCallback OnFbxNodeCreated
    [[deprecated("Use field access instead!")]] ::UnLogickFactory::FbxNodeCallback*& dyn_OnFbxNodeCreated();
    // Get instance field reference: public UnLogickFactory.FbxMeshCallback OnFbxMeshCreated
    [[deprecated("Use field access instead!")]] ::UnLogickFactory::FbxMeshCallback*& dyn_OnFbxMeshCreated();
    // Get instance field reference: public UnLogickFactory.FbxSkinnedMeshCallback OnFbxSkinnedMeshCreated
    [[deprecated("Use field access instead!")]] ::UnLogickFactory::FbxSkinnedMeshCallback*& dyn_OnFbxSkinnedMeshCreated();
    // Get instance field reference: public UnLogickFactory.FbxTerrainCallback OnFbxTerrainCreated
    [[deprecated("Use field access instead!")]] ::UnLogickFactory::FbxTerrainCallback*& dyn_OnFbxTerrainCreated();
    // Get instance field reference: public UnLogickFactory.FbxMaterialCallback OnFbxMaterialCreated
    [[deprecated("Use field access instead!")]] ::UnLogickFactory::FbxMaterialCallback*& dyn_OnFbxMaterialCreated();
    // public System.Boolean get_ExportCloth()
    // Offset: 0x1190730
    bool get_ExportCloth();
    // public System.Boolean get_ExportMeshes()
    // Offset: 0x119073C
    bool get_ExportMeshes();
    // public System.Boolean get_ExportSkinnedMeshes()
    // Offset: 0x1190748
    bool get_ExportSkinnedMeshes();
    // public System.Boolean get_ExportTerrains()
    // Offset: 0x1190754
    bool get_ExportTerrains();
    // public System.Boolean get_ExportLights()
    // Offset: 0x1190760
    bool get_ExportLights();
    // public System.Boolean get_ExportCameras()
    // Offset: 0x119076C
    bool get_ExportCameras();
    // public System.Void .ctor()
    // Offset: 0x118DAB0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FbxExportSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnLogickFactory::FbxExportSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FbxExportSettings*, creationType>()));
    }
  }; // UnLogickFactory.FbxExportSettings
  #pragma pack(pop)
  static check_size<sizeof(FbxExportSettings), 96 + sizeof(::UnLogickFactory::FbxMaterialCallback*)> __UnLogickFactory_FbxExportSettingsSizeCheck;
  static_assert(sizeof(FbxExportSettings) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnLogickFactory::FbxExportSettings::get_ExportCloth
// Il2CppName: get_ExportCloth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnLogickFactory::FbxExportSettings::*)()>(&UnLogickFactory::FbxExportSettings::get_ExportCloth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnLogickFactory::FbxExportSettings*), "get_ExportCloth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnLogickFactory::FbxExportSettings::get_ExportMeshes
// Il2CppName: get_ExportMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnLogickFactory::FbxExportSettings::*)()>(&UnLogickFactory::FbxExportSettings::get_ExportMeshes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnLogickFactory::FbxExportSettings*), "get_ExportMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnLogickFactory::FbxExportSettings::get_ExportSkinnedMeshes
// Il2CppName: get_ExportSkinnedMeshes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnLogickFactory::FbxExportSettings::*)()>(&UnLogickFactory::FbxExportSettings::get_ExportSkinnedMeshes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnLogickFactory::FbxExportSettings*), "get_ExportSkinnedMeshes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnLogickFactory::FbxExportSettings::get_ExportTerrains
// Il2CppName: get_ExportTerrains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnLogickFactory::FbxExportSettings::*)()>(&UnLogickFactory::FbxExportSettings::get_ExportTerrains)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnLogickFactory::FbxExportSettings*), "get_ExportTerrains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnLogickFactory::FbxExportSettings::get_ExportLights
// Il2CppName: get_ExportLights
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnLogickFactory::FbxExportSettings::*)()>(&UnLogickFactory::FbxExportSettings::get_ExportLights)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnLogickFactory::FbxExportSettings*), "get_ExportLights", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnLogickFactory::FbxExportSettings::get_ExportCameras
// Il2CppName: get_ExportCameras
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnLogickFactory::FbxExportSettings::*)()>(&UnLogickFactory::FbxExportSettings::get_ExportCameras)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnLogickFactory::FbxExportSettings*), "get_ExportCameras", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnLogickFactory::FbxExportSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
