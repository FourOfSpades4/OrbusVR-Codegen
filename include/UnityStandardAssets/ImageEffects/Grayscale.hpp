// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityStandardAssets.ImageEffects.ImageEffectBase
#include "UnityStandardAssets/ImageEffects/ImageEffectBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: RenderTexture
  class RenderTexture;
}
// Completed forward declares
// Type namespace: UnityStandardAssets.ImageEffects
namespace UnityStandardAssets::ImageEffects {
  // Forward declaring type: Grayscale
  class Grayscale;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityStandardAssets::ImageEffects::Grayscale);
DEFINE_IL2CPP_ARG_TYPE(::UnityStandardAssets::ImageEffects::Grayscale*, "UnityStandardAssets.ImageEffects", "Grayscale");
// Type namespace: UnityStandardAssets.ImageEffects
namespace UnityStandardAssets::ImageEffects {
  // Size: 0x34
  #pragma pack(push, 1)
  // Autogenerated type: UnityStandardAssets.ImageEffects.Grayscale
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: AC1304
  class Grayscale : public ::UnityStandardAssets::ImageEffects::ImageEffectBase {
    public:
    public:
    // public UnityEngine.Texture textureRamp
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Texture* textureRamp;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture*) == 0x8);
    // [RangeAttribute] Offset: 0xAC2C8C
    // public System.Single rampOffset
    // Size: 0x4
    // Offset: 0x30
    float rampOffset;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: public UnityEngine.Texture textureRamp
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& dyn_textureRamp();
    // Get instance field reference: public System.Single rampOffset
    [[deprecated("Use field access instead!")]] float& dyn_rampOffset();
    // private System.Void OnRenderImage(UnityEngine.RenderTexture source, UnityEngine.RenderTexture destination)
    // Offset: 0x2149A24
    void OnRenderImage(::UnityEngine::RenderTexture* source, ::UnityEngine::RenderTexture* destination);
    // public System.Void .ctor()
    // Offset: 0x2149BF4
    // Implemented from: UnityStandardAssets.ImageEffects.ImageEffectBase
    // Base method: System.Void ImageEffectBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Grayscale* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityStandardAssets::ImageEffects::Grayscale::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Grayscale*, creationType>()));
    }
  }; // UnityStandardAssets.ImageEffects.Grayscale
  #pragma pack(pop)
  static check_size<sizeof(Grayscale), 48 + sizeof(float)> __UnityStandardAssets_ImageEffects_GrayscaleSizeCheck;
  static_assert(sizeof(Grayscale) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityStandardAssets::ImageEffects::Grayscale::OnRenderImage
// Il2CppName: OnRenderImage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityStandardAssets::ImageEffects::Grayscale::*)(::UnityEngine::RenderTexture*, ::UnityEngine::RenderTexture*)>(&UnityStandardAssets::ImageEffects::Grayscale::OnRenderImage)> {
  static const MethodInfo* get() {
    static auto* source = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    static auto* destination = &::il2cpp_utils::GetClassFromName("UnityEngine", "RenderTexture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityStandardAssets::ImageEffects::Grayscale*), "OnRenderImage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{source, destination});
  }
};
// Writing MetadataGetter for method: UnityStandardAssets::ImageEffects::Grayscale::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
