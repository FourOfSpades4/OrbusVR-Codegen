// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeContent
#include "System/Xml/Schema/XmlSchemaSimpleTypeContent.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Xml::Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaSimpleType
  class XmlSchemaSimpleType;
}
// Completed forward declares
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Forward declaring type: XmlSchemaSimpleTypeUnion
  class XmlSchemaSimpleTypeUnion;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Xml::Schema::XmlSchemaSimpleTypeUnion);
DEFINE_IL2CPP_ARG_TYPE(::System::Xml::Schema::XmlSchemaSimpleTypeUnion*, "System.Xml.Schema", "XmlSchemaSimpleTypeUnion");
// Type namespace: System.Xml.Schema
namespace System::Xml::Schema {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Xml.Schema.XmlSchemaSimpleTypeUnion
  // [TokenAttribute] Offset: FFFFFFFF
  class XmlSchemaSimpleTypeUnion : public ::System::Xml::Schema::XmlSchemaSimpleTypeContent {
    public:
    public:
    // private System.Xml.Schema.XmlSchemaSimpleType[] baseMemberTypes
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> baseMemberTypes;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>) == 0x8);
    public:
    // Creating conversion operator: operator ::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>
    constexpr operator ::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>() const noexcept {
      return baseMemberTypes;
    }
    // Get instance field reference: private System.Xml.Schema.XmlSchemaSimpleType[] baseMemberTypes
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>& dyn_baseMemberTypes();
    // public System.Xml.Schema.XmlSchemaSimpleType[] get_BaseMemberTypes()
    // Offset: 0x2003FB4
    ::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> get_BaseMemberTypes();
  }; // System.Xml.Schema.XmlSchemaSimpleTypeUnion
  #pragma pack(pop)
  static check_size<sizeof(XmlSchemaSimpleTypeUnion), 16 + sizeof(::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>)> __System_Xml_Schema_XmlSchemaSimpleTypeUnionSizeCheck;
  static_assert(sizeof(XmlSchemaSimpleTypeUnion) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Xml::Schema::XmlSchemaSimpleTypeUnion::get_BaseMemberTypes
// Il2CppName: get_BaseMemberTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> (System::Xml::Schema::XmlSchemaSimpleTypeUnion::*)()>(&System::Xml::Schema::XmlSchemaSimpleTypeUnion::get_BaseMemberTypes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::Xml::Schema::XmlSchemaSimpleTypeUnion*), "get_BaseMemberTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
