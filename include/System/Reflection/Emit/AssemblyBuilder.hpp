// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Runtime.InteropServices._AssemblyBuilder
#include "System/Runtime/InteropServices/_AssemblyBuilder.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection::Emit
namespace System::Reflection::Emit {
  // Forward declaring type: ModuleBuilder
  class ModuleBuilder;
}
// Completed forward declares
// Type namespace: System.Reflection.Emit
namespace System::Reflection::Emit {
  // Forward declaring type: AssemblyBuilder
  class AssemblyBuilder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Reflection::Emit::AssemblyBuilder);
DEFINE_IL2CPP_ARG_TYPE(::System::Reflection::Emit::AssemblyBuilder*, "System.Reflection.Emit", "AssemblyBuilder");
// Type namespace: System.Reflection.Emit
namespace System::Reflection::Emit {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: System.Reflection.Emit.AssemblyBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  class AssemblyBuilder : public ::System::Reflection::Assembly/*, public ::System::Runtime::InteropServices::_AssemblyBuilder*/ {
    public:
    // Creating interface conversion operator: operator ::System::Runtime::InteropServices::_AssemblyBuilder
    operator ::System::Runtime::InteropServices::_AssemblyBuilder() noexcept {
      return *reinterpret_cast<::System::Runtime::InteropServices::_AssemblyBuilder*>(this);
    }
    // public System.Reflection.Emit.ModuleBuilder DefineDynamicModule(System.String name)
    // Offset: 0x1D6AEBC
    ::System::Reflection::Emit::ModuleBuilder* DefineDynamicModule(::StringW name);
    // public System.Reflection.Emit.ModuleBuilder DefineDynamicModule(System.String name, System.String fileName)
    // Offset: 0x1D6AF24
    ::System::Reflection::Emit::ModuleBuilder* DefineDynamicModule(::StringW name, ::StringW fileName);
    // public System.Void Save(System.String assemblyFileName)
    // Offset: 0x1D6AFAC
    void Save(::StringW assemblyFileName);
  }; // System.Reflection.Emit.AssemblyBuilder
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Reflection::Emit::AssemblyBuilder::DefineDynamicModule
// Il2CppName: DefineDynamicModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::Emit::ModuleBuilder* (System::Reflection::Emit::AssemblyBuilder::*)(::StringW)>(&System::Reflection::Emit::AssemblyBuilder::DefineDynamicModule)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::Emit::AssemblyBuilder*), "DefineDynamicModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: System::Reflection::Emit::AssemblyBuilder::DefineDynamicModule
// Il2CppName: DefineDynamicModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::Emit::ModuleBuilder* (System::Reflection::Emit::AssemblyBuilder::*)(::StringW, ::StringW)>(&System::Reflection::Emit::AssemblyBuilder::DefineDynamicModule)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::Emit::AssemblyBuilder*), "DefineDynamicModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, fileName});
  }
};
// Writing MetadataGetter for method: System::Reflection::Emit::AssemblyBuilder::Save
// Il2CppName: Save
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::Reflection::Emit::AssemblyBuilder::*)(::StringW)>(&System::Reflection::Emit::AssemblyBuilder::Save)> {
  static const MethodInfo* get() {
    static auto* assemblyFileName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::Reflection::Emit::AssemblyBuilder*), "Save", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{assemblyFileName});
  }
};
