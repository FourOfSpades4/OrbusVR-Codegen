// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: ModuleResolveEventHandler
  class ModuleResolveEventHandler;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::Reflection::Assembly::ResolveEventHolder);
DEFINE_IL2CPP_ARG_TYPE(::System::Reflection::Assembly::ResolveEventHolder*, "System.Reflection", "Assembly/ResolveEventHolder");
// Type namespace: System.Reflection
namespace System::Reflection {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: System.Reflection.Assembly/ResolveEventHolder
  // [TokenAttribute] Offset: FFFFFFFF
  class Assembly::ResolveEventHolder : public ::Il2CppObject {
    public:
    public:
    // [CompilerGeneratedAttribute] Offset: 0xA5F698
    // private System.Reflection.ModuleResolveEventHandler ModuleResolve
    // Size: 0x8
    // Offset: 0x10
    ::System::Reflection::ModuleResolveEventHandler* ModuleResolve;
    // Field size check
    static_assert(sizeof(::System::Reflection::ModuleResolveEventHandler*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Reflection::ModuleResolveEventHandler*
    constexpr operator ::System::Reflection::ModuleResolveEventHandler*() const noexcept {
      return ModuleResolve;
    }
    // Get instance field reference: private System.Reflection.ModuleResolveEventHandler ModuleResolve
    [[deprecated("Use field access instead!")]] ::System::Reflection::ModuleResolveEventHandler*& dyn_ModuleResolve();
    // public System.Void .ctor()
    // Offset: 0x19D1A64
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Assembly::ResolveEventHolder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Assembly::ResolveEventHolder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Assembly::ResolveEventHolder*, creationType>()));
    }
  }; // System.Reflection.Assembly/ResolveEventHolder
  #pragma pack(pop)
  static check_size<sizeof(Assembly::ResolveEventHolder), 16 + sizeof(::System::Reflection::ModuleResolveEventHandler*)> __System_Reflection_Assembly_ResolveEventHolderSizeCheck;
  static_assert(sizeof(Assembly::ResolveEventHolder) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::Reflection::Assembly::ResolveEventHolder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
