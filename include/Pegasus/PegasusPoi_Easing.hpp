// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pegasus.PegasusPoi
#include "Pegasus/PegasusPoi.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pegasus::PegasusPoi::Easing);
DEFINE_IL2CPP_ARG_TYPE(::Pegasus::PegasusPoi::Easing*, "Pegasus", "PegasusPoi/Easing");
// Type namespace: Pegasus
namespace Pegasus {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: Pegasus.PegasusPoi/Easing
  // [TokenAttribute] Offset: FFFFFFFF
  class PegasusPoi::Easing : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0xE4C494
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PegasusPoi::Easing* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pegasus::PegasusPoi::Easing::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PegasusPoi::Easing*, creationType>(object, method)));
    }
    // public System.Single Invoke(System.Single time, System.Single duration)
    // Offset: 0xE4D020
    float Invoke(float time, float duration);
    // public System.IAsyncResult BeginInvoke(System.Single time, System.Single duration, System.AsyncCallback callback, System.Object object)
    // Offset: 0xE4DB48
    ::System::IAsyncResult* BeginInvoke(float time, float duration, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Single EndInvoke(System.IAsyncResult result)
    // Offset: 0xE4DBE8
    float EndInvoke(::System::IAsyncResult* result);
  }; // Pegasus.PegasusPoi/Easing
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pegasus::PegasusPoi::Easing::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Pegasus::PegasusPoi::Easing::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pegasus::PegasusPoi::Easing::*)(float, float)>(&Pegasus::PegasusPoi::Easing::Invoke)> {
  static const MethodInfo* get() {
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pegasus::PegasusPoi::Easing*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{time, duration});
  }
};
// Writing MetadataGetter for method: Pegasus::PegasusPoi::Easing::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (Pegasus::PegasusPoi::Easing::*)(float, float, ::System::AsyncCallback*, ::Il2CppObject*)>(&Pegasus::PegasusPoi::Easing::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* duration = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pegasus::PegasusPoi::Easing*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{time, duration, callback, object});
  }
};
// Writing MetadataGetter for method: Pegasus::PegasusPoi::Easing::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Pegasus::PegasusPoi::Easing::*)(::System::IAsyncResult*)>(&Pegasus::PegasusPoi::Easing::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pegasus::PegasusPoi::Easing*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
