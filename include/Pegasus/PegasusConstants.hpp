// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Single
#include "System/Single.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pegasus
namespace Pegasus {
}
// Completed forward declares
// Type namespace: Pegasus
namespace Pegasus {
  // Forward declaring type: PegasusConstants
  class PegasusConstants;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pegasus::PegasusConstants);
DEFINE_IL2CPP_ARG_TYPE(::Pegasus::PegasusConstants*, "Pegasus", "PegasusConstants");
// Type namespace: Pegasus
namespace Pegasus {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Pegasus.PegasusConstants
  // [TokenAttribute] Offset: FFFFFFFF
  class PegasusConstants : public ::Il2CppObject {
    public:
    // Nested type: ::Pegasus::PegasusConstants::FlythroughType
    struct FlythroughType;
    // Nested type: ::Pegasus::PegasusConstants::FlythroughEndAction
    struct FlythroughEndAction;
    // Nested type: ::Pegasus::PegasusConstants::FlythroughState
    struct FlythroughState;
    // Nested type: ::Pegasus::PegasusConstants::HeightCheckType
    struct HeightCheckType;
    // Nested type: ::Pegasus::PegasusConstants::PoiHeightCheckType
    struct PoiHeightCheckType;
    // Nested type: ::Pegasus::PegasusConstants::PoiType
    struct PoiType;
    // Nested type: ::Pegasus::PegasusConstants::LookatType
    struct LookatType;
    // Nested type: ::Pegasus::PegasusConstants::SpeedType
    struct SpeedType;
    // Nested type: ::Pegasus::PegasusConstants::EasingType
    struct EasingType;
    // Nested type: ::Pegasus::PegasusConstants::TargetFrameRate
    struct TargetFrameRate;
    // Nested type: ::Pegasus::PegasusConstants::PegasusAnimationState
    struct PegasusAnimationState;
    // Nested type: ::Pegasus::PegasusConstants::PoiPegasusTriggerAction
    struct PoiPegasusTriggerAction;
    // Nested type: ::Pegasus::PegasusConstants::PoiHeliosTriggerAction
    struct PoiHeliosTriggerAction;
    // Nested type: ::Pegasus::PegasusConstants::PoiRotateTowardsTriggerAction
    struct PoiRotateTowardsTriggerAction;
    // Nested type: ::Pegasus::PegasusConstants::PoiAnimationTriggerAction
    struct PoiAnimationTriggerAction;
    // Get static field: static public System.String MajorVersion
    static ::StringW _get_MajorVersion();
    // Set static field: static public System.String MajorVersion
    static void _set_MajorVersion(::StringW value);
    // Get static field: static public System.String MinorVersion
    static ::StringW _get_MinorVersion();
    // Set static field: static public System.String MinorVersion
    static void _set_MinorVersion(::StringW value);
    // static field const value: static public System.Single FlybyOffsetDefaultHeight
    static constexpr const float FlybyOffsetDefaultHeight = 1.8;
    // Get static field: static public System.Single FlybyOffsetDefaultHeight
    static float _get_FlybyOffsetDefaultHeight();
    // Set static field: static public System.Single FlybyOffsetDefaultHeight
    static void _set_FlybyOffsetDefaultHeight(float value);
    // static field const value: static public System.Single FlybyOffsetLow
    static constexpr const float FlybyOffsetLow = 5;
    // Get static field: static public System.Single FlybyOffsetLow
    static float _get_FlybyOffsetLow();
    // Set static field: static public System.Single FlybyOffsetLow
    static void _set_FlybyOffsetLow(float value);
    // static field const value: static public System.Single FlybyOffsetHigh
    static constexpr const float FlybyOffsetHigh = 40;
    // Get static field: static public System.Single FlybyOffsetHigh
    static float _get_FlybyOffsetHigh();
    // Set static field: static public System.Single FlybyOffsetHigh
    static void _set_FlybyOffsetHigh(float value);
    // static field const value: static public System.Single SpeedReallySlow
    static constexpr const float SpeedReallySlow = 0.01;
    // Get static field: static public System.Single SpeedReallySlow
    static float _get_SpeedReallySlow();
    // Set static field: static public System.Single SpeedReallySlow
    static void _set_SpeedReallySlow(float value);
    // static field const value: static public System.Single SpeedSlow
    static constexpr const float SpeedSlow = 1.4;
    // Get static field: static public System.Single SpeedSlow
    static float _get_SpeedSlow();
    // Set static field: static public System.Single SpeedSlow
    static void _set_SpeedSlow(float value);
    // static field const value: static public System.Single SpeedMedium
    static constexpr const float SpeedMedium = 8;
    // Get static field: static public System.Single SpeedMedium
    static float _get_SpeedMedium();
    // Set static field: static public System.Single SpeedMedium
    static void _set_SpeedMedium(float value);
    // static field const value: static public System.Single SpeedFast
    static constexpr const float SpeedFast = 25;
    // Get static field: static public System.Single SpeedFast
    static float _get_SpeedFast();
    // Set static field: static public System.Single SpeedFast
    static void _set_SpeedFast(float value);
    // static field const value: static public System.Single SpeedReallyFast
    static constexpr const float SpeedReallyFast = 70;
    // Get static field: static public System.Single SpeedReallyFast
    static float _get_SpeedReallyFast();
    // Set static field: static public System.Single SpeedReallyFast
    static void _set_SpeedReallyFast(float value);
    // static field const value: static public System.Single SpeedStratospheric
    static constexpr const float SpeedStratospheric = 250;
    // Get static field: static public System.Single SpeedStratospheric
    static float _get_SpeedStratospheric();
    // Set static field: static public System.Single SpeedStratospheric
    static void _set_SpeedStratospheric(float value);
    // static private System.Void .cctor()
    // Offset: 0xE42FA0
    static void _cctor();
  }; // Pegasus.PegasusConstants
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pegasus::PegasusConstants::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Pegasus::PegasusConstants::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pegasus::PegasusConstants*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
