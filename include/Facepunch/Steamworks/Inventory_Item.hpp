// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Facepunch.Steamworks.Inventory
#include "Facepunch/Steamworks/Inventory.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Facepunch::Steamworks::Inventory::Item);
DEFINE_IL2CPP_ARG_TYPE(::Facepunch::Steamworks::Inventory::Item*, "Facepunch.Steamworks", "Inventory/Item");
// Type namespace: Facepunch.Steamworks
namespace Facepunch::Steamworks {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: Facepunch.Steamworks.Inventory/Item
  // [TokenAttribute] Offset: FFFFFFFF
  class Inventory::Item : public ::Il2CppObject/*, public ::System::IEquatable_1<::Facepunch::Steamworks::Inventory::Item*>*/ {
    public:
    public:
    // public System.UInt64 Id
    // Size: 0x8
    // Offset: 0x10
    uint64_t Id;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IEquatable_1<::Facepunch::Steamworks::Inventory::Item*>
    operator ::System::IEquatable_1<::Facepunch::Steamworks::Inventory::Item*>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::Facepunch::Steamworks::Inventory::Item*>*>(this);
    }
    // Creating conversion operator: operator uint64_t
    constexpr operator uint64_t() const noexcept {
      return Id;
    }
    // Get instance field reference: public System.UInt64 Id
    [[deprecated("Use field access instead!")]] uint64_t& dyn_Id();
    // public System.Boolean Equals(Facepunch.Steamworks.Inventory/Item other)
    // Offset: 0x2844A3C
    bool Equals(::Facepunch::Steamworks::Inventory::Item* other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x2844A6C
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x2844BC4
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
  }; // Facepunch.Steamworks.Inventory/Item
  #pragma pack(pop)
  static check_size<sizeof(Inventory::Item), 16 + sizeof(uint64_t)> __Facepunch_Steamworks_Inventory_ItemSizeCheck;
  static_assert(sizeof(Inventory::Item) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Facepunch::Steamworks::Inventory::Item::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Facepunch::Steamworks::Inventory::Item::*)(::Facepunch::Steamworks::Inventory::Item*)>(&Facepunch::Steamworks::Inventory::Item::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("Facepunch.Steamworks", "Inventory/Item")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facepunch::Steamworks::Inventory::Item*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: Facepunch::Steamworks::Inventory::Item::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Facepunch::Steamworks::Inventory::Item::*)(::Il2CppObject*)>(&Facepunch::Steamworks::Inventory::Item::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facepunch::Steamworks::Inventory::Item*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Facepunch::Steamworks::Inventory::Item::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Facepunch::Steamworks::Inventory::Item::*)()>(&Facepunch::Steamworks::Inventory::Item::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Facepunch::Steamworks::Inventory::Item*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
