// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Facepunch.Steamworks.Friends
#include "Facepunch/Steamworks/Friends.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Facepunch::Steamworks::Friends::AvatarSize, "Facepunch.Steamworks", "Friends/AvatarSize");
// Type namespace: Facepunch.Steamworks
namespace Facepunch::Steamworks {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Facepunch.Steamworks.Friends/AvatarSize
  // [TokenAttribute] Offset: FFFFFFFF
  struct Friends::AvatarSize/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: AvatarSize
    constexpr AvatarSize(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Facepunch.Steamworks.Friends/AvatarSize Small
    static constexpr const int Small = 0;
    // Get static field: static public Facepunch.Steamworks.Friends/AvatarSize Small
    static ::Facepunch::Steamworks::Friends::AvatarSize _get_Small();
    // Set static field: static public Facepunch.Steamworks.Friends/AvatarSize Small
    static void _set_Small(::Facepunch::Steamworks::Friends::AvatarSize value);
    // static field const value: static public Facepunch.Steamworks.Friends/AvatarSize Medium
    static constexpr const int Medium = 1;
    // Get static field: static public Facepunch.Steamworks.Friends/AvatarSize Medium
    static ::Facepunch::Steamworks::Friends::AvatarSize _get_Medium();
    // Set static field: static public Facepunch.Steamworks.Friends/AvatarSize Medium
    static void _set_Medium(::Facepunch::Steamworks::Friends::AvatarSize value);
    // static field const value: static public Facepunch.Steamworks.Friends/AvatarSize Large
    static constexpr const int Large = 2;
    // Get static field: static public Facepunch.Steamworks.Friends/AvatarSize Large
    static ::Facepunch::Steamworks::Friends::AvatarSize _get_Large();
    // Set static field: static public Facepunch.Steamworks.Friends/AvatarSize Large
    static void _set_Large(::Facepunch::Steamworks::Friends::AvatarSize value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Facepunch.Steamworks.Friends/AvatarSize
  #pragma pack(pop)
  static check_size<sizeof(Friends::AvatarSize), 0 + sizeof(int)> __Facepunch_Steamworks_Friends_AvatarSizeSizeCheck;
  static_assert(sizeof(Friends::AvatarSize) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
