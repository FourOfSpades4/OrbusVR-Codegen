// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Facepunch.Steamworks.Friends
#include "Facepunch/Steamworks/Friends.hpp"
// Including type: Facepunch.Steamworks.Friends/AvatarSize
#include "Facepunch/Steamworks/Friends_AvatarSize.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: Facepunch::Steamworks
namespace Facepunch::Steamworks {
  // Forward declaring type: Image
  class Image;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Facepunch::Steamworks::Friends::PersonaCallback);
DEFINE_IL2CPP_ARG_TYPE(::Facepunch::Steamworks::Friends::PersonaCallback*, "Facepunch.Steamworks", "Friends/PersonaCallback");
// Type namespace: Facepunch.Steamworks
namespace Facepunch::Steamworks {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Facepunch.Steamworks.Friends/PersonaCallback
  // [TokenAttribute] Offset: FFFFFFFF
  class Friends::PersonaCallback : public ::Il2CppObject {
    public:
    public:
    // public System.UInt64 SteamId
    // Size: 0x8
    // Offset: 0x10
    uint64_t SteamId;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    // public Facepunch.Steamworks.Friends/AvatarSize Size
    // Size: 0x4
    // Offset: 0x18
    ::Facepunch::Steamworks::Friends::AvatarSize Size;
    // Field size check
    static_assert(sizeof(::Facepunch::Steamworks::Friends::AvatarSize) == 0x4);
    // Padding between fields: Size and: Callback
    char __padding1[0x4] = {};
    // public System.Action`1<Facepunch.Steamworks.Image> Callback
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::Facepunch::Steamworks::Image*>* Callback;
    // Field size check
    static_assert(sizeof(::System::Action_1<::Facepunch::Steamworks::Image*>*) == 0x8);
    // public System.DateTime Time
    // Size: 0x8
    // Offset: 0x28
    ::System::DateTime Time;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    public:
    // Get instance field reference: public System.UInt64 SteamId
    [[deprecated("Use field access instead!")]] uint64_t& dyn_SteamId();
    // Get instance field reference: public Facepunch.Steamworks.Friends/AvatarSize Size
    [[deprecated("Use field access instead!")]] ::Facepunch::Steamworks::Friends::AvatarSize& dyn_Size();
    // Get instance field reference: public System.Action`1<Facepunch.Steamworks.Image> Callback
    [[deprecated("Use field access instead!")]] ::System::Action_1<::Facepunch::Steamworks::Image*>*& dyn_Callback();
    // Get instance field reference: public System.DateTime Time
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_Time();
  }; // Facepunch.Steamworks.Friends/PersonaCallback
  #pragma pack(pop)
  static check_size<sizeof(Friends::PersonaCallback), 40 + sizeof(::System::DateTime)> __Facepunch_Steamworks_Friends_PersonaCallbackSizeCheck;
  static_assert(sizeof(Friends::PersonaCallback) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
