// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.WebSocket
#include "WebSocketSharp/WebSocket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5*, "WebSocketSharp", "WebSocket/<validateSecWebSocketExtensionsServerHeader>c__AnonStorey5");
// Type namespace: WebSocketSharp
namespace WebSocketSharp {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.WebSocket/<validateSecWebSocketExtensionsServerHeader>c__AnonStorey5
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AC0868
  class WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5 : public ::Il2CppObject {
    public:
    public:
    // System.String method
    // Size: 0x8
    // Offset: 0x10
    ::StringW method;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return method;
    }
    // Get instance field reference: System.String method
    [[deprecated("Use field access instead!")]] ::StringW& dyn_method();
    // public System.Void .ctor()
    // Offset: 0x1F28304
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5*, creationType>()));
    }
    // System.Boolean <>m__0(System.String t)
    // Offset: 0x1F28EFC
    bool $$m__0(::StringW t);
  }; // WebSocketSharp.WebSocket/<validateSecWebSocketExtensionsServerHeader>c__AnonStorey5
  #pragma pack(pop)
  static check_size<sizeof(WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5), 16 + sizeof(::StringW)> __WebSocketSharp_WebSocket_$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5SizeCheck;
  static_assert(sizeof(WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5::$$m__0
// Il2CppName: <>m__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5::*)(::StringW)>(&WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5::$$m__0)> {
  static const MethodInfo* get() {
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::WebSocket::$validateSecWebSocketExtensionsServerHeader$c__AnonStorey5*), "<>m__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t});
  }
};
