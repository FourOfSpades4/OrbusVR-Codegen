// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.HttpBase
#include "WebSocketSharp/HttpBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::WebSocketSharp::HttpBase::$Read$c__AnonStorey1_1, "WebSocketSharp", "HttpBase/<Read>c__AnonStorey1`1");
// Type namespace: WebSocketSharp
namespace WebSocketSharp {
  // WARNING Size may be invalid!
  // Autogenerated type: WebSocketSharp.HttpBase/<Read>c__AnonStorey1`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AC09D0
  template<typename T>
  class HttpBase::$Read$c__AnonStorey1_1 : public ::Il2CppObject {
    public:
    public:
    // System.Boolean timeout
    // Size: 0x1
    // Offset: 0x0
    bool timeout;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // System.IO.Stream stream
    // Size: 0x8
    // Offset: 0x0
    ::System::IO::Stream* stream;
    // Field size check
    static_assert(sizeof(::System::IO::Stream*) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: System.Boolean timeout
    [[deprecated("Use field access instead!")]] bool& dyn_timeout() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::$Read$c__AnonStorey1_1::dyn_timeout");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeout"))->offset;
      return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: System.IO.Stream stream
    [[deprecated("Use field access instead!")]] ::System::IO::Stream*& dyn_stream() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::$Read$c__AnonStorey1_1::dyn_stream");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
      return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HttpBase::$Read$c__AnonStorey1_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::$Read$c__AnonStorey1_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HttpBase::$Read$c__AnonStorey1_1<T>*, creationType>()));
    }
    // System.Void <>m__0(System.Object state)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $$m__0(::Il2CppObject* state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::$Read$c__AnonStorey1_1::<>m__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
    }
  }; // WebSocketSharp.HttpBase/<Read>c__AnonStorey1`1
  // Could not write size check! Type: WebSocketSharp.HttpBase/<Read>c__AnonStorey1`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
