// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.Ext
#include "WebSocketSharp/Ext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::WebSocketSharp::Ext::$ToString$c__AnonStorey7_1, "WebSocketSharp", "Ext/<ToString>c__AnonStorey7`1");
// Type namespace: WebSocketSharp
namespace WebSocketSharp {
  // WARNING Size may be invalid!
  // Autogenerated type: WebSocketSharp.Ext/<ToString>c__AnonStorey7`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AC0838
  template<typename T>
  class Ext::$ToString$c__AnonStorey7_1 : public ::Il2CppObject {
    public:
    public:
    // System.Text.StringBuilder buff
    // Size: 0x8
    // Offset: 0x0
    ::System::Text::StringBuilder* buff;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    // T[] array
    // Size: 0x8
    // Offset: 0x0
    ::ArrayW<T> array;
    // Field size check
    static_assert(sizeof(::ArrayW<T>) == 0x8);
    // System.String separator
    // Size: 0x8
    // Offset: 0x0
    ::StringW separator;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Autogenerated instance field getter
    // Get instance field: System.Text.StringBuilder buff
    [[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& dyn_buff() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ToString$c__AnonStorey7_1::dyn_buff");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buff"))->offset;
      return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: T[] array
    [[deprecated("Use field access instead!")]] ::ArrayW<T>& dyn_array() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ToString$c__AnonStorey7_1::dyn_array");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "array"))->offset;
      return *reinterpret_cast<::ArrayW<T>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: System.String separator
    [[deprecated("Use field access instead!")]] ::StringW& dyn_separator() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ToString$c__AnonStorey7_1::dyn_separator");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "separator"))->offset;
      return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Ext::$ToString$c__AnonStorey7_1<T>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ToString$c__AnonStorey7_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Ext::$ToString$c__AnonStorey7_1<T>*, creationType>()));
    }
    // System.Void <>m__0(System.Int32 i)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void $$m__0(int i) {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Ext::$ToString$c__AnonStorey7_1::<>m__0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
    }
  }; // WebSocketSharp.Ext/<ToString>c__AnonStorey7`1
  // Could not write size check! Type: WebSocketSharp.Ext/<ToString>c__AnonStorey7`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
