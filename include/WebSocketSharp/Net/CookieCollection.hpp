// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IEnumerable`1<T>
  template<typename T>
  class IEnumerable_1;
}
// Forward declaring namespace: WebSocketSharp::Net
namespace WebSocketSharp::Net {
  // Forward declaring type: Cookie
  class Cookie;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Comparison`1<T>
  template<typename T>
  class Comparison_1;
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: WebSocketSharp.Net
namespace WebSocketSharp::Net {
  // Forward declaring type: CookieCollection
  class CookieCollection;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::Net::CookieCollection);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::Net::CookieCollection*, "WebSocketSharp.Net", "CookieCollection");
// Type namespace: WebSocketSharp.Net
namespace WebSocketSharp::Net {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.Net.CookieCollection
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: AC0888
  class CookieCollection : public ::Il2CppObject/*, public ::System::Collections::ICollection*/ {
    public:
    public:
    // private System.Collections.Generic.List`1<WebSocketSharp.Net.Cookie> _list
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::WebSocketSharp::Net::Cookie*>* list;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::WebSocketSharp::Net::Cookie*>*) == 0x8);
    // private System.Object _sync
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* sync;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::ICollection
    operator ::System::Collections::ICollection() noexcept {
      return *reinterpret_cast<::System::Collections::ICollection*>(this);
    }
    // [CompilerGeneratedAttribute] Offset: 0xAC0A3C
    // Get static field: static private System.Comparison`1<WebSocketSharp.Net.Cookie> <>f__mg$cache0
    static ::System::Comparison_1<::WebSocketSharp::Net::Cookie*>* _get_$$f__mg$cache0();
    // Set static field: static private System.Comparison`1<WebSocketSharp.Net.Cookie> <>f__mg$cache0
    static void _set_$$f__mg$cache0(::System::Comparison_1<::WebSocketSharp::Net::Cookie*>* value);
    // [CompilerGeneratedAttribute] Offset: 0xAC0A4C
    // Get static field: static private System.Comparison`1<WebSocketSharp.Net.Cookie> <>f__mg$cache1
    static ::System::Comparison_1<::WebSocketSharp::Net::Cookie*>* _get_$$f__mg$cache1();
    // Set static field: static private System.Comparison`1<WebSocketSharp.Net.Cookie> <>f__mg$cache1
    static void _set_$$f__mg$cache1(::System::Comparison_1<::WebSocketSharp::Net::Cookie*>* value);
    // Get instance field reference: private System.Collections.Generic.List`1<WebSocketSharp.Net.Cookie> _list
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::WebSocketSharp::Net::Cookie*>*& dyn__list();
    // Get instance field reference: private System.Object _sync
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn__sync();
    // public System.Void .ctor()
    // Offset: 0x1F14EC4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CookieCollection* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::CookieCollection::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CookieCollection*, creationType>()));
    }
    // System.Collections.Generic.IEnumerable`1<WebSocketSharp.Net.Cookie> get_Sorted()
    // Offset: 0x1F17444
    ::System::Collections::Generic::IEnumerable_1<::WebSocketSharp::Net::Cookie*>* get_Sorted();
    // public System.Int32 get_Count()
    // Offset: 0x1F173E4
    int get_Count();
    // public System.Boolean get_IsSynchronized()
    // Offset: 0x1F1CC8C
    bool get_IsSynchronized();
    // public System.Object get_SyncRoot()
    // Offset: 0x1F1CC94
    ::Il2CppObject* get_SyncRoot();
    // static private System.Int32 compareCookieWithinSorted(WebSocketSharp.Net.Cookie x, WebSocketSharp.Net.Cookie y)
    // Offset: 0x1F1CD5C
    static int compareCookieWithinSorted(::WebSocketSharp::Net::Cookie* x, ::WebSocketSharp::Net::Cookie* y);
    // static private WebSocketSharp.Net.CookieCollection parseRequest(System.String value)
    // Offset: 0x1F1CE10
    static ::WebSocketSharp::Net::CookieCollection* parseRequest(::StringW value);
    // static private WebSocketSharp.Net.CookieCollection parseResponse(System.String value)
    // Offset: 0x1F1D53C
    static ::WebSocketSharp::Net::CookieCollection* parseResponse(::StringW value);
    // private System.Int32 searchCookie(WebSocketSharp.Net.Cookie cookie)
    // Offset: 0x1F1DF4C
    int searchCookie(::WebSocketSharp::Net::Cookie* cookie);
    // static private System.String[] splitCookieHeaderValue(System.String value)
    // Offset: 0x1F1D328
    static ::ArrayW<::StringW> splitCookieHeaderValue(::StringW value);
    // static WebSocketSharp.Net.CookieCollection Parse(System.String value, System.Boolean response)
    // Offset: 0x1F14EB8
    static ::WebSocketSharp::Net::CookieCollection* Parse(::StringW value, bool response);
    // System.Void SetOrRemove(WebSocketSharp.Net.Cookie cookie)
    // Offset: 0x1F1E0F0
    void SetOrRemove(::WebSocketSharp::Net::Cookie* cookie);
    // System.Void SetOrRemove(WebSocketSharp.Net.CookieCollection cookies)
    // Offset: 0x1F1E208
    void SetOrRemove(::WebSocketSharp::Net::CookieCollection* cookies);
    // public System.Void Add(WebSocketSharp.Net.Cookie cookie)
    // Offset: 0x1F1D444
    void Add(::WebSocketSharp::Net::Cookie* cookie);
    // public System.Void CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x1F1E530
    void CopyTo(::System::Array* array, int index);
    // public System.Collections.IEnumerator GetEnumerator()
    // Offset: 0x1F1E49C
    ::System::Collections::IEnumerator* GetEnumerator();
  }; // WebSocketSharp.Net.CookieCollection
  #pragma pack(pop)
  static check_size<sizeof(CookieCollection), 24 + sizeof(::Il2CppObject*)> __WebSocketSharp_Net_CookieCollectionSizeCheck;
  static_assert(sizeof(CookieCollection) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::get_Sorted
// Il2CppName: get_Sorted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerable_1<::WebSocketSharp::Net::Cookie*>* (WebSocketSharp::Net::CookieCollection::*)()>(&WebSocketSharp::Net::CookieCollection::get_Sorted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "get_Sorted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (WebSocketSharp::Net::CookieCollection::*)()>(&WebSocketSharp::Net::CookieCollection::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::get_IsSynchronized
// Il2CppName: get_IsSynchronized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (WebSocketSharp::Net::CookieCollection::*)()>(&WebSocketSharp::Net::CookieCollection::get_IsSynchronized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "get_IsSynchronized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::get_SyncRoot
// Il2CppName: get_SyncRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (WebSocketSharp::Net::CookieCollection::*)()>(&WebSocketSharp::Net::CookieCollection::get_SyncRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "get_SyncRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::compareCookieWithinSorted
// Il2CppName: compareCookieWithinSorted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::WebSocketSharp::Net::Cookie*, ::WebSocketSharp::Net::Cookie*)>(&WebSocketSharp::Net::CookieCollection::compareCookieWithinSorted)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("WebSocketSharp.Net", "Cookie")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("WebSocketSharp.Net", "Cookie")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "compareCookieWithinSorted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::parseRequest
// Il2CppName: parseRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::WebSocketSharp::Net::CookieCollection* (*)(::StringW)>(&WebSocketSharp::Net::CookieCollection::parseRequest)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "parseRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::parseResponse
// Il2CppName: parseResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::WebSocketSharp::Net::CookieCollection* (*)(::StringW)>(&WebSocketSharp::Net::CookieCollection::parseResponse)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "parseResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::searchCookie
// Il2CppName: searchCookie
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (WebSocketSharp::Net::CookieCollection::*)(::WebSocketSharp::Net::Cookie*)>(&WebSocketSharp::Net::CookieCollection::searchCookie)> {
  static const MethodInfo* get() {
    static auto* cookie = &::il2cpp_utils::GetClassFromName("WebSocketSharp.Net", "Cookie")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "searchCookie", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cookie});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::splitCookieHeaderValue
// Il2CppName: splitCookieHeaderValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)(::StringW)>(&WebSocketSharp::Net::CookieCollection::splitCookieHeaderValue)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "splitCookieHeaderValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::WebSocketSharp::Net::CookieCollection* (*)(::StringW, bool)>(&WebSocketSharp::Net::CookieCollection::Parse)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* response = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, response});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::SetOrRemove
// Il2CppName: SetOrRemove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebSocketSharp::Net::CookieCollection::*)(::WebSocketSharp::Net::Cookie*)>(&WebSocketSharp::Net::CookieCollection::SetOrRemove)> {
  static const MethodInfo* get() {
    static auto* cookie = &::il2cpp_utils::GetClassFromName("WebSocketSharp.Net", "Cookie")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "SetOrRemove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cookie});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::SetOrRemove
// Il2CppName: SetOrRemove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebSocketSharp::Net::CookieCollection::*)(::WebSocketSharp::Net::CookieCollection*)>(&WebSocketSharp::Net::CookieCollection::SetOrRemove)> {
  static const MethodInfo* get() {
    static auto* cookies = &::il2cpp_utils::GetClassFromName("WebSocketSharp.Net", "CookieCollection")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "SetOrRemove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cookies});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebSocketSharp::Net::CookieCollection::*)(::WebSocketSharp::Net::Cookie*)>(&WebSocketSharp::Net::CookieCollection::Add)> {
  static const MethodInfo* get() {
    static auto* cookie = &::il2cpp_utils::GetClassFromName("WebSocketSharp.Net", "Cookie")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cookie});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebSocketSharp::Net::CookieCollection::*)(::System::Array*, int)>(&WebSocketSharp::Net::CookieCollection::CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, index});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::CookieCollection::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (WebSocketSharp::Net::CookieCollection::*)()>(&WebSocketSharp::Net::CookieCollection::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::CookieCollection*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
