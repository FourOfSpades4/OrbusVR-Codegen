// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.Net.WebHeaderCollection
#include "WebSocketSharp/Net/WebHeaderCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Runtime::Serialization
namespace System::Runtime::Serialization {
  // Forward declaring type: SerializationInfo
  class SerializationInfo;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1*, "WebSocketSharp.Net", "WebHeaderCollection/<GetObjectData>c__AnonStorey1");
// Type namespace: WebSocketSharp.Net
namespace WebSocketSharp::Net {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.Net.WebHeaderCollection/<GetObjectData>c__AnonStorey1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AC0910
  class WebHeaderCollection::$GetObjectData$c__AnonStorey1 : public ::Il2CppObject {
    public:
    public:
    // System.Runtime.Serialization.SerializationInfo serializationInfo
    // Size: 0x8
    // Offset: 0x10
    ::System::Runtime::Serialization::SerializationInfo* serializationInfo;
    // Field size check
    static_assert(sizeof(::System::Runtime::Serialization::SerializationInfo*) == 0x8);
    // System.Int32 cnt
    // Size: 0x4
    // Offset: 0x18
    int cnt;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: cnt and: $this
    char __padding1[0x4] = {};
    // WebSocketSharp.Net.WebHeaderCollection $this
    // Size: 0x8
    // Offset: 0x20
    ::WebSocketSharp::Net::WebHeaderCollection* $this;
    // Field size check
    static_assert(sizeof(::WebSocketSharp::Net::WebHeaderCollection*) == 0x8);
    public:
    // Get instance field reference: System.Runtime.Serialization.SerializationInfo serializationInfo
    [[deprecated("Use field access instead!")]] ::System::Runtime::Serialization::SerializationInfo*& dyn_serializationInfo();
    // Get instance field reference: System.Int32 cnt
    [[deprecated("Use field access instead!")]] int& dyn_cnt();
    // Get instance field reference: WebSocketSharp.Net.WebHeaderCollection $this
    [[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::WebHeaderCollection*& dyn_$this();
    // public System.Void .ctor()
    // Offset: 0x1F219B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebHeaderCollection::$GetObjectData$c__AnonStorey1* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebHeaderCollection::$GetObjectData$c__AnonStorey1*, creationType>()));
    }
    // System.Void <>m__0(System.Int32 i)
    // Offset: 0x1F21CB0
    void $$m__0(int i);
  }; // WebSocketSharp.Net.WebHeaderCollection/<GetObjectData>c__AnonStorey1
  #pragma pack(pop)
  static check_size<sizeof(WebHeaderCollection::$GetObjectData$c__AnonStorey1), 32 + sizeof(::WebSocketSharp::Net::WebHeaderCollection*)> __WebSocketSharp_Net_WebHeaderCollection_$GetObjectData$c__AnonStorey1SizeCheck;
  static_assert(sizeof(WebHeaderCollection::$GetObjectData$c__AnonStorey1) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::$$m__0
// Il2CppName: <>m__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::*)(int)>(&WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1::$$m__0)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::WebHeaderCollection::$GetObjectData$c__AnonStorey1*), "<>m__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
