// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.Net.AuthenticationSchemes
#include "WebSocketSharp/Net/AuthenticationSchemes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Specialized
namespace System::Collections::Specialized {
  // Forward declaring type: NameValueCollection
  class NameValueCollection;
}
// Completed forward declares
// Type namespace: WebSocketSharp.Net
namespace WebSocketSharp::Net {
  // Forward declaring type: AuthenticationBase
  class AuthenticationBase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::Net::AuthenticationBase);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::Net::AuthenticationBase*, "WebSocketSharp.Net", "AuthenticationBase");
// Type namespace: WebSocketSharp.Net
namespace WebSocketSharp::Net {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.Net.AuthenticationBase
  // [TokenAttribute] Offset: FFFFFFFF
  class AuthenticationBase : public ::Il2CppObject {
    public:
    public:
    // private WebSocketSharp.Net.AuthenticationSchemes _scheme
    // Size: 0x4
    // Offset: 0x10
    ::WebSocketSharp::Net::AuthenticationSchemes scheme;
    // Field size check
    static_assert(sizeof(::WebSocketSharp::Net::AuthenticationSchemes) == 0x4);
    // Padding between fields: scheme and: Parameters
    char __padding0[0x4] = {};
    // System.Collections.Specialized.NameValueCollection Parameters
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Specialized::NameValueCollection* Parameters;
    // Field size check
    static_assert(sizeof(::System::Collections::Specialized::NameValueCollection*) == 0x8);
    public:
    // Get instance field reference: private WebSocketSharp.Net.AuthenticationSchemes _scheme
    [[deprecated("Use field access instead!")]] ::WebSocketSharp::Net::AuthenticationSchemes& dyn__scheme();
    // Get instance field reference: System.Collections.Specialized.NameValueCollection Parameters
    [[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NameValueCollection*& dyn_Parameters();
    // protected System.Void .ctor(WebSocketSharp.Net.AuthenticationSchemes scheme, System.Collections.Specialized.NameValueCollection parameters)
    // Offset: 0x1F1947C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuthenticationBase* New_ctor(::WebSocketSharp::Net::AuthenticationSchemes scheme, ::System::Collections::Specialized::NameValueCollection* parameters) {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuthenticationBase*, creationType>(scheme, parameters)));
    }
    // public WebSocketSharp.Net.AuthenticationSchemes get_Scheme()
    // Offset: 0x1F194B8
    ::WebSocketSharp::Net::AuthenticationSchemes get_Scheme();
    // static System.String CreateNonceValue()
    // Offset: 0x1F194C0
    static ::StringW CreateNonceValue();
    // static System.Collections.Specialized.NameValueCollection ParseParameters(System.String value)
    // Offset: 0x1F19628
    static ::System::Collections::Specialized::NameValueCollection* ParseParameters(::StringW value);
    // System.String ToBasicString()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW ToBasicString();
    // System.String ToDigestString()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW ToDigestString();
    // public override System.String ToString()
    // Offset: 0x1F19B50
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // WebSocketSharp.Net.AuthenticationBase
  #pragma pack(pop)
  static check_size<sizeof(AuthenticationBase), 24 + sizeof(::System::Collections::Specialized::NameValueCollection*)> __WebSocketSharp_Net_AuthenticationBaseSizeCheck;
  static_assert(sizeof(AuthenticationBase) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::Net::AuthenticationBase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: WebSocketSharp::Net::AuthenticationBase::get_Scheme
// Il2CppName: get_Scheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::WebSocketSharp::Net::AuthenticationSchemes (WebSocketSharp::Net::AuthenticationBase::*)()>(&WebSocketSharp::Net::AuthenticationBase::get_Scheme)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::AuthenticationBase*), "get_Scheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::AuthenticationBase::CreateNonceValue
// Il2CppName: CreateNonceValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&WebSocketSharp::Net::AuthenticationBase::CreateNonceValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::AuthenticationBase*), "CreateNonceValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::AuthenticationBase::ParseParameters
// Il2CppName: ParseParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Specialized::NameValueCollection* (*)(::StringW)>(&WebSocketSharp::Net::AuthenticationBase::ParseParameters)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::AuthenticationBase*), "ParseParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::AuthenticationBase::ToBasicString
// Il2CppName: ToBasicString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (WebSocketSharp::Net::AuthenticationBase::*)()>(&WebSocketSharp::Net::AuthenticationBase::ToBasicString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::AuthenticationBase*), "ToBasicString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::AuthenticationBase::ToDigestString
// Il2CppName: ToDigestString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (WebSocketSharp::Net::AuthenticationBase::*)()>(&WebSocketSharp::Net::AuthenticationBase::ToDigestString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::AuthenticationBase*), "ToDigestString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::AuthenticationBase::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (WebSocketSharp::Net::AuthenticationBase::*)()>(&WebSocketSharp::Net::AuthenticationBase::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::AuthenticationBase*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
