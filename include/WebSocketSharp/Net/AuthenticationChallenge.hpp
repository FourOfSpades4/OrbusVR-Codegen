// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.Net.AuthenticationBase
#include "WebSocketSharp/Net/AuthenticationBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Specialized
namespace System::Collections::Specialized {
  // Forward declaring type: NameValueCollection
  class NameValueCollection;
}
// Completed forward declares
// Type namespace: WebSocketSharp.Net
namespace WebSocketSharp::Net {
  // Forward declaring type: AuthenticationChallenge
  class AuthenticationChallenge;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::Net::AuthenticationChallenge);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::Net::AuthenticationChallenge*, "WebSocketSharp.Net", "AuthenticationChallenge");
// Type namespace: WebSocketSharp.Net
namespace WebSocketSharp::Net {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.Net.AuthenticationChallenge
  // [TokenAttribute] Offset: FFFFFFFF
  class AuthenticationChallenge : public ::WebSocketSharp::Net::AuthenticationBase {
    public:
    // static WebSocketSharp.Net.AuthenticationChallenge Parse(System.String value)
    // Offset: 0x1F19C18
    static ::WebSocketSharp::Net::AuthenticationChallenge* Parse(::StringW value);
    // private System.Void .ctor(WebSocketSharp.Net.AuthenticationSchemes scheme, System.Collections.Specialized.NameValueCollection parameters)
    // Offset: 0x1F19BDC
    // Implemented from: WebSocketSharp.Net.AuthenticationBase
    // Base method: System.Void AuthenticationBase::.ctor(WebSocketSharp.Net.AuthenticationSchemes scheme, System.Collections.Specialized.NameValueCollection parameters)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuthenticationChallenge* New_ctor(::WebSocketSharp::Net::AuthenticationSchemes scheme, ::System::Collections::Specialized::NameValueCollection* parameters) {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::Net::AuthenticationChallenge::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuthenticationChallenge*, creationType>(scheme, parameters)));
    }
    // override System.String ToBasicString()
    // Offset: 0x1F19DD8
    // Implemented from: WebSocketSharp.Net.AuthenticationBase
    // Base method: System.String AuthenticationBase::ToBasicString()
    ::StringW ToBasicString();
    // override System.String ToDigestString()
    // Offset: 0x1F19E58
    // Implemented from: WebSocketSharp.Net.AuthenticationBase
    // Base method: System.String AuthenticationBase::ToDigestString()
    ::StringW ToDigestString();
  }; // WebSocketSharp.Net.AuthenticationChallenge
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::Net::AuthenticationChallenge::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::WebSocketSharp::Net::AuthenticationChallenge* (*)(::StringW)>(&WebSocketSharp::Net::AuthenticationChallenge::Parse)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::AuthenticationChallenge*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::AuthenticationChallenge::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: WebSocketSharp::Net::AuthenticationChallenge::ToBasicString
// Il2CppName: ToBasicString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (WebSocketSharp::Net::AuthenticationChallenge::*)()>(&WebSocketSharp::Net::AuthenticationChallenge::ToBasicString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::AuthenticationChallenge*), "ToBasicString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::AuthenticationChallenge::ToDigestString
// Il2CppName: ToDigestString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (WebSocketSharp::Net::AuthenticationChallenge::*)()>(&WebSocketSharp::Net::AuthenticationChallenge::ToDigestString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::AuthenticationChallenge*), "ToDigestString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
