// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: WebSocketSharp.Net
namespace WebSocketSharp::Net {
  // Forward declaring type: NetworkCredential
  class NetworkCredential;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::Net::NetworkCredential);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::Net::NetworkCredential*, "WebSocketSharp.Net", "NetworkCredential");
// Type namespace: WebSocketSharp.Net
namespace WebSocketSharp::Net {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.Net.NetworkCredential
  // [TokenAttribute] Offset: FFFFFFFF
  class NetworkCredential : public ::Il2CppObject {
    public:
    public:
    // private System.String _domain
    // Size: 0x8
    // Offset: 0x10
    ::StringW domain;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String _password
    // Size: 0x8
    // Offset: 0x18
    ::StringW password;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.String[] _roles
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::StringW> roles;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // private System.String _userName
    // Size: 0x8
    // Offset: 0x28
    ::StringW userName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: private System.String _domain
    [[deprecated("Use field access instead!")]] ::StringW& dyn__domain();
    // Get instance field reference: private System.String _password
    [[deprecated("Use field access instead!")]] ::StringW& dyn__password();
    // Get instance field reference: private System.String[] _roles
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn__roles();
    // Get instance field reference: private System.String _userName
    [[deprecated("Use field access instead!")]] ::StringW& dyn__userName();
    // public System.String get_Domain()
    // Offset: 0x1F1A428
    ::StringW get_Domain();
    // public System.String get_Password()
    // Offset: 0x1F1A3CC
    ::StringW get_Password();
    // public System.String get_UserName()
    // Offset: 0x1F1A3C4
    ::StringW get_UserName();
  }; // WebSocketSharp.Net.NetworkCredential
  #pragma pack(pop)
  static check_size<sizeof(NetworkCredential), 40 + sizeof(::StringW)> __WebSocketSharp_Net_NetworkCredentialSizeCheck;
  static_assert(sizeof(NetworkCredential) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::Net::NetworkCredential::get_Domain
// Il2CppName: get_Domain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (WebSocketSharp::Net::NetworkCredential::*)()>(&WebSocketSharp::Net::NetworkCredential::get_Domain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::NetworkCredential*), "get_Domain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::NetworkCredential::get_Password
// Il2CppName: get_Password
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (WebSocketSharp::Net::NetworkCredential::*)()>(&WebSocketSharp::Net::NetworkCredential::get_Password)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::NetworkCredential*), "get_Password", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::NetworkCredential::get_UserName
// Il2CppName: get_UserName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (WebSocketSharp::Net::NetworkCredential::*)()>(&WebSocketSharp::Net::NetworkCredential::get_UserName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::NetworkCredential*), "get_UserName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
