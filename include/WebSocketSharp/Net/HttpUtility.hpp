// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IList
  class IList;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Completed forward declares
// Type namespace: WebSocketSharp.Net
namespace WebSocketSharp::Net {
  // Forward declaring type: HttpUtility
  class HttpUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::Net::HttpUtility);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::Net::HttpUtility*, "WebSocketSharp.Net", "HttpUtility");
// Type namespace: WebSocketSharp.Net
namespace WebSocketSharp::Net {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.Net.HttpUtility
  // [TokenAttribute] Offset: FFFFFFFF
  class HttpUtility : public ::Il2CppObject {
    public:
    // Get static field: static private System.Char[] _hexChars
    static ::ArrayW<::Il2CppChar> _get__hexChars();
    // Set static field: static private System.Char[] _hexChars
    static void _set__hexChars(::ArrayW<::Il2CppChar> value);
    // Get static field: static private System.Object _sync
    static ::Il2CppObject* _get__sync();
    // Set static field: static private System.Object _sync
    static void _set__sync(::Il2CppObject* value);
    // static private System.Int32 getChar(System.String s, System.Int32 offset, System.Int32 length)
    // Offset: 0x1F1E8EC
    static int getChar(::StringW s, int offset, int length);
    // static private System.Int32 getInt(System.Byte b)
    // Offset: 0x1F1EA18
    static int getInt(uint8_t b);
    // static private System.Void writeCharBytes(System.Char c, System.Collections.IList buffer, System.Text.Encoding encoding)
    // Offset: 0x1F1EA68
    static void writeCharBytes(::Il2CppChar c, ::System::Collections::IList* buffer, ::System::Text::Encoding* encoding);
    // static System.Text.Encoding GetEncoding(System.String contentType)
    // Offset: 0x1F16280
    static ::System::Text::Encoding* GetEncoding(::StringW contentType);
    // static public System.String UrlDecode(System.String s)
    // Offset: 0x1F15370
    static ::StringW UrlDecode(::StringW s);
    // static public System.String UrlDecode(System.String s, System.Text.Encoding encoding)
    // Offset: 0x1F1ECB4
    static ::StringW UrlDecode(::StringW s, ::System::Text::Encoding* encoding);
    // static private System.Void .cctor()
    // Offset: 0x1F1F03C
    static void _cctor();
  }; // WebSocketSharp.Net.HttpUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::Net::HttpUtility::getChar
// Il2CppName: getChar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW, int, int)>(&WebSocketSharp::Net::HttpUtility::getChar)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::HttpUtility*), "getChar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, offset, length});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::HttpUtility::getInt
// Il2CppName: getInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(uint8_t)>(&WebSocketSharp::Net::HttpUtility::getInt)> {
  static const MethodInfo* get() {
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::HttpUtility*), "getInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{b});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::HttpUtility::writeCharBytes
// Il2CppName: writeCharBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppChar, ::System::Collections::IList*, ::System::Text::Encoding*)>(&WebSocketSharp::Net::HttpUtility::writeCharBytes)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* buffer = &::il2cpp_utils::GetClassFromName("System.Collections", "IList")->byval_arg;
    static auto* encoding = &::il2cpp_utils::GetClassFromName("System.Text", "Encoding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::HttpUtility*), "writeCharBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c, buffer, encoding});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::HttpUtility::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)(::StringW)>(&WebSocketSharp::Net::HttpUtility::GetEncoding)> {
  static const MethodInfo* get() {
    static auto* contentType = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::HttpUtility*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{contentType});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::HttpUtility::UrlDecode
// Il2CppName: UrlDecode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&WebSocketSharp::Net::HttpUtility::UrlDecode)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::HttpUtility*), "UrlDecode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::HttpUtility::UrlDecode
// Il2CppName: UrlDecode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::System::Text::Encoding*)>(&WebSocketSharp::Net::HttpUtility::UrlDecode)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* encoding = &::il2cpp_utils::GetClassFromName("System.Text", "Encoding")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::HttpUtility*), "UrlDecode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, encoding});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::Net::HttpUtility::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&WebSocketSharp::Net::HttpUtility::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::Net::HttpUtility*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
