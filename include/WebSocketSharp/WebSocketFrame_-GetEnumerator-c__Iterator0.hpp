// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.WebSocketFrame
#include "WebSocketSharp/WebSocketFrame.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0*, "WebSocketSharp", "WebSocketFrame/<GetEnumerator>c__Iterator0");
// Type namespace: WebSocketSharp
namespace WebSocketSharp {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.WebSocketFrame/<GetEnumerator>c__Iterator0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AC09B0
  class WebSocketFrame::$GetEnumerator$c__Iterator0 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<uint8_t>*/ {
    public:
    public:
    // System.Byte[] $locvar0
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<uint8_t> $locvar0;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // System.Int32 $locvar1
    // Size: 0x4
    // Offset: 0x18
    int $locvar1;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Byte <b>__0
    // Size: 0x1
    // Offset: 0x1C
    uint8_t $b$__0;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: $b$__0 and: $this
    char __padding2[0x3] = {};
    // WebSocketSharp.WebSocketFrame $this
    // Size: 0x8
    // Offset: 0x20
    ::WebSocketSharp::WebSocketFrame* $this;
    // Field size check
    static_assert(sizeof(::WebSocketSharp::WebSocketFrame*) == 0x8);
    // System.Byte $current
    // Size: 0x1
    // Offset: 0x28
    uint8_t $current;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // System.Boolean $disposing
    // Size: 0x1
    // Offset: 0x29
    bool $disposing;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: $disposing and: $PC
    char __padding5[0x2] = {};
    // System.Int32 $PC
    // Size: 0x4
    // Offset: 0x2C
    int $PC;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<uint8_t>
    operator ::System::Collections::Generic::IEnumerator_1<uint8_t>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<uint8_t>*>(this);
    }
    // Get instance field reference: System.Byte[] $locvar0
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_$locvar0();
    // Get instance field reference: System.Int32 $locvar1
    [[deprecated("Use field access instead!")]] int& dyn_$locvar1();
    // Get instance field reference: System.Byte <b>__0
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$b$__0();
    // Get instance field reference: WebSocketSharp.WebSocketFrame $this
    [[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocketFrame*& dyn_$this();
    // Get instance field reference: System.Byte $current
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$current();
    // Get instance field reference: System.Boolean $disposing
    [[deprecated("Use field access instead!")]] bool& dyn_$disposing();
    // Get instance field reference: System.Int32 $PC
    [[deprecated("Use field access instead!")]] int& dyn_$PC();
    // public System.Void .ctor()
    // Offset: 0x1F2AD94
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketFrame::$GetEnumerator$c__Iterator0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketFrame::$GetEnumerator$c__Iterator0*, creationType>()));
    }
    // public System.Boolean MoveNext()
    // Offset: 0x1F2AE18
    bool MoveNext();
    // private System.Byte System.Collections.Generic.IEnumerator<byte>.get_Current()
    // Offset: 0x1F2AF48
    uint8_t System_Collections_Generic_IEnumerator$byte$_get_Current();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x1F2AF50
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
    // public System.Void Dispose()
    // Offset: 0x1F2AFB4
    void Dispose();
    // public System.Void Reset()
    // Offset: 0x1F2AFC8
    void Reset();
  }; // WebSocketSharp.WebSocketFrame/<GetEnumerator>c__Iterator0
  #pragma pack(pop)
  static check_size<sizeof(WebSocketFrame::$GetEnumerator$c__Iterator0), 44 + sizeof(int)> __WebSocketSharp_WebSocketFrame_$GetEnumerator$c__Iterator0SizeCheck;
  static_assert(sizeof(WebSocketFrame::$GetEnumerator$c__Iterator0) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::*)()>(&WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::System_Collections_Generic_IEnumerator$byte$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<byte>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::*)()>(&WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::System_Collections_Generic_IEnumerator$byte$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0*), "System.Collections.Generic.IEnumerator<byte>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::*)()>(&WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::*)()>(&WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::*)()>(&WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0::Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::WebSocketFrame::$GetEnumerator$c__Iterator0*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
