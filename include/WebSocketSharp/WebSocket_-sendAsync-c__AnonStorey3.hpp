// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.WebSocket
#include "WebSocketSharp/WebSocket.hpp"
// Including type: WebSocketSharp.Opcode
#include "WebSocketSharp/Opcode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3*, "WebSocketSharp", "WebSocket/<sendAsync>c__AnonStorey3");
// Type namespace: WebSocketSharp
namespace WebSocketSharp {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.WebSocket/<sendAsync>c__AnonStorey3
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AC0848
  class WebSocket::$sendAsync$c__AnonStorey3 : public ::Il2CppObject {
    public:
    public:
    // System.Func`3<WebSocketSharp.Opcode,System.IO.Stream,System.Boolean> sender
    // Size: 0x8
    // Offset: 0x10
    ::System::Func_3<::WebSocketSharp::Opcode, ::System::IO::Stream*, bool>* sender;
    // Field size check
    static_assert(sizeof(::System::Func_3<::WebSocketSharp::Opcode, ::System::IO::Stream*, bool>*) == 0x8);
    // System.Action`1<System.Boolean> completed
    // Size: 0x8
    // Offset: 0x18
    ::System::Action_1<bool>* completed;
    // Field size check
    static_assert(sizeof(::System::Action_1<bool>*) == 0x8);
    // WebSocketSharp.WebSocket $this
    // Size: 0x8
    // Offset: 0x20
    ::WebSocketSharp::WebSocket* $this;
    // Field size check
    static_assert(sizeof(::WebSocketSharp::WebSocket*) == 0x8);
    public:
    // Get instance field reference: System.Func`3<WebSocketSharp.Opcode,System.IO.Stream,System.Boolean> sender
    [[deprecated("Use field access instead!")]] ::System::Func_3<::WebSocketSharp::Opcode, ::System::IO::Stream*, bool>*& dyn_sender();
    // Get instance field reference: System.Action`1<System.Boolean> completed
    [[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& dyn_completed();
    // Get instance field reference: WebSocketSharp.WebSocket $this
    [[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocket*& dyn_$this();
    // public System.Void .ctor()
    // Offset: 0x1F27D24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocket::$sendAsync$c__AnonStorey3* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocket::$sendAsync$c__AnonStorey3*, creationType>()));
    }
    // System.Void <>m__0(System.IAsyncResult ar)
    // Offset: 0x1F28930
    void $$m__0(::System::IAsyncResult* ar);
  }; // WebSocketSharp.WebSocket/<sendAsync>c__AnonStorey3
  #pragma pack(pop)
  static check_size<sizeof(WebSocket::$sendAsync$c__AnonStorey3), 32 + sizeof(::WebSocketSharp::WebSocket*)> __WebSocketSharp_WebSocket_$sendAsync$c__AnonStorey3SizeCheck;
  static_assert(sizeof(WebSocket::$sendAsync$c__AnonStorey3) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::$$m__0
// Il2CppName: <>m__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::*)(::System::IAsyncResult*)>(&WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3::$$m__0)> {
  static const MethodInfo* get() {
    static auto* ar = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::WebSocket::$sendAsync$c__AnonStorey3*), "<>m__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ar});
  }
};
