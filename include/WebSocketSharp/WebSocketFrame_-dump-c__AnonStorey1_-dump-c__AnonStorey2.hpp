// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1
#include "WebSocketSharp/WebSocketFrame_-dump-c__AnonStorey1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2*, "WebSocketSharp", "WebSocketFrame/<dump>c__AnonStorey1/<dump>c__AnonStorey2");
// Type namespace: WebSocketSharp
namespace WebSocketSharp {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1/<dump>c__AnonStorey2
  // [TokenAttribute] Offset: FFFFFFFF
  class WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2 : public ::Il2CppObject {
    public:
    public:
    // System.Int64 lineCnt
    // Size: 0x8
    // Offset: 0x10
    int64_t lineCnt;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1 <>f__ref$1
    // Size: 0x8
    // Offset: 0x18
    ::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1* $$f__ref$1;
    // Field size check
    static_assert(sizeof(::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1*) == 0x8);
    public:
    // Get instance field reference: System.Int64 lineCnt
    [[deprecated("Use field access instead!")]] int64_t& dyn_lineCnt();
    // Get instance field reference: WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1 <>f__ref$1
    [[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1*& dyn_$$f__ref$1();
    // public System.Void .ctor()
    // Offset: 0x1F2B3A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2*, creationType>()));
    }
    // System.Void <>m__0(System.String arg1, System.String arg2, System.String arg3, System.String arg4)
    // Offset: 0x1F2B3A8
    void $$m__0(::StringW arg1, ::StringW arg2, ::StringW arg3, ::StringW arg4);
  }; // WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1/<dump>c__AnonStorey2
  #pragma pack(pop)
  static check_size<sizeof(WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2), 24 + sizeof(::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1*)> __WebSocketSharp_WebSocketFrame_$dump$c__AnonStorey1_$dump$c__AnonStorey2SizeCheck;
  static_assert(sizeof(WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2::$$m__0
// Il2CppName: <>m__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2::*)(::StringW, ::StringW, ::StringW, ::StringW)>(&WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2::$$m__0)> {
  static const MethodInfo* get() {
    static auto* arg1 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg2 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg3 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* arg4 = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2*), "<>m__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arg1, arg2, arg3, arg4});
  }
};
