// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.WebSocketFrame
#include "WebSocketSharp/WebSocketFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: WebSocketSharp
namespace WebSocketSharp {
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Action_4;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1*, "WebSocketSharp", "WebSocketFrame/<dump>c__AnonStorey1");
// Type namespace: WebSocketSharp
namespace WebSocketSharp {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AC0950
  class WebSocketFrame::$dump$c__AnonStorey1 : public ::Il2CppObject {
    public:
    // Nested type: ::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$dump$c__AnonStorey2
    class $dump$c__AnonStorey2;
    public:
    // System.Text.StringBuilder output
    // Size: 0x8
    // Offset: 0x10
    ::System::Text::StringBuilder* output;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    // System.String lineFmt
    // Size: 0x8
    // Offset: 0x18
    ::StringW lineFmt;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: System.Text.StringBuilder output
    [[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& dyn_output();
    // Get instance field reference: System.String lineFmt
    [[deprecated("Use field access instead!")]] ::StringW& dyn_lineFmt();
    // public System.Void .ctor()
    // Offset: 0x1F29CBC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketFrame::$dump$c__AnonStorey1* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketFrame::$dump$c__AnonStorey1*, creationType>()));
    }
    // System.Action`4<System.String,System.String,System.String,System.String> <>m__0()
    // Offset: 0x1F2B2E4
    ::System::Action_4<::StringW, ::StringW, ::StringW, ::StringW>* $$m__0();
  }; // WebSocketSharp.WebSocketFrame/<dump>c__AnonStorey1
  #pragma pack(pop)
  static check_size<sizeof(WebSocketFrame::$dump$c__AnonStorey1), 24 + sizeof(::StringW)> __WebSocketSharp_WebSocketFrame_$dump$c__AnonStorey1SizeCheck;
  static_assert(sizeof(WebSocketFrame::$dump$c__AnonStorey1) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$$m__0
// Il2CppName: <>m__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Action_4<::StringW, ::StringW, ::StringW, ::StringW>* (WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::*)()>(&WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1::$$m__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::WebSocketFrame::$dump$c__AnonStorey1*), "<>m__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
