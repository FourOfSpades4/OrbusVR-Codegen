// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.WebSocketFrame
#include "WebSocketSharp/WebSocketFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6*, "WebSocketSharp", "WebSocketFrame/<readPayloadDataAsync>c__AnonStorey6");
// Type namespace: WebSocketSharp
namespace WebSocketSharp {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.WebSocketFrame/<readPayloadDataAsync>c__AnonStorey6
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AC0990
  class WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6 : public ::Il2CppObject {
    public:
    public:
    // System.Int64 llen
    // Size: 0x8
    // Offset: 0x10
    int64_t llen;
    // Field size check
    static_assert(sizeof(int64_t) == 0x8);
    // WebSocketSharp.WebSocketFrame frame
    // Size: 0x8
    // Offset: 0x18
    ::WebSocketSharp::WebSocketFrame* frame;
    // Field size check
    static_assert(sizeof(::WebSocketSharp::WebSocketFrame*) == 0x8);
    // System.Action`1<WebSocketSharp.WebSocketFrame> completed
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::WebSocketSharp::WebSocketFrame*>* completed;
    // Field size check
    static_assert(sizeof(::System::Action_1<::WebSocketSharp::WebSocketFrame*>*) == 0x8);
    public:
    // Get instance field reference: System.Int64 llen
    [[deprecated("Use field access instead!")]] int64_t& dyn_llen();
    // Get instance field reference: WebSocketSharp.WebSocketFrame frame
    [[deprecated("Use field access instead!")]] ::WebSocketSharp::WebSocketFrame*& dyn_frame();
    // Get instance field reference: System.Action`1<WebSocketSharp.WebSocketFrame> completed
    [[deprecated("Use field access instead!")]] ::System::Action_1<::WebSocketSharp::WebSocketFrame*>*& dyn_completed();
    // public System.Void .ctor()
    // Offset: 0x1F2AD14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6*, creationType>()));
    }
    // System.Void <>m__0(System.Byte[] bytes)
    // Offset: 0x1F2B878
    void $$m__0(::ArrayW<uint8_t> bytes);
  }; // WebSocketSharp.WebSocketFrame/<readPayloadDataAsync>c__AnonStorey6
  #pragma pack(pop)
  static check_size<sizeof(WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6), 32 + sizeof(::System::Action_1<::WebSocketSharp::WebSocketFrame*>*)> __WebSocketSharp_WebSocketFrame_$readPayloadDataAsync$c__AnonStorey6SizeCheck;
  static_assert(sizeof(WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::$$m__0
// Il2CppName: <>m__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::*)(::ArrayW<uint8_t>)>(&WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6::$$m__0)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::WebSocketFrame::$readPayloadDataAsync$c__AnonStorey6*), "<>m__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes});
  }
};
