// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: WebSocketSharp.HttpBase
#include "WebSocketSharp/HttpBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0);
DEFINE_IL2CPP_ARG_TYPE(::WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0*, "WebSocketSharp", "HttpBase/<readHeaders>c__AnonStorey0");
// Type namespace: WebSocketSharp
namespace WebSocketSharp {
  // Size: 0x1C
  #pragma pack(push, 1)
  // Autogenerated type: WebSocketSharp.HttpBase/<readHeaders>c__AnonStorey0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AC09C0
  class HttpBase::$readHeaders$c__AnonStorey0 : public ::Il2CppObject {
    public:
    public:
    // System.Collections.Generic.List`1<System.Byte> buff
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<uint8_t>* buff;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<uint8_t>*) == 0x8);
    // System.Int32 cnt
    // Size: 0x4
    // Offset: 0x18
    int cnt;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: System.Collections.Generic.List`1<System.Byte> buff
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<uint8_t>*& dyn_buff();
    // Get instance field reference: System.Int32 cnt
    [[deprecated("Use field access instead!")]] int& dyn_cnt();
    // public System.Void .ctor()
    // Offset: 0x1F16940
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HttpBase::$readHeaders$c__AnonStorey0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HttpBase::$readHeaders$c__AnonStorey0*, creationType>()));
    }
    // System.Void <>m__0(System.Int32 i)
    // Offset: 0x1F169B8
    void $$m__0(int i);
  }; // WebSocketSharp.HttpBase/<readHeaders>c__AnonStorey0
  #pragma pack(pop)
  static check_size<sizeof(HttpBase::$readHeaders$c__AnonStorey0), 24 + sizeof(int)> __WebSocketSharp_HttpBase_$readHeaders$c__AnonStorey0SizeCheck;
  static_assert(sizeof(HttpBase::$readHeaders$c__AnonStorey0) == 0x1C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0::$$m__0
// Il2CppName: <>m__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0::*)(int)>(&WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0::$$m__0)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(WebSocketSharp::HttpBase::$readHeaders$c__AnonStorey0*), "<>m__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
