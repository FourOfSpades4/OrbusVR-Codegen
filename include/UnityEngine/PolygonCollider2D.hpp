// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: PolygonCollider2D
  class PolygonCollider2D;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::PolygonCollider2D);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::PolygonCollider2D*, "UnityEngine", "PolygonCollider2D");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.PolygonCollider2D
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: A9FDC0
  class PolygonCollider2D : public ::UnityEngine::Collider2D {
    public:
    // public System.Void set_pathCount(System.Int32 value)
    // Offset: 0x28949B8
    void set_pathCount(int value);
    // public System.Void SetPath(System.Int32 index, UnityEngine.Vector2[] points)
    // Offset: 0x2894A2C
    void SetPath(int index, ::ArrayW<::UnityEngine::Vector2> points);
    // private System.Void SetPath_Internal(System.Int32 index, UnityEngine.Vector2[] points)
    // Offset: 0x2894B0C
    void SetPath_Internal(int index, ::ArrayW<::UnityEngine::Vector2> points);
  }; // UnityEngine.PolygonCollider2D
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::PolygonCollider2D::set_pathCount
// Il2CppName: set_pathCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::PolygonCollider2D::*)(int)>(&UnityEngine::PolygonCollider2D::set_pathCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::PolygonCollider2D*), "set_pathCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: UnityEngine::PolygonCollider2D::SetPath
// Il2CppName: SetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::PolygonCollider2D::*)(int, ::ArrayW<::UnityEngine::Vector2>)>(&UnityEngine::PolygonCollider2D::SetPath)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* points = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::PolygonCollider2D*), "SetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, points});
  }
};
// Writing MetadataGetter for method: UnityEngine::PolygonCollider2D::SetPath_Internal
// Il2CppName: SetPath_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::PolygonCollider2D::*)(int, ::ArrayW<::UnityEngine::Vector2>)>(&UnityEngine::PolygonCollider2D::SetPath_Internal)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* points = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::PolygonCollider2D*), "SetPath_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, points});
  }
};
