// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: EdgeCollider2D
  class EdgeCollider2D;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::EdgeCollider2D);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::EdgeCollider2D*, "UnityEngine", "EdgeCollider2D");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.EdgeCollider2D
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: A9FD50
  class EdgeCollider2D : public ::UnityEngine::Collider2D {
    public:
    // public System.Void set_points(UnityEngine.Vector2[] value)
    // Offset: 0x2892B1C
    void set_points(::ArrayW<::UnityEngine::Vector2> value);
  }; // UnityEngine.EdgeCollider2D
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::EdgeCollider2D::set_points
// Il2CppName: set_points
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::EdgeCollider2D::*)(::ArrayW<::UnityEngine::Vector2>)>(&UnityEngine::EdgeCollider2D::set_points)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::EdgeCollider2D*), "set_points", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
