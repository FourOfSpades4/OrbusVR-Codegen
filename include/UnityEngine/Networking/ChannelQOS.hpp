// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Networking.QosType
#include "UnityEngine/Networking/QosType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: UnityEngine.Networking
namespace UnityEngine::Networking {
  // Forward declaring type: ChannelQOS
  class ChannelQOS;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Networking::ChannelQOS);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Networking::ChannelQOS*, "UnityEngine.Networking", "ChannelQOS");
// Type namespace: UnityEngine.Networking
namespace UnityEngine::Networking {
  // Size: 0x15
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Networking.ChannelQOS
  // [TokenAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: AA57E4
  class ChannelQOS : public ::Il2CppObject {
    public:
    public:
    // UnityEngine.Networking.QosType m_Type
    // Size: 0x4
    // Offset: 0x10
    ::UnityEngine::Networking::QosType m_Type;
    // Field size check
    static_assert(sizeof(::UnityEngine::Networking::QosType) == 0x4);
    // System.Boolean m_BelongsSharedOrderChannel
    // Size: 0x1
    // Offset: 0x14
    bool m_BelongsSharedOrderChannel;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: UnityEngine.Networking.QosType m_Type
    [[deprecated("Use field access instead!")]] ::UnityEngine::Networking::QosType& dyn_m_Type();
    // Get instance field reference: System.Boolean m_BelongsSharedOrderChannel
    [[deprecated("Use field access instead!")]] bool& dyn_m_BelongsSharedOrderChannel();
    // public System.Void .ctor(UnityEngine.Networking.QosType value)
    // Offset: 0x288920C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ChannelQOS* New_ctor(::UnityEngine::Networking::QosType value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ChannelQOS::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ChannelQOS*, creationType>(value)));
    }
    // public System.Void .ctor()
    // Offset: 0x288923C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ChannelQOS* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ChannelQOS::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ChannelQOS*, creationType>()));
    }
    // public System.Void .ctor(UnityEngine.Networking.ChannelQOS channel)
    // Offset: 0x2889268
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ChannelQOS* New_ctor(::UnityEngine::Networking::ChannelQOS* channel) {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::ChannelQOS::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ChannelQOS*, creationType>(channel)));
    }
    // public UnityEngine.Networking.QosType get_QOS()
    // Offset: 0x2889318
    ::UnityEngine::Networking::QosType get_QOS();
  }; // UnityEngine.Networking.ChannelQOS
  #pragma pack(pop)
  static check_size<sizeof(ChannelQOS), 20 + sizeof(bool)> __UnityEngine_Networking_ChannelQOSSizeCheck;
  static_assert(sizeof(ChannelQOS) == 0x15);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Networking::ChannelQOS::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Networking::ChannelQOS::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Networking::ChannelQOS::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Networking::ChannelQOS::get_QOS
// Il2CppName: get_QOS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Networking::QosType (UnityEngine::Networking::ChannelQOS::*)()>(&UnityEngine::Networking::ChannelQOS::get_QOS)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Networking::ChannelQOS*), "get_QOS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
