// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Random
#include "UnityEngine/Random.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Random::State, "UnityEngine", "Random/State");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: UnityEngine.Random/State
  // [TokenAttribute] Offset: FFFFFFFF
  struct Random::State/*, public ::System::ValueType*/ {
    public:
    public:
    // private System.Int32 s0
    // Size: 0x4
    // Offset: 0x0
    int s0;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 s1
    // Size: 0x4
    // Offset: 0x4
    int s1;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 s2
    // Size: 0x4
    // Offset: 0x8
    int s2;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 s3
    // Size: 0x4
    // Offset: 0xC
    int s3;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: State
    constexpr State(int s0_ = {}, int s1_ = {}, int s2_ = {}, int s3_ = {}) noexcept : s0{s0_}, s1{s1_}, s2{s2_}, s3{s3_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: private System.Int32 s0
    [[deprecated("Use field access instead!")]] int& dyn_s0();
    // Get instance field reference: private System.Int32 s1
    [[deprecated("Use field access instead!")]] int& dyn_s1();
    // Get instance field reference: private System.Int32 s2
    [[deprecated("Use field access instead!")]] int& dyn_s2();
    // Get instance field reference: private System.Int32 s3
    [[deprecated("Use field access instead!")]] int& dyn_s3();
  }; // UnityEngine.Random/State
  #pragma pack(pop)
  static check_size<sizeof(Random::State), 12 + sizeof(int)> __UnityEngine_Random_StateSizeCheck;
  static_assert(sizeof(Random::State) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
