// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: TerrainData
  class TerrainData;
  // Forward declaring type: Material
  class Material;
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Terrain
  class Terrain;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Terrain);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Terrain*, "UnityEngine", "Terrain");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Terrain
  // [TokenAttribute] Offset: FFFFFFFF
  // [NativeHeaderAttribute] Offset: A8A110
  // [StaticAccessorAttribute] Offset: A8A110
  // [NativeHeaderAttribute] Offset: A8A110
  // [UsedByNativeCodeAttribute] Offset: A8A110
  // [NativeHeaderAttribute] Offset: A8A110
  class Terrain : public ::UnityEngine::Behaviour {
    public:
    // Nested type: ::UnityEngine::Terrain::MaterialType
    struct MaterialType;
    // public System.Void .ctor()
    // Offset: 0x2888010
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Terrain* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Terrain*, creationType>()));
    }
    // public UnityEngine.TerrainData get_terrainData()
    // Offset: 0x2886980
    ::UnityEngine::TerrainData* get_terrainData();
    // public UnityEngine.Terrain/MaterialType get_materialType()
    // Offset: 0x2888018
    ::UnityEngine::Terrain::MaterialType get_materialType();
    // public UnityEngine.Material get_materialTemplate()
    // Offset: 0x2888084
    ::UnityEngine::Material* get_materialTemplate();
    // public System.Boolean get_allowAutoConnect()
    // Offset: 0x2886084
    bool get_allowAutoConnect();
    // public System.Int32 get_groupingID()
    // Offset: 0x28860F0
    int get_groupingID();
    // public System.Single SampleHeight(UnityEngine.Vector3 worldPosition)
    // Offset: 0x28880F0
    float SampleHeight(::UnityEngine::Vector3 worldPosition);
    // public System.Void SetNeighbors(UnityEngine.Terrain left, UnityEngine.Terrain top, UnityEngine.Terrain right, UnityEngine.Terrain bottom)
    // Offset: 0x2885D34
    void SetNeighbors(::UnityEngine::Terrain* left, ::UnityEngine::Terrain* top, ::UnityEngine::Terrain* right, ::UnityEngine::Terrain* bottom);
    // public UnityEngine.Vector3 GetPosition()
    // Offset: 0x288818C
    ::UnityEngine::Vector3 GetPosition();
    // static public UnityEngine.Terrain get_activeTerrain()
    // Offset: 0x2888230
    static ::UnityEngine::Terrain* get_activeTerrain();
    // static public UnityEngine.Terrain[] get_activeTerrains()
    // Offset: 0x2885C48
    static ::ArrayW<::UnityEngine::Terrain*> get_activeTerrains();
    // private System.Single SampleHeight_Injected(ref UnityEngine.Vector3 worldPosition)
    // Offset: 0x2888118
    float SampleHeight_Injected(ByRef<::UnityEngine::Vector3> worldPosition);
    // private System.Void GetPosition_Injected(out UnityEngine.Vector3 ret)
    // Offset: 0x28881BC
    void GetPosition_Injected(ByRef<::UnityEngine::Vector3> ret);
  }; // UnityEngine.Terrain
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Terrain::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Terrain::get_terrainData
// Il2CppName: get_terrainData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::TerrainData* (UnityEngine::Terrain::*)()>(&UnityEngine::Terrain::get_terrainData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "get_terrainData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Terrain::get_materialType
// Il2CppName: get_materialType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Terrain::MaterialType (UnityEngine::Terrain::*)()>(&UnityEngine::Terrain::get_materialType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "get_materialType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Terrain::get_materialTemplate
// Il2CppName: get_materialTemplate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (UnityEngine::Terrain::*)()>(&UnityEngine::Terrain::get_materialTemplate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "get_materialTemplate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Terrain::get_allowAutoConnect
// Il2CppName: get_allowAutoConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityEngine::Terrain::*)()>(&UnityEngine::Terrain::get_allowAutoConnect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "get_allowAutoConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Terrain::get_groupingID
// Il2CppName: get_groupingID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::Terrain::*)()>(&UnityEngine::Terrain::get_groupingID)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "get_groupingID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Terrain::SampleHeight
// Il2CppName: SampleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Terrain::*)(::UnityEngine::Vector3)>(&UnityEngine::Terrain::SampleHeight)> {
  static const MethodInfo* get() {
    static auto* worldPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "SampleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{worldPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::Terrain::SetNeighbors
// Il2CppName: SetNeighbors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Terrain::*)(::UnityEngine::Terrain*, ::UnityEngine::Terrain*, ::UnityEngine::Terrain*, ::UnityEngine::Terrain*)>(&UnityEngine::Terrain::SetNeighbors)> {
  static const MethodInfo* get() {
    static auto* left = &::il2cpp_utils::GetClassFromName("UnityEngine", "Terrain")->byval_arg;
    static auto* top = &::il2cpp_utils::GetClassFromName("UnityEngine", "Terrain")->byval_arg;
    static auto* right = &::il2cpp_utils::GetClassFromName("UnityEngine", "Terrain")->byval_arg;
    static auto* bottom = &::il2cpp_utils::GetClassFromName("UnityEngine", "Terrain")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "SetNeighbors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{left, top, right, bottom});
  }
};
// Writing MetadataGetter for method: UnityEngine::Terrain::GetPosition
// Il2CppName: GetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (UnityEngine::Terrain::*)()>(&UnityEngine::Terrain::GetPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "GetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Terrain::get_activeTerrain
// Il2CppName: get_activeTerrain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Terrain* (*)()>(&UnityEngine::Terrain::get_activeTerrain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "get_activeTerrain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Terrain::get_activeTerrains
// Il2CppName: get_activeTerrains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Terrain*> (*)()>(&UnityEngine::Terrain::get_activeTerrains)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "get_activeTerrains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Terrain::SampleHeight_Injected
// Il2CppName: SampleHeight_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::Terrain::*)(ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Terrain::SampleHeight_Injected)> {
  static const MethodInfo* get() {
    static auto* worldPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "SampleHeight_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{worldPosition});
  }
};
// Writing MetadataGetter for method: UnityEngine::Terrain::GetPosition_Injected
// Il2CppName: GetPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Terrain::*)(ByRef<::UnityEngine::Vector3>)>(&UnityEngine::Terrain::GetPosition_Injected)> {
  static const MethodInfo* get() {
    static auto* ret = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Terrain*), "GetPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ret});
  }
};
