// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: StaticBatchingUtility
  class StaticBatchingUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::StaticBatchingUtility);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::StaticBatchingUtility*, "UnityEngine", "StaticBatchingUtility");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.StaticBatchingUtility
  // [TokenAttribute] Offset: FFFFFFFF
  class StaticBatchingUtility : public ::Il2CppObject {
    public:
    // static public System.Void Combine(UnityEngine.GameObject staticBatchRoot)
    // Offset: 0x1F9C1F4
    static void Combine(::UnityEngine::GameObject* staticBatchRoot);
  }; // UnityEngine.StaticBatchingUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::StaticBatchingUtility::Combine
// Il2CppName: Combine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::GameObject*)>(&UnityEngine::StaticBatchingUtility::Combine)> {
  static const MethodInfo* get() {
    static auto* staticBatchRoot = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::StaticBatchingUtility*), "Combine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{staticBatchRoot});
  }
};
