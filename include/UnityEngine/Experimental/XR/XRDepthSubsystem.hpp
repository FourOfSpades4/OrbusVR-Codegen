// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Experimental.IntegratedSubsystem`1
#include "UnityEngine/Experimental/IntegratedSubsystem_1.hpp"
// Including type: UnityEngine.Experimental.XR.PointCloudUpdatedEventArgs
#include "UnityEngine/Experimental/XR/PointCloudUpdatedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Experimental::XR
namespace UnityEngine::Experimental::XR {
  // Forward declaring type: XRDepthSubsystemDescriptor
  class XRDepthSubsystemDescriptor;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Experimental.XR
namespace UnityEngine::Experimental::XR {
  // Forward declaring type: XRDepthSubsystem
  class XRDepthSubsystem;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Experimental::XR::XRDepthSubsystem);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Experimental::XR::XRDepthSubsystem*, "UnityEngine.Experimental.XR", "XRDepthSubsystem");
// Type namespace: UnityEngine.Experimental.XR
namespace UnityEngine::Experimental::XR {
  // WARNING Size may be invalid!
  // Autogenerated type: UnityEngine.Experimental.XR.XRDepthSubsystem
  // [TokenAttribute] Offset: FFFFFFFF
  // [UsedByNativeCodeAttribute] Offset: A8EC6C
  // [NativeHeaderAttribute] Offset: A8EC6C
  // [NativeHeaderAttribute] Offset: A8EC6C
  // [NativeConditionalAttribute] Offset: A8EC6C
  class XRDepthSubsystem : public ::UnityEngine::Experimental::IntegratedSubsystem_1<::UnityEngine::Experimental::XR::XRDepthSubsystemDescriptor*> {
    public:
    public:
    // [DebuggerBrowsableAttribute] Offset: 0xA8F5E4
    // [CompilerGeneratedAttribute] Offset: 0xA8F5E4
    // private System.Action`1<UnityEngine.Experimental.XR.PointCloudUpdatedEventArgs> PointCloudUpdated
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::UnityEngine::Experimental::XR::PointCloudUpdatedEventArgs>* PointCloudUpdated;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::Experimental::XR::PointCloudUpdatedEventArgs>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Action_1<::UnityEngine::Experimental::XR::PointCloudUpdatedEventArgs>*
    constexpr operator ::System::Action_1<::UnityEngine::Experimental::XR::PointCloudUpdatedEventArgs>*() const noexcept {
      return PointCloudUpdated;
    }
    // Get instance field reference: private System.Action`1<UnityEngine.Experimental.XR.PointCloudUpdatedEventArgs> PointCloudUpdated
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Experimental::XR::PointCloudUpdatedEventArgs>*& dyn_PointCloudUpdated();
    // private System.Void InvokePointCloudUpdatedEvent()
    // Offset: 0x287F0F4
    void InvokePointCloudUpdatedEvent();
    // public System.Void .ctor()
    // Offset: 0x287F0A4
    // Implemented from: UnityEngine.Experimental.IntegratedSubsystem`1
    // Base method: System.Void IntegratedSubsystem_1::.ctor()
    // Base method: System.Void IntegratedSubsystem::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static XRDepthSubsystem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::XR::XRDepthSubsystem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<XRDepthSubsystem*, creationType>()));
    }
  }; // UnityEngine.Experimental.XR.XRDepthSubsystem
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Experimental::XR::XRDepthSubsystem::InvokePointCloudUpdatedEvent
// Il2CppName: InvokePointCloudUpdatedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Experimental::XR::XRDepthSubsystem::*)()>(&UnityEngine::Experimental::XR::XRDepthSubsystem::InvokePointCloudUpdatedEvent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Experimental::XR::XRDepthSubsystem*), "InvokePointCloudUpdatedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Experimental::XR::XRDepthSubsystem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
