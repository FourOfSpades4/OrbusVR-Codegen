// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Analytics.DataPrivacy
#include "UnityEngine/Analytics/DataPrivacy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Networking
namespace UnityEngine::Networking {
  // Forward declaring type: UnityWebRequest
  class UnityWebRequest;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0*, "UnityEngine.Analytics", "DataPrivacy/<>c__DisplayClass9_0");
// Type namespace: UnityEngine.Analytics
namespace UnityEngine::Analytics {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Analytics.DataPrivacy/<>c__DisplayClass9_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ABC664
  class DataPrivacy::$$c__DisplayClass9_0 : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Networking.UnityWebRequest www
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Networking::UnityWebRequest* www;
    // Field size check
    static_assert(sizeof(::UnityEngine::Networking::UnityWebRequest*) == 0x8);
    // public System.Action`1<System.String> failure
    // Size: 0x8
    // Offset: 0x18
    ::System::Action_1<::StringW>* failure;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    // public System.Action`1<System.String> success
    // Size: 0x8
    // Offset: 0x20
    ::System::Action_1<::StringW>* success;
    // Field size check
    static_assert(sizeof(::System::Action_1<::StringW>*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Networking.UnityWebRequest www
    [[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& dyn_www();
    // Get instance field reference: public System.Action`1<System.String> failure
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_failure();
    // Get instance field reference: public System.Action`1<System.String> success
    [[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& dyn_success();
    // public System.Void .ctor()
    // Offset: 0x28A06FC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataPrivacy::$$c__DisplayClass9_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataPrivacy::$$c__DisplayClass9_0*, creationType>()));
    }
    // System.Void <FetchPrivacyUrl>b__0(UnityEngine.AsyncOperation async2)
    // Offset: 0x28A0704
    void $FetchPrivacyUrl$b__0(::UnityEngine::AsyncOperation* async2);
  }; // UnityEngine.Analytics.DataPrivacy/<>c__DisplayClass9_0
  #pragma pack(pop)
  static check_size<sizeof(DataPrivacy::$$c__DisplayClass9_0), 32 + sizeof(::System::Action_1<::StringW>*)> __UnityEngine_Analytics_DataPrivacy_$$c__DisplayClass9_0SizeCheck;
  static_assert(sizeof(DataPrivacy::$$c__DisplayClass9_0) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::$FetchPrivacyUrl$b__0
// Il2CppName: <FetchPrivacyUrl>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::*)(::UnityEngine::AsyncOperation*)>(&UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::$FetchPrivacyUrl$b__0)> {
  static const MethodInfo* get() {
    static auto* async2 = &::il2cpp_utils::GetClassFromName("UnityEngine", "AsyncOperation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0*), "<FetchPrivacyUrl>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{async2});
  }
};
