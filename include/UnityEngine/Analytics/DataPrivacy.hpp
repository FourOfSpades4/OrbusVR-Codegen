// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::Analytics
namespace UnityEngine::Analytics {
}
// Forward declaring namespace: UnityEngine::Networking
namespace UnityEngine::Networking {
  // Forward declaring type: UnityWebRequest
  class UnityWebRequest;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Completed forward declares
// Type namespace: UnityEngine.Analytics
namespace UnityEngine::Analytics {
  // Forward declaring type: DataPrivacy
  class DataPrivacy;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::Analytics::DataPrivacy);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::Analytics::DataPrivacy*, "UnityEngine.Analytics", "DataPrivacy");
// Type namespace: UnityEngine.Analytics
namespace UnityEngine::Analytics {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.Analytics.DataPrivacy
  // [TokenAttribute] Offset: FFFFFFFF
  class DataPrivacy : public ::Il2CppObject {
    public:
    // Nested type: ::UnityEngine::Analytics::DataPrivacy::UserPostData
    struct UserPostData;
    // Nested type: ::UnityEngine::Analytics::DataPrivacy::TokenData
    struct TokenData;
    // Nested type: ::UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0
    class $$c__DisplayClass9_0;
    // static UnityEngine.Analytics.DataPrivacy/UserPostData GetUserData()
    // Offset: 0x289FF94
    static ::UnityEngine::Analytics::DataPrivacy::UserPostData GetUserData();
    // static private System.String GetUserAgent()
    // Offset: 0x28A0110
    static ::StringW GetUserAgent();
    // static private System.String getErrorString(UnityEngine.Networking.UnityWebRequest www)
    // Offset: 0x28A03E8
    static ::StringW getErrorString(::UnityEngine::Networking::UnityWebRequest* www);
    // static public System.Void FetchPrivacyUrl(System.Action`1<System.String> success, System.Action`1<System.String> failure)
    // Offset: 0x28A04CC
    static void FetchPrivacyUrl(::System::Action_1<::StringW>* success, ::System::Action_1<::StringW>* failure);
  }; // UnityEngine.Analytics.DataPrivacy
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::Analytics::DataPrivacy::GetUserData
// Il2CppName: GetUserData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Analytics::DataPrivacy::UserPostData (*)()>(&UnityEngine::Analytics::DataPrivacy::GetUserData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Analytics::DataPrivacy*), "GetUserData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Analytics::DataPrivacy::GetUserAgent
// Il2CppName: GetUserAgent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&UnityEngine::Analytics::DataPrivacy::GetUserAgent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Analytics::DataPrivacy*), "GetUserAgent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::Analytics::DataPrivacy::getErrorString
// Il2CppName: getErrorString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::UnityEngine::Networking::UnityWebRequest*)>(&UnityEngine::Analytics::DataPrivacy::getErrorString)> {
  static const MethodInfo* get() {
    static auto* www = &::il2cpp_utils::GetClassFromName("UnityEngine.Networking", "UnityWebRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Analytics::DataPrivacy*), "getErrorString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{www});
  }
};
// Writing MetadataGetter for method: UnityEngine::Analytics::DataPrivacy::FetchPrivacyUrl
// Il2CppName: FetchPrivacyUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::StringW>*, ::System::Action_1<::StringW>*)>(&UnityEngine::Analytics::DataPrivacy::FetchPrivacyUrl)> {
  static const MethodInfo* get() {
    static auto* success = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* failure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::Analytics::DataPrivacy*), "FetchPrivacyUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{success, failure});
  }
};
