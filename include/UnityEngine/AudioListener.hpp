// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.AudioBehaviour
#include "UnityEngine/AudioBehaviour.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioListenerExtension
  class AudioListenerExtension;
  // Forward declaring type: FFTWindow
  struct FFTWindow;
  // Forward declaring type: PropertyName
  struct PropertyName;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioListener
  class AudioListener;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityEngine::AudioListener);
DEFINE_IL2CPP_ARG_TYPE(::UnityEngine::AudioListener*, "UnityEngine", "AudioListener");
// Type namespace: UnityEngine
namespace UnityEngine {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: UnityEngine.AudioListener
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: A85F2C
  class AudioListener : public ::UnityEngine::AudioBehaviour {
    public:
    public:
    // UnityEngine.AudioListenerExtension spatializerExtension
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::AudioListenerExtension* spatializerExtension;
    // Field size check
    static_assert(sizeof(::UnityEngine::AudioListenerExtension*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: UnityEngine.AudioListenerExtension spatializerExtension
    [[deprecated("Use field access instead!")]] ::UnityEngine::AudioListenerExtension*& dyn_spatializerExtension();
    // static public System.Boolean get_pause()
    // Offset: 0x284B92C
    static bool get_pause();
    // static private System.Void GetOutputDataHelper(System.Single[] samples, System.Int32 channel)
    // Offset: 0x284B984
    static void GetOutputDataHelper(::ArrayW<float> samples, int channel);
    // static private System.Void GetSpectrumDataHelper(System.Single[] samples, System.Int32 channel, UnityEngine.FFTWindow window)
    // Offset: 0x284B9F8
    static void GetSpectrumDataHelper(::ArrayW<float> samples, int channel, ::UnityEngine::FFTWindow window);
    // static public System.Void GetOutputData(System.Single[] samples, System.Int32 channel)
    // Offset: 0x284BA7C
    static void GetOutputData(::ArrayW<float> samples, int channel);
    // static public System.Void GetSpectrumData(System.Single[] samples, System.Int32 channel, UnityEngine.FFTWindow window)
    // Offset: 0x284BA80
    static void GetSpectrumData(::ArrayW<float> samples, int channel, ::UnityEngine::FFTWindow window);
    // System.Int32 GetNumExtensionProperties()
    // Offset: 0x284AE18
    int GetNumExtensionProperties();
    // UnityEngine.PropertyName ReadExtensionName(System.Int32 listenerIndex)
    // Offset: 0x284AD54
    ::UnityEngine::PropertyName ReadExtensionName(int listenerIndex);
    // static private System.Void INTERNAL_CALL_ReadExtensionName(UnityEngine.AudioListener self, System.Int32 listenerIndex, out UnityEngine.PropertyName value)
    // Offset: 0x284BA84
    static void INTERNAL_CALL_ReadExtensionName(::UnityEngine::AudioListener* self, int listenerIndex, ByRef<::UnityEngine::PropertyName> value);
    // UnityEngine.PropertyName ReadExtensionPropertyName(System.Int32 listenerIndex)
    // Offset: 0x284AD7C
    ::UnityEngine::PropertyName ReadExtensionPropertyName(int listenerIndex);
    // static private System.Void INTERNAL_CALL_ReadExtensionPropertyName(UnityEngine.AudioListener self, System.Int32 listenerIndex, out UnityEngine.PropertyName value)
    // Offset: 0x284BB08
    static void INTERNAL_CALL_ReadExtensionPropertyName(::UnityEngine::AudioListener* self, int listenerIndex, ByRef<::UnityEngine::PropertyName> value);
    // System.Single ReadExtensionPropertyValue(System.Int32 listenerIndex)
    // Offset: 0x284ADA4
    float ReadExtensionPropertyValue(int listenerIndex);
    // System.Void ClearExtensionProperties(UnityEngine.PropertyName extensionName)
    // Offset: 0x284AE84
    void ClearExtensionProperties(::UnityEngine::PropertyName extensionName);
    // static private System.Void INTERNAL_CALL_ClearExtensionProperties(UnityEngine.AudioListener self, ref UnityEngine.PropertyName extensionName)
    // Offset: 0x284BB8C
    static void INTERNAL_CALL_ClearExtensionProperties(::UnityEngine::AudioListener* self, ByRef<::UnityEngine::PropertyName> extensionName);
    // UnityEngine.AudioListenerExtension AddExtension(System.Type extensionType)
    // Offset: 0x284AA5C
    ::UnityEngine::AudioListenerExtension* AddExtension(::System::Type* extensionType);
  }; // UnityEngine.AudioListener
  #pragma pack(pop)
  static check_size<sizeof(AudioListener), 24 + sizeof(::UnityEngine::AudioListenerExtension*)> __UnityEngine_AudioListenerSizeCheck;
  static_assert(sizeof(AudioListener) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityEngine::AudioListener::get_pause
// Il2CppName: get_pause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&UnityEngine::AudioListener::get_pause)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "get_pause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::GetOutputDataHelper
// Il2CppName: GetOutputDataHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<float>, int)>(&UnityEngine::AudioListener::GetOutputDataHelper)> {
  static const MethodInfo* get() {
    static auto* samples = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "GetOutputDataHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{samples, channel});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::GetSpectrumDataHelper
// Il2CppName: GetSpectrumDataHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<float>, int, ::UnityEngine::FFTWindow)>(&UnityEngine::AudioListener::GetSpectrumDataHelper)> {
  static const MethodInfo* get() {
    static auto* samples = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* window = &::il2cpp_utils::GetClassFromName("UnityEngine", "FFTWindow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "GetSpectrumDataHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{samples, channel, window});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::GetOutputData
// Il2CppName: GetOutputData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<float>, int)>(&UnityEngine::AudioListener::GetOutputData)> {
  static const MethodInfo* get() {
    static auto* samples = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "GetOutputData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{samples, channel});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::GetSpectrumData
// Il2CppName: GetSpectrumData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<float>, int, ::UnityEngine::FFTWindow)>(&UnityEngine::AudioListener::GetSpectrumData)> {
  static const MethodInfo* get() {
    static auto* samples = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Single"), 1)->byval_arg;
    static auto* channel = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* window = &::il2cpp_utils::GetClassFromName("UnityEngine", "FFTWindow")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "GetSpectrumData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{samples, channel, window});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::GetNumExtensionProperties
// Il2CppName: GetNumExtensionProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnityEngine::AudioListener::*)()>(&UnityEngine::AudioListener::GetNumExtensionProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "GetNumExtensionProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::ReadExtensionName
// Il2CppName: ReadExtensionName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::PropertyName (UnityEngine::AudioListener::*)(int)>(&UnityEngine::AudioListener::ReadExtensionName)> {
  static const MethodInfo* get() {
    static auto* listenerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "ReadExtensionName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listenerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::INTERNAL_CALL_ReadExtensionName
// Il2CppName: INTERNAL_CALL_ReadExtensionName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::AudioListener*, int, ByRef<::UnityEngine::PropertyName>)>(&UnityEngine::AudioListener::INTERNAL_CALL_ReadExtensionName)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioListener")->byval_arg;
    static auto* listenerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "PropertyName")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "INTERNAL_CALL_ReadExtensionName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self, listenerIndex, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::ReadExtensionPropertyName
// Il2CppName: ReadExtensionPropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::PropertyName (UnityEngine::AudioListener::*)(int)>(&UnityEngine::AudioListener::ReadExtensionPropertyName)> {
  static const MethodInfo* get() {
    static auto* listenerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "ReadExtensionPropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listenerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::INTERNAL_CALL_ReadExtensionPropertyName
// Il2CppName: INTERNAL_CALL_ReadExtensionPropertyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::AudioListener*, int, ByRef<::UnityEngine::PropertyName>)>(&UnityEngine::AudioListener::INTERNAL_CALL_ReadExtensionPropertyName)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioListener")->byval_arg;
    static auto* listenerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "PropertyName")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "INTERNAL_CALL_ReadExtensionPropertyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self, listenerIndex, value});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::ReadExtensionPropertyValue
// Il2CppName: ReadExtensionPropertyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (UnityEngine::AudioListener::*)(int)>(&UnityEngine::AudioListener::ReadExtensionPropertyValue)> {
  static const MethodInfo* get() {
    static auto* listenerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "ReadExtensionPropertyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{listenerIndex});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::ClearExtensionProperties
// Il2CppName: ClearExtensionProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEngine::AudioListener::*)(::UnityEngine::PropertyName)>(&UnityEngine::AudioListener::ClearExtensionProperties)> {
  static const MethodInfo* get() {
    static auto* extensionName = &::il2cpp_utils::GetClassFromName("UnityEngine", "PropertyName")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "ClearExtensionProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extensionName});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::INTERNAL_CALL_ClearExtensionProperties
// Il2CppName: INTERNAL_CALL_ClearExtensionProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::AudioListener*, ByRef<::UnityEngine::PropertyName>)>(&UnityEngine::AudioListener::INTERNAL_CALL_ClearExtensionProperties)> {
  static const MethodInfo* get() {
    static auto* self = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioListener")->byval_arg;
    static auto* extensionName = &::il2cpp_utils::GetClassFromName("UnityEngine", "PropertyName")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "INTERNAL_CALL_ClearExtensionProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{self, extensionName});
  }
};
// Writing MetadataGetter for method: UnityEngine::AudioListener::AddExtension
// Il2CppName: AddExtension
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::AudioListenerExtension* (UnityEngine::AudioListener::*)(::System::Type*)>(&UnityEngine::AudioListener::AddExtension)> {
  static const MethodInfo* get() {
    static auto* extensionType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityEngine::AudioListener*), "AddExtension", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{extensionType});
  }
};
