// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: Assembly
  class Assembly;
}
// Completed forward declares
// Type namespace: Nitro
namespace Nitro {
  // Forward declaring type: Assemblies
  class Assemblies;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Nitro::Assemblies);
DEFINE_IL2CPP_ARG_TYPE(::Nitro::Assemblies*, "Nitro", "Assemblies");
// Type namespace: Nitro
namespace Nitro {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Nitro.Assemblies
  // [TokenAttribute] Offset: FFFFFFFF
  class Assemblies : public ::Il2CppObject {
    public:
    // static public System.Reflection.Assembly get_Current()
    // Offset: 0xF57258
    static ::System::Reflection::Assembly* get_Current();
    // static public System.Reflection.Assembly[] GetAll()
    // Offset: 0xF572AC
    static ::ArrayW<::System::Reflection::Assembly*> GetAll();
  }; // Nitro.Assemblies
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Nitro::Assemblies::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::Assembly* (*)()>(&Nitro::Assemblies::get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Nitro::Assemblies*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Nitro::Assemblies::GetAll
// Il2CppName: GetAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::System::Reflection::Assembly*> (*)()>(&Nitro::Assemblies::GetAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Nitro::Assemblies*), "GetAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
