// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: Nitro
namespace Nitro {
  // Forward declaring type: NitroBaseMethod
  class NitroBaseMethod;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Nitro::NitroBaseMethod);
DEFINE_IL2CPP_ARG_TYPE(::Nitro::NitroBaseMethod*, "Nitro", "NitroBaseMethod");
// Type namespace: Nitro
namespace Nitro {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Nitro.NitroBaseMethod
  // [TokenAttribute] Offset: FFFFFFFF
  class NitroBaseMethod : public ::Il2CppObject {
    public:
    // public System.Object RunBoxed(params System.Object[] arguments)
    // Offset: 0xF65E84
    ::Il2CppObject* RunBoxed(::ArrayW<::Il2CppObject*> arguments);
    // public System.Void .ctor()
    // Offset: 0xF65E8C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NitroBaseMethod* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Nitro::NitroBaseMethod::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NitroBaseMethod*, creationType>()));
    }
  }; // Nitro.NitroBaseMethod
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Nitro::NitroBaseMethod::RunBoxed
// Il2CppName: RunBoxed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Nitro::NitroBaseMethod::*)(::ArrayW<::Il2CppObject*>)>(&Nitro::NitroBaseMethod::RunBoxed)> {
  static const MethodInfo* get() {
    static auto* arguments = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Nitro::NitroBaseMethod*), "RunBoxed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arguments});
  }
};
// Writing MetadataGetter for method: Nitro::NitroBaseMethod::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
