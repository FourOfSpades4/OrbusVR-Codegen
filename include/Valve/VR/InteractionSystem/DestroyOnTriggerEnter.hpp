// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
}
// Completed forward declares
// Type namespace: Valve.VR.InteractionSystem
namespace Valve::VR::InteractionSystem {
  // Forward declaring type: DestroyOnTriggerEnter
  class DestroyOnTriggerEnter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Valve::VR::InteractionSystem::DestroyOnTriggerEnter);
DEFINE_IL2CPP_ARG_TYPE(::Valve::VR::InteractionSystem::DestroyOnTriggerEnter*, "Valve.VR.InteractionSystem", "DestroyOnTriggerEnter");
// Type namespace: Valve.VR.InteractionSystem
namespace Valve::VR::InteractionSystem {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: Valve.VR.InteractionSystem.DestroyOnTriggerEnter
  // [TokenAttribute] Offset: FFFFFFFF
  class DestroyOnTriggerEnter : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public System.String tagFilter
    // Size: 0x8
    // Offset: 0x18
    ::StringW tagFilter;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean useTag
    // Size: 0x1
    // Offset: 0x20
    bool useTag;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String tagFilter
    [[deprecated("Use field access instead!")]] ::StringW& dyn_tagFilter();
    // Get instance field reference: private System.Boolean useTag
    [[deprecated("Use field access instead!")]] bool& dyn_useTag();
    // private System.Void Start()
    // Offset: 0x11662C8
    void Start();
    // private System.Void OnTriggerEnter(UnityEngine.Collider collider)
    // Offset: 0x11662FC
    void OnTriggerEnter(::UnityEngine::Collider* collider);
    // public System.Void .ctor()
    // Offset: 0x1166430
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DestroyOnTriggerEnter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Valve::VR::InteractionSystem::DestroyOnTriggerEnter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DestroyOnTriggerEnter*, creationType>()));
    }
  }; // Valve.VR.InteractionSystem.DestroyOnTriggerEnter
  #pragma pack(pop)
  static check_size<sizeof(DestroyOnTriggerEnter), 32 + sizeof(bool)> __Valve_VR_InteractionSystem_DestroyOnTriggerEnterSizeCheck;
  static_assert(sizeof(DestroyOnTriggerEnter) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Valve::VR::InteractionSystem::DestroyOnTriggerEnter::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Valve::VR::InteractionSystem::DestroyOnTriggerEnter::*)()>(&Valve::VR::InteractionSystem::DestroyOnTriggerEnter::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::InteractionSystem::DestroyOnTriggerEnter*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Valve::VR::InteractionSystem::DestroyOnTriggerEnter::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Valve::VR::InteractionSystem::DestroyOnTriggerEnter::*)(::UnityEngine::Collider*)>(&Valve::VR::InteractionSystem::DestroyOnTriggerEnter::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* collider = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Valve::VR::InteractionSystem::DestroyOnTriggerEnter*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{collider});
  }
};
// Writing MetadataGetter for method: Valve::VR::InteractionSystem::DestroyOnTriggerEnter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
