// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Valve.VR.HmdVector4_t
#include "Valve/VR/HmdVector4_t.hpp"
// Including type: Valve.VR.HmdQuaternionf_t
#include "Valve/VR/HmdQuaternionf_t.hpp"
// Completed includes
// Type namespace: Valve.VR
namespace Valve::VR {
  // Forward declaring type: VRBoneTransform_t
  struct VRBoneTransform_t;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Valve::VR::VRBoneTransform_t, "Valve.VR", "VRBoneTransform_t");
// Type namespace: Valve.VR
namespace Valve::VR {
  // Size: 0x20
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Valve.VR.VRBoneTransform_t
  // [TokenAttribute] Offset: FFFFFFFF
  struct VRBoneTransform_t/*, public ::System::ValueType*/ {
    public:
    public:
    // public Valve.VR.HmdVector4_t position
    // Size: 0x10
    // Offset: 0x0
    ::Valve::VR::HmdVector4_t position;
    // Field size check
    static_assert(sizeof(::Valve::VR::HmdVector4_t) == 0x10);
    // public Valve.VR.HmdQuaternionf_t orientation
    // Size: 0x10
    // Offset: 0x10
    ::Valve::VR::HmdQuaternionf_t orientation;
    // Field size check
    static_assert(sizeof(::Valve::VR::HmdQuaternionf_t) == 0x10);
    public:
    // Creating value type constructor for type: VRBoneTransform_t
    constexpr VRBoneTransform_t(::Valve::VR::HmdVector4_t position_ = {}, ::Valve::VR::HmdQuaternionf_t orientation_ = {}) noexcept : position{position_}, orientation{orientation_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public Valve.VR.HmdVector4_t position
    [[deprecated("Use field access instead!")]] ::Valve::VR::HmdVector4_t& dyn_position();
    // Get instance field reference: public Valve.VR.HmdQuaternionf_t orientation
    [[deprecated("Use field access instead!")]] ::Valve::VR::HmdQuaternionf_t& dyn_orientation();
  }; // Valve.VR.VRBoneTransform_t
  #pragma pack(pop)
  static check_size<sizeof(VRBoneTransform_t), 16 + sizeof(::Valve::VR::HmdQuaternionf_t)> __Valve_VR_VRBoneTransform_tSizeCheck;
  static_assert(sizeof(VRBoneTransform_t) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
