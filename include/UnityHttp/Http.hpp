// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityHttp
namespace UnityHttp {
  // Forward declaring type: HttpRequest
  class HttpRequest;
  // Forward declaring type: OnHttpEvent
  class OnHttpEvent;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: WWWForm
  class WWWForm;
}
// Completed forward declares
// Type namespace: UnityHttp
namespace UnityHttp {
  // Forward declaring type: Http
  class Http;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::UnityHttp::Http);
DEFINE_IL2CPP_ARG_TYPE(::UnityHttp::Http*, "UnityHttp", "Http");
// Type namespace: UnityHttp
namespace UnityHttp {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: UnityHttp.Http
  // [TokenAttribute] Offset: FFFFFFFF
  class Http : public ::Il2CppObject {
    public:
    // Get static field: static public System.Single UpdateTimer
    static float _get_UpdateTimer();
    // Set static field: static public System.Single UpdateTimer
    static void _set_UpdateTimer(float value);
    // Get static field: static private System.Single TimerLimit
    static float _get_TimerLimit();
    // Set static field: static private System.Single TimerLimit
    static void _set_TimerLimit(float value);
    // Get static field: static public UnityHttp.HttpRequest LastRequest
    static ::UnityHttp::HttpRequest* _get_LastRequest();
    // Set static field: static public UnityHttp.HttpRequest LastRequest
    static void _set_LastRequest(::UnityHttp::HttpRequest* value);
    // Get static field: static public UnityHttp.HttpRequest FirstRequest
    static ::UnityHttp::HttpRequest* _get_FirstRequest();
    // Set static field: static public UnityHttp.HttpRequest FirstRequest
    static void _set_FirstRequest(::UnityHttp::HttpRequest* value);
    // Get static field: static public System.Int32 CurrentActiveRequests
    static int _get_CurrentActiveRequests();
    // Set static field: static public System.Int32 CurrentActiveRequests
    static void _set_CurrentActiveRequests(int value);
    // Get static field: static public UnityHttp.HttpRequest LastWaitingRequest
    static ::UnityHttp::HttpRequest* _get_LastWaitingRequest();
    // Set static field: static public UnityHttp.HttpRequest LastWaitingRequest
    static void _set_LastWaitingRequest(::UnityHttp::HttpRequest* value);
    // Get static field: static public UnityHttp.HttpRequest FirstWaitingRequest
    static ::UnityHttp::HttpRequest* _get_FirstWaitingRequest();
    // Set static field: static public UnityHttp.HttpRequest FirstWaitingRequest
    static void _set_FirstWaitingRequest(::UnityHttp::HttpRequest* value);
    // Get static field: static public System.Int32 MaxSimultaneousRequests
    static int _get_MaxSimultaneousRequests();
    // Set static field: static public System.Int32 MaxSimultaneousRequests
    static void _set_MaxSimultaneousRequests(int value);
    // static public System.Void SetRate(System.Int32 fps)
    // Offset: 0xFE3568
    static void SetRate(int fps);
    // static public System.Void Clear()
    // Offset: 0xFE35F0
    static void Clear();
    // static public System.Void Request(System.String url)
    // Offset: 0xFE3660
    static void Request(::StringW url);
    // static public System.Void Request(System.String url, UnityHttp.OnHttpEvent onDone)
    // Offset: 0xFE377C
    static void Request(::StringW url, ::UnityHttp::OnHttpEvent* onDone);
    // static public System.Void Request(System.String url, UnityHttp.OnHttpEvent onDone, System.Object extraData)
    // Offset: 0xFE37F4
    static void Request(::StringW url, ::UnityHttp::OnHttpEvent* onDone, ::Il2CppObject* extraData);
    // static public System.Void Request(System.String url, UnityHttp.OnHttpEvent onDone, UnityEngine.WWWForm form)
    // Offset: 0xFE36CC
    static void Request(::StringW url, ::UnityHttp::OnHttpEvent* onDone, ::UnityEngine::WWWForm* form);
    // static public System.String UrlEncode(System.String text)
    // Offset: 0xFE39EC
    static ::StringW UrlEncode(::StringW text);
    // static public System.String UrlDecode(System.String text)
    // Offset: 0xFE3A54
    static ::StringW UrlDecode(::StringW text);
    // static public System.Void Update()
    // Offset: 0xFE3ABC
    static void Update();
    // static public System.Void Flush()
    // Offset: 0xFE3B7C
    static void Flush();
    // static public System.Void UpdateWaitingList()
    // Offset: 0xFE3FDC
    static void UpdateWaitingList();
    // static public System.Void Queue(UnityHttp.HttpRequest request)
    // Offset: 0xFE41FC
    static void Queue(::UnityHttp::HttpRequest* request);
    // static private System.Void .cctor()
    // Offset: 0xFE43F4
    static void _cctor();
  }; // UnityHttp.Http
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: UnityHttp::Http::SetRate
// Il2CppName: SetRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&UnityHttp::Http::SetRate)> {
  static const MethodInfo* get() {
    static auto* fps = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "SetRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fps});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityHttp::Http::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::Request
// Il2CppName: Request
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&UnityHttp::Http::Request)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "Request", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::Request
// Il2CppName: Request
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityHttp::OnHttpEvent*)>(&UnityHttp::Http::Request)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onDone = &::il2cpp_utils::GetClassFromName("UnityHttp", "OnHttpEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "Request", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, onDone});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::Request
// Il2CppName: Request
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityHttp::OnHttpEvent*, ::Il2CppObject*)>(&UnityHttp::Http::Request)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onDone = &::il2cpp_utils::GetClassFromName("UnityHttp", "OnHttpEvent")->byval_arg;
    static auto* extraData = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "Request", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, onDone, extraData});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::Request
// Il2CppName: Request
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityHttp::OnHttpEvent*, ::UnityEngine::WWWForm*)>(&UnityHttp::Http::Request)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* onDone = &::il2cpp_utils::GetClassFromName("UnityHttp", "OnHttpEvent")->byval_arg;
    static auto* form = &::il2cpp_utils::GetClassFromName("UnityEngine", "WWWForm")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "Request", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, onDone, form});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::UrlEncode
// Il2CppName: UrlEncode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&UnityHttp::Http::UrlEncode)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "UrlEncode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::UrlDecode
// Il2CppName: UrlDecode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&UnityHttp::Http::UrlDecode)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "UrlDecode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityHttp::Http::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::Flush
// Il2CppName: Flush
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityHttp::Http::Flush)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "Flush", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::UpdateWaitingList
// Il2CppName: UpdateWaitingList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityHttp::Http::UpdateWaitingList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "UpdateWaitingList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::Queue
// Il2CppName: Queue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityHttp::HttpRequest*)>(&UnityHttp::Http::Queue)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("UnityHttp", "HttpRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), "Queue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: UnityHttp::Http::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnityHttp::Http::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityHttp::Http*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
