// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: CodeStage.AntiCheat.Detectors.InjectionDetector
#include "CodeStage/AntiCheat/Detectors/InjectionDetector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::CodeStage::AntiCheat::Detectors::InjectionDetector::AllowedAssembly);
DEFINE_IL2CPP_ARG_TYPE(::CodeStage::AntiCheat::Detectors::InjectionDetector::AllowedAssembly*, "CodeStage.AntiCheat.Detectors", "InjectionDetector/AllowedAssembly");
// Type namespace: CodeStage.AntiCheat.Detectors
namespace CodeStage::AntiCheat::Detectors {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: CodeStage.AntiCheat.Detectors.InjectionDetector/AllowedAssembly
  // [TokenAttribute] Offset: FFFFFFFF
  class InjectionDetector::AllowedAssembly : public ::Il2CppObject {
    public:
    public:
    // public readonly System.String name
    // Size: 0x8
    // Offset: 0x10
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public readonly System.Int32[] hashes
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<int> hashes;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    public:
    // Get instance field reference: public readonly System.String name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
    // Get instance field reference: public readonly System.Int32[] hashes
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_hashes();
    // public System.Void .ctor(System.String name, System.Int32[] hashes)
    // Offset: 0x1E5D60C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InjectionDetector::AllowedAssembly* New_ctor(::StringW name, ::ArrayW<int> hashes) {
      static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::InjectionDetector::AllowedAssembly::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InjectionDetector::AllowedAssembly*, creationType>(name, hashes)));
    }
  }; // CodeStage.AntiCheat.Detectors.InjectionDetector/AllowedAssembly
  #pragma pack(pop)
  static check_size<sizeof(InjectionDetector::AllowedAssembly), 24 + sizeof(::ArrayW<int>)> __CodeStage_AntiCheat_Detectors_InjectionDetector_AllowedAssemblySizeCheck;
  static_assert(sizeof(InjectionDetector::AllowedAssembly) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::InjectionDetector::AllowedAssembly::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
