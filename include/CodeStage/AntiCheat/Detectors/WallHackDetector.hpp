// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: CodeStage.AntiCheat.Detectors.ActDetectorBase
#include "CodeStage/AntiCheat/Detectors/ActDetectorBase.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: CodeStage::AntiCheat::Detectors
namespace CodeStage::AntiCheat::Detectors {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: WaitForEndOfFrame
  class WaitForEndOfFrame;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: MeshRenderer
  class MeshRenderer;
  // Forward declaring type: Shader
  class Shader;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: RenderTexture
  class RenderTexture;
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: CharacterController
  class CharacterController;
  // Forward declaring type: Color32
  struct Color32;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityAction
  class UnityAction;
}
// Forward declaring namespace: UnityEngine::SceneManagement
namespace UnityEngine::SceneManagement {
  // Forward declaring type: Scene
  struct Scene;
  // Forward declaring type: LoadSceneMode
  struct LoadSceneMode;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: CodeStage.AntiCheat.Detectors
namespace CodeStage::AntiCheat::Detectors {
  // Forward declaring type: WallHackDetector
  class WallHackDetector;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::CodeStage::AntiCheat::Detectors::WallHackDetector);
DEFINE_IL2CPP_ARG_TYPE(::CodeStage::AntiCheat::Detectors::WallHackDetector*, "CodeStage.AntiCheat.Detectors", "WallHackDetector");
// Type namespace: CodeStage.AntiCheat.Detectors
namespace CodeStage::AntiCheat::Detectors {
  // Size: 0x101
  #pragma pack(push, 1)
  // Autogenerated type: CodeStage.AntiCheat.Detectors.WallHackDetector
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: AC2334
  class WallHackDetector : public ::CodeStage::AntiCheat::Detectors::ActDetectorBase {
    public:
    // Writing base type padding for base size: 0x33 to desired offset: 0x34
    char ___base_padding[0x1] = {};
    // Nested type: ::CodeStage::AntiCheat::Detectors::WallHackDetector::$InitDetector$d__78
    class $InitDetector$d__78;
    // Nested type: ::CodeStage::AntiCheat::Detectors::WallHackDetector::$CaptureFrame$d__83
    class $CaptureFrame$d__83;
    public:
    // private readonly UnityEngine.Vector3 rigidPlayerVelocity
    // Size: 0xC
    // Offset: 0x34
    ::UnityEngine::Vector3 rigidPlayerVelocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // private readonly UnityEngine.WaitForEndOfFrame waitForEndOfFrame
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::WaitForEndOfFrame* waitForEndOfFrame;
    // Field size check
    static_assert(sizeof(::UnityEngine::WaitForEndOfFrame*) == 0x8);
    // [TooltipAttribute] Offset: 0xAC6C28
    // private System.Boolean checkRigidbody
    // Size: 0x1
    // Offset: 0x48
    bool checkRigidbody;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [TooltipAttribute] Offset: 0xAC6C74
    // private System.Boolean checkController
    // Size: 0x1
    // Offset: 0x49
    bool checkController;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [TooltipAttribute] Offset: 0xAC6CC0
    // private System.Boolean checkWireframe
    // Size: 0x1
    // Offset: 0x4A
    bool checkWireframe;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [TooltipAttribute] Offset: 0xAC6D0C
    // private System.Boolean checkRaycast
    // Size: 0x1
    // Offset: 0x4B
    bool checkRaycast;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [TooltipAttribute] Offset: 0xAC6D58
    // [RangeAttribute] Offset: 0xAC6D58
    // public System.Int32 wireframeDelay
    // Size: 0x4
    // Offset: 0x4C
    int wireframeDelay;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [TooltipAttribute] Offset: 0xAC6DB0
    // [RangeAttribute] Offset: 0xAC6DB0
    // public System.Int32 raycastDelay
    // Size: 0x4
    // Offset: 0x50
    int raycastDelay;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [TooltipAttribute] Offset: 0xAC6E08
    // public UnityEngine.Vector3 spawnPosition
    // Size: 0xC
    // Offset: 0x54
    ::UnityEngine::Vector3 spawnPosition;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // [TooltipAttribute] Offset: 0xAC6E40
    // public System.Byte maxFalsePositives
    // Size: 0x1
    // Offset: 0x60
    uint8_t maxFalsePositives;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: maxFalsePositives and: serviceContainer
    char __padding9[0x7] = {};
    // private UnityEngine.GameObject serviceContainer
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::GameObject* serviceContainer;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject solidWall
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::GameObject* solidWall;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.GameObject thinWall
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::GameObject* thinWall;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.Camera wfCamera
    // Size: 0x8
    // Offset: 0x80
    ::UnityEngine::Camera* wfCamera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // private UnityEngine.MeshRenderer foregroundRenderer
    // Size: 0x8
    // Offset: 0x88
    ::UnityEngine::MeshRenderer* foregroundRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshRenderer*) == 0x8);
    // private UnityEngine.MeshRenderer backgroundRenderer
    // Size: 0x8
    // Offset: 0x90
    ::UnityEngine::MeshRenderer* backgroundRenderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::MeshRenderer*) == 0x8);
    // private UnityEngine.Color wfColor1
    // Size: 0x10
    // Offset: 0x98
    ::UnityEngine::Color wfColor1;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color wfColor2
    // Size: 0x10
    // Offset: 0xA8
    ::UnityEngine::Color wfColor2;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Shader wfShader
    // Size: 0x8
    // Offset: 0xB8
    ::UnityEngine::Shader* wfShader;
    // Field size check
    static_assert(sizeof(::UnityEngine::Shader*) == 0x8);
    // private UnityEngine.Material wfMaterial
    // Size: 0x8
    // Offset: 0xC0
    ::UnityEngine::Material* wfMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private UnityEngine.Texture2D shaderTexture
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::Texture2D* shaderTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private UnityEngine.Texture2D targetTexture
    // Size: 0x8
    // Offset: 0xD0
    ::UnityEngine::Texture2D* targetTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private UnityEngine.RenderTexture renderTexture
    // Size: 0x8
    // Offset: 0xD8
    ::UnityEngine::RenderTexture* renderTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // private System.Int32 whLayer
    // Size: 0x4
    // Offset: 0xE0
    int whLayer;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Int32 raycastMask
    // Size: 0x4
    // Offset: 0xE4
    int raycastMask;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private UnityEngine.Rigidbody rigidPlayer
    // Size: 0x8
    // Offset: 0xE8
    ::UnityEngine::Rigidbody* rigidPlayer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    // private UnityEngine.CharacterController charControllerPlayer
    // Size: 0x8
    // Offset: 0xF0
    ::UnityEngine::CharacterController* charControllerPlayer;
    // Field size check
    static_assert(sizeof(::UnityEngine::CharacterController*) == 0x8);
    // private System.Single charControllerVelocity
    // Size: 0x4
    // Offset: 0xF8
    float charControllerVelocity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Byte rigidbodyDetections
    // Size: 0x1
    // Offset: 0xFC
    uint8_t rigidbodyDetections;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte controllerDetections
    // Size: 0x1
    // Offset: 0xFD
    uint8_t controllerDetections;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte wireframeDetections
    // Size: 0x1
    // Offset: 0xFE
    uint8_t wireframeDetections;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Byte raycastDetections
    // Size: 0x1
    // Offset: 0xFF
    uint8_t raycastDetections;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // private System.Boolean wireframeDetected
    // Size: 0x1
    // Offset: 0x100
    bool wireframeDetected;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // static field const value: static System.String COMPONENT_NAME
    static constexpr const char* COMPONENT_NAME = "WallHack Detector";
    // Get static field: static System.String COMPONENT_NAME
    static ::StringW _get_COMPONENT_NAME();
    // Set static field: static System.String COMPONENT_NAME
    static void _set_COMPONENT_NAME(::StringW value);
    // static field const value: static System.String FINAL_LOG_PREFIX
    static constexpr const char* FINAL_LOG_PREFIX = "[ACTk] WallHack Detector: ";
    // Get static field: static System.String FINAL_LOG_PREFIX
    static ::StringW _get_FINAL_LOG_PREFIX();
    // Set static field: static System.String FINAL_LOG_PREFIX
    static void _set_FINAL_LOG_PREFIX(::StringW value);
    // static field const value: static private System.String SERVICE_CONTAINER_NAME
    static constexpr const char* SERVICE_CONTAINER_NAME = "[WH Detector Service]";
    // Get static field: static private System.String SERVICE_CONTAINER_NAME
    static ::StringW _get_SERVICE_CONTAINER_NAME();
    // Set static field: static private System.String SERVICE_CONTAINER_NAME
    static void _set_SERVICE_CONTAINER_NAME(::StringW value);
    // static field const value: static private System.String WIREFRAME_SHADER_NAME
    static constexpr const char* WIREFRAME_SHADER_NAME = "Hidden/ACTk/WallHackTexture";
    // Get static field: static private System.String WIREFRAME_SHADER_NAME
    static ::StringW _get_WIREFRAME_SHADER_NAME();
    // Set static field: static private System.String WIREFRAME_SHADER_NAME
    static void _set_WIREFRAME_SHADER_NAME(::StringW value);
    // static field const value: static private System.Int32 SHADER_TEXTURE_SIZE
    static constexpr const int SHADER_TEXTURE_SIZE = 4;
    // Get static field: static private System.Int32 SHADER_TEXTURE_SIZE
    static int _get_SHADER_TEXTURE_SIZE();
    // Set static field: static private System.Int32 SHADER_TEXTURE_SIZE
    static void _set_SHADER_TEXTURE_SIZE(int value);
    // static field const value: static private System.Int32 RENDER_TEXTURE_SIZE
    static constexpr const int RENDER_TEXTURE_SIZE = 4;
    // Get static field: static private System.Int32 RENDER_TEXTURE_SIZE
    static int _get_RENDER_TEXTURE_SIZE();
    // Set static field: static private System.Int32 RENDER_TEXTURE_SIZE
    static void _set_RENDER_TEXTURE_SIZE(int value);
    // Get static field: static private System.Int32 instancesInScene
    static int _get_instancesInScene();
    // Set static field: static private System.Int32 instancesInScene
    static void _set_instancesInScene(int value);
    // [CompilerGeneratedAttribute] Offset: 0xAC6E78
    // Get static field: static private CodeStage.AntiCheat.Detectors.WallHackDetector <Instance>k__BackingField
    static ::CodeStage::AntiCheat::Detectors::WallHackDetector* _get_$Instance$k__BackingField();
    // Set static field: static private CodeStage.AntiCheat.Detectors.WallHackDetector <Instance>k__BackingField
    static void _set_$Instance$k__BackingField(::CodeStage::AntiCheat::Detectors::WallHackDetector* value);
    // Get instance field reference: private readonly UnityEngine.Vector3 rigidPlayerVelocity
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_rigidPlayerVelocity();
    // Get instance field reference: private readonly UnityEngine.WaitForEndOfFrame waitForEndOfFrame
    [[deprecated("Use field access instead!")]] ::UnityEngine::WaitForEndOfFrame*& dyn_waitForEndOfFrame();
    // Get instance field reference: private System.Boolean checkRigidbody
    [[deprecated("Use field access instead!")]] bool& dyn_checkRigidbody();
    // Get instance field reference: private System.Boolean checkController
    [[deprecated("Use field access instead!")]] bool& dyn_checkController();
    // Get instance field reference: private System.Boolean checkWireframe
    [[deprecated("Use field access instead!")]] bool& dyn_checkWireframe();
    // Get instance field reference: private System.Boolean checkRaycast
    [[deprecated("Use field access instead!")]] bool& dyn_checkRaycast();
    // Get instance field reference: public System.Int32 wireframeDelay
    [[deprecated("Use field access instead!")]] int& dyn_wireframeDelay();
    // Get instance field reference: public System.Int32 raycastDelay
    [[deprecated("Use field access instead!")]] int& dyn_raycastDelay();
    // Get instance field reference: public UnityEngine.Vector3 spawnPosition
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_spawnPosition();
    // Get instance field reference: public System.Byte maxFalsePositives
    [[deprecated("Use field access instead!")]] uint8_t& dyn_maxFalsePositives();
    // Get instance field reference: private UnityEngine.GameObject serviceContainer
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_serviceContainer();
    // Get instance field reference: private UnityEngine.GameObject solidWall
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_solidWall();
    // Get instance field reference: private UnityEngine.GameObject thinWall
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_thinWall();
    // Get instance field reference: private UnityEngine.Camera wfCamera
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_wfCamera();
    // Get instance field reference: private UnityEngine.MeshRenderer foregroundRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& dyn_foregroundRenderer();
    // Get instance field reference: private UnityEngine.MeshRenderer backgroundRenderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& dyn_backgroundRenderer();
    // Get instance field reference: private UnityEngine.Color wfColor1
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_wfColor1();
    // Get instance field reference: private UnityEngine.Color wfColor2
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_wfColor2();
    // Get instance field reference: private UnityEngine.Shader wfShader
    [[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& dyn_wfShader();
    // Get instance field reference: private UnityEngine.Material wfMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_wfMaterial();
    // Get instance field reference: private UnityEngine.Texture2D shaderTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_shaderTexture();
    // Get instance field reference: private UnityEngine.Texture2D targetTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_targetTexture();
    // Get instance field reference: private UnityEngine.RenderTexture renderTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& dyn_renderTexture();
    // Get instance field reference: private System.Int32 whLayer
    [[deprecated("Use field access instead!")]] int& dyn_whLayer();
    // Get instance field reference: private System.Int32 raycastMask
    [[deprecated("Use field access instead!")]] int& dyn_raycastMask();
    // Get instance field reference: private UnityEngine.Rigidbody rigidPlayer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_rigidPlayer();
    // Get instance field reference: private UnityEngine.CharacterController charControllerPlayer
    [[deprecated("Use field access instead!")]] ::UnityEngine::CharacterController*& dyn_charControllerPlayer();
    // Get instance field reference: private System.Single charControllerVelocity
    [[deprecated("Use field access instead!")]] float& dyn_charControllerVelocity();
    // Get instance field reference: private System.Byte rigidbodyDetections
    [[deprecated("Use field access instead!")]] uint8_t& dyn_rigidbodyDetections();
    // Get instance field reference: private System.Byte controllerDetections
    [[deprecated("Use field access instead!")]] uint8_t& dyn_controllerDetections();
    // Get instance field reference: private System.Byte wireframeDetections
    [[deprecated("Use field access instead!")]] uint8_t& dyn_wireframeDetections();
    // Get instance field reference: private System.Byte raycastDetections
    [[deprecated("Use field access instead!")]] uint8_t& dyn_raycastDetections();
    // Get instance field reference: private System.Boolean wireframeDetected
    [[deprecated("Use field access instead!")]] bool& dyn_wireframeDetected();
    // public System.Boolean get_CheckRigidbody()
    // Offset: 0x1E61678
    bool get_CheckRigidbody();
    // public System.Void set_CheckRigidbody(System.Boolean value)
    // Offset: 0x1E61680
    void set_CheckRigidbody(bool value);
    // public System.Boolean get_CheckController()
    // Offset: 0x1E630B4
    bool get_CheckController();
    // public System.Void set_CheckController(System.Boolean value)
    // Offset: 0x1E630BC
    void set_CheckController(bool value);
    // public System.Boolean get_CheckWireframe()
    // Offset: 0x1E63394
    bool get_CheckWireframe();
    // public System.Void set_CheckWireframe(System.Boolean value)
    // Offset: 0x1E6339C
    void set_CheckWireframe(bool value);
    // public System.Boolean get_CheckRaycast()
    // Offset: 0x1E63548
    bool get_CheckRaycast();
    // public System.Void set_CheckRaycast(System.Boolean value)
    // Offset: 0x1E63550
    void set_CheckRaycast(bool value);
    // static public System.Void StartDetection()
    // Offset: 0x1E636E8
    static void StartDetection();
    // static public System.Void StartDetection(UnityEngine.Events.UnityAction callback)
    // Offset: 0x1E63AC4
    static void StartDetection(::UnityEngine::Events::UnityAction* callback);
    // static public System.Void StartDetection(UnityEngine.Events.UnityAction callback, UnityEngine.Vector3 spawnPosition)
    // Offset: 0x1E63CB4
    static void StartDetection(::UnityEngine::Events::UnityAction* callback, ::UnityEngine::Vector3 spawnPosition);
    // static public System.Void StartDetection(UnityEngine.Events.UnityAction callback, UnityEngine.Vector3 spawnPosition, System.Byte maxFalsePositives)
    // Offset: 0x1E63D10
    static void StartDetection(::UnityEngine::Events::UnityAction* callback, ::UnityEngine::Vector3 spawnPosition, uint8_t maxFalsePositives);
    // static public System.Void StopDetection()
    // Offset: 0x1E63D7C
    static void StopDetection();
    // static public System.Void Dispose()
    // Offset: 0x1E63E80
    static void Dispose();
    // static public CodeStage.AntiCheat.Detectors.WallHackDetector get_Instance()
    // Offset: 0x1E6389C
    static ::CodeStage::AntiCheat::Detectors::WallHackDetector* get_Instance();
    // static private System.Void set_Instance(CodeStage.AntiCheat.Detectors.WallHackDetector value)
    // Offset: 0x1E63F84
    static void set_Instance(::CodeStage::AntiCheat::Detectors::WallHackDetector* value);
    // static private CodeStage.AntiCheat.Detectors.WallHackDetector get_GetOrCreateInstance()
    // Offset: 0x1E63AFC
    static ::CodeStage::AntiCheat::Detectors::WallHackDetector* get_GetOrCreateInstance();
    // private System.Void Awake()
    // Offset: 0x1E640D0
    void Awake();
    // private System.Void OnLevelWasLoadedNew(UnityEngine.SceneManagement.Scene scene, UnityEngine.SceneManagement.LoadSceneMode mode)
    // Offset: 0x1E643A0
    void OnLevelWasLoadedNew(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode);
    // private System.Void OnLevelLoadedCallback()
    // Offset: 0x1E643A4
    void OnLevelLoadedCallback();
    // private System.Void FixedUpdate()
    // Offset: 0x1E64498
    void FixedUpdate();
    // private System.Void Update()
    // Offset: 0x1E645EC
    void Update();
    // private System.Void StartDetectionInternal(UnityEngine.Events.UnityAction callback, UnityEngine.Vector3 servicePosition, System.Byte falsePositivesInRow)
    // Offset: 0x1E638EC
    void StartDetectionInternal(::UnityEngine::Events::UnityAction* callback, ::UnityEngine::Vector3 servicePosition, uint8_t falsePositivesInRow);
    // private System.Void UpdateServiceContainer()
    // Offset: 0x1E61748
    void UpdateServiceContainer();
    // private System.Collections.IEnumerator InitDetector()
    // Offset: 0x1E64748
    ::System::Collections::IEnumerator* InitDetector();
    // private System.Void StartRigidModule()
    // Offset: 0x1E62D40
    void StartRigidModule();
    // private System.Void StartControllerModule()
    // Offset: 0x1E63184
    void StartControllerModule();
    // private System.Void StartWireframeModule()
    // Offset: 0x1E63464
    void StartWireframeModule();
    // private System.Void ShootWireframeModule()
    // Offset: 0x1E65088
    void ShootWireframeModule();
    // private System.Collections.IEnumerator CaptureFrame()
    // Offset: 0x1E650FC
    ::System::Collections::IEnumerator* CaptureFrame();
    // private System.Void StartRaycastModule()
    // Offset: 0x1E63618
    void StartRaycastModule();
    // private System.Void ShootRaycastModule()
    // Offset: 0x1E6519C
    void ShootRaycastModule();
    // private System.Void StopRigidModule()
    // Offset: 0x1E62FC0
    void StopRigidModule();
    // private System.Void StopControllerModule()
    // Offset: 0x1E63308
    void StopControllerModule();
    // private System.Void StopWireframeModule()
    // Offset: 0x1E634F4
    void StopWireframeModule();
    // private System.Void StopRaycastModule()
    // Offset: 0x1E63694
    void StopRaycastModule();
    // private System.Void InitRigidModule()
    // Offset: 0x1E64C2C
    void InitRigidModule();
    // private System.Void InitControllerModule()
    // Offset: 0x1E64ECC
    void InitControllerModule();
    // private System.Void UninitRigidModule()
    // Offset: 0x1E64B64
    void UninitRigidModule();
    // private System.Void UninitControllerModule()
    // Offset: 0x1E64E04
    void UninitControllerModule();
    // private System.Boolean Detect()
    // Offset: 0x1E64590
    bool Detect();
    // static private UnityEngine.Color32 GenerateColor()
    // Offset: 0x1E649C4
    static ::UnityEngine::Color32 GenerateColor();
    // static private System.Boolean ColorsSimilar(UnityEngine.Color32 c1, UnityEngine.Color32 c2, System.Int32 tolerance)
    // Offset: 0x1E64A40
    static bool ColorsSimilar(::UnityEngine::Color32 c1, ::UnityEngine::Color32 c2, int tolerance);
    // private System.Void .ctor()
    // Offset: 0x1E63FD8
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WallHackDetector* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::WallHackDetector::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WallHackDetector*, creationType>()));
    }
    // protected override System.Void OnDestroy()
    // Offset: 0x1E64210
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::OnDestroy()
    void OnDestroy();
    // protected override System.Void StartDetectionAutomatically()
    // Offset: 0x1E647BC
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::StartDetectionAutomatically()
    void StartDetectionAutomatically();
    // protected override System.Void PauseDetector()
    // Offset: 0x1E647D0
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::PauseDetector()
    void PauseDetector();
    // protected override System.Void ResumeDetector()
    // Offset: 0x1E64820
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::ResumeDetector()
    void ResumeDetector();
    // protected override System.Void StopDetectionInternal()
    // Offset: 0x1E6489C
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::StopDetectionInternal()
    void StopDetectionInternal();
    // protected override System.Void DisposeInternal()
    // Offset: 0x1E648D8
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::DisposeInternal()
    void DisposeInternal();
  }; // CodeStage.AntiCheat.Detectors.WallHackDetector
  #pragma pack(pop)
  static check_size<sizeof(WallHackDetector), 256 + sizeof(bool)> __CodeStage_AntiCheat_Detectors_WallHackDetectorSizeCheck;
  static_assert(sizeof(WallHackDetector) == 0x101);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckRigidbody
// Il2CppName: get_CheckRigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckRigidbody)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "get_CheckRigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckRigidbody
// Il2CppName: set_CheckRigidbody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)(bool)>(&CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckRigidbody)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "set_CheckRigidbody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckController
// Il2CppName: get_CheckController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckController)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "get_CheckController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckController
// Il2CppName: set_CheckController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)(bool)>(&CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckController)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "set_CheckController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckWireframe
// Il2CppName: get_CheckWireframe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckWireframe)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "get_CheckWireframe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckWireframe
// Il2CppName: set_CheckWireframe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)(bool)>(&CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckWireframe)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "set_CheckWireframe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckRaycast
// Il2CppName: get_CheckRaycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::get_CheckRaycast)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "get_CheckRaycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckRaycast
// Il2CppName: set_CheckRaycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)(bool)>(&CodeStage::AntiCheat::Detectors::WallHackDetector::set_CheckRaycast)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "set_CheckRaycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection
// Il2CppName: StartDetection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StartDetection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection
// Il2CppName: StartDetection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Events::UnityAction*)>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StartDetection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection
// Il2CppName: StartDetection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Events::UnityAction*, ::UnityEngine::Vector3)>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    static auto* spawnPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StartDetection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, spawnPosition});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection
// Il2CppName: StartDetection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Events::UnityAction*, ::UnityEngine::Vector3, uint8_t)>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetection)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    static auto* spawnPosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* maxFalsePositives = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StartDetection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, spawnPosition, maxFalsePositives});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StopDetection
// Il2CppName: StopDetection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StopDetection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StopDetection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::get_Instance
// Il2CppName: get_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::CodeStage::AntiCheat::Detectors::WallHackDetector* (*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::get_Instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "get_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::set_Instance
// Il2CppName: set_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::CodeStage::AntiCheat::Detectors::WallHackDetector*)>(&CodeStage::AntiCheat::Detectors::WallHackDetector::set_Instance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("CodeStage.AntiCheat.Detectors", "WallHackDetector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "set_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::get_GetOrCreateInstance
// Il2CppName: get_GetOrCreateInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::CodeStage::AntiCheat::Detectors::WallHackDetector* (*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::get_GetOrCreateInstance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "get_GetOrCreateInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::OnLevelWasLoadedNew
// Il2CppName: OnLevelWasLoadedNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)(::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode)>(&CodeStage::AntiCheat::Detectors::WallHackDetector::OnLevelWasLoadedNew)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "LoadSceneMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "OnLevelWasLoadedNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, mode});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::OnLevelLoadedCallback
// Il2CppName: OnLevelLoadedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::OnLevelLoadedCallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "OnLevelLoadedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::FixedUpdate
// Il2CppName: FixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::FixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "FixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetectionInternal
// Il2CppName: StartDetectionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)(::UnityEngine::Events::UnityAction*, ::UnityEngine::Vector3, uint8_t)>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetectionInternal)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    static auto* servicePosition = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* falsePositivesInRow = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StartDetectionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, servicePosition, falsePositivesInRow});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::UpdateServiceContainer
// Il2CppName: UpdateServiceContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::UpdateServiceContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "UpdateServiceContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::InitDetector
// Il2CppName: InitDetector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::InitDetector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "InitDetector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StartRigidModule
// Il2CppName: StartRigidModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StartRigidModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StartRigidModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StartControllerModule
// Il2CppName: StartControllerModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StartControllerModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StartControllerModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StartWireframeModule
// Il2CppName: StartWireframeModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StartWireframeModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StartWireframeModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::ShootWireframeModule
// Il2CppName: ShootWireframeModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::ShootWireframeModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "ShootWireframeModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::CaptureFrame
// Il2CppName: CaptureFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::CaptureFrame)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "CaptureFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StartRaycastModule
// Il2CppName: StartRaycastModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StartRaycastModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StartRaycastModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::ShootRaycastModule
// Il2CppName: ShootRaycastModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::ShootRaycastModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "ShootRaycastModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StopRigidModule
// Il2CppName: StopRigidModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StopRigidModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StopRigidModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StopControllerModule
// Il2CppName: StopControllerModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StopControllerModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StopControllerModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StopWireframeModule
// Il2CppName: StopWireframeModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StopWireframeModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StopWireframeModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StopRaycastModule
// Il2CppName: StopRaycastModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StopRaycastModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StopRaycastModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::InitRigidModule
// Il2CppName: InitRigidModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::InitRigidModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "InitRigidModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::InitControllerModule
// Il2CppName: InitControllerModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::InitControllerModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "InitControllerModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::UninitRigidModule
// Il2CppName: UninitRigidModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::UninitRigidModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "UninitRigidModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::UninitControllerModule
// Il2CppName: UninitControllerModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::UninitControllerModule)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "UninitControllerModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::Detect
// Il2CppName: Detect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::Detect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "Detect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::GenerateColor
// Il2CppName: GenerateColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color32 (*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::GenerateColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "GenerateColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::ColorsSimilar
// Il2CppName: ColorsSimilar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::Color32, ::UnityEngine::Color32, int)>(&CodeStage::AntiCheat::Detectors::WallHackDetector::ColorsSimilar)> {
  static const MethodInfo* get() {
    static auto* c1 = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color32")->byval_arg;
    static auto* c2 = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color32")->byval_arg;
    static auto* tolerance = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "ColorsSimilar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c1, c2, tolerance});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetectionAutomatically
// Il2CppName: StartDetectionAutomatically
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StartDetectionAutomatically)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StartDetectionAutomatically", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::PauseDetector
// Il2CppName: PauseDetector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::PauseDetector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "PauseDetector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::ResumeDetector
// Il2CppName: ResumeDetector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::ResumeDetector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "ResumeDetector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::StopDetectionInternal
// Il2CppName: StopDetectionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::StopDetectionInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "StopDetectionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::WallHackDetector::DisposeInternal
// Il2CppName: DisposeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::WallHackDetector::*)()>(&CodeStage::AntiCheat::Detectors::WallHackDetector::DisposeInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::WallHackDetector*), "DisposeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
