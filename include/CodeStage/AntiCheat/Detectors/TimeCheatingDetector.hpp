// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: CodeStage.AntiCheat.Detectors.ActDetectorBase
#include "CodeStage/AntiCheat/Detectors/ActDetectorBase.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Net::Sockets
namespace System::Net::Sockets {
  // Forward declaring type: Socket
  class Socket;
  // Forward declaring type: SocketAsyncEventArgs
  class SocketAsyncEventArgs;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: System::Net
namespace System::Net {
  // Forward declaring type: IPEndPoint
  class IPEndPoint;
}
// Forward declaring namespace: UnityEngine::Events
namespace UnityEngine::Events {
  // Forward declaring type: UnityAction
  class UnityAction;
}
// Forward declaring namespace: UnityEngine::SceneManagement
namespace UnityEngine::SceneManagement {
  // Forward declaring type: Scene
  struct Scene;
  // Forward declaring type: LoadSceneMode
  struct LoadSceneMode;
}
// Completed forward declares
// Type namespace: CodeStage.AntiCheat.Detectors
namespace CodeStage::AntiCheat::Detectors {
  // Forward declaring type: TimeCheatingDetector
  class TimeCheatingDetector;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::CodeStage::AntiCheat::Detectors::TimeCheatingDetector);
DEFINE_IL2CPP_ARG_TYPE(::CodeStage::AntiCheat::Detectors::TimeCheatingDetector*, "CodeStage.AntiCheat.Detectors", "TimeCheatingDetector");
// Type namespace: CodeStage.AntiCheat.Detectors
namespace CodeStage::AntiCheat::Detectors {
  // Size: 0x90
  #pragma pack(push, 1)
  // Autogenerated type: CodeStage.AntiCheat.Detectors.TimeCheatingDetector
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: AC22FC
  class TimeCheatingDetector : public ::CodeStage::AntiCheat::Detectors::ActDetectorBase {
    public:
    // Writing base type padding for base size: 0x33 to desired offset: 0x38
    char ___base_padding[0x5] = {};
    public:
    // private readonly System.DateTime date1900
    // Size: 0x8
    // Offset: 0x38
    ::System::DateTime date1900;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // [TooltipAttribute] Offset: 0xAC6B88
    // [RangeAttribute] Offset: 0xAC6B88
    // public System.Int32 interval
    // Size: 0x4
    // Offset: 0x40
    int interval;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [TooltipAttribute] Offset: 0xAC6BE0
    // public System.Int32 threshold
    // Size: 0x4
    // Offset: 0x44
    int threshold;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Net.Sockets.Socket asyncSocket
    // Size: 0x8
    // Offset: 0x48
    ::System::Net::Sockets::Socket* asyncSocket;
    // Field size check
    static_assert(sizeof(::System::Net::Sockets::Socket*) == 0x8);
    // private System.Action`1<System.Double> getOnlineTimeCallback
    // Size: 0x8
    // Offset: 0x50
    ::System::Action_1<double>* getOnlineTimeCallback;
    // Field size check
    static_assert(sizeof(::System::Action_1<double>*) == 0x8);
    // private System.String targetHost
    // Size: 0x8
    // Offset: 0x58
    ::StringW targetHost;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Byte[] targetIP
    // Size: 0x8
    // Offset: 0x60
    ::ArrayW<uint8_t> targetIP;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Net.IPEndPoint targetEndpoint
    // Size: 0x8
    // Offset: 0x68
    ::System::Net::IPEndPoint* targetEndpoint;
    // Field size check
    static_assert(sizeof(::System::Net::IPEndPoint*) == 0x8);
    // private System.Byte[] ntpData
    // Size: 0x8
    // Offset: 0x70
    ::ArrayW<uint8_t> ntpData;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Net.Sockets.SocketAsyncEventArgs connectArgs
    // Size: 0x8
    // Offset: 0x78
    ::System::Net::Sockets::SocketAsyncEventArgs* connectArgs;
    // Field size check
    static_assert(sizeof(::System::Net::Sockets::SocketAsyncEventArgs*) == 0x8);
    // private System.Net.Sockets.SocketAsyncEventArgs sendArgs
    // Size: 0x8
    // Offset: 0x80
    ::System::Net::Sockets::SocketAsyncEventArgs* sendArgs;
    // Field size check
    static_assert(sizeof(::System::Net::Sockets::SocketAsyncEventArgs*) == 0x8);
    // private System.Net.Sockets.SocketAsyncEventArgs receiveArgs
    // Size: 0x8
    // Offset: 0x88
    ::System::Net::Sockets::SocketAsyncEventArgs* receiveArgs;
    // Field size check
    static_assert(sizeof(::System::Net::Sockets::SocketAsyncEventArgs*) == 0x8);
    public:
    // static field const value: static System.String COMPONENT_NAME
    static constexpr const char* COMPONENT_NAME = "Time Cheating Detector";
    // Get static field: static System.String COMPONENT_NAME
    static ::StringW _get_COMPONENT_NAME();
    // Set static field: static System.String COMPONENT_NAME
    static void _set_COMPONENT_NAME(::StringW value);
    // static field const value: static private System.String FINAL_LOG_PREFIX
    static constexpr const char* FINAL_LOG_PREFIX = "[ACTk] Time Cheating Detector: ";
    // Get static field: static private System.String FINAL_LOG_PREFIX
    static ::StringW _get_FINAL_LOG_PREFIX();
    // Set static field: static private System.String FINAL_LOG_PREFIX
    static void _set_FINAL_LOG_PREFIX(::StringW value);
    // static field const value: static private System.String TIME_SERVER
    static constexpr const char* TIME_SERVER = "pool.ntp.org";
    // Get static field: static private System.String TIME_SERVER
    static ::StringW _get_TIME_SERVER();
    // Set static field: static private System.String TIME_SERVER
    static void _set_TIME_SERVER(::StringW value);
    // static field const value: static private System.Int32 NTP_DATA_BUFFER_LENGTH
    static constexpr const int NTP_DATA_BUFFER_LENGTH = 48;
    // Get static field: static private System.Int32 NTP_DATA_BUFFER_LENGTH
    static int _get_NTP_DATA_BUFFER_LENGTH();
    // Set static field: static private System.Int32 NTP_DATA_BUFFER_LENGTH
    static void _set_NTP_DATA_BUFFER_LENGTH(int value);
    // Get static field: static private System.Int32 instancesInScene
    static int _get_instancesInScene();
    // Set static field: static private System.Int32 instancesInScene
    static void _set_instancesInScene(int value);
    // [CompilerGeneratedAttribute] Offset: 0xAC6C18
    // Get static field: static private CodeStage.AntiCheat.Detectors.TimeCheatingDetector <Instance>k__BackingField
    static ::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* _get_$Instance$k__BackingField();
    // Set static field: static private CodeStage.AntiCheat.Detectors.TimeCheatingDetector <Instance>k__BackingField
    static void _set_$Instance$k__BackingField(::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* value);
    // Get instance field reference: private readonly System.DateTime date1900
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_date1900();
    // Get instance field reference: public System.Int32 interval
    [[deprecated("Use field access instead!")]] int& dyn_interval();
    // Get instance field reference: public System.Int32 threshold
    [[deprecated("Use field access instead!")]] int& dyn_threshold();
    // Get instance field reference: private System.Net.Sockets.Socket asyncSocket
    [[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& dyn_asyncSocket();
    // Get instance field reference: private System.Action`1<System.Double> getOnlineTimeCallback
    [[deprecated("Use field access instead!")]] ::System::Action_1<double>*& dyn_getOnlineTimeCallback();
    // Get instance field reference: private System.String targetHost
    [[deprecated("Use field access instead!")]] ::StringW& dyn_targetHost();
    // Get instance field reference: private System.Byte[] targetIP
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_targetIP();
    // Get instance field reference: private System.Net.IPEndPoint targetEndpoint
    [[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& dyn_targetEndpoint();
    // Get instance field reference: private System.Byte[] ntpData
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_ntpData();
    // Get instance field reference: private System.Net.Sockets.SocketAsyncEventArgs connectArgs
    [[deprecated("Use field access instead!")]] ::System::Net::Sockets::SocketAsyncEventArgs*& dyn_connectArgs();
    // Get instance field reference: private System.Net.Sockets.SocketAsyncEventArgs sendArgs
    [[deprecated("Use field access instead!")]] ::System::Net::Sockets::SocketAsyncEventArgs*& dyn_sendArgs();
    // Get instance field reference: private System.Net.Sockets.SocketAsyncEventArgs receiveArgs
    [[deprecated("Use field access instead!")]] ::System::Net::Sockets::SocketAsyncEventArgs*& dyn_receiveArgs();
    // static public System.Void StartDetection()
    // Offset: 0x1E5F2D4
    static void StartDetection();
    // static public System.Void StartDetection(UnityEngine.Events.UnityAction callback)
    // Offset: 0x1E5F61C
    static void StartDetection(::UnityEngine::Events::UnityAction* callback);
    // static public System.Void StartDetection(UnityEngine.Events.UnityAction callback, System.Int32 interval)
    // Offset: 0x1E5F808
    static void StartDetection(::UnityEngine::Events::UnityAction* callback, int interval);
    // static public System.Void StopDetection()
    // Offset: 0x1E5F84C
    static void StopDetection();
    // static public System.Void Dispose()
    // Offset: 0x1E5F950
    static void Dispose();
    // static public CodeStage.AntiCheat.Detectors.TimeCheatingDetector get_Instance()
    // Offset: 0x1E5F41C
    static ::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* get_Instance();
    // static private System.Void set_Instance(CodeStage.AntiCheat.Detectors.TimeCheatingDetector value)
    // Offset: 0x1E5FA54
    static void set_Instance(::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* value);
    // static private CodeStage.AntiCheat.Detectors.TimeCheatingDetector get_GetOrCreateInstance()
    // Offset: 0x1E5F650
    static ::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* get_GetOrCreateInstance();
    // private System.Void Awake()
    // Offset: 0x1E5FB5C
    void Awake();
    // private System.Void OnLevelWasLoadedNew(UnityEngine.SceneManagement.Scene scene, UnityEngine.SceneManagement.LoadSceneMode mode)
    // Offset: 0x1E5FD00
    void OnLevelWasLoadedNew(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode);
    // private System.Void OnLevelLoadedCallback()
    // Offset: 0x1E5FD04
    void OnLevelLoadedCallback();
    // private System.Void StartDetectionInternal(UnityEngine.Events.UnityAction callback, System.Int32 checkInterval)
    // Offset: 0x1E5F46C
    void StartDetectionInternal(::UnityEngine::Events::UnityAction* callback, int checkInterval);
    // private System.Void CheckForCheat()
    // Offset: 0x1E5FFC4
    void CheckForCheat();
    // private System.Void OnTimeGot(System.Double onlineTime)
    // Offset: 0x1E605A8
    void OnTimeGot(double onlineTime);
    // static public System.Double GetOnlineTime(System.String server)
    // Offset: 0x1E60778
    static double GetOnlineTime(::StringW server);
    // public System.Void GetOnlineTimeAsync(System.String server, System.Action`1<System.Double> callback)
    // Offset: 0x1E60060
    void GetOnlineTimeAsync(::StringW server, ::System::Action_1<double>* callback);
    // private System.Void OnSockedConnected(System.Object sender, System.Net.Sockets.SocketAsyncEventArgs e)
    // Offset: 0x1E60D0C
    void OnSockedConnected(::Il2CppObject* sender, ::System::Net::Sockets::SocketAsyncEventArgs* e);
    // private System.Void OnSocketSend(System.Object sender, System.Net.Sockets.SocketAsyncEventArgs e)
    // Offset: 0x1E6108C
    void OnSocketSend(::Il2CppObject* sender, ::System::Net::Sockets::SocketAsyncEventArgs* e);
    // private System.Void OnSocketReceive(System.Object sender, System.Net.Sockets.SocketAsyncEventArgs e)
    // Offset: 0x1E613FC
    void OnSocketReceive(::Il2CppObject* sender, ::System::Net::Sockets::SocketAsyncEventArgs* e);
    // private System.Double GetLocalTime()
    // Offset: 0x1E606E0
    double GetLocalTime();
    // private System.Void .ctor()
    // Offset: 0x1E5FAA8
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TimeCheatingDetector* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::Detectors::TimeCheatingDetector::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TimeCheatingDetector*, creationType>()));
    }
    // protected override System.Void OnDestroy()
    // Offset: 0x1E5FC9C
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::OnDestroy()
    void OnDestroy();
    // protected override System.Void StartDetectionAutomatically()
    // Offset: 0x1E5FDF8
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::StartDetectionAutomatically()
    void StartDetectionAutomatically();
    // protected override System.Void PauseDetector()
    // Offset: 0x1E5FE04
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::PauseDetector()
    void PauseDetector();
    // protected override System.Void ResumeDetector()
    // Offset: 0x1E5FE0C
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::ResumeDetector()
    void ResumeDetector();
    // protected override System.Void StopDetectionInternal()
    // Offset: 0x1E5FE28
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::StopDetectionInternal()
    void StopDetectionInternal();
    // protected override System.Void DisposeInternal()
    // Offset: 0x1E5FE90
    // Implemented from: CodeStage.AntiCheat.Detectors.ActDetectorBase
    // Base method: System.Void ActDetectorBase::DisposeInternal()
    void DisposeInternal();
  }; // CodeStage.AntiCheat.Detectors.TimeCheatingDetector
  #pragma pack(pop)
  static check_size<sizeof(TimeCheatingDetector), 136 + sizeof(::System::Net::Sockets::SocketAsyncEventArgs*)> __CodeStage_AntiCheat_Detectors_TimeCheatingDetectorSizeCheck;
  static_assert(sizeof(TimeCheatingDetector) == 0x90);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection
// Il2CppName: StartDetection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "StartDetection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection
// Il2CppName: StartDetection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Events::UnityAction*)>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "StartDetection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection
// Il2CppName: StartDetection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Events::UnityAction*, int)>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetection)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    static auto* interval = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "StartDetection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, interval});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StopDetection
// Il2CppName: StopDetection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StopDetection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "StopDetection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::get_Instance
// Il2CppName: get_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* (*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::get_Instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "get_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::set_Instance
// Il2CppName: set_Instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::CodeStage::AntiCheat::Detectors::TimeCheatingDetector*)>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::set_Instance)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("CodeStage.AntiCheat.Detectors", "TimeCheatingDetector")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "set_Instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::get_GetOrCreateInstance
// Il2CppName: get_GetOrCreateInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::CodeStage::AntiCheat::Detectors::TimeCheatingDetector* (*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::get_GetOrCreateInstance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "get_GetOrCreateInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnLevelWasLoadedNew
// Il2CppName: OnLevelWasLoadedNew
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)(::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode)>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnLevelWasLoadedNew)> {
  static const MethodInfo* get() {
    static auto* scene = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "Scene")->byval_arg;
    static auto* mode = &::il2cpp_utils::GetClassFromName("UnityEngine.SceneManagement", "LoadSceneMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "OnLevelWasLoadedNew", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{scene, mode});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnLevelLoadedCallback
// Il2CppName: OnLevelLoadedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnLevelLoadedCallback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "OnLevelLoadedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetectionInternal
// Il2CppName: StartDetectionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)(::UnityEngine::Events::UnityAction*, int)>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetectionInternal)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("UnityEngine.Events", "UnityAction")->byval_arg;
    static auto* checkInterval = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "StartDetectionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback, checkInterval});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::CheckForCheat
// Il2CppName: CheckForCheat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::CheckForCheat)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "CheckForCheat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnTimeGot
// Il2CppName: OnTimeGot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)(double)>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnTimeGot)> {
  static const MethodInfo* get() {
    static auto* onlineTime = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "OnTimeGot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{onlineTime});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetOnlineTime
// Il2CppName: GetOnlineTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(::StringW)>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetOnlineTime)> {
  static const MethodInfo* get() {
    static auto* server = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "GetOnlineTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{server});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetOnlineTimeAsync
// Il2CppName: GetOnlineTimeAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)(::StringW, ::System::Action_1<double>*)>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetOnlineTimeAsync)> {
  static const MethodInfo* get() {
    static auto* server = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Double")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "GetOnlineTimeAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{server, callback});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSockedConnected
// Il2CppName: OnSockedConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)(::Il2CppObject*, ::System::Net::Sockets::SocketAsyncEventArgs*)>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSockedConnected)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net.Sockets", "SocketAsyncEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "OnSockedConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSocketSend
// Il2CppName: OnSocketSend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)(::Il2CppObject*, ::System::Net::Sockets::SocketAsyncEventArgs*)>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSocketSend)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net.Sockets", "SocketAsyncEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "OnSocketSend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSocketReceive
// Il2CppName: OnSocketReceive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)(::Il2CppObject*, ::System::Net::Sockets::SocketAsyncEventArgs*)>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnSocketReceive)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* e = &::il2cpp_utils::GetClassFromName("System.Net.Sockets", "SocketAsyncEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "OnSocketReceive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, e});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetLocalTime
// Il2CppName: GetLocalTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::GetLocalTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "GetLocalTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetectionAutomatically
// Il2CppName: StartDetectionAutomatically
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StartDetectionAutomatically)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "StartDetectionAutomatically", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::PauseDetector
// Il2CppName: PauseDetector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::PauseDetector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "PauseDetector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::ResumeDetector
// Il2CppName: ResumeDetector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::ResumeDetector)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "ResumeDetector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StopDetectionInternal
// Il2CppName: StopDetectionInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::StopDetectionInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "StopDetectionInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::Detectors::TimeCheatingDetector::DisposeInternal
// Il2CppName: DisposeInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::Detectors::TimeCheatingDetector::*)()>(&CodeStage::AntiCheat::Detectors::TimeCheatingDetector::DisposeInternal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::Detectors::TimeCheatingDetector*), "DisposeInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
