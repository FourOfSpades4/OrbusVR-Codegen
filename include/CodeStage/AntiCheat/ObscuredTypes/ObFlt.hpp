// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.IFormattable
#include "System/IFormattable.hpp"
// Including type: CodeStage.AntiCheat.Common.ACTkByte4
#include "CodeStage/AntiCheat/Common/ACTkByte4.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: CodeStage::AntiCheat::ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: CodeStage.AntiCheat.ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Forward declaring type: ObFlt
  struct ObFlt;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::CodeStage::AntiCheat::ObscuredTypes::ObFlt, "CodeStage.AntiCheat.ObscuredTypes", "ObFlt");
// Type namespace: CodeStage.AntiCheat.ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Size: 0x19
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: CodeStage.AntiCheat.ObscuredTypes.ObFlt
  // [TokenAttribute] Offset: FFFFFFFF
  struct ObFlt/*, public ::System::ValueType, public ::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObFlt>, public ::System::IFormattable*/ {
    public:
    // Nested type: ::CodeStage::AntiCheat::ObscuredTypes::ObFlt::FloatIntBytesUnion
    struct FloatIntBytesUnion;
    public:
    // private System.Int32 currentCryptoKey
    // Size: 0x4
    // Offset: 0x0
    int currentCryptoKey;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private CodeStage.AntiCheat.Common.ACTkByte4 hiddenValue
    // Size: 0x4
    // Offset: 0x4
    ::CodeStage::AntiCheat::Common::ACTkByte4 hiddenValue;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::Common::ACTkByte4) == 0x4);
    // [FormerlySerializedAsAttribute] Offset: 0xAC65BC
    // private System.Byte[] hiddenValueOld
    // Size: 0x8
    // Offset: 0x8
    ::ArrayW<uint8_t> hiddenValueOld;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Boolean inited
    // Size: 0x1
    // Offset: 0x10
    bool inited;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: inited and: fakeValue
    char __padding3[0x3] = {};
    // private System.Single fakeValue
    // Size: 0x4
    // Offset: 0x14
    float fakeValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Boolean fakeValueActive
    // Size: 0x1
    // Offset: 0x18
    bool fakeValueActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: ObFlt
    constexpr ObFlt(int currentCryptoKey_ = {}, ::CodeStage::AntiCheat::Common::ACTkByte4 hiddenValue_ = {}, ::ArrayW<uint8_t> hiddenValueOld_ = ::ArrayW<uint8_t>(static_cast<void*>(nullptr)), bool inited_ = {}, float fakeValue_ = {}, bool fakeValueActive_ = {}) noexcept : currentCryptoKey{currentCryptoKey_}, hiddenValue{hiddenValue_}, hiddenValueOld{hiddenValueOld_}, inited{inited_}, fakeValue{fakeValue_}, fakeValueActive{fakeValueActive_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObFlt>
    operator ::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObFlt>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObFlt>*>(this);
    }
    // Creating interface conversion operator: operator ::System::IFormattable
    operator ::System::IFormattable() noexcept {
      return *reinterpret_cast<::System::IFormattable*>(this);
    }
    // Get static field: static private System.Int32 cryptoKey
    static int _get_cryptoKey();
    // Set static field: static private System.Int32 cryptoKey
    static void _set_cryptoKey(int value);
    // Get instance field reference: private System.Int32 currentCryptoKey
    [[deprecated("Use field access instead!")]] int& dyn_currentCryptoKey();
    // Get instance field reference: private CodeStage.AntiCheat.Common.ACTkByte4 hiddenValue
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::Common::ACTkByte4& dyn_hiddenValue();
    // Get instance field reference: private System.Byte[] hiddenValueOld
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_hiddenValueOld();
    // Get instance field reference: private System.Boolean inited
    [[deprecated("Use field access instead!")]] bool& dyn_inited();
    // Get instance field reference: private System.Single fakeValue
    [[deprecated("Use field access instead!")]] float& dyn_fakeValue();
    // Get instance field reference: private System.Boolean fakeValueActive
    [[deprecated("Use field access instead!")]] bool& dyn_fakeValueActive();
    // private System.Void .ctor(System.Single value)
    // Offset: 0xBB08C8
    ObFlt(float value);
    // static public System.Void SetNewCryptoKey(System.Int32 newKey)
    // Offset: 0x1E65DA8
    static void SetNewCryptoKey(int newKey);
    // static public System.Int32 Encrypt(System.Single value)
    // Offset: 0x1E65E14
    static int Encrypt(float value);
    // static public System.Int32 Encrypt(System.Single value, System.Int32 key)
    // Offset: 0x1E65E90
    static int Encrypt(float value, int key);
    // static private CodeStage.AntiCheat.Common.ACTkByte4 InternalEncrypt(System.Single value)
    // Offset: 0x1E65D30
    static ::CodeStage::AntiCheat::Common::ACTkByte4 InternalEncrypt(float value);
    // static private CodeStage.AntiCheat.Common.ACTkByte4 InternalEncrypt(System.Single value, System.Int32 key)
    // Offset: 0x1E65E9C
    static ::CodeStage::AntiCheat::Common::ACTkByte4 InternalEncrypt(float value, int key);
    // static public System.Single Decrypt(System.Int32 value)
    // Offset: 0x1E65F20
    static float Decrypt(int value);
    // static public System.Single Decrypt(System.Int32 value, System.Int32 key)
    // Offset: 0x1E65F94
    static float Decrypt(int value, int key);
    // public System.Void ApplyNewCryptoKey()
    // Offset: 0xBB08D0
    void ApplyNewCryptoKey();
    // public System.Void RandomizeCryptoKey()
    // Offset: 0xBB08D8
    void RandomizeCryptoKey();
    // public System.Int32 GetEncrypted()
    // Offset: 0xBB08E0
    int GetEncrypted();
    // public System.Void SetEncrypted(System.Int32 encrypted)
    // Offset: 0xBB0908
    void SetEncrypted(int encrypted);
    // public System.Single GetDecrypted()
    // Offset: 0xBB0910
    float GetDecrypted();
    // private System.Single InternalDecrypt()
    // Offset: 0xBB0918
    float InternalDecrypt();
    // public System.Boolean Equals(CodeStage.AntiCheat.ObscuredTypes.ObFlt obj)
    // Offset: 0xBB0928
    bool Equals(::CodeStage::AntiCheat::ObscuredTypes::ObFlt obj);
    // public System.String ToString(System.String format)
    // Offset: 0xBB09C0
    ::StringW ToString(::StringW format);
    // public System.String ToString(System.IFormatProvider provider)
    // Offset: 0xBB09F8
    ::StringW ToString(::System::IFormatProvider* provider);
    // public System.String ToString(System.String format, System.IFormatProvider provider)
    // Offset: 0xBB0A30
    ::StringW ToString(::StringW format, ::System::IFormatProvider* provider);
    // static private System.Void .cctor()
    // Offset: 0x1E66708
    static void _cctor();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xBB0920
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0xBB0960
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0xBB0990
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // CodeStage.AntiCheat.ObscuredTypes.ObFlt
  #pragma pack(pop)
  static check_size<sizeof(ObFlt), 24 + sizeof(bool)> __CodeStage_AntiCheat_ObscuredTypes_ObFltSizeCheck;
  static_assert(sizeof(ObFlt) == 0x19);
  // static public CodeStage.AntiCheat.ObscuredTypes.ObFlt op_Increment(CodeStage.AntiCheat.ObscuredTypes.ObFlt input)
  // Offset: 0x1E66394
  ::CodeStage::AntiCheat::ObscuredTypes::ObFlt operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& input);
  // static public CodeStage.AntiCheat.ObscuredTypes.ObFlt op_Decrement(CodeStage.AntiCheat.ObscuredTypes.ObFlt input)
  // Offset: 0x1E66458
  ::CodeStage::AntiCheat::ObscuredTypes::ObFlt operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObFlt& input);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::ObFlt
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::SetNewCryptoKey
// Il2CppName: SetNewCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::SetNewCryptoKey)> {
  static const MethodInfo* get() {
    static auto* newKey = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "SetNewCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newKey});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::Encrypt
// Il2CppName: Encrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(float)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::Encrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "Encrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::Encrypt
// Il2CppName: Encrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(float, int)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::Encrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "Encrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, key});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalEncrypt
// Il2CppName: InternalEncrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::CodeStage::AntiCheat::Common::ACTkByte4 (*)(float)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalEncrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "InternalEncrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalEncrypt
// Il2CppName: InternalEncrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::CodeStage::AntiCheat::Common::ACTkByte4 (*)(float, int)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalEncrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "InternalEncrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, key});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::Decrypt
// Il2CppName: Decrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::Decrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "Decrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::Decrypt
// Il2CppName: Decrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int, int)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::Decrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "Decrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, key});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::ApplyNewCryptoKey
// Il2CppName: ApplyNewCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::ApplyNewCryptoKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "ApplyNewCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::RandomizeCryptoKey
// Il2CppName: RandomizeCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::RandomizeCryptoKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "RandomizeCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetEncrypted
// Il2CppName: GetEncrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetEncrypted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "GetEncrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::SetEncrypted
// Il2CppName: SetEncrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)(int)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::SetEncrypted)> {
  static const MethodInfo* get() {
    static auto* encrypted = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "SetEncrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encrypted});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetDecrypted
// Il2CppName: GetDecrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetDecrypted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "GetDecrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalDecrypt
// Il2CppName: InternalDecrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::InternalDecrypt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "InternalDecrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)(::CodeStage::AntiCheat::ObscuredTypes::ObFlt)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("CodeStage.AntiCheat.ObscuredTypes", "ObFlt")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)(::StringW)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)(::System::IFormatProvider*)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)(::StringW, ::System::IFormatProvider*)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, provider});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)(::Il2CppObject*)>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObFlt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObFlt::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObFlt), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::operator++
// Il2CppName: op_Increment
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObFlt::operator--
// Il2CppName: op_Decrement
// Cannot perform method pointer template specialization from operators!
