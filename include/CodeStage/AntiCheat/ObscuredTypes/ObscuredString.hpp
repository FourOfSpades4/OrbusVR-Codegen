// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: StringComparison
  struct StringComparison;
}
// Completed forward declares
// Type namespace: CodeStage.AntiCheat.ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Forward declaring type: ObscuredString
  class ObscuredString;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString);
DEFINE_IL2CPP_ARG_TYPE(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString*, "CodeStage.AntiCheat.ObscuredTypes", "ObscuredString");
// Type namespace: CodeStage.AntiCheat.ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Size: 0x31
  #pragma pack(push, 1)
  // Autogenerated type: CodeStage.AntiCheat.ObscuredTypes.ObscuredString
  // [TokenAttribute] Offset: FFFFFFFF
  class ObscuredString : public ::Il2CppObject {
    public:
    public:
    // private System.String currentCryptoKey
    // Size: 0x8
    // Offset: 0x10
    ::StringW currentCryptoKey;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Byte[] hiddenValue
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<uint8_t> hiddenValue;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private System.Boolean inited
    // Size: 0x1
    // Offset: 0x20
    bool inited;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: inited and: fakeValue
    char __padding2[0x7] = {};
    // private System.String fakeValue
    // Size: 0x8
    // Offset: 0x28
    ::StringW fakeValue;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private System.Boolean fakeValueActive
    // Size: 0x1
    // Offset: 0x30
    bool fakeValueActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get static field: static private System.String cryptoKey
    static ::StringW _get_cryptoKey();
    // Set static field: static private System.String cryptoKey
    static void _set_cryptoKey(::StringW value);
    // Get instance field reference: private System.String currentCryptoKey
    [[deprecated("Use field access instead!")]] ::StringW& dyn_currentCryptoKey();
    // Get instance field reference: private System.Byte[] hiddenValue
    [[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& dyn_hiddenValue();
    // Get instance field reference: private System.Boolean inited
    [[deprecated("Use field access instead!")]] bool& dyn_inited();
    // Get instance field reference: private System.String fakeValue
    [[deprecated("Use field access instead!")]] ::StringW& dyn_fakeValue();
    // Get instance field reference: private System.Boolean fakeValueActive
    [[deprecated("Use field access instead!")]] bool& dyn_fakeValueActive();
    // private System.Void .ctor()
    // Offset: 0x1E739D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObscuredString* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObscuredString*, creationType>()));
    }
    // private System.Void .ctor(System.String value)
    // Offset: 0x1E739DC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ObscuredString* New_ctor(::StringW value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::CodeStage::AntiCheat::ObscuredTypes::ObscuredString::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ObscuredString*, creationType>(value)));
    }
    // static public System.Void SetNewCryptoKey(System.String newKey)
    // Offset: 0x1E73B10
    static void SetNewCryptoKey(::StringW newKey);
    // static public System.String EncryptDecrypt(System.String value)
    // Offset: 0x1E73B7C
    static ::StringW EncryptDecrypt(::StringW value);
    // static public System.String EncryptDecrypt(System.String value, System.String key)
    // Offset: 0x1E5D438
    static ::StringW EncryptDecrypt(::StringW value, ::StringW key);
    // public System.Void ApplyNewCryptoKey()
    // Offset: 0x1E73BF8
    void ApplyNewCryptoKey();
    // public System.Void RandomizeCryptoKey()
    // Offset: 0x1E73E78
    void RandomizeCryptoKey();
    // public System.String GetEncrypted()
    // Offset: 0x1E73F9C
    ::StringW GetEncrypted();
    // public System.Void SetEncrypted(System.String encrypted)
    // Offset: 0x1E740B0
    void SetEncrypted(::StringW encrypted);
    // public System.String GetDecrypted()
    // Offset: 0x1E7424C
    ::StringW GetDecrypted();
    // static private System.Byte[] InternalEncrypt(System.String value)
    // Offset: 0x1E73AA0
    static ::ArrayW<uint8_t> InternalEncrypt(::StringW value);
    // static private System.Byte[] InternalEncrypt(System.String value, System.String key)
    // Offset: 0x1E73F24
    static ::ArrayW<uint8_t> InternalEncrypt(::StringW value, ::StringW key);
    // private System.String InternalDecrypt()
    // Offset: 0x1E73CC4
    ::StringW InternalDecrypt();
    // public System.Int32 get_Length()
    // Offset: 0x1E74250
    int get_Length();
    // public System.Boolean Equals(CodeStage.AntiCheat.ObscuredTypes.ObscuredString value)
    // Offset: 0x1E74634
    bool Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString* value);
    // public System.Boolean Equals(CodeStage.AntiCheat.ObscuredTypes.ObscuredString value, System.StringComparison comparisonType)
    // Offset: 0x1E74740
    bool Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString* value, ::System::StringComparison comparisonType);
    // static private System.Byte[] GetBytes(System.String str)
    // Offset: 0x1E74190
    static ::ArrayW<uint8_t> GetBytes(::StringW str);
    // static private System.String GetString(System.Byte[] bytes)
    // Offset: 0x1E7400C
    static ::StringW GetString(::ArrayW<uint8_t> bytes);
    // static private System.Boolean ArraysEquals(System.Byte[] a1, System.Byte[] a2)
    // Offset: 0x1E74470
    static bool ArraysEquals(::ArrayW<uint8_t> a1, ::ArrayW<uint8_t> a2);
    // static private System.Void .cctor()
    // Offset: 0x1E74838
    static void _cctor();
    // public override System.String ToString()
    // Offset: 0x1E7446C
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x1E745B4
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1E74804
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
  }; // CodeStage.AntiCheat.ObscuredTypes.ObscuredString
  #pragma pack(pop)
  static check_size<sizeof(ObscuredString), 48 + sizeof(bool)> __CodeStage_AntiCheat_ObscuredTypes_ObscuredStringSizeCheck;
  static_assert(sizeof(ObscuredString) == 0x31);
  // static public System.Boolean op_Equality(CodeStage.AntiCheat.ObscuredTypes.ObscuredString a, CodeStage.AntiCheat.ObscuredTypes.ObscuredString b)
  // Offset: 0x1E74384
  bool operator ==(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString* a, ::CodeStage::AntiCheat::ObscuredTypes::ObscuredString& b);
  // static public System.Boolean op_Inequality(CodeStage.AntiCheat.ObscuredTypes.ObscuredString a, CodeStage.AntiCheat.ObscuredTypes.ObscuredString b)
  // Offset: 0x1E74534
  bool operator !=(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString* a, ::CodeStage::AntiCheat::ObscuredTypes::ObscuredString& b);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::SetNewCryptoKey
// Il2CppName: SetNewCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::SetNewCryptoKey)> {
  static const MethodInfo* get() {
    static auto* newKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "SetNewCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newKey});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::EncryptDecrypt
// Il2CppName: EncryptDecrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::EncryptDecrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "EncryptDecrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::EncryptDecrypt
// Il2CppName: EncryptDecrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::StringW)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::EncryptDecrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "EncryptDecrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, key});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ApplyNewCryptoKey
// Il2CppName: ApplyNewCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ApplyNewCryptoKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "ApplyNewCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::RandomizeCryptoKey
// Il2CppName: RandomizeCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::RandomizeCryptoKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "RandomizeCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetEncrypted
// Il2CppName: GetEncrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetEncrypted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "GetEncrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::SetEncrypted
// Il2CppName: SetEncrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)(::StringW)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::SetEncrypted)> {
  static const MethodInfo* get() {
    static auto* encrypted = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "SetEncrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encrypted});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetDecrypted
// Il2CppName: GetDecrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetDecrypted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "GetDecrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalEncrypt
// Il2CppName: InternalEncrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::StringW)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalEncrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "InternalEncrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalEncrypt
// Il2CppName: InternalEncrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::StringW, ::StringW)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalEncrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "InternalEncrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, key});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalDecrypt
// Il2CppName: InternalDecrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::InternalDecrypt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "InternalDecrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::get_Length)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString*)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)(::CodeStage::AntiCheat::ObscuredTypes::ObscuredString*, ::System::StringComparison)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("CodeStage.AntiCheat.ObscuredTypes", "ObscuredString")->byval_arg;
    static auto* comparisonType = &::il2cpp_utils::GetClassFromName("System", "StringComparison")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, comparisonType});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::StringW)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetBytes)> {
  static const MethodInfo* get() {
    static auto* str = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{str});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::ArrayW<uint8_t>)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetString)> {
  static const MethodInfo* get() {
    static auto* bytes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bytes});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ArraysEquals
// Il2CppName: ArraysEquals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<uint8_t>, ::ArrayW<uint8_t>)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ArraysEquals)> {
  static const MethodInfo* get() {
    static auto* a1 = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* a2 = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "ArraysEquals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a1, a2});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)(::Il2CppObject*)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CodeStage::AntiCheat::ObscuredTypes::ObscuredString::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredString::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredString*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::operator ==
// Il2CppName: op_Equality
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredString::operator !=
// Il2CppName: op_Inequality
// Cannot perform method pointer template specialization from operators!
