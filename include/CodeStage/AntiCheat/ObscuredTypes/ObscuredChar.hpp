// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
}
// Completed forward declares
// Type namespace: CodeStage.AntiCheat.ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Forward declaring type: ObscuredChar
  struct ObscuredChar;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar, "CodeStage.AntiCheat.ObscuredTypes", "ObscuredChar");
// Type namespace: CodeStage.AntiCheat.ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Size: 0x9
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: CodeStage.AntiCheat.ObscuredTypes.ObscuredChar
  // [TokenAttribute] Offset: FFFFFFFF
  struct ObscuredChar/*, public ::System::ValueType, public ::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar>*/ {
    public:
    public:
    // private System.Char currentCryptoKey
    // Size: 0x2
    // Offset: 0x0
    ::Il2CppChar currentCryptoKey;
    // Field size check
    static_assert(sizeof(::Il2CppChar) == 0x2);
    // private System.Char hiddenValue
    // Size: 0x2
    // Offset: 0x2
    ::Il2CppChar hiddenValue;
    // Field size check
    static_assert(sizeof(::Il2CppChar) == 0x2);
    // private System.Boolean inited
    // Size: 0x1
    // Offset: 0x4
    bool inited;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: inited and: fakeValue
    char __padding2[0x1] = {};
    // private System.Char fakeValue
    // Size: 0x2
    // Offset: 0x6
    ::Il2CppChar fakeValue;
    // Field size check
    static_assert(sizeof(::Il2CppChar) == 0x2);
    // private System.Boolean fakeValueActive
    // Size: 0x1
    // Offset: 0x8
    bool fakeValueActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: ObscuredChar
    constexpr ObscuredChar(::Il2CppChar currentCryptoKey_ = {}, ::Il2CppChar hiddenValue_ = {}, bool inited_ = {}, ::Il2CppChar fakeValue_ = {}, bool fakeValueActive_ = {}) noexcept : currentCryptoKey{currentCryptoKey_}, hiddenValue{hiddenValue_}, inited{inited_}, fakeValue{fakeValue_}, fakeValueActive{fakeValueActive_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar>
    operator ::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar>*>(this);
    }
    // Get static field: static private System.Char cryptoKey
    static ::Il2CppChar _get_cryptoKey();
    // Set static field: static private System.Char cryptoKey
    static void _set_cryptoKey(::Il2CppChar value);
    // Get instance field reference: private System.Char currentCryptoKey
    [[deprecated("Use field access instead!")]] ::Il2CppChar& dyn_currentCryptoKey();
    // Get instance field reference: private System.Char hiddenValue
    [[deprecated("Use field access instead!")]] ::Il2CppChar& dyn_hiddenValue();
    // Get instance field reference: private System.Boolean inited
    [[deprecated("Use field access instead!")]] bool& dyn_inited();
    // Get instance field reference: private System.Char fakeValue
    [[deprecated("Use field access instead!")]] ::Il2CppChar& dyn_fakeValue();
    // Get instance field reference: private System.Boolean fakeValueActive
    [[deprecated("Use field access instead!")]] bool& dyn_fakeValueActive();
    // private System.Void .ctor(System.Char value)
    // Offset: 0xBB103C
    ObscuredChar(::Il2CppChar value);
    // static public System.Void SetNewCryptoKey(System.Char newKey)
    // Offset: 0x1E68804
    static void SetNewCryptoKey(::Il2CppChar newKey);
    // static public System.Char EncryptDecrypt(System.Char value)
    // Offset: 0x1E6879C
    static ::Il2CppChar EncryptDecrypt(::Il2CppChar value);
    // static public System.Char EncryptDecrypt(System.Char value, System.Char key)
    // Offset: 0x1E68870
    static ::Il2CppChar EncryptDecrypt(::Il2CppChar value, ::Il2CppChar key);
    // public System.Void ApplyNewCryptoKey()
    // Offset: 0xBB1044
    void ApplyNewCryptoKey();
    // public System.Void RandomizeCryptoKey()
    // Offset: 0xBB104C
    void RandomizeCryptoKey();
    // public System.Char GetEncrypted()
    // Offset: 0xBB1054
    ::Il2CppChar GetEncrypted();
    // public System.Void SetEncrypted(System.Char encrypted)
    // Offset: 0xBB107C
    void SetEncrypted(::Il2CppChar encrypted);
    // public System.Char GetDecrypted()
    // Offset: 0xBB1084
    ::Il2CppChar GetDecrypted();
    // private System.Char InternalDecrypt()
    // Offset: 0xBB108C
    ::Il2CppChar InternalDecrypt();
    // public System.Boolean Equals(CodeStage.AntiCheat.ObscuredTypes.ObscuredChar obj)
    // Offset: 0xBB109C
    bool Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar obj);
    // public System.String ToString(System.IFormatProvider provider)
    // Offset: 0xBB10D8
    ::StringW ToString(::System::IFormatProvider* provider);
    // static private System.Void .cctor()
    // Offset: 0x1E69028
    static void _cctor();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xBB1094
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.String ToString()
    // Offset: 0xBB10A8
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
    // public override System.Int32 GetHashCode()
    // Offset: 0xBB1110
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // CodeStage.AntiCheat.ObscuredTypes.ObscuredChar
  #pragma pack(pop)
  static check_size<sizeof(ObscuredChar), 8 + sizeof(bool)> __CodeStage_AntiCheat_ObscuredTypes_ObscuredCharSizeCheck;
  static_assert(sizeof(ObscuredChar) == 0x9);
  // static public CodeStage.AntiCheat.ObscuredTypes.ObscuredChar op_Increment(CodeStage.AntiCheat.ObscuredTypes.ObscuredChar input)
  // Offset: 0x1E68CF0
  ::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar& input);
  // static public CodeStage.AntiCheat.ObscuredTypes.ObscuredChar op_Decrement(CodeStage.AntiCheat.ObscuredTypes.ObscuredChar input)
  // Offset: 0x1E68DA8
  ::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar& input);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ObscuredChar
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::SetNewCryptoKey
// Il2CppName: SetNewCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppChar)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::SetNewCryptoKey)> {
  static const MethodInfo* get() {
    static auto* newKey = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "SetNewCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newKey});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::EncryptDecrypt
// Il2CppName: EncryptDecrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (*)(::Il2CppChar)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::EncryptDecrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "EncryptDecrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::EncryptDecrypt
// Il2CppName: EncryptDecrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (*)(::Il2CppChar, ::Il2CppChar)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::EncryptDecrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "EncryptDecrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, key});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ApplyNewCryptoKey
// Il2CppName: ApplyNewCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ApplyNewCryptoKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "ApplyNewCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::RandomizeCryptoKey
// Il2CppName: RandomizeCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::RandomizeCryptoKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "RandomizeCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetEncrypted
// Il2CppName: GetEncrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetEncrypted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "GetEncrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::SetEncrypted
// Il2CppName: SetEncrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::*)(::Il2CppChar)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::SetEncrypted)> {
  static const MethodInfo* get() {
    static auto* encrypted = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "SetEncrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encrypted});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetDecrypted
// Il2CppName: GetDecrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetDecrypted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "GetDecrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::InternalDecrypt
// Il2CppName: InternalDecrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppChar (CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::InternalDecrypt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "InternalDecrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::*)(::CodeStage::AntiCheat::ObscuredTypes::ObscuredChar)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("CodeStage.AntiCheat.ObscuredTypes", "ObscuredChar")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::*)(::System::IFormatProvider*)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ToString)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::*)(::Il2CppObject*)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredChar), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::operator++
// Il2CppName: op_Increment
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredChar::operator--
// Il2CppName: op_Decrement
// Cannot perform method pointer template specialization from operators!
