// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: CodeStage::AntiCheat::ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Skipping declaration: RawEncryptedQuaternion because it is already included!
}
// Completed forward declares
// Type namespace: CodeStage.AntiCheat.ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Forward declaring type: ObscuredQuaternion
  struct ObscuredQuaternion;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion, "CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion");
// Type namespace: CodeStage.AntiCheat.ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Size: 0x29
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion
  // [TokenAttribute] Offset: FFFFFFFF
  struct ObscuredQuaternion/*, public ::System::ValueType*/ {
    public:
    // Nested type: ::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion
    struct RawEncryptedQuaternion;
    // Size: 0x10
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion
    // [TokenAttribute] Offset: FFFFFFFF
    struct RawEncryptedQuaternion/*, public ::System::ValueType*/ {
      public:
      public:
      // public System.Int32 x
      // Size: 0x4
      // Offset: 0x0
      int x;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Int32 y
      // Size: 0x4
      // Offset: 0x4
      int y;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Int32 z
      // Size: 0x4
      // Offset: 0x8
      int z;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      // public System.Int32 w
      // Size: 0x4
      // Offset: 0xC
      int w;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: RawEncryptedQuaternion
      constexpr RawEncryptedQuaternion(int x_ = {}, int y_ = {}, int z_ = {}, int w_ = {}) noexcept : x{x_}, y{y_}, z{z_}, w{w_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Get instance field reference: public System.Int32 x
      [[deprecated("Use field access instead!")]] int& dyn_x();
      // Get instance field reference: public System.Int32 y
      [[deprecated("Use field access instead!")]] int& dyn_y();
      // Get instance field reference: public System.Int32 z
      [[deprecated("Use field access instead!")]] int& dyn_z();
      // Get instance field reference: public System.Int32 w
      [[deprecated("Use field access instead!")]] int& dyn_w();
    }; // CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion
    #pragma pack(pop)
    static check_size<sizeof(ObscuredQuaternion::RawEncryptedQuaternion), 12 + sizeof(int)> __CodeStage_AntiCheat_ObscuredTypes_ObscuredQuaternion_RawEncryptedQuaternionSizeCheck;
    static_assert(sizeof(ObscuredQuaternion::RawEncryptedQuaternion) == 0x10);
    public:
    // private System.Int32 currentCryptoKey
    // Size: 0x4
    // Offset: 0x0
    int currentCryptoKey;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion hiddenValue
    // Size: 0x10
    // Offset: 0x4
    ::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion hiddenValue;
    // Field size check
    static_assert(sizeof(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion) == 0x10);
    // private System.Boolean inited
    // Size: 0x1
    // Offset: 0x14
    bool inited;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: inited and: fakeValue
    char __padding2[0x3] = {};
    // private UnityEngine.Quaternion fakeValue
    // Size: 0x10
    // Offset: 0x18
    ::UnityEngine::Quaternion fakeValue;
    // Field size check
    static_assert(sizeof(::UnityEngine::Quaternion) == 0x10);
    // private System.Boolean fakeValueActive
    // Size: 0x1
    // Offset: 0x28
    bool fakeValueActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: ObscuredQuaternion
    constexpr ObscuredQuaternion(int currentCryptoKey_ = {}, ::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion hiddenValue_ = {}, bool inited_ = {}, ::UnityEngine::Quaternion fakeValue_ = {}, bool fakeValueActive_ = {}) noexcept : currentCryptoKey{currentCryptoKey_}, hiddenValue{hiddenValue_}, inited{inited_}, fakeValue{fakeValue_}, fakeValueActive{fakeValueActive_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get static field: static private System.Int32 cryptoKey
    static int _get_cryptoKey();
    // Set static field: static private System.Int32 cryptoKey
    static void _set_cryptoKey(int value);
    // Get static field: static private readonly UnityEngine.Quaternion identity
    static ::UnityEngine::Quaternion _get_identity();
    // Set static field: static private readonly UnityEngine.Quaternion identity
    static void _set_identity(::UnityEngine::Quaternion value);
    // Get instance field reference: private System.Int32 currentCryptoKey
    [[deprecated("Use field access instead!")]] int& dyn_currentCryptoKey();
    // Get instance field reference: private CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion hiddenValue
    [[deprecated("Use field access instead!")]] ::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion& dyn_hiddenValue();
    // Get instance field reference: private System.Boolean inited
    [[deprecated("Use field access instead!")]] bool& dyn_inited();
    // Get instance field reference: private UnityEngine.Quaternion fakeValue
    [[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& dyn_fakeValue();
    // Get instance field reference: private System.Boolean fakeValueActive
    [[deprecated("Use field access instead!")]] bool& dyn_fakeValueActive();
    // private System.Void .ctor(UnityEngine.Quaternion value)
    // Offset: 0xBB19B8
    ObscuredQuaternion(::UnityEngine::Quaternion value);
    // public System.Void .ctor(System.Single x, System.Single y, System.Single z, System.Single w)
    // Offset: 0xBB19C0
    ObscuredQuaternion(float x, float y, float z, float w);
    // static public System.Void SetNewCryptoKey(System.Int32 newKey)
    // Offset: 0x1E71C2C
    static void SetNewCryptoKey(int newKey);
    // static public CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion Encrypt(UnityEngine.Quaternion value)
    // Offset: 0x1E719B8
    static ::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion Encrypt(::UnityEngine::Quaternion value);
    // static public CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion Encrypt(UnityEngine.Quaternion value, System.Int32 key)
    // Offset: 0x1E71C98
    static ::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion Encrypt(::UnityEngine::Quaternion value, int key);
    // static public CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion Encrypt(System.Single x, System.Single y, System.Single z, System.Single w, System.Int32 key)
    // Offset: 0x1E71B54
    static ::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion Encrypt(float x, float y, float z, float w, int key);
    // static public UnityEngine.Quaternion Decrypt(CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion value)
    // Offset: 0x1E71D2C
    static ::UnityEngine::Quaternion Decrypt(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion value);
    // static public UnityEngine.Quaternion Decrypt(CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion value, System.Int32 key)
    // Offset: 0x1E71DA4
    static ::UnityEngine::Quaternion Decrypt(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion value, int key);
    // public System.Void ApplyNewCryptoKey()
    // Offset: 0xBB19C8
    void ApplyNewCryptoKey();
    // public System.Void RandomizeCryptoKey()
    // Offset: 0xBB19D0
    void RandomizeCryptoKey();
    // public CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion GetEncrypted()
    // Offset: 0xBB19D8
    ::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion GetEncrypted();
    // public System.Void SetEncrypted(CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion/RawEncryptedQuaternion encrypted)
    // Offset: 0xBB1A04
    void SetEncrypted(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion encrypted);
    // public UnityEngine.Quaternion GetDecrypted()
    // Offset: 0xBB1A0C
    ::UnityEngine::Quaternion GetDecrypted();
    // private UnityEngine.Quaternion InternalDecrypt()
    // Offset: 0xBB1A14
    ::UnityEngine::Quaternion InternalDecrypt();
    // private System.Boolean CompareQuaternionsWithTolerance(UnityEngine.Quaternion q1, UnityEngine.Quaternion q2)
    // Offset: 0xBB1A1C
    bool CompareQuaternionsWithTolerance(::UnityEngine::Quaternion q1, ::UnityEngine::Quaternion q2);
    // public System.String ToString(System.String format)
    // Offset: 0xBB1A30
    ::StringW ToString(::StringW format);
    // static private System.Void .cctor()
    // Offset: 0x1E72528
    static void _cctor();
    // public override System.Int32 GetHashCode()
    // Offset: 0xBB1A20
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0xBB1A28
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
  }; // CodeStage.AntiCheat.ObscuredTypes.ObscuredQuaternion
  #pragma pack(pop)
  static check_size<sizeof(ObscuredQuaternion), 40 + sizeof(bool)> __CodeStage_AntiCheat_ObscuredTypes_ObscuredQuaternionSizeCheck;
  static_assert(sizeof(ObscuredQuaternion) == 0x29);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion, "CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion/RawEncryptedQuaternion");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ObscuredQuaternion
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ObscuredQuaternion
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::SetNewCryptoKey
// Il2CppName: SetNewCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::SetNewCryptoKey)> {
  static const MethodInfo* get() {
    static auto* newKey = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "SetNewCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newKey});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt
// Il2CppName: Encrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion (*)(::UnityEngine::Quaternion)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "Encrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt
// Il2CppName: Encrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion (*)(::UnityEngine::Quaternion, int)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "Encrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, key});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt
// Il2CppName: Encrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion (*)(float, float, float, float, int)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Encrypt)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* z = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* w = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "Encrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y, z, w, key});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Decrypt
// Il2CppName: Decrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Decrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion/RawEncryptedQuaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "Decrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Decrypt
// Il2CppName: Decrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion, int)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::Decrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion/RawEncryptedQuaternion")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "Decrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, key});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ApplyNewCryptoKey
// Il2CppName: ApplyNewCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ApplyNewCryptoKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "ApplyNewCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RandomizeCryptoKey
// Il2CppName: RandomizeCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RandomizeCryptoKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "RandomizeCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetEncrypted
// Il2CppName: GetEncrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion (CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetEncrypted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "GetEncrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::SetEncrypted
// Il2CppName: SetEncrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::*)(::CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::RawEncryptedQuaternion)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::SetEncrypted)> {
  static const MethodInfo* get() {
    static auto* encrypted = &::il2cpp_utils::GetClassFromName("CodeStage.AntiCheat.ObscuredTypes", "ObscuredQuaternion/RawEncryptedQuaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "SetEncrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encrypted});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetDecrypted
// Il2CppName: GetDecrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetDecrypted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "GetDecrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::InternalDecrypt
// Il2CppName: InternalDecrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::InternalDecrypt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "InternalDecrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::CompareQuaternionsWithTolerance
// Il2CppName: CompareQuaternionsWithTolerance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::*)(::UnityEngine::Quaternion, ::UnityEngine::Quaternion)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::CompareQuaternionsWithTolerance)> {
  static const MethodInfo* get() {
    static auto* q1 = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* q2 = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "CompareQuaternionsWithTolerance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{q1, q2});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::*)(::StringW)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ToString)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredQuaternion), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
