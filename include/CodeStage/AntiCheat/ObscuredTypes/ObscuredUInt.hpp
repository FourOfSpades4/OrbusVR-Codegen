// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.IFormattable
#include "System/IFormattable.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: CodeStage::AntiCheat::ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Forward declaring type: ObInt
  struct ObInt;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
}
// Completed forward declares
// Begin il2cpp-utils forward declares
struct Il2CppObject;
// Completed il2cpp-utils forward declares
// Type namespace: CodeStage.AntiCheat.ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Forward declaring type: ObscuredUInt
  struct ObscuredUInt;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt, "CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt");
// Type namespace: CodeStage.AntiCheat.ObscuredTypes
namespace CodeStage::AntiCheat::ObscuredTypes {
  // Size: 0x11
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt
  // [TokenAttribute] Offset: FFFFFFFF
  struct ObscuredUInt/*, public ::System::ValueType, public ::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt>, public ::System::IFormattable*/ {
    public:
    public:
    // private System.UInt32 currentCryptoKey
    // Size: 0x4
    // Offset: 0x0
    uint currentCryptoKey;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.UInt32 hiddenValue
    // Size: 0x4
    // Offset: 0x4
    uint hiddenValue;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.Boolean inited
    // Size: 0x1
    // Offset: 0x8
    bool inited;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: inited and: fakeValue
    char __padding2[0x3] = {};
    // private System.UInt32 fakeValue
    // Size: 0x4
    // Offset: 0xC
    uint fakeValue;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.Boolean fakeValueActive
    // Size: 0x1
    // Offset: 0x10
    bool fakeValueActive;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating value type constructor for type: ObscuredUInt
    constexpr ObscuredUInt(uint currentCryptoKey_ = {}, uint hiddenValue_ = {}, bool inited_ = {}, uint fakeValue_ = {}, bool fakeValueActive_ = {}) noexcept : currentCryptoKey{currentCryptoKey_}, hiddenValue{hiddenValue_}, inited{inited_}, fakeValue{fakeValue_}, fakeValueActive{fakeValueActive_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt>
    operator ::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt>*>(this);
    }
    // Creating interface conversion operator: operator ::System::IFormattable
    operator ::System::IFormattable() noexcept {
      return *reinterpret_cast<::System::IFormattable*>(this);
    }
    // Get static field: static private System.UInt32 cryptoKey
    static uint _get_cryptoKey();
    // Set static field: static private System.UInt32 cryptoKey
    static void _set_cryptoKey(uint value);
    // Get instance field reference: private System.UInt32 currentCryptoKey
    [[deprecated("Use field access instead!")]] uint& dyn_currentCryptoKey();
    // Get instance field reference: private System.UInt32 hiddenValue
    [[deprecated("Use field access instead!")]] uint& dyn_hiddenValue();
    // Get instance field reference: private System.Boolean inited
    [[deprecated("Use field access instead!")]] bool& dyn_inited();
    // Get instance field reference: private System.UInt32 fakeValue
    [[deprecated("Use field access instead!")]] uint& dyn_fakeValue();
    // Get instance field reference: private System.Boolean fakeValueActive
    [[deprecated("Use field access instead!")]] bool& dyn_fakeValueActive();
    // private System.Void .ctor(System.UInt32 value)
    // Offset: 0xBB1E84
    ObscuredUInt(uint value);
    // static public System.Void SetNewCryptoKey(System.UInt32 newKey)
    // Offset: 0x1E749A4
    static void SetNewCryptoKey(uint newKey);
    // static public System.UInt32 Encrypt(System.UInt32 value)
    // Offset: 0x1E7493C
    static uint Encrypt(uint value);
    // static public System.UInt32 Decrypt(System.UInt32 value)
    // Offset: 0x1E74A90
    static uint Decrypt(uint value);
    // static public System.UInt32 Encrypt(System.UInt32 value, System.UInt32 key)
    // Offset: 0x1E74A10
    static uint Encrypt(uint value, uint key);
    // static public System.UInt32 Decrypt(System.UInt32 value, System.UInt32 key)
    // Offset: 0x1E74AF8
    static uint Decrypt(uint value, uint key);
    // public System.Void ApplyNewCryptoKey()
    // Offset: 0xBB1E8C
    void ApplyNewCryptoKey();
    // public System.Void RandomizeCryptoKey()
    // Offset: 0xBB1E94
    void RandomizeCryptoKey();
    // public System.UInt32 GetEncrypted()
    // Offset: 0xBB1E9C
    uint GetEncrypted();
    // public System.Void SetEncrypted(System.UInt32 encrypted)
    // Offset: 0xBB1EC4
    void SetEncrypted(uint encrypted);
    // public System.UInt32 GetDecrypted()
    // Offset: 0xBB1ECC
    uint GetDecrypted();
    // private System.UInt32 InternalDecrypt()
    // Offset: 0xBB1ED4
    uint InternalDecrypt();
    // static public CodeStage.AntiCheat.ObscuredTypes.ObInt op_Explicit(CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt value)
    // Offset: 0x1E74F10
    explicit operator ::CodeStage::AntiCheat::ObscuredTypes::ObInt();
    // public System.Boolean Equals(CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt obj)
    // Offset: 0xBB1EE4
    bool Equals(::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt obj);
    // public System.String ToString(System.String format)
    // Offset: 0xBB1F4C
    ::StringW ToString(::StringW format);
    // public System.String ToString(System.IFormatProvider provider)
    // Offset: 0xBB1FB4
    ::StringW ToString(::System::IFormatProvider* provider);
    // public System.String ToString(System.String format, System.IFormatProvider provider)
    // Offset: 0xBB1FEC
    ::StringW ToString(::StringW format, ::System::IFormatProvider* provider);
    // static private System.Void .cctor()
    // Offset: 0x1E75364
    static void _cctor();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xBB1EDC
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.String ToString()
    // Offset: 0xBB1F1C
    // Implemented from: System.ValueType
    // Base method: System.String ValueType::ToString()
    ::StringW ToString();
    // public override System.Int32 GetHashCode()
    // Offset: 0xBB1F84
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt
  #pragma pack(pop)
  static check_size<sizeof(ObscuredUInt), 16 + sizeof(bool)> __CodeStage_AntiCheat_ObscuredTypes_ObscuredUIntSizeCheck;
  static_assert(sizeof(ObscuredUInt) == 0x11);
  // static public CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt op_Increment(CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt input)
  // Offset: 0x1E74F9C
  ::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt operator++(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt& input);
  // static public CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt op_Decrement(CodeStage.AntiCheat.ObscuredTypes.ObscuredUInt input)
  // Offset: 0x1E75058
  ::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt operator--(const ::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt& input);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ObscuredUInt
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::SetNewCryptoKey
// Il2CppName: SetNewCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::SetNewCryptoKey)> {
  static const MethodInfo* get() {
    static auto* newKey = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "SetNewCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newKey});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Encrypt
// Il2CppName: Encrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Encrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "Encrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Decrypt
// Il2CppName: Decrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Decrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "Decrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Encrypt
// Il2CppName: Encrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Encrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "Encrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, key});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Decrypt
// Il2CppName: Decrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint, uint)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Decrypt)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "Decrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, key});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ApplyNewCryptoKey
// Il2CppName: ApplyNewCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ApplyNewCryptoKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "ApplyNewCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::RandomizeCryptoKey
// Il2CppName: RandomizeCryptoKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::RandomizeCryptoKey)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "RandomizeCryptoKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetEncrypted
// Il2CppName: GetEncrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetEncrypted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "GetEncrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::SetEncrypted
// Il2CppName: SetEncrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)(uint)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::SetEncrypted)> {
  static const MethodInfo* get() {
    static auto* encrypted = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "SetEncrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{encrypted});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetDecrypted
// Il2CppName: GetDecrypted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetDecrypted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "GetDecrypted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::InternalDecrypt
// Il2CppName: InternalDecrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::InternalDecrypt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "InternalDecrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::operator ::CodeStage::AntiCheat::ObscuredTypes::ObInt
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)(::CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("CodeStage.AntiCheat.ObscuredTypes", "ObscuredUInt")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)(::StringW)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)(::System::IFormatProvider*)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString)> {
  static const MethodInfo* get() {
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{provider});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)(::StringW, ::System::IFormatProvider*)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString)> {
  static const MethodInfo* get() {
    static auto* format = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* provider = &::il2cpp_utils::GetClassFromName("System", "IFormatProvider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{format, provider});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)(::Il2CppObject*)>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::*)()>(&CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::operator++
// Il2CppName: op_Increment
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: CodeStage::AntiCheat::ObscuredTypes::ObscuredUInt::operator--
// Il2CppName: op_Decrement
// Cannot perform method pointer template specialization from operators!
