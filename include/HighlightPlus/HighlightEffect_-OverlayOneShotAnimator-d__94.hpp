// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: HighlightPlus.HighlightEffect
#include "HighlightPlus/HighlightEffect.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: WaitForEndOfFrame
  class WaitForEndOfFrame;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94);
DEFINE_IL2CPP_ARG_TYPE(::HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94*, "HighlightPlus", "HighlightEffect/<OverlayOneShotAnimator>d__94");
// Type namespace: HighlightPlus
namespace HighlightPlus {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: HighlightPlus.HighlightEffect/<OverlayOneShotAnimator>d__94
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AD21E8
  class HighlightEffect::$OverlayOneShotAnimator$d__94 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*/ {
    public:
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: $$1__state and: $$2__current
    char __padding0[0x4] = {};
    // private System.Object <>2__current
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* $$2__current;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // public HighlightPlus.HighlightEffect <>4__this
    // Size: 0x8
    // Offset: 0x20
    ::HighlightPlus::HighlightEffect* $$4__this;
    // Field size check
    static_assert(sizeof(::HighlightPlus::HighlightEffect*) == 0x8);
    // public UnityEngine.Color color
    // Size: 0x10
    // Offset: 0x28
    ::UnityEngine::Color color;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public System.Single duration
    // Size: 0x4
    // Offset: 0x38
    float duration;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <startTime>5__2
    // Size: 0x4
    // Offset: 0x3C
    float $startTime$5__2;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single <t>5__3
    // Size: 0x4
    // Offset: 0x40
    float $t$5__3;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: $t$5__3 and: $ef$5__4
    char __padding6[0x4] = {};
    // private UnityEngine.WaitForEndOfFrame <ef>5__4
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::WaitForEndOfFrame* $ef$5__4;
    // Field size check
    static_assert(sizeof(::UnityEngine::WaitForEndOfFrame*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>
    operator ::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*>(this);
    }
    // Get instance field reference: private System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: private System.Object <>2__current
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_$$2__current();
    // Get instance field reference: public HighlightPlus.HighlightEffect <>4__this
    [[deprecated("Use field access instead!")]] ::HighlightPlus::HighlightEffect*& dyn_$$4__this();
    // Get instance field reference: public UnityEngine.Color color
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_color();
    // Get instance field reference: public System.Single duration
    [[deprecated("Use field access instead!")]] float& dyn_duration();
    // Get instance field reference: private System.Single <startTime>5__2
    [[deprecated("Use field access instead!")]] float& dyn_$startTime$5__2();
    // Get instance field reference: private System.Single <t>5__3
    [[deprecated("Use field access instead!")]] float& dyn_$t$5__3();
    // Get instance field reference: private UnityEngine.WaitForEndOfFrame <ef>5__4
    [[deprecated("Use field access instead!")]] ::UnityEngine::WaitForEndOfFrame*& dyn_$ef$5__4();
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0x149AD74
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HighlightEffect::$OverlayOneShotAnimator$d__94* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HighlightEffect::$OverlayOneShotAnimator$d__94*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x149AE6C
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0x149AE70
    bool MoveNext();
    // private System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()
    // Offset: 0x149B004
    ::Il2CppObject* System_Collections_Generic_IEnumerator$System_Object$_get_Current();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x149B00C
    void System_Collections_IEnumerator_Reset();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x149B074
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
  }; // HighlightPlus.HighlightEffect/<OverlayOneShotAnimator>d__94
  #pragma pack(pop)
  static check_size<sizeof(HighlightEffect::$OverlayOneShotAnimator$d__94), 72 + sizeof(::UnityEngine::WaitForEndOfFrame*)> __HighlightPlus_HighlightEffect_$OverlayOneShotAnimator$d__94SizeCheck;
  static_assert(sizeof(HighlightEffect::$OverlayOneShotAnimator$d__94) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::*)()>(&HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::*)()>(&HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::*)()>(&HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::*)()>(&HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::System_Collections_IEnumerator_Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::*)()>(&HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HighlightPlus::HighlightEffect::$OverlayOneShotAnimator$d__94*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
