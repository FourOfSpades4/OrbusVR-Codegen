// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Jacovone
namespace Jacovone {
  // Forward declaring type: PathMagic
  class PathMagic;
  // Forward declaring type: PathMagicAnimator
  class PathMagicAnimator;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: Jacovone.CameraTools
namespace Jacovone::CameraTools {
  // Forward declaring type: PathMagicFollower
  class PathMagicFollower;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Jacovone::CameraTools::PathMagicFollower);
DEFINE_IL2CPP_ARG_TYPE(::Jacovone::CameraTools::PathMagicFollower*, "Jacovone.CameraTools", "PathMagicFollower");
// Type namespace: Jacovone.CameraTools
namespace Jacovone::CameraTools {
  // Size: 0x3C
  #pragma pack(push, 1)
  // Autogenerated type: Jacovone.CameraTools.PathMagicFollower
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExecuteInEditMode] Offset: FFFFFFFF
  class PathMagicFollower : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public Jacovone.PathMagic pathMagic
    // Size: 0x8
    // Offset: 0x18
    ::Jacovone::PathMagic* pathMagic;
    // Field size check
    static_assert(sizeof(::Jacovone::PathMagic*) == 0x8);
    // public Jacovone.PathMagicAnimator pathMagicAnimator
    // Size: 0x8
    // Offset: 0x20
    ::Jacovone::PathMagicAnimator* pathMagicAnimator;
    // Field size check
    static_assert(sizeof(::Jacovone::PathMagicAnimator*) == 0x8);
    // public UnityEngine.Transform target
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::Transform* target;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public System.Int32 precision
    // Size: 0x4
    // Offset: 0x30
    int precision;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean accurate
    // Size: 0x1
    // Offset: 0x34
    bool accurate;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean waypointsOnly
    // Size: 0x1
    // Offset: 0x35
    bool waypointsOnly;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean lerpPosition
    // Size: 0x1
    // Offset: 0x36
    bool lerpPosition;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: lerpPosition and: lerpFactor
    char __padding6[0x1] = {};
    // public System.Single lerpFactor
    // Size: 0x4
    // Offset: 0x38
    float lerpFactor;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public Jacovone.PathMagic pathMagic
    [[deprecated("Use field access instead!")]] ::Jacovone::PathMagic*& dyn_pathMagic();
    // Get instance field reference: public Jacovone.PathMagicAnimator pathMagicAnimator
    [[deprecated("Use field access instead!")]] ::Jacovone::PathMagicAnimator*& dyn_pathMagicAnimator();
    // Get instance field reference: public UnityEngine.Transform target
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_target();
    // Get instance field reference: public System.Int32 precision
    [[deprecated("Use field access instead!")]] int& dyn_precision();
    // Get instance field reference: public System.Boolean accurate
    [[deprecated("Use field access instead!")]] bool& dyn_accurate();
    // Get instance field reference: public System.Boolean waypointsOnly
    [[deprecated("Use field access instead!")]] bool& dyn_waypointsOnly();
    // Get instance field reference: public System.Boolean lerpPosition
    [[deprecated("Use field access instead!")]] bool& dyn_lerpPosition();
    // Get instance field reference: public System.Single lerpFactor
    [[deprecated("Use field access instead!")]] float& dyn_lerpFactor();
    // public UnityEngine.Transform get_Target()
    // Offset: 0x1057944
    ::UnityEngine::Transform* get_Target();
    // public System.Void set_Target(UnityEngine.Transform value)
    // Offset: 0x105794C
    void set_Target(::UnityEngine::Transform* value);
    // public System.Int32 get_Precision()
    // Offset: 0x1057954
    int get_Precision();
    // public System.Void set_Precision(System.Int32 value)
    // Offset: 0x105795C
    void set_Precision(int value);
    // public System.Boolean get_Accurate()
    // Offset: 0x1057964
    bool get_Accurate();
    // public System.Void set_Accurate(System.Boolean value)
    // Offset: 0x105796C
    void set_Accurate(bool value);
    // public System.Boolean get_WaypointsOnly()
    // Offset: 0x1057978
    bool get_WaypointsOnly();
    // public System.Void set_WaypointsOnly(System.Boolean value)
    // Offset: 0x1057980
    void set_WaypointsOnly(bool value);
    // public System.Boolean get_LerpPosition()
    // Offset: 0x105798C
    bool get_LerpPosition();
    // public System.Void set_LerpPosition(System.Boolean value)
    // Offset: 0x1057994
    void set_LerpPosition(bool value);
    // public System.Single get_LerpFactor()
    // Offset: 0x10579A0
    float get_LerpFactor();
    // public System.Void set_LerpFactor(System.Single value)
    // Offset: 0x10579A8
    void set_LerpFactor(float value);
    // private System.Void Awake()
    // Offset: 0x10579B0
    void Awake();
    // private System.Void OnEnable()
    // Offset: 0x1057A9C
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x1057AA0
    void OnDisable();
    // public System.Single get_CurrentPos()
    // Offset: 0x1057AA4
    float get_CurrentPos();
    // public System.Void set_CurrentPos(System.Single value)
    // Offset: 0x1057B98
    void set_CurrentPos(float value);
    // public Jacovone.PathMagic get_Path()
    // Offset: 0x10583D0
    ::Jacovone::PathMagic* get_Path();
    // public UnityEngine.Vector3 get_PointOfView()
    // Offset: 0x10584A4
    ::UnityEngine::Vector3 get_PointOfView();
    // private System.Void Update()
    // Offset: 0x10591A0
    void Update();
    // private System.Single computeWaypointPosAtMinDistance()
    // Offset: 0x1059354
    float computeWaypointPosAtMinDistance();
    // private System.Single computePosAtMinDistance()
    // Offset: 0x1059648
    float computePosAtMinDistance();
    // private UnityEngine.Vector3 GetPositionForPos(System.Single pos)
    // Offset: 0x10599F4
    ::UnityEngine::Vector3 GetPositionForPos(float pos);
    // public System.Void .ctor()
    // Offset: 0x1059BB4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PathMagicFollower* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Jacovone::CameraTools::PathMagicFollower::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PathMagicFollower*, creationType>()));
    }
  }; // Jacovone.CameraTools.PathMagicFollower
  #pragma pack(pop)
  static check_size<sizeof(PathMagicFollower), 56 + sizeof(float)> __Jacovone_CameraTools_PathMagicFollowerSizeCheck;
  static_assert(sizeof(PathMagicFollower) == 0x3C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::get_Target
// Il2CppName: get_Target
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Transform* (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::get_Target)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "get_Target", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::set_Target
// Il2CppName: set_Target
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Jacovone::CameraTools::PathMagicFollower::*)(::UnityEngine::Transform*)>(&Jacovone::CameraTools::PathMagicFollower::set_Target)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "set_Target", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::get_Precision
// Il2CppName: get_Precision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::get_Precision)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "get_Precision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::set_Precision
// Il2CppName: set_Precision
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Jacovone::CameraTools::PathMagicFollower::*)(int)>(&Jacovone::CameraTools::PathMagicFollower::set_Precision)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "set_Precision", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::get_Accurate
// Il2CppName: get_Accurate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::get_Accurate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "get_Accurate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::set_Accurate
// Il2CppName: set_Accurate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Jacovone::CameraTools::PathMagicFollower::*)(bool)>(&Jacovone::CameraTools::PathMagicFollower::set_Accurate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "set_Accurate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::get_WaypointsOnly
// Il2CppName: get_WaypointsOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::get_WaypointsOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "get_WaypointsOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::set_WaypointsOnly
// Il2CppName: set_WaypointsOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Jacovone::CameraTools::PathMagicFollower::*)(bool)>(&Jacovone::CameraTools::PathMagicFollower::set_WaypointsOnly)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "set_WaypointsOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::get_LerpPosition
// Il2CppName: get_LerpPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::get_LerpPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "get_LerpPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::set_LerpPosition
// Il2CppName: set_LerpPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Jacovone::CameraTools::PathMagicFollower::*)(bool)>(&Jacovone::CameraTools::PathMagicFollower::set_LerpPosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "set_LerpPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::get_LerpFactor
// Il2CppName: get_LerpFactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::get_LerpFactor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "get_LerpFactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::set_LerpFactor
// Il2CppName: set_LerpFactor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Jacovone::CameraTools::PathMagicFollower::*)(float)>(&Jacovone::CameraTools::PathMagicFollower::set_LerpFactor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "set_LerpFactor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::get_CurrentPos
// Il2CppName: get_CurrentPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::get_CurrentPos)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "get_CurrentPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::set_CurrentPos
// Il2CppName: set_CurrentPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Jacovone::CameraTools::PathMagicFollower::*)(float)>(&Jacovone::CameraTools::PathMagicFollower::set_CurrentPos)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "set_CurrentPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::get_Path
// Il2CppName: get_Path
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Jacovone::PathMagic* (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::get_Path)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "get_Path", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::get_PointOfView
// Il2CppName: get_PointOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::get_PointOfView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "get_PointOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::computeWaypointPosAtMinDistance
// Il2CppName: computeWaypointPosAtMinDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::computeWaypointPosAtMinDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "computeWaypointPosAtMinDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::computePosAtMinDistance
// Il2CppName: computePosAtMinDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Jacovone::CameraTools::PathMagicFollower::*)()>(&Jacovone::CameraTools::PathMagicFollower::computePosAtMinDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "computePosAtMinDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::GetPositionForPos
// Il2CppName: GetPositionForPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Jacovone::CameraTools::PathMagicFollower::*)(float)>(&Jacovone::CameraTools::PathMagicFollower::GetPositionForPos)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Jacovone::CameraTools::PathMagicFollower*), "GetPositionForPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: Jacovone::CameraTools::PathMagicFollower::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
