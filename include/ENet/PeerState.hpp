// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: ENet
namespace ENet {
  // Forward declaring type: PeerState
  struct PeerState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::ENet::PeerState, "ENet", "PeerState");
// Type namespace: ENet
namespace ENet {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: ENet.PeerState
  // [TokenAttribute] Offset: FFFFFFFF
  struct PeerState/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: PeerState
    constexpr PeerState(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public ENet.PeerState Uninitialized
    static constexpr const int Uninitialized = -1;
    // Get static field: static public ENet.PeerState Uninitialized
    static ::ENet::PeerState _get_Uninitialized();
    // Set static field: static public ENet.PeerState Uninitialized
    static void _set_Uninitialized(::ENet::PeerState value);
    // static field const value: static public ENet.PeerState Disconnected
    static constexpr const int Disconnected = 0;
    // Get static field: static public ENet.PeerState Disconnected
    static ::ENet::PeerState _get_Disconnected();
    // Set static field: static public ENet.PeerState Disconnected
    static void _set_Disconnected(::ENet::PeerState value);
    // static field const value: static public ENet.PeerState Connecting
    static constexpr const int Connecting = 1;
    // Get static field: static public ENet.PeerState Connecting
    static ::ENet::PeerState _get_Connecting();
    // Set static field: static public ENet.PeerState Connecting
    static void _set_Connecting(::ENet::PeerState value);
    // static field const value: static public ENet.PeerState AcknowledgingConnect
    static constexpr const int AcknowledgingConnect = 2;
    // Get static field: static public ENet.PeerState AcknowledgingConnect
    static ::ENet::PeerState _get_AcknowledgingConnect();
    // Set static field: static public ENet.PeerState AcknowledgingConnect
    static void _set_AcknowledgingConnect(::ENet::PeerState value);
    // static field const value: static public ENet.PeerState ConnectionPending
    static constexpr const int ConnectionPending = 3;
    // Get static field: static public ENet.PeerState ConnectionPending
    static ::ENet::PeerState _get_ConnectionPending();
    // Set static field: static public ENet.PeerState ConnectionPending
    static void _set_ConnectionPending(::ENet::PeerState value);
    // static field const value: static public ENet.PeerState ConnectionSucceeded
    static constexpr const int ConnectionSucceeded = 4;
    // Get static field: static public ENet.PeerState ConnectionSucceeded
    static ::ENet::PeerState _get_ConnectionSucceeded();
    // Set static field: static public ENet.PeerState ConnectionSucceeded
    static void _set_ConnectionSucceeded(::ENet::PeerState value);
    // static field const value: static public ENet.PeerState Connected
    static constexpr const int Connected = 5;
    // Get static field: static public ENet.PeerState Connected
    static ::ENet::PeerState _get_Connected();
    // Set static field: static public ENet.PeerState Connected
    static void _set_Connected(::ENet::PeerState value);
    // static field const value: static public ENet.PeerState DisconnectingLater
    static constexpr const int DisconnectingLater = 6;
    // Get static field: static public ENet.PeerState DisconnectingLater
    static ::ENet::PeerState _get_DisconnectingLater();
    // Set static field: static public ENet.PeerState DisconnectingLater
    static void _set_DisconnectingLater(::ENet::PeerState value);
    // static field const value: static public ENet.PeerState Disconnecting
    static constexpr const int Disconnecting = 7;
    // Get static field: static public ENet.PeerState Disconnecting
    static ::ENet::PeerState _get_Disconnecting();
    // Set static field: static public ENet.PeerState Disconnecting
    static void _set_Disconnecting(::ENet::PeerState value);
    // static field const value: static public ENet.PeerState AcknowledgingDisconnect
    static constexpr const int AcknowledgingDisconnect = 8;
    // Get static field: static public ENet.PeerState AcknowledgingDisconnect
    static ::ENet::PeerState _get_AcknowledgingDisconnect();
    // Set static field: static public ENet.PeerState AcknowledgingDisconnect
    static void _set_AcknowledgingDisconnect(::ENet::PeerState value);
    // static field const value: static public ENet.PeerState Zombie
    static constexpr const int Zombie = 9;
    // Get static field: static public ENet.PeerState Zombie
    static ::ENet::PeerState _get_Zombie();
    // Set static field: static public ENet.PeerState Zombie
    static void _set_Zombie(::ENet::PeerState value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // ENet.PeerState
  #pragma pack(pop)
  static check_size<sizeof(PeerState), 0 + sizeof(int)> __ENet_PeerStateSizeCheck;
  static_assert(sizeof(PeerState) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
