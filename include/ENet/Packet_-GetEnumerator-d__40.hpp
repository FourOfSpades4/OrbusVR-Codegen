// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ENet.Packet
#include "ENet/Packet.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ENet::Packet::$GetEnumerator$d__40);
DEFINE_IL2CPP_ARG_TYPE(::ENet::Packet::$GetEnumerator$d__40*, "ENet", "Packet/<GetEnumerator>d__40");
// Type namespace: ENet
namespace ENet {
  // Size: 0x2C
  #pragma pack(push, 1)
  // Autogenerated type: ENet.Packet/<GetEnumerator>d__40
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AB2A48
  class Packet::$GetEnumerator$d__40 : public ::Il2CppObject/*, public ::System::Collections::Generic::IEnumerator_1<uint8_t>*/ {
    public:
    public:
    // private System.Int32 <>1__state
    // Size: 0x4
    // Offset: 0x10
    int $$1__state;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Byte <>2__current
    // Size: 0x1
    // Offset: 0x14
    uint8_t $$2__current;
    // Field size check
    static_assert(sizeof(uint8_t) == 0x1);
    // Padding between fields: $$2__current and: $$4__this
    char __padding1[0x3] = {};
    // public ENet.Packet <>4__this
    // Size: 0x10
    // Offset: 0x18
    ::ENet::Packet $$4__this;
    // Field size check
    static_assert(sizeof(::ENet::Packet) == 0x10);
    // private System.Int32 <i>5__1
    // Size: 0x4
    // Offset: 0x28
    int $i$5__1;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerator_1<uint8_t>
    operator ::System::Collections::Generic::IEnumerator_1<uint8_t>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<uint8_t>*>(this);
    }
    // Get instance field reference: private System.Int32 <>1__state
    [[deprecated("Use field access instead!")]] int& dyn_$$1__state();
    // Get instance field reference: private System.Byte <>2__current
    [[deprecated("Use field access instead!")]] uint8_t& dyn_$$2__current();
    // Get instance field reference: public ENet.Packet <>4__this
    [[deprecated("Use field access instead!")]] ::ENet::Packet& dyn_$$4__this();
    // Get instance field reference: private System.Int32 <i>5__1
    [[deprecated("Use field access instead!")]] int& dyn_$i$5__1();
    // public System.Void .ctor(System.Int32 <>1__state)
    // Offset: 0x285C684
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Packet::$GetEnumerator$d__40* New_ctor(int $$1__state) {
      static auto ___internal__logger = ::Logger::get().WithContext("::ENet::Packet::$GetEnumerator$d__40::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Packet::$GetEnumerator$d__40*, creationType>($$1__state)));
    }
    // private System.Void System.IDisposable.Dispose()
    // Offset: 0x285D334
    void System_IDisposable_Dispose();
    // private System.Boolean MoveNext()
    // Offset: 0x285D338
    bool MoveNext();
    // private System.Byte System.Collections.Generic.IEnumerator<System.Byte>.get_Current()
    // Offset: 0x285D3D4
    uint8_t System_Collections_Generic_IEnumerator$System_Byte$_get_Current();
    // private System.Void System.Collections.IEnumerator.Reset()
    // Offset: 0x285D3DC
    void System_Collections_IEnumerator_Reset();
    // private System.Object System.Collections.IEnumerator.get_Current()
    // Offset: 0x285D444
    ::Il2CppObject* System_Collections_IEnumerator_get_Current();
  }; // ENet.Packet/<GetEnumerator>d__40
  #pragma pack(pop)
  static check_size<sizeof(Packet::$GetEnumerator$d__40), 40 + sizeof(int)> __ENet_Packet_$GetEnumerator$d__40SizeCheck;
  static_assert(sizeof(Packet::$GetEnumerator$d__40) == 0x2C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ENet::Packet::$GetEnumerator$d__40::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ENet::Packet::$GetEnumerator$d__40::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ENet::Packet::$GetEnumerator$d__40::*)()>(&ENet::Packet::$GetEnumerator$d__40::System_IDisposable_Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ENet::Packet::$GetEnumerator$d__40*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ENet::Packet::$GetEnumerator$d__40::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ENet::Packet::$GetEnumerator$d__40::*)()>(&ENet::Packet::$GetEnumerator$d__40::MoveNext)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ENet::Packet::$GetEnumerator$d__40*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ENet::Packet::$GetEnumerator$d__40::System_Collections_Generic_IEnumerator$System_Byte$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Byte>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (ENet::Packet::$GetEnumerator$d__40::*)()>(&ENet::Packet::$GetEnumerator$d__40::System_Collections_Generic_IEnumerator$System_Byte$_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ENet::Packet::$GetEnumerator$d__40*), "System.Collections.Generic.IEnumerator<System.Byte>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ENet::Packet::$GetEnumerator$d__40::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ENet::Packet::$GetEnumerator$d__40::*)()>(&ENet::Packet::$GetEnumerator$d__40::System_Collections_IEnumerator_Reset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ENet::Packet::$GetEnumerator$d__40*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ENet::Packet::$GetEnumerator$d__40::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ENet::Packet::$GetEnumerator$d__40::*)()>(&ENet::Packet::$GetEnumerator$d__40::System_Collections_IEnumerator_get_Current)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ENet::Packet::$GetEnumerator$d__40*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
