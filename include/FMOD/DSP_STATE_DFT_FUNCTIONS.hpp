// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: FMOD
namespace FMOD {
  // Forward declaring type: DSP_DFT_FFTREAL_FUNC
  class DSP_DFT_FFTREAL_FUNC;
  // Forward declaring type: DSP_DFT_IFFTREAL_FUNC
  class DSP_DFT_IFFTREAL_FUNC;
}
// Completed forward declares
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: DSP_STATE_DFT_FUNCTIONS
  struct DSP_STATE_DFT_FUNCTIONS;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::DSP_STATE_DFT_FUNCTIONS, "FMOD", "DSP_STATE_DFT_FUNCTIONS");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: FMOD.DSP_STATE_DFT_FUNCTIONS
  // [TokenAttribute] Offset: FFFFFFFF
  struct DSP_STATE_DFT_FUNCTIONS/*, public ::System::ValueType*/ {
    public:
    public:
    // public FMOD.DSP_DFT_FFTREAL_FUNC fftreal
    // Size: 0x8
    // Offset: 0x0
    ::FMOD::DSP_DFT_FFTREAL_FUNC* fftreal;
    // Field size check
    static_assert(sizeof(::FMOD::DSP_DFT_FFTREAL_FUNC*) == 0x8);
    // public FMOD.DSP_DFT_IFFTREAL_FUNC inversefftreal
    // Size: 0x8
    // Offset: 0x8
    ::FMOD::DSP_DFT_IFFTREAL_FUNC* inversefftreal;
    // Field size check
    static_assert(sizeof(::FMOD::DSP_DFT_IFFTREAL_FUNC*) == 0x8);
    public:
    // Creating value type constructor for type: DSP_STATE_DFT_FUNCTIONS
    constexpr DSP_STATE_DFT_FUNCTIONS(::FMOD::DSP_DFT_FFTREAL_FUNC* fftreal_ = {}, ::FMOD::DSP_DFT_IFFTREAL_FUNC* inversefftreal_ = {}) noexcept : fftreal{fftreal_}, inversefftreal{inversefftreal_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public FMOD.DSP_DFT_FFTREAL_FUNC fftreal
    [[deprecated("Use field access instead!")]] ::FMOD::DSP_DFT_FFTREAL_FUNC*& dyn_fftreal();
    // Get instance field reference: public FMOD.DSP_DFT_IFFTREAL_FUNC inversefftreal
    [[deprecated("Use field access instead!")]] ::FMOD::DSP_DFT_IFFTREAL_FUNC*& dyn_inversefftreal();
  }; // FMOD.DSP_STATE_DFT_FUNCTIONS
  #pragma pack(pop)
  static check_size<sizeof(DSP_STATE_DFT_FUNCTIONS), 8 + sizeof(::FMOD::DSP_DFT_IFFTREAL_FUNC*)> __FMOD_DSP_STATE_DFT_FUNCTIONSSizeCheck;
  static_assert(sizeof(DSP_STATE_DFT_FUNCTIONS) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
