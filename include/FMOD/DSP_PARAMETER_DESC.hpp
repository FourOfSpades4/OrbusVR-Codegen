// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: FMOD.DSP_PARAMETER_TYPE
#include "FMOD/DSP_PARAMETER_TYPE.hpp"
// Including type: FMOD.DSP_PARAMETER_DESC_UNION
#include "FMOD/DSP_PARAMETER_DESC_UNION.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: DSP_PARAMETER_DESC
  struct DSP_PARAMETER_DESC;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::DSP_PARAMETER_DESC, "FMOD", "DSP_PARAMETER_DESC");
// Type namespace: FMOD
namespace FMOD {
  // WARNING Size may be invalid!
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: FMOD.DSP_PARAMETER_DESC
  // [TokenAttribute] Offset: FFFFFFFF
  struct DSP_PARAMETER_DESC/*, public ::System::ValueType*/ {
    public:
    public:
    // public FMOD.DSP_PARAMETER_TYPE type
    // Size: 0x4
    // Offset: 0x0
    ::FMOD::DSP_PARAMETER_TYPE type;
    // Field size check
    static_assert(sizeof(::FMOD::DSP_PARAMETER_TYPE) == 0x4);
    // public System.Char[] name
    // Size: 0x8
    // Offset: 0x8
    ::ArrayW<::Il2CppChar> name;
    // Field size check
    static_assert(sizeof(::ArrayW<::Il2CppChar>) == 0x8);
    // public System.Char[] label
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::Il2CppChar> label;
    // Field size check
    static_assert(sizeof(::ArrayW<::Il2CppChar>) == 0x8);
    // public System.String description
    // Size: 0x8
    // Offset: 0x18
    ::StringW description;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public FMOD.DSP_PARAMETER_DESC_UNION desc
    // Size: 0xFFFFFFFF
    // Offset: 0x20
    ::FMOD::DSP_PARAMETER_DESC_UNION desc;
    public:
    // Creating value type constructor for type: DSP_PARAMETER_DESC
    constexpr DSP_PARAMETER_DESC(::FMOD::DSP_PARAMETER_TYPE type_ = {}, ::ArrayW<::Il2CppChar> name_ = ::ArrayW<::Il2CppChar>(static_cast<void*>(nullptr)), ::ArrayW<::Il2CppChar> label_ = ::ArrayW<::Il2CppChar>(static_cast<void*>(nullptr)), ::StringW description_ = {}, ::FMOD::DSP_PARAMETER_DESC_UNION desc_ = {}) noexcept : type{type_}, name{name_}, label{label_}, description{description_}, desc{desc_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public FMOD.DSP_PARAMETER_TYPE type
    [[deprecated("Use field access instead!")]] ::FMOD::DSP_PARAMETER_TYPE& dyn_type();
    // Get instance field reference: public System.Char[] name
    [[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& dyn_name();
    // Get instance field reference: public System.Char[] label
    [[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& dyn_label();
    // Get instance field reference: public System.String description
    [[deprecated("Use field access instead!")]] ::StringW& dyn_description();
    // Get instance field reference: public FMOD.DSP_PARAMETER_DESC_UNION desc
    [[deprecated("Use field access instead!")]] ::FMOD::DSP_PARAMETER_DESC_UNION& dyn_desc();
  }; // FMOD.DSP_PARAMETER_DESC
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
