// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: SOUNDGROUP_BEHAVIOR
  struct SOUNDGROUP_BEHAVIOR;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::SOUNDGROUP_BEHAVIOR, "FMOD", "SOUNDGROUP_BEHAVIOR");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.SOUNDGROUP_BEHAVIOR
  // [TokenAttribute] Offset: FFFFFFFF
  struct SOUNDGROUP_BEHAVIOR/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: SOUNDGROUP_BEHAVIOR
    constexpr SOUNDGROUP_BEHAVIOR(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public FMOD.SOUNDGROUP_BEHAVIOR BEHAVIOR_FAIL
    static constexpr const int BEHAVIOR_FAIL = 0;
    // Get static field: static public FMOD.SOUNDGROUP_BEHAVIOR BEHAVIOR_FAIL
    static ::FMOD::SOUNDGROUP_BEHAVIOR _get_BEHAVIOR_FAIL();
    // Set static field: static public FMOD.SOUNDGROUP_BEHAVIOR BEHAVIOR_FAIL
    static void _set_BEHAVIOR_FAIL(::FMOD::SOUNDGROUP_BEHAVIOR value);
    // static field const value: static public FMOD.SOUNDGROUP_BEHAVIOR BEHAVIOR_MUTE
    static constexpr const int BEHAVIOR_MUTE = 1;
    // Get static field: static public FMOD.SOUNDGROUP_BEHAVIOR BEHAVIOR_MUTE
    static ::FMOD::SOUNDGROUP_BEHAVIOR _get_BEHAVIOR_MUTE();
    // Set static field: static public FMOD.SOUNDGROUP_BEHAVIOR BEHAVIOR_MUTE
    static void _set_BEHAVIOR_MUTE(::FMOD::SOUNDGROUP_BEHAVIOR value);
    // static field const value: static public FMOD.SOUNDGROUP_BEHAVIOR BEHAVIOR_STEALLOWEST
    static constexpr const int BEHAVIOR_STEALLOWEST = 2;
    // Get static field: static public FMOD.SOUNDGROUP_BEHAVIOR BEHAVIOR_STEALLOWEST
    static ::FMOD::SOUNDGROUP_BEHAVIOR _get_BEHAVIOR_STEALLOWEST();
    // Set static field: static public FMOD.SOUNDGROUP_BEHAVIOR BEHAVIOR_STEALLOWEST
    static void _set_BEHAVIOR_STEALLOWEST(::FMOD::SOUNDGROUP_BEHAVIOR value);
    // static field const value: static public FMOD.SOUNDGROUP_BEHAVIOR MAX
    static constexpr const int MAX = 3;
    // Get static field: static public FMOD.SOUNDGROUP_BEHAVIOR MAX
    static ::FMOD::SOUNDGROUP_BEHAVIOR _get_MAX();
    // Set static field: static public FMOD.SOUNDGROUP_BEHAVIOR MAX
    static void _set_MAX(::FMOD::SOUNDGROUP_BEHAVIOR value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // FMOD.SOUNDGROUP_BEHAVIOR
  #pragma pack(pop)
  static check_size<sizeof(SOUNDGROUP_BEHAVIOR), 0 + sizeof(int)> __FMOD_SOUNDGROUP_BEHAVIORSizeCheck;
  static_assert(sizeof(SOUNDGROUP_BEHAVIOR) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
