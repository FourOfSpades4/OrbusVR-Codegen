// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: ERRORCALLBACK_INSTANCETYPE
  struct ERRORCALLBACK_INSTANCETYPE;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::ERRORCALLBACK_INSTANCETYPE, "FMOD", "ERRORCALLBACK_INSTANCETYPE");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.ERRORCALLBACK_INSTANCETYPE
  // [TokenAttribute] Offset: FFFFFFFF
  struct ERRORCALLBACK_INSTANCETYPE/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ERRORCALLBACK_INSTANCETYPE
    constexpr ERRORCALLBACK_INSTANCETYPE(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE NONE
    static constexpr const int NONE = 0;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE NONE
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_NONE();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE NONE
    static void _set_NONE(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE SYSTEM
    static constexpr const int SYSTEM = 1;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE SYSTEM
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_SYSTEM();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE SYSTEM
    static void _set_SYSTEM(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE CHANNEL
    static constexpr const int CHANNEL = 2;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE CHANNEL
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_CHANNEL();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE CHANNEL
    static void _set_CHANNEL(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE CHANNELGROUP
    static constexpr const int CHANNELGROUP = 3;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE CHANNELGROUP
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_CHANNELGROUP();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE CHANNELGROUP
    static void _set_CHANNELGROUP(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE CHANNELCONTROL
    static constexpr const int CHANNELCONTROL = 4;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE CHANNELCONTROL
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_CHANNELCONTROL();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE CHANNELCONTROL
    static void _set_CHANNELCONTROL(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE SOUND
    static constexpr const int SOUND = 5;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE SOUND
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_SOUND();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE SOUND
    static void _set_SOUND(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE SOUNDGROUP
    static constexpr const int SOUNDGROUP = 6;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE SOUNDGROUP
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_SOUNDGROUP();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE SOUNDGROUP
    static void _set_SOUNDGROUP(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE DSP
    static constexpr const int DSP = 7;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE DSP
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_DSP();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE DSP
    static void _set_DSP(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE DSPCONNECTION
    static constexpr const int DSPCONNECTION = 8;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE DSPCONNECTION
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_DSPCONNECTION();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE DSPCONNECTION
    static void _set_DSPCONNECTION(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE GEOMETRY
    static constexpr const int GEOMETRY = 9;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE GEOMETRY
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_GEOMETRY();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE GEOMETRY
    static void _set_GEOMETRY(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE REVERB3D
    static constexpr const int REVERB3D = 10;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE REVERB3D
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_REVERB3D();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE REVERB3D
    static void _set_REVERB3D(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_SYSTEM
    static constexpr const int STUDIO_SYSTEM = 11;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_SYSTEM
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_STUDIO_SYSTEM();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_SYSTEM
    static void _set_STUDIO_SYSTEM(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_EVENTDESCRIPTION
    static constexpr const int STUDIO_EVENTDESCRIPTION = 12;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_EVENTDESCRIPTION
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_STUDIO_EVENTDESCRIPTION();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_EVENTDESCRIPTION
    static void _set_STUDIO_EVENTDESCRIPTION(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_EVENTINSTANCE
    static constexpr const int STUDIO_EVENTINSTANCE = 13;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_EVENTINSTANCE
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_STUDIO_EVENTINSTANCE();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_EVENTINSTANCE
    static void _set_STUDIO_EVENTINSTANCE(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_PARAMETERINSTANCE
    static constexpr const int STUDIO_PARAMETERINSTANCE = 14;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_PARAMETERINSTANCE
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_STUDIO_PARAMETERINSTANCE();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_PARAMETERINSTANCE
    static void _set_STUDIO_PARAMETERINSTANCE(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_BUS
    static constexpr const int STUDIO_BUS = 15;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_BUS
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_STUDIO_BUS();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_BUS
    static void _set_STUDIO_BUS(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_VCA
    static constexpr const int STUDIO_VCA = 16;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_VCA
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_STUDIO_VCA();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_VCA
    static void _set_STUDIO_VCA(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_BANK
    static constexpr const int STUDIO_BANK = 17;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_BANK
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_STUDIO_BANK();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_BANK
    static void _set_STUDIO_BANK(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // static field const value: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_COMMANDREPLAY
    static constexpr const int STUDIO_COMMANDREPLAY = 18;
    // Get static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_COMMANDREPLAY
    static ::FMOD::ERRORCALLBACK_INSTANCETYPE _get_STUDIO_COMMANDREPLAY();
    // Set static field: static public FMOD.ERRORCALLBACK_INSTANCETYPE STUDIO_COMMANDREPLAY
    static void _set_STUDIO_COMMANDREPLAY(::FMOD::ERRORCALLBACK_INSTANCETYPE value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // FMOD.ERRORCALLBACK_INSTANCETYPE
  #pragma pack(pop)
  static check_size<sizeof(ERRORCALLBACK_INSTANCETYPE), 0 + sizeof(int)> __FMOD_ERRORCALLBACK_INSTANCETYPESizeCheck;
  static_assert(sizeof(ERRORCALLBACK_INSTANCETYPE) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
