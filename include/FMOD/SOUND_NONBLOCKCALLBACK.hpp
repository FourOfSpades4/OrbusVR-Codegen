// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: FMOD
namespace FMOD {
  // Forward declaring type: RESULT
  struct RESULT;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: SOUND_NONBLOCKCALLBACK
  class SOUND_NONBLOCKCALLBACK;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::FMOD::SOUND_NONBLOCKCALLBACK);
DEFINE_IL2CPP_ARG_TYPE(::FMOD::SOUND_NONBLOCKCALLBACK*, "FMOD", "SOUND_NONBLOCKCALLBACK");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.SOUND_NONBLOCKCALLBACK
  // [TokenAttribute] Offset: FFFFFFFF
  class SOUND_NONBLOCKCALLBACK : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x22DFA98
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SOUND_NONBLOCKCALLBACK* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::SOUND_NONBLOCKCALLBACK::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SOUND_NONBLOCKCALLBACK*, creationType>(object, method)));
    }
    // public FMOD.RESULT Invoke(System.IntPtr soundraw, FMOD.RESULT result)
    // Offset: 0x22DFAA8
    ::FMOD::RESULT Invoke(::System::IntPtr soundraw, ::FMOD::RESULT result);
    // public System.IAsyncResult BeginInvoke(System.IntPtr soundraw, FMOD.RESULT result, System.AsyncCallback callback, System.Object object)
    // Offset: 0x22DFF30
    ::System::IAsyncResult* BeginInvoke(::System::IntPtr soundraw, ::FMOD::RESULT result, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public FMOD.RESULT EndInvoke(System.IAsyncResult result)
    // Offset: 0x22DFFDC
    ::FMOD::RESULT EndInvoke(::System::IAsyncResult* result);
  }; // FMOD.SOUND_NONBLOCKCALLBACK
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: FMOD::SOUND_NONBLOCKCALLBACK::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: FMOD::SOUND_NONBLOCKCALLBACK::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::RESULT (FMOD::SOUND_NONBLOCKCALLBACK::*)(::System::IntPtr, ::FMOD::RESULT)>(&FMOD::SOUND_NONBLOCKCALLBACK::Invoke)> {
  static const MethodInfo* get() {
    static auto* soundraw = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("FMOD", "RESULT")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMOD::SOUND_NONBLOCKCALLBACK*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{soundraw, result});
  }
};
// Writing MetadataGetter for method: FMOD::SOUND_NONBLOCKCALLBACK::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (FMOD::SOUND_NONBLOCKCALLBACK::*)(::System::IntPtr, ::FMOD::RESULT, ::System::AsyncCallback*, ::Il2CppObject*)>(&FMOD::SOUND_NONBLOCKCALLBACK::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* soundraw = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("FMOD", "RESULT")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMOD::SOUND_NONBLOCKCALLBACK*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{soundraw, result, callback, object});
  }
};
// Writing MetadataGetter for method: FMOD::SOUND_NONBLOCKCALLBACK::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::RESULT (FMOD::SOUND_NONBLOCKCALLBACK::*)(::System::IAsyncResult*)>(&FMOD::SOUND_NONBLOCKCALLBACK::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMOD::SOUND_NONBLOCKCALLBACK*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
