// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: FMOD
namespace FMOD {
  // Forward declaring type: RESULT
  struct RESULT;
  // Forward declaring type: TIMEUNIT
  struct TIMEUNIT;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: SOUND_PCMSETPOSCALLBACK
  class SOUND_PCMSETPOSCALLBACK;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::FMOD::SOUND_PCMSETPOSCALLBACK);
DEFINE_IL2CPP_ARG_TYPE(::FMOD::SOUND_PCMSETPOSCALLBACK*, "FMOD", "SOUND_PCMSETPOSCALLBACK");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.SOUND_PCMSETPOSCALLBACK
  // [TokenAttribute] Offset: FFFFFFFF
  class SOUND_PCMSETPOSCALLBACK : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x22E05E0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SOUND_PCMSETPOSCALLBACK* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::SOUND_PCMSETPOSCALLBACK::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SOUND_PCMSETPOSCALLBACK*, creationType>(object, method)));
    }
    // public FMOD.RESULT Invoke(System.IntPtr soundraw, System.Int32 subsound, System.UInt32 position, FMOD.TIMEUNIT postype)
    // Offset: 0x22E05F0
    ::FMOD::RESULT Invoke(::System::IntPtr soundraw, int subsound, uint position, ::FMOD::TIMEUNIT postype);
    // public System.IAsyncResult BeginInvoke(System.IntPtr soundraw, System.Int32 subsound, System.UInt32 position, FMOD.TIMEUNIT postype, System.AsyncCallback callback, System.Object object)
    // Offset: 0x22E0AD0
    ::System::IAsyncResult* BeginInvoke(::System::IntPtr soundraw, int subsound, uint position, ::FMOD::TIMEUNIT postype, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public FMOD.RESULT EndInvoke(System.IAsyncResult result)
    // Offset: 0x22E0BB8
    ::FMOD::RESULT EndInvoke(::System::IAsyncResult* result);
  }; // FMOD.SOUND_PCMSETPOSCALLBACK
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: FMOD::SOUND_PCMSETPOSCALLBACK::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: FMOD::SOUND_PCMSETPOSCALLBACK::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::RESULT (FMOD::SOUND_PCMSETPOSCALLBACK::*)(::System::IntPtr, int, uint, ::FMOD::TIMEUNIT)>(&FMOD::SOUND_PCMSETPOSCALLBACK::Invoke)> {
  static const MethodInfo* get() {
    static auto* soundraw = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* subsound = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* postype = &::il2cpp_utils::GetClassFromName("FMOD", "TIMEUNIT")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMOD::SOUND_PCMSETPOSCALLBACK*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{soundraw, subsound, position, postype});
  }
};
// Writing MetadataGetter for method: FMOD::SOUND_PCMSETPOSCALLBACK::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (FMOD::SOUND_PCMSETPOSCALLBACK::*)(::System::IntPtr, int, uint, ::FMOD::TIMEUNIT, ::System::AsyncCallback*, ::Il2CppObject*)>(&FMOD::SOUND_PCMSETPOSCALLBACK::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* soundraw = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* subsound = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* postype = &::il2cpp_utils::GetClassFromName("FMOD", "TIMEUNIT")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMOD::SOUND_PCMSETPOSCALLBACK*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{soundraw, subsound, position, postype, callback, object});
  }
};
// Writing MetadataGetter for method: FMOD::SOUND_PCMSETPOSCALLBACK::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::RESULT (FMOD::SOUND_PCMSETPOSCALLBACK::*)(::System::IAsyncResult*)>(&FMOD::SOUND_PCMSETPOSCALLBACK::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMOD::SOUND_PCMSETPOSCALLBACK*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
