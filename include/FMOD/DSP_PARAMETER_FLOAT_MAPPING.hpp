// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE
#include "FMOD/DSP_PARAMETER_FLOAT_MAPPING_TYPE.hpp"
// Including type: FMOD.DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR
#include "FMOD/DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: DSP_PARAMETER_FLOAT_MAPPING
  struct DSP_PARAMETER_FLOAT_MAPPING;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::DSP_PARAMETER_FLOAT_MAPPING, "FMOD", "DSP_PARAMETER_FLOAT_MAPPING");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x20
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: FMOD.DSP_PARAMETER_FLOAT_MAPPING
  // [TokenAttribute] Offset: FFFFFFFF
  struct DSP_PARAMETER_FLOAT_MAPPING/*, public ::System::ValueType*/ {
    public:
    public:
    // public FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE type
    // Size: 0x4
    // Offset: 0x0
    ::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE type;
    // Field size check
    static_assert(sizeof(::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE) == 0x4);
    // Padding between fields: type and: piecewiselinearmapping
    char __padding0[0x4] = {};
    // public FMOD.DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR piecewiselinearmapping
    // Size: 0x18
    // Offset: 0x8
    ::FMOD::DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR piecewiselinearmapping;
    // Field size check
    static_assert(sizeof(::FMOD::DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR) == 0x18);
    public:
    // Creating value type constructor for type: DSP_PARAMETER_FLOAT_MAPPING
    constexpr DSP_PARAMETER_FLOAT_MAPPING(::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE type_ = {}, ::FMOD::DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR piecewiselinearmapping_ = {}) noexcept : type{type_}, piecewiselinearmapping{piecewiselinearmapping_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public FMOD.DSP_PARAMETER_FLOAT_MAPPING_TYPE type
    [[deprecated("Use field access instead!")]] ::FMOD::DSP_PARAMETER_FLOAT_MAPPING_TYPE& dyn_type();
    // Get instance field reference: public FMOD.DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR piecewiselinearmapping
    [[deprecated("Use field access instead!")]] ::FMOD::DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR& dyn_piecewiselinearmapping();
  }; // FMOD.DSP_PARAMETER_FLOAT_MAPPING
  #pragma pack(pop)
  static check_size<sizeof(DSP_PARAMETER_FLOAT_MAPPING), 8 + sizeof(::FMOD::DSP_PARAMETER_FLOAT_MAPPING_PIECEWISE_LINEAR)> __FMOD_DSP_PARAMETER_FLOAT_MAPPINGSizeCheck;
  static_assert(sizeof(DSP_PARAMETER_FLOAT_MAPPING) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
