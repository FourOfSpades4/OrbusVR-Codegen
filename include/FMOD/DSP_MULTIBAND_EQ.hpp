// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: DSP_MULTIBAND_EQ
  struct DSP_MULTIBAND_EQ;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::DSP_MULTIBAND_EQ, "FMOD", "DSP_MULTIBAND_EQ");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.DSP_MULTIBAND_EQ
  // [TokenAttribute] Offset: FFFFFFFF
  struct DSP_MULTIBAND_EQ/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: DSP_MULTIBAND_EQ
    constexpr DSP_MULTIBAND_EQ(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ A_FILTER
    static constexpr const int A_FILTER = 0;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ A_FILTER
    static ::FMOD::DSP_MULTIBAND_EQ _get_A_FILTER();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ A_FILTER
    static void _set_A_FILTER(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ A_FREQUENCY
    static constexpr const int A_FREQUENCY = 1;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ A_FREQUENCY
    static ::FMOD::DSP_MULTIBAND_EQ _get_A_FREQUENCY();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ A_FREQUENCY
    static void _set_A_FREQUENCY(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ A_Q
    static constexpr const int A_Q = 2;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ A_Q
    static ::FMOD::DSP_MULTIBAND_EQ _get_A_Q();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ A_Q
    static void _set_A_Q(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ A_GAIN
    static constexpr const int A_GAIN = 3;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ A_GAIN
    static ::FMOD::DSP_MULTIBAND_EQ _get_A_GAIN();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ A_GAIN
    static void _set_A_GAIN(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ B_FILTER
    static constexpr const int B_FILTER = 4;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ B_FILTER
    static ::FMOD::DSP_MULTIBAND_EQ _get_B_FILTER();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ B_FILTER
    static void _set_B_FILTER(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ B_FREQUENCY
    static constexpr const int B_FREQUENCY = 5;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ B_FREQUENCY
    static ::FMOD::DSP_MULTIBAND_EQ _get_B_FREQUENCY();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ B_FREQUENCY
    static void _set_B_FREQUENCY(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ B_Q
    static constexpr const int B_Q = 6;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ B_Q
    static ::FMOD::DSP_MULTIBAND_EQ _get_B_Q();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ B_Q
    static void _set_B_Q(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ B_GAIN
    static constexpr const int B_GAIN = 7;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ B_GAIN
    static ::FMOD::DSP_MULTIBAND_EQ _get_B_GAIN();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ B_GAIN
    static void _set_B_GAIN(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ C_FILTER
    static constexpr const int C_FILTER = 8;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ C_FILTER
    static ::FMOD::DSP_MULTIBAND_EQ _get_C_FILTER();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ C_FILTER
    static void _set_C_FILTER(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ C_FREQUENCY
    static constexpr const int C_FREQUENCY = 9;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ C_FREQUENCY
    static ::FMOD::DSP_MULTIBAND_EQ _get_C_FREQUENCY();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ C_FREQUENCY
    static void _set_C_FREQUENCY(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ C_Q
    static constexpr const int C_Q = 10;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ C_Q
    static ::FMOD::DSP_MULTIBAND_EQ _get_C_Q();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ C_Q
    static void _set_C_Q(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ C_GAIN
    static constexpr const int C_GAIN = 11;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ C_GAIN
    static ::FMOD::DSP_MULTIBAND_EQ _get_C_GAIN();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ C_GAIN
    static void _set_C_GAIN(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ D_FILTER
    static constexpr const int D_FILTER = 12;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ D_FILTER
    static ::FMOD::DSP_MULTIBAND_EQ _get_D_FILTER();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ D_FILTER
    static void _set_D_FILTER(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ D_FREQUENCY
    static constexpr const int D_FREQUENCY = 13;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ D_FREQUENCY
    static ::FMOD::DSP_MULTIBAND_EQ _get_D_FREQUENCY();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ D_FREQUENCY
    static void _set_D_FREQUENCY(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ D_Q
    static constexpr const int D_Q = 14;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ D_Q
    static ::FMOD::DSP_MULTIBAND_EQ _get_D_Q();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ D_Q
    static void _set_D_Q(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ D_GAIN
    static constexpr const int D_GAIN = 15;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ D_GAIN
    static ::FMOD::DSP_MULTIBAND_EQ _get_D_GAIN();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ D_GAIN
    static void _set_D_GAIN(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ E_FILTER
    static constexpr const int E_FILTER = 16;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ E_FILTER
    static ::FMOD::DSP_MULTIBAND_EQ _get_E_FILTER();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ E_FILTER
    static void _set_E_FILTER(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ E_FREQUENCY
    static constexpr const int E_FREQUENCY = 17;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ E_FREQUENCY
    static ::FMOD::DSP_MULTIBAND_EQ _get_E_FREQUENCY();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ E_FREQUENCY
    static void _set_E_FREQUENCY(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ E_Q
    static constexpr const int E_Q = 18;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ E_Q
    static ::FMOD::DSP_MULTIBAND_EQ _get_E_Q();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ E_Q
    static void _set_E_Q(::FMOD::DSP_MULTIBAND_EQ value);
    // static field const value: static public FMOD.DSP_MULTIBAND_EQ E_GAIN
    static constexpr const int E_GAIN = 19;
    // Get static field: static public FMOD.DSP_MULTIBAND_EQ E_GAIN
    static ::FMOD::DSP_MULTIBAND_EQ _get_E_GAIN();
    // Set static field: static public FMOD.DSP_MULTIBAND_EQ E_GAIN
    static void _set_E_GAIN(::FMOD::DSP_MULTIBAND_EQ value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // FMOD.DSP_MULTIBAND_EQ
  #pragma pack(pop)
  static check_size<sizeof(DSP_MULTIBAND_EQ), 0 + sizeof(int)> __FMOD_DSP_MULTIBAND_EQSizeCheck;
  static_assert(sizeof(DSP_MULTIBAND_EQ) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
