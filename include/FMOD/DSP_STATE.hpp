// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: DSP_STATE
  struct DSP_STATE;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::DSP_STATE, "FMOD", "DSP_STATE");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x34
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: FMOD.DSP_STATE
  // [TokenAttribute] Offset: FFFFFFFF
  struct DSP_STATE/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.IntPtr instance
    // Size: 0x8
    // Offset: 0x0
    ::System::IntPtr instance;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.IntPtr plugindata
    // Size: 0x8
    // Offset: 0x8
    ::System::IntPtr plugindata;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.UInt32 channelmask
    // Size: 0x4
    // Offset: 0x10
    uint channelmask;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // public System.Int32 source_speakermode
    // Size: 0x4
    // Offset: 0x14
    int source_speakermode;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.IntPtr sidechaindata
    // Size: 0x8
    // Offset: 0x18
    ::System::IntPtr sidechaindata;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.Int32 sidechainchannels
    // Size: 0x4
    // Offset: 0x20
    int sidechainchannels;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: sidechainchannels and: functions
    char __padding5[0x4] = {};
    // public System.IntPtr functions
    // Size: 0x8
    // Offset: 0x28
    ::System::IntPtr functions;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.Int32 systemobject
    // Size: 0x4
    // Offset: 0x30
    int systemobject;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: DSP_STATE
    constexpr DSP_STATE(::System::IntPtr instance_ = {}, ::System::IntPtr plugindata_ = {}, uint channelmask_ = {}, int source_speakermode_ = {}, ::System::IntPtr sidechaindata_ = {}, int sidechainchannels_ = {}, ::System::IntPtr functions_ = {}, int systemobject_ = {}) noexcept : instance{instance_}, plugindata{plugindata_}, channelmask{channelmask_}, source_speakermode{source_speakermode_}, sidechaindata{sidechaindata_}, sidechainchannels{sidechainchannels_}, functions{functions_}, systemobject{systemobject_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.IntPtr instance
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_instance();
    // Get instance field reference: public System.IntPtr plugindata
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_plugindata();
    // Get instance field reference: public System.UInt32 channelmask
    [[deprecated("Use field access instead!")]] uint& dyn_channelmask();
    // Get instance field reference: public System.Int32 source_speakermode
    [[deprecated("Use field access instead!")]] int& dyn_source_speakermode();
    // Get instance field reference: public System.IntPtr sidechaindata
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_sidechaindata();
    // Get instance field reference: public System.Int32 sidechainchannels
    [[deprecated("Use field access instead!")]] int& dyn_sidechainchannels();
    // Get instance field reference: public System.IntPtr functions
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_functions();
    // Get instance field reference: public System.Int32 systemobject
    [[deprecated("Use field access instead!")]] int& dyn_systemobject();
  }; // FMOD.DSP_STATE
  #pragma pack(pop)
  static check_size<sizeof(DSP_STATE), 48 + sizeof(int)> __FMOD_DSP_STATESizeCheck;
  static_assert(sizeof(DSP_STATE) == 0x34);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
