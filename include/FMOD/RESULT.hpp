// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: RESULT
  struct RESULT;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::RESULT, "FMOD", "RESULT");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.RESULT
  // [TokenAttribute] Offset: FFFFFFFF
  struct RESULT/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: RESULT
    constexpr RESULT(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public FMOD.RESULT OK
    static constexpr const int OK = 0;
    // Get static field: static public FMOD.RESULT OK
    static ::FMOD::RESULT _get_OK();
    // Set static field: static public FMOD.RESULT OK
    static void _set_OK(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_BADCOMMAND
    static constexpr const int ERR_BADCOMMAND = 1;
    // Get static field: static public FMOD.RESULT ERR_BADCOMMAND
    static ::FMOD::RESULT _get_ERR_BADCOMMAND();
    // Set static field: static public FMOD.RESULT ERR_BADCOMMAND
    static void _set_ERR_BADCOMMAND(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_CHANNEL_ALLOC
    static constexpr const int ERR_CHANNEL_ALLOC = 2;
    // Get static field: static public FMOD.RESULT ERR_CHANNEL_ALLOC
    static ::FMOD::RESULT _get_ERR_CHANNEL_ALLOC();
    // Set static field: static public FMOD.RESULT ERR_CHANNEL_ALLOC
    static void _set_ERR_CHANNEL_ALLOC(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_CHANNEL_STOLEN
    static constexpr const int ERR_CHANNEL_STOLEN = 3;
    // Get static field: static public FMOD.RESULT ERR_CHANNEL_STOLEN
    static ::FMOD::RESULT _get_ERR_CHANNEL_STOLEN();
    // Set static field: static public FMOD.RESULT ERR_CHANNEL_STOLEN
    static void _set_ERR_CHANNEL_STOLEN(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_DMA
    static constexpr const int ERR_DMA = 4;
    // Get static field: static public FMOD.RESULT ERR_DMA
    static ::FMOD::RESULT _get_ERR_DMA();
    // Set static field: static public FMOD.RESULT ERR_DMA
    static void _set_ERR_DMA(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_DSP_CONNECTION
    static constexpr const int ERR_DSP_CONNECTION = 5;
    // Get static field: static public FMOD.RESULT ERR_DSP_CONNECTION
    static ::FMOD::RESULT _get_ERR_DSP_CONNECTION();
    // Set static field: static public FMOD.RESULT ERR_DSP_CONNECTION
    static void _set_ERR_DSP_CONNECTION(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_DSP_DONTPROCESS
    static constexpr const int ERR_DSP_DONTPROCESS = 6;
    // Get static field: static public FMOD.RESULT ERR_DSP_DONTPROCESS
    static ::FMOD::RESULT _get_ERR_DSP_DONTPROCESS();
    // Set static field: static public FMOD.RESULT ERR_DSP_DONTPROCESS
    static void _set_ERR_DSP_DONTPROCESS(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_DSP_FORMAT
    static constexpr const int ERR_DSP_FORMAT = 7;
    // Get static field: static public FMOD.RESULT ERR_DSP_FORMAT
    static ::FMOD::RESULT _get_ERR_DSP_FORMAT();
    // Set static field: static public FMOD.RESULT ERR_DSP_FORMAT
    static void _set_ERR_DSP_FORMAT(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_DSP_INUSE
    static constexpr const int ERR_DSP_INUSE = 8;
    // Get static field: static public FMOD.RESULT ERR_DSP_INUSE
    static ::FMOD::RESULT _get_ERR_DSP_INUSE();
    // Set static field: static public FMOD.RESULT ERR_DSP_INUSE
    static void _set_ERR_DSP_INUSE(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_DSP_NOTFOUND
    static constexpr const int ERR_DSP_NOTFOUND = 9;
    // Get static field: static public FMOD.RESULT ERR_DSP_NOTFOUND
    static ::FMOD::RESULT _get_ERR_DSP_NOTFOUND();
    // Set static field: static public FMOD.RESULT ERR_DSP_NOTFOUND
    static void _set_ERR_DSP_NOTFOUND(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_DSP_RESERVED
    static constexpr const int ERR_DSP_RESERVED = 10;
    // Get static field: static public FMOD.RESULT ERR_DSP_RESERVED
    static ::FMOD::RESULT _get_ERR_DSP_RESERVED();
    // Set static field: static public FMOD.RESULT ERR_DSP_RESERVED
    static void _set_ERR_DSP_RESERVED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_DSP_SILENCE
    static constexpr const int ERR_DSP_SILENCE = 11;
    // Get static field: static public FMOD.RESULT ERR_DSP_SILENCE
    static ::FMOD::RESULT _get_ERR_DSP_SILENCE();
    // Set static field: static public FMOD.RESULT ERR_DSP_SILENCE
    static void _set_ERR_DSP_SILENCE(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_DSP_TYPE
    static constexpr const int ERR_DSP_TYPE = 12;
    // Get static field: static public FMOD.RESULT ERR_DSP_TYPE
    static ::FMOD::RESULT _get_ERR_DSP_TYPE();
    // Set static field: static public FMOD.RESULT ERR_DSP_TYPE
    static void _set_ERR_DSP_TYPE(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_FILE_BAD
    static constexpr const int ERR_FILE_BAD = 13;
    // Get static field: static public FMOD.RESULT ERR_FILE_BAD
    static ::FMOD::RESULT _get_ERR_FILE_BAD();
    // Set static field: static public FMOD.RESULT ERR_FILE_BAD
    static void _set_ERR_FILE_BAD(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_FILE_COULDNOTSEEK
    static constexpr const int ERR_FILE_COULDNOTSEEK = 14;
    // Get static field: static public FMOD.RESULT ERR_FILE_COULDNOTSEEK
    static ::FMOD::RESULT _get_ERR_FILE_COULDNOTSEEK();
    // Set static field: static public FMOD.RESULT ERR_FILE_COULDNOTSEEK
    static void _set_ERR_FILE_COULDNOTSEEK(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_FILE_DISKEJECTED
    static constexpr const int ERR_FILE_DISKEJECTED = 15;
    // Get static field: static public FMOD.RESULT ERR_FILE_DISKEJECTED
    static ::FMOD::RESULT _get_ERR_FILE_DISKEJECTED();
    // Set static field: static public FMOD.RESULT ERR_FILE_DISKEJECTED
    static void _set_ERR_FILE_DISKEJECTED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_FILE_EOF
    static constexpr const int ERR_FILE_EOF = 16;
    // Get static field: static public FMOD.RESULT ERR_FILE_EOF
    static ::FMOD::RESULT _get_ERR_FILE_EOF();
    // Set static field: static public FMOD.RESULT ERR_FILE_EOF
    static void _set_ERR_FILE_EOF(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_FILE_ENDOFDATA
    static constexpr const int ERR_FILE_ENDOFDATA = 17;
    // Get static field: static public FMOD.RESULT ERR_FILE_ENDOFDATA
    static ::FMOD::RESULT _get_ERR_FILE_ENDOFDATA();
    // Set static field: static public FMOD.RESULT ERR_FILE_ENDOFDATA
    static void _set_ERR_FILE_ENDOFDATA(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_FILE_NOTFOUND
    static constexpr const int ERR_FILE_NOTFOUND = 18;
    // Get static field: static public FMOD.RESULT ERR_FILE_NOTFOUND
    static ::FMOD::RESULT _get_ERR_FILE_NOTFOUND();
    // Set static field: static public FMOD.RESULT ERR_FILE_NOTFOUND
    static void _set_ERR_FILE_NOTFOUND(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_FORMAT
    static constexpr const int ERR_FORMAT = 19;
    // Get static field: static public FMOD.RESULT ERR_FORMAT
    static ::FMOD::RESULT _get_ERR_FORMAT();
    // Set static field: static public FMOD.RESULT ERR_FORMAT
    static void _set_ERR_FORMAT(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_HEADER_MISMATCH
    static constexpr const int ERR_HEADER_MISMATCH = 20;
    // Get static field: static public FMOD.RESULT ERR_HEADER_MISMATCH
    static ::FMOD::RESULT _get_ERR_HEADER_MISMATCH();
    // Set static field: static public FMOD.RESULT ERR_HEADER_MISMATCH
    static void _set_ERR_HEADER_MISMATCH(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_HTTP
    static constexpr const int ERR_HTTP = 21;
    // Get static field: static public FMOD.RESULT ERR_HTTP
    static ::FMOD::RESULT _get_ERR_HTTP();
    // Set static field: static public FMOD.RESULT ERR_HTTP
    static void _set_ERR_HTTP(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_HTTP_ACCESS
    static constexpr const int ERR_HTTP_ACCESS = 22;
    // Get static field: static public FMOD.RESULT ERR_HTTP_ACCESS
    static ::FMOD::RESULT _get_ERR_HTTP_ACCESS();
    // Set static field: static public FMOD.RESULT ERR_HTTP_ACCESS
    static void _set_ERR_HTTP_ACCESS(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_HTTP_PROXY_AUTH
    static constexpr const int ERR_HTTP_PROXY_AUTH = 23;
    // Get static field: static public FMOD.RESULT ERR_HTTP_PROXY_AUTH
    static ::FMOD::RESULT _get_ERR_HTTP_PROXY_AUTH();
    // Set static field: static public FMOD.RESULT ERR_HTTP_PROXY_AUTH
    static void _set_ERR_HTTP_PROXY_AUTH(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_HTTP_SERVER_ERROR
    static constexpr const int ERR_HTTP_SERVER_ERROR = 24;
    // Get static field: static public FMOD.RESULT ERR_HTTP_SERVER_ERROR
    static ::FMOD::RESULT _get_ERR_HTTP_SERVER_ERROR();
    // Set static field: static public FMOD.RESULT ERR_HTTP_SERVER_ERROR
    static void _set_ERR_HTTP_SERVER_ERROR(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_HTTP_TIMEOUT
    static constexpr const int ERR_HTTP_TIMEOUT = 25;
    // Get static field: static public FMOD.RESULT ERR_HTTP_TIMEOUT
    static ::FMOD::RESULT _get_ERR_HTTP_TIMEOUT();
    // Set static field: static public FMOD.RESULT ERR_HTTP_TIMEOUT
    static void _set_ERR_HTTP_TIMEOUT(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INITIALIZATION
    static constexpr const int ERR_INITIALIZATION = 26;
    // Get static field: static public FMOD.RESULT ERR_INITIALIZATION
    static ::FMOD::RESULT _get_ERR_INITIALIZATION();
    // Set static field: static public FMOD.RESULT ERR_INITIALIZATION
    static void _set_ERR_INITIALIZATION(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INITIALIZED
    static constexpr const int ERR_INITIALIZED = 27;
    // Get static field: static public FMOD.RESULT ERR_INITIALIZED
    static ::FMOD::RESULT _get_ERR_INITIALIZED();
    // Set static field: static public FMOD.RESULT ERR_INITIALIZED
    static void _set_ERR_INITIALIZED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INTERNAL
    static constexpr const int ERR_INTERNAL = 28;
    // Get static field: static public FMOD.RESULT ERR_INTERNAL
    static ::FMOD::RESULT _get_ERR_INTERNAL();
    // Set static field: static public FMOD.RESULT ERR_INTERNAL
    static void _set_ERR_INTERNAL(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INVALID_FLOAT
    static constexpr const int ERR_INVALID_FLOAT = 29;
    // Get static field: static public FMOD.RESULT ERR_INVALID_FLOAT
    static ::FMOD::RESULT _get_ERR_INVALID_FLOAT();
    // Set static field: static public FMOD.RESULT ERR_INVALID_FLOAT
    static void _set_ERR_INVALID_FLOAT(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INVALID_HANDLE
    static constexpr const int ERR_INVALID_HANDLE = 30;
    // Get static field: static public FMOD.RESULT ERR_INVALID_HANDLE
    static ::FMOD::RESULT _get_ERR_INVALID_HANDLE();
    // Set static field: static public FMOD.RESULT ERR_INVALID_HANDLE
    static void _set_ERR_INVALID_HANDLE(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INVALID_PARAM
    static constexpr const int ERR_INVALID_PARAM = 31;
    // Get static field: static public FMOD.RESULT ERR_INVALID_PARAM
    static ::FMOD::RESULT _get_ERR_INVALID_PARAM();
    // Set static field: static public FMOD.RESULT ERR_INVALID_PARAM
    static void _set_ERR_INVALID_PARAM(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INVALID_POSITION
    static constexpr const int ERR_INVALID_POSITION = 32;
    // Get static field: static public FMOD.RESULT ERR_INVALID_POSITION
    static ::FMOD::RESULT _get_ERR_INVALID_POSITION();
    // Set static field: static public FMOD.RESULT ERR_INVALID_POSITION
    static void _set_ERR_INVALID_POSITION(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INVALID_SPEAKER
    static constexpr const int ERR_INVALID_SPEAKER = 33;
    // Get static field: static public FMOD.RESULT ERR_INVALID_SPEAKER
    static ::FMOD::RESULT _get_ERR_INVALID_SPEAKER();
    // Set static field: static public FMOD.RESULT ERR_INVALID_SPEAKER
    static void _set_ERR_INVALID_SPEAKER(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INVALID_SYNCPOINT
    static constexpr const int ERR_INVALID_SYNCPOINT = 34;
    // Get static field: static public FMOD.RESULT ERR_INVALID_SYNCPOINT
    static ::FMOD::RESULT _get_ERR_INVALID_SYNCPOINT();
    // Set static field: static public FMOD.RESULT ERR_INVALID_SYNCPOINT
    static void _set_ERR_INVALID_SYNCPOINT(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INVALID_THREAD
    static constexpr const int ERR_INVALID_THREAD = 35;
    // Get static field: static public FMOD.RESULT ERR_INVALID_THREAD
    static ::FMOD::RESULT _get_ERR_INVALID_THREAD();
    // Set static field: static public FMOD.RESULT ERR_INVALID_THREAD
    static void _set_ERR_INVALID_THREAD(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INVALID_VECTOR
    static constexpr const int ERR_INVALID_VECTOR = 36;
    // Get static field: static public FMOD.RESULT ERR_INVALID_VECTOR
    static ::FMOD::RESULT _get_ERR_INVALID_VECTOR();
    // Set static field: static public FMOD.RESULT ERR_INVALID_VECTOR
    static void _set_ERR_INVALID_VECTOR(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_MAXAUDIBLE
    static constexpr const int ERR_MAXAUDIBLE = 37;
    // Get static field: static public FMOD.RESULT ERR_MAXAUDIBLE
    static ::FMOD::RESULT _get_ERR_MAXAUDIBLE();
    // Set static field: static public FMOD.RESULT ERR_MAXAUDIBLE
    static void _set_ERR_MAXAUDIBLE(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_MEMORY
    static constexpr const int ERR_MEMORY = 38;
    // Get static field: static public FMOD.RESULT ERR_MEMORY
    static ::FMOD::RESULT _get_ERR_MEMORY();
    // Set static field: static public FMOD.RESULT ERR_MEMORY
    static void _set_ERR_MEMORY(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_MEMORY_CANTPOINT
    static constexpr const int ERR_MEMORY_CANTPOINT = 39;
    // Get static field: static public FMOD.RESULT ERR_MEMORY_CANTPOINT
    static ::FMOD::RESULT _get_ERR_MEMORY_CANTPOINT();
    // Set static field: static public FMOD.RESULT ERR_MEMORY_CANTPOINT
    static void _set_ERR_MEMORY_CANTPOINT(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_NEEDS3D
    static constexpr const int ERR_NEEDS3D = 40;
    // Get static field: static public FMOD.RESULT ERR_NEEDS3D
    static ::FMOD::RESULT _get_ERR_NEEDS3D();
    // Set static field: static public FMOD.RESULT ERR_NEEDS3D
    static void _set_ERR_NEEDS3D(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_NEEDSHARDWARE
    static constexpr const int ERR_NEEDSHARDWARE = 41;
    // Get static field: static public FMOD.RESULT ERR_NEEDSHARDWARE
    static ::FMOD::RESULT _get_ERR_NEEDSHARDWARE();
    // Set static field: static public FMOD.RESULT ERR_NEEDSHARDWARE
    static void _set_ERR_NEEDSHARDWARE(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_NET_CONNECT
    static constexpr const int ERR_NET_CONNECT = 42;
    // Get static field: static public FMOD.RESULT ERR_NET_CONNECT
    static ::FMOD::RESULT _get_ERR_NET_CONNECT();
    // Set static field: static public FMOD.RESULT ERR_NET_CONNECT
    static void _set_ERR_NET_CONNECT(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_NET_SOCKET_ERROR
    static constexpr const int ERR_NET_SOCKET_ERROR = 43;
    // Get static field: static public FMOD.RESULT ERR_NET_SOCKET_ERROR
    static ::FMOD::RESULT _get_ERR_NET_SOCKET_ERROR();
    // Set static field: static public FMOD.RESULT ERR_NET_SOCKET_ERROR
    static void _set_ERR_NET_SOCKET_ERROR(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_NET_URL
    static constexpr const int ERR_NET_URL = 44;
    // Get static field: static public FMOD.RESULT ERR_NET_URL
    static ::FMOD::RESULT _get_ERR_NET_URL();
    // Set static field: static public FMOD.RESULT ERR_NET_URL
    static void _set_ERR_NET_URL(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_NET_WOULD_BLOCK
    static constexpr const int ERR_NET_WOULD_BLOCK = 45;
    // Get static field: static public FMOD.RESULT ERR_NET_WOULD_BLOCK
    static ::FMOD::RESULT _get_ERR_NET_WOULD_BLOCK();
    // Set static field: static public FMOD.RESULT ERR_NET_WOULD_BLOCK
    static void _set_ERR_NET_WOULD_BLOCK(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_NOTREADY
    static constexpr const int ERR_NOTREADY = 46;
    // Get static field: static public FMOD.RESULT ERR_NOTREADY
    static ::FMOD::RESULT _get_ERR_NOTREADY();
    // Set static field: static public FMOD.RESULT ERR_NOTREADY
    static void _set_ERR_NOTREADY(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_OUTPUT_ALLOCATED
    static constexpr const int ERR_OUTPUT_ALLOCATED = 47;
    // Get static field: static public FMOD.RESULT ERR_OUTPUT_ALLOCATED
    static ::FMOD::RESULT _get_ERR_OUTPUT_ALLOCATED();
    // Set static field: static public FMOD.RESULT ERR_OUTPUT_ALLOCATED
    static void _set_ERR_OUTPUT_ALLOCATED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_OUTPUT_CREATEBUFFER
    static constexpr const int ERR_OUTPUT_CREATEBUFFER = 48;
    // Get static field: static public FMOD.RESULT ERR_OUTPUT_CREATEBUFFER
    static ::FMOD::RESULT _get_ERR_OUTPUT_CREATEBUFFER();
    // Set static field: static public FMOD.RESULT ERR_OUTPUT_CREATEBUFFER
    static void _set_ERR_OUTPUT_CREATEBUFFER(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_OUTPUT_DRIVERCALL
    static constexpr const int ERR_OUTPUT_DRIVERCALL = 49;
    // Get static field: static public FMOD.RESULT ERR_OUTPUT_DRIVERCALL
    static ::FMOD::RESULT _get_ERR_OUTPUT_DRIVERCALL();
    // Set static field: static public FMOD.RESULT ERR_OUTPUT_DRIVERCALL
    static void _set_ERR_OUTPUT_DRIVERCALL(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_OUTPUT_FORMAT
    static constexpr const int ERR_OUTPUT_FORMAT = 50;
    // Get static field: static public FMOD.RESULT ERR_OUTPUT_FORMAT
    static ::FMOD::RESULT _get_ERR_OUTPUT_FORMAT();
    // Set static field: static public FMOD.RESULT ERR_OUTPUT_FORMAT
    static void _set_ERR_OUTPUT_FORMAT(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_OUTPUT_INIT
    static constexpr const int ERR_OUTPUT_INIT = 51;
    // Get static field: static public FMOD.RESULT ERR_OUTPUT_INIT
    static ::FMOD::RESULT _get_ERR_OUTPUT_INIT();
    // Set static field: static public FMOD.RESULT ERR_OUTPUT_INIT
    static void _set_ERR_OUTPUT_INIT(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_OUTPUT_NODRIVERS
    static constexpr const int ERR_OUTPUT_NODRIVERS = 52;
    // Get static field: static public FMOD.RESULT ERR_OUTPUT_NODRIVERS
    static ::FMOD::RESULT _get_ERR_OUTPUT_NODRIVERS();
    // Set static field: static public FMOD.RESULT ERR_OUTPUT_NODRIVERS
    static void _set_ERR_OUTPUT_NODRIVERS(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_PLUGIN
    static constexpr const int ERR_PLUGIN = 53;
    // Get static field: static public FMOD.RESULT ERR_PLUGIN
    static ::FMOD::RESULT _get_ERR_PLUGIN();
    // Set static field: static public FMOD.RESULT ERR_PLUGIN
    static void _set_ERR_PLUGIN(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_PLUGIN_MISSING
    static constexpr const int ERR_PLUGIN_MISSING = 54;
    // Get static field: static public FMOD.RESULT ERR_PLUGIN_MISSING
    static ::FMOD::RESULT _get_ERR_PLUGIN_MISSING();
    // Set static field: static public FMOD.RESULT ERR_PLUGIN_MISSING
    static void _set_ERR_PLUGIN_MISSING(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_PLUGIN_RESOURCE
    static constexpr const int ERR_PLUGIN_RESOURCE = 55;
    // Get static field: static public FMOD.RESULT ERR_PLUGIN_RESOURCE
    static ::FMOD::RESULT _get_ERR_PLUGIN_RESOURCE();
    // Set static field: static public FMOD.RESULT ERR_PLUGIN_RESOURCE
    static void _set_ERR_PLUGIN_RESOURCE(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_PLUGIN_VERSION
    static constexpr const int ERR_PLUGIN_VERSION = 56;
    // Get static field: static public FMOD.RESULT ERR_PLUGIN_VERSION
    static ::FMOD::RESULT _get_ERR_PLUGIN_VERSION();
    // Set static field: static public FMOD.RESULT ERR_PLUGIN_VERSION
    static void _set_ERR_PLUGIN_VERSION(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_RECORD
    static constexpr const int ERR_RECORD = 57;
    // Get static field: static public FMOD.RESULT ERR_RECORD
    static ::FMOD::RESULT _get_ERR_RECORD();
    // Set static field: static public FMOD.RESULT ERR_RECORD
    static void _set_ERR_RECORD(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_REVERB_CHANNELGROUP
    static constexpr const int ERR_REVERB_CHANNELGROUP = 58;
    // Get static field: static public FMOD.RESULT ERR_REVERB_CHANNELGROUP
    static ::FMOD::RESULT _get_ERR_REVERB_CHANNELGROUP();
    // Set static field: static public FMOD.RESULT ERR_REVERB_CHANNELGROUP
    static void _set_ERR_REVERB_CHANNELGROUP(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_REVERB_INSTANCE
    static constexpr const int ERR_REVERB_INSTANCE = 59;
    // Get static field: static public FMOD.RESULT ERR_REVERB_INSTANCE
    static ::FMOD::RESULT _get_ERR_REVERB_INSTANCE();
    // Set static field: static public FMOD.RESULT ERR_REVERB_INSTANCE
    static void _set_ERR_REVERB_INSTANCE(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_SUBSOUNDS
    static constexpr const int ERR_SUBSOUNDS = 60;
    // Get static field: static public FMOD.RESULT ERR_SUBSOUNDS
    static ::FMOD::RESULT _get_ERR_SUBSOUNDS();
    // Set static field: static public FMOD.RESULT ERR_SUBSOUNDS
    static void _set_ERR_SUBSOUNDS(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_SUBSOUND_ALLOCATED
    static constexpr const int ERR_SUBSOUND_ALLOCATED = 61;
    // Get static field: static public FMOD.RESULT ERR_SUBSOUND_ALLOCATED
    static ::FMOD::RESULT _get_ERR_SUBSOUND_ALLOCATED();
    // Set static field: static public FMOD.RESULT ERR_SUBSOUND_ALLOCATED
    static void _set_ERR_SUBSOUND_ALLOCATED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_SUBSOUND_CANTMOVE
    static constexpr const int ERR_SUBSOUND_CANTMOVE = 62;
    // Get static field: static public FMOD.RESULT ERR_SUBSOUND_CANTMOVE
    static ::FMOD::RESULT _get_ERR_SUBSOUND_CANTMOVE();
    // Set static field: static public FMOD.RESULT ERR_SUBSOUND_CANTMOVE
    static void _set_ERR_SUBSOUND_CANTMOVE(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_TAGNOTFOUND
    static constexpr const int ERR_TAGNOTFOUND = 63;
    // Get static field: static public FMOD.RESULT ERR_TAGNOTFOUND
    static ::FMOD::RESULT _get_ERR_TAGNOTFOUND();
    // Set static field: static public FMOD.RESULT ERR_TAGNOTFOUND
    static void _set_ERR_TAGNOTFOUND(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_TOOMANYCHANNELS
    static constexpr const int ERR_TOOMANYCHANNELS = 64;
    // Get static field: static public FMOD.RESULT ERR_TOOMANYCHANNELS
    static ::FMOD::RESULT _get_ERR_TOOMANYCHANNELS();
    // Set static field: static public FMOD.RESULT ERR_TOOMANYCHANNELS
    static void _set_ERR_TOOMANYCHANNELS(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_TRUNCATED
    static constexpr const int ERR_TRUNCATED = 65;
    // Get static field: static public FMOD.RESULT ERR_TRUNCATED
    static ::FMOD::RESULT _get_ERR_TRUNCATED();
    // Set static field: static public FMOD.RESULT ERR_TRUNCATED
    static void _set_ERR_TRUNCATED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_UNIMPLEMENTED
    static constexpr const int ERR_UNIMPLEMENTED = 66;
    // Get static field: static public FMOD.RESULT ERR_UNIMPLEMENTED
    static ::FMOD::RESULT _get_ERR_UNIMPLEMENTED();
    // Set static field: static public FMOD.RESULT ERR_UNIMPLEMENTED
    static void _set_ERR_UNIMPLEMENTED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_UNINITIALIZED
    static constexpr const int ERR_UNINITIALIZED = 67;
    // Get static field: static public FMOD.RESULT ERR_UNINITIALIZED
    static ::FMOD::RESULT _get_ERR_UNINITIALIZED();
    // Set static field: static public FMOD.RESULT ERR_UNINITIALIZED
    static void _set_ERR_UNINITIALIZED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_UNSUPPORTED
    static constexpr const int ERR_UNSUPPORTED = 68;
    // Get static field: static public FMOD.RESULT ERR_UNSUPPORTED
    static ::FMOD::RESULT _get_ERR_UNSUPPORTED();
    // Set static field: static public FMOD.RESULT ERR_UNSUPPORTED
    static void _set_ERR_UNSUPPORTED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_VERSION
    static constexpr const int ERR_VERSION = 69;
    // Get static field: static public FMOD.RESULT ERR_VERSION
    static ::FMOD::RESULT _get_ERR_VERSION();
    // Set static field: static public FMOD.RESULT ERR_VERSION
    static void _set_ERR_VERSION(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_EVENT_ALREADY_LOADED
    static constexpr const int ERR_EVENT_ALREADY_LOADED = 70;
    // Get static field: static public FMOD.RESULT ERR_EVENT_ALREADY_LOADED
    static ::FMOD::RESULT _get_ERR_EVENT_ALREADY_LOADED();
    // Set static field: static public FMOD.RESULT ERR_EVENT_ALREADY_LOADED
    static void _set_ERR_EVENT_ALREADY_LOADED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_EVENT_LIVEUPDATE_BUSY
    static constexpr const int ERR_EVENT_LIVEUPDATE_BUSY = 71;
    // Get static field: static public FMOD.RESULT ERR_EVENT_LIVEUPDATE_BUSY
    static ::FMOD::RESULT _get_ERR_EVENT_LIVEUPDATE_BUSY();
    // Set static field: static public FMOD.RESULT ERR_EVENT_LIVEUPDATE_BUSY
    static void _set_ERR_EVENT_LIVEUPDATE_BUSY(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_EVENT_LIVEUPDATE_MISMATCH
    static constexpr const int ERR_EVENT_LIVEUPDATE_MISMATCH = 72;
    // Get static field: static public FMOD.RESULT ERR_EVENT_LIVEUPDATE_MISMATCH
    static ::FMOD::RESULT _get_ERR_EVENT_LIVEUPDATE_MISMATCH();
    // Set static field: static public FMOD.RESULT ERR_EVENT_LIVEUPDATE_MISMATCH
    static void _set_ERR_EVENT_LIVEUPDATE_MISMATCH(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_EVENT_LIVEUPDATE_TIMEOUT
    static constexpr const int ERR_EVENT_LIVEUPDATE_TIMEOUT = 73;
    // Get static field: static public FMOD.RESULT ERR_EVENT_LIVEUPDATE_TIMEOUT
    static ::FMOD::RESULT _get_ERR_EVENT_LIVEUPDATE_TIMEOUT();
    // Set static field: static public FMOD.RESULT ERR_EVENT_LIVEUPDATE_TIMEOUT
    static void _set_ERR_EVENT_LIVEUPDATE_TIMEOUT(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_EVENT_NOTFOUND
    static constexpr const int ERR_EVENT_NOTFOUND = 74;
    // Get static field: static public FMOD.RESULT ERR_EVENT_NOTFOUND
    static ::FMOD::RESULT _get_ERR_EVENT_NOTFOUND();
    // Set static field: static public FMOD.RESULT ERR_EVENT_NOTFOUND
    static void _set_ERR_EVENT_NOTFOUND(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_STUDIO_UNINITIALIZED
    static constexpr const int ERR_STUDIO_UNINITIALIZED = 75;
    // Get static field: static public FMOD.RESULT ERR_STUDIO_UNINITIALIZED
    static ::FMOD::RESULT _get_ERR_STUDIO_UNINITIALIZED();
    // Set static field: static public FMOD.RESULT ERR_STUDIO_UNINITIALIZED
    static void _set_ERR_STUDIO_UNINITIALIZED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_STUDIO_NOT_LOADED
    static constexpr const int ERR_STUDIO_NOT_LOADED = 76;
    // Get static field: static public FMOD.RESULT ERR_STUDIO_NOT_LOADED
    static ::FMOD::RESULT _get_ERR_STUDIO_NOT_LOADED();
    // Set static field: static public FMOD.RESULT ERR_STUDIO_NOT_LOADED
    static void _set_ERR_STUDIO_NOT_LOADED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_INVALID_STRING
    static constexpr const int ERR_INVALID_STRING = 77;
    // Get static field: static public FMOD.RESULT ERR_INVALID_STRING
    static ::FMOD::RESULT _get_ERR_INVALID_STRING();
    // Set static field: static public FMOD.RESULT ERR_INVALID_STRING
    static void _set_ERR_INVALID_STRING(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_ALREADY_LOCKED
    static constexpr const int ERR_ALREADY_LOCKED = 78;
    // Get static field: static public FMOD.RESULT ERR_ALREADY_LOCKED
    static ::FMOD::RESULT _get_ERR_ALREADY_LOCKED();
    // Set static field: static public FMOD.RESULT ERR_ALREADY_LOCKED
    static void _set_ERR_ALREADY_LOCKED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_NOT_LOCKED
    static constexpr const int ERR_NOT_LOCKED = 79;
    // Get static field: static public FMOD.RESULT ERR_NOT_LOCKED
    static ::FMOD::RESULT _get_ERR_NOT_LOCKED();
    // Set static field: static public FMOD.RESULT ERR_NOT_LOCKED
    static void _set_ERR_NOT_LOCKED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_RECORD_DISCONNECTED
    static constexpr const int ERR_RECORD_DISCONNECTED = 80;
    // Get static field: static public FMOD.RESULT ERR_RECORD_DISCONNECTED
    static ::FMOD::RESULT _get_ERR_RECORD_DISCONNECTED();
    // Set static field: static public FMOD.RESULT ERR_RECORD_DISCONNECTED
    static void _set_ERR_RECORD_DISCONNECTED(::FMOD::RESULT value);
    // static field const value: static public FMOD.RESULT ERR_TOOMANYSAMPLES
    static constexpr const int ERR_TOOMANYSAMPLES = 81;
    // Get static field: static public FMOD.RESULT ERR_TOOMANYSAMPLES
    static ::FMOD::RESULT _get_ERR_TOOMANYSAMPLES();
    // Set static field: static public FMOD.RESULT ERR_TOOMANYSAMPLES
    static void _set_ERR_TOOMANYSAMPLES(::FMOD::RESULT value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // FMOD.RESULT
  #pragma pack(pop)
  static check_size<sizeof(RESULT), 0 + sizeof(int)> __FMOD_RESULTSizeCheck;
  static_assert(sizeof(RESULT) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
