// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: DRIVER_STATE
  struct DRIVER_STATE;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::DRIVER_STATE, "FMOD", "DRIVER_STATE");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.DRIVER_STATE
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct DRIVER_STATE/*, public ::System::Enum*/ {
    public:
    public:
    // public System.UInt32 value__
    // Size: 0x4
    // Offset: 0x0
    uint value;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: DRIVER_STATE
    constexpr DRIVER_STATE(uint value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint
    constexpr operator uint() const noexcept {
      return value;
    }
    // static field const value: static public FMOD.DRIVER_STATE CONNECTED
    static constexpr const uint CONNECTED = 1u;
    // Get static field: static public FMOD.DRIVER_STATE CONNECTED
    static ::FMOD::DRIVER_STATE _get_CONNECTED();
    // Set static field: static public FMOD.DRIVER_STATE CONNECTED
    static void _set_CONNECTED(::FMOD::DRIVER_STATE value);
    // static field const value: static public FMOD.DRIVER_STATE DEFAULT
    static constexpr const uint DEFAULT = 2u;
    // Get static field: static public FMOD.DRIVER_STATE DEFAULT
    static ::FMOD::DRIVER_STATE _get_DEFAULT();
    // Set static field: static public FMOD.DRIVER_STATE DEFAULT
    static void _set_DEFAULT(::FMOD::DRIVER_STATE value);
    // Get instance field reference: public System.UInt32 value__
    [[deprecated("Use field access instead!")]] uint& dyn_value__();
  }; // FMOD.DRIVER_STATE
  #pragma pack(pop)
  static check_size<sizeof(DRIVER_STATE), 0 + sizeof(uint)> __FMOD_DRIVER_STATESizeCheck;
  static_assert(sizeof(DRIVER_STATE) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
