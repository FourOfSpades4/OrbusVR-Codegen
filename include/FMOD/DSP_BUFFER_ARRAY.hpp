// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: FMOD.CHANNELMASK
#include "FMOD/CHANNELMASK.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: FMOD.SPEAKERMODE
#include "FMOD/SPEAKERMODE.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: DSP_BUFFER_ARRAY
  struct DSP_BUFFER_ARRAY;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::DSP_BUFFER_ARRAY, "FMOD", "DSP_BUFFER_ARRAY");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x24
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: FMOD.DSP_BUFFER_ARRAY
  // [TokenAttribute] Offset: FFFFFFFF
  struct DSP_BUFFER_ARRAY/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 numbuffers
    // Size: 0x4
    // Offset: 0x0
    int numbuffers;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: numbuffers and: buffernumchannels
    char __padding0[0x4] = {};
    // public System.Int32[] buffernumchannels
    // Size: 0x8
    // Offset: 0x8
    ::ArrayW<int> buffernumchannels;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // public FMOD.CHANNELMASK[] bufferchannelmask
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::FMOD::CHANNELMASK> bufferchannelmask;
    // Field size check
    static_assert(sizeof(::ArrayW<::FMOD::CHANNELMASK>) == 0x8);
    // public System.IntPtr[] buffers
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::System::IntPtr> buffers;
    // Field size check
    static_assert(sizeof(::ArrayW<::System::IntPtr>) == 0x8);
    // public FMOD.SPEAKERMODE speakermode
    // Size: 0x4
    // Offset: 0x20
    ::FMOD::SPEAKERMODE speakermode;
    // Field size check
    static_assert(sizeof(::FMOD::SPEAKERMODE) == 0x4);
    public:
    // Creating value type constructor for type: DSP_BUFFER_ARRAY
    constexpr DSP_BUFFER_ARRAY(int numbuffers_ = {}, ::ArrayW<int> buffernumchannels_ = ::ArrayW<int>(static_cast<void*>(nullptr)), ::ArrayW<::FMOD::CHANNELMASK> bufferchannelmask_ = ::ArrayW<::FMOD::CHANNELMASK>(static_cast<void*>(nullptr)), ::ArrayW<::System::IntPtr> buffers_ = ::ArrayW<::System::IntPtr>(static_cast<void*>(nullptr)), ::FMOD::SPEAKERMODE speakermode_ = {}) noexcept : numbuffers{numbuffers_}, buffernumchannels{buffernumchannels_}, bufferchannelmask{bufferchannelmask_}, buffers{buffers_}, speakermode{speakermode_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 numbuffers
    [[deprecated("Use field access instead!")]] int& dyn_numbuffers();
    // Get instance field reference: public System.Int32[] buffernumchannels
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_buffernumchannels();
    // Get instance field reference: public FMOD.CHANNELMASK[] bufferchannelmask
    [[deprecated("Use field access instead!")]] ::ArrayW<::FMOD::CHANNELMASK>& dyn_bufferchannelmask();
    // Get instance field reference: public System.IntPtr[] buffers
    [[deprecated("Use field access instead!")]] ::ArrayW<::System::IntPtr>& dyn_buffers();
    // Get instance field reference: public FMOD.SPEAKERMODE speakermode
    [[deprecated("Use field access instead!")]] ::FMOD::SPEAKERMODE& dyn_speakermode();
  }; // FMOD.DSP_BUFFER_ARRAY
  #pragma pack(pop)
  static check_size<sizeof(DSP_BUFFER_ARRAY), 32 + sizeof(::FMOD::SPEAKERMODE)> __FMOD_DSP_BUFFER_ARRAYSizeCheck;
  static_assert(sizeof(DSP_BUFFER_ARRAY) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
