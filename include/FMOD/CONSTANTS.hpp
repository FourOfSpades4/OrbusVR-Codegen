// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: CONSTANTS
  class CONSTANTS;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::FMOD::CONSTANTS);
DEFINE_IL2CPP_ARG_TYPE(::FMOD::CONSTANTS*, "FMOD", "CONSTANTS");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.CONSTANTS
  // [TokenAttribute] Offset: FFFFFFFF
  class CONSTANTS : public ::Il2CppObject {
    public:
    // static field const value: static public System.Int32 MAX_CHANNEL_WIDTH
    static constexpr const int MAX_CHANNEL_WIDTH = 32;
    // Get static field: static public System.Int32 MAX_CHANNEL_WIDTH
    static int _get_MAX_CHANNEL_WIDTH();
    // Set static field: static public System.Int32 MAX_CHANNEL_WIDTH
    static void _set_MAX_CHANNEL_WIDTH(int value);
    // static field const value: static public System.Int32 MAX_LISTENERS
    static constexpr const int MAX_LISTENERS = 8;
    // Get static field: static public System.Int32 MAX_LISTENERS
    static int _get_MAX_LISTENERS();
    // Set static field: static public System.Int32 MAX_LISTENERS
    static void _set_MAX_LISTENERS(int value);
    // static field const value: static public System.Int32 REVERB_MAXINSTANCES
    static constexpr const int REVERB_MAXINSTANCES = 4;
    // Get static field: static public System.Int32 REVERB_MAXINSTANCES
    static int _get_REVERB_MAXINSTANCES();
    // Set static field: static public System.Int32 REVERB_MAXINSTANCES
    static void _set_REVERB_MAXINSTANCES(int value);
    // static field const value: static public System.Int32 MAX_SYSTEMS
    static constexpr const int MAX_SYSTEMS = 8;
    // Get static field: static public System.Int32 MAX_SYSTEMS
    static int _get_MAX_SYSTEMS();
    // Set static field: static public System.Int32 MAX_SYSTEMS
    static void _set_MAX_SYSTEMS(int value);
    // public System.Void .ctor()
    // Offset: 0x2262BF8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CONSTANTS* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::CONSTANTS::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CONSTANTS*, creationType>()));
    }
  }; // FMOD.CONSTANTS
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: FMOD::CONSTANTS::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
