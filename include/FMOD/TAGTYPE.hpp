// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: TAGTYPE
  struct TAGTYPE;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::TAGTYPE, "FMOD", "TAGTYPE");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.TAGTYPE
  // [TokenAttribute] Offset: FFFFFFFF
  struct TAGTYPE/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: TAGTYPE
    constexpr TAGTYPE(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public FMOD.TAGTYPE UNKNOWN
    static constexpr const int UNKNOWN = 0;
    // Get static field: static public FMOD.TAGTYPE UNKNOWN
    static ::FMOD::TAGTYPE _get_UNKNOWN();
    // Set static field: static public FMOD.TAGTYPE UNKNOWN
    static void _set_UNKNOWN(::FMOD::TAGTYPE value);
    // static field const value: static public FMOD.TAGTYPE ID3V1
    static constexpr const int ID3V1 = 1;
    // Get static field: static public FMOD.TAGTYPE ID3V1
    static ::FMOD::TAGTYPE _get_ID3V1();
    // Set static field: static public FMOD.TAGTYPE ID3V1
    static void _set_ID3V1(::FMOD::TAGTYPE value);
    // static field const value: static public FMOD.TAGTYPE ID3V2
    static constexpr const int ID3V2 = 2;
    // Get static field: static public FMOD.TAGTYPE ID3V2
    static ::FMOD::TAGTYPE _get_ID3V2();
    // Set static field: static public FMOD.TAGTYPE ID3V2
    static void _set_ID3V2(::FMOD::TAGTYPE value);
    // static field const value: static public FMOD.TAGTYPE VORBISCOMMENT
    static constexpr const int VORBISCOMMENT = 3;
    // Get static field: static public FMOD.TAGTYPE VORBISCOMMENT
    static ::FMOD::TAGTYPE _get_VORBISCOMMENT();
    // Set static field: static public FMOD.TAGTYPE VORBISCOMMENT
    static void _set_VORBISCOMMENT(::FMOD::TAGTYPE value);
    // static field const value: static public FMOD.TAGTYPE SHOUTCAST
    static constexpr const int SHOUTCAST = 4;
    // Get static field: static public FMOD.TAGTYPE SHOUTCAST
    static ::FMOD::TAGTYPE _get_SHOUTCAST();
    // Set static field: static public FMOD.TAGTYPE SHOUTCAST
    static void _set_SHOUTCAST(::FMOD::TAGTYPE value);
    // static field const value: static public FMOD.TAGTYPE ICECAST
    static constexpr const int ICECAST = 5;
    // Get static field: static public FMOD.TAGTYPE ICECAST
    static ::FMOD::TAGTYPE _get_ICECAST();
    // Set static field: static public FMOD.TAGTYPE ICECAST
    static void _set_ICECAST(::FMOD::TAGTYPE value);
    // static field const value: static public FMOD.TAGTYPE ASF
    static constexpr const int ASF = 6;
    // Get static field: static public FMOD.TAGTYPE ASF
    static ::FMOD::TAGTYPE _get_ASF();
    // Set static field: static public FMOD.TAGTYPE ASF
    static void _set_ASF(::FMOD::TAGTYPE value);
    // static field const value: static public FMOD.TAGTYPE MIDI
    static constexpr const int MIDI = 7;
    // Get static field: static public FMOD.TAGTYPE MIDI
    static ::FMOD::TAGTYPE _get_MIDI();
    // Set static field: static public FMOD.TAGTYPE MIDI
    static void _set_MIDI(::FMOD::TAGTYPE value);
    // static field const value: static public FMOD.TAGTYPE PLAYLIST
    static constexpr const int PLAYLIST = 8;
    // Get static field: static public FMOD.TAGTYPE PLAYLIST
    static ::FMOD::TAGTYPE _get_PLAYLIST();
    // Set static field: static public FMOD.TAGTYPE PLAYLIST
    static void _set_PLAYLIST(::FMOD::TAGTYPE value);
    // static field const value: static public FMOD.TAGTYPE FMOD
    static constexpr const int FMOD = 9;
    // Get static field: static public FMOD.TAGTYPE FMOD
    static ::FMOD::TAGTYPE _get_FMOD();
    // Set static field: static public FMOD.TAGTYPE FMOD
    static void _set_FMOD(::FMOD::TAGTYPE value);
    // static field const value: static public FMOD.TAGTYPE USER
    static constexpr const int USER = 10;
    // Get static field: static public FMOD.TAGTYPE USER
    static ::FMOD::TAGTYPE _get_USER();
    // Set static field: static public FMOD.TAGTYPE USER
    static void _set_USER(::FMOD::TAGTYPE value);
    // static field const value: static public FMOD.TAGTYPE MAX
    static constexpr const int MAX = 11;
    // Get static field: static public FMOD.TAGTYPE MAX
    static ::FMOD::TAGTYPE _get_MAX();
    // Set static field: static public FMOD.TAGTYPE MAX
    static void _set_MAX(::FMOD::TAGTYPE value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // FMOD.TAGTYPE
  #pragma pack(pop)
  static check_size<sizeof(TAGTYPE), 0 + sizeof(int)> __FMOD_TAGTYPESizeCheck;
  static_assert(sizeof(TAGTYPE) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
