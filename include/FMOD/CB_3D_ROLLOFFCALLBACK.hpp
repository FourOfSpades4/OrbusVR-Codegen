// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: CB_3D_ROLLOFFCALLBACK
  class CB_3D_ROLLOFFCALLBACK;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::FMOD::CB_3D_ROLLOFFCALLBACK);
DEFINE_IL2CPP_ARG_TYPE(::FMOD::CB_3D_ROLLOFFCALLBACK*, "FMOD", "CB_3D_ROLLOFFCALLBACK");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.CB_3D_ROLLOFFCALLBACK
  // [TokenAttribute] Offset: FFFFFFFF
  class CB_3D_ROLLOFFCALLBACK : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x2262054
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CB_3D_ROLLOFFCALLBACK* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::FMOD::CB_3D_ROLLOFFCALLBACK::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CB_3D_ROLLOFFCALLBACK*, creationType>(object, method)));
    }
    // public System.Single Invoke(System.IntPtr channelraw, System.Single distance)
    // Offset: 0x2262064
    float Invoke(::System::IntPtr channelraw, float distance);
    // public System.IAsyncResult BeginInvoke(System.IntPtr channelraw, System.Single distance, System.AsyncCallback callback, System.Object object)
    // Offset: 0x22624F0
    ::System::IAsyncResult* BeginInvoke(::System::IntPtr channelraw, float distance, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Single EndInvoke(System.IAsyncResult result)
    // Offset: 0x226259C
    float EndInvoke(::System::IAsyncResult* result);
  }; // FMOD.CB_3D_ROLLOFFCALLBACK
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: FMOD::CB_3D_ROLLOFFCALLBACK::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: FMOD::CB_3D_ROLLOFFCALLBACK::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FMOD::CB_3D_ROLLOFFCALLBACK::*)(::System::IntPtr, float)>(&FMOD::CB_3D_ROLLOFFCALLBACK::Invoke)> {
  static const MethodInfo* get() {
    static auto* channelraw = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* distance = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMOD::CB_3D_ROLLOFFCALLBACK*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channelraw, distance});
  }
};
// Writing MetadataGetter for method: FMOD::CB_3D_ROLLOFFCALLBACK::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (FMOD::CB_3D_ROLLOFFCALLBACK::*)(::System::IntPtr, float, ::System::AsyncCallback*, ::Il2CppObject*)>(&FMOD::CB_3D_ROLLOFFCALLBACK::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* channelraw = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* distance = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMOD::CB_3D_ROLLOFFCALLBACK*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channelraw, distance, callback, object});
  }
};
// Writing MetadataGetter for method: FMOD::CB_3D_ROLLOFFCALLBACK::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FMOD::CB_3D_ROLLOFFCALLBACK::*)(::System::IAsyncResult*)>(&FMOD::CB_3D_ROLLOFFCALLBACK::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMOD::CB_3D_ROLLOFFCALLBACK*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
