// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: FMOD
namespace FMOD {
  // Forward declaring type: RESULT
  struct RESULT;
  // Forward declaring type: System
  struct System;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: Factory
  struct Factory;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::Factory, "FMOD", "Factory");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x0
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: FMOD.Factory
  // [TokenAttribute] Offset: FFFFFFFF
  struct Factory/*, public ::System::ValueType*/ {
    public:
    // Creating value type constructor for type: Factory
    constexpr Factory() noexcept {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // static public FMOD.RESULT System_Create(out FMOD.System system)
    // Offset: 0x22DCC88
    static ::FMOD::RESULT System_Create(ByRef<::FMOD::System> system);
    // static private FMOD.RESULT FMOD5_System_Create(out System.IntPtr system)
    // Offset: 0x22DCC8C
    static ::FMOD::RESULT FMOD5_System_Create(ByRef<::System::IntPtr> system);
  }; // FMOD.Factory
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: FMOD::Factory::System_Create
// Il2CppName: System_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::RESULT (*)(ByRef<::FMOD::System>)>(&FMOD::Factory::System_Create)> {
  static const MethodInfo* get() {
    static auto* system = &::il2cpp_utils::GetClassFromName("FMOD", "System")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(FMOD::Factory), "System_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{system});
  }
};
// Writing MetadataGetter for method: FMOD::Factory::FMOD5_System_Create
// Il2CppName: FMOD5_System_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::RESULT (*)(ByRef<::System::IntPtr>)>(&FMOD::Factory::FMOD5_System_Create)> {
  static const MethodInfo* get() {
    static auto* system = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(FMOD::Factory), "FMOD5_System_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{system});
  }
};
