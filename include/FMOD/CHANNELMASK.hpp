// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: CHANNELMASK
  struct CHANNELMASK;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::CHANNELMASK, "FMOD", "CHANNELMASK");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.CHANNELMASK
  // [TokenAttribute] Offset: FFFFFFFF
  // [FlagsAttribute] Offset: FFFFFFFF
  struct CHANNELMASK/*, public ::System::Enum*/ {
    public:
    public:
    // public System.UInt32 value__
    // Size: 0x4
    // Offset: 0x0
    uint value;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating value type constructor for type: CHANNELMASK
    constexpr CHANNELMASK(uint value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator uint
    constexpr operator uint() const noexcept {
      return value;
    }
    // static field const value: static public FMOD.CHANNELMASK FRONT_LEFT
    static constexpr const uint FRONT_LEFT = 1u;
    // Get static field: static public FMOD.CHANNELMASK FRONT_LEFT
    static ::FMOD::CHANNELMASK _get_FRONT_LEFT();
    // Set static field: static public FMOD.CHANNELMASK FRONT_LEFT
    static void _set_FRONT_LEFT(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK FRONT_RIGHT
    static constexpr const uint FRONT_RIGHT = 2u;
    // Get static field: static public FMOD.CHANNELMASK FRONT_RIGHT
    static ::FMOD::CHANNELMASK _get_FRONT_RIGHT();
    // Set static field: static public FMOD.CHANNELMASK FRONT_RIGHT
    static void _set_FRONT_RIGHT(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK FRONT_CENTER
    static constexpr const uint FRONT_CENTER = 4u;
    // Get static field: static public FMOD.CHANNELMASK FRONT_CENTER
    static ::FMOD::CHANNELMASK _get_FRONT_CENTER();
    // Set static field: static public FMOD.CHANNELMASK FRONT_CENTER
    static void _set_FRONT_CENTER(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK LOW_FREQUENCY
    static constexpr const uint LOW_FREQUENCY = 8u;
    // Get static field: static public FMOD.CHANNELMASK LOW_FREQUENCY
    static ::FMOD::CHANNELMASK _get_LOW_FREQUENCY();
    // Set static field: static public FMOD.CHANNELMASK LOW_FREQUENCY
    static void _set_LOW_FREQUENCY(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK SURROUND_LEFT
    static constexpr const uint SURROUND_LEFT = 16u;
    // Get static field: static public FMOD.CHANNELMASK SURROUND_LEFT
    static ::FMOD::CHANNELMASK _get_SURROUND_LEFT();
    // Set static field: static public FMOD.CHANNELMASK SURROUND_LEFT
    static void _set_SURROUND_LEFT(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK SURROUND_RIGHT
    static constexpr const uint SURROUND_RIGHT = 32u;
    // Get static field: static public FMOD.CHANNELMASK SURROUND_RIGHT
    static ::FMOD::CHANNELMASK _get_SURROUND_RIGHT();
    // Set static field: static public FMOD.CHANNELMASK SURROUND_RIGHT
    static void _set_SURROUND_RIGHT(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK BACK_LEFT
    static constexpr const uint BACK_LEFT = 64u;
    // Get static field: static public FMOD.CHANNELMASK BACK_LEFT
    static ::FMOD::CHANNELMASK _get_BACK_LEFT();
    // Set static field: static public FMOD.CHANNELMASK BACK_LEFT
    static void _set_BACK_LEFT(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK BACK_RIGHT
    static constexpr const uint BACK_RIGHT = 128u;
    // Get static field: static public FMOD.CHANNELMASK BACK_RIGHT
    static ::FMOD::CHANNELMASK _get_BACK_RIGHT();
    // Set static field: static public FMOD.CHANNELMASK BACK_RIGHT
    static void _set_BACK_RIGHT(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK BACK_CENTER
    static constexpr const uint BACK_CENTER = 256u;
    // Get static field: static public FMOD.CHANNELMASK BACK_CENTER
    static ::FMOD::CHANNELMASK _get_BACK_CENTER();
    // Set static field: static public FMOD.CHANNELMASK BACK_CENTER
    static void _set_BACK_CENTER(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK MONO
    static constexpr const uint MONO = 1u;
    // Get static field: static public FMOD.CHANNELMASK MONO
    static ::FMOD::CHANNELMASK _get_MONO();
    // Set static field: static public FMOD.CHANNELMASK MONO
    static void _set_MONO(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK STEREO
    static constexpr const uint STEREO = 3u;
    // Get static field: static public FMOD.CHANNELMASK STEREO
    static ::FMOD::CHANNELMASK _get_STEREO();
    // Set static field: static public FMOD.CHANNELMASK STEREO
    static void _set_STEREO(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK LRC
    static constexpr const uint LRC = 7u;
    // Get static field: static public FMOD.CHANNELMASK LRC
    static ::FMOD::CHANNELMASK _get_LRC();
    // Set static field: static public FMOD.CHANNELMASK LRC
    static void _set_LRC(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK QUAD
    static constexpr const uint QUAD = 51u;
    // Get static field: static public FMOD.CHANNELMASK QUAD
    static ::FMOD::CHANNELMASK _get_QUAD();
    // Set static field: static public FMOD.CHANNELMASK QUAD
    static void _set_QUAD(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK SURROUND
    static constexpr const uint SURROUND = 55u;
    // Get static field: static public FMOD.CHANNELMASK SURROUND
    static ::FMOD::CHANNELMASK _get_SURROUND();
    // Set static field: static public FMOD.CHANNELMASK SURROUND
    static void _set_SURROUND(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK _5POINT1
    static constexpr const uint _5POINT1 = 63u;
    // Get static field: static public FMOD.CHANNELMASK _5POINT1
    static ::FMOD::CHANNELMASK _get__5POINT1();
    // Set static field: static public FMOD.CHANNELMASK _5POINT1
    static void _set__5POINT1(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK _5POINT1_REARS
    static constexpr const uint _5POINT1_REARS = 207u;
    // Get static field: static public FMOD.CHANNELMASK _5POINT1_REARS
    static ::FMOD::CHANNELMASK _get__5POINT1_REARS();
    // Set static field: static public FMOD.CHANNELMASK _5POINT1_REARS
    static void _set__5POINT1_REARS(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK _7POINT0
    static constexpr const uint _7POINT0 = 247u;
    // Get static field: static public FMOD.CHANNELMASK _7POINT0
    static ::FMOD::CHANNELMASK _get__7POINT0();
    // Set static field: static public FMOD.CHANNELMASK _7POINT0
    static void _set__7POINT0(::FMOD::CHANNELMASK value);
    // static field const value: static public FMOD.CHANNELMASK _7POINT1
    static constexpr const uint _7POINT1 = 255u;
    // Get static field: static public FMOD.CHANNELMASK _7POINT1
    static ::FMOD::CHANNELMASK _get__7POINT1();
    // Set static field: static public FMOD.CHANNELMASK _7POINT1
    static void _set__7POINT1(::FMOD::CHANNELMASK value);
    // Get instance field reference: public System.UInt32 value__
    [[deprecated("Use field access instead!")]] uint& dyn_value__();
  }; // FMOD.CHANNELMASK
  #pragma pack(pop)
  static check_size<sizeof(CHANNELMASK), 0 + sizeof(uint)> __FMOD_CHANNELMASKSizeCheck;
  static_assert(sizeof(CHANNELMASK) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
