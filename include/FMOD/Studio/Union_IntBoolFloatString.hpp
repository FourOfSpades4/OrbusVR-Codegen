// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: FMOD.StringWrapper
#include "FMOD/StringWrapper.hpp"
// Completed includes
// Type namespace: FMOD.Studio
namespace FMOD::Studio {
  // Forward declaring type: Union_IntBoolFloatString
  struct Union_IntBoolFloatString;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::Studio::Union_IntBoolFloatString, "FMOD.Studio", "Union_IntBoolFloatString");
// Type namespace: FMOD.Studio
namespace FMOD::Studio {
  // WARNING Size may be invalid!
  // WARNING Layout: Explicit may not be correctly taken into account!
  // Autogenerated type: FMOD.Studio.Union_IntBoolFloatString
  // [TokenAttribute] Offset: FFFFFFFF
  struct Union_IntBoolFloatString/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 intvalue
    // Size: 0x4
    // Offset: 0x0
    int intvalue;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean boolvalue
    // Size: 0x1
    // Offset: 0x0
    bool boolvalue;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Single floatvalue
    // Size: 0x4
    // Offset: 0x0
    float floatvalue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public FMOD.StringWrapper stringvalue
    // Size: 0x8
    // Offset: 0x0
    ::FMOD::StringWrapper stringvalue;
    // Field size check
    static_assert(sizeof(::FMOD::StringWrapper) == 0x8);
    public:
    // Creating value type constructor for type: Union_IntBoolFloatString
    constexpr Union_IntBoolFloatString(int intvalue_ = {}, bool boolvalue_ = {}, float floatvalue_ = {}, ::FMOD::StringWrapper stringvalue_ = {}) noexcept : intvalue{intvalue_}, boolvalue{boolvalue_}, floatvalue{floatvalue_}, stringvalue{stringvalue_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 intvalue
    [[deprecated("Use field access instead!")]] int& dyn_intvalue();
    // Get instance field reference: public System.Boolean boolvalue
    [[deprecated("Use field access instead!")]] bool& dyn_boolvalue();
    // Get instance field reference: public System.Single floatvalue
    [[deprecated("Use field access instead!")]] float& dyn_floatvalue();
    // Get instance field reference: public FMOD.StringWrapper stringvalue
    [[deprecated("Use field access instead!")]] ::FMOD::StringWrapper& dyn_stringvalue();
  }; // FMOD.Studio.Union_IntBoolFloatString
  // WARNING Not writing size check since size may be invalid!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
