// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: FMOD.StringWrapper
#include "FMOD/StringWrapper.hpp"
// Completed includes
// Type namespace: FMOD.Studio
namespace FMOD::Studio {
  // Forward declaring type: TIMELINE_MARKER_PROPERTIES
  struct TIMELINE_MARKER_PROPERTIES;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::Studio::TIMELINE_MARKER_PROPERTIES, "FMOD.Studio", "TIMELINE_MARKER_PROPERTIES");
// Type namespace: FMOD.Studio
namespace FMOD::Studio {
  // Size: 0xC
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: FMOD.Studio.TIMELINE_MARKER_PROPERTIES
  // [TokenAttribute] Offset: FFFFFFFF
  struct TIMELINE_MARKER_PROPERTIES/*, public ::System::ValueType*/ {
    public:
    public:
    // public FMOD.StringWrapper name
    // Size: 0x8
    // Offset: 0x0
    ::FMOD::StringWrapper name;
    // Field size check
    static_assert(sizeof(::FMOD::StringWrapper) == 0x8);
    // public System.Int32 position
    // Size: 0x4
    // Offset: 0x8
    int position;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: TIMELINE_MARKER_PROPERTIES
    constexpr TIMELINE_MARKER_PROPERTIES(::FMOD::StringWrapper name_ = {}, int position_ = {}) noexcept : name{name_}, position{position_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public FMOD.StringWrapper name
    [[deprecated("Use field access instead!")]] ::FMOD::StringWrapper& dyn_name();
    // Get instance field reference: public System.Int32 position
    [[deprecated("Use field access instead!")]] int& dyn_position();
  }; // FMOD.Studio.TIMELINE_MARKER_PROPERTIES
  #pragma pack(pop)
  static check_size<sizeof(TIMELINE_MARKER_PROPERTIES), 8 + sizeof(int)> __FMOD_Studio_TIMELINE_MARKER_PROPERTIESSizeCheck;
  static_assert(sizeof(TIMELINE_MARKER_PROPERTIES) == 0xC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
