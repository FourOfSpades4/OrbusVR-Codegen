// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: FMOD.StringWrapper
#include "FMOD/StringWrapper.hpp"
// Completed includes
// Type namespace: FMOD.Studio
namespace FMOD::Studio {
  // Forward declaring type: PROGRAMMER_SOUND_PROPERTIES
  struct PROGRAMMER_SOUND_PROPERTIES;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::Studio::PROGRAMMER_SOUND_PROPERTIES, "FMOD.Studio", "PROGRAMMER_SOUND_PROPERTIES");
// Type namespace: FMOD.Studio
namespace FMOD::Studio {
  // Size: 0x14
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: FMOD.Studio.PROGRAMMER_SOUND_PROPERTIES
  // [TokenAttribute] Offset: FFFFFFFF
  struct PROGRAMMER_SOUND_PROPERTIES/*, public ::System::ValueType*/ {
    public:
    public:
    // public FMOD.StringWrapper name
    // Size: 0x8
    // Offset: 0x0
    ::FMOD::StringWrapper name;
    // Field size check
    static_assert(sizeof(::FMOD::StringWrapper) == 0x8);
    // public System.IntPtr sound
    // Size: 0x8
    // Offset: 0x8
    ::System::IntPtr sound;
    // Field size check
    static_assert(sizeof(::System::IntPtr) == 0x8);
    // public System.Int32 subsoundIndex
    // Size: 0x4
    // Offset: 0x10
    int subsoundIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: PROGRAMMER_SOUND_PROPERTIES
    constexpr PROGRAMMER_SOUND_PROPERTIES(::FMOD::StringWrapper name_ = {}, ::System::IntPtr sound_ = {}, int subsoundIndex_ = {}) noexcept : name{name_}, sound{sound_}, subsoundIndex{subsoundIndex_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public FMOD.StringWrapper name
    [[deprecated("Use field access instead!")]] ::FMOD::StringWrapper& dyn_name();
    // Get instance field reference: public System.IntPtr sound
    [[deprecated("Use field access instead!")]] ::System::IntPtr& dyn_sound();
    // Get instance field reference: public System.Int32 subsoundIndex
    [[deprecated("Use field access instead!")]] int& dyn_subsoundIndex();
  }; // FMOD.Studio.PROGRAMMER_SOUND_PROPERTIES
  #pragma pack(pop)
  static check_size<sizeof(PROGRAMMER_SOUND_PROPERTIES), 16 + sizeof(int)> __FMOD_Studio_PROGRAMMER_SOUND_PROPERTIESSizeCheck;
  static_assert(sizeof(PROGRAMMER_SOUND_PROPERTIES) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
