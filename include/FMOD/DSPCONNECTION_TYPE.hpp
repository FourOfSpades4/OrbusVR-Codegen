// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: FMOD
namespace FMOD {
  // Forward declaring type: DSPCONNECTION_TYPE
  struct DSPCONNECTION_TYPE;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::FMOD::DSPCONNECTION_TYPE, "FMOD", "DSPCONNECTION_TYPE");
// Type namespace: FMOD
namespace FMOD {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: FMOD.DSPCONNECTION_TYPE
  // [TokenAttribute] Offset: FFFFFFFF
  struct DSPCONNECTION_TYPE/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: DSPCONNECTION_TYPE
    constexpr DSPCONNECTION_TYPE(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public FMOD.DSPCONNECTION_TYPE STANDARD
    static constexpr const int STANDARD = 0;
    // Get static field: static public FMOD.DSPCONNECTION_TYPE STANDARD
    static ::FMOD::DSPCONNECTION_TYPE _get_STANDARD();
    // Set static field: static public FMOD.DSPCONNECTION_TYPE STANDARD
    static void _set_STANDARD(::FMOD::DSPCONNECTION_TYPE value);
    // static field const value: static public FMOD.DSPCONNECTION_TYPE SIDECHAIN
    static constexpr const int SIDECHAIN = 1;
    // Get static field: static public FMOD.DSPCONNECTION_TYPE SIDECHAIN
    static ::FMOD::DSPCONNECTION_TYPE _get_SIDECHAIN();
    // Set static field: static public FMOD.DSPCONNECTION_TYPE SIDECHAIN
    static void _set_SIDECHAIN(::FMOD::DSPCONNECTION_TYPE value);
    // static field const value: static public FMOD.DSPCONNECTION_TYPE SEND
    static constexpr const int SEND = 2;
    // Get static field: static public FMOD.DSPCONNECTION_TYPE SEND
    static ::FMOD::DSPCONNECTION_TYPE _get_SEND();
    // Set static field: static public FMOD.DSPCONNECTION_TYPE SEND
    static void _set_SEND(::FMOD::DSPCONNECTION_TYPE value);
    // static field const value: static public FMOD.DSPCONNECTION_TYPE SEND_SIDECHAIN
    static constexpr const int SEND_SIDECHAIN = 3;
    // Get static field: static public FMOD.DSPCONNECTION_TYPE SEND_SIDECHAIN
    static ::FMOD::DSPCONNECTION_TYPE _get_SEND_SIDECHAIN();
    // Set static field: static public FMOD.DSPCONNECTION_TYPE SEND_SIDECHAIN
    static void _set_SEND_SIDECHAIN(::FMOD::DSPCONNECTION_TYPE value);
    // static field const value: static public FMOD.DSPCONNECTION_TYPE MAX
    static constexpr const int MAX = 4;
    // Get static field: static public FMOD.DSPCONNECTION_TYPE MAX
    static ::FMOD::DSPCONNECTION_TYPE _get_MAX();
    // Set static field: static public FMOD.DSPCONNECTION_TYPE MAX
    static void _set_MAX(::FMOD::DSPCONNECTION_TYPE value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // FMOD.DSPCONNECTION_TYPE
  #pragma pack(pop)
  static check_size<sizeof(DSPCONNECTION_TYPE), 0 + sizeof(int)> __FMOD_DSPCONNECTION_TYPESizeCheck;
  static_assert(sizeof(DSPCONNECTION_TYPE) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
