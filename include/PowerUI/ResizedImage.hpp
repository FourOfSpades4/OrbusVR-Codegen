// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: ResizedImage
  class ResizedImage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::ResizedImage);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::ResizedImage*, "PowerUI", "ResizedImage");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.ResizedImage
  // [TokenAttribute] Offset: FFFFFFFF
  class ResizedImage : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 Width
    // Size: 0x4
    // Offset: 0x10
    int Width;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 Height
    // Size: 0x4
    // Offset: 0x14
    int Height;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 OriginalWidth
    // Size: 0x4
    // Offset: 0x18
    int OriginalWidth;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 OriginalHeight
    // Size: 0x4
    // Offset: 0x1C
    int OriginalHeight;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public UnityEngine.Texture2D Image
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Texture2D* Image;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    public:
    // Get instance field reference: public System.Int32 Width
    [[deprecated("Use field access instead!")]] int& dyn_Width();
    // Get instance field reference: public System.Int32 Height
    [[deprecated("Use field access instead!")]] int& dyn_Height();
    // Get instance field reference: public System.Int32 OriginalWidth
    [[deprecated("Use field access instead!")]] int& dyn_OriginalWidth();
    // Get instance field reference: public System.Int32 OriginalHeight
    [[deprecated("Use field access instead!")]] int& dyn_OriginalHeight();
    // Get instance field reference: public UnityEngine.Texture2D Image
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_Image();
    // public System.Void .ctor(UnityEngine.Texture2D image)
    // Offset: 0x176D440
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ResizedImage* New_ctor(::UnityEngine::Texture2D* image) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ResizedImage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ResizedImage*, creationType>(image)));
    }
  }; // PowerUI.ResizedImage
  #pragma pack(pop)
  static check_size<sizeof(ResizedImage), 32 + sizeof(::UnityEngine::Texture2D*)> __PowerUI_ResizedImageSizeCheck;
  static_assert(sizeof(ResizedImage) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::ResizedImage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
