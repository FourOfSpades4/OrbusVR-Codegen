// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PowerUI.FileProtocol
#include "PowerUI/FileProtocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: ImagePackage
  class ImagePackage;
  // Forward declaring type: Document
  class Document;
  // Forward declaring type: Element
  class Element;
  // Forward declaring type: FilePath
  class FilePath;
  // Forward declaring type: TextPackage
  class TextPackage;
  // Forward declaring type: FormData
  class FormData;
  // Forward declaring type: DataPackage
  class DataPackage;
}
// Forward declaring namespace: UnityHttp
namespace UnityHttp {
  // Forward declaring type: HttpRequest
  class HttpRequest;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: HttpProtocol
  class HttpProtocol;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::HttpProtocol);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::HttpProtocol*, "PowerUI", "HttpProtocol");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x11
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.HttpProtocol
  // [TokenAttribute] Offset: FFFFFFFF
  class HttpProtocol : public ::PowerUI::FileProtocol {
    public:
    // Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ImagePackage> Cache
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ImagePackage*>* _get_Cache();
    // Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ImagePackage> Cache
    static void _set_Cache(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ImagePackage*>* value);
    // static public PowerUI.ImagePackage GetFromCache(System.String url)
    // Offset: 0x1A4A4F4
    static ::PowerUI::ImagePackage* GetFromCache(::StringW url);
    // static public System.Void AddToCache(System.String url, PowerUI.ImagePackage result)
    // Offset: 0x1A4A598
    static void AddToCache(::StringW url, ::PowerUI::ImagePackage* result);
    // public PowerUI.Document ResolveTarget(PowerUI.Element linkElement)
    // Offset: 0x1A4AC00
    ::PowerUI::Document* ResolveTarget(::PowerUI::Element* linkElement);
    // private System.Void LoadIntoDocument(PowerUI.FilePath path, PowerUI.Document document)
    // Offset: 0x1A4AE38
    void LoadIntoDocument(::PowerUI::FilePath* path, ::PowerUI::Document* document);
    // private System.Void GotLinkText(PowerUI.TextPackage package)
    // Offset: 0x1A4AF64
    void GotLinkText(::PowerUI::TextPackage* package);
    // private System.Void OnFormSent(UnityHttp.HttpRequest request)
    // Offset: 0x1A4B1D8
    void OnFormSent(::UnityHttp::HttpRequest* request);
    // private System.Void GotDataResult(UnityHttp.HttpRequest request)
    // Offset: 0x1A4B590
    void GotDataResult(::UnityHttp::HttpRequest* request);
    // private System.Void GotTextResult(UnityHttp.HttpRequest request)
    // Offset: 0x1A4B750
    void GotTextResult(::UnityHttp::HttpRequest* request);
    // private System.Void GotGraphicResult(UnityHttp.HttpRequest request)
    // Offset: 0x1A4B910
    void GotGraphicResult(::UnityHttp::HttpRequest* request);
    // static private System.Void .cctor()
    // Offset: 0x1A4BDE0
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x1A4A4C4
    // Implemented from: PowerUI.FileProtocol
    // Base method: System.Void FileProtocol::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HttpProtocol* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpProtocol::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HttpProtocol*, creationType>()));
    }
    // public override System.String[] GetNames()
    // Offset: 0x1A4A648
    // Implemented from: PowerUI.FileProtocol
    // Base method: System.String[] FileProtocol::GetNames()
    ::ArrayW<::StringW> GetNames();
    // public override System.Void OnGetGraphic(PowerUI.ImagePackage package, PowerUI.FilePath path)
    // Offset: 0x1A4A7F4
    // Implemented from: PowerUI.FileProtocol
    // Base method: System.Void FileProtocol::OnGetGraphic(PowerUI.ImagePackage package, PowerUI.FilePath path)
    void OnGetGraphic(::PowerUI::ImagePackage* package, ::PowerUI::FilePath* path);
    // public override System.Void OnGetText(PowerUI.TextPackage package, PowerUI.FilePath path)
    // Offset: 0x1A4AA28
    // Implemented from: PowerUI.FileProtocol
    // Base method: System.Void FileProtocol::OnGetText(PowerUI.TextPackage package, PowerUI.FilePath path)
    void OnGetText(::PowerUI::TextPackage* package, ::PowerUI::FilePath* path);
    // public override System.Void OnFollowLink(PowerUI.Element linkElement, PowerUI.FilePath path)
    // Offset: 0x1A4AB04
    // Implemented from: PowerUI.FileProtocol
    // Base method: System.Void FileProtocol::OnFollowLink(PowerUI.Element linkElement, PowerUI.FilePath path)
    void OnFollowLink(::PowerUI::Element* linkElement, ::PowerUI::FilePath* path);
    // public override System.Void OnPostForm(PowerUI.FormData form, PowerUI.Element formElement, PowerUI.FilePath path)
    // Offset: 0x1A4B0E0
    // Implemented from: PowerUI.FileProtocol
    // Base method: System.Void FileProtocol::OnPostForm(PowerUI.FormData form, PowerUI.Element formElement, PowerUI.FilePath path)
    void OnPostForm(::PowerUI::FormData* form, ::PowerUI::Element* formElement, ::PowerUI::FilePath* path);
    // public override System.Void OnGetData(PowerUI.DataPackage package, PowerUI.FilePath path)
    // Offset: 0x1A4B4B4
    // Implemented from: PowerUI.FileProtocol
    // Base method: System.Void FileProtocol::OnGetData(PowerUI.DataPackage package, PowerUI.FilePath path)
    void OnGetData(::PowerUI::DataPackage* package, ::PowerUI::FilePath* path);
  }; // PowerUI.HttpProtocol
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::HttpProtocol::GetFromCache
// Il2CppName: GetFromCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::ImagePackage* (*)(::StringW)>(&PowerUI::HttpProtocol::GetFromCache)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "GetFromCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::AddToCache
// Il2CppName: AddToCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::PowerUI::ImagePackage*)>(&PowerUI::HttpProtocol::AddToCache)> {
  static const MethodInfo* get() {
    static auto* url = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* result = &::il2cpp_utils::GetClassFromName("PowerUI", "ImagePackage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "AddToCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{url, result});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::ResolveTarget
// Il2CppName: ResolveTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::Document* (PowerUI::HttpProtocol::*)(::PowerUI::Element*)>(&PowerUI::HttpProtocol::ResolveTarget)> {
  static const MethodInfo* get() {
    static auto* linkElement = &::il2cpp_utils::GetClassFromName("PowerUI", "Element")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "ResolveTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{linkElement});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::LoadIntoDocument
// Il2CppName: LoadIntoDocument
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::HttpProtocol::*)(::PowerUI::FilePath*, ::PowerUI::Document*)>(&PowerUI::HttpProtocol::LoadIntoDocument)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("PowerUI", "FilePath")->byval_arg;
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "LoadIntoDocument", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, document});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::GotLinkText
// Il2CppName: GotLinkText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::HttpProtocol::*)(::PowerUI::TextPackage*)>(&PowerUI::HttpProtocol::GotLinkText)> {
  static const MethodInfo* get() {
    static auto* package = &::il2cpp_utils::GetClassFromName("PowerUI", "TextPackage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "GotLinkText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{package});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::OnFormSent
// Il2CppName: OnFormSent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::HttpProtocol::*)(::UnityHttp::HttpRequest*)>(&PowerUI::HttpProtocol::OnFormSent)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("UnityHttp", "HttpRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "OnFormSent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::GotDataResult
// Il2CppName: GotDataResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::HttpProtocol::*)(::UnityHttp::HttpRequest*)>(&PowerUI::HttpProtocol::GotDataResult)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("UnityHttp", "HttpRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "GotDataResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::GotTextResult
// Il2CppName: GotTextResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::HttpProtocol::*)(::UnityHttp::HttpRequest*)>(&PowerUI::HttpProtocol::GotTextResult)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("UnityHttp", "HttpRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "GotTextResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::GotGraphicResult
// Il2CppName: GotGraphicResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::HttpProtocol::*)(::UnityHttp::HttpRequest*)>(&PowerUI::HttpProtocol::GotGraphicResult)> {
  static const MethodInfo* get() {
    static auto* request = &::il2cpp_utils::GetClassFromName("UnityHttp", "HttpRequest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "GotGraphicResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{request});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::HttpProtocol::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PowerUI::HttpProtocol::GetNames
// Il2CppName: GetNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (PowerUI::HttpProtocol::*)()>(&PowerUI::HttpProtocol::GetNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "GetNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::OnGetGraphic
// Il2CppName: OnGetGraphic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::HttpProtocol::*)(::PowerUI::ImagePackage*, ::PowerUI::FilePath*)>(&PowerUI::HttpProtocol::OnGetGraphic)> {
  static const MethodInfo* get() {
    static auto* package = &::il2cpp_utils::GetClassFromName("PowerUI", "ImagePackage")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("PowerUI", "FilePath")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "OnGetGraphic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{package, path});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::OnGetText
// Il2CppName: OnGetText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::HttpProtocol::*)(::PowerUI::TextPackage*, ::PowerUI::FilePath*)>(&PowerUI::HttpProtocol::OnGetText)> {
  static const MethodInfo* get() {
    static auto* package = &::il2cpp_utils::GetClassFromName("PowerUI", "TextPackage")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("PowerUI", "FilePath")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "OnGetText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{package, path});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::OnFollowLink
// Il2CppName: OnFollowLink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::HttpProtocol::*)(::PowerUI::Element*, ::PowerUI::FilePath*)>(&PowerUI::HttpProtocol::OnFollowLink)> {
  static const MethodInfo* get() {
    static auto* linkElement = &::il2cpp_utils::GetClassFromName("PowerUI", "Element")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("PowerUI", "FilePath")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "OnFollowLink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{linkElement, path});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::OnPostForm
// Il2CppName: OnPostForm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::HttpProtocol::*)(::PowerUI::FormData*, ::PowerUI::Element*, ::PowerUI::FilePath*)>(&PowerUI::HttpProtocol::OnPostForm)> {
  static const MethodInfo* get() {
    static auto* form = &::il2cpp_utils::GetClassFromName("PowerUI", "FormData")->byval_arg;
    static auto* formElement = &::il2cpp_utils::GetClassFromName("PowerUI", "Element")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("PowerUI", "FilePath")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "OnPostForm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{form, formElement, path});
  }
};
// Writing MetadataGetter for method: PowerUI::HttpProtocol::OnGetData
// Il2CppName: OnGetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::HttpProtocol::*)(::PowerUI::DataPackage*, ::PowerUI::FilePath*)>(&PowerUI::HttpProtocol::OnGetData)> {
  static const MethodInfo* get() {
    static auto* package = &::il2cpp_utils::GetClassFromName("PowerUI", "DataPackage")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("PowerUI", "FilePath")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::HttpProtocol*), "OnGetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{package, path});
  }
};
