// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: JSObject
  class JSObject;
}
// Forward declaring namespace: Nitro
namespace Nitro {
  // Forward declaring type: CodeLexer
  class CodeLexer;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: JSON
  class JSON;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::JSON);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::JSON*, "PowerUI", "JSON");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.JSON
  // [TokenAttribute] Offset: FFFFFFFF
  class JSON : public ::Il2CppObject {
    public:
    // static public System.String Stringify(PowerUI.JSObject jsonObject)
    // Offset: 0x1A53324
    static ::StringW Stringify(::PowerUI::JSObject* jsonObject);
    // static public PowerUI.JSObject Parse(System.String json)
    // Offset: 0x1A53354
    static ::PowerUI::JSObject* Parse(::StringW json);
    // static private PowerUI.JSObject ReadObject(Nitro.CodeLexer parser)
    // Offset: 0x1A5342C
    static ::PowerUI::JSObject* ReadObject(::Nitro::CodeLexer* parser);
  }; // PowerUI.JSON
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::JSON::Stringify
// Il2CppName: Stringify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::PowerUI::JSObject*)>(&PowerUI::JSON::Stringify)> {
  static const MethodInfo* get() {
    static auto* jsonObject = &::il2cpp_utils::GetClassFromName("PowerUI", "JSObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::JSON*), "Stringify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jsonObject});
  }
};
// Writing MetadataGetter for method: PowerUI::JSON::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::JSObject* (*)(::StringW)>(&PowerUI::JSON::Parse)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::JSON*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json});
  }
};
// Writing MetadataGetter for method: PowerUI::JSON::ReadObject
// Il2CppName: ReadObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::JSObject* (*)(::Nitro::CodeLexer*)>(&PowerUI::JSON::ReadObject)> {
  static const MethodInfo* get() {
    static auto* parser = &::il2cpp_utils::GetClassFromName("Nitro", "CodeLexer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::JSON*), "ReadObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parser});
  }
};
