// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI::Css
namespace PowerUI::Css {
  // Forward declaring type: SelectorStyle
  class SelectorStyle;
  // Forward declaring type: StyleSheet
  class StyleSheet;
}
// Completed forward declares
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Forward declaring type: Selector
  class Selector;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::Css::Selector);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::Css::Selector*, "PowerUI.Css", "Selector");
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.Css.Selector
  // [TokenAttribute] Offset: FFFFFFFF
  class Selector : public ::Il2CppObject {
    public:
    public:
    // public System.String Modifier
    // Size: 0x8
    // Offset: 0x10
    ::StringW Modifier;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public PowerUI.Css.SelectorStyle Style
    // Size: 0x8
    // Offset: 0x18
    ::PowerUI::Css::SelectorStyle* Style;
    // Field size check
    static_assert(sizeof(::PowerUI::Css::SelectorStyle*) == 0x8);
    // public System.String SelectorText
    // Size: 0x8
    // Offset: 0x20
    ::StringW SelectorText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String Modifier
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Modifier();
    // Get instance field reference: public PowerUI.Css.SelectorStyle Style
    [[deprecated("Use field access instead!")]] ::PowerUI::Css::SelectorStyle*& dyn_Style();
    // Get instance field reference: public System.String SelectorText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_SelectorText();
    // public System.Void .ctor(PowerUI.Css.StyleSheet sheet, System.String selectorText, System.String modifier)
    // Offset: 0x184B4BC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Selector* New_ctor(::PowerUI::Css::StyleSheet* sheet, ::StringW selectorText, ::StringW modifier) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::Selector::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Selector*, creationType>(sheet, selectorText, modifier)));
    }
  }; // PowerUI.Css.Selector
  #pragma pack(pop)
  static check_size<sizeof(Selector), 32 + sizeof(::StringW)> __PowerUI_Css_SelectorSizeCheck;
  static_assert(sizeof(Selector) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::Css::Selector::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
