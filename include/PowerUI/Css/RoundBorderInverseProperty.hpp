// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PowerUI.Css.DisplayableProperty
#include "PowerUI/Css/DisplayableProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Element
  class Element;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Forward declaring type: RoundBorderInverseProperty
  class RoundBorderInverseProperty;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::Css::RoundBorderInverseProperty);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::Css::RoundBorderInverseProperty*, "PowerUI.Css", "RoundBorderInverseProperty");
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Size: 0x29
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.Css.RoundBorderInverseProperty
  // [TokenAttribute] Offset: FFFFFFFF
  class RoundBorderInverseProperty : public ::PowerUI::Css::DisplayableProperty {
    public:
    // public System.Void .ctor(PowerUI.Element element)
    // Offset: 0x1849A34
    // Implemented from: PowerUI.Css.DisplayableProperty
    // Base method: System.Void DisplayableProperty::.ctor(PowerUI.Element element)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RoundBorderInverseProperty* New_ctor(::PowerUI::Element* element) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundBorderInverseProperty::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RoundBorderInverseProperty*, creationType>(element)));
    }
    // public override System.Void SetOverlayColour(UnityEngine.Color colour)
    // Offset: 0x1849A3C
    // Implemented from: PowerUI.Css.DisplayableProperty
    // Base method: System.Void DisplayableProperty::SetOverlayColour(UnityEngine.Color colour)
    void SetOverlayColour(::UnityEngine::Color colour);
    // public override System.Void Paint()
    // Offset: 0x1849A40
    // Implemented from: PowerUI.Css.DisplayableProperty
    // Base method: System.Void DisplayableProperty::Paint()
    void Paint();
    // protected override System.Void Layout()
    // Offset: 0x1849A44
    // Implemented from: PowerUI.Css.DisplayableProperty
    // Base method: System.Void DisplayableProperty::Layout()
    void Layout();
  }; // PowerUI.Css.RoundBorderInverseProperty
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::Css::RoundBorderInverseProperty::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PowerUI::Css::RoundBorderInverseProperty::SetOverlayColour
// Il2CppName: SetOverlayColour
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::RoundBorderInverseProperty::*)(::UnityEngine::Color)>(&PowerUI::Css::RoundBorderInverseProperty::SetOverlayColour)> {
  static const MethodInfo* get() {
    static auto* colour = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::RoundBorderInverseProperty*), "SetOverlayColour", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{colour});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::RoundBorderInverseProperty::Paint
// Il2CppName: Paint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::RoundBorderInverseProperty::*)()>(&PowerUI::Css::RoundBorderInverseProperty::Paint)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::RoundBorderInverseProperty*), "Paint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::RoundBorderInverseProperty::Layout
// Il2CppName: Layout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::RoundBorderInverseProperty::*)()>(&PowerUI::Css::RoundBorderInverseProperty::Layout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::RoundBorderInverseProperty*), "Layout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
