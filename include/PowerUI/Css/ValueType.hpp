// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Forward declaring type: ValueType
  struct ValueType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::Css::ValueType, "PowerUI.Css", "ValueType");
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.Css.ValueType
  // [TokenAttribute] Offset: FFFFFFFF
  struct ValueType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ValueType
    constexpr ValueType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public PowerUI.Css.ValueType Pixels
    static constexpr const int Pixels = 0;
    // Get static field: static public PowerUI.Css.ValueType Pixels
    static ::PowerUI::Css::ValueType _get_Pixels();
    // Set static field: static public PowerUI.Css.ValueType Pixels
    static void _set_Pixels(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Percentage
    static constexpr const int Percentage = 1;
    // Get static field: static public PowerUI.Css.ValueType Percentage
    static ::PowerUI::Css::ValueType _get_Percentage();
    // Set static field: static public PowerUI.Css.ValueType Percentage
    static void _set_Percentage(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Text
    static constexpr const int Text = 2;
    // Get static field: static public PowerUI.Css.ValueType Text
    static ::PowerUI::Css::ValueType _get_Text();
    // Set static field: static public PowerUI.Css.ValueType Text
    static void _set_Text(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Color
    static constexpr const int Color = 3;
    // Get static field: static public PowerUI.Css.ValueType Color
    static ::PowerUI::Css::ValueType _get_Color();
    // Set static field: static public PowerUI.Css.ValueType Color
    static void _set_Color(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Rectangle
    static constexpr const int Rectangle = 4;
    // Get static field: static public PowerUI.Css.ValueType Rectangle
    static ::PowerUI::Css::ValueType _get_Rectangle();
    // Set static field: static public PowerUI.Css.ValueType Rectangle
    static void _set_Rectangle(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Point
    static constexpr const int Point = 5;
    // Get static field: static public PowerUI.Css.ValueType Point
    static ::PowerUI::Css::ValueType _get_Point();
    // Set static field: static public PowerUI.Css.ValueType Point
    static void _set_Point(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Boolean
    static constexpr const int Boolean = 6;
    // Get static field: static public PowerUI.Css.ValueType Boolean
    static ::PowerUI::Css::ValueType _get_Boolean();
    // Set static field: static public PowerUI.Css.ValueType Boolean
    static void _set_Boolean(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Radians
    static constexpr const int Radians = 7;
    // Get static field: static public PowerUI.Css.ValueType Radians
    static ::PowerUI::Css::ValueType _get_Radians();
    // Set static field: static public PowerUI.Css.ValueType Radians
    static void _set_Radians(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Null
    static constexpr const int Null = 8;
    // Get static field: static public PowerUI.Css.ValueType Null
    static ::PowerUI::Css::ValueType _get_Null();
    // Set static field: static public PowerUI.Css.ValueType Null
    static void _set_Null(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Degrees
    static constexpr const int Degrees = 9;
    // Get static field: static public PowerUI.Css.ValueType Degrees
    static ::PowerUI::Css::ValueType _get_Degrees();
    // Set static field: static public PowerUI.Css.ValueType Degrees
    static void _set_Degrees(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Single
    static constexpr const int Single = 10;
    // Get static field: static public PowerUI.Css.ValueType Single
    static ::PowerUI::Css::ValueType _get_Single();
    // Set static field: static public PowerUI.Css.ValueType Single
    static void _set_Single(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Inherit
    static constexpr const int Inherit = 11;
    // Get static field: static public PowerUI.Css.ValueType Inherit
    static ::PowerUI::Css::ValueType _get_Inherit();
    // Set static field: static public PowerUI.Css.ValueType Inherit
    static void _set_Inherit(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Calc
    static constexpr const int Calc = 12;
    // Get static field: static public PowerUI.Css.ValueType Calc
    static ::PowerUI::Css::ValueType _get_Calc();
    // Set static field: static public PowerUI.Css.ValueType Calc
    static void _set_Calc(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Em
    static constexpr const int Em = 13;
    // Get static field: static public PowerUI.Css.ValueType Em
    static ::PowerUI::Css::ValueType _get_Em();
    // Set static field: static public PowerUI.Css.ValueType Em
    static void _set_Em(::PowerUI::Css::ValueType value);
    // static field const value: static public PowerUI.Css.ValueType Mixed
    static constexpr const int Mixed = 14;
    // Get static field: static public PowerUI.Css.ValueType Mixed
    static ::PowerUI::Css::ValueType _get_Mixed();
    // Set static field: static public PowerUI.Css.ValueType Mixed
    static void _set_Mixed(::PowerUI::Css::ValueType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // PowerUI.Css.ValueType
  #pragma pack(pop)
  static check_size<sizeof(ValueType), 0 + sizeof(int)> __PowerUI_Css_ValueTypeSizeCheck;
  static_assert(sizeof(ValueType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
