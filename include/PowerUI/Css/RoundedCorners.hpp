// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Renderman
  class Renderman;
  // Forward declaring type: Transformation
  class Transformation;
}
// Forward declaring namespace: PowerUI::Css
namespace PowerUI::Css {
  // Forward declaring type: RoundCorner
  class RoundCorner;
  // Forward declaring type: BorderProperty
  class BorderProperty;
  // Forward declaring type: ComputedStyle
  class ComputedStyle;
  // Forward declaring type: RoundBorderInverseProperty
  class RoundBorderInverseProperty;
  // Forward declaring type: RoundCornerPosition
  struct RoundCornerPosition;
}
// Completed forward declares
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Forward declaring type: RoundedCorners
  class RoundedCorners;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::Css::RoundedCorners);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::Css::RoundedCorners*, "PowerUI.Css", "RoundedCorners");
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.Css.RoundedCorners
  // [TokenAttribute] Offset: FFFFFFFF
  class RoundedCorners : public ::Il2CppObject {
    public:
    public:
    // public PowerUI.Renderman Renderer
    // Size: 0x8
    // Offset: 0x10
    ::PowerUI::Renderman* Renderer;
    // Field size check
    static_assert(sizeof(::PowerUI::Renderman*) == 0x8);
    // public PowerUI.Css.RoundCorner TopLeft
    // Size: 0x8
    // Offset: 0x18
    ::PowerUI::Css::RoundCorner* TopLeft;
    // Field size check
    static_assert(sizeof(::PowerUI::Css::RoundCorner*) == 0x8);
    // public PowerUI.Css.RoundCorner TopRight
    // Size: 0x8
    // Offset: 0x20
    ::PowerUI::Css::RoundCorner* TopRight;
    // Field size check
    static_assert(sizeof(::PowerUI::Css::RoundCorner*) == 0x8);
    // public PowerUI.Css.BorderProperty Border
    // Size: 0x8
    // Offset: 0x28
    ::PowerUI::Css::BorderProperty* Border;
    // Field size check
    static_assert(sizeof(::PowerUI::Css::BorderProperty*) == 0x8);
    // public PowerUI.Css.RoundCorner BottomLeft
    // Size: 0x8
    // Offset: 0x30
    ::PowerUI::Css::RoundCorner* BottomLeft;
    // Field size check
    static_assert(sizeof(::PowerUI::Css::RoundCorner*) == 0x8);
    // public PowerUI.Css.ComputedStyle Computed
    // Size: 0x8
    // Offset: 0x38
    ::PowerUI::Css::ComputedStyle* Computed;
    // Field size check
    static_assert(sizeof(::PowerUI::Css::ComputedStyle*) == 0x8);
    // public PowerUI.Css.RoundCorner BottomRight
    // Size: 0x8
    // Offset: 0x40
    ::PowerUI::Css::RoundCorner* BottomRight;
    // Field size check
    static_assert(sizeof(::PowerUI::Css::RoundCorner*) == 0x8);
    // public PowerUI.Css.RoundBorderInverseProperty InverseBorder
    // Size: 0x8
    // Offset: 0x48
    ::PowerUI::Css::RoundBorderInverseProperty* InverseBorder;
    // Field size check
    static_assert(sizeof(::PowerUI::Css::RoundBorderInverseProperty*) == 0x8);
    public:
    // Get instance field reference: public PowerUI.Renderman Renderer
    [[deprecated("Use field access instead!")]] ::PowerUI::Renderman*& dyn_Renderer();
    // Get instance field reference: public PowerUI.Css.RoundCorner TopLeft
    [[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundCorner*& dyn_TopLeft();
    // Get instance field reference: public PowerUI.Css.RoundCorner TopRight
    [[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundCorner*& dyn_TopRight();
    // Get instance field reference: public PowerUI.Css.BorderProperty Border
    [[deprecated("Use field access instead!")]] ::PowerUI::Css::BorderProperty*& dyn_Border();
    // Get instance field reference: public PowerUI.Css.RoundCorner BottomLeft
    [[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundCorner*& dyn_BottomLeft();
    // Get instance field reference: public PowerUI.Css.ComputedStyle Computed
    [[deprecated("Use field access instead!")]] ::PowerUI::Css::ComputedStyle*& dyn_Computed();
    // Get instance field reference: public PowerUI.Css.RoundCorner BottomRight
    [[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundCorner*& dyn_BottomRight();
    // Get instance field reference: public PowerUI.Css.RoundBorderInverseProperty InverseBorder
    [[deprecated("Use field access instead!")]] ::PowerUI::Css::RoundBorderInverseProperty*& dyn_InverseBorder();
    // public System.Void .ctor(PowerUI.Css.BorderProperty border)
    // Offset: 0x184AC60
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RoundedCorners* New_ctor(::PowerUI::Css::BorderProperty* border) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::RoundedCorners::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RoundedCorners*, creationType>(border)));
    }
    // public System.Void SetCorner(ref PowerUI.Css.RoundCorner corner, PowerUI.Css.RoundCornerPosition position, System.Int32 radius)
    // Offset: 0x184AD48
    void SetCorner(ByRef<::PowerUI::Css::RoundCorner*> corner, ::PowerUI::Css::RoundCornerPosition position, int radius);
    // public System.Void Transform(PowerUI.Transformation topTransform)
    // Offset: 0x184AE3C
    void Transform(::PowerUI::Transformation* topTransform);
    // public System.Void ApplyTransform()
    // Offset: 0x184AE74
    void ApplyTransform();
    // public System.Void PreLayout()
    // Offset: 0x184AEA4
    void PreLayout();
    // public System.Void Layout(System.Int32 i, ref System.Int32 cornerX, ref System.Int32 cornerY, ref System.Int32 lineWidth, ref System.Int32 lineHeight)
    // Offset: 0x184AED4
    void Layout(int i, ByRef<int> cornerX, ByRef<int> cornerY, ByRef<int> lineWidth, ByRef<int> lineHeight);
    // public System.Void Recompute()
    // Offset: 0x1841940
    void Recompute();
    // public System.Void RenderCorners()
    // Offset: 0x184B30C
    void RenderCorners();
  }; // PowerUI.Css.RoundedCorners
  #pragma pack(pop)
  static check_size<sizeof(RoundedCorners), 72 + sizeof(::PowerUI::Css::RoundBorderInverseProperty*)> __PowerUI_Css_RoundedCornersSizeCheck;
  static_assert(sizeof(RoundedCorners) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::Css::RoundedCorners::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PowerUI::Css::RoundedCorners::SetCorner
// Il2CppName: SetCorner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::RoundedCorners::*)(ByRef<::PowerUI::Css::RoundCorner*>, ::PowerUI::Css::RoundCornerPosition, int)>(&PowerUI::Css::RoundedCorners::SetCorner)> {
  static const MethodInfo* get() {
    static auto* corner = &::il2cpp_utils::GetClassFromName("PowerUI.Css", "RoundCorner")->this_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("PowerUI.Css", "RoundCornerPosition")->byval_arg;
    static auto* radius = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::RoundedCorners*), "SetCorner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{corner, position, radius});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::RoundedCorners::Transform
// Il2CppName: Transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::RoundedCorners::*)(::PowerUI::Transformation*)>(&PowerUI::Css::RoundedCorners::Transform)> {
  static const MethodInfo* get() {
    static auto* topTransform = &::il2cpp_utils::GetClassFromName("PowerUI", "Transformation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::RoundedCorners*), "Transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{topTransform});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::RoundedCorners::ApplyTransform
// Il2CppName: ApplyTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::RoundedCorners::*)()>(&PowerUI::Css::RoundedCorners::ApplyTransform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::RoundedCorners*), "ApplyTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::RoundedCorners::PreLayout
// Il2CppName: PreLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::RoundedCorners::*)()>(&PowerUI::Css::RoundedCorners::PreLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::RoundedCorners*), "PreLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::RoundedCorners::Layout
// Il2CppName: Layout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::RoundedCorners::*)(int, ByRef<int>, ByRef<int>, ByRef<int>, ByRef<int>)>(&PowerUI::Css::RoundedCorners::Layout)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* cornerX = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* cornerY = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* lineWidth = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* lineHeight = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::RoundedCorners*), "Layout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i, cornerX, cornerY, lineWidth, lineHeight});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::RoundedCorners::Recompute
// Il2CppName: Recompute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::RoundedCorners::*)()>(&PowerUI::Css::RoundedCorners::Recompute)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::RoundedCorners*), "Recompute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::RoundedCorners::RenderCorners
// Il2CppName: RenderCorners
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::RoundedCorners::*)()>(&PowerUI::Css::RoundedCorners::RenderCorners)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::RoundedCorners*), "RenderCorners", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
