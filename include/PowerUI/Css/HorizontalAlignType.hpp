// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Forward declaring type: HorizontalAlignType
  struct HorizontalAlignType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::Css::HorizontalAlignType, "PowerUI.Css", "HorizontalAlignType");
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.Css.HorizontalAlignType
  // [TokenAttribute] Offset: FFFFFFFF
  struct HorizontalAlignType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: HorizontalAlignType
    constexpr HorizontalAlignType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public PowerUI.Css.HorizontalAlignType Left
    static constexpr const int Left = 0;
    // Get static field: static public PowerUI.Css.HorizontalAlignType Left
    static ::PowerUI::Css::HorizontalAlignType _get_Left();
    // Set static field: static public PowerUI.Css.HorizontalAlignType Left
    static void _set_Left(::PowerUI::Css::HorizontalAlignType value);
    // static field const value: static public PowerUI.Css.HorizontalAlignType Right
    static constexpr const int Right = 1;
    // Get static field: static public PowerUI.Css.HorizontalAlignType Right
    static ::PowerUI::Css::HorizontalAlignType _get_Right();
    // Set static field: static public PowerUI.Css.HorizontalAlignType Right
    static void _set_Right(::PowerUI::Css::HorizontalAlignType value);
    // static field const value: static public PowerUI.Css.HorizontalAlignType Center
    static constexpr const int Center = 2;
    // Get static field: static public PowerUI.Css.HorizontalAlignType Center
    static ::PowerUI::Css::HorizontalAlignType _get_Center();
    // Set static field: static public PowerUI.Css.HorizontalAlignType Center
    static void _set_Center(::PowerUI::Css::HorizontalAlignType value);
    // static field const value: static public PowerUI.Css.HorizontalAlignType Justify
    static constexpr const int Justify = 3;
    // Get static field: static public PowerUI.Css.HorizontalAlignType Justify
    static ::PowerUI::Css::HorizontalAlignType _get_Justify();
    // Set static field: static public PowerUI.Css.HorizontalAlignType Justify
    static void _set_Justify(::PowerUI::Css::HorizontalAlignType value);
    // static field const value: static public PowerUI.Css.HorizontalAlignType End
    static constexpr const int End = 4;
    // Get static field: static public PowerUI.Css.HorizontalAlignType End
    static ::PowerUI::Css::HorizontalAlignType _get_End();
    // Set static field: static public PowerUI.Css.HorizontalAlignType End
    static void _set_End(::PowerUI::Css::HorizontalAlignType value);
    // static field const value: static public PowerUI.Css.HorizontalAlignType Auto
    static constexpr const int Auto = 5;
    // Get static field: static public PowerUI.Css.HorizontalAlignType Auto
    static ::PowerUI::Css::HorizontalAlignType _get_Auto();
    // Set static field: static public PowerUI.Css.HorizontalAlignType Auto
    static void _set_Auto(::PowerUI::Css::HorizontalAlignType value);
    // static field const value: static public PowerUI.Css.HorizontalAlignType Start
    static constexpr const int Start = 6;
    // Get static field: static public PowerUI.Css.HorizontalAlignType Start
    static ::PowerUI::Css::HorizontalAlignType _get_Start();
    // Set static field: static public PowerUI.Css.HorizontalAlignType Start
    static void _set_Start(::PowerUI::Css::HorizontalAlignType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // PowerUI.Css.HorizontalAlignType
  #pragma pack(pop)
  static check_size<sizeof(HorizontalAlignType), 0 + sizeof(int)> __PowerUI_Css_HorizontalAlignTypeSizeCheck;
  static_assert(sizeof(HorizontalAlignType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
