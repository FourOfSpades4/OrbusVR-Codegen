// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Document
  class Document;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: PowerUI::Css
namespace PowerUI::Css {
  // Forward declaring type: SelectorStyle
  class SelectorStyle;
}
// Forward declaring namespace: Wrench
namespace Wrench {
  // Forward declaring type: MLLexer
  class MLLexer;
}
// Completed forward declares
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Forward declaring type: StyleSheet
  class StyleSheet;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::Css::StyleSheet);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::Css::StyleSheet*, "PowerUI.Css", "StyleSheet");
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.Css.StyleSheet
  // [TokenAttribute] Offset: FFFFFFFF
  class StyleSheet : public ::Il2CppObject {
    public:
    public:
    // public PowerUI.Document Document
    // Size: 0x8
    // Offset: 0x10
    ::PowerUI::Document* Document;
    // Field size check
    static_assert(sizeof(::PowerUI::Document*) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<PowerUI.Css.SelectorStyle>> ModifiedSelectors
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::PowerUI::Css::SelectorStyle*>*>* ModifiedSelectors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::PowerUI::Css::SelectorStyle*>*>*) == 0x8);
    // public System.Collections.Generic.Dictionary`2<System.String,PowerUI.Css.SelectorStyle> Selectors
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::SelectorStyle*>* Selectors;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::SelectorStyle*>*) == 0x8);
    public:
    // Get instance field reference: public PowerUI.Document Document
    [[deprecated("Use field access instead!")]] ::PowerUI::Document*& dyn_Document();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.List`1<PowerUI.Css.SelectorStyle>> ModifiedSelectors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::List_1<::PowerUI::Css::SelectorStyle*>*>*& dyn_ModifiedSelectors();
    // Get instance field reference: public System.Collections.Generic.Dictionary`2<System.String,PowerUI.Css.SelectorStyle> Selectors
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::SelectorStyle*>*& dyn_Selectors();
    // public System.Void .ctor(PowerUI.Document document)
    // Offset: 0x184E91C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StyleSheet* New_ctor(::PowerUI::Document* document) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StyleSheet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StyleSheet*, creationType>(document)));
    }
    // public System.Void .ctor(PowerUI.Document document, System.String text)
    // Offset: 0x184E9A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StyleSheet* New_ctor(::PowerUI::Document* document, ::StringW text) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::StyleSheet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StyleSheet*, creationType>(document, text)));
    }
    // public PowerUI.Css.SelectorStyle GetStyleBySelector(System.String selector)
    // Offset: 0x184F040
    ::PowerUI::Css::SelectorStyle* GetStyleBySelector(::StringW selector);
    // public System.Void AddModified(System.String selector, PowerUI.Css.SelectorStyle style)
    // Offset: 0x184F0C0
    void AddModified(::StringW selector, ::PowerUI::Css::SelectorStyle* style);
    // public System.Collections.Generic.List`1<PowerUI.Css.SelectorStyle> GetModifiers(System.String selector)
    // Offset: 0x184C13C
    ::System::Collections::Generic::List_1<::PowerUI::Css::SelectorStyle*>* GetModifiers(::StringW selector);
    // private System.Boolean TryReadBlockComment(Wrench.MLLexer lexer, System.Char currentCharacter)
    // Offset: 0x184F1C4
    bool TryReadBlockComment(::Wrench::MLLexer* lexer, ::Il2CppChar currentCharacter);
    // public PowerUI.Css.SelectorStyle StartSelector(System.String selector, System.String modifier)
    // Offset: 0x184B51C
    ::PowerUI::Css::SelectorStyle* StartSelector(::StringW selector, ::StringW modifier);
    // public System.Void ParseCss(System.String css)
    // Offset: 0x184E9CC
    void ParseCss(::StringW css);
  }; // PowerUI.Css.StyleSheet
  #pragma pack(pop)
  static check_size<sizeof(StyleSheet), 32 + sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::Css::SelectorStyle*>*)> __PowerUI_Css_StyleSheetSizeCheck;
  static_assert(sizeof(StyleSheet) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::Css::StyleSheet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PowerUI::Css::StyleSheet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PowerUI::Css::StyleSheet::GetStyleBySelector
// Il2CppName: GetStyleBySelector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::Css::SelectorStyle* (PowerUI::Css::StyleSheet::*)(::StringW)>(&PowerUI::Css::StyleSheet::GetStyleBySelector)> {
  static const MethodInfo* get() {
    static auto* selector = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::StyleSheet*), "GetStyleBySelector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selector});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::StyleSheet::AddModified
// Il2CppName: AddModified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::StyleSheet::*)(::StringW, ::PowerUI::Css::SelectorStyle*)>(&PowerUI::Css::StyleSheet::AddModified)> {
  static const MethodInfo* get() {
    static auto* selector = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* style = &::il2cpp_utils::GetClassFromName("PowerUI.Css", "SelectorStyle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::StyleSheet*), "AddModified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selector, style});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::StyleSheet::GetModifiers
// Il2CppName: GetModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::PowerUI::Css::SelectorStyle*>* (PowerUI::Css::StyleSheet::*)(::StringW)>(&PowerUI::Css::StyleSheet::GetModifiers)> {
  static const MethodInfo* get() {
    static auto* selector = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::StyleSheet*), "GetModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selector});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::StyleSheet::TryReadBlockComment
// Il2CppName: TryReadBlockComment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PowerUI::Css::StyleSheet::*)(::Wrench::MLLexer*, ::Il2CppChar)>(&PowerUI::Css::StyleSheet::TryReadBlockComment)> {
  static const MethodInfo* get() {
    static auto* lexer = &::il2cpp_utils::GetClassFromName("Wrench", "MLLexer")->byval_arg;
    static auto* currentCharacter = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::StyleSheet*), "TryReadBlockComment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lexer, currentCharacter});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::StyleSheet::StartSelector
// Il2CppName: StartSelector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::Css::SelectorStyle* (PowerUI::Css::StyleSheet::*)(::StringW, ::StringW)>(&PowerUI::Css::StyleSheet::StartSelector)> {
  static const MethodInfo* get() {
    static auto* selector = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* modifier = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::StyleSheet*), "StartSelector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{selector, modifier});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::StyleSheet::ParseCss
// Il2CppName: ParseCss
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::StyleSheet::*)(::StringW)>(&PowerUI::Css::StyleSheet::ParseCss)> {
  static const MethodInfo* get() {
    static auto* css = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::StyleSheet*), "ParseCss", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{css});
  }
};
