// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Forward declaring type: CssFunction
  class CssFunction;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::Css::CssFunction);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::Css::CssFunction*, "PowerUI.Css", "CssFunction");
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.Css.CssFunction
  // [TokenAttribute] Offset: FFFFFFFF
  class CssFunction : public ::Il2CppObject {
    public:
    public:
    // public System.String Name
    // Size: 0x8
    // Offset: 0x10
    ::StringW Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return Name;
    }
    // Get instance field reference: public System.String Name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Name();
    // public System.String[] GetNames()
    // Offset: 0xEC5FD0
    ::ArrayW<::StringW> GetNames();
    // public System.Void .ctor()
    // Offset: 0xEC5FD8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CssFunction* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssFunction::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CssFunction*, creationType>()));
    }
  }; // PowerUI.Css.CssFunction
  #pragma pack(pop)
  static check_size<sizeof(CssFunction), 16 + sizeof(::StringW)> __PowerUI_Css_CssFunctionSizeCheck;
  static_assert(sizeof(CssFunction) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::Css::CssFunction::GetNames
// Il2CppName: GetNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (PowerUI::Css::CssFunction::*)()>(&PowerUI::Css::CssFunction::GetNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::CssFunction*), "GetNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::CssFunction::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
