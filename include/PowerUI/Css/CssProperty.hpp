// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PowerUI.Css.ValueType
#include "PowerUI/Css/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI::Css
namespace PowerUI::Css {
  // Forward declaring type: ComputedStyle
  class ComputedStyle;
  // Forward declaring type: Value
  class Value;
  // Forward declaring type: BackgroundImage
  class BackgroundImage;
  // Forward declaring type: BorderProperty
  class BorderProperty;
  // Forward declaring type: TextRenderingProperty
  class TextRenderingProperty;
}
// Completed forward declares
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Forward declaring type: CssProperty
  class CssProperty;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::Css::CssProperty);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::Css::CssProperty*, "PowerUI.Css", "CssProperty");
// Type namespace: PowerUI.Css
namespace PowerUI::Css {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.Css.CssProperty
  // [TokenAttribute] Offset: FFFFFFFF
  // [PreserveAttribute] Offset: FFFFFFFF
  class CssProperty : public ::Il2CppObject {
    public:
    public:
    // public System.String Name
    // Size: 0x8
    // Offset: 0x10
    ::StringW Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean IsTextual
    // Size: 0x1
    // Offset: 0x18
    bool IsTextual;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean IsXProperty
    // Size: 0x1
    // Offset: 0x19
    bool IsXProperty;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean IsWidthOrHeight
    // Size: 0x1
    // Offset: 0x1A
    bool IsWidthOrHeight;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: IsWidthOrHeight and: Type
    char __padding3[0x1] = {};
    // public PowerUI.Css.ValueType Type
    // Size: 0x4
    // Offset: 0x1C
    ::PowerUI::Css::ValueType Type;
    // Field size check
    static_assert(sizeof(::PowerUI::Css::ValueType) == 0x4);
    public:
    // Get instance field reference: public System.String Name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Name();
    // Get instance field reference: public System.Boolean IsTextual
    [[deprecated("Use field access instead!")]] bool& dyn_IsTextual();
    // Get instance field reference: public System.Boolean IsXProperty
    [[deprecated("Use field access instead!")]] bool& dyn_IsXProperty();
    // Get instance field reference: public System.Boolean IsWidthOrHeight
    [[deprecated("Use field access instead!")]] bool& dyn_IsWidthOrHeight();
    // Get instance field reference: public PowerUI.Css.ValueType Type
    [[deprecated("Use field access instead!")]] ::PowerUI::Css::ValueType& dyn_Type();
    // public System.String[] GetProperties()
    // Offset: 0xEC6880
    ::ArrayW<::StringW> GetProperties();
    // public System.Void Apply(PowerUI.Css.ComputedStyle style, PowerUI.Css.Value value)
    // Offset: 0xEC6888
    void Apply(::PowerUI::Css::ComputedStyle* style, ::PowerUI::Css::Value* value);
    // public System.Void SetDefault(PowerUI.Css.Value value, PowerUI.Css.ValueType type)
    // Offset: 0xEC688C
    void SetDefault(::PowerUI::Css::Value* value, ::PowerUI::Css::ValueType type);
    // public PowerUI.Css.BackgroundImage GetBackground(PowerUI.Css.ComputedStyle style)
    // Offset: 0xEC68FC
    ::PowerUI::Css::BackgroundImage* GetBackground(::PowerUI::Css::ComputedStyle* style);
    // public PowerUI.Css.BorderProperty GetBorder(PowerUI.Css.ComputedStyle style)
    // Offset: 0xEC69D0
    ::PowerUI::Css::BorderProperty* GetBorder(::PowerUI::Css::ComputedStyle* style);
    // public PowerUI.Css.TextRenderingProperty GetText(PowerUI.Css.ComputedStyle style)
    // Offset: 0xEC6A94
    ::PowerUI::Css::TextRenderingProperty* GetText(::PowerUI::Css::ComputedStyle* style);
    // public System.Void .ctor()
    // Offset: 0xEC6798
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CssProperty* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::Css::CssProperty::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CssProperty*, creationType>()));
    }
  }; // PowerUI.Css.CssProperty
  #pragma pack(pop)
  static check_size<sizeof(CssProperty), 28 + sizeof(::PowerUI::Css::ValueType)> __PowerUI_Css_CssPropertySizeCheck;
  static_assert(sizeof(CssProperty) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::Css::CssProperty::GetProperties
// Il2CppName: GetProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (PowerUI::Css::CssProperty::*)()>(&PowerUI::Css::CssProperty::GetProperties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::CssProperty*), "GetProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::CssProperty::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::CssProperty::*)(::PowerUI::Css::ComputedStyle*, ::PowerUI::Css::Value*)>(&PowerUI::Css::CssProperty::Apply)> {
  static const MethodInfo* get() {
    static auto* style = &::il2cpp_utils::GetClassFromName("PowerUI.Css", "ComputedStyle")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("PowerUI.Css", "Value")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::CssProperty*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{style, value});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::CssProperty::SetDefault
// Il2CppName: SetDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::Css::CssProperty::*)(::PowerUI::Css::Value*, ::PowerUI::Css::ValueType)>(&PowerUI::Css::CssProperty::SetDefault)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("PowerUI.Css", "Value")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("PowerUI.Css", "ValueType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::CssProperty*), "SetDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, type});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::CssProperty::GetBackground
// Il2CppName: GetBackground
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::Css::BackgroundImage* (PowerUI::Css::CssProperty::*)(::PowerUI::Css::ComputedStyle*)>(&PowerUI::Css::CssProperty::GetBackground)> {
  static const MethodInfo* get() {
    static auto* style = &::il2cpp_utils::GetClassFromName("PowerUI.Css", "ComputedStyle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::CssProperty*), "GetBackground", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{style});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::CssProperty::GetBorder
// Il2CppName: GetBorder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::Css::BorderProperty* (PowerUI::Css::CssProperty::*)(::PowerUI::Css::ComputedStyle*)>(&PowerUI::Css::CssProperty::GetBorder)> {
  static const MethodInfo* get() {
    static auto* style = &::il2cpp_utils::GetClassFromName("PowerUI.Css", "ComputedStyle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::CssProperty*), "GetBorder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{style});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::CssProperty::GetText
// Il2CppName: GetText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::Css::TextRenderingProperty* (PowerUI::Css::CssProperty::*)(::PowerUI::Css::ComputedStyle*)>(&PowerUI::Css::CssProperty::GetText)> {
  static const MethodInfo* get() {
    static auto* style = &::il2cpp_utils::GetClassFromName("PowerUI.Css", "ComputedStyle")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Css::CssProperty*), "GetText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{style});
  }
};
// Writing MetadataGetter for method: PowerUI::Css::CssProperty::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
