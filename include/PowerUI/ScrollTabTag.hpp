// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PowerUI.HtmlTagHandler
#include "PowerUI/HtmlTagHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: InputTag
  class InputTag;
  // Forward declaring type: UIEvent
  class UIEvent;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: ScrollTabTag
  class ScrollTabTag;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::ScrollTabTag);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::ScrollTabTag*, "PowerUI", "ScrollTabTag");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.ScrollTabTag
  // [TokenAttribute] Offset: FFFFFFFF
  class ScrollTabTag : public ::PowerUI::HtmlTagHandler {
    public:
    // Writing base type padding for base size: 0x33 to desired offset: 0x38
    char ___base_padding[0x5] = {};
    public:
    // public PowerUI.InputTag ScrollBar
    // Size: 0x8
    // Offset: 0x38
    ::PowerUI::InputTag* ScrollBar;
    // Field size check
    static_assert(sizeof(::PowerUI::InputTag*) == 0x8);
    public:
    // Creating conversion operator: operator ::PowerUI::InputTag*
    constexpr operator ::PowerUI::InputTag*() const noexcept {
      return ScrollBar;
    }
    // Get instance field reference: public PowerUI.InputTag ScrollBar
    [[deprecated("Use field access instead!")]] ::PowerUI::InputTag*& dyn_ScrollBar();
    // public System.Int32 SizeBefore()
    // Offset: 0x1773164
    int SizeBefore();
    // public System.Int32 SizeAfter()
    // Offset: 0x177316C
    int SizeAfter();
    // public System.Int32 StyleSize()
    // Offset: 0x1773174
    int StyleSize();
    // public System.Void ElementScrolled(System.Single progress)
    // Offset: 0x177317C
    void ElementScrolled(float progress);
    // public System.Void GetScrollBar()
    // Offset: 0x1773064
    void GetScrollBar();
    // public System.Boolean UseX()
    // Offset: 0x1773270
    bool UseX();
    // public System.Int32 BarSize()
    // Offset: 0x1773278
    int BarSize();
    // public System.Int32 TabPosition()
    // Offset: 0x1773280
    int TabPosition();
    // public System.Single TabProgress()
    // Offset: 0x1773288
    float TabProgress();
    // public System.Void ScrollBy(System.Int32 pixels)
    // Offset: 0x1773314
    void ScrollBy(int pixels);
    // public System.Void ScrollBy(System.Int32 pixels, System.Boolean fromCurrent, System.Boolean scrollTarget)
    // Offset: 0x177332C
    void ScrollBy(int pixels, bool fromCurrent, bool scrollTarget);
    // public System.Void Clicked(PowerUI.UIEvent clickEvent)
    // Offset: 0x1773330
    void Clicked(::PowerUI::UIEvent* clickEvent);
    // public System.Void ApplyTabSize(System.Single percentSize)
    // Offset: 0x1773334
    void ApplyTabSize(float percentSize);
    // public System.Void ScrollTo(System.Single percent, System.Boolean scrollTarget)
    // Offset: 0x17733D4
    void ScrollTo(float percent, bool scrollTarget);
    // public System.Void ScrollTo(System.Int32 location, System.Boolean scrollTarget)
    // Offset: 0x1773430
    void ScrollTo(int location, bool scrollTarget);
    // protected System.Void SetTabSize(System.Int32 newSize)
    // Offset: 0x1773434
    void SetTabSize(int newSize);
    // public System.Int32 TabSize()
    // Offset: 0x1773438
    int TabSize();
    // public override System.Boolean SelfClosing()
    // Offset: 0x1772FC4
    // Implemented from: Wrench.TagHandler
    // Base method: System.Boolean TagHandler::SelfClosing()
    bool SelfClosing();
    // public override System.Boolean OnClick(PowerUI.UIEvent clickEvent)
    // Offset: 0x1772FCC
    // Implemented from: PowerUI.HtmlTagHandler
    // Base method: System.Boolean HtmlTagHandler::OnClick(PowerUI.UIEvent clickEvent)
    bool OnClick(::PowerUI::UIEvent* clickEvent);
    // public System.Void .ctor()
    // Offset: 0x1773440
    // Implemented from: PowerUI.HtmlTagHandler
    // Base method: System.Void HtmlTagHandler::.ctor()
    // Base method: System.Void TagHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ScrollTabTag* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ScrollTabTag::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ScrollTabTag*, creationType>()));
    }
  }; // PowerUI.ScrollTabTag
  #pragma pack(pop)
  static check_size<sizeof(ScrollTabTag), 56 + sizeof(::PowerUI::InputTag*)> __PowerUI_ScrollTabTagSizeCheck;
  static_assert(sizeof(ScrollTabTag) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::SizeBefore
// Il2CppName: SizeBefore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PowerUI::ScrollTabTag::*)()>(&PowerUI::ScrollTabTag::SizeBefore)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "SizeBefore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::SizeAfter
// Il2CppName: SizeAfter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PowerUI::ScrollTabTag::*)()>(&PowerUI::ScrollTabTag::SizeAfter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "SizeAfter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::StyleSize
// Il2CppName: StyleSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PowerUI::ScrollTabTag::*)()>(&PowerUI::ScrollTabTag::StyleSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "StyleSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::ElementScrolled
// Il2CppName: ElementScrolled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::ScrollTabTag::*)(float)>(&PowerUI::ScrollTabTag::ElementScrolled)> {
  static const MethodInfo* get() {
    static auto* progress = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "ElementScrolled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{progress});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::GetScrollBar
// Il2CppName: GetScrollBar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::ScrollTabTag::*)()>(&PowerUI::ScrollTabTag::GetScrollBar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "GetScrollBar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::UseX
// Il2CppName: UseX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PowerUI::ScrollTabTag::*)()>(&PowerUI::ScrollTabTag::UseX)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "UseX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::BarSize
// Il2CppName: BarSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PowerUI::ScrollTabTag::*)()>(&PowerUI::ScrollTabTag::BarSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "BarSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::TabPosition
// Il2CppName: TabPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PowerUI::ScrollTabTag::*)()>(&PowerUI::ScrollTabTag::TabPosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "TabPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::TabProgress
// Il2CppName: TabProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (PowerUI::ScrollTabTag::*)()>(&PowerUI::ScrollTabTag::TabProgress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "TabProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::ScrollBy
// Il2CppName: ScrollBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::ScrollTabTag::*)(int)>(&PowerUI::ScrollTabTag::ScrollBy)> {
  static const MethodInfo* get() {
    static auto* pixels = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "ScrollBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pixels});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::ScrollBy
// Il2CppName: ScrollBy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::ScrollTabTag::*)(int, bool, bool)>(&PowerUI::ScrollTabTag::ScrollBy)> {
  static const MethodInfo* get() {
    static auto* pixels = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fromCurrent = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* scrollTarget = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "ScrollBy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pixels, fromCurrent, scrollTarget});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::Clicked
// Il2CppName: Clicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::ScrollTabTag::*)(::PowerUI::UIEvent*)>(&PowerUI::ScrollTabTag::Clicked)> {
  static const MethodInfo* get() {
    static auto* clickEvent = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "Clicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clickEvent});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::ApplyTabSize
// Il2CppName: ApplyTabSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::ScrollTabTag::*)(float)>(&PowerUI::ScrollTabTag::ApplyTabSize)> {
  static const MethodInfo* get() {
    static auto* percentSize = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "ApplyTabSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{percentSize});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::ScrollTo
// Il2CppName: ScrollTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::ScrollTabTag::*)(float, bool)>(&PowerUI::ScrollTabTag::ScrollTo)> {
  static const MethodInfo* get() {
    static auto* percent = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* scrollTarget = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "ScrollTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{percent, scrollTarget});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::ScrollTo
// Il2CppName: ScrollTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::ScrollTabTag::*)(int, bool)>(&PowerUI::ScrollTabTag::ScrollTo)> {
  static const MethodInfo* get() {
    static auto* location = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* scrollTarget = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "ScrollTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{location, scrollTarget});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::SetTabSize
// Il2CppName: SetTabSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::ScrollTabTag::*)(int)>(&PowerUI::ScrollTabTag::SetTabSize)> {
  static const MethodInfo* get() {
    static auto* newSize = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "SetTabSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newSize});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::TabSize
// Il2CppName: TabSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PowerUI::ScrollTabTag::*)()>(&PowerUI::ScrollTabTag::TabSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "TabSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::SelfClosing
// Il2CppName: SelfClosing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PowerUI::ScrollTabTag::*)()>(&PowerUI::ScrollTabTag::SelfClosing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "SelfClosing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::OnClick
// Il2CppName: OnClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PowerUI::ScrollTabTag::*)(::PowerUI::UIEvent*)>(&PowerUI::ScrollTabTag::OnClick)> {
  static const MethodInfo* get() {
    static auto* clickEvent = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ScrollTabTag*), "OnClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clickEvent});
  }
};
// Writing MetadataGetter for method: PowerUI::ScrollTabTag::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
