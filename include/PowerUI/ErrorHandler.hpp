// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: ErrorInfo
  class ErrorInfo;
  // Forward declaring type: Document
  class Document;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: ErrorHandler
  class ErrorHandler;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::ErrorHandler);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::ErrorHandler*, "PowerUI", "ErrorHandler");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.ErrorHandler
  // [TokenAttribute] Offset: FFFFFFFF
  class ErrorHandler : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x1A425E8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ErrorHandler* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ErrorHandler::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ErrorHandler*, creationType>(object, method)));
    }
    // public System.Void Invoke(PowerUI.ErrorInfo error, PowerUI.Document document)
    // Offset: 0x1A425F8
    void Invoke(::PowerUI::ErrorInfo* error, ::PowerUI::Document* document);
    // public System.IAsyncResult BeginInvoke(PowerUI.ErrorInfo error, PowerUI.Document document, System.AsyncCallback callback, System.Object object)
    // Offset: 0x1A42D78
    ::System::IAsyncResult* BeginInvoke(::PowerUI::ErrorInfo* error, ::PowerUI::Document* document, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Void EndInvoke(System.IAsyncResult result)
    // Offset: 0x1A42DA8
    void EndInvoke(::System::IAsyncResult* result);
  }; // PowerUI.ErrorHandler
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::ErrorHandler::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: PowerUI::ErrorHandler::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::ErrorHandler::*)(::PowerUI::ErrorInfo*, ::PowerUI::Document*)>(&PowerUI::ErrorHandler::Invoke)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PowerUI", "ErrorInfo")->byval_arg;
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ErrorHandler*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error, document});
  }
};
// Writing MetadataGetter for method: PowerUI::ErrorHandler::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (PowerUI::ErrorHandler::*)(::PowerUI::ErrorInfo*, ::PowerUI::Document*, ::System::AsyncCallback*, ::Il2CppObject*)>(&PowerUI::ErrorHandler::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("PowerUI", "ErrorInfo")->byval_arg;
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ErrorHandler*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error, document, callback, object});
  }
};
// Writing MetadataGetter for method: PowerUI::ErrorHandler::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::ErrorHandler::*)(::System::IAsyncResult*)>(&PowerUI::ErrorHandler::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ErrorHandler*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
