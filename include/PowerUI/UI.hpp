// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: PowerUI.CameraMode
#include "PowerUI/CameraMode.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Element
  class Element;
  // Forward declaring type: Document
  class Document;
  // Forward declaring type: Renderman
  class Renderman;
  // Forward declaring type: WorldUI
  class WorldUI;
  // Forward declaring type: CameraPool
  class CameraPool;
  // Forward declaring type: StandardUpdater
  class StandardUpdater;
  // Forward declaring type: CameraCreated
  class CameraCreated;
  // Forward declaring type: GetSecurityDomain
  class GetSecurityDomain;
  // Forward declaring type: ResolutionInfo
  class ResolutionInfo;
  // Forward declaring type: RenderMode
  struct RenderMode;
  // Forward declaring type: InputMode
  struct InputMode;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: FilterMode
  struct FilterMode;
}
// Forward declaring namespace: Wrench
namespace Wrench {
  // Forward declaring type: FullVariableSet
  class FullVariableSet;
  // Forward declaring type: UnityLanguageLoader
  class UnityLanguageLoader;
  // Forward declaring type: GroupResolve
  class GroupResolve;
  // Forward declaring type: LanguageSet
  class LanguageSet;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: Nitro
namespace Nitro {
  // Forward declaring type: NitroDomainManager
  class NitroDomainManager;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: UI
  class UI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::UI);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::UI*, "PowerUI", "UI");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.UI
  // [TokenAttribute] Offset: FFFFFFFF
  class UI : public ::Il2CppObject {
    public:
    // static field const value: static public System.Int32 DefaultRate
    static constexpr const int DefaultRate = 40;
    // Get static field: static public System.Int32 DefaultRate
    static int _get_DefaultRate();
    // Set static field: static public System.Int32 DefaultRate
    static void _set_DefaultRate(int value);
    // Get static field: static public System.Int32 Layer
    static int _get_Layer();
    // Set static field: static public System.Int32 Layer
    static void _set_Layer(int value);
    // Get static field: static private System.Boolean Started
    static bool _get_Started();
    // Set static field: static private System.Boolean Started
    static void _set_Started(bool value);
    // Get static field: static public PowerUI.Element content
    static ::PowerUI::Element* _get_content();
    // Set static field: static public PowerUI.Element content
    static void _set_content(::PowerUI::Element* value);
    // Get static field: static public System.Single RedrawRate
    static float _get_RedrawRate();
    // Set static field: static public System.Single RedrawRate
    static void _set_RedrawRate(float value);
    // Get static field: static public UnityEngine.Camera GUICamera
    static ::UnityEngine::Camera* _get_GUICamera();
    // Set static field: static public UnityEngine.Camera GUICamera
    static void _set_GUICamera(::UnityEngine::Camera* value);
    // Get static field: static public PowerUI.Document document
    static ::PowerUI::Document* _get_document();
    // Set static field: static public PowerUI.Document document
    static void _set_document(::PowerUI::Document* value);
    // Get static field: static public System.Boolean HandledInput
    static bool _get_HandledInput();
    // Set static field: static public System.Boolean HandledInput
    static void _set_HandledInput(bool value);
    // Get static field: static private System.Single FieldOfView
    static float _get_FieldOfView();
    // Set static field: static private System.Single FieldOfView
    static void _set_FieldOfView(float value);
    // Get static field: static private System.Single RedrawTimer
    static float _get_RedrawTimer();
    // Set static field: static private System.Single RedrawTimer
    static void _set_RedrawTimer(float value);
    // Get static field: static public UnityEngine.GameObject GUINode
    static ::UnityEngine::GameObject* _get_GUINode();
    // Set static field: static public UnityEngine.GameObject GUINode
    static void _set_GUINode(::UnityEngine::GameObject* value);
    // Get static field: static private PowerUI.Renderman Renderer
    static ::PowerUI::Renderman* _get_Renderer();
    // Set static field: static private PowerUI.Renderman Renderer
    static void _set_Renderer(::PowerUI::Renderman* value);
    // Get static field: static public System.Single CameraDistance
    static float _get_CameraDistance();
    // Set static field: static public System.Single CameraDistance
    static void _set_CameraDistance(float value);
    // Get static field: static public UnityEngine.GameObject CameraNode
    static ::UnityEngine::GameObject* _get_CameraNode();
    // Set static field: static public UnityEngine.GameObject CameraNode
    static void _set_CameraNode(::UnityEngine::GameObject* value);
    // Get static field: static public UnityEngine.Transform CameraTransform
    static ::UnityEngine::Transform* _get_CameraTransform();
    // Set static field: static public UnityEngine.Transform CameraTransform
    static void _set_CameraTransform(::UnityEngine::Transform* value);
    // Get static field: static public Wrench.FullVariableSet Variables
    static ::Wrench::FullVariableSet* _get_Variables();
    // Set static field: static public Wrench.FullVariableSet Variables
    static void _set_Variables(::Wrench::FullVariableSet* value);
    // Get static field: static public PowerUI.WorldUI LastWorldUI
    static ::PowerUI::WorldUI* _get_LastWorldUI();
    // Set static field: static public PowerUI.WorldUI LastWorldUI
    static void _set_LastWorldUI(::PowerUI::WorldUI* value);
    // Get static field: static public PowerUI.WorldUI FirstWorldUI
    static ::PowerUI::WorldUI* _get_FirstWorldUI();
    // Set static field: static public PowerUI.WorldUI FirstWorldUI
    static void _set_FirstWorldUI(::PowerUI::WorldUI* value);
    // Get static field: static public System.Int32 CameraDepth
    static int _get_CameraDepth();
    // Set static field: static public System.Int32 CameraDepth
    static void _set_CameraDepth(int value);
    // Get static field: static public PowerUI.CameraPool MainCameraPool
    static ::PowerUI::CameraPool* _get_MainCameraPool();
    // Set static field: static public PowerUI.CameraPool MainCameraPool
    static void _set_MainCameraPool(::PowerUI::CameraPool* value);
    // Get static field: static private PowerUI.StandardUpdater GlobalUpdater
    static ::PowerUI::StandardUpdater* _get_GlobalUpdater();
    // Set static field: static private PowerUI.StandardUpdater GlobalUpdater
    static void _set_GlobalUpdater(::PowerUI::StandardUpdater* value);
    // Get static field: static public System.Type BaseCodeType
    static ::System::Type* _get_BaseCodeType();
    // Set static field: static public System.Type BaseCodeType
    static void _set_BaseCodeType(::System::Type* value);
    // [CompilerGeneratedAttribute] Offset: 0xADEE14
    // Get static field: static private PowerUI.CameraCreated OnCameraCreated
    static ::PowerUI::CameraCreated* _get_OnCameraCreated();
    // Set static field: static private PowerUI.CameraCreated OnCameraCreated
    static void _set_OnCameraCreated(::PowerUI::CameraCreated* value);
    // Get static field: static private Wrench.UnityLanguageLoader LanguageLoader
    static ::Wrench::UnityLanguageLoader* _get_LanguageLoader();
    // Set static field: static private Wrench.UnityLanguageLoader LanguageLoader
    static void _set_LanguageLoader(::Wrench::UnityLanguageLoader* value);
    // Get static field: static public PowerUI.GetSecurityDomain OnGetSecurityDomain
    static ::PowerUI::GetSecurityDomain* _get_OnGetSecurityDomain();
    // Set static field: static public PowerUI.GetSecurityDomain OnGetSecurityDomain
    static void _set_OnGetSecurityDomain(::PowerUI::GetSecurityDomain* value);
    // Get static field: static private PowerUI.CameraMode CurrentCameraMode
    static ::PowerUI::CameraMode _get_CurrentCameraMode();
    // Set static field: static private PowerUI.CameraMode CurrentCameraMode
    static void _set_CurrentCameraMode(::PowerUI::CameraMode value);
    // [ObsoleteAttribute] Offset: 0xADEE24
    // Get static field: static public System.Int32 AtlasSize
    static int _get_AtlasSize();
    // Set static field: static public System.Int32 AtlasSize
    static void _set_AtlasSize(int value);
    // static public System.Void add_OnCameraCreated(PowerUI.CameraCreated value)
    // Offset: 0x177B5D8
    static void add_OnCameraCreated(::PowerUI::CameraCreated* value);
    // static public System.Void remove_OnCameraCreated(PowerUI.CameraCreated value)
    // Offset: 0x177B708
    static void remove_OnCameraCreated(::PowerUI::CameraCreated* value);
    // static public System.String LoadHTML(System.String resource)
    // Offset: 0x177B838
    static ::StringW LoadHTML(::StringW resource);
    // static public System.Void CameraGotCreated(UnityEngine.Camera camera)
    // Offset: 0x177B9FC
    static void CameraGotCreated(::UnityEngine::Camera* camera);
    // static public System.Void Start()
    // Offset: 0x177BAD0
    static void Start();
    // static public System.Void Start(System.Boolean nitroAot)
    // Offset: 0x177BB30
    static void Start(bool nitroAot);
    // static public System.Void HideFromCamera(UnityEngine.Camera camera)
    // Offset: 0x177CC8C
    static void HideFromCamera(::UnityEngine::Camera* camera);
    // static public PowerUI.ResolutionInfo get_Resolution()
    // Offset: 0x177CD54
    static ::PowerUI::ResolutionInfo* get_Resolution();
    // static public System.Void set_Resolution(PowerUI.ResolutionInfo value)
    // Offset: 0x177CDB0
    static void set_Resolution(::PowerUI::ResolutionInfo* value);
    // static public PowerUI.CameraMode get_CameraMode()
    // Offset: 0x177CE14
    static ::PowerUI::CameraMode get_CameraMode();
    // static public System.Void set_CameraMode(PowerUI.CameraMode value)
    // Offset: 0x177CE7C
    static void set_CameraMode(::PowerUI::CameraMode value);
    // static public PowerUI.RenderMode get_RenderMode()
    // Offset: 0x177CFD0
    static ::PowerUI::RenderMode get_RenderMode();
    // static public System.Void set_RenderMode(PowerUI.RenderMode value)
    // Offset: 0x177D084
    static void set_RenderMode(::PowerUI::RenderMode value);
    // static public System.Void SetDepthResolution(System.Single gaps)
    // Offset: 0x177D144
    static void SetDepthResolution(float gaps);
    // static public PowerUI.Renderman GetRenderer()
    // Offset: 0x177D1C8
    static ::PowerUI::Renderman* GetRenderer();
    // static public PowerUI.InputMode get_InputMode()
    // Offset: 0x177D230
    static ::PowerUI::InputMode get_InputMode();
    // static public System.Void set_InputMode(PowerUI.InputMode value)
    // Offset: 0x177D298
    static void set_InputMode(::PowerUI::InputMode value);
    // static public PowerUI.InputMode get_WorldInputMode()
    // Offset: 0x177D378
    static ::PowerUI::InputMode get_WorldInputMode();
    // static public System.Void set_WorldInputMode(PowerUI.InputMode value)
    // Offset: 0x177D3E0
    static void set_WorldInputMode(::PowerUI::InputMode value);
    // static public UnityEngine.FilterMode get_FilterMode()
    // Offset: 0x177D4BC
    static ::UnityEngine::FilterMode get_FilterMode();
    // static public System.Void set_FilterMode(UnityEngine.FilterMode value)
    // Offset: 0x177D574
    static void set_FilterMode(::UnityEngine::FilterMode value);
    // static public UnityEngine.FilterMode get_TextFilterMode()
    // Offset: 0x177D634
    static ::UnityEngine::FilterMode get_TextFilterMode();
    // static public System.Void set_TextFilterMode(UnityEngine.FilterMode value)
    // Offset: 0x177D6E8
    static void set_TextFilterMode(::UnityEngine::FilterMode value);
    // static public System.Void OnLogMessage(System.String message)
    // Offset: 0x177D7A4
    static void OnLogMessage(::StringW message);
    // static public System.Void SetGroupResolver(Wrench.GroupResolve resolver)
    // Offset: 0x177D80C
    static void SetGroupResolver(::Wrench::GroupResolve* resolver);
    // static public System.Void SetCameraDistance(System.Single distance)
    // Offset: 0x177C990
    static void SetCameraDistance(float distance);
    // static public System.Single GetCameraDistance()
    // Offset: 0x177D890
    static float GetCameraDistance();
    // static public System.Void SetFieldOfView(System.Single fov)
    // Offset: 0x177CAE0
    static void SetFieldOfView(float fov);
    // static public System.Single GetFieldOfView()
    // Offset: 0x177D8F8
    static float GetFieldOfView();
    // static public System.Void ClearAll()
    // Offset: 0x177D960
    static void ClearAll();
    // static public System.Void Destroy()
    // Offset: 0x17753D4
    static void Destroy();
    // static private Wrench.UnityLanguageLoader GetLanguageLoader()
    // Offset: 0x177DC78
    static ::Wrench::UnityLanguageLoader* GetLanguageLoader();
    // static public System.Void OnLanguageChange(System.String code)
    // Offset: 0x177C82C
    static void OnLanguageChange(::StringW code);
    // static public System.Void AddTextGroup(System.String text, System.String groupName)
    // Offset: 0x177DE38
    static void AddTextGroup(::StringW text, ::StringW groupName);
    // static private System.Void UpdateTextDirection()
    // Offset: 0x177CB78
    static void UpdateTextDirection();
    // static private System.Void UpdateTextDirection(System.Boolean goesLeftwards, PowerUI.Document htmlDocument)
    // Offset: 0x177DF40
    static void UpdateTextDirection(bool goesLeftwards, ::PowerUI::Document* htmlDocument);
    // static public System.Void OnVariableChange(System.String code)
    // Offset: 0x177E030
    static void OnVariableChange(::StringW code);
    // static private System.Void ResolveVariable(PowerUI.Document htmlDocument, System.String code)
    // Offset: 0x177E168
    static void ResolveVariable(::PowerUI::Document* htmlDocument, ::StringW code);
    // static private System.Void ResolveAllVariables()
    // Offset: 0x177DD50
    static void ResolveAllVariables();
    // static private System.Void ResolveAllVariables(PowerUI.Document htmlDocument)
    // Offset: 0x177E184
    static void ResolveAllVariables(::PowerUI::Document* htmlDocument);
    // static public System.String get_Language()
    // Offset: 0x177DEE0
    static ::StringW get_Language();
    // static public System.Void set_Language(System.String value)
    // Offset: 0x177E1A0
    static void set_Language(::StringW value);
    // static public System.String get_Gender()
    // Offset: 0x177E208
    static ::StringW get_Gender();
    // static public System.Void set_Gender(System.String value)
    // Offset: 0x177E2CC
    static void set_Gender(::StringW value);
    // static public Wrench.LanguageSet[] GetAllLanguages()
    // Offset: 0x177E408
    static ::ArrayW<::Wrench::LanguageSet*> GetAllLanguages();
    // static public System.Void RequestLayout()
    // Offset: 0x177E47C
    static void RequestLayout();
    // static public System.Void SetRate(System.Int32 fps)
    // Offset: 0x177C8E4
    static void SetRate(int fps);
    // static public System.Boolean MouseOver(System.Single x, System.Single y)
    // Offset: 0x177E51C
    static bool MouseOver(float x, float y);
    // static public System.Boolean HandleInput()
    // Offset: 0x177E594
    static bool HandleInput();
    // static public System.Boolean InternalHandleInput()
    // Offset: 0x177E5FC
    static bool InternalHandleInput();
    // static public Nitro.NitroDomainManager get_DefaultSecurityDomain()
    // Offset: 0x177E874
    static ::Nitro::NitroDomainManager* get_DefaultSecurityDomain();
    // static public System.Boolean get_Log()
    // Offset: 0x177E944
    static bool get_Log();
    // static public System.Void set_Log(System.Boolean value)
    // Offset: 0x177E9AC
    static void set_Log(bool value);
    // static public System.String get_Html()
    // Offset: 0x177EA1C
    static ::StringW get_Html();
    // static public System.Void set_Html(System.String value)
    // Offset: 0x177EAD8
    static void set_Html(::StringW value);
    // static public System.String get_innerHTML()
    // Offset: 0x177EB9C
    static ::StringW get_innerHTML();
    // static public System.Void set_innerHTML(System.String value)
    // Offset: 0x177EBF8
    static void set_innerHTML(::StringW value);
    // static public System.Void RedrawNextUpdate()
    // Offset: 0x177EC5C
    static void RedrawNextUpdate();
    // static public System.Void RedrawNow()
    // Offset: 0x177ECC8
    static void RedrawNow();
    // static public System.Void RequestFullLayout()
    // Offset: 0x177ED28
    static void RequestFullLayout();
    // static public System.Void InternalUpdate()
    // Offset: 0x1774F08
    static void InternalUpdate();
    // static private System.Void .cctor()
    // Offset: 0x177EE30
    static void _cctor();
  }; // PowerUI.UI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::UI::add_OnCameraCreated
// Il2CppName: add_OnCameraCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::CameraCreated*)>(&PowerUI::UI::add_OnCameraCreated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("PowerUI", "CameraCreated")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "add_OnCameraCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::remove_OnCameraCreated
// Il2CppName: remove_OnCameraCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::CameraCreated*)>(&PowerUI::UI::remove_OnCameraCreated)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("PowerUI", "CameraCreated")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "remove_OnCameraCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::LoadHTML
// Il2CppName: LoadHTML
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&PowerUI::UI::LoadHTML)> {
  static const MethodInfo* get() {
    static auto* resource = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "LoadHTML", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resource});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::CameraGotCreated
// Il2CppName: CameraGotCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*)>(&PowerUI::UI::CameraGotCreated)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "CameraGotCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::UI::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&PowerUI::UI::Start)> {
  static const MethodInfo* get() {
    static auto* nitroAot = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nitroAot});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::HideFromCamera
// Il2CppName: HideFromCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Camera*)>(&PowerUI::UI::HideFromCamera)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("UnityEngine", "Camera")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "HideFromCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_Resolution
// Il2CppName: get_Resolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::ResolutionInfo* (*)()>(&PowerUI::UI::get_Resolution)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_Resolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_Resolution
// Il2CppName: set_Resolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::ResolutionInfo*)>(&PowerUI::UI::set_Resolution)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("PowerUI", "ResolutionInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_Resolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_CameraMode
// Il2CppName: get_CameraMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::CameraMode (*)()>(&PowerUI::UI::get_CameraMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_CameraMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_CameraMode
// Il2CppName: set_CameraMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::CameraMode)>(&PowerUI::UI::set_CameraMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("PowerUI", "CameraMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_CameraMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_RenderMode
// Il2CppName: get_RenderMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::RenderMode (*)()>(&PowerUI::UI::get_RenderMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_RenderMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_RenderMode
// Il2CppName: set_RenderMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::RenderMode)>(&PowerUI::UI::set_RenderMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("PowerUI", "RenderMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_RenderMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::SetDepthResolution
// Il2CppName: SetDepthResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float)>(&PowerUI::UI::SetDepthResolution)> {
  static const MethodInfo* get() {
    static auto* gaps = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "SetDepthResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gaps});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::GetRenderer
// Il2CppName: GetRenderer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::Renderman* (*)()>(&PowerUI::UI::GetRenderer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "GetRenderer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_InputMode
// Il2CppName: get_InputMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::InputMode (*)()>(&PowerUI::UI::get_InputMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_InputMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_InputMode
// Il2CppName: set_InputMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::InputMode)>(&PowerUI::UI::set_InputMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("PowerUI", "InputMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_InputMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_WorldInputMode
// Il2CppName: get_WorldInputMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::InputMode (*)()>(&PowerUI::UI::get_WorldInputMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_WorldInputMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_WorldInputMode
// Il2CppName: set_WorldInputMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::InputMode)>(&PowerUI::UI::set_WorldInputMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("PowerUI", "InputMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_WorldInputMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_FilterMode
// Il2CppName: get_FilterMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::FilterMode (*)()>(&PowerUI::UI::get_FilterMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_FilterMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_FilterMode
// Il2CppName: set_FilterMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::FilterMode)>(&PowerUI::UI::set_FilterMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "FilterMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_FilterMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_TextFilterMode
// Il2CppName: get_TextFilterMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::FilterMode (*)()>(&PowerUI::UI::get_TextFilterMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_TextFilterMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_TextFilterMode
// Il2CppName: set_TextFilterMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::FilterMode)>(&PowerUI::UI::set_TextFilterMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "FilterMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_TextFilterMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::OnLogMessage
// Il2CppName: OnLogMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&PowerUI::UI::OnLogMessage)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "OnLogMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::SetGroupResolver
// Il2CppName: SetGroupResolver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Wrench::GroupResolve*)>(&PowerUI::UI::SetGroupResolver)> {
  static const MethodInfo* get() {
    static auto* resolver = &::il2cpp_utils::GetClassFromName("Wrench", "GroupResolve")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "SetGroupResolver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{resolver});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::SetCameraDistance
// Il2CppName: SetCameraDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float)>(&PowerUI::UI::SetCameraDistance)> {
  static const MethodInfo* get() {
    static auto* distance = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "SetCameraDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{distance});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::GetCameraDistance
// Il2CppName: GetCameraDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&PowerUI::UI::GetCameraDistance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "GetCameraDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::SetFieldOfView
// Il2CppName: SetFieldOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float)>(&PowerUI::UI::SetFieldOfView)> {
  static const MethodInfo* get() {
    static auto* fov = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "SetFieldOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fov});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::GetFieldOfView
// Il2CppName: GetFieldOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&PowerUI::UI::GetFieldOfView)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "GetFieldOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::ClearAll
// Il2CppName: ClearAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::UI::ClearAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "ClearAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::Destroy
// Il2CppName: Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::UI::Destroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::GetLanguageLoader
// Il2CppName: GetLanguageLoader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Wrench::UnityLanguageLoader* (*)()>(&PowerUI::UI::GetLanguageLoader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "GetLanguageLoader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::OnLanguageChange
// Il2CppName: OnLanguageChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&PowerUI::UI::OnLanguageChange)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "OnLanguageChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::AddTextGroup
// Il2CppName: AddTextGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW)>(&PowerUI::UI::AddTextGroup)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "AddTextGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, groupName});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::UpdateTextDirection
// Il2CppName: UpdateTextDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::UI::UpdateTextDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "UpdateTextDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::UpdateTextDirection
// Il2CppName: UpdateTextDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool, ::PowerUI::Document*)>(&PowerUI::UI::UpdateTextDirection)> {
  static const MethodInfo* get() {
    static auto* goesLeftwards = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* htmlDocument = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "UpdateTextDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{goesLeftwards, htmlDocument});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::OnVariableChange
// Il2CppName: OnVariableChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&PowerUI::UI::OnVariableChange)> {
  static const MethodInfo* get() {
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "OnVariableChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{code});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::ResolveVariable
// Il2CppName: ResolveVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*, ::StringW)>(&PowerUI::UI::ResolveVariable)> {
  static const MethodInfo* get() {
    static auto* htmlDocument = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    static auto* code = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "ResolveVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{htmlDocument, code});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::ResolveAllVariables
// Il2CppName: ResolveAllVariables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::UI::ResolveAllVariables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "ResolveAllVariables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::ResolveAllVariables
// Il2CppName: ResolveAllVariables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*)>(&PowerUI::UI::ResolveAllVariables)> {
  static const MethodInfo* get() {
    static auto* htmlDocument = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "ResolveAllVariables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{htmlDocument});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_Language
// Il2CppName: get_Language
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&PowerUI::UI::get_Language)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_Language", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_Language
// Il2CppName: set_Language
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&PowerUI::UI::set_Language)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_Language", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_Gender
// Il2CppName: get_Gender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&PowerUI::UI::get_Gender)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_Gender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_Gender
// Il2CppName: set_Gender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&PowerUI::UI::set_Gender)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_Gender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::GetAllLanguages
// Il2CppName: GetAllLanguages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Wrench::LanguageSet*> (*)()>(&PowerUI::UI::GetAllLanguages)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "GetAllLanguages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::RequestLayout
// Il2CppName: RequestLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::UI::RequestLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "RequestLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::SetRate
// Il2CppName: SetRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&PowerUI::UI::SetRate)> {
  static const MethodInfo* get() {
    static auto* fps = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "SetRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fps});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::MouseOver
// Il2CppName: MouseOver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(float, float)>(&PowerUI::UI::MouseOver)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "MouseOver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x, y});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::HandleInput
// Il2CppName: HandleInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PowerUI::UI::HandleInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "HandleInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::InternalHandleInput
// Il2CppName: InternalHandleInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PowerUI::UI::InternalHandleInput)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "InternalHandleInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_DefaultSecurityDomain
// Il2CppName: get_DefaultSecurityDomain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Nitro::NitroDomainManager* (*)()>(&PowerUI::UI::get_DefaultSecurityDomain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_DefaultSecurityDomain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_Log
// Il2CppName: get_Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PowerUI::UI::get_Log)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_Log
// Il2CppName: set_Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&PowerUI::UI::set_Log)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_Html
// Il2CppName: get_Html
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&PowerUI::UI::get_Html)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_Html", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_Html
// Il2CppName: set_Html
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&PowerUI::UI::set_Html)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_Html", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::get_innerHTML
// Il2CppName: get_innerHTML
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&PowerUI::UI::get_innerHTML)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "get_innerHTML", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::set_innerHTML
// Il2CppName: set_innerHTML
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&PowerUI::UI::set_innerHTML)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "set_innerHTML", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::RedrawNextUpdate
// Il2CppName: RedrawNextUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::UI::RedrawNextUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "RedrawNextUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::RedrawNow
// Il2CppName: RedrawNow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::UI::RedrawNow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "RedrawNow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::RequestFullLayout
// Il2CppName: RequestFullLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::UI::RequestFullLayout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "RequestFullLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::InternalUpdate
// Il2CppName: InternalUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::UI::InternalUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), "InternalUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::UI::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::UI::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::UI*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
