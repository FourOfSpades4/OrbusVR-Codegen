// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PowerUI.ErrorInfo
#include "PowerUI/ErrorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityHttp
namespace UnityHttp {
  // Forward declaring type: HttpRequest
  class HttpRequest;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: HttpErrorInfo
  class HttpErrorInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::HttpErrorInfo);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::HttpErrorInfo*, "PowerUI", "HttpErrorInfo");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.HttpErrorInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class HttpErrorInfo : public ::PowerUI::ErrorInfo {
    public:
    public:
    // public UnityHttp.HttpRequest Request
    // Size: 0x8
    // Offset: 0x20
    ::UnityHttp::HttpRequest* Request;
    // Field size check
    static_assert(sizeof(::UnityHttp::HttpRequest*) == 0x8);
    public:
    // Creating conversion operator: operator ::UnityHttp::HttpRequest*
    constexpr operator ::UnityHttp::HttpRequest*() const noexcept {
      return Request;
    }
    // Get instance field reference: public UnityHttp.HttpRequest Request
    [[deprecated("Use field access instead!")]] ::UnityHttp::HttpRequest*& dyn_Request();
    // public System.Void .ctor(UnityHttp.HttpRequest request)
    // Offset: 0x1A4A3E8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HttpErrorInfo* New_ctor(::UnityHttp::HttpRequest* request) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::HttpErrorInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HttpErrorInfo*, creationType>(request)));
    }
  }; // PowerUI.HttpErrorInfo
  #pragma pack(pop)
  static check_size<sizeof(HttpErrorInfo), 32 + sizeof(::UnityHttp::HttpRequest*)> __PowerUI_HttpErrorInfoSizeCheck;
  static_assert(sizeof(HttpErrorInfo) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::HttpErrorInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
