// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: ContentType
  class ContentType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::ContentType);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::ContentType*, "PowerUI", "ContentType");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.ContentType
  // [TokenAttribute] Offset: FFFFFFFF
  class ContentType : public ::Il2CppObject {
    public:
    // static public System.Boolean IsVideo(System.String type)
    // Offset: 0xEC0508
    static bool IsVideo(::StringW type);
  }; // PowerUI.ContentType
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::ContentType::IsVideo
// Il2CppName: IsVideo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&PowerUI::ContentType::IsVideo)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ContentType*), "IsVideo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
