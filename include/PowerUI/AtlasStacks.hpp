// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
}
// Forward declaring namespace: Blaze
namespace Blaze {
  // Forward declaring type: AtlasStack
  class AtlasStack;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: AtlasStacks
  class AtlasStacks;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::AtlasStacks);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::AtlasStacks*, "PowerUI", "AtlasStacks");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.AtlasStacks
  // [TokenAttribute] Offset: FFFFFFFF
  class AtlasStacks : public ::Il2CppObject {
    public:
    // Get static field: static private System.Int32 RawTextSpacing
    static int _get_RawTextSpacing();
    // Set static field: static private System.Int32 RawTextSpacing
    static void _set_RawTextSpacing(int value);
    // Get static field: static private System.Int32 RawGraphicsSpacing
    static int _get_RawGraphicsSpacing();
    // Set static field: static private System.Int32 RawGraphicsSpacing
    static void _set_RawGraphicsSpacing(int value);
    // static field const value: static private System.Int32 OptimiseFrequency
    static constexpr const int OptimiseFrequency = 20;
    // Get static field: static private System.Int32 OptimiseFrequency
    static int _get_OptimiseFrequency();
    // Set static field: static private System.Int32 OptimiseFrequency
    static void _set_OptimiseFrequency(int value);
    // Get static field: static private System.Int32 OptimiseCount
    static int _get_OptimiseCount();
    // Set static field: static private System.Int32 OptimiseCount
    static void _set_OptimiseCount(int value);
    // Get static field: static private System.Int32 OptimiseFrameCount
    static int _get_OptimiseFrameCount();
    // Set static field: static private System.Int32 OptimiseFrameCount
    static void _set_OptimiseFrameCount(int value);
    // Get static field: static private System.Int32 RawMaxSize
    static int _get_RawMaxSize();
    // Set static field: static private System.Int32 RawMaxSize
    static void _set_RawMaxSize(int value);
    // Get static field: static public System.Int32 InitialSize
    static int _get_InitialSize();
    // Set static field: static public System.Int32 InitialSize
    static void _set_InitialSize(int value);
    // Get static field: static public UnityEngine.Material GlobalMaterial
    static ::UnityEngine::Material* _get_GlobalMaterial();
    // Set static field: static public UnityEngine.Material GlobalMaterial
    static void _set_GlobalMaterial(::UnityEngine::Material* value);
    // Get static field: static public Blaze.AtlasStack Text
    static ::Blaze::AtlasStack* _get_Text();
    // Set static field: static public Blaze.AtlasStack Text
    static void _set_Text(::Blaze::AtlasStack* value);
    // Get static field: static public Blaze.AtlasStack Graphics
    static ::Blaze::AtlasStack* _get_Graphics();
    // Set static field: static public Blaze.AtlasStack Graphics
    static void _set_Graphics(::Blaze::AtlasStack* value);
    // static public System.Int32 get_TextSpacing()
    // Offset: 0xEB80B0
    static int get_TextSpacing();
    // static public System.Void set_TextSpacing(System.Int32 value)
    // Offset: 0xEB8170
    static void set_TextSpacing(int value);
    // static public System.Int32 get_GraphicsSpacing()
    // Offset: 0xEB8234
    static int get_GraphicsSpacing();
    // static public System.Void set_GraphicsSpacing(System.Int32 value)
    // Offset: 0xEB82F8
    static void set_GraphicsSpacing(int value);
    // static public System.Void SetRate(System.Int32 rate)
    // Offset: 0xEB83F4
    static void SetRate(int rate);
    // static public System.Void Start()
    // Offset: 0xEB8468
    static void Start();
    // static public System.Void UpdateGlobal()
    // Offset: 0xEB87D0
    static void UpdateGlobal();
    // static public System.Void Update()
    // Offset: 0xEB89A0
    static void Update();
    // static public System.Void Optimise()
    // Offset: 0xEB8A4C
    static void Optimise();
    // static public System.Void Clear()
    // Offset: 0xEB8B2C
    static void Clear();
    // static public System.Void Flush()
    // Offset: 0xEB8BD0
    static void Flush();
    // static public System.Int32 get_MaxSize()
    // Offset: 0xEB8C70
    static int get_MaxSize();
    // static public System.Int32 get_AtlasSize()
    // Offset: 0xEB8CD8
    static int get_AtlasSize();
    // static public System.Void set_AtlasSize(System.Int32 value)
    // Offset: 0xEB8D40
    static void set_AtlasSize(int value);
    // static private System.Void .cctor()
    // Offset: 0xEB8DFC
    static void _cctor();
  }; // PowerUI.AtlasStacks
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::AtlasStacks::get_TextSpacing
// Il2CppName: get_TextSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&PowerUI::AtlasStacks::get_TextSpacing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "get_TextSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::set_TextSpacing
// Il2CppName: set_TextSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&PowerUI::AtlasStacks::set_TextSpacing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "set_TextSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::get_GraphicsSpacing
// Il2CppName: get_GraphicsSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&PowerUI::AtlasStacks::get_GraphicsSpacing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "get_GraphicsSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::set_GraphicsSpacing
// Il2CppName: set_GraphicsSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&PowerUI::AtlasStacks::set_GraphicsSpacing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "set_GraphicsSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::SetRate
// Il2CppName: SetRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&PowerUI::AtlasStacks::SetRate)> {
  static const MethodInfo* get() {
    static auto* rate = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "SetRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rate});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::AtlasStacks::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::UpdateGlobal
// Il2CppName: UpdateGlobal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::AtlasStacks::UpdateGlobal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "UpdateGlobal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::AtlasStacks::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::Optimise
// Il2CppName: Optimise
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::AtlasStacks::Optimise)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "Optimise", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::AtlasStacks::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::Flush
// Il2CppName: Flush
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::AtlasStacks::Flush)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "Flush", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::get_MaxSize
// Il2CppName: get_MaxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&PowerUI::AtlasStacks::get_MaxSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "get_MaxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::get_AtlasSize
// Il2CppName: get_AtlasSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&PowerUI::AtlasStacks::get_AtlasSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "get_AtlasSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::set_AtlasSize
// Il2CppName: set_AtlasSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&PowerUI::AtlasStacks::set_AtlasSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), "set_AtlasSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: PowerUI::AtlasStacks::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::AtlasStacks::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::AtlasStacks*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
