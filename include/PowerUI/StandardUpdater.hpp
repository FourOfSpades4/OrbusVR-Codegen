// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: StandardUpdater
  class StandardUpdater;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::StandardUpdater);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::StandardUpdater*, "PowerUI", "StandardUpdater");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.StandardUpdater
  // [TokenAttribute] Offset: FFFFFFFF
  class StandardUpdater : public ::UnityEngine::MonoBehaviour {
    public:
    // public System.Void Update()
    // Offset: 0x1774EAC
    void Update();
    // public System.Void OnDisable()
    // Offset: 0x1775378
    void OnDisable();
    // public System.Void .ctor()
    // Offset: 0x17755D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StandardUpdater* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::StandardUpdater::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StandardUpdater*, creationType>()));
    }
  }; // PowerUI.StandardUpdater
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::StandardUpdater::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::StandardUpdater::*)()>(&PowerUI::StandardUpdater::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::StandardUpdater*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::StandardUpdater::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::StandardUpdater::*)()>(&PowerUI::StandardUpdater::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::StandardUpdater*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::StandardUpdater::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
