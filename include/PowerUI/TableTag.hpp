// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PowerUI.HtmlTagHandler
#include "PowerUI/HtmlTagHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: PowerUI::Css
namespace PowerUI::Css {
  // Forward declaring type: ComputedStyle
  class ComputedStyle;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: TableTag
  class TableTag;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::TableTag);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::TableTag*, "PowerUI", "TableTag");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.TableTag
  // [TokenAttribute] Offset: FFFFFFFF
  class TableTag : public ::PowerUI::HtmlTagHandler {
    public:
    // Writing base type padding for base size: 0x33 to desired offset: 0x34
    char ___base_padding[0x1] = {};
    public:
    // public System.Int32 NoWidthPixels
    // Size: 0x4
    // Offset: 0x34
    int NoWidthPixels;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Collections.Generic.List`1<PowerUI.Css.ComputedStyle> ColumnWidths
    // Size: 0x8
    // Offset: 0x38
    ::System::Collections::Generic::List_1<::PowerUI::Css::ComputedStyle*>* ColumnWidths;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::PowerUI::Css::ComputedStyle*>*) == 0x8);
    public:
    // Get instance field reference: public System.Int32 NoWidthPixels
    [[deprecated("Use field access instead!")]] int& dyn_NoWidthPixels();
    // Get instance field reference: public System.Collections.Generic.List`1<PowerUI.Css.ComputedStyle> ColumnWidths
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PowerUI::Css::ComputedStyle*>*& dyn_ColumnWidths();
    // public override System.String[] GetTags()
    // Offset: 0x1776318
    // Implemented from: Wrench.TagHandler
    // Base method: System.String[] TagHandler::GetTags()
    ::ArrayW<::StringW> GetTags();
    // public override Wrench.TagHandler GetInstance()
    // Offset: 0x17763C8
    // Implemented from: Wrench.TagHandler
    // Base method: Wrench.TagHandler TagHandler::GetInstance()
    ::Wrench::TagHandler* GetInstance();
    // public override System.Void OnChildrenLoaded()
    // Offset: 0x177642C
    // Implemented from: PowerUI.HtmlTagHandler
    // Base method: System.Void HtmlTagHandler::OnChildrenLoaded()
    void OnChildrenLoaded();
    // public override System.Void WidthChanged()
    // Offset: 0x177643C
    // Implemented from: PowerUI.HtmlTagHandler
    // Base method: System.Void HtmlTagHandler::WidthChanged()
    void WidthChanged();
    // public System.Void .ctor()
    // Offset: 0x1776424
    // Implemented from: PowerUI.HtmlTagHandler
    // Base method: System.Void HtmlTagHandler::.ctor()
    // Base method: System.Void TagHandler::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TableTag* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::TableTag::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TableTag*, creationType>()));
    }
  }; // PowerUI.TableTag
  #pragma pack(pop)
  static check_size<sizeof(TableTag), 56 + sizeof(::System::Collections::Generic::List_1<::PowerUI::Css::ComputedStyle*>*)> __PowerUI_TableTagSizeCheck;
  static_assert(sizeof(TableTag) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::TableTag::GetTags
// Il2CppName: GetTags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (PowerUI::TableTag::*)()>(&PowerUI::TableTag::GetTags)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::TableTag*), "GetTags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::TableTag::GetInstance
// Il2CppName: GetInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Wrench::TagHandler* (PowerUI::TableTag::*)()>(&PowerUI::TableTag::GetInstance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::TableTag*), "GetInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::TableTag::OnChildrenLoaded
// Il2CppName: OnChildrenLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::TableTag::*)()>(&PowerUI::TableTag::OnChildrenLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::TableTag*), "OnChildrenLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::TableTag::WidthChanged
// Il2CppName: WidthChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PowerUI::TableTag::*)()>(&PowerUI::TableTag::WidthChanged)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::TableTag*), "WidthChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::TableTag::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
