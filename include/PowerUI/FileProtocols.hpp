// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: FileProtocol
  class FileProtocol;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: FileProtocols
  class FileProtocols;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::FileProtocols);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::FileProtocols*, "PowerUI", "FileProtocols");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.FileProtocols
  // [TokenAttribute] Offset: FFFFFFFF
  class FileProtocols : public ::Il2CppObject {
    public:
    // Get static field: static public System.String UnrecognisedProtocolHandler
    static ::StringW _get_UnrecognisedProtocolHandler();
    // Set static field: static public System.String UnrecognisedProtocolHandler
    static void _set_UnrecognisedProtocolHandler(::StringW value);
    // Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.FileProtocol> Protocols
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::FileProtocol*>* _get_Protocols();
    // Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.FileProtocol> Protocols
    static void _set_Protocols(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::FileProtocol*>* value);
    // static public System.Void Setup()
    // Offset: 0x1A4502C
    static void Setup();
    // static public System.Void Add(PowerUI.FileProtocol protocol)
    // Offset: 0x1A452AC
    static void Add(::PowerUI::FileProtocol* protocol);
    // static public PowerUI.FileProtocol Get(System.String protocol)
    // Offset: 0x1A441A0
    static ::PowerUI::FileProtocol* Get(::StringW protocol);
    // static private System.Void .cctor()
    // Offset: 0x1A453DC
    static void _cctor();
  }; // PowerUI.FileProtocols
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::FileProtocols::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::FileProtocols::Setup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::FileProtocols*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::FileProtocols::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::FileProtocol*)>(&PowerUI::FileProtocols::Add)> {
  static const MethodInfo* get() {
    static auto* protocol = &::il2cpp_utils::GetClassFromName("PowerUI", "FileProtocol")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::FileProtocols*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{protocol});
  }
};
// Writing MetadataGetter for method: PowerUI::FileProtocols::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::FileProtocol* (*)(::StringW)>(&PowerUI::FileProtocols::Get)> {
  static const MethodInfo* get() {
    static auto* protocol = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::FileProtocols*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{protocol});
  }
};
// Writing MetadataGetter for method: PowerUI::FileProtocols::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::FileProtocols::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::FileProtocols*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
