// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: Thread
  class Thread;
}
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Callback
  class Callback;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Callbacks
  class Callbacks;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::Callbacks);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::Callbacks*, "PowerUI", "Callbacks");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.Callbacks
  // [TokenAttribute] Offset: FFFFFFFF
  class Callbacks : public ::Il2CppObject {
    public:
    // Get static field: static public System.Threading.Thread MainThread
    static ::System::Threading::Thread* _get_MainThread();
    // Set static field: static public System.Threading.Thread MainThread
    static void _set_MainThread(::System::Threading::Thread* value);
    // Get static field: static public PowerUI.Callback LastToRun
    static ::PowerUI::Callback* _get_LastToRun();
    // Set static field: static public PowerUI.Callback LastToRun
    static void _set_LastToRun(::PowerUI::Callback* value);
    // Get static field: static public PowerUI.Callback FirstToRun
    static ::PowerUI::Callback* _get_FirstToRun();
    // Set static field: static public PowerUI.Callback FirstToRun
    static void _set_FirstToRun(::PowerUI::Callback* value);
    // static public System.Void Start()
    // Offset: 0xEBB55C
    static void Start();
    // static public System.Void RunAll()
    // Offset: 0xEBB5B4
    static void RunAll();
    // static public System.Void Add(PowerUI.Callback callback)
    // Offset: 0xEBB410
    static void Add(::PowerUI::Callback* callback);
  }; // PowerUI.Callbacks
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::Callbacks::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::Callbacks::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Callbacks*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::Callbacks::RunAll
// Il2CppName: RunAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::Callbacks::RunAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Callbacks*), "RunAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PowerUI::Callbacks::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Callback*)>(&PowerUI::Callbacks::Add)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("PowerUI", "Callback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::Callbacks*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
