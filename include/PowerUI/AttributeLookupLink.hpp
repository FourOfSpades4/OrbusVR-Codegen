// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Element
  class Element;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: AttributeLookupLink
  class AttributeLookupLink;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::AttributeLookupLink);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::AttributeLookupLink*, "PowerUI", "AttributeLookupLink");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.AttributeLookupLink
  // [TokenAttribute] Offset: FFFFFFFF
  class AttributeLookupLink : public ::Il2CppObject {
    public:
    public:
    // public PowerUI.Element Element
    // Size: 0x8
    // Offset: 0x10
    ::PowerUI::Element* Element;
    // Field size check
    static_assert(sizeof(::PowerUI::Element*) == 0x8);
    // public PowerUI.AttributeLookupLink Next
    // Size: 0x8
    // Offset: 0x18
    ::PowerUI::AttributeLookupLink* Next;
    // Field size check
    static_assert(sizeof(::PowerUI::AttributeLookupLink*) == 0x8);
    public:
    // Get instance field reference: public PowerUI.Element Element
    [[deprecated("Use field access instead!")]] ::PowerUI::Element*& dyn_Element();
    // Get instance field reference: public PowerUI.AttributeLookupLink Next
    [[deprecated("Use field access instead!")]] ::PowerUI::AttributeLookupLink*& dyn_Next();
    // public System.Void .ctor(PowerUI.Element element)
    // Offset: 0xEB9070
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AttributeLookupLink* New_ctor(::PowerUI::Element* element) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::AttributeLookupLink::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AttributeLookupLink*, creationType>(element)));
    }
  }; // PowerUI.AttributeLookupLink
  #pragma pack(pop)
  static check_size<sizeof(AttributeLookupLink), 24 + sizeof(::PowerUI::AttributeLookupLink*)> __PowerUI_AttributeLookupLinkSizeCheck;
  static_assert(sizeof(AttributeLookupLink) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::AttributeLookupLink::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
