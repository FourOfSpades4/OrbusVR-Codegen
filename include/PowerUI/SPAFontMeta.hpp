// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: SPAReader
  class SPAReader;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: SPAFontMeta
  class SPAFontMeta;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::SPAFontMeta);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::SPAFontMeta*, "PowerUI", "SPAFontMeta");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.SPAFontMeta
  // [TokenAttribute] Offset: FFFFFFFF
  class SPAFontMeta : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 Ascender
    // Size: 0x4
    // Offset: 0x10
    int Ascender;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 Descender
    // Size: 0x4
    // Offset: 0x14
    int Descender;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Boolean Italic
    // Size: 0x1
    // Offset: 0x18
    bool Italic;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean Oblique
    // Size: 0x1
    // Offset: 0x19
    bool Oblique;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean Regular
    // Size: 0x1
    // Offset: 0x1A
    bool Regular;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: Regular and: Weight
    char __padding4[0x1] = {};
    // public System.Int32 Weight
    // Size: 0x4
    // Offset: 0x1C
    int Weight;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.String FamilyName
    // Size: 0x8
    // Offset: 0x20
    ::StringW FamilyName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.Int32 Ascender
    [[deprecated("Use field access instead!")]] int& dyn_Ascender();
    // Get instance field reference: public System.Int32 Descender
    [[deprecated("Use field access instead!")]] int& dyn_Descender();
    // Get instance field reference: public System.Boolean Italic
    [[deprecated("Use field access instead!")]] bool& dyn_Italic();
    // Get instance field reference: public System.Boolean Oblique
    [[deprecated("Use field access instead!")]] bool& dyn_Oblique();
    // Get instance field reference: public System.Boolean Regular
    [[deprecated("Use field access instead!")]] bool& dyn_Regular();
    // Get instance field reference: public System.Int32 Weight
    [[deprecated("Use field access instead!")]] int& dyn_Weight();
    // Get instance field reference: public System.String FamilyName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_FamilyName();
    // public System.Void .ctor(PowerUI.SPAReader reader)
    // Offset: 0x1770BA4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SPAFontMeta* New_ctor(::PowerUI::SPAReader* reader) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::SPAFontMeta::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SPAFontMeta*, creationType>(reader)));
    }
  }; // PowerUI.SPAFontMeta
  #pragma pack(pop)
  static check_size<sizeof(SPAFontMeta), 32 + sizeof(::StringW)> __PowerUI_SPAFontMetaSizeCheck;
  static_assert(sizeof(SPAFontMeta) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::SPAFontMeta::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
