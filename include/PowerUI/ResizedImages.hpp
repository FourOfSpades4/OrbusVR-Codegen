// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: ResizedImage
  class ResizedImage;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: ResizedImages
  class ResizedImages;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::ResizedImages);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::ResizedImages*, "PowerUI", "ResizedImages");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.ResizedImages
  // [TokenAttribute] Offset: FFFFFFFF
  class ResizedImages : public ::Il2CppObject {
    public:
    // Get static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ResizedImage> Images
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ResizedImage*>* _get_Images();
    // Set static field: static public System.Collections.Generic.Dictionary`2<System.String,PowerUI.ResizedImage> Images
    static void _set_Images(::System::Collections::Generic::Dictionary_2<::StringW, ::PowerUI::ResizedImage*>* value);
    // static public PowerUI.ResizedImage Get(System.String path)
    // Offset: 0x176CE00
    static ::PowerUI::ResizedImage* Get(::StringW path);
    // static public PowerUI.ResizedImage Add(System.String path, UnityEngine.Texture2D originalImage)
    // Offset: 0x176D2D0
    static ::PowerUI::ResizedImage* Add(::StringW path, ::UnityEngine::Texture2D* originalImage);
    // static private System.Void .cctor()
    // Offset: 0x176D4AC
    static void _cctor();
  }; // PowerUI.ResizedImages
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::ResizedImages::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::ResizedImage* (*)(::StringW)>(&PowerUI::ResizedImages::Get)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ResizedImages*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: PowerUI::ResizedImages::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::PowerUI::ResizedImage* (*)(::StringW, ::UnityEngine::Texture2D*)>(&PowerUI::ResizedImages::Add)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* originalImage = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ResizedImages*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path, originalImage});
  }
};
// Writing MetadataGetter for method: PowerUI::ResizedImages::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PowerUI::ResizedImages::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PowerUI::ResizedImages*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
