// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: KeyboardMode
  class KeyboardMode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::KeyboardMode);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::KeyboardMode*, "PowerUI", "KeyboardMode");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.KeyboardMode
  // [TokenAttribute] Offset: FFFFFFFF
  class KeyboardMode : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean Secret
    // Size: 0x1
    // Offset: 0x10
    bool Secret;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean Multiline
    // Size: 0x1
    // Offset: 0x11
    bool Multiline;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: Multiline and: StartText
    char __padding1[0x6] = {};
    // public System.String StartText
    // Size: 0x8
    // Offset: 0x18
    ::StringW StartText;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.Boolean Secret
    [[deprecated("Use field access instead!")]] bool& dyn_Secret();
    // Get instance field reference: public System.Boolean Multiline
    [[deprecated("Use field access instead!")]] bool& dyn_Multiline();
    // Get instance field reference: public System.String StartText
    [[deprecated("Use field access instead!")]] ::StringW& dyn_StartText();
    // public System.Void .ctor()
    // Offset: 0x1A5175C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static KeyboardMode* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::KeyboardMode::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<KeyboardMode*, creationType>()));
    }
  }; // PowerUI.KeyboardMode
  #pragma pack(pop)
  static check_size<sizeof(KeyboardMode), 24 + sizeof(::StringW)> __PowerUI_KeyboardModeSizeCheck;
  static_assert(sizeof(KeyboardMode) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::KeyboardMode::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
