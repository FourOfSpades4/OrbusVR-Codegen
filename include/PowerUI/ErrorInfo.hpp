// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: FilePath
  class FilePath;
}
// Completed forward declares
// Type namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: ErrorInfo
  class ErrorInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PowerUI::ErrorInfo);
DEFINE_IL2CPP_ARG_TYPE(::PowerUI::ErrorInfo*, "PowerUI", "ErrorInfo");
// Type namespace: PowerUI
namespace PowerUI {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: PowerUI.ErrorInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class ErrorInfo : public ::Il2CppObject {
    public:
    public:
    // public PowerUI.FilePath Url
    // Size: 0x8
    // Offset: 0x10
    ::PowerUI::FilePath* Url;
    // Field size check
    static_assert(sizeof(::PowerUI::FilePath*) == 0x8);
    // public System.String Message
    // Size: 0x8
    // Offset: 0x18
    ::StringW Message;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public PowerUI.FilePath Url
    [[deprecated("Use field access instead!")]] ::PowerUI::FilePath*& dyn_Url();
    // Get instance field reference: public System.String Message
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Message();
    // public System.Void .ctor()
    // Offset: 0x1A42DB4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ErrorInfo* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::PowerUI::ErrorInfo::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ErrorInfo*, creationType>()));
    }
  }; // PowerUI.ErrorInfo
  #pragma pack(pop)
  static check_size<sizeof(ErrorInfo), 24 + sizeof(::StringW)> __PowerUI_ErrorInfoSizeCheck;
  static_assert(sizeof(ErrorInfo) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PowerUI::ErrorInfo::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
