// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.StateMachineBehaviour
#include "UnityEngine/StateMachineBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: KevinIglesias
namespace KevinIglesias {
  // Forward declaring type: BucketRoute
  class BucketRoute;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Animator
  class Animator;
  // Forward declaring type: AnimatorStateInfo
  struct AnimatorStateInfo;
}
// Completed forward declares
// Type namespace: KevinIglesias
namespace KevinIglesias {
  // Forward declaring type: BucketRouteAnimator
  class BucketRouteAnimator;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::KevinIglesias::BucketRouteAnimator);
DEFINE_IL2CPP_ARG_TYPE(::KevinIglesias::BucketRouteAnimator*, "KevinIglesias", "BucketRouteAnimator");
// Type namespace: KevinIglesias
namespace KevinIglesias {
  // Size: 0x25
  #pragma pack(push, 1)
  // Autogenerated type: KevinIglesias.BucketRouteAnimator
  // [TokenAttribute] Offset: FFFFFFFF
  class BucketRouteAnimator : public ::UnityEngine::StateMachineBehaviour {
    public:
    public:
    // private KevinIglesias.BucketRoute bR
    // Size: 0x8
    // Offset: 0x18
    ::KevinIglesias::BucketRoute* bR;
    // Field size check
    static_assert(sizeof(::KevinIglesias::BucketRoute*) == 0x8);
    // public System.Single delay
    // Size: 0x4
    // Offset: 0x20
    float delay;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean lift
    // Size: 0x1
    // Offset: 0x24
    bool lift;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private KevinIglesias.BucketRoute bR
    [[deprecated("Use field access instead!")]] ::KevinIglesias::BucketRoute*& dyn_bR();
    // Get instance field reference: public System.Single delay
    [[deprecated("Use field access instead!")]] float& dyn_delay();
    // Get instance field reference: public System.Boolean lift
    [[deprecated("Use field access instead!")]] bool& dyn_lift();
    // public System.Void .ctor()
    // Offset: 0x1061AAC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BucketRouteAnimator* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::KevinIglesias::BucketRouteAnimator::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BucketRouteAnimator*, creationType>()));
    }
    // public override System.Void OnStateEnter(UnityEngine.Animator animator, UnityEngine.AnimatorStateInfo stateInfo, System.Int32 layerIndex)
    // Offset: 0x1061978
    // Implemented from: UnityEngine.StateMachineBehaviour
    // Base method: System.Void StateMachineBehaviour::OnStateEnter(UnityEngine.Animator animator, UnityEngine.AnimatorStateInfo stateInfo, System.Int32 layerIndex)
    void OnStateEnter(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex);
  }; // KevinIglesias.BucketRouteAnimator
  #pragma pack(pop)
  static check_size<sizeof(BucketRouteAnimator), 36 + sizeof(bool)> __KevinIglesias_BucketRouteAnimatorSizeCheck;
  static_assert(sizeof(BucketRouteAnimator) == 0x25);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: KevinIglesias::BucketRouteAnimator::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: KevinIglesias::BucketRouteAnimator::OnStateEnter
// Il2CppName: OnStateEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (KevinIglesias::BucketRouteAnimator::*)(::UnityEngine::Animator*, ::UnityEngine::AnimatorStateInfo, int)>(&KevinIglesias::BucketRouteAnimator::OnStateEnter)> {
  static const MethodInfo* get() {
    static auto* animator = &::il2cpp_utils::GetClassFromName("UnityEngine", "Animator")->byval_arg;
    static auto* stateInfo = &::il2cpp_utils::GetClassFromName("UnityEngine", "AnimatorStateInfo")->byval_arg;
    static auto* layerIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(KevinIglesias::BucketRouteAnimator*), "OnStateEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{animator, stateInfo, layerIndex});
  }
};
