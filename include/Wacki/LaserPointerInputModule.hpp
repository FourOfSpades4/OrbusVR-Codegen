// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.EventSystems.BaseInputModule
#include "UnityEngine/EventSystems/BaseInputModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Wacki
namespace Wacki {
  // Forward declaring type: IUILaserPointer
  class IUILaserPointer;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: Wacki
namespace Wacki {
  // Forward declaring type: LaserPointerInputModule
  class LaserPointerInputModule;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Wacki::LaserPointerInputModule);
DEFINE_IL2CPP_ARG_TYPE(::Wacki::LaserPointerInputModule*, "Wacki", "LaserPointerInputModule");
// Type namespace: Wacki
namespace Wacki {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: Wacki.LaserPointerInputModule
  // [TokenAttribute] Offset: FFFFFFFF
  class LaserPointerInputModule : public ::UnityEngine::EventSystems::BaseInputModule {
    public:
    // Nested type: ::Wacki::LaserPointerInputModule::ControllerData
    class ControllerData;
    public:
    // private System.Boolean startedUp
    // Size: 0x1
    // Offset: 0x48
    bool startedUp;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: startedUp and: UICamera
    char __padding0[0x7] = {};
    // private UnityEngine.Camera UICamera
    // Size: 0x8
    // Offset: 0x50
    ::UnityEngine::Camera* UICamera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // private System.Collections.Generic.HashSet`1<Wacki.IUILaserPointer> _controllers
    // Size: 0x8
    // Offset: 0x58
    ::System::Collections::Generic::HashSet_1<::Wacki::IUILaserPointer*>* controllers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::HashSet_1<::Wacki::IUILaserPointer*>*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<Wacki.IUILaserPointer,Wacki.LaserPointerInputModule/ControllerData> _controllerData
    // Size: 0x8
    // Offset: 0x60
    ::System::Collections::Generic::Dictionary_2<::Wacki::IUILaserPointer*, ::Wacki::LaserPointerInputModule::ControllerData*>* controllerData;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::Wacki::IUILaserPointer*, ::Wacki::LaserPointerInputModule::ControllerData*>*) == 0x8);
    public:
    // Get static field: static private Wacki.LaserPointerInputModule _instance
    static ::Wacki::LaserPointerInputModule* _get__instance();
    // Set static field: static private Wacki.LaserPointerInputModule _instance
    static void _set__instance(::Wacki::LaserPointerInputModule* value);
    // Get instance field reference: private System.Boolean startedUp
    [[deprecated("Use field access instead!")]] bool& dyn_startedUp();
    // Get instance field reference: private UnityEngine.Camera UICamera
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_UICamera();
    // Get instance field reference: private System.Collections.Generic.HashSet`1<Wacki.IUILaserPointer> _controllers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::Wacki::IUILaserPointer*>*& dyn__controllers();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<Wacki.IUILaserPointer,Wacki.LaserPointerInputModule/ControllerData> _controllerData
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::Wacki::IUILaserPointer*, ::Wacki::LaserPointerInputModule::ControllerData*>*& dyn__controllerData();
    // static public Wacki.LaserPointerInputModule get_instance()
    // Offset: 0xDD50F4
    static ::Wacki::LaserPointerInputModule* get_instance();
    // private System.Void Startup()
    // Offset: 0xDD58CC
    void Startup();
    // public System.Void AddController(Wacki.IUILaserPointer controller)
    // Offset: 0xDD515C
    void AddController(::Wacki::IUILaserPointer* controller);
    // public System.Void RemoveController(Wacki.IUILaserPointer controller)
    // Offset: 0xDD52D0
    void RemoveController(::Wacki::IUILaserPointer* controller);
    // protected System.Void UpdateCameraPosition(Wacki.IUILaserPointer controller)
    // Offset: 0xDD5C0C
    void UpdateCameraPosition(::Wacki::IUILaserPointer* controller);
    // public System.Void ClearSelection()
    // Offset: 0xDD5D48
    void ClearSelection();
    // private System.Void Select(UnityEngine.GameObject go)
    // Offset: 0xDD5E14
    void Select(::UnityEngine::GameObject* go);
    // public System.Void .ctor()
    // Offset: 0xDD6DE4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LaserPointerInputModule* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Wacki::LaserPointerInputModule::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LaserPointerInputModule*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0xDD6E54
    static void _cctor();
    // protected override System.Void Awake()
    // Offset: 0xDD5784
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::Awake()
    void Awake();
    // protected override System.Void Start()
    // Offset: 0xDD5B60
    // Implemented from: UnityEngine.EventSystems.UIBehaviour
    // Base method: System.Void UIBehaviour::Start()
    void Start();
    // public override System.Void Process()
    // Offset: 0xDD5F08
    // Implemented from: UnityEngine.EventSystems.BaseInputModule
    // Base method: System.Void BaseInputModule::Process()
    void Process();
  }; // Wacki.LaserPointerInputModule
  #pragma pack(pop)
  static check_size<sizeof(LaserPointerInputModule), 96 + sizeof(::System::Collections::Generic::Dictionary_2<::Wacki::IUILaserPointer*, ::Wacki::LaserPointerInputModule::ControllerData*>*)> __Wacki_LaserPointerInputModuleSizeCheck;
  static_assert(sizeof(LaserPointerInputModule) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::get_instance
// Il2CppName: get_instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Wacki::LaserPointerInputModule* (*)()>(&Wacki::LaserPointerInputModule::get_instance)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Wacki::LaserPointerInputModule*), "get_instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::Startup
// Il2CppName: Startup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Wacki::LaserPointerInputModule::*)()>(&Wacki::LaserPointerInputModule::Startup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Wacki::LaserPointerInputModule*), "Startup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::AddController
// Il2CppName: AddController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Wacki::LaserPointerInputModule::*)(::Wacki::IUILaserPointer*)>(&Wacki::LaserPointerInputModule::AddController)> {
  static const MethodInfo* get() {
    static auto* controller = &::il2cpp_utils::GetClassFromName("Wacki", "IUILaserPointer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Wacki::LaserPointerInputModule*), "AddController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controller});
  }
};
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::RemoveController
// Il2CppName: RemoveController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Wacki::LaserPointerInputModule::*)(::Wacki::IUILaserPointer*)>(&Wacki::LaserPointerInputModule::RemoveController)> {
  static const MethodInfo* get() {
    static auto* controller = &::il2cpp_utils::GetClassFromName("Wacki", "IUILaserPointer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Wacki::LaserPointerInputModule*), "RemoveController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controller});
  }
};
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::UpdateCameraPosition
// Il2CppName: UpdateCameraPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Wacki::LaserPointerInputModule::*)(::Wacki::IUILaserPointer*)>(&Wacki::LaserPointerInputModule::UpdateCameraPosition)> {
  static const MethodInfo* get() {
    static auto* controller = &::il2cpp_utils::GetClassFromName("Wacki", "IUILaserPointer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Wacki::LaserPointerInputModule*), "UpdateCameraPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{controller});
  }
};
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::ClearSelection
// Il2CppName: ClearSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Wacki::LaserPointerInputModule::*)()>(&Wacki::LaserPointerInputModule::ClearSelection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Wacki::LaserPointerInputModule*), "ClearSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::Select
// Il2CppName: Select
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Wacki::LaserPointerInputModule::*)(::UnityEngine::GameObject*)>(&Wacki::LaserPointerInputModule::Select)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Wacki::LaserPointerInputModule*), "Select", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Wacki::LaserPointerInputModule::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Wacki::LaserPointerInputModule*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Wacki::LaserPointerInputModule::*)()>(&Wacki::LaserPointerInputModule::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Wacki::LaserPointerInputModule*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Wacki::LaserPointerInputModule::*)()>(&Wacki::LaserPointerInputModule::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Wacki::LaserPointerInputModule*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Wacki::LaserPointerInputModule::*)()>(&Wacki::LaserPointerInputModule::Process)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Wacki::LaserPointerInputModule*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
