// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Wacki.LaserPointerInputModule
#include "Wacki/LaserPointerInputModule.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: PointerEventData
  class PointerEventData;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Wacki::LaserPointerInputModule::ControllerData);
DEFINE_IL2CPP_ARG_TYPE(::Wacki::LaserPointerInputModule::ControllerData*, "Wacki", "LaserPointerInputModule/ControllerData");
// Type namespace: Wacki
namespace Wacki {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Wacki.LaserPointerInputModule/ControllerData
  // [TokenAttribute] Offset: FFFFFFFF
  class LaserPointerInputModule::ControllerData : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.EventSystems.PointerEventData pointerEvent
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::EventSystems::PointerEventData* pointerEvent;
    // Field size check
    static_assert(sizeof(::UnityEngine::EventSystems::PointerEventData*) == 0x8);
    // public UnityEngine.GameObject currentPoint
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::GameObject* currentPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject currentPressed
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::GameObject* currentPressed;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.GameObject currentDragging
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::GameObject* currentDragging;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // public UnityEngine.Vector2 prevHitPoint
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Vector2 prevHitPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.EventSystems.PointerEventData pointerEvent
    [[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::PointerEventData*& dyn_pointerEvent();
    // Get instance field reference: public UnityEngine.GameObject currentPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_currentPoint();
    // Get instance field reference: public UnityEngine.GameObject currentPressed
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_currentPressed();
    // Get instance field reference: public UnityEngine.GameObject currentDragging
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_currentDragging();
    // Get instance field reference: public UnityEngine.Vector2 prevHitPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_prevHitPoint();
    // public System.Void .ctor()
    // Offset: 0xDD5BC4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LaserPointerInputModule::ControllerData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Wacki::LaserPointerInputModule::ControllerData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LaserPointerInputModule::ControllerData*, creationType>()));
    }
  }; // Wacki.LaserPointerInputModule/ControllerData
  #pragma pack(pop)
  static check_size<sizeof(LaserPointerInputModule::ControllerData), 48 + sizeof(::UnityEngine::Vector2)> __Wacki_LaserPointerInputModule_ControllerDataSizeCheck;
  static_assert(sizeof(LaserPointerInputModule::ControllerData) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Wacki::LaserPointerInputModule::ControllerData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
