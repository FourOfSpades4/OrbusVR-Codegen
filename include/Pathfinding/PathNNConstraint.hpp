// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.NNConstraint
#include "Pathfinding/NNConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: GraphNode
  class GraphNode;
}
// Completed forward declares
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: PathNNConstraint
  class PathNNConstraint;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::PathNNConstraint);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::PathNNConstraint*, "Pathfinding", "PathNNConstraint");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x25
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.PathNNConstraint
  // [TokenAttribute] Offset: FFFFFFFF
  class PathNNConstraint : public ::Pathfinding::NNConstraint {
    public:
    // static public Pathfinding.PathNNConstraint get_Default()
    // Offset: 0x16AA8EC
    static ::Pathfinding::PathNNConstraint* get_Default();
    // public System.Void SetStart(Pathfinding.GraphNode node)
    // Offset: 0x16ACA70
    void SetStart(::Pathfinding::GraphNode* node);
    // public System.Void .ctor()
    // Offset: 0x16ACA68
    // Implemented from: Pathfinding.NNConstraint
    // Base method: System.Void NNConstraint::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PathNNConstraint* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathNNConstraint::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PathNNConstraint*, creationType>()));
    }
  }; // Pathfinding.PathNNConstraint
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::PathNNConstraint::get_Default
// Il2CppName: get_Default
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::PathNNConstraint* (*)()>(&Pathfinding::PathNNConstraint::get_Default)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::PathNNConstraint*), "get_Default", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::PathNNConstraint::SetStart
// Il2CppName: SetStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::PathNNConstraint::*)(::Pathfinding::GraphNode*)>(&Pathfinding::PathNNConstraint::SetStart)> {
  static const MethodInfo* get() {
    static auto* node = &::il2cpp_utils::GetClassFromName("Pathfinding", "GraphNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::PathNNConstraint*), "SetStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{node});
  }
};
// Writing MetadataGetter for method: Pathfinding::PathNNConstraint::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
