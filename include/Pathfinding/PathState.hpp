// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: PathState
  struct PathState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::PathState, "Pathfinding", "PathState");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.PathState
  // [TokenAttribute] Offset: FFFFFFFF
  struct PathState/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: PathState
    constexpr PathState(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public Pathfinding.PathState Created
    static constexpr const int Created = 0;
    // Get static field: static public Pathfinding.PathState Created
    static ::Pathfinding::PathState _get_Created();
    // Set static field: static public Pathfinding.PathState Created
    static void _set_Created(::Pathfinding::PathState value);
    // static field const value: static public Pathfinding.PathState PathQueue
    static constexpr const int PathQueue = 1;
    // Get static field: static public Pathfinding.PathState PathQueue
    static ::Pathfinding::PathState _get_PathQueue();
    // Set static field: static public Pathfinding.PathState PathQueue
    static void _set_PathQueue(::Pathfinding::PathState value);
    // static field const value: static public Pathfinding.PathState Processing
    static constexpr const int Processing = 2;
    // Get static field: static public Pathfinding.PathState Processing
    static ::Pathfinding::PathState _get_Processing();
    // Set static field: static public Pathfinding.PathState Processing
    static void _set_Processing(::Pathfinding::PathState value);
    // static field const value: static public Pathfinding.PathState ReturnQueue
    static constexpr const int ReturnQueue = 3;
    // Get static field: static public Pathfinding.PathState ReturnQueue
    static ::Pathfinding::PathState _get_ReturnQueue();
    // Set static field: static public Pathfinding.PathState ReturnQueue
    static void _set_ReturnQueue(::Pathfinding::PathState value);
    // static field const value: static public Pathfinding.PathState Returned
    static constexpr const int Returned = 4;
    // Get static field: static public Pathfinding.PathState Returned
    static ::Pathfinding::PathState _get_Returned();
    // Set static field: static public Pathfinding.PathState Returned
    static void _set_Returned(::Pathfinding::PathState value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // Pathfinding.PathState
  #pragma pack(pop)
  static check_size<sizeof(PathState), 0 + sizeof(int)> __Pathfinding_PathStateSizeCheck;
  static_assert(sizeof(PathState) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
