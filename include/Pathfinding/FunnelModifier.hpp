// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.MonoModifier
#include "Pathfinding/MonoModifier.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: Path
  class Path;
}
// Completed forward declares
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: FunnelModifier
  class FunnelModifier;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::FunnelModifier);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::FunnelModifier*, "Pathfinding", "FunnelModifier");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.FunnelModifier
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: AD83DC
  // [HelpURLAttribute] Offset: AD83DC
  class FunnelModifier : public ::Pathfinding::MonoModifier {
    public:
    // static public System.Boolean RunFunnel(System.Collections.Generic.List`1<UnityEngine.Vector3> left, System.Collections.Generic.List`1<UnityEngine.Vector3> right, System.Collections.Generic.List`1<UnityEngine.Vector3> funnelPath)
    // Offset: 0x1C074AC
    static bool RunFunnel(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* left, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* right, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>* funnelPath);
    // public override System.Int32 get_Order()
    // Offset: 0x1C06E10
    // Implemented from: Pathfinding.MonoModifier
    // Base method: System.Int32 MonoModifier::get_Order()
    int get_Order();
    // public override System.Void Apply(Pathfinding.Path p)
    // Offset: 0x1C06E18
    // Implemented from: Pathfinding.MonoModifier
    // Base method: System.Void MonoModifier::Apply(Pathfinding.Path p)
    void Apply(::Pathfinding::Path* p);
    // public System.Void .ctor()
    // Offset: 0x1C07EC0
    // Implemented from: Pathfinding.MonoModifier
    // Base method: System.Void MonoModifier::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static FunnelModifier* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::FunnelModifier::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<FunnelModifier*, creationType>()));
    }
  }; // Pathfinding.FunnelModifier
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::FunnelModifier::RunFunnel
// Il2CppName: RunFunnel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*, ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*)>(&Pathfinding::FunnelModifier::RunFunnel)> {
  static const MethodInfo* get() {
    static auto* left = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* right = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* funnelPath = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::FunnelModifier*), "RunFunnel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{left, right, funnelPath});
  }
};
// Writing MetadataGetter for method: Pathfinding::FunnelModifier::get_Order
// Il2CppName: get_Order
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pathfinding::FunnelModifier::*)()>(&Pathfinding::FunnelModifier::get_Order)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::FunnelModifier*), "get_Order", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::FunnelModifier::Apply
// Il2CppName: Apply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::FunnelModifier::*)(::Pathfinding::Path*)>(&Pathfinding::FunnelModifier::Apply)> {
  static const MethodInfo* get() {
    static auto* p = &::il2cpp_utils::GetClassFromName("Pathfinding", "Path")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::FunnelModifier*), "Apply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{p});
  }
};
// Writing MetadataGetter for method: Pathfinding::FunnelModifier::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
