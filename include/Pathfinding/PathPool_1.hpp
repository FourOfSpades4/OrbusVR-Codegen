// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: Path
  class Path;
}
// Completed forward declares
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: PathPool`1<T>
  template<typename T>
  class PathPool_1;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Pathfinding::PathPool_1, "Pathfinding", "PathPool`1");
// Type namespace: Pathfinding
namespace Pathfinding {
  // WARNING Size may be invalid!
  // Autogenerated type: Pathfinding.PathPool`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [ObsoleteAttribute] Offset: AD81A4
  template<typename T>
  class PathPool_1 : public ::Il2CppObject {
    public:
    // static public System.Void Recycle(T path)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void Recycle(T path) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool_1::Recycle");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<PathPool_1<T>*>::get(), "Recycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
    }
    // static public System.Void Warmup(System.Int32 count, System.Int32 length)
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void Warmup(int count, int length) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool_1::Warmup");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<PathPool_1<T>*>::get(), "Warmup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(length)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count, length);
    }
    // static public System.Int32 GetTotalCreated()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static int GetTotalCreated() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool_1::GetTotalCreated");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<PathPool_1<T>*>::get(), "GetTotalCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public System.Int32 GetSize()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static int GetSize() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool_1::GetSize");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<PathPool_1<T>*>::get(), "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // static public T GetPath()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static T GetPath() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::PathPool_1::GetPath");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<PathPool_1<T>*>::get(), "GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
  }; // Pathfinding.PathPool`1
  // Could not write size check! Type: Pathfinding.PathPool`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
