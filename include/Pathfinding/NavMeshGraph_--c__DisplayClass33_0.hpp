// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.NavMeshGraph
#include "Pathfinding/NavMeshGraph.hpp"
// Including type: Pathfinding.IntRect
#include "Pathfinding/IntRect.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: Pathfinding.Int3
#include "Pathfinding/Int3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: GraphUpdateObject
  class GraphUpdateObject;
  // Forward declaring type: GraphNode
  class GraphNode;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0*, "Pathfinding", "NavMeshGraph/<>c__DisplayClass33_0");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.NavMeshGraph/<>c__DisplayClass33_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AD835C
  class NavMeshGraph::$$c__DisplayClass33_0 : public ::Il2CppObject {
    public:
    public:
    // public Pathfinding.IntRect r2
    // Size: 0x10
    // Offset: 0x10
    ::Pathfinding::IntRect r2;
    // Field size check
    static_assert(sizeof(::Pathfinding::IntRect) == 0x10);
    // public UnityEngine.Rect r
    // Size: 0x10
    // Offset: 0x20
    ::UnityEngine::Rect r;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rect) == 0x10);
    // public Pathfinding.Int3 a
    // Size: 0xC
    // Offset: 0x30
    ::Pathfinding::Int3 a;
    // Field size check
    static_assert(sizeof(::Pathfinding::Int3) == 0xC);
    // public Pathfinding.Int3 b
    // Size: 0xC
    // Offset: 0x3C
    ::Pathfinding::Int3 b;
    // Field size check
    static_assert(sizeof(::Pathfinding::Int3) == 0xC);
    // public Pathfinding.Int3 c
    // Size: 0xC
    // Offset: 0x48
    ::Pathfinding::Int3 c;
    // Field size check
    static_assert(sizeof(::Pathfinding::Int3) == 0xC);
    // public Pathfinding.Int3 d
    // Size: 0xC
    // Offset: 0x54
    ::Pathfinding::Int3 d;
    // Field size check
    static_assert(sizeof(::Pathfinding::Int3) == 0xC);
    // public System.Int32 ymin
    // Size: 0x4
    // Offset: 0x60
    int ymin;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 ymax
    // Size: 0x4
    // Offset: 0x64
    int ymax;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public Pathfinding.GraphUpdateObject o
    // Size: 0x8
    // Offset: 0x68
    ::Pathfinding::GraphUpdateObject* o;
    // Field size check
    static_assert(sizeof(::Pathfinding::GraphUpdateObject*) == 0x8);
    public:
    // Get instance field reference: public Pathfinding.IntRect r2
    [[deprecated("Use field access instead!")]] ::Pathfinding::IntRect& dyn_r2();
    // Get instance field reference: public UnityEngine.Rect r
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rect& dyn_r();
    // Get instance field reference: public Pathfinding.Int3 a
    [[deprecated("Use field access instead!")]] ::Pathfinding::Int3& dyn_a();
    // Get instance field reference: public Pathfinding.Int3 b
    [[deprecated("Use field access instead!")]] ::Pathfinding::Int3& dyn_b();
    // Get instance field reference: public Pathfinding.Int3 c
    [[deprecated("Use field access instead!")]] ::Pathfinding::Int3& dyn_c();
    // Get instance field reference: public Pathfinding.Int3 d
    [[deprecated("Use field access instead!")]] ::Pathfinding::Int3& dyn_d();
    // Get instance field reference: public System.Int32 ymin
    [[deprecated("Use field access instead!")]] int& dyn_ymin();
    // Get instance field reference: public System.Int32 ymax
    [[deprecated("Use field access instead!")]] int& dyn_ymax();
    // Get instance field reference: public Pathfinding.GraphUpdateObject o
    [[deprecated("Use field access instead!")]] ::Pathfinding::GraphUpdateObject*& dyn_o();
    // public System.Void .ctor()
    // Offset: 0x169F41C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static NavMeshGraph::$$c__DisplayClass33_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<NavMeshGraph::$$c__DisplayClass33_0*, creationType>()));
    }
    // System.Boolean <UpdateArea>b__0(Pathfinding.GraphNode _node)
    // Offset: 0x169F424
    bool $UpdateArea$b__0(::Pathfinding::GraphNode* _node);
  }; // Pathfinding.NavMeshGraph/<>c__DisplayClass33_0
  #pragma pack(pop)
  static check_size<sizeof(NavMeshGraph::$$c__DisplayClass33_0), 104 + sizeof(::Pathfinding::GraphUpdateObject*)> __Pathfinding_NavMeshGraph_$$c__DisplayClass33_0SizeCheck;
  static_assert(sizeof(NavMeshGraph::$$c__DisplayClass33_0) == 0x70);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::$UpdateArea$b__0
// Il2CppName: <UpdateArea>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::*)(::Pathfinding::GraphNode*)>(&Pathfinding::NavMeshGraph::$$c__DisplayClass33_0::$UpdateArea$b__0)> {
  static const MethodInfo* get() {
    static auto* _node = &::il2cpp_utils::GetClassFromName("Pathfinding", "GraphNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::NavMeshGraph::$$c__DisplayClass33_0*), "<UpdateArea>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_node});
  }
};
