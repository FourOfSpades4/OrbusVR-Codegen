// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.Ionic.Zip.ZipProgressEventArgs
#include "Pathfinding/Ionic/Zip/ZipProgressEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Pathfinding::Ionic::Zip
namespace Pathfinding::Ionic::Zip {
  // Forward declaring type: ZipEntry
  class ZipEntry;
}
// Completed forward declares
// Type namespace: Pathfinding.Ionic.Zip
namespace Pathfinding::Ionic::Zip {
  // Forward declaring type: ExtractProgressEventArgs
  class ExtractProgressEventArgs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Ionic::Zip::ExtractProgressEventArgs);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Ionic::Zip::ExtractProgressEventArgs*, "Pathfinding.Ionic.Zip", "ExtractProgressEventArgs");
// Type namespace: Pathfinding.Ionic.Zip
namespace Pathfinding::Ionic::Zip {
  // Size: 0x48
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Ionic.Zip.ExtractProgressEventArgs
  // [TokenAttribute] Offset: FFFFFFFF
  class ExtractProgressEventArgs : public ::Pathfinding::Ionic::Zip::ZipProgressEventArgs {
    public:
    public:
    // private System.String _target
    // Size: 0x8
    // Offset: 0x40
    ::StringW target;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return target;
    }
    // Get instance field reference: private System.String _target
    [[deprecated("Use field access instead!")]] ::StringW& dyn__target();
    // static Pathfinding.Ionic.Zip.ExtractProgressEventArgs BeforeExtractEntry(System.String archiveName, Pathfinding.Ionic.Zip.ZipEntry entry, System.String extractLocation)
    // Offset: 0x1F48450
    static ::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* BeforeExtractEntry(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, ::StringW extractLocation);
    // static Pathfinding.Ionic.Zip.ExtractProgressEventArgs ExtractExisting(System.String archiveName, Pathfinding.Ionic.Zip.ZipEntry entry, System.String extractLocation)
    // Offset: 0x1F4854C
    static ::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* ExtractExisting(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, ::StringW extractLocation);
    // static Pathfinding.Ionic.Zip.ExtractProgressEventArgs AfterExtractEntry(System.String archiveName, Pathfinding.Ionic.Zip.ZipEntry entry, System.String extractLocation)
    // Offset: 0x1F48648
    static ::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* AfterExtractEntry(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, ::StringW extractLocation);
    // static Pathfinding.Ionic.Zip.ExtractProgressEventArgs ByteUpdate(System.String archiveName, Pathfinding.Ionic.Zip.ZipEntry entry, System.Int64 bytesWritten, System.Int64 totalBytes)
    // Offset: 0x1F48744
    static ::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* ByteUpdate(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipEntry* entry, int64_t bytesWritten, int64_t totalBytes);
    // System.Void .ctor(System.String archiveName, Pathfinding.Ionic.Zip.ZipProgressEventType flavor)
    // Offset: 0x1F48440
    // Implemented from: Pathfinding.Ionic.Zip.ZipProgressEventArgs
    // Base method: System.Void ZipProgressEventArgs::.ctor(System.String archiveName, Pathfinding.Ionic.Zip.ZipProgressEventType flavor)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ExtractProgressEventArgs* New_ctor(::StringW archiveName, ::Pathfinding::Ionic::Zip::ZipProgressEventType flavor) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractProgressEventArgs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ExtractProgressEventArgs*, creationType>(archiveName, flavor)));
    }
    // System.Void .ctor()
    // Offset: 0x1F48448
    // Implemented from: Pathfinding.Ionic.Zip.ZipProgressEventArgs
    // Base method: System.Void ZipProgressEventArgs::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ExtractProgressEventArgs* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zip::ExtractProgressEventArgs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ExtractProgressEventArgs*, creationType>()));
    }
  }; // Pathfinding.Ionic.Zip.ExtractProgressEventArgs
  #pragma pack(pop)
  static check_size<sizeof(ExtractProgressEventArgs), 64 + sizeof(::StringW)> __Pathfinding_Ionic_Zip_ExtractProgressEventArgsSizeCheck;
  static_assert(sizeof(ExtractProgressEventArgs) == 0x48);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Ionic::Zip::ExtractProgressEventArgs::BeforeExtractEntry
// Il2CppName: BeforeExtractEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* (*)(::StringW, ::Pathfinding::Ionic::Zip::ZipEntry*, ::StringW)>(&Pathfinding::Ionic::Zip::ExtractProgressEventArgs::BeforeExtractEntry)> {
  static const MethodInfo* get() {
    static auto* archiveName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* entry = &::il2cpp_utils::GetClassFromName("Pathfinding.Ionic.Zip", "ZipEntry")->byval_arg;
    static auto* extractLocation = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Ionic::Zip::ExtractProgressEventArgs*), "BeforeExtractEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{archiveName, entry, extractLocation});
  }
};
// Writing MetadataGetter for method: Pathfinding::Ionic::Zip::ExtractProgressEventArgs::ExtractExisting
// Il2CppName: ExtractExisting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* (*)(::StringW, ::Pathfinding::Ionic::Zip::ZipEntry*, ::StringW)>(&Pathfinding::Ionic::Zip::ExtractProgressEventArgs::ExtractExisting)> {
  static const MethodInfo* get() {
    static auto* archiveName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* entry = &::il2cpp_utils::GetClassFromName("Pathfinding.Ionic.Zip", "ZipEntry")->byval_arg;
    static auto* extractLocation = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Ionic::Zip::ExtractProgressEventArgs*), "ExtractExisting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{archiveName, entry, extractLocation});
  }
};
// Writing MetadataGetter for method: Pathfinding::Ionic::Zip::ExtractProgressEventArgs::AfterExtractEntry
// Il2CppName: AfterExtractEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* (*)(::StringW, ::Pathfinding::Ionic::Zip::ZipEntry*, ::StringW)>(&Pathfinding::Ionic::Zip::ExtractProgressEventArgs::AfterExtractEntry)> {
  static const MethodInfo* get() {
    static auto* archiveName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* entry = &::il2cpp_utils::GetClassFromName("Pathfinding.Ionic.Zip", "ZipEntry")->byval_arg;
    static auto* extractLocation = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Ionic::Zip::ExtractProgressEventArgs*), "AfterExtractEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{archiveName, entry, extractLocation});
  }
};
// Writing MetadataGetter for method: Pathfinding::Ionic::Zip::ExtractProgressEventArgs::ByteUpdate
// Il2CppName: ByteUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::Ionic::Zip::ExtractProgressEventArgs* (*)(::StringW, ::Pathfinding::Ionic::Zip::ZipEntry*, int64_t, int64_t)>(&Pathfinding::Ionic::Zip::ExtractProgressEventArgs::ByteUpdate)> {
  static const MethodInfo* get() {
    static auto* archiveName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* entry = &::il2cpp_utils::GetClassFromName("Pathfinding.Ionic.Zip", "ZipEntry")->byval_arg;
    static auto* bytesWritten = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* totalBytes = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Ionic::Zip::ExtractProgressEventArgs*), "ByteUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{archiveName, entry, bytesWritten, totalBytes});
  }
};
// Writing MetadataGetter for method: Pathfinding::Ionic::Zip::ExtractProgressEventArgs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Pathfinding::Ionic::Zip::ExtractProgressEventArgs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
