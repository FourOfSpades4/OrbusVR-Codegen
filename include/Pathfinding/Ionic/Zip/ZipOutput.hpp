// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: ICollection`1<T>
  template<typename T>
  class ICollection_1;
}
// Forward declaring namespace: Pathfinding::Ionic::Zip
namespace Pathfinding::Ionic::Zip {
  // Forward declaring type: ZipEntry
  class ZipEntry;
  // Forward declaring type: Zip64Option
  struct Zip64Option;
  // Forward declaring type: ZipContainer
  class ZipContainer;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: Encoding
  class Encoding;
}
// Completed forward declares
// Type namespace: Pathfinding.Ionic.Zip
namespace Pathfinding::Ionic::Zip {
  // Forward declaring type: ZipOutput
  class ZipOutput;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Ionic::Zip::ZipOutput);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Ionic::Zip::ZipOutput*, "Pathfinding.Ionic.Zip", "ZipOutput");
// Type namespace: Pathfinding.Ionic.Zip
namespace Pathfinding::Ionic::Zip {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Ionic.Zip.ZipOutput
  // [TokenAttribute] Offset: FFFFFFFF
  class ZipOutput : public ::Il2CppObject {
    public:
    // static public System.Boolean WriteCentralDirectoryStructure(System.IO.Stream s, System.Collections.Generic.ICollection`1<Pathfinding.Ionic.Zip.ZipEntry> entries, System.UInt32 numSegments, Pathfinding.Ionic.Zip.Zip64Option zip64, System.String comment, Pathfinding.Ionic.Zip.ZipContainer container)
    // Offset: 0x1F5E2F8
    static bool WriteCentralDirectoryStructure(::System::IO::Stream* s, ::System::Collections::Generic::ICollection_1<::Pathfinding::Ionic::Zip::ZipEntry*>* entries, uint numSegments, ::Pathfinding::Ionic::Zip::Zip64Option zip64, ::StringW comment, ::Pathfinding::Ionic::Zip::ZipContainer* container);
    // static private System.Text.Encoding GetEncoding(Pathfinding.Ionic.Zip.ZipContainer container, System.String t)
    // Offset: 0x1F60850
    static ::System::Text::Encoding* GetEncoding(::Pathfinding::Ionic::Zip::ZipContainer* container, ::StringW t);
    // static private System.Byte[] GenCentralDirectoryFooter(System.Int64 StartOfCentralDirectory, System.Int64 EndOfCentralDirectory, Pathfinding.Ionic.Zip.Zip64Option zip64, System.Int32 entryCount, System.String comment, Pathfinding.Ionic.Zip.ZipContainer container)
    // Offset: 0x1F602F8
    static ::ArrayW<uint8_t> GenCentralDirectoryFooter(int64_t StartOfCentralDirectory, int64_t EndOfCentralDirectory, ::Pathfinding::Ionic::Zip::Zip64Option zip64, int entryCount, ::StringW comment, ::Pathfinding::Ionic::Zip::ZipContainer* container);
    // static private System.Byte[] GenZip64EndOfCentralDirectory(System.Int64 StartOfCentralDirectory, System.Int64 EndOfCentralDirectory, System.Int32 entryCount, System.UInt32 numSegments)
    // Offset: 0x1F5FFDC
    static ::ArrayW<uint8_t> GenZip64EndOfCentralDirectory(int64_t StartOfCentralDirectory, int64_t EndOfCentralDirectory, int entryCount, uint numSegments);
    // static private System.Int32 CountEntries(System.Collections.Generic.ICollection`1<Pathfinding.Ionic.Zip.ZipEntry> _entries)
    // Offset: 0x1F5FD54
    static int CountEntries(::System::Collections::Generic::ICollection_1<::Pathfinding::Ionic::Zip::ZipEntry*>* _entries);
  }; // Pathfinding.Ionic.Zip.ZipOutput
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Ionic::Zip::ZipOutput::WriteCentralDirectoryStructure
// Il2CppName: WriteCentralDirectoryStructure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IO::Stream*, ::System::Collections::Generic::ICollection_1<::Pathfinding::Ionic::Zip::ZipEntry*>*, uint, ::Pathfinding::Ionic::Zip::Zip64Option, ::StringW, ::Pathfinding::Ionic::Zip::ZipContainer*)>(&Pathfinding::Ionic::Zip::ZipOutput::WriteCentralDirectoryStructure)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    static auto* entries = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "ICollection`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Pathfinding.Ionic.Zip", "ZipEntry")})->byval_arg;
    static auto* numSegments = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* zip64 = &::il2cpp_utils::GetClassFromName("Pathfinding.Ionic.Zip", "Zip64Option")->byval_arg;
    static auto* comment = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* container = &::il2cpp_utils::GetClassFromName("Pathfinding.Ionic.Zip", "ZipContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Ionic::Zip::ZipOutput*), "WriteCentralDirectoryStructure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s, entries, numSegments, zip64, comment, container});
  }
};
// Writing MetadataGetter for method: Pathfinding::Ionic::Zip::ZipOutput::GetEncoding
// Il2CppName: GetEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Text::Encoding* (*)(::Pathfinding::Ionic::Zip::ZipContainer*, ::StringW)>(&Pathfinding::Ionic::Zip::ZipOutput::GetEncoding)> {
  static const MethodInfo* get() {
    static auto* container = &::il2cpp_utils::GetClassFromName("Pathfinding.Ionic.Zip", "ZipContainer")->byval_arg;
    static auto* t = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Ionic::Zip::ZipOutput*), "GetEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{container, t});
  }
};
// Writing MetadataGetter for method: Pathfinding::Ionic::Zip::ZipOutput::GenCentralDirectoryFooter
// Il2CppName: GenCentralDirectoryFooter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(int64_t, int64_t, ::Pathfinding::Ionic::Zip::Zip64Option, int, ::StringW, ::Pathfinding::Ionic::Zip::ZipContainer*)>(&Pathfinding::Ionic::Zip::ZipOutput::GenCentralDirectoryFooter)> {
  static const MethodInfo* get() {
    static auto* StartOfCentralDirectory = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* EndOfCentralDirectory = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* zip64 = &::il2cpp_utils::GetClassFromName("Pathfinding.Ionic.Zip", "Zip64Option")->byval_arg;
    static auto* entryCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* comment = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* container = &::il2cpp_utils::GetClassFromName("Pathfinding.Ionic.Zip", "ZipContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Ionic::Zip::ZipOutput*), "GenCentralDirectoryFooter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{StartOfCentralDirectory, EndOfCentralDirectory, zip64, entryCount, comment, container});
  }
};
// Writing MetadataGetter for method: Pathfinding::Ionic::Zip::ZipOutput::GenZip64EndOfCentralDirectory
// Il2CppName: GenZip64EndOfCentralDirectory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(int64_t, int64_t, int, uint)>(&Pathfinding::Ionic::Zip::ZipOutput::GenZip64EndOfCentralDirectory)> {
  static const MethodInfo* get() {
    static auto* StartOfCentralDirectory = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* EndOfCentralDirectory = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    static auto* entryCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* numSegments = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Ionic::Zip::ZipOutput*), "GenZip64EndOfCentralDirectory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{StartOfCentralDirectory, EndOfCentralDirectory, entryCount, numSegments});
  }
};
// Writing MetadataGetter for method: Pathfinding::Ionic::Zip::ZipOutput::CountEntries
// Il2CppName: CountEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::Collections::Generic::ICollection_1<::Pathfinding::Ionic::Zip::ZipEntry*>*)>(&Pathfinding::Ionic::Zip::ZipOutput::CountEntries)> {
  static const MethodInfo* get() {
    static auto* _entries = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "ICollection`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Pathfinding.Ionic.Zip", "ZipEntry")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Ionic::Zip::ZipOutput*), "CountEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_entries});
  }
};
