// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: Pathfinding.Ionic.Zlib
namespace Pathfinding::Ionic::Zlib {
  // Forward declaring type: InternalInflateConstants
  class InternalInflateConstants;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Ionic::Zlib::InternalInflateConstants);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Ionic::Zlib::InternalInflateConstants*, "Pathfinding.Ionic.Zlib", "InternalInflateConstants");
// Type namespace: Pathfinding.Ionic.Zlib
namespace Pathfinding::Ionic::Zlib {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Ionic.Zlib.InternalInflateConstants
  // [TokenAttribute] Offset: FFFFFFFF
  class InternalInflateConstants : public ::Il2CppObject {
    public:
    // Get static field: static readonly System.Int32[] InflateMask
    static ::ArrayW<int> _get_InflateMask();
    // Set static field: static readonly System.Int32[] InflateMask
    static void _set_InflateMask(::ArrayW<int> value);
    // static private System.Void .cctor()
    // Offset: 0x25E7C2C
    static void _cctor();
  }; // Pathfinding.Ionic.Zlib.InternalInflateConstants
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Ionic::Zlib::InternalInflateConstants::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Pathfinding::Ionic::Zlib::InternalInflateConstants::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Ionic::Zlib::InternalInflateConstants*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
