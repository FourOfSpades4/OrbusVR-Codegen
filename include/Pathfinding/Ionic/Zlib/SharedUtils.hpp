// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: Pathfinding.Ionic.Zlib
namespace Pathfinding::Ionic::Zlib {
  // Forward declaring type: SharedUtils
  class SharedUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Ionic::Zlib::SharedUtils);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Ionic::Zlib::SharedUtils*, "Pathfinding.Ionic.Zlib", "SharedUtils");
// Type namespace: Pathfinding.Ionic.Zlib
namespace Pathfinding::Ionic::Zlib {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Ionic.Zlib.SharedUtils
  // [TokenAttribute] Offset: FFFFFFFF
  class SharedUtils : public ::Il2CppObject {
    public:
    // static public System.Int32 URShift(System.Int32 number, System.Int32 bits)
    // Offset: 0x25E22A8
    static int URShift(int number, int bits);
  }; // Pathfinding.Ionic.Zlib.SharedUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Ionic::Zlib::SharedUtils::URShift
// Il2CppName: URShift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int)>(&Pathfinding::Ionic::Zlib::SharedUtils::URShift)> {
  static const MethodInfo* get() {
    static auto* number = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bits = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Ionic::Zlib::SharedUtils*), "URShift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{number, bits});
  }
};
