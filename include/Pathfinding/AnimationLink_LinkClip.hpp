// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Pathfinding.AnimationLink
#include "Pathfinding/AnimationLink.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AnimationClip
  class AnimationClip;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::AnimationLink::LinkClip);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::AnimationLink::LinkClip*, "Pathfinding", "AnimationLink/LinkClip");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.AnimationLink/LinkClip
  // [TokenAttribute] Offset: FFFFFFFF
  class AnimationLink::LinkClip : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.AnimationClip clip
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::AnimationClip* clip;
    // Field size check
    static_assert(sizeof(::UnityEngine::AnimationClip*) == 0x8);
    // public UnityEngine.Vector3 velocity
    // Size: 0xC
    // Offset: 0x18
    ::UnityEngine::Vector3 velocity;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // public System.Int32 loopCount
    // Size: 0x4
    // Offset: 0x24
    int loopCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public UnityEngine.AnimationClip clip
    [[deprecated("Use field access instead!")]] ::UnityEngine::AnimationClip*& dyn_clip();
    // Get instance field reference: public UnityEngine.Vector3 velocity
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_velocity();
    // Get instance field reference: public System.Int32 loopCount
    [[deprecated("Use field access instead!")]] int& dyn_loopCount();
    // public System.String get_name()
    // Offset: 0x10334D0
    ::StringW get_name();
    // public System.Void .ctor()
    // Offset: 0x1033578
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AnimationLink::LinkClip* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::AnimationLink::LinkClip::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AnimationLink::LinkClip*, creationType>()));
    }
  }; // Pathfinding.AnimationLink/LinkClip
  #pragma pack(pop)
  static check_size<sizeof(AnimationLink::LinkClip), 36 + sizeof(int)> __Pathfinding_AnimationLink_LinkClipSizeCheck;
  static_assert(sizeof(AnimationLink::LinkClip) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::AnimationLink::LinkClip::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Pathfinding::AnimationLink::LinkClip::*)()>(&Pathfinding::AnimationLink::LinkClip::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::AnimationLink::LinkClip*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::AnimationLink::LinkClip::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
