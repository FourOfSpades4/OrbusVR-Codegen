// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Pathfinding
namespace Pathfinding {
  // Forward declaring type: Progress
  struct Progress;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Progress, "Pathfinding", "Progress");
// Type namespace: Pathfinding
namespace Pathfinding {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: Pathfinding.Progress
  // [TokenAttribute] Offset: FFFFFFFF
  struct Progress/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Single progress
    // Size: 0x4
    // Offset: 0x0
    float progress;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: progress and: description
    char __padding0[0x4] = {};
    // public System.String description
    // Size: 0x8
    // Offset: 0x8
    ::StringW description;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating value type constructor for type: Progress
    constexpr Progress(float progress_ = {}, ::StringW description_ = {}) noexcept : progress{progress_}, description{description_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Single progress
    [[deprecated("Use field access instead!")]] float& dyn_progress();
    // Get instance field reference: public System.String description
    [[deprecated("Use field access instead!")]] ::StringW& dyn_description();
    // public System.Void .ctor(System.Single p, System.String d)
    // Offset: 0xBA2C24
    // ABORTED: conflicts with another method.  Progress(float p, ::StringW d);
  }; // Pathfinding.Progress
  #pragma pack(pop)
  static check_size<sizeof(Progress), 8 + sizeof(::StringW)> __Pathfinding_ProgressSizeCheck;
  static_assert(sizeof(Progress) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Progress::Progress
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
