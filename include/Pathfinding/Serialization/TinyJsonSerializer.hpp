// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: CultureInfo
  class CultureInfo;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
// Type namespace: Pathfinding.Serialization
namespace Pathfinding::Serialization {
  // Forward declaring type: TinyJsonSerializer
  class TinyJsonSerializer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Serialization::TinyJsonSerializer);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Serialization::TinyJsonSerializer*, "Pathfinding.Serialization", "TinyJsonSerializer");
// Type namespace: Pathfinding.Serialization
namespace Pathfinding::Serialization {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Serialization.TinyJsonSerializer
  // [TokenAttribute] Offset: FFFFFFFF
  class TinyJsonSerializer : public ::Il2CppObject {
    public:
    public:
    // private System.Text.StringBuilder output
    // Size: 0x8
    // Offset: 0x10
    ::System::Text::StringBuilder* output;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.Type,System.Action`1<System.Object>> serializers
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Action_1<::Il2CppObject*>*>* serializers;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Action_1<::Il2CppObject*>*>*) == 0x8);
    public:
    // Get static field: static private readonly System.Globalization.CultureInfo invariantCulture
    static ::System::Globalization::CultureInfo* _get_invariantCulture();
    // Set static field: static private readonly System.Globalization.CultureInfo invariantCulture
    static void _set_invariantCulture(::System::Globalization::CultureInfo* value);
    // Get instance field reference: private System.Text.StringBuilder output
    [[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& dyn_output();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.Type,System.Action`1<System.Object>> serializers
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Action_1<::Il2CppObject*>*>*& dyn_serializers();
    // static public System.Void Serialize(System.Object obj, System.Text.StringBuilder output)
    // Offset: 0xE36524
    static void Serialize(::Il2CppObject* obj, ::System::Text::StringBuilder* output);
    // private System.Void .ctor()
    // Offset: 0xE365B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TinyJsonSerializer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonSerializer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TinyJsonSerializer*, creationType>()));
    }
    // private System.Void Serialize(System.Object obj)
    // Offset: 0xE36A44
    void Serialize(::Il2CppObject* obj);
    // private System.Void QuotedField(System.String name, System.String contents)
    // Offset: 0xE37448
    void QuotedField(::StringW name, ::StringW contents);
    // private System.Void SerializeUnityObject(UnityEngine.Object obj)
    // Offset: 0xE37020
    void SerializeUnityObject(::UnityEngine::Object* obj);
    // static private System.Void .cctor()
    // Offset: 0xE376D8
    static void _cctor();
    // private System.Void <.ctor>b__4_0(System.Object v)
    // Offset: 0xE37750
    void $_ctor$b__4_0(::Il2CppObject* v);
    // private System.Void <.ctor>b__4_6(System.Object v)
    // Offset: 0xE37824
    void $_ctor$b__4_6(::Il2CppObject* v);
    // private System.Void <.ctor>b__4_1(System.Object v)
    // Offset: 0xE3787C
    void $_ctor$b__4_1(::Il2CppObject* v);
    // private System.Void <.ctor>b__4_2(System.Object v)
    // Offset: 0xE378F0
    void $_ctor$b__4_2(::Il2CppObject* v);
    // private System.Void <.ctor>b__4_3(System.Object v)
    // Offset: 0xE37A1C
    void $_ctor$b__4_3(::Il2CppObject* v);
    // private System.Void <.ctor>b__4_4(System.Object v)
    // Offset: 0xE37BA8
    void $_ctor$b__4_4(::Il2CppObject* v);
    // private System.Void <.ctor>b__4_5(System.Object v)
    // Offset: 0xE37C3C
    void $_ctor$b__4_5(::Il2CppObject* v);
  }; // Pathfinding.Serialization.TinyJsonSerializer
  #pragma pack(pop)
  static check_size<sizeof(TinyJsonSerializer), 24 + sizeof(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Action_1<::Il2CppObject*>*>*)> __Pathfinding_Serialization_TinyJsonSerializerSizeCheck;
  static_assert(sizeof(TinyJsonSerializer) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::System::Text::StringBuilder*)>(&Pathfinding::Serialization::TinyJsonSerializer::Serialize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* output = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, output});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::Serialize
// Il2CppName: Serialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonSerializer::*)(::Il2CppObject*)>(&Pathfinding::Serialization::TinyJsonSerializer::Serialize)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), "Serialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::QuotedField
// Il2CppName: QuotedField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonSerializer::*)(::StringW, ::StringW)>(&Pathfinding::Serialization::TinyJsonSerializer::QuotedField)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* contents = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), "QuotedField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, contents});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::SerializeUnityObject
// Il2CppName: SerializeUnityObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonSerializer::*)(::UnityEngine::Object*)>(&Pathfinding::Serialization::TinyJsonSerializer::SerializeUnityObject)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("UnityEngine", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), "SerializeUnityObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Pathfinding::Serialization::TinyJsonSerializer::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_0
// Il2CppName: <.ctor>b__4_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonSerializer::*)(::Il2CppObject*)>(&Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_0)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), "<.ctor>b__4_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_6
// Il2CppName: <.ctor>b__4_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonSerializer::*)(::Il2CppObject*)>(&Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_6)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), "<.ctor>b__4_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_1
// Il2CppName: <.ctor>b__4_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonSerializer::*)(::Il2CppObject*)>(&Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_1)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), "<.ctor>b__4_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_2
// Il2CppName: <.ctor>b__4_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonSerializer::*)(::Il2CppObject*)>(&Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_2)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), "<.ctor>b__4_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_3
// Il2CppName: <.ctor>b__4_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonSerializer::*)(::Il2CppObject*)>(&Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_3)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), "<.ctor>b__4_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_4
// Il2CppName: <.ctor>b__4_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonSerializer::*)(::Il2CppObject*)>(&Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_4)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), "<.ctor>b__4_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_5
// Il2CppName: <.ctor>b__4_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonSerializer::*)(::Il2CppObject*)>(&Pathfinding::Serialization::TinyJsonSerializer::$_ctor$b__4_5)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonSerializer*), "<.ctor>b__4_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
