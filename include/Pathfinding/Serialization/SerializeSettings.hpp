// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Pathfinding.Serialization
namespace Pathfinding::Serialization {
  // Forward declaring type: SerializeSettings
  class SerializeSettings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Serialization::SerializeSettings);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Serialization::SerializeSettings*, "Pathfinding.Serialization", "SerializeSettings");
// Type namespace: Pathfinding.Serialization
namespace Pathfinding::Serialization {
  // Size: 0x13
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Serialization.SerializeSettings
  // [TokenAttribute] Offset: FFFFFFFF
  class SerializeSettings : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean nodes
    // Size: 0x1
    // Offset: 0x10
    bool nodes;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // [ObsoleteAttribute] Offset: 0xAE613C
    // public System.Boolean prettyPrint
    // Size: 0x1
    // Offset: 0x11
    bool prettyPrint;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // public System.Boolean editorSettings
    // Size: 0x1
    // Offset: 0x12
    bool editorSettings;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.Boolean nodes
    [[deprecated("Use field access instead!")]] bool& dyn_nodes();
    // Get instance field reference: public System.Boolean prettyPrint
    [[deprecated("Use field access instead!")]] bool& dyn_prettyPrint();
    // Get instance field reference: public System.Boolean editorSettings
    [[deprecated("Use field access instead!")]] bool& dyn_editorSettings();
    // static public Pathfinding.Serialization.SerializeSettings get_Settings()
    // Offset: 0x16B7064
    static ::Pathfinding::Serialization::SerializeSettings* get_Settings();
    // public System.Void .ctor()
    // Offset: 0x16BBF14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SerializeSettings* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::SerializeSettings::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SerializeSettings*, creationType>()));
    }
  }; // Pathfinding.Serialization.SerializeSettings
  #pragma pack(pop)
  static check_size<sizeof(SerializeSettings), 18 + sizeof(bool)> __Pathfinding_Serialization_SerializeSettingsSizeCheck;
  static_assert(sizeof(SerializeSettings) == 0x13);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Serialization::SerializeSettings::get_Settings
// Il2CppName: get_Settings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Pathfinding::Serialization::SerializeSettings* (*)()>(&Pathfinding::Serialization::SerializeSettings::get_Settings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::SerializeSettings*), "get_Settings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::SerializeSettings::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
