// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: TextReader
  class TextReader;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: System::Globalization
namespace System::Globalization {
  // Forward declaring type: NumberFormatInfo
  class NumberFormatInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Object
  class Object;
}
// Completed forward declares
// Type namespace: Pathfinding.Serialization
namespace Pathfinding::Serialization {
  // Forward declaring type: TinyJsonDeserializer
  class TinyJsonDeserializer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Pathfinding::Serialization::TinyJsonDeserializer);
DEFINE_IL2CPP_ARG_TYPE(::Pathfinding::Serialization::TinyJsonDeserializer*, "Pathfinding.Serialization", "TinyJsonDeserializer");
// Type namespace: Pathfinding.Serialization
namespace Pathfinding::Serialization {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Pathfinding.Serialization.TinyJsonDeserializer
  // [TokenAttribute] Offset: FFFFFFFF
  class TinyJsonDeserializer : public ::Il2CppObject {
    public:
    public:
    // private System.IO.TextReader reader
    // Size: 0x8
    // Offset: 0x10
    ::System::IO::TextReader* reader;
    // Field size check
    static_assert(sizeof(::System::IO::TextReader*) == 0x8);
    // private System.Text.StringBuilder builder
    // Size: 0x8
    // Offset: 0x18
    ::System::Text::StringBuilder* builder;
    // Field size check
    static_assert(sizeof(::System::Text::StringBuilder*) == 0x8);
    public:
    // Get static field: static private readonly System.Globalization.NumberFormatInfo numberFormat
    static ::System::Globalization::NumberFormatInfo* _get_numberFormat();
    // Set static field: static private readonly System.Globalization.NumberFormatInfo numberFormat
    static void _set_numberFormat(::System::Globalization::NumberFormatInfo* value);
    // Get instance field reference: private System.IO.TextReader reader
    [[deprecated("Use field access instead!")]] ::System::IO::TextReader*& dyn_reader();
    // Get instance field reference: private System.Text.StringBuilder builder
    [[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& dyn_builder();
    // static public System.Object Deserialize(System.String text, System.Type type, System.Object populate)
    // Offset: 0x16BA244
    static ::Il2CppObject* Deserialize(::StringW text, ::System::Type* type, ::Il2CppObject* populate);
    // private System.Object Deserialize(System.Type tp, System.Object populate)
    // Offset: 0x16BBF8C
    ::Il2CppObject* Deserialize(::System::Type* tp, ::Il2CppObject* populate);
    // private UnityEngine.Object DeserializeUnityObject()
    // Offset: 0x16BCFE8
    ::UnityEngine::Object* DeserializeUnityObject();
    // private UnityEngine.Object DeserializeUnityObjectInner()
    // Offset: 0x16BD1CC
    ::UnityEngine::Object* DeserializeUnityObjectInner();
    // private System.Void EatWhitespace()
    // Offset: 0x16BD720
    void EatWhitespace();
    // private System.Void Eat(System.String s)
    // Offset: 0x16BCD34
    void Eat(::StringW s);
    // private System.String EatUntil(System.String c, System.Boolean inString)
    // Offset: 0x16BD7DC
    ::StringW EatUntil(::StringW c, bool inString);
    // private System.Boolean TryEat(System.Char c)
    // Offset: 0x16BCCB0
    bool TryEat(::Il2CppChar c);
    // private System.String EatField()
    // Offset: 0x16BCC20
    ::StringW EatField();
    // private System.Void SkipFieldData()
    // Offset: 0x16BD060
    void SkipFieldData();
    // public System.Void .ctor()
    // Offset: 0x16BBF24
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TinyJsonDeserializer* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Serialization::TinyJsonDeserializer::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TinyJsonDeserializer*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x16BD9A0
    static void _cctor();
  }; // Pathfinding.Serialization.TinyJsonDeserializer
  #pragma pack(pop)
  static check_size<sizeof(TinyJsonDeserializer), 24 + sizeof(::System::Text::StringBuilder*)> __Pathfinding_Serialization_TinyJsonDeserializerSizeCheck;
  static_assert(sizeof(TinyJsonDeserializer) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::Deserialize
// Il2CppName: Deserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::StringW, ::System::Type*, ::Il2CppObject*)>(&Pathfinding::Serialization::TinyJsonDeserializer::Deserialize)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* populate = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonDeserializer*), "Deserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text, type, populate});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::Deserialize
// Il2CppName: Deserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Pathfinding::Serialization::TinyJsonDeserializer::*)(::System::Type*, ::Il2CppObject*)>(&Pathfinding::Serialization::TinyJsonDeserializer::Deserialize)> {
  static const MethodInfo* get() {
    static auto* tp = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* populate = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonDeserializer*), "Deserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tp, populate});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObject
// Il2CppName: DeserializeUnityObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (Pathfinding::Serialization::TinyJsonDeserializer::*)()>(&Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonDeserializer*), "DeserializeUnityObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObjectInner
// Il2CppName: DeserializeUnityObjectInner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Object* (Pathfinding::Serialization::TinyJsonDeserializer::*)()>(&Pathfinding::Serialization::TinyJsonDeserializer::DeserializeUnityObjectInner)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonDeserializer*), "DeserializeUnityObjectInner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::EatWhitespace
// Il2CppName: EatWhitespace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonDeserializer::*)()>(&Pathfinding::Serialization::TinyJsonDeserializer::EatWhitespace)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonDeserializer*), "EatWhitespace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::Eat
// Il2CppName: Eat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonDeserializer::*)(::StringW)>(&Pathfinding::Serialization::TinyJsonDeserializer::Eat)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonDeserializer*), "Eat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::EatUntil
// Il2CppName: EatUntil
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Pathfinding::Serialization::TinyJsonDeserializer::*)(::StringW, bool)>(&Pathfinding::Serialization::TinyJsonDeserializer::EatUntil)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* inString = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonDeserializer*), "EatUntil", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c, inString});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::TryEat
// Il2CppName: TryEat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pathfinding::Serialization::TinyJsonDeserializer::*)(::Il2CppChar)>(&Pathfinding::Serialization::TinyJsonDeserializer::TryEat)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("System", "Char")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonDeserializer*), "TryEat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::EatField
// Il2CppName: EatField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Pathfinding::Serialization::TinyJsonDeserializer::*)()>(&Pathfinding::Serialization::TinyJsonDeserializer::EatField)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonDeserializer*), "EatField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::SkipFieldData
// Il2CppName: SkipFieldData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pathfinding::Serialization::TinyJsonDeserializer::*)()>(&Pathfinding::Serialization::TinyJsonDeserializer::SkipFieldData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonDeserializer*), "SkipFieldData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Pathfinding::Serialization::TinyJsonDeserializer::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Pathfinding::Serialization::TinyJsonDeserializer::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pathfinding::Serialization::TinyJsonDeserializer*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
