// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RenderTexture
  class RenderTexture;
}
// Completed forward declares
// Type namespace: AmplifyBloom
namespace AmplifyBloom {
  // Forward declaring type: AmplifyBokehData
  class AmplifyBokehData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AmplifyBloom::AmplifyBokehData);
DEFINE_IL2CPP_ARG_TYPE(::AmplifyBloom::AmplifyBokehData*, "AmplifyBloom", "AmplifyBokehData");
// Type namespace: AmplifyBloom
namespace AmplifyBloom {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyBloom.AmplifyBokehData
  // [TokenAttribute] Offset: FFFFFFFF
  class AmplifyBokehData : public ::Il2CppObject {
    public:
    public:
    // UnityEngine.RenderTexture BokehRenderTexture
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::RenderTexture* BokehRenderTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // UnityEngine.Vector4[] Offsets
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::UnityEngine::Vector4> Offsets;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::Vector4>) == 0x8);
    public:
    // Get instance field reference: UnityEngine.RenderTexture BokehRenderTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& dyn_BokehRenderTexture();
    // Get instance field reference: UnityEngine.Vector4[] Offsets
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector4>& dyn_Offsets();
    // public System.Void .ctor(UnityEngine.Vector4[] offsets)
    // Offset: 0xEFE1A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AmplifyBokehData* New_ctor(::ArrayW<::UnityEngine::Vector4> offsets) {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::AmplifyBokehData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AmplifyBokehData*, creationType>(offsets)));
    }
    // public System.Void Destroy()
    // Offset: 0xEFDEFC
    void Destroy();
  }; // AmplifyBloom.AmplifyBokehData
  #pragma pack(pop)
  static check_size<sizeof(AmplifyBokehData), 24 + sizeof(::ArrayW<::UnityEngine::Vector4>)> __AmplifyBloom_AmplifyBokehDataSizeCheck;
  static_assert(sizeof(AmplifyBokehData) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AmplifyBloom::AmplifyBokehData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AmplifyBloom::AmplifyBokehData::Destroy
// Il2CppName: Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AmplifyBloom::AmplifyBokehData::*)()>(&AmplifyBloom::AmplifyBokehData::Destroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AmplifyBloom::AmplifyBokehData*), "Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
