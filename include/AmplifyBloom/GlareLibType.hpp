// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: AmplifyBloom
namespace AmplifyBloom {
  // Forward declaring type: GlareLibType
  struct GlareLibType;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::AmplifyBloom::GlareLibType, "AmplifyBloom", "GlareLibType");
// Type namespace: AmplifyBloom
namespace AmplifyBloom {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyBloom.GlareLibType
  // [TokenAttribute] Offset: FFFFFFFF
  struct GlareLibType/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: GlareLibType
    constexpr GlareLibType(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public AmplifyBloom.GlareLibType CheapLens
    static constexpr const int CheapLens = 0;
    // Get static field: static public AmplifyBloom.GlareLibType CheapLens
    static ::AmplifyBloom::GlareLibType _get_CheapLens();
    // Set static field: static public AmplifyBloom.GlareLibType CheapLens
    static void _set_CheapLens(::AmplifyBloom::GlareLibType value);
    // static field const value: static public AmplifyBloom.GlareLibType CrossScreen
    static constexpr const int CrossScreen = 1;
    // Get static field: static public AmplifyBloom.GlareLibType CrossScreen
    static ::AmplifyBloom::GlareLibType _get_CrossScreen();
    // Set static field: static public AmplifyBloom.GlareLibType CrossScreen
    static void _set_CrossScreen(::AmplifyBloom::GlareLibType value);
    // static field const value: static public AmplifyBloom.GlareLibType CrossScreenSpectral
    static constexpr const int CrossScreenSpectral = 2;
    // Get static field: static public AmplifyBloom.GlareLibType CrossScreenSpectral
    static ::AmplifyBloom::GlareLibType _get_CrossScreenSpectral();
    // Set static field: static public AmplifyBloom.GlareLibType CrossScreenSpectral
    static void _set_CrossScreenSpectral(::AmplifyBloom::GlareLibType value);
    // static field const value: static public AmplifyBloom.GlareLibType SnowCross
    static constexpr const int SnowCross = 3;
    // Get static field: static public AmplifyBloom.GlareLibType SnowCross
    static ::AmplifyBloom::GlareLibType _get_SnowCross();
    // Set static field: static public AmplifyBloom.GlareLibType SnowCross
    static void _set_SnowCross(::AmplifyBloom::GlareLibType value);
    // static field const value: static public AmplifyBloom.GlareLibType SnowCrossSpectral
    static constexpr const int SnowCrossSpectral = 4;
    // Get static field: static public AmplifyBloom.GlareLibType SnowCrossSpectral
    static ::AmplifyBloom::GlareLibType _get_SnowCrossSpectral();
    // Set static field: static public AmplifyBloom.GlareLibType SnowCrossSpectral
    static void _set_SnowCrossSpectral(::AmplifyBloom::GlareLibType value);
    // static field const value: static public AmplifyBloom.GlareLibType SunnyCross
    static constexpr const int SunnyCross = 5;
    // Get static field: static public AmplifyBloom.GlareLibType SunnyCross
    static ::AmplifyBloom::GlareLibType _get_SunnyCross();
    // Set static field: static public AmplifyBloom.GlareLibType SunnyCross
    static void _set_SunnyCross(::AmplifyBloom::GlareLibType value);
    // static field const value: static public AmplifyBloom.GlareLibType SunnyCrossSpectral
    static constexpr const int SunnyCrossSpectral = 6;
    // Get static field: static public AmplifyBloom.GlareLibType SunnyCrossSpectral
    static ::AmplifyBloom::GlareLibType _get_SunnyCrossSpectral();
    // Set static field: static public AmplifyBloom.GlareLibType SunnyCrossSpectral
    static void _set_SunnyCrossSpectral(::AmplifyBloom::GlareLibType value);
    // static field const value: static public AmplifyBloom.GlareLibType VerticalSlits
    static constexpr const int VerticalSlits = 7;
    // Get static field: static public AmplifyBloom.GlareLibType VerticalSlits
    static ::AmplifyBloom::GlareLibType _get_VerticalSlits();
    // Set static field: static public AmplifyBloom.GlareLibType VerticalSlits
    static void _set_VerticalSlits(::AmplifyBloom::GlareLibType value);
    // static field const value: static public AmplifyBloom.GlareLibType HorizontalSlits
    static constexpr const int HorizontalSlits = 8;
    // Get static field: static public AmplifyBloom.GlareLibType HorizontalSlits
    static ::AmplifyBloom::GlareLibType _get_HorizontalSlits();
    // Set static field: static public AmplifyBloom.GlareLibType HorizontalSlits
    static void _set_HorizontalSlits(::AmplifyBloom::GlareLibType value);
    // static field const value: static public AmplifyBloom.GlareLibType Custom
    static constexpr const int Custom = 9;
    // Get static field: static public AmplifyBloom.GlareLibType Custom
    static ::AmplifyBloom::GlareLibType _get_Custom();
    // Set static field: static public AmplifyBloom.GlareLibType Custom
    static void _set_Custom(::AmplifyBloom::GlareLibType value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // AmplifyBloom.GlareLibType
  #pragma pack(pop)
  static check_size<sizeof(GlareLibType), 0 + sizeof(int)> __AmplifyBloom_GlareLibTypeSizeCheck;
  static_assert(sizeof(GlareLibType) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
