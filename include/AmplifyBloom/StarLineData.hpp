// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: AmplifyBloom
namespace AmplifyBloom {
  // Forward declaring type: StarLineData
  class StarLineData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AmplifyBloom::StarLineData);
DEFINE_IL2CPP_ARG_TYPE(::AmplifyBloom::StarLineData*, "AmplifyBloom", "StarLineData");
// Type namespace: AmplifyBloom
namespace AmplifyBloom {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyBloom.StarLineData
  // [TokenAttribute] Offset: FFFFFFFF
  class StarLineData : public ::Il2CppObject {
    public:
    public:
    // System.Int32 PassCount
    // Size: 0x4
    // Offset: 0x10
    int PassCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // System.Single SampleLength
    // Size: 0x4
    // Offset: 0x14
    float SampleLength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Single Attenuation
    // Size: 0x4
    // Offset: 0x18
    float Attenuation;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // System.Single Inclination
    // Size: 0x4
    // Offset: 0x1C
    float Inclination;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: System.Int32 PassCount
    [[deprecated("Use field access instead!")]] int& dyn_PassCount();
    // Get instance field reference: System.Single SampleLength
    [[deprecated("Use field access instead!")]] float& dyn_SampleLength();
    // Get instance field reference: System.Single Attenuation
    [[deprecated("Use field access instead!")]] float& dyn_Attenuation();
    // Get instance field reference: System.Single Inclination
    [[deprecated("Use field access instead!")]] float& dyn_Inclination();
    // public System.Void .ctor()
    // Offset: 0xEFFF14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StarLineData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyBloom::StarLineData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StarLineData*, creationType>()));
    }
  }; // AmplifyBloom.StarLineData
  #pragma pack(pop)
  static check_size<sizeof(StarLineData), 28 + sizeof(float)> __AmplifyBloom_StarLineDataSizeCheck;
  static_assert(sizeof(StarLineData) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AmplifyBloom::StarLineData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
