// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: PDollarGestureRecognizer
namespace PDollarGestureRecognizer {
  // Forward declaring type: Point
  class Point;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::PDollarGestureRecognizer::Point);
DEFINE_IL2CPP_ARG_TYPE(::PDollarGestureRecognizer::Point*, "PDollarGestureRecognizer", "Point");
// Type namespace: PDollarGestureRecognizer
namespace PDollarGestureRecognizer {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: PDollarGestureRecognizer.Point
  // [TokenAttribute] Offset: FFFFFFFF
  class Point : public ::Il2CppObject {
    public:
    public:
    // public System.Single X
    // Size: 0x4
    // Offset: 0x10
    float X;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single Y
    // Size: 0x4
    // Offset: 0x14
    float Y;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single Z
    // Size: 0x4
    // Offset: 0x18
    float Z;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Int32 StrokeID
    // Size: 0x4
    // Offset: 0x1C
    int StrokeID;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.Single X
    [[deprecated("Use field access instead!")]] float& dyn_X();
    // Get instance field reference: public System.Single Y
    [[deprecated("Use field access instead!")]] float& dyn_Y();
    // Get instance field reference: public System.Single Z
    [[deprecated("Use field access instead!")]] float& dyn_Z();
    // Get instance field reference: public System.Int32 StrokeID
    [[deprecated("Use field access instead!")]] int& dyn_StrokeID();
    // public System.Void .ctor(System.Single x, System.Single y, System.Single z, System.Int32 strokeId)
    // Offset: 0x102E23C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Point* New_ctor(float x, float y, float z, int strokeId) {
      static auto ___internal__logger = ::Logger::get().WithContext("::PDollarGestureRecognizer::Point::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Point*, creationType>(x, y, z, strokeId)));
    }
  }; // PDollarGestureRecognizer.Point
  #pragma pack(pop)
  static check_size<sizeof(Point), 28 + sizeof(int)> __PDollarGestureRecognizer_PointSizeCheck;
  static_assert(sizeof(Point) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: PDollarGestureRecognizer::Point::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
