// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: Tayx.Graphy.Utils
namespace Tayx::Graphy::Utils {
  // Forward declaring type: IntString
  class IntString;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Tayx::Graphy::Utils::IntString);
DEFINE_IL2CPP_ARG_TYPE(::Tayx::Graphy::Utils::IntString*, "Tayx.Graphy.Utils", "IntString");
// Type namespace: Tayx.Graphy.Utils
namespace Tayx::Graphy::Utils {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Tayx.Graphy.Utils.IntString
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class IntString : public ::Il2CppObject {
    public:
    // Get static field: static public System.String[] positiveBuffer
    static ::ArrayW<::StringW> _get_positiveBuffer();
    // Set static field: static public System.String[] positiveBuffer
    static void _set_positiveBuffer(::ArrayW<::StringW> value);
    // Get static field: static public System.String[] negativeBuffer
    static ::ArrayW<::StringW> _get_negativeBuffer();
    // Set static field: static public System.String[] negativeBuffer
    static void _set_negativeBuffer(::ArrayW<::StringW> value);
    // static public System.Single get_maxValue()
    // Offset: 0x104A8E4
    static float get_maxValue();
    // static public System.Single get_minValue()
    // Offset: 0x104A960
    static float get_minValue();
    // static public System.Boolean get_Inited()
    // Offset: 0x104A9DC
    static bool get_Inited();
    // static public System.Void Init(System.Int32 minNegativeValue, System.Int32 maxPositiveValue)
    // Offset: 0x104AA9C
    static void Init(int minNegativeValue, int maxPositiveValue);
    // static public System.String ToStringNonAlloc(System.Int32 value)
    // Offset: 0x103F8DC
    static ::StringW ToStringNonAlloc(int value);
    // static private System.Void .cctor()
    // Offset: 0x104AD50
    static void _cctor();
  }; // Tayx.Graphy.Utils.IntString
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Tayx::Graphy::Utils::IntString::get_maxValue
// Il2CppName: get_maxValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&Tayx::Graphy::Utils::IntString::get_maxValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Utils::IntString*), "get_maxValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Utils::IntString::get_minValue
// Il2CppName: get_minValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&Tayx::Graphy::Utils::IntString::get_minValue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Utils::IntString*), "get_minValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Utils::IntString::get_Inited
// Il2CppName: get_Inited
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Tayx::Graphy::Utils::IntString::get_Inited)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Utils::IntString*), "get_Inited", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Utils::IntString::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&Tayx::Graphy::Utils::IntString::Init)> {
  static const MethodInfo* get() {
    static auto* minNegativeValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* maxPositiveValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Utils::IntString*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{minNegativeValue, maxPositiveValue});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Utils::IntString::ToStringNonAlloc
// Il2CppName: ToStringNonAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int)>(&Tayx::Graphy::Utils::IntString::ToStringNonAlloc)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Utils::IntString*), "ToStringNonAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Utils::IntString::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Tayx::Graphy::Utils::IntString::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Utils::IntString*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
