// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Tayx.Graphy.UI.IMovable
#include "Tayx/Graphy/UI/IMovable.hpp"
// Including type: Tayx.Graphy.UI.IModifiableState
#include "Tayx/Graphy/UI/IModifiableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Tayx::Graphy::Audio
namespace Tayx::Graphy::Audio {
  // Forward declaring type: AudioGraph
  class AudioGraph;
  // Forward declaring type: AudioMonitor
  class AudioMonitor;
  // Forward declaring type: AudioText
  class AudioText;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: GameObject
  class GameObject;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Text
  class Text;
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Tayx.Graphy.Audio
namespace Tayx::Graphy::Audio {
  // Forward declaring type: AudioManager
  class AudioManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Tayx::Graphy::Audio::AudioManager);
DEFINE_IL2CPP_ARG_TYPE(::Tayx::Graphy::Audio::AudioManager*, "Tayx.Graphy.Audio", "AudioManager");
// Type namespace: Tayx.Graphy.Audio
namespace Tayx::Graphy::Audio {
  // Size: 0x68
  #pragma pack(push, 1)
  // Autogenerated type: Tayx.Graphy.Audio.AudioManager
  // [TokenAttribute] Offset: FFFFFFFF
  class AudioManager : public ::UnityEngine::MonoBehaviour/*, public ::Tayx::Graphy::UI::IMovable, public ::Tayx::Graphy::UI::IModifiableState*/ {
    public:
    public:
    // private Tayx.Graphy.GraphyManager m_graphyManager
    // Size: 0x8
    // Offset: 0x18
    ::Tayx::Graphy::GraphyManager* m_graphyManager;
    // Field size check
    static_assert(sizeof(::Tayx::Graphy::GraphyManager*) == 0x8);
    // private Tayx.Graphy.Audio.AudioGraph m_audioGraph
    // Size: 0x8
    // Offset: 0x20
    ::Tayx::Graphy::Audio::AudioGraph* m_audioGraph;
    // Field size check
    static_assert(sizeof(::Tayx::Graphy::Audio::AudioGraph*) == 0x8);
    // private Tayx.Graphy.Audio.AudioMonitor m_audioMonitor
    // Size: 0x8
    // Offset: 0x28
    ::Tayx::Graphy::Audio::AudioMonitor* m_audioMonitor;
    // Field size check
    static_assert(sizeof(::Tayx::Graphy::Audio::AudioMonitor*) == 0x8);
    // private Tayx.Graphy.Audio.AudioText m_audioText
    // Size: 0x8
    // Offset: 0x30
    ::Tayx::Graphy::Audio::AudioText* m_audioText;
    // Field size check
    static_assert(sizeof(::Tayx::Graphy::Audio::AudioText*) == 0x8);
    // private UnityEngine.RectTransform m_rectTransform
    // Size: 0x8
    // Offset: 0x38
    ::UnityEngine::RectTransform* m_rectTransform;
    // Field size check
    static_assert(sizeof(::UnityEngine::RectTransform*) == 0x8);
    // private UnityEngine.GameObject m_audioGraphGameObject
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::GameObject* m_audioGraphGameObject;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private UnityEngine.UI.Text m_audioDbText
    // Size: 0x8
    // Offset: 0x48
    ::UnityEngine::UI::Text* m_audioDbText;
    // Field size check
    static_assert(sizeof(::UnityEngine::UI::Text*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.GameObject> m_childrenGameObjects
    // Size: 0x8
    // Offset: 0x50
    ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* m_childrenGameObjects;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*) == 0x8);
    // private System.Collections.Generic.List`1<UnityEngine.UI.Image> m_backgroundImages
    // Size: 0x8
    // Offset: 0x58
    ::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>* m_backgroundImages;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>*) == 0x8);
    // private Tayx.Graphy.GraphyManager/ModuleState m_previousModuleState
    // Size: 0x4
    // Offset: 0x60
    ::Tayx::Graphy::GraphyManager::ModuleState m_previousModuleState;
    // Field size check
    static_assert(sizeof(::Tayx::Graphy::GraphyManager::ModuleState) == 0x4);
    // private Tayx.Graphy.GraphyManager/ModuleState m_currentModuleState
    // Size: 0x4
    // Offset: 0x64
    ::Tayx::Graphy::GraphyManager::ModuleState m_currentModuleState;
    // Field size check
    static_assert(sizeof(::Tayx::Graphy::GraphyManager::ModuleState) == 0x4);
    public:
    // Creating interface conversion operator: operator ::Tayx::Graphy::UI::IMovable
    operator ::Tayx::Graphy::UI::IMovable() noexcept {
      return *reinterpret_cast<::Tayx::Graphy::UI::IMovable*>(this);
    }
    // Creating interface conversion operator: operator ::Tayx::Graphy::UI::IModifiableState
    operator ::Tayx::Graphy::UI::IModifiableState() noexcept {
      return *reinterpret_cast<::Tayx::Graphy::UI::IModifiableState*>(this);
    }
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private Tayx.Graphy.GraphyManager m_graphyManager
    [[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager*& dyn_m_graphyManager();
    // Get instance field reference: private Tayx.Graphy.Audio.AudioGraph m_audioGraph
    [[deprecated("Use field access instead!")]] ::Tayx::Graphy::Audio::AudioGraph*& dyn_m_audioGraph();
    // Get instance field reference: private Tayx.Graphy.Audio.AudioMonitor m_audioMonitor
    [[deprecated("Use field access instead!")]] ::Tayx::Graphy::Audio::AudioMonitor*& dyn_m_audioMonitor();
    // Get instance field reference: private Tayx.Graphy.Audio.AudioText m_audioText
    [[deprecated("Use field access instead!")]] ::Tayx::Graphy::Audio::AudioText*& dyn_m_audioText();
    // Get instance field reference: private UnityEngine.RectTransform m_rectTransform
    [[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& dyn_m_rectTransform();
    // Get instance field reference: private UnityEngine.GameObject m_audioGraphGameObject
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_m_audioGraphGameObject();
    // Get instance field reference: private UnityEngine.UI.Text m_audioDbText
    [[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& dyn_m_audioDbText();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.GameObject> m_childrenGameObjects
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& dyn_m_childrenGameObjects();
    // Get instance field reference: private System.Collections.Generic.List`1<UnityEngine.UI.Image> m_backgroundImages
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UI::Image*>*& dyn_m_backgroundImages();
    // Get instance field reference: private Tayx.Graphy.GraphyManager/ModuleState m_previousModuleState
    [[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& dyn_m_previousModuleState();
    // Get instance field reference: private Tayx.Graphy.GraphyManager/ModuleState m_currentModuleState
    [[deprecated("Use field access instead!")]] ::Tayx::Graphy::GraphyManager::ModuleState& dyn_m_currentModuleState();
    // private System.Void Awake()
    // Offset: 0x1041F30
    void Awake();
    // private System.Void Start()
    // Offset: 0x1042364
    void Start();
    // public System.Void SetPosition(Tayx.Graphy.GraphyManager/ModulePosition newModulePosition)
    // Offset: 0x1042550
    void SetPosition(::Tayx::Graphy::GraphyManager::ModulePosition newModulePosition);
    // public System.Void SetState(Tayx.Graphy.GraphyManager/ModuleState state)
    // Offset: 0x104292C
    void SetState(::Tayx::Graphy::GraphyManager::ModuleState state);
    // public System.Void RestorePreviousState()
    // Offset: 0x1042D50
    void RestorePreviousState();
    // public System.Void UpdateParameters()
    // Offset: 0x1042368
    void UpdateParameters();
    // private System.Void Init()
    // Offset: 0x1041F34
    void Init();
    // private System.Void SetGraphActive(System.Boolean active)
    // Offset: 0x1042C00
    void SetGraphActive(bool active);
    // public System.Void .ctor()
    // Offset: 0x1042ED0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AudioManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Tayx::Graphy::Audio::AudioManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AudioManager*, creationType>()));
    }
  }; // Tayx.Graphy.Audio.AudioManager
  #pragma pack(pop)
  static check_size<sizeof(AudioManager), 100 + sizeof(::Tayx::Graphy::GraphyManager::ModuleState)> __Tayx_Graphy_Audio_AudioManagerSizeCheck;
  static_assert(sizeof(AudioManager) == 0x68);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Tayx::Graphy::Audio::AudioManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tayx::Graphy::Audio::AudioManager::*)()>(&Tayx::Graphy::Audio::AudioManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Audio::AudioManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Audio::AudioManager::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tayx::Graphy::Audio::AudioManager::*)()>(&Tayx::Graphy::Audio::AudioManager::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Audio::AudioManager*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Audio::AudioManager::SetPosition
// Il2CppName: SetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tayx::Graphy::Audio::AudioManager::*)(::Tayx::Graphy::GraphyManager::ModulePosition)>(&Tayx::Graphy::Audio::AudioManager::SetPosition)> {
  static const MethodInfo* get() {
    static auto* newModulePosition = &::il2cpp_utils::GetClassFromName("Tayx.Graphy", "GraphyManager/ModulePosition")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Audio::AudioManager*), "SetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newModulePosition});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Audio::AudioManager::SetState
// Il2CppName: SetState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tayx::Graphy::Audio::AudioManager::*)(::Tayx::Graphy::GraphyManager::ModuleState)>(&Tayx::Graphy::Audio::AudioManager::SetState)> {
  static const MethodInfo* get() {
    static auto* state = &::il2cpp_utils::GetClassFromName("Tayx.Graphy", "GraphyManager/ModuleState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Audio::AudioManager*), "SetState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{state});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Audio::AudioManager::RestorePreviousState
// Il2CppName: RestorePreviousState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tayx::Graphy::Audio::AudioManager::*)()>(&Tayx::Graphy::Audio::AudioManager::RestorePreviousState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Audio::AudioManager*), "RestorePreviousState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Audio::AudioManager::UpdateParameters
// Il2CppName: UpdateParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tayx::Graphy::Audio::AudioManager::*)()>(&Tayx::Graphy::Audio::AudioManager::UpdateParameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Audio::AudioManager*), "UpdateParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Audio::AudioManager::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tayx::Graphy::Audio::AudioManager::*)()>(&Tayx::Graphy::Audio::AudioManager::Init)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Audio::AudioManager*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Audio::AudioManager::SetGraphActive
// Il2CppName: SetGraphActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tayx::Graphy::Audio::AudioManager::*)(bool)>(&Tayx::Graphy::Audio::AudioManager::SetGraphActive)> {
  static const MethodInfo* get() {
    static auto* active = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Tayx::Graphy::Audio::AudioManager*), "SetGraphActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{active});
  }
};
// Writing MetadataGetter for method: Tayx::Graphy::Audio::AudioManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
