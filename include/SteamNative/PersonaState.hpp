// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: SteamNative
namespace SteamNative {
  // Forward declaring type: PersonaState
  struct PersonaState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::SteamNative::PersonaState, "SteamNative", "PersonaState");
// Type namespace: SteamNative
namespace SteamNative {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: SteamNative.PersonaState
  // [TokenAttribute] Offset: FFFFFFFF
  struct PersonaState/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: PersonaState
    constexpr PersonaState(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public SteamNative.PersonaState Offline
    static constexpr const int Offline = 0;
    // Get static field: static public SteamNative.PersonaState Offline
    static ::SteamNative::PersonaState _get_Offline();
    // Set static field: static public SteamNative.PersonaState Offline
    static void _set_Offline(::SteamNative::PersonaState value);
    // static field const value: static public SteamNative.PersonaState Online
    static constexpr const int Online = 1;
    // Get static field: static public SteamNative.PersonaState Online
    static ::SteamNative::PersonaState _get_Online();
    // Set static field: static public SteamNative.PersonaState Online
    static void _set_Online(::SteamNative::PersonaState value);
    // static field const value: static public SteamNative.PersonaState Busy
    static constexpr const int Busy = 2;
    // Get static field: static public SteamNative.PersonaState Busy
    static ::SteamNative::PersonaState _get_Busy();
    // Set static field: static public SteamNative.PersonaState Busy
    static void _set_Busy(::SteamNative::PersonaState value);
    // static field const value: static public SteamNative.PersonaState Away
    static constexpr const int Away = 3;
    // Get static field: static public SteamNative.PersonaState Away
    static ::SteamNative::PersonaState _get_Away();
    // Set static field: static public SteamNative.PersonaState Away
    static void _set_Away(::SteamNative::PersonaState value);
    // static field const value: static public SteamNative.PersonaState Snooze
    static constexpr const int Snooze = 4;
    // Get static field: static public SteamNative.PersonaState Snooze
    static ::SteamNative::PersonaState _get_Snooze();
    // Set static field: static public SteamNative.PersonaState Snooze
    static void _set_Snooze(::SteamNative::PersonaState value);
    // static field const value: static public SteamNative.PersonaState LookingToTrade
    static constexpr const int LookingToTrade = 5;
    // Get static field: static public SteamNative.PersonaState LookingToTrade
    static ::SteamNative::PersonaState _get_LookingToTrade();
    // Set static field: static public SteamNative.PersonaState LookingToTrade
    static void _set_LookingToTrade(::SteamNative::PersonaState value);
    // static field const value: static public SteamNative.PersonaState LookingToPlay
    static constexpr const int LookingToPlay = 6;
    // Get static field: static public SteamNative.PersonaState LookingToPlay
    static ::SteamNative::PersonaState _get_LookingToPlay();
    // Set static field: static public SteamNative.PersonaState LookingToPlay
    static void _set_LookingToPlay(::SteamNative::PersonaState value);
    // static field const value: static public SteamNative.PersonaState Max
    static constexpr const int Max = 7;
    // Get static field: static public SteamNative.PersonaState Max
    static ::SteamNative::PersonaState _get_Max();
    // Set static field: static public SteamNative.PersonaState Max
    static void _set_Max(::SteamNative::PersonaState value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // SteamNative.PersonaState
  #pragma pack(pop)
  static check_size<sizeof(PersonaState), 0 + sizeof(int)> __SteamNative_PersonaStateSizeCheck;
  static_assert(sizeof(PersonaState) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
