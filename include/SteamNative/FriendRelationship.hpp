// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: SteamNative
namespace SteamNative {
  // Forward declaring type: FriendRelationship
  struct FriendRelationship;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::SteamNative::FriendRelationship, "SteamNative", "FriendRelationship");
// Type namespace: SteamNative
namespace SteamNative {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: SteamNative.FriendRelationship
  // [TokenAttribute] Offset: FFFFFFFF
  struct FriendRelationship/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: FriendRelationship
    constexpr FriendRelationship(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public SteamNative.FriendRelationship None
    static constexpr const int None = 0;
    // Get static field: static public SteamNative.FriendRelationship None
    static ::SteamNative::FriendRelationship _get_None();
    // Set static field: static public SteamNative.FriendRelationship None
    static void _set_None(::SteamNative::FriendRelationship value);
    // static field const value: static public SteamNative.FriendRelationship Blocked
    static constexpr const int Blocked = 1;
    // Get static field: static public SteamNative.FriendRelationship Blocked
    static ::SteamNative::FriendRelationship _get_Blocked();
    // Set static field: static public SteamNative.FriendRelationship Blocked
    static void _set_Blocked(::SteamNative::FriendRelationship value);
    // static field const value: static public SteamNative.FriendRelationship RequestRecipient
    static constexpr const int RequestRecipient = 2;
    // Get static field: static public SteamNative.FriendRelationship RequestRecipient
    static ::SteamNative::FriendRelationship _get_RequestRecipient();
    // Set static field: static public SteamNative.FriendRelationship RequestRecipient
    static void _set_RequestRecipient(::SteamNative::FriendRelationship value);
    // static field const value: static public SteamNative.FriendRelationship Friend
    static constexpr const int Friend = 3;
    // Get static field: static public SteamNative.FriendRelationship Friend
    static ::SteamNative::FriendRelationship _get_Friend();
    // Set static field: static public SteamNative.FriendRelationship Friend
    static void _set_Friend(::SteamNative::FriendRelationship value);
    // static field const value: static public SteamNative.FriendRelationship RequestInitiator
    static constexpr const int RequestInitiator = 4;
    // Get static field: static public SteamNative.FriendRelationship RequestInitiator
    static ::SteamNative::FriendRelationship _get_RequestInitiator();
    // Set static field: static public SteamNative.FriendRelationship RequestInitiator
    static void _set_RequestInitiator(::SteamNative::FriendRelationship value);
    // static field const value: static public SteamNative.FriendRelationship Ignored
    static constexpr const int Ignored = 5;
    // Get static field: static public SteamNative.FriendRelationship Ignored
    static ::SteamNative::FriendRelationship _get_Ignored();
    // Set static field: static public SteamNative.FriendRelationship Ignored
    static void _set_Ignored(::SteamNative::FriendRelationship value);
    // static field const value: static public SteamNative.FriendRelationship IgnoredFriend
    static constexpr const int IgnoredFriend = 6;
    // Get static field: static public SteamNative.FriendRelationship IgnoredFriend
    static ::SteamNative::FriendRelationship _get_IgnoredFriend();
    // Set static field: static public SteamNative.FriendRelationship IgnoredFriend
    static void _set_IgnoredFriend(::SteamNative::FriendRelationship value);
    // static field const value: static public SteamNative.FriendRelationship Suggested_DEPRECATED
    static constexpr const int Suggested_DEPRECATED = 7;
    // Get static field: static public SteamNative.FriendRelationship Suggested_DEPRECATED
    static ::SteamNative::FriendRelationship _get_Suggested_DEPRECATED();
    // Set static field: static public SteamNative.FriendRelationship Suggested_DEPRECATED
    static void _set_Suggested_DEPRECATED(::SteamNative::FriendRelationship value);
    // static field const value: static public SteamNative.FriendRelationship Max
    static constexpr const int Max = 8;
    // Get static field: static public SteamNative.FriendRelationship Max
    static ::SteamNative::FriendRelationship _get_Max();
    // Set static field: static public SteamNative.FriendRelationship Max
    static void _set_Max(::SteamNative::FriendRelationship value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // SteamNative.FriendRelationship
  #pragma pack(pop)
  static check_size<sizeof(FriendRelationship), 0 + sizeof(int)> __SteamNative_FriendRelationshipSizeCheck;
  static_assert(sizeof(FriendRelationship) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
