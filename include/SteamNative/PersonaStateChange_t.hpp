// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: SteamNative
namespace SteamNative {
  // Forward declaring type: PersonaStateChange_t
  struct PersonaStateChange_t;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::SteamNative::PersonaStateChange_t, "SteamNative", "PersonaStateChange_t");
// Type namespace: SteamNative
namespace SteamNative {
  // Size: 0xC
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: SteamNative.PersonaStateChange_t
  // [TokenAttribute] Offset: FFFFFFFF
  struct PersonaStateChange_t/*, public ::System::ValueType*/ {
    public:
    public:
    // System.UInt64 SteamID
    // Size: 0x8
    // Offset: 0x0
    uint64_t SteamID;
    // Field size check
    static_assert(sizeof(uint64_t) == 0x8);
    // System.Int32 ChangeFlags
    // Size: 0x4
    // Offset: 0x8
    int ChangeFlags;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: PersonaStateChange_t
    constexpr PersonaStateChange_t(uint64_t SteamID_ = {}, int ChangeFlags_ = {}) noexcept : SteamID{SteamID_}, ChangeFlags{ChangeFlags_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: System.UInt64 SteamID
    [[deprecated("Use field access instead!")]] uint64_t& dyn_SteamID();
    // Get instance field reference: System.Int32 ChangeFlags
    [[deprecated("Use field access instead!")]] int& dyn_ChangeFlags();
  }; // SteamNative.PersonaStateChange_t
  #pragma pack(pop)
  static check_size<sizeof(PersonaStateChange_t), 8 + sizeof(int)> __SteamNative_PersonaStateChange_tSizeCheck;
  static_assert(sizeof(PersonaStateChange_t) == 0xC);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
