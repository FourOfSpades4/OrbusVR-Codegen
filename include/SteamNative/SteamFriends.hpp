// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: SteamNative.Platform
#include "SteamNative/Platform.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: SteamNative
namespace SteamNative {
  // Forward declaring type: CSteamID
  struct CSteamID;
  // Forward declaring type: FriendGameInfo_t
  struct FriendGameInfo_t;
  // Forward declaring type: ChatEntryType
  struct ChatEntryType;
  // Forward declaring type: PersonaState
  struct PersonaState;
  // Forward declaring type: FriendRelationship
  struct FriendRelationship;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
// Type namespace: SteamNative
namespace SteamNative {
  // Forward declaring type: SteamFriends
  class SteamFriends;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::SteamNative::SteamFriends);
DEFINE_IL2CPP_ARG_TYPE(::SteamNative::SteamFriends*, "SteamNative", "SteamFriends");
// Type namespace: SteamNative
namespace SteamNative {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: SteamNative.SteamFriends
  // [TokenAttribute] Offset: FFFFFFFF
  class SteamFriends : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // SteamNative.Platform/Interface platform
    // Size: 0x8
    // Offset: 0x10
    ::SteamNative::Platform::Interface* platform;
    // Field size check
    static_assert(sizeof(::SteamNative::Platform::Interface*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Creating conversion operator: operator ::SteamNative::Platform::Interface*
    constexpr operator ::SteamNative::Platform::Interface*() const noexcept {
      return platform;
    }
    // Get instance field reference: SteamNative.Platform/Interface platform
    [[deprecated("Use field access instead!")]] ::SteamNative::Platform::Interface*& dyn_platform();
    // public System.Void Dispose()
    // Offset: 0x28465BC
    void Dispose();
    // public System.UInt64 GetFriendByIndex(System.Int32 iFriend, System.Int32 iFriendFlags)
    // Offset: 0x28439E8
    uint64_t GetFriendByIndex(int iFriend, int iFriendFlags);
    // public System.Int32 GetFriendCount(System.Int32 iFriendFlags)
    // Offset: 0x2843924
    int GetFriendCount(int iFriendFlags);
    // public System.Boolean GetFriendGamePlayed(SteamNative.CSteamID steamIDFriend, ref SteamNative.FriendGameInfo_t pFriendGameInfo)
    // Offset: 0x2845C1C
    bool GetFriendGamePlayed(::SteamNative::CSteamID steamIDFriend, ByRef<::SteamNative::FriendGameInfo_t> pFriendGameInfo);
    // public System.Int32 GetFriendMessage(SteamNative.CSteamID steamIDFriend, System.Int32 iMessageID, System.IntPtr pvData, System.Int32 cubData, out SteamNative.ChatEntryType peChatEntryType)
    // Offset: 0x28426C0
    int GetFriendMessage(::SteamNative::CSteamID steamIDFriend, int iMessageID, ::System::IntPtr pvData, int cubData, ByRef<::SteamNative::ChatEntryType> peChatEntryType);
    // public System.String GetFriendPersonaName(SteamNative.CSteamID steamIDFriend)
    // Offset: 0x2845990
    ::StringW GetFriendPersonaName(::SteamNative::CSteamID steamIDFriend);
    // public SteamNative.PersonaState GetFriendPersonaState(SteamNative.CSteamID steamIDFriend)
    // Offset: 0x2845B54
    ::SteamNative::PersonaState GetFriendPersonaState(::SteamNative::CSteamID steamIDFriend);
    // public SteamNative.FriendRelationship GetFriendRelationship(SteamNative.CSteamID steamIDFriend)
    // Offset: 0x2845A8C
    ::SteamNative::FriendRelationship GetFriendRelationship(::SteamNative::CSteamID steamIDFriend);
    // public System.Int32 GetLargeFriendAvatar(SteamNative.CSteamID steamIDFriend)
    // Offset: 0x2843DE4
    int GetLargeFriendAvatar(::SteamNative::CSteamID steamIDFriend);
    // public System.Int32 GetMediumFriendAvatar(SteamNative.CSteamID steamIDFriend)
    // Offset: 0x2843D1C
    int GetMediumFriendAvatar(::SteamNative::CSteamID steamIDFriend);
    // public System.Int32 GetSmallFriendAvatar(SteamNative.CSteamID steamIDFriend)
    // Offset: 0x2843C54
    int GetSmallFriendAvatar(::SteamNative::CSteamID steamIDFriend);
    // public System.Void RequestFriendRichPresence(SteamNative.CSteamID steamIDFriend)
    // Offset: 0x2845CEC
    void RequestFriendRichPresence(::SteamNative::CSteamID steamIDFriend);
  }; // SteamNative.SteamFriends
  #pragma pack(pop)
  static check_size<sizeof(SteamFriends), 16 + sizeof(::SteamNative::Platform::Interface*)> __SteamNative_SteamFriendsSizeCheck;
  static_assert(sizeof(SteamFriends) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: SteamNative::SteamFriends::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SteamNative::SteamFriends::*)()>(&SteamNative::SteamFriends::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SteamNative::SteamFriends::GetFriendByIndex
// Il2CppName: GetFriendByIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (SteamNative::SteamFriends::*)(int, int)>(&SteamNative::SteamFriends::GetFriendByIndex)> {
  static const MethodInfo* get() {
    static auto* iFriend = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* iFriendFlags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "GetFriendByIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{iFriend, iFriendFlags});
  }
};
// Writing MetadataGetter for method: SteamNative::SteamFriends::GetFriendCount
// Il2CppName: GetFriendCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SteamNative::SteamFriends::*)(int)>(&SteamNative::SteamFriends::GetFriendCount)> {
  static const MethodInfo* get() {
    static auto* iFriendFlags = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "GetFriendCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{iFriendFlags});
  }
};
// Writing MetadataGetter for method: SteamNative::SteamFriends::GetFriendGamePlayed
// Il2CppName: GetFriendGamePlayed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SteamNative::SteamFriends::*)(::SteamNative::CSteamID, ByRef<::SteamNative::FriendGameInfo_t>)>(&SteamNative::SteamFriends::GetFriendGamePlayed)> {
  static const MethodInfo* get() {
    static auto* steamIDFriend = &::il2cpp_utils::GetClassFromName("SteamNative", "CSteamID")->byval_arg;
    static auto* pFriendGameInfo = &::il2cpp_utils::GetClassFromName("SteamNative", "FriendGameInfo_t")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "GetFriendGamePlayed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{steamIDFriend, pFriendGameInfo});
  }
};
// Writing MetadataGetter for method: SteamNative::SteamFriends::GetFriendMessage
// Il2CppName: GetFriendMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SteamNative::SteamFriends::*)(::SteamNative::CSteamID, int, ::System::IntPtr, int, ByRef<::SteamNative::ChatEntryType>)>(&SteamNative::SteamFriends::GetFriendMessage)> {
  static const MethodInfo* get() {
    static auto* steamIDFriend = &::il2cpp_utils::GetClassFromName("SteamNative", "CSteamID")->byval_arg;
    static auto* iMessageID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* pvData = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* cubData = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* peChatEntryType = &::il2cpp_utils::GetClassFromName("SteamNative", "ChatEntryType")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "GetFriendMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{steamIDFriend, iMessageID, pvData, cubData, peChatEntryType});
  }
};
// Writing MetadataGetter for method: SteamNative::SteamFriends::GetFriendPersonaName
// Il2CppName: GetFriendPersonaName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (SteamNative::SteamFriends::*)(::SteamNative::CSteamID)>(&SteamNative::SteamFriends::GetFriendPersonaName)> {
  static const MethodInfo* get() {
    static auto* steamIDFriend = &::il2cpp_utils::GetClassFromName("SteamNative", "CSteamID")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "GetFriendPersonaName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{steamIDFriend});
  }
};
// Writing MetadataGetter for method: SteamNative::SteamFriends::GetFriendPersonaState
// Il2CppName: GetFriendPersonaState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::SteamNative::PersonaState (SteamNative::SteamFriends::*)(::SteamNative::CSteamID)>(&SteamNative::SteamFriends::GetFriendPersonaState)> {
  static const MethodInfo* get() {
    static auto* steamIDFriend = &::il2cpp_utils::GetClassFromName("SteamNative", "CSteamID")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "GetFriendPersonaState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{steamIDFriend});
  }
};
// Writing MetadataGetter for method: SteamNative::SteamFriends::GetFriendRelationship
// Il2CppName: GetFriendRelationship
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::SteamNative::FriendRelationship (SteamNative::SteamFriends::*)(::SteamNative::CSteamID)>(&SteamNative::SteamFriends::GetFriendRelationship)> {
  static const MethodInfo* get() {
    static auto* steamIDFriend = &::il2cpp_utils::GetClassFromName("SteamNative", "CSteamID")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "GetFriendRelationship", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{steamIDFriend});
  }
};
// Writing MetadataGetter for method: SteamNative::SteamFriends::GetLargeFriendAvatar
// Il2CppName: GetLargeFriendAvatar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SteamNative::SteamFriends::*)(::SteamNative::CSteamID)>(&SteamNative::SteamFriends::GetLargeFriendAvatar)> {
  static const MethodInfo* get() {
    static auto* steamIDFriend = &::il2cpp_utils::GetClassFromName("SteamNative", "CSteamID")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "GetLargeFriendAvatar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{steamIDFriend});
  }
};
// Writing MetadataGetter for method: SteamNative::SteamFriends::GetMediumFriendAvatar
// Il2CppName: GetMediumFriendAvatar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SteamNative::SteamFriends::*)(::SteamNative::CSteamID)>(&SteamNative::SteamFriends::GetMediumFriendAvatar)> {
  static const MethodInfo* get() {
    static auto* steamIDFriend = &::il2cpp_utils::GetClassFromName("SteamNative", "CSteamID")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "GetMediumFriendAvatar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{steamIDFriend});
  }
};
// Writing MetadataGetter for method: SteamNative::SteamFriends::GetSmallFriendAvatar
// Il2CppName: GetSmallFriendAvatar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SteamNative::SteamFriends::*)(::SteamNative::CSteamID)>(&SteamNative::SteamFriends::GetSmallFriendAvatar)> {
  static const MethodInfo* get() {
    static auto* steamIDFriend = &::il2cpp_utils::GetClassFromName("SteamNative", "CSteamID")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "GetSmallFriendAvatar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{steamIDFriend});
  }
};
// Writing MetadataGetter for method: SteamNative::SteamFriends::RequestFriendRichPresence
// Il2CppName: RequestFriendRichPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SteamNative::SteamFriends::*)(::SteamNative::CSteamID)>(&SteamNative::SteamFriends::RequestFriendRichPresence)> {
  static const MethodInfo* get() {
    static auto* steamIDFriend = &::il2cpp_utils::GetClassFromName("SteamNative", "CSteamID")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(SteamNative::SteamFriends*), "RequestFriendRichPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{steamIDFriend});
  }
};
