// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: SteamNative
namespace SteamNative {
  // Forward declaring type: VoiceResult
  struct VoiceResult;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::SteamNative::VoiceResult, "SteamNative", "VoiceResult");
// Type namespace: SteamNative
namespace SteamNative {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: SteamNative.VoiceResult
  // [TokenAttribute] Offset: FFFFFFFF
  struct VoiceResult/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: VoiceResult
    constexpr VoiceResult(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public SteamNative.VoiceResult OK
    static constexpr const int OK = 0;
    // Get static field: static public SteamNative.VoiceResult OK
    static ::SteamNative::VoiceResult _get_OK();
    // Set static field: static public SteamNative.VoiceResult OK
    static void _set_OK(::SteamNative::VoiceResult value);
    // static field const value: static public SteamNative.VoiceResult NotInitialized
    static constexpr const int NotInitialized = 1;
    // Get static field: static public SteamNative.VoiceResult NotInitialized
    static ::SteamNative::VoiceResult _get_NotInitialized();
    // Set static field: static public SteamNative.VoiceResult NotInitialized
    static void _set_NotInitialized(::SteamNative::VoiceResult value);
    // static field const value: static public SteamNative.VoiceResult NotRecording
    static constexpr const int NotRecording = 2;
    // Get static field: static public SteamNative.VoiceResult NotRecording
    static ::SteamNative::VoiceResult _get_NotRecording();
    // Set static field: static public SteamNative.VoiceResult NotRecording
    static void _set_NotRecording(::SteamNative::VoiceResult value);
    // static field const value: static public SteamNative.VoiceResult NoData
    static constexpr const int NoData = 3;
    // Get static field: static public SteamNative.VoiceResult NoData
    static ::SteamNative::VoiceResult _get_NoData();
    // Set static field: static public SteamNative.VoiceResult NoData
    static void _set_NoData(::SteamNative::VoiceResult value);
    // static field const value: static public SteamNative.VoiceResult BufferTooSmall
    static constexpr const int BufferTooSmall = 4;
    // Get static field: static public SteamNative.VoiceResult BufferTooSmall
    static ::SteamNative::VoiceResult _get_BufferTooSmall();
    // Set static field: static public SteamNative.VoiceResult BufferTooSmall
    static void _set_BufferTooSmall(::SteamNative::VoiceResult value);
    // static field const value: static public SteamNative.VoiceResult DataCorrupted
    static constexpr const int DataCorrupted = 5;
    // Get static field: static public SteamNative.VoiceResult DataCorrupted
    static ::SteamNative::VoiceResult _get_DataCorrupted();
    // Set static field: static public SteamNative.VoiceResult DataCorrupted
    static void _set_DataCorrupted(::SteamNative::VoiceResult value);
    // static field const value: static public SteamNative.VoiceResult Restricted
    static constexpr const int Restricted = 6;
    // Get static field: static public SteamNative.VoiceResult Restricted
    static ::SteamNative::VoiceResult _get_Restricted();
    // Set static field: static public SteamNative.VoiceResult Restricted
    static void _set_Restricted(::SteamNative::VoiceResult value);
    // static field const value: static public SteamNative.VoiceResult UnsupportedCodec
    static constexpr const int UnsupportedCodec = 7;
    // Get static field: static public SteamNative.VoiceResult UnsupportedCodec
    static ::SteamNative::VoiceResult _get_UnsupportedCodec();
    // Set static field: static public SteamNative.VoiceResult UnsupportedCodec
    static void _set_UnsupportedCodec(::SteamNative::VoiceResult value);
    // static field const value: static public SteamNative.VoiceResult ReceiverOutOfDate
    static constexpr const int ReceiverOutOfDate = 8;
    // Get static field: static public SteamNative.VoiceResult ReceiverOutOfDate
    static ::SteamNative::VoiceResult _get_ReceiverOutOfDate();
    // Set static field: static public SteamNative.VoiceResult ReceiverOutOfDate
    static void _set_ReceiverOutOfDate(::SteamNative::VoiceResult value);
    // static field const value: static public SteamNative.VoiceResult ReceiverDidNotAnswer
    static constexpr const int ReceiverDidNotAnswer = 9;
    // Get static field: static public SteamNative.VoiceResult ReceiverDidNotAnswer
    static ::SteamNative::VoiceResult _get_ReceiverDidNotAnswer();
    // Set static field: static public SteamNative.VoiceResult ReceiverDidNotAnswer
    static void _set_ReceiverDidNotAnswer(::SteamNative::VoiceResult value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // SteamNative.VoiceResult
  #pragma pack(pop)
  static check_size<sizeof(VoiceResult), 0 + sizeof(int)> __SteamNative_VoiceResultSizeCheck;
  static_assert(sizeof(VoiceResult) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
