// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ProceduralGridMover
#include "GlobalNamespace/ProceduralGridMover.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0*, "", "ProceduralGridMover/<>c__DisplayClass12_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: ProceduralGridMover/<>c__DisplayClass12_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ACD1D0
  class ProceduralGridMover::$$c__DisplayClass12_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Collections.IEnumerator ie
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::IEnumerator* ie;
    // Field size check
    static_assert(sizeof(::System::Collections::IEnumerator*) == 0x8);
    // public ProceduralGridMover <>4__this
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::ProceduralGridMover* $$4__this;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::ProceduralGridMover*) == 0x8);
    public:
    // Get instance field reference: public System.Collections.IEnumerator ie
    [[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& dyn_ie();
    // Get instance field reference: public ProceduralGridMover <>4__this
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::ProceduralGridMover*& dyn_$$4__this();
    // public System.Void .ctor()
    // Offset: 0xE1DAC0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ProceduralGridMover::$$c__DisplayClass12_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ProceduralGridMover::$$c__DisplayClass12_0*, creationType>()));
    }
    // System.Boolean <UpdateGraph>b__0(System.Boolean force)
    // Offset: 0xE1DB78
    bool $UpdateGraph$b__0(bool force);
  }; // ProceduralGridMover/<>c__DisplayClass12_0
  #pragma pack(pop)
  static check_size<sizeof(ProceduralGridMover::$$c__DisplayClass12_0), 24 + sizeof(::GlobalNamespace::ProceduralGridMover*)> __GlobalNamespace_ProceduralGridMover_$$c__DisplayClass12_0SizeCheck;
  static_assert(sizeof(ProceduralGridMover::$$c__DisplayClass12_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0::$UpdateGraph$b__0
// Il2CppName: <UpdateGraph>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0::*)(bool)>(&GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0::$UpdateGraph$b__0)> {
  static const MethodInfo* get() {
    static auto* force = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ProceduralGridMover::$$c__DisplayClass12_0*), "<UpdateGraph>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{force});
  }
};
