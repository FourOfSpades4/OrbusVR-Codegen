// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: vx_req_base_t
  class vx_req_base_t;
  // Forward declaring type: vx_attempt_stun
  struct vx_attempt_stun;
  // Forward declaring type: vx_connector_mode
  struct vx_connector_mode;
  // Forward declaring type: vx_session_handle_type
  struct vx_session_handle_type;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: vx_req_connector_create_t
  class vx_req_connector_create_t;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::vx_req_connector_create_t);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::vx_req_connector_create_t*, "", "vx_req_connector_create_t");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: vx_req_connector_create_t
  // [TokenAttribute] Offset: FFFFFFFF
  class vx_req_connector_create_t : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated("Use field access instead!")]] bool& dyn_swigCMemOwn();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0x224AEAC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_req_connector_create_t* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_req_connector_create_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_req_connector_create_t*, creationType>(cPtr, cMemoryOwn)));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(vx_req_connector_create_t obj)
    // Offset: 0x224AF10
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::GlobalNamespace::vx_req_connector_create_t* obj);
    // public System.Void Dispose()
    // Offset: 0x224B000
    void Dispose();
    // public System.Void set_base_(vx_req_base_t value)
    // Offset: 0x224B248
    void set_base_(::GlobalNamespace::vx_req_base_t* value);
    // public vx_req_base_t get_base_()
    // Offset: 0x224B198
    ::GlobalNamespace::vx_req_base_t* get_base_();
    // public System.Void set_client_name(System.String value)
    // Offset: 0x224B2DC
    void set_client_name(::StringW value);
    // public System.String get_client_name()
    // Offset: 0x224B35C
    ::StringW get_client_name();
    // public System.Void set_acct_mgmt_server(System.String value)
    // Offset: 0x224B3CC
    void set_acct_mgmt_server(::StringW value);
    // public System.String get_acct_mgmt_server()
    // Offset: 0x224B44C
    ::StringW get_acct_mgmt_server();
    // public System.Void set_minimum_port(System.Int32 value)
    // Offset: 0x224B4BC
    void set_minimum_port(int value);
    // public System.Int32 get_minimum_port()
    // Offset: 0x224B53C
    int get_minimum_port();
    // public System.Void set_maximum_port(System.Int32 value)
    // Offset: 0x224B5AC
    void set_maximum_port(int value);
    // public System.Int32 get_maximum_port()
    // Offset: 0x224B62C
    int get_maximum_port();
    // public System.Void set_attempt_stun(vx_attempt_stun value)
    // Offset: 0x224B69C
    void set_attempt_stun(::GlobalNamespace::vx_attempt_stun value);
    // public vx_attempt_stun get_attempt_stun()
    // Offset: 0x224B71C
    ::GlobalNamespace::vx_attempt_stun get_attempt_stun();
    // public System.Void set_mode(vx_connector_mode value)
    // Offset: 0x224B78C
    void set_mode(::GlobalNamespace::vx_connector_mode value);
    // public vx_connector_mode get_mode()
    // Offset: 0x224B80C
    ::GlobalNamespace::vx_connector_mode get_mode();
    // public System.Void set_log_folder(System.String value)
    // Offset: 0x224B87C
    void set_log_folder(::StringW value);
    // public System.String get_log_folder()
    // Offset: 0x224B8FC
    ::StringW get_log_folder();
    // public System.Void set_log_filename_prefix(System.String value)
    // Offset: 0x224B96C
    void set_log_filename_prefix(::StringW value);
    // public System.String get_log_filename_prefix()
    // Offset: 0x224B9EC
    ::StringW get_log_filename_prefix();
    // public System.Void set_log_filename_suffix(System.String value)
    // Offset: 0x224BA5C
    void set_log_filename_suffix(::StringW value);
    // public System.String get_log_filename_suffix()
    // Offset: 0x224BADC
    ::StringW get_log_filename_suffix();
    // public System.Void set_log_level(System.Int32 value)
    // Offset: 0x224BB4C
    void set_log_level(int value);
    // public System.Int32 get_log_level()
    // Offset: 0x224BBCC
    int get_log_level();
    // public System.Void set_session_handle_type(vx_session_handle_type value)
    // Offset: 0x224BC3C
    void set_session_handle_type(::GlobalNamespace::vx_session_handle_type value);
    // public vx_session_handle_type get_session_handle_type()
    // Offset: 0x224BCBC
    ::GlobalNamespace::vx_session_handle_type get_session_handle_type();
    // public System.Void set_application(System.String value)
    // Offset: 0x224BD2C
    void set_application(::StringW value);
    // public System.String get_application()
    // Offset: 0x224BDAC
    ::StringW get_application();
    // public System.Void set_max_calls(System.Int32 value)
    // Offset: 0x224BE1C
    void set_max_calls(int value);
    // public System.Int32 get_max_calls()
    // Offset: 0x224BE9C
    int get_max_calls();
    // public System.Void set_allow_cross_domain_logins(System.Int32 value)
    // Offset: 0x224BF0C
    void set_allow_cross_domain_logins(int value);
    // public System.Int32 get_allow_cross_domain_logins()
    // Offset: 0x224BF8C
    int get_allow_cross_domain_logins();
    // public System.Void set_default_codec(System.Int32 value)
    // Offset: 0x224BFFC
    void set_default_codec(int value);
    // public System.Int32 get_default_codec()
    // Offset: 0x224C07C
    int get_default_codec();
    // public System.Void set_user_agent_id(System.String value)
    // Offset: 0x224C0EC
    void set_user_agent_id(::StringW value);
    // public System.String get_user_agent_id()
    // Offset: 0x224C16C
    ::StringW get_user_agent_id();
    // public System.Void set_media_probe_server(System.String value)
    // Offset: 0x224C1DC
    void set_media_probe_server(::StringW value);
    // public System.String get_media_probe_server()
    // Offset: 0x224C25C
    ::StringW get_media_probe_server();
    // public System.Void set_http_proxy_server_name(System.String value)
    // Offset: 0x224C2CC
    void set_http_proxy_server_name(::StringW value);
    // public System.String get_http_proxy_server_name()
    // Offset: 0x224C34C
    ::StringW get_http_proxy_server_name();
    // public System.Void set_http_proxy_server_port(System.Int32 value)
    // Offset: 0x224C3BC
    void set_http_proxy_server_port(int value);
    // public System.Int32 get_http_proxy_server_port()
    // Offset: 0x224C43C
    int get_http_proxy_server_port();
    // public System.Void set_enable_duplicate_participant_uris(System.Int32 value)
    // Offset: 0x224C4AC
    void set_enable_duplicate_participant_uris(int value);
    // public System.Int32 get_enable_duplicate_participant_uris()
    // Offset: 0x224C52C
    int get_enable_duplicate_participant_uris();
    // public System.Void set_connector_handle(System.String value)
    // Offset: 0x224C59C
    void set_connector_handle(::StringW value);
    // public System.String get_connector_handle()
    // Offset: 0x224C61C
    ::StringW get_connector_handle();
    // public System.Void set_configured_codecs(System.UInt32 value)
    // Offset: 0x224C68C
    void set_configured_codecs(uint value);
    // public System.UInt32 get_configured_codecs()
    // Offset: 0x224C70C
    uint get_configured_codecs();
    // public System.Void .ctor()
    // Offset: 0x224C77C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_req_connector_create_t* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_req_connector_create_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_req_connector_create_t*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x224AF84
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // vx_req_connector_create_t
  #pragma pack(pop)
  static check_size<sizeof(vx_req_connector_create_t), 32 + sizeof(bool)> __GlobalNamespace_vx_req_connector_create_tSizeCheck;
  static_assert(sizeof(vx_req_connector_create_t) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::GlobalNamespace::vx_req_connector_create_t*)>(&GlobalNamespace::vx_req_connector_create_t::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("", "vx_req_connector_create_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_base_
// Il2CppName: set_base_
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::GlobalNamespace::vx_req_base_t*)>(&GlobalNamespace::vx_req_connector_create_t::set_base_)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_req_base_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_base_", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_base_
// Il2CppName: get_base_
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_req_base_t* (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_base_)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_base_", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_client_name
// Il2CppName: set_client_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::StringW)>(&GlobalNamespace::vx_req_connector_create_t::set_client_name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_client_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_client_name
// Il2CppName: get_client_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_client_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_client_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_acct_mgmt_server
// Il2CppName: set_acct_mgmt_server
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::StringW)>(&GlobalNamespace::vx_req_connector_create_t::set_acct_mgmt_server)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_acct_mgmt_server", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_acct_mgmt_server
// Il2CppName: get_acct_mgmt_server
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_acct_mgmt_server)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_acct_mgmt_server", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_minimum_port
// Il2CppName: set_minimum_port
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(int)>(&GlobalNamespace::vx_req_connector_create_t::set_minimum_port)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_minimum_port", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_minimum_port
// Il2CppName: get_minimum_port
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_minimum_port)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_minimum_port", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_maximum_port
// Il2CppName: set_maximum_port
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(int)>(&GlobalNamespace::vx_req_connector_create_t::set_maximum_port)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_maximum_port", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_maximum_port
// Il2CppName: get_maximum_port
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_maximum_port)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_maximum_port", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_attempt_stun
// Il2CppName: set_attempt_stun
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::GlobalNamespace::vx_attempt_stun)>(&GlobalNamespace::vx_req_connector_create_t::set_attempt_stun)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_attempt_stun")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_attempt_stun", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_attempt_stun
// Il2CppName: get_attempt_stun
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_attempt_stun (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_attempt_stun)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_attempt_stun", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_mode
// Il2CppName: set_mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::GlobalNamespace::vx_connector_mode)>(&GlobalNamespace::vx_req_connector_create_t::set_mode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_connector_mode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_mode
// Il2CppName: get_mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_connector_mode (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_mode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_log_folder
// Il2CppName: set_log_folder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::StringW)>(&GlobalNamespace::vx_req_connector_create_t::set_log_folder)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_log_folder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_log_folder
// Il2CppName: get_log_folder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_log_folder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_log_folder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_log_filename_prefix
// Il2CppName: set_log_filename_prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::StringW)>(&GlobalNamespace::vx_req_connector_create_t::set_log_filename_prefix)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_log_filename_prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_log_filename_prefix
// Il2CppName: get_log_filename_prefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_log_filename_prefix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_log_filename_prefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_log_filename_suffix
// Il2CppName: set_log_filename_suffix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::StringW)>(&GlobalNamespace::vx_req_connector_create_t::set_log_filename_suffix)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_log_filename_suffix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_log_filename_suffix
// Il2CppName: get_log_filename_suffix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_log_filename_suffix)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_log_filename_suffix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_log_level
// Il2CppName: set_log_level
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(int)>(&GlobalNamespace::vx_req_connector_create_t::set_log_level)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_log_level", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_log_level
// Il2CppName: get_log_level
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_log_level)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_log_level", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_session_handle_type
// Il2CppName: set_session_handle_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::GlobalNamespace::vx_session_handle_type)>(&GlobalNamespace::vx_req_connector_create_t::set_session_handle_type)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_session_handle_type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_session_handle_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_session_handle_type
// Il2CppName: get_session_handle_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_session_handle_type (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_session_handle_type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_session_handle_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_application
// Il2CppName: set_application
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::StringW)>(&GlobalNamespace::vx_req_connector_create_t::set_application)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_application", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_application
// Il2CppName: get_application
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_application)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_application", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_max_calls
// Il2CppName: set_max_calls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(int)>(&GlobalNamespace::vx_req_connector_create_t::set_max_calls)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_max_calls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_max_calls
// Il2CppName: get_max_calls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_max_calls)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_max_calls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_allow_cross_domain_logins
// Il2CppName: set_allow_cross_domain_logins
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(int)>(&GlobalNamespace::vx_req_connector_create_t::set_allow_cross_domain_logins)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_allow_cross_domain_logins", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_allow_cross_domain_logins
// Il2CppName: get_allow_cross_domain_logins
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_allow_cross_domain_logins)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_allow_cross_domain_logins", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_default_codec
// Il2CppName: set_default_codec
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(int)>(&GlobalNamespace::vx_req_connector_create_t::set_default_codec)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_default_codec", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_default_codec
// Il2CppName: get_default_codec
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_default_codec)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_default_codec", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_user_agent_id
// Il2CppName: set_user_agent_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::StringW)>(&GlobalNamespace::vx_req_connector_create_t::set_user_agent_id)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_user_agent_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_user_agent_id
// Il2CppName: get_user_agent_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_user_agent_id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_user_agent_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_media_probe_server
// Il2CppName: set_media_probe_server
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::StringW)>(&GlobalNamespace::vx_req_connector_create_t::set_media_probe_server)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_media_probe_server", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_media_probe_server
// Il2CppName: get_media_probe_server
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_media_probe_server)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_media_probe_server", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_http_proxy_server_name
// Il2CppName: set_http_proxy_server_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::StringW)>(&GlobalNamespace::vx_req_connector_create_t::set_http_proxy_server_name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_http_proxy_server_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_http_proxy_server_name
// Il2CppName: get_http_proxy_server_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_http_proxy_server_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_http_proxy_server_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_http_proxy_server_port
// Il2CppName: set_http_proxy_server_port
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(int)>(&GlobalNamespace::vx_req_connector_create_t::set_http_proxy_server_port)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_http_proxy_server_port", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_http_proxy_server_port
// Il2CppName: get_http_proxy_server_port
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_http_proxy_server_port)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_http_proxy_server_port", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_enable_duplicate_participant_uris
// Il2CppName: set_enable_duplicate_participant_uris
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(int)>(&GlobalNamespace::vx_req_connector_create_t::set_enable_duplicate_participant_uris)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_enable_duplicate_participant_uris", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_enable_duplicate_participant_uris
// Il2CppName: get_enable_duplicate_participant_uris
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_enable_duplicate_participant_uris)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_enable_duplicate_participant_uris", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_connector_handle
// Il2CppName: set_connector_handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(::StringW)>(&GlobalNamespace::vx_req_connector_create_t::set_connector_handle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_connector_handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_connector_handle
// Il2CppName: get_connector_handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_connector_handle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_connector_handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::set_configured_codecs
// Il2CppName: set_configured_codecs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)(uint)>(&GlobalNamespace::vx_req_connector_create_t::set_configured_codecs)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "set_configured_codecs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::get_configured_codecs
// Il2CppName: get_configured_codecs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::get_configured_codecs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "get_configured_codecs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_req_connector_create_t::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_connector_create_t::*)()>(&GlobalNamespace::vx_req_connector_create_t::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_connector_create_t*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
