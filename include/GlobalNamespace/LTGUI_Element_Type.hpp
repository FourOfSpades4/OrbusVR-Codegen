// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: LTGUI
#include "GlobalNamespace/LTGUI.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::LTGUI::Element_Type, "", "LTGUI/Element_Type");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: LTGUI/Element_Type
  // [TokenAttribute] Offset: FFFFFFFF
  struct LTGUI::Element_Type/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: Element_Type
    constexpr Element_Type(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public LTGUI/Element_Type Texture
    static constexpr const int Texture = 0;
    // Get static field: static public LTGUI/Element_Type Texture
    static ::GlobalNamespace::LTGUI::Element_Type _get_Texture();
    // Set static field: static public LTGUI/Element_Type Texture
    static void _set_Texture(::GlobalNamespace::LTGUI::Element_Type value);
    // static field const value: static public LTGUI/Element_Type Label
    static constexpr const int Label = 1;
    // Get static field: static public LTGUI/Element_Type Label
    static ::GlobalNamespace::LTGUI::Element_Type _get_Label();
    // Set static field: static public LTGUI/Element_Type Label
    static void _set_Label(::GlobalNamespace::LTGUI::Element_Type value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // LTGUI/Element_Type
  #pragma pack(pop)
  static check_size<sizeof(LTGUI::Element_Type), 0 + sizeof(int)> __GlobalNamespace_LTGUI_Element_TypeSizeCheck;
  static_assert(sizeof(LTGUI::Element_Type) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
