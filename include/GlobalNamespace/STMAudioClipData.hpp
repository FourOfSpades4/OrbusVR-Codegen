// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioClip
  class AudioClip;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: STMAudioClipData
  class STMAudioClipData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::STMAudioClipData);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::STMAudioClipData*, "", "STMAudioClipData");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: STMAudioClipData
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: ACD544
  class STMAudioClipData : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // public System.Boolean showFoldout
    // Size: 0x1
    // Offset: 0x18
    bool showFoldout;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: showFoldout and: clips
    char __padding0[0x7] = {};
    // public UnityEngine.AudioClip[] clips
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::UnityEngine::AudioClip*> clips;
    // Field size check
    static_assert(sizeof(::ArrayW<::UnityEngine::AudioClip*>) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Boolean showFoldout
    [[deprecated("Use field access instead!")]] bool& dyn_showFoldout();
    // Get instance field reference: public UnityEngine.AudioClip[] clips
    [[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& dyn_clips();
    // public System.Void .ctor()
    // Offset: 0xE2BB84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static STMAudioClipData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::STMAudioClipData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<STMAudioClipData*, creationType>()));
    }
  }; // STMAudioClipData
  #pragma pack(pop)
  static check_size<sizeof(STMAudioClipData), 32 + sizeof(::ArrayW<::UnityEngine::AudioClip*>)> __GlobalNamespace_STMAudioClipDataSizeCheck;
  static_assert(sizeof(STMAudioClipData) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::STMAudioClipData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
