// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: RectTransform
  class RectTransform;
  // Forward declaring type: AudioClip
  class AudioClip;
  // Forward declaring type: Sprite
  class Sprite;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: LTRect
  class LTRect;
  // Forward declaring type: LTDescr
  class LTDescr;
  // Forward declaring type: LTBezierPath
  class LTBezierPath;
  // Forward declaring type: LTSpline
  class LTSpline;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ILeanTween
  class ILeanTween;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ILeanTween);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ILeanTween*, "", "ILeanTween");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: ILeanTween
  // [TokenAttribute] Offset: FFFFFFFF
  class ILeanTween {
    public:
    // public System.Void removeTween(System.Int32 i, System.Int32 uniqueId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void removeTween(int i, int uniqueId);
    // public System.Void removeTween(System.Int32 i)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void removeTween(int i);
    // public UnityEngine.Vector3[] add(UnityEngine.Vector3[] a, UnityEngine.Vector3 b)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<::UnityEngine::Vector3> add(::ArrayW<::UnityEngine::Vector3> a, ::UnityEngine::Vector3 b);
    // public System.Single closestRot(System.Single from, System.Single to)
    // Offset: 0xFFFFFFFFFFFFFFFF
    float closestRot(float from, float to);
    // public System.Void cancelAll()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void cancelAll();
    // public System.Void cancelAll(System.Boolean callComplete)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void cancelAll(bool callComplete);
    // public System.Void cancel(UnityEngine.GameObject gameObject)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void cancel(::UnityEngine::GameObject* gameObject);
    // public System.Void cancel(UnityEngine.GameObject gameObject, System.Boolean callOnComplete)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void cancel(::UnityEngine::GameObject* gameObject, bool callOnComplete);
    // public System.Void cancel(UnityEngine.GameObject gameObject, System.Int32 uniqueId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void cancel(::UnityEngine::GameObject* gameObject, int uniqueId);
    // public System.Void cancel(LTRect ltRect, System.Int32 uniqueId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void cancel(::GlobalNamespace::LTRect* ltRect, int uniqueId);
    // public System.Void cancel(System.Int32 uniqueId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void cancel(int uniqueId);
    // public System.Void cancel(System.Int32 uniqueId, System.Boolean callOnComplete)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void cancel(int uniqueId, bool callOnComplete);
    // public LTDescr descr(System.Int32 uniqueId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* descr(int uniqueId);
    // public LTDescr description(System.Int32 uniqueId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* description(int uniqueId);
    // public LTDescr[] descriptions(UnityEngine.GameObject gameObject)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<::GlobalNamespace::LTDescr*> descriptions(::UnityEngine::GameObject* gameObject);
    // public System.Void pause(System.Int32 uniqueId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void pause(int uniqueId);
    // public System.Void pause(UnityEngine.GameObject gameObject)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void pause(::UnityEngine::GameObject* gameObject);
    // public System.Void pauseAll()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void pauseAll();
    // public System.Void resumeAll()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void resumeAll();
    // public System.Void resume(System.Int32 uniqueId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void resume(int uniqueId);
    // public System.Void resume(UnityEngine.GameObject gameObject)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void resume(::UnityEngine::GameObject* gameObject);
    // public System.Boolean isTweening(UnityEngine.GameObject gameObject)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool isTweening(::UnityEngine::GameObject* gameObject);
    // public System.Boolean isTweening(System.Int32 uniqueId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool isTweening(int uniqueId);
    // public System.Boolean isTweening(LTRect ltRect)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool isTweening(::GlobalNamespace::LTRect* ltRect);
    // public System.Void drawBezierPath(UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 c, UnityEngine.Vector3 d, System.Single arrowSize, UnityEngine.Transform arrowTransform)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void drawBezierPath(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c, ::UnityEngine::Vector3 d, float arrowSize, ::UnityEngine::Transform* arrowTransform);
    // public LTDescr options(LTDescr seed)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* options(::GlobalNamespace::LTDescr* seed);
    // public LTDescr options()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* options();
    // public UnityEngine.GameObject get_tweenEmpty()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::GameObject* get_tweenEmpty();
    // public LTDescr alpha(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* alpha(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr alpha(LTRect ltRect, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* alpha(::GlobalNamespace::LTRect* ltRect, float to, float time);
    // public LTDescr alphaVertex(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* alphaVertex(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr color(UnityEngine.GameObject gameObject, UnityEngine.Color to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* color(::UnityEngine::GameObject* gameObject, ::UnityEngine::Color to, float time);
    // public LTDescr delayedCall(System.Single delayTime, System.Action callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* delayedCall(float delayTime, ::System::Action* callback);
    // public LTDescr delayedCall(System.Single delayTime, System.Action`1<System.Object> callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* delayedCall(float delayTime, ::System::Action_1<::Il2CppObject*>* callback);
    // public LTDescr delayedCall(UnityEngine.GameObject gameObject, System.Single delayTime, System.Action callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* delayedCall(::UnityEngine::GameObject* gameObject, float delayTime, ::System::Action* callback);
    // public LTDescr delayedCall(UnityEngine.GameObject gameObject, System.Single delayTime, System.Action`1<System.Object> callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* delayedCall(::UnityEngine::GameObject* gameObject, float delayTime, ::System::Action_1<::Il2CppObject*>* callback);
    // public LTDescr destroyAfter(LTRect rect, System.Single delayTime)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* destroyAfter(::GlobalNamespace::LTRect* rect, float delayTime);
    // public LTDescr move(UnityEngine.GameObject gameObject, UnityEngine.Vector3 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* move(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector3 to, float time);
    // public LTDescr move(UnityEngine.GameObject gameObject, UnityEngine.Vector2 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* move(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector2 to, float time);
    // public LTDescr move(UnityEngine.GameObject gameObject, UnityEngine.Vector3[] to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* move(::UnityEngine::GameObject* gameObject, ::ArrayW<::UnityEngine::Vector3> to, float time);
    // public LTDescr move(UnityEngine.GameObject gameObject, LTBezierPath to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* move(::UnityEngine::GameObject* gameObject, ::GlobalNamespace::LTBezierPath* to, float time);
    // public LTDescr move(UnityEngine.GameObject gameObject, LTSpline to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* move(::UnityEngine::GameObject* gameObject, ::GlobalNamespace::LTSpline* to, float time);
    // public LTDescr moveSpline(UnityEngine.GameObject gameObject, UnityEngine.Vector3[] to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveSpline(::UnityEngine::GameObject* gameObject, ::ArrayW<::UnityEngine::Vector3> to, float time);
    // public LTDescr moveSplineLocal(UnityEngine.GameObject gameObject, UnityEngine.Vector3[] to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveSplineLocal(::UnityEngine::GameObject* gameObject, ::ArrayW<::UnityEngine::Vector3> to, float time);
    // public LTDescr move(LTRect ltRect, UnityEngine.Vector2 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* move(::GlobalNamespace::LTRect* ltRect, ::UnityEngine::Vector2 to, float time);
    // public LTDescr moveMargin(LTRect ltRect, UnityEngine.Vector2 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveMargin(::GlobalNamespace::LTRect* ltRect, ::UnityEngine::Vector2 to, float time);
    // public LTDescr moveX(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveX(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr moveY(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveY(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr moveZ(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveZ(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr moveLocal(UnityEngine.GameObject gameObject, UnityEngine.Vector3 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveLocal(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector3 to, float time);
    // public LTDescr moveLocal(UnityEngine.GameObject gameObject, UnityEngine.Vector3[] to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveLocal(::UnityEngine::GameObject* gameObject, ::ArrayW<::UnityEngine::Vector3> to, float time);
    // public LTDescr moveLocalX(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveLocalX(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr moveLocalY(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveLocalY(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr moveLocalZ(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveLocalZ(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr moveLocal(UnityEngine.GameObject gameObject, LTBezierPath to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveLocal(::UnityEngine::GameObject* gameObject, ::GlobalNamespace::LTBezierPath* to, float time);
    // public LTDescr moveLocal(UnityEngine.GameObject gameObject, LTSpline to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveLocal(::UnityEngine::GameObject* gameObject, ::GlobalNamespace::LTSpline* to, float time);
    // public LTDescr move(UnityEngine.GameObject gameObject, UnityEngine.Transform to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* move(::UnityEngine::GameObject* gameObject, ::UnityEngine::Transform* to, float time);
    // public LTDescr rotate(UnityEngine.GameObject gameObject, UnityEngine.Vector3 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* rotate(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector3 to, float time);
    // public LTDescr rotate(LTRect ltRect, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* rotate(::GlobalNamespace::LTRect* ltRect, float to, float time);
    // public LTDescr rotateLocal(UnityEngine.GameObject gameObject, UnityEngine.Vector3 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* rotateLocal(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector3 to, float time);
    // public LTDescr rotateX(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* rotateX(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr rotateY(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* rotateY(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr rotateZ(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* rotateZ(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr rotateAround(UnityEngine.GameObject gameObject, UnityEngine.Vector3 axis, System.Single add, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* rotateAround(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector3 axis, float add, float time);
    // public LTDescr rotateAroundLocal(UnityEngine.GameObject gameObject, UnityEngine.Vector3 axis, System.Single add, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* rotateAroundLocal(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector3 axis, float add, float time);
    // public LTDescr scale(UnityEngine.GameObject gameObject, UnityEngine.Vector3 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* scale(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector3 to, float time);
    // public LTDescr scale(LTRect ltRect, UnityEngine.Vector2 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* scale(::GlobalNamespace::LTRect* ltRect, ::UnityEngine::Vector2 to, float time);
    // public LTDescr scaleX(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* scaleX(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr scaleY(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* scaleY(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr scaleZ(UnityEngine.GameObject gameObject, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* scaleZ(::UnityEngine::GameObject* gameObject, float to, float time);
    // public LTDescr value(UnityEngine.GameObject gameObject, System.Single from, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* value(::UnityEngine::GameObject* gameObject, float from, float to, float time);
    // public LTDescr value(UnityEngine.GameObject gameObject, UnityEngine.Vector2 from, UnityEngine.Vector2 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* value(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector2 from, ::UnityEngine::Vector2 to, float time);
    // public LTDescr value(UnityEngine.GameObject gameObject, UnityEngine.Vector3 from, UnityEngine.Vector3 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* value(::UnityEngine::GameObject* gameObject, ::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, float time);
    // public LTDescr value(UnityEngine.GameObject gameObject, UnityEngine.Color from, UnityEngine.Color to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* value(::UnityEngine::GameObject* gameObject, ::UnityEngine::Color from, ::UnityEngine::Color to, float time);
    // public LTDescr value(UnityEngine.GameObject gameObject, System.Action`1<System.Single> callOnUpdate, System.Single from, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* value(::UnityEngine::GameObject* gameObject, ::System::Action_1<float>* callOnUpdate, float from, float to, float time);
    // public LTDescr value(UnityEngine.GameObject gameObject, System.Action`2<System.Single,System.Single> callOnUpdateRatio, System.Single from, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* value(::UnityEngine::GameObject* gameObject, ::System::Action_2<float, float>* callOnUpdateRatio, float from, float to, float time);
    // public LTDescr value(UnityEngine.GameObject gameObject, System.Action`1<UnityEngine.Color> callOnUpdate, UnityEngine.Color from, UnityEngine.Color to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* value(::UnityEngine::GameObject* gameObject, ::System::Action_1<::UnityEngine::Color>* callOnUpdate, ::UnityEngine::Color from, ::UnityEngine::Color to, float time);
    // public LTDescr value(UnityEngine.GameObject gameObject, System.Action`1<UnityEngine.Vector2> callOnUpdate, UnityEngine.Vector2 from, UnityEngine.Vector2 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* value(::UnityEngine::GameObject* gameObject, ::System::Action_1<::UnityEngine::Vector2>* callOnUpdate, ::UnityEngine::Vector2 from, ::UnityEngine::Vector2 to, float time);
    // public LTDescr value(UnityEngine.GameObject gameObject, System.Action`1<UnityEngine.Vector3> callOnUpdate, UnityEngine.Vector3 from, UnityEngine.Vector3 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* value(::UnityEngine::GameObject* gameObject, ::System::Action_1<::UnityEngine::Vector3>* callOnUpdate, ::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, float time);
    // public LTDescr value(UnityEngine.GameObject gameObject, System.Action`2<System.Single,System.Object> callOnUpdate, System.Single from, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* value(::UnityEngine::GameObject* gameObject, ::System::Action_2<float, ::Il2CppObject*>* callOnUpdate, float from, float to, float time);
    // public LTDescr delayedSound(UnityEngine.AudioClip audio, UnityEngine.Vector3 pos, System.Single volume)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* delayedSound(::UnityEngine::AudioClip* audio, ::UnityEngine::Vector3 pos, float volume);
    // public LTDescr delayedSound(UnityEngine.GameObject gameObject, UnityEngine.AudioClip audio, UnityEngine.Vector3 pos, System.Single volume)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* delayedSound(::UnityEngine::GameObject* gameObject, ::UnityEngine::AudioClip* audio, ::UnityEngine::Vector3 pos, float volume);
    // public LTDescr play(UnityEngine.RectTransform rectTransform, UnityEngine.Sprite[] sprites)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* play(::UnityEngine::RectTransform* rectTransform, ::ArrayW<::UnityEngine::Sprite*> sprites);
    // public LTDescr textAlpha(UnityEngine.RectTransform rectTransform, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* textAlpha(::UnityEngine::RectTransform* rectTransform, float to, float time);
    // public LTDescr textColor(UnityEngine.RectTransform rectTransform, UnityEngine.Color to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* textColor(::UnityEngine::RectTransform* rectTransform, ::UnityEngine::Color to, float time);
    // public LTDescr move(UnityEngine.RectTransform rectTrans, UnityEngine.Vector3 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* move(::UnityEngine::RectTransform* rectTrans, ::UnityEngine::Vector3 to, float time);
    // public LTDescr moveX(UnityEngine.RectTransform rectTrans, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveX(::UnityEngine::RectTransform* rectTrans, float to, float time);
    // public LTDescr moveY(UnityEngine.RectTransform rectTrans, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveY(::UnityEngine::RectTransform* rectTrans, float to, float time);
    // public LTDescr moveZ(UnityEngine.RectTransform rectTrans, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* moveZ(::UnityEngine::RectTransform* rectTrans, float to, float time);
    // public LTDescr rotate(UnityEngine.RectTransform rectTrans, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* rotate(::UnityEngine::RectTransform* rectTrans, float to, float time);
    // public LTDescr rotateAround(UnityEngine.RectTransform rectTrans, UnityEngine.Vector3 axis, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* rotateAround(::UnityEngine::RectTransform* rectTrans, ::UnityEngine::Vector3 axis, float to, float time);
    // public LTDescr rotateAroundLocal(UnityEngine.RectTransform rectTrans, UnityEngine.Vector3 axis, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* rotateAroundLocal(::UnityEngine::RectTransform* rectTrans, ::UnityEngine::Vector3 axis, float to, float time);
    // public LTDescr scale(UnityEngine.RectTransform rectTrans, UnityEngine.Vector3 to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* scale(::UnityEngine::RectTransform* rectTrans, ::UnityEngine::Vector3 to, float time);
    // public LTDescr alpha(UnityEngine.RectTransform rectTrans, System.Single to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* alpha(::UnityEngine::RectTransform* rectTrans, float to, float time);
    // public LTDescr color(UnityEngine.RectTransform rectTrans, UnityEngine.Color to, System.Single time)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::GlobalNamespace::LTDescr* color(::UnityEngine::RectTransform* rectTrans, ::UnityEngine::Color to, float time);
  }; // ILeanTween
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::removeTween
// Il2CppName: removeTween
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(int, int)>(&GlobalNamespace::ILeanTween::removeTween)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* uniqueId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "removeTween", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i, uniqueId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::removeTween
// Il2CppName: removeTween
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(int)>(&GlobalNamespace::ILeanTween::removeTween)> {
  static const MethodInfo* get() {
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "removeTween", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{i});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::add
// Il2CppName: add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector3> (GlobalNamespace::ILeanTween::*)(::ArrayW<::UnityEngine::Vector3>, ::UnityEngine::Vector3)>(&GlobalNamespace::ILeanTween::add)> {
  static const MethodInfo* get() {
    static auto* a = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::closestRot
// Il2CppName: closestRot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::ILeanTween::*)(float, float)>(&GlobalNamespace::ILeanTween::closestRot)> {
  static const MethodInfo* get() {
    static auto* from = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "closestRot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{from, to});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::cancelAll
// Il2CppName: cancelAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)()>(&GlobalNamespace::ILeanTween::cancelAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "cancelAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::cancelAll
// Il2CppName: cancelAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(bool)>(&GlobalNamespace::ILeanTween::cancelAll)> {
  static const MethodInfo* get() {
    static auto* callComplete = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "cancelAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callComplete});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::cancel
// Il2CppName: cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::ILeanTween::cancel)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::cancel
// Il2CppName: cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, bool)>(&GlobalNamespace::ILeanTween::cancel)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* callOnComplete = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, callOnComplete});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::cancel
// Il2CppName: cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, int)>(&GlobalNamespace::ILeanTween::cancel)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* uniqueId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, uniqueId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::cancel
// Il2CppName: cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(::GlobalNamespace::LTRect*, int)>(&GlobalNamespace::ILeanTween::cancel)> {
  static const MethodInfo* get() {
    static auto* ltRect = &::il2cpp_utils::GetClassFromName("", "LTRect")->byval_arg;
    static auto* uniqueId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ltRect, uniqueId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::cancel
// Il2CppName: cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(int)>(&GlobalNamespace::ILeanTween::cancel)> {
  static const MethodInfo* get() {
    static auto* uniqueId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uniqueId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::cancel
// Il2CppName: cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(int, bool)>(&GlobalNamespace::ILeanTween::cancel)> {
  static const MethodInfo* get() {
    static auto* uniqueId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* callOnComplete = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uniqueId, callOnComplete});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::descr
// Il2CppName: descr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(int)>(&GlobalNamespace::ILeanTween::descr)> {
  static const MethodInfo* get() {
    static auto* uniqueId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "descr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uniqueId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::description
// Il2CppName: description
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(int)>(&GlobalNamespace::ILeanTween::description)> {
  static const MethodInfo* get() {
    static auto* uniqueId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "description", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uniqueId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::descriptions
// Il2CppName: descriptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::GlobalNamespace::LTDescr*> (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::ILeanTween::descriptions)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "descriptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::pause
// Il2CppName: pause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(int)>(&GlobalNamespace::ILeanTween::pause)> {
  static const MethodInfo* get() {
    static auto* uniqueId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "pause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uniqueId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::pause
// Il2CppName: pause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::ILeanTween::pause)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "pause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::pauseAll
// Il2CppName: pauseAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)()>(&GlobalNamespace::ILeanTween::pauseAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "pauseAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::resumeAll
// Il2CppName: resumeAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)()>(&GlobalNamespace::ILeanTween::resumeAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "resumeAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::resume
// Il2CppName: resume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(int)>(&GlobalNamespace::ILeanTween::resume)> {
  static const MethodInfo* get() {
    static auto* uniqueId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "resume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uniqueId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::resume
// Il2CppName: resume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::ILeanTween::resume)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "resume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::isTweening
// Il2CppName: isTweening
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::ILeanTween::isTweening)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "isTweening", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::isTweening
// Il2CppName: isTweening
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::ILeanTween::*)(int)>(&GlobalNamespace::ILeanTween::isTweening)> {
  static const MethodInfo* get() {
    static auto* uniqueId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "isTweening", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{uniqueId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::isTweening
// Il2CppName: isTweening
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::ILeanTween::*)(::GlobalNamespace::LTRect*)>(&GlobalNamespace::ILeanTween::isTweening)> {
  static const MethodInfo* get() {
    static auto* ltRect = &::il2cpp_utils::GetClassFromName("", "LTRect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "isTweening", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ltRect});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::drawBezierPath
// Il2CppName: drawBezierPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ILeanTween::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Vector3, float, ::UnityEngine::Transform*)>(&GlobalNamespace::ILeanTween::drawBezierPath)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* c = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* d = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* arrowSize = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* arrowTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "drawBezierPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b, c, d, arrowSize, arrowTransform});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::options
// Il2CppName: options
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::GlobalNamespace::LTDescr*)>(&GlobalNamespace::ILeanTween::options)> {
  static const MethodInfo* get() {
    static auto* seed = &::il2cpp_utils::GetClassFromName("", "LTDescr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "options", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{seed});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::options
// Il2CppName: options
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)()>(&GlobalNamespace::ILeanTween::options)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "options", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::get_tweenEmpty
// Il2CppName: get_tweenEmpty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (GlobalNamespace::ILeanTween::*)()>(&GlobalNamespace::ILeanTween::get_tweenEmpty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "get_tweenEmpty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::alpha
// Il2CppName: alpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::alpha)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "alpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::alpha
// Il2CppName: alpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::GlobalNamespace::LTRect*, float, float)>(&GlobalNamespace::ILeanTween::alpha)> {
  static const MethodInfo* get() {
    static auto* ltRect = &::il2cpp_utils::GetClassFromName("", "LTRect")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "alpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ltRect, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::alphaVertex
// Il2CppName: alphaVertex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::alphaVertex)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "alphaVertex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::color
// Il2CppName: color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Color, float)>(&GlobalNamespace::ILeanTween::color)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::delayedCall
// Il2CppName: delayedCall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(float, ::System::Action*)>(&GlobalNamespace::ILeanTween::delayedCall)> {
  static const MethodInfo* get() {
    static auto* delayTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "delayedCall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{delayTime, callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::delayedCall
// Il2CppName: delayedCall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(float, ::System::Action_1<::Il2CppObject*>*)>(&GlobalNamespace::ILeanTween::delayedCall)> {
  static const MethodInfo* get() {
    static auto* delayTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "delayedCall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{delayTime, callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::delayedCall
// Il2CppName: delayedCall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, ::System::Action*)>(&GlobalNamespace::ILeanTween::delayedCall)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* delayTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "Action")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "delayedCall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, delayTime, callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::delayedCall
// Il2CppName: delayedCall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, ::System::Action_1<::Il2CppObject*>*)>(&GlobalNamespace::ILeanTween::delayedCall)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* delayTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "delayedCall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, delayTime, callback});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::destroyAfter
// Il2CppName: destroyAfter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::GlobalNamespace::LTRect*, float)>(&GlobalNamespace::ILeanTween::destroyAfter)> {
  static const MethodInfo* get() {
    static auto* rect = &::il2cpp_utils::GetClassFromName("", "LTRect")->byval_arg;
    static auto* delayTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "destroyAfter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rect, delayTime});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::move
// Il2CppName: move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, float)>(&GlobalNamespace::ILeanTween::move)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::move
// Il2CppName: move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector2, float)>(&GlobalNamespace::ILeanTween::move)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::move
// Il2CppName: move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::ArrayW<::UnityEngine::Vector3>, float)>(&GlobalNamespace::ILeanTween::move)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::move
// Il2CppName: move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::GlobalNamespace::LTBezierPath*, float)>(&GlobalNamespace::ILeanTween::move)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("", "LTBezierPath")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::move
// Il2CppName: move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::GlobalNamespace::LTSpline*, float)>(&GlobalNamespace::ILeanTween::move)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("", "LTSpline")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveSpline
// Il2CppName: moveSpline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::ArrayW<::UnityEngine::Vector3>, float)>(&GlobalNamespace::ILeanTween::moveSpline)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveSpline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveSplineLocal
// Il2CppName: moveSplineLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::ArrayW<::UnityEngine::Vector3>, float)>(&GlobalNamespace::ILeanTween::moveSplineLocal)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveSplineLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::move
// Il2CppName: move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::GlobalNamespace::LTRect*, ::UnityEngine::Vector2, float)>(&GlobalNamespace::ILeanTween::move)> {
  static const MethodInfo* get() {
    static auto* ltRect = &::il2cpp_utils::GetClassFromName("", "LTRect")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ltRect, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveMargin
// Il2CppName: moveMargin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::GlobalNamespace::LTRect*, ::UnityEngine::Vector2, float)>(&GlobalNamespace::ILeanTween::moveMargin)> {
  static const MethodInfo* get() {
    static auto* ltRect = &::il2cpp_utils::GetClassFromName("", "LTRect")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveMargin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ltRect, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveX
// Il2CppName: moveX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::moveX)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveY
// Il2CppName: moveY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::moveY)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveZ
// Il2CppName: moveZ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::moveZ)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveZ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveLocal
// Il2CppName: moveLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, float)>(&GlobalNamespace::ILeanTween::moveLocal)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveLocal
// Il2CppName: moveLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::ArrayW<::UnityEngine::Vector3>, float)>(&GlobalNamespace::ILeanTween::moveLocal)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveLocalX
// Il2CppName: moveLocalX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::moveLocalX)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveLocalX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveLocalY
// Il2CppName: moveLocalY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::moveLocalY)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveLocalY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveLocalZ
// Il2CppName: moveLocalZ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::moveLocalZ)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveLocalZ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveLocal
// Il2CppName: moveLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::GlobalNamespace::LTBezierPath*, float)>(&GlobalNamespace::ILeanTween::moveLocal)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("", "LTBezierPath")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveLocal
// Il2CppName: moveLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::GlobalNamespace::LTSpline*, float)>(&GlobalNamespace::ILeanTween::moveLocal)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("", "LTSpline")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::move
// Il2CppName: move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Transform*, float)>(&GlobalNamespace::ILeanTween::move)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::rotate
// Il2CppName: rotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, float)>(&GlobalNamespace::ILeanTween::rotate)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "rotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::rotate
// Il2CppName: rotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::GlobalNamespace::LTRect*, float, float)>(&GlobalNamespace::ILeanTween::rotate)> {
  static const MethodInfo* get() {
    static auto* ltRect = &::il2cpp_utils::GetClassFromName("", "LTRect")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "rotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ltRect, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::rotateLocal
// Il2CppName: rotateLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, float)>(&GlobalNamespace::ILeanTween::rotateLocal)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "rotateLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::rotateX
// Il2CppName: rotateX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::rotateX)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "rotateX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::rotateY
// Il2CppName: rotateY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::rotateY)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "rotateY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::rotateZ
// Il2CppName: rotateZ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::rotateZ)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "rotateZ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::rotateAround
// Il2CppName: rotateAround
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, float, float)>(&GlobalNamespace::ILeanTween::rotateAround)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* axis = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* add = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "rotateAround", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, axis, add, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::rotateAroundLocal
// Il2CppName: rotateAroundLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, float, float)>(&GlobalNamespace::ILeanTween::rotateAroundLocal)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* axis = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* add = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "rotateAroundLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, axis, add, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::scale
// Il2CppName: scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, float)>(&GlobalNamespace::ILeanTween::scale)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::scale
// Il2CppName: scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::GlobalNamespace::LTRect*, ::UnityEngine::Vector2, float)>(&GlobalNamespace::ILeanTween::scale)> {
  static const MethodInfo* get() {
    static auto* ltRect = &::il2cpp_utils::GetClassFromName("", "LTRect")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ltRect, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::scaleX
// Il2CppName: scaleX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::scaleX)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "scaleX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::scaleY
// Il2CppName: scaleY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::scaleY)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "scaleY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::scaleZ
// Il2CppName: scaleZ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float)>(&GlobalNamespace::ILeanTween::scaleZ)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "scaleZ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::value
// Il2CppName: value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, float, float, float)>(&GlobalNamespace::ILeanTween::value)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, from, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::value
// Il2CppName: value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector2, ::UnityEngine::Vector2, float)>(&GlobalNamespace::ILeanTween::value)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, from, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::value
// Il2CppName: value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Vector3, ::UnityEngine::Vector3, float)>(&GlobalNamespace::ILeanTween::value)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, from, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::value
// Il2CppName: value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::Color, ::UnityEngine::Color, float)>(&GlobalNamespace::ILeanTween::value)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, from, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::value
// Il2CppName: value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::System::Action_1<float>*, float, float, float)>(&GlobalNamespace::ILeanTween::value)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* callOnUpdate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, callOnUpdate, from, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::value
// Il2CppName: value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::System::Action_2<float, float>*, float, float, float)>(&GlobalNamespace::ILeanTween::value)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* callOnUpdateRatio = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, callOnUpdateRatio, from, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::value
// Il2CppName: value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::UnityEngine::Color, float)>(&GlobalNamespace::ILeanTween::value)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* callOnUpdate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Color")})->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, callOnUpdate, from, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::value
// Il2CppName: value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::System::Action_1<::UnityEngine::Vector2>*, ::UnityEngine::Vector2, ::UnityEngine::Vector2, float)>(&GlobalNamespace::ILeanTween::value)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* callOnUpdate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")})->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, callOnUpdate, from, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::value
// Il2CppName: value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::System::Action_1<::UnityEngine::Vector3>*, ::UnityEngine::Vector3, ::UnityEngine::Vector3, float)>(&GlobalNamespace::ILeanTween::value)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* callOnUpdate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")})->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, callOnUpdate, from, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::value
// Il2CppName: value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::System::Action_2<float, ::Il2CppObject*>*, float, float, float)>(&GlobalNamespace::ILeanTween::value)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* callOnUpdate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Single"), ::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    static auto* from = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, callOnUpdate, from, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::delayedSound
// Il2CppName: delayedSound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::AudioClip*, ::UnityEngine::Vector3, float)>(&GlobalNamespace::ILeanTween::delayedSound)> {
  static const MethodInfo* get() {
    static auto* audio = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioClip")->byval_arg;
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* volume = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "delayedSound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{audio, pos, volume});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::delayedSound
// Il2CppName: delayedSound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::GameObject*, ::UnityEngine::AudioClip*, ::UnityEngine::Vector3, float)>(&GlobalNamespace::ILeanTween::delayedSound)> {
  static const MethodInfo* get() {
    static auto* gameObject = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* audio = &::il2cpp_utils::GetClassFromName("UnityEngine", "AudioClip")->byval_arg;
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* volume = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "delayedSound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameObject, audio, pos, volume});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::play
// Il2CppName: play
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, ::ArrayW<::UnityEngine::Sprite*>)>(&GlobalNamespace::ILeanTween::play)> {
  static const MethodInfo* get() {
    static auto* rectTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* sprites = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Sprite"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "play", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTransform, sprites});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::textAlpha
// Il2CppName: textAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, float, float)>(&GlobalNamespace::ILeanTween::textAlpha)> {
  static const MethodInfo* get() {
    static auto* rectTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "textAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTransform, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::textColor
// Il2CppName: textColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, ::UnityEngine::Color, float)>(&GlobalNamespace::ILeanTween::textColor)> {
  static const MethodInfo* get() {
    static auto* rectTransform = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "textColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTransform, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::move
// Il2CppName: move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector3, float)>(&GlobalNamespace::ILeanTween::move)> {
  static const MethodInfo* get() {
    static auto* rectTrans = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTrans, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveX
// Il2CppName: moveX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, float, float)>(&GlobalNamespace::ILeanTween::moveX)> {
  static const MethodInfo* get() {
    static auto* rectTrans = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTrans, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveY
// Il2CppName: moveY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, float, float)>(&GlobalNamespace::ILeanTween::moveY)> {
  static const MethodInfo* get() {
    static auto* rectTrans = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTrans, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::moveZ
// Il2CppName: moveZ
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, float, float)>(&GlobalNamespace::ILeanTween::moveZ)> {
  static const MethodInfo* get() {
    static auto* rectTrans = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "moveZ", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTrans, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::rotate
// Il2CppName: rotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, float, float)>(&GlobalNamespace::ILeanTween::rotate)> {
  static const MethodInfo* get() {
    static auto* rectTrans = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "rotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTrans, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::rotateAround
// Il2CppName: rotateAround
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector3, float, float)>(&GlobalNamespace::ILeanTween::rotateAround)> {
  static const MethodInfo* get() {
    static auto* rectTrans = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* axis = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "rotateAround", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTrans, axis, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::rotateAroundLocal
// Il2CppName: rotateAroundLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector3, float, float)>(&GlobalNamespace::ILeanTween::rotateAroundLocal)> {
  static const MethodInfo* get() {
    static auto* rectTrans = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* axis = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "rotateAroundLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTrans, axis, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::scale
// Il2CppName: scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, ::UnityEngine::Vector3, float)>(&GlobalNamespace::ILeanTween::scale)> {
  static const MethodInfo* get() {
    static auto* rectTrans = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTrans, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::alpha
// Il2CppName: alpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, float, float)>(&GlobalNamespace::ILeanTween::alpha)> {
  static const MethodInfo* get() {
    static auto* rectTrans = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "alpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTrans, to, time});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ILeanTween::color
// Il2CppName: color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::LTDescr* (GlobalNamespace::ILeanTween::*)(::UnityEngine::RectTransform*, ::UnityEngine::Color, float)>(&GlobalNamespace::ILeanTween::color)> {
  static const MethodInfo* get() {
    static auto* rectTrans = &::il2cpp_utils::GetClassFromName("UnityEngine", "RectTransform")->byval_arg;
    static auto* to = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ILeanTween*), "color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rectTrans, to, time});
  }
};
