// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxVoipClient
#include "GlobalNamespace/VivoxVoipClient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: IChannelSession
  class IChannelSession;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::VivoxVoipClient::$$c__DisplayClass30_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::VivoxVoipClient::$$c__DisplayClass30_0*, "", "VivoxVoipClient/<>c__DisplayClass30_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: VivoxVoipClient/<>c__DisplayClass30_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ACE144
  class VivoxVoipClient::$$c__DisplayClass30_0 : public ::Il2CppObject {
    public:
    public:
    // public VivoxUnity.IChannelSession channelSession
    // Size: 0x8
    // Offset: 0x10
    ::VivoxUnity::IChannelSession* channelSession;
    // Field size check
    static_assert(sizeof(::VivoxUnity::IChannelSession*) == 0x8);
    public:
    // Creating conversion operator: operator ::VivoxUnity::IChannelSession*
    constexpr operator ::VivoxUnity::IChannelSession*() const noexcept {
      return channelSession;
    }
    // Get instance field reference: public VivoxUnity.IChannelSession channelSession
    [[deprecated("Use field access instead!")]] ::VivoxUnity::IChannelSession*& dyn_channelSession();
    // public System.Void .ctor()
    // Offset: 0xDD2620
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VivoxVoipClient::$$c__DisplayClass30_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VivoxVoipClient::$$c__DisplayClass30_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VivoxVoipClient::$$c__DisplayClass30_0*, creationType>()));
    }
    // System.Void <ChangePartyChannelAsync>b__0(System.IAsyncResult ar)
    // Offset: 0xDD2628
    void $ChangePartyChannelAsync$b__0(::System::IAsyncResult* ar);
  }; // VivoxVoipClient/<>c__DisplayClass30_0
  #pragma pack(pop)
  static check_size<sizeof(VivoxVoipClient::$$c__DisplayClass30_0), 16 + sizeof(::VivoxUnity::IChannelSession*)> __GlobalNamespace_VivoxVoipClient_$$c__DisplayClass30_0SizeCheck;
  static_assert(sizeof(VivoxVoipClient::$$c__DisplayClass30_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::VivoxVoipClient::$$c__DisplayClass30_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::VivoxVoipClient::$$c__DisplayClass30_0::$ChangePartyChannelAsync$b__0
// Il2CppName: <ChangePartyChannelAsync>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::VivoxVoipClient::$$c__DisplayClass30_0::*)(::System::IAsyncResult*)>(&GlobalNamespace::VivoxVoipClient::$$c__DisplayClass30_0::$ChangePartyChannelAsync$b__0)> {
  static const MethodInfo* get() {
    static auto* ar = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::VivoxVoipClient::$$c__DisplayClass30_0*), "<ChangePartyChannelAsync>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ar});
  }
};
