// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: PlayerWand
  class PlayerWand;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ActionGrabPhysicsObject
  class ActionGrabPhysicsObject;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::ActionGrabPhysicsObject);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ActionGrabPhysicsObject*, "", "ActionGrabPhysicsObject");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: ActionGrabPhysicsObject
  // [TokenAttribute] Offset: FFFFFFFF
  class ActionGrabPhysicsObject : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // private MagicalActual.PlayerWand attachedToPlayer
    // Size: 0x8
    // Offset: 0x18
    ::MagicalActual::PlayerWand* attachedToPlayer;
    // Field size check
    static_assert(sizeof(::MagicalActual::PlayerWand*) == 0x8);
    // public UnityEngine.Rigidbody targetRigidBody
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Rigidbody* targetRigidBody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private MagicalActual.PlayerWand attachedToPlayer
    [[deprecated("Use field access instead!")]] ::MagicalActual::PlayerWand*& dyn_attachedToPlayer();
    // Get instance field reference: public UnityEngine.Rigidbody targetRigidBody
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_targetRigidBody();
    // public System.Void doGripInteraction(UnityEngine.GameObject sender)
    // Offset: 0xEF36A4
    void doGripInteraction(::UnityEngine::GameObject* sender);
    // public System.Void doUnGripInteraction(UnityEngine.GameObject sender)
    // Offset: 0xEF3764
    void doUnGripInteraction(::UnityEngine::GameObject* sender);
    // public System.Void .ctor()
    // Offset: 0xEF3884
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ActionGrabPhysicsObject* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionGrabPhysicsObject::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ActionGrabPhysicsObject*, creationType>()));
    }
  }; // ActionGrabPhysicsObject
  #pragma pack(pop)
  static check_size<sizeof(ActionGrabPhysicsObject), 32 + sizeof(::UnityEngine::Rigidbody*)> __GlobalNamespace_ActionGrabPhysicsObjectSizeCheck;
  static_assert(sizeof(ActionGrabPhysicsObject) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::ActionGrabPhysicsObject::doGripInteraction
// Il2CppName: doGripInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ActionGrabPhysicsObject::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::ActionGrabPhysicsObject::doGripInteraction)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ActionGrabPhysicsObject*), "doGripInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ActionGrabPhysicsObject::doUnGripInteraction
// Il2CppName: doUnGripInteraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::ActionGrabPhysicsObject::*)(::UnityEngine::GameObject*)>(&GlobalNamespace::ActionGrabPhysicsObject::doUnGripInteraction)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::ActionGrabPhysicsObject*), "doUnGripInteraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::ActionGrabPhysicsObject::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
