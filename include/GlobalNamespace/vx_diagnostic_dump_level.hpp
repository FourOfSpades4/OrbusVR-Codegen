// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: vx_diagnostic_dump_level
  struct vx_diagnostic_dump_level;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::vx_diagnostic_dump_level, "", "vx_diagnostic_dump_level");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: vx_diagnostic_dump_level
  // [TokenAttribute] Offset: FFFFFFFF
  struct vx_diagnostic_dump_level/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: vx_diagnostic_dump_level
    constexpr vx_diagnostic_dump_level(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public vx_diagnostic_dump_level diagnostic_dump_level_all
    static constexpr const int diagnostic_dump_level_all = 0;
    // Get static field: static public vx_diagnostic_dump_level diagnostic_dump_level_all
    static ::GlobalNamespace::vx_diagnostic_dump_level _get_diagnostic_dump_level_all();
    // Set static field: static public vx_diagnostic_dump_level diagnostic_dump_level_all
    static void _set_diagnostic_dump_level_all(::GlobalNamespace::vx_diagnostic_dump_level value);
    // static field const value: static public vx_diagnostic_dump_level diagnostic_dump_level_sessions
    static constexpr const int diagnostic_dump_level_sessions = 1;
    // Get static field: static public vx_diagnostic_dump_level diagnostic_dump_level_sessions
    static ::GlobalNamespace::vx_diagnostic_dump_level _get_diagnostic_dump_level_sessions();
    // Set static field: static public vx_diagnostic_dump_level diagnostic_dump_level_sessions
    static void _set_diagnostic_dump_level_sessions(::GlobalNamespace::vx_diagnostic_dump_level value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // vx_diagnostic_dump_level
  #pragma pack(pop)
  static check_size<sizeof(vx_diagnostic_dump_level), 0 + sizeof(int)> __GlobalNamespace_vx_diagnostic_dump_levelSizeCheck;
  static_assert(sizeof(vx_diagnostic_dump_level) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
