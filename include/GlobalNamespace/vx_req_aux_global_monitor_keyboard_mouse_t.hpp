// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: vx_req_base_t
  class vx_req_base_t;
  // Forward declaring type: SWIGTYPE_p_int
  class SWIGTYPE_p_int;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: vx_req_aux_global_monitor_keyboard_mouse_t
  class vx_req_aux_global_monitor_keyboard_mouse_t;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*, "", "vx_req_aux_global_monitor_keyboard_mouse_t");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: vx_req_aux_global_monitor_keyboard_mouse_t
  // [TokenAttribute] Offset: FFFFFFFF
  class vx_req_aux_global_monitor_keyboard_mouse_t : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated("Use field access instead!")]] bool& dyn_swigCMemOwn();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0x2240414
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_req_aux_global_monitor_keyboard_mouse_t* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_req_aux_global_monitor_keyboard_mouse_t*, creationType>(cPtr, cMemoryOwn)));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(vx_req_aux_global_monitor_keyboard_mouse_t obj)
    // Offset: 0x2240478
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t* obj);
    // public System.Void Dispose()
    // Offset: 0x2240568
    void Dispose();
    // public System.Void set_base_(vx_req_base_t value)
    // Offset: 0x22407B0
    void set_base_(::GlobalNamespace::vx_req_base_t* value);
    // public vx_req_base_t get_base_()
    // Offset: 0x2240700
    ::GlobalNamespace::vx_req_base_t* get_base_();
    // public System.Void set_name(System.String value)
    // Offset: 0x2240844
    void set_name(::StringW value);
    // public System.String get_name()
    // Offset: 0x22408C4
    ::StringW get_name();
    // public System.Void set_code_count(System.Int32 value)
    // Offset: 0x2240934
    void set_code_count(int value);
    // public System.Int32 get_code_count()
    // Offset: 0x22409B4
    int get_code_count();
    // public System.Void set_codes(SWIGTYPE_p_int value)
    // Offset: 0x2240A24
    void set_codes(::GlobalNamespace::SWIGTYPE_p_int* value);
    // public SWIGTYPE_p_int get_codes()
    // Offset: 0x2240ABC
    ::GlobalNamespace::SWIGTYPE_p_int* get_codes();
    // public System.Void .ctor()
    // Offset: 0x2240B70
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_req_aux_global_monitor_keyboard_mouse_t* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_req_aux_global_monitor_keyboard_mouse_t*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x22404EC
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // vx_req_aux_global_monitor_keyboard_mouse_t
  #pragma pack(pop)
  static check_size<sizeof(vx_req_aux_global_monitor_keyboard_mouse_t), 32 + sizeof(bool)> __GlobalNamespace_vx_req_aux_global_monitor_keyboard_mouse_tSizeCheck;
  static_assert(sizeof(vx_req_aux_global_monitor_keyboard_mouse_t) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*)>(&GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("", "vx_req_aux_global_monitor_keyboard_mouse_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::*)()>(&GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::set_base_
// Il2CppName: set_base_
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::*)(::GlobalNamespace::vx_req_base_t*)>(&GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::set_base_)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_req_base_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*), "set_base_", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::get_base_
// Il2CppName: get_base_
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_req_base_t* (GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::*)()>(&GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::get_base_)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*), "get_base_", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::set_name
// Il2CppName: set_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::*)(::StringW)>(&GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::set_name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*), "set_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::*)()>(&GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::get_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::set_code_count
// Il2CppName: set_code_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::*)(int)>(&GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::set_code_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*), "set_code_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::get_code_count
// Il2CppName: get_code_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::*)()>(&GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::get_code_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*), "get_code_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::set_codes
// Il2CppName: set_codes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::*)(::GlobalNamespace::SWIGTYPE_p_int*)>(&GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::set_codes)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_int")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*), "set_codes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::get_codes
// Il2CppName: get_codes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_int* (GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::*)()>(&GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::get_codes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*), "get_codes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::*)()>(&GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_req_aux_global_monitor_keyboard_mouse_t*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
