// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: AuctionHouseMenu
#include "GlobalNamespace/AuctionHouseMenu.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem*, "", "AuctionHouseMenu/AuctionHouseItem");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x60
  #pragma pack(push, 1)
  // Autogenerated type: AuctionHouseMenu/AuctionHouseItem
  // [TokenAttribute] Offset: FFFFFFFF
  class AuctionHouseMenu::AuctionHouseItem : public ::Il2CppObject {
    public:
    public:
    // public System.String id
    // Size: 0x8
    // Offset: 0x10
    ::StringW id;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String name
    // Size: 0x8
    // Offset: 0x18
    ::StringW name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String type
    // Size: 0x8
    // Offset: 0x20
    ::StringW type;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String seller
    // Size: 0x8
    // Offset: 0x28
    ::StringW seller;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String bidder
    // Size: 0x8
    // Offset: 0x30
    ::StringW bidder;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 stackSize
    // Size: 0x4
    // Offset: 0x38
    int stackSize;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 auctionLength
    // Size: 0x4
    // Offset: 0x3C
    int auctionLength;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 bid
    // Size: 0x4
    // Offset: 0x40
    int bid;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 buyout
    // Size: 0x4
    // Offset: 0x44
    int buyout;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.String itemId
    // Size: 0x8
    // Offset: 0x48
    ::StringW itemId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String originalItem
    // Size: 0x8
    // Offset: 0x50
    ::StringW originalItem;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public ExtUI.InventoryItemInstance invItem
    // Size: 0x8
    // Offset: 0x58
    ::ExtUI::InventoryItemInstance* invItem;
    // Field size check
    static_assert(sizeof(::ExtUI::InventoryItemInstance*) == 0x8);
    public:
    // Get instance field reference: public System.String id
    [[deprecated("Use field access instead!")]] ::StringW& dyn_id();
    // Get instance field reference: public System.String name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_name();
    // Get instance field reference: public System.String type
    [[deprecated("Use field access instead!")]] ::StringW& dyn_type();
    // Get instance field reference: public System.String seller
    [[deprecated("Use field access instead!")]] ::StringW& dyn_seller();
    // Get instance field reference: public System.String bidder
    [[deprecated("Use field access instead!")]] ::StringW& dyn_bidder();
    // Get instance field reference: public System.Int32 stackSize
    [[deprecated("Use field access instead!")]] int& dyn_stackSize();
    // Get instance field reference: public System.Int32 auctionLength
    [[deprecated("Use field access instead!")]] int& dyn_auctionLength();
    // Get instance field reference: public System.Int32 bid
    [[deprecated("Use field access instead!")]] int& dyn_bid();
    // Get instance field reference: public System.Int32 buyout
    [[deprecated("Use field access instead!")]] int& dyn_buyout();
    // Get instance field reference: public System.String itemId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_itemId();
    // Get instance field reference: public System.String originalItem
    [[deprecated("Use field access instead!")]] ::StringW& dyn_originalItem();
    // Get instance field reference: public ExtUI.InventoryItemInstance invItem
    [[deprecated("Use field access instead!")]] ::ExtUI::InventoryItemInstance*& dyn_invItem();
    // public System.Void .ctor()
    // Offset: 0x12AF370
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuctionHouseMenu::AuctionHouseItem* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuctionHouseMenu::AuctionHouseItem*, creationType>()));
    }
  }; // AuctionHouseMenu/AuctionHouseItem
  #pragma pack(pop)
  static check_size<sizeof(AuctionHouseMenu::AuctionHouseItem), 88 + sizeof(::ExtUI::InventoryItemInstance*)> __GlobalNamespace_AuctionHouseMenu_AuctionHouseItemSizeCheck;
  static_assert(sizeof(AuctionHouseMenu::AuctionHouseItem) == 0x60);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::AuctionHouseItem::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
