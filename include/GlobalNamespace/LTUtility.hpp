// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: LTUtility
  class LTUtility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::LTUtility);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::LTUtility*, "", "LTUtility");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LTUtility
  // [TokenAttribute] Offset: FFFFFFFF
  class LTUtility : public ::Il2CppObject {
    public:
    // static public UnityEngine.Vector3[] reverse(UnityEngine.Vector3[] arr)
    // Offset: 0x1ABC0EC
    static ::ArrayW<::UnityEngine::Vector3> reverse(::ArrayW<::UnityEngine::Vector3> arr);
    // public System.Void .ctor()
    // Offset: 0x1AC04A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LTUtility* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LTUtility::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LTUtility*, creationType>()));
    }
  }; // LTUtility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::LTUtility::reverse
// Il2CppName: reverse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::UnityEngine::Vector3> (*)(::ArrayW<::UnityEngine::Vector3>)>(&GlobalNamespace::LTUtility::reverse)> {
  static const MethodInfo* get() {
    static auto* arr = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LTUtility*), "reverse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arr});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LTUtility::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
