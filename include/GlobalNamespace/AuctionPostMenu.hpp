// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: AuctionChest
  class AuctionChest;
}
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Document
  class Document;
  // Forward declaring type: UIEvent
  class UIEvent;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: AuctionPostMenu
  class AuctionPostMenu;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::AuctionPostMenu);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::AuctionPostMenu*, "", "AuctionPostMenu");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: AuctionPostMenu
  // [TokenAttribute] Offset: FFFFFFFF
  class AuctionPostMenu : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::AuctionPostMenu::$$c__DisplayClass7_0
    class $$c__DisplayClass7_0;
    // Get static field: static private ExtUI.AuctionChest parentBehaviour
    static ::ExtUI::AuctionChest* _get_parentBehaviour();
    // Set static field: static private ExtUI.AuctionChest parentBehaviour
    static void _set_parentBehaviour(::ExtUI::AuctionChest* value);
    // Get static field: static private System.Int32 numchoices
    static int _get_numchoices();
    // Set static field: static private System.Int32 numchoices
    static void _set_numchoices(int value);
    // static public System.Void init(ExtUI.AuctionChest clickhandler)
    // Offset: 0x12AF378
    static void init(::ExtUI::AuctionChest* clickhandler);
    // static public System.Int32 getItemPosition(System.String buttonId)
    // Offset: 0x12AF3E4
    static int getItemPosition(::StringW buttonId);
    // static public System.Void updatePrices(PowerUI.Document document)
    // Offset: 0x12AF4B0
    static void updatePrices(::PowerUI::Document* document);
    // static public System.Void postItem(PowerUI.UIEvent e)
    // Offset: 0x12B0940
    static void postItem(::PowerUI::UIEvent* e);
    // static public System.Void cancelItem(PowerUI.UIEvent e)
    // Offset: 0x12B0D48
    static void cancelItem(::PowerUI::UIEvent* e);
    // static public System.Void showKeyboard(PowerUI.UIEvent e)
    // Offset: 0x12B0E08
    static void showKeyboard(::PowerUI::UIEvent* e);
    // static public System.Void doWithdraw(PowerUI.UIEvent e)
    // Offset: 0x12B0EFC
    static void doWithdraw(::PowerUI::UIEvent* e);
    // public System.Void .ctor()
    // Offset: 0x12B1098
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuctionPostMenu* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuctionPostMenu::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuctionPostMenu*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x12B10A0
    static void _cctor();
  }; // AuctionPostMenu
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::AuctionPostMenu::init
// Il2CppName: init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ExtUI::AuctionChest*)>(&GlobalNamespace::AuctionPostMenu::init)> {
  static const MethodInfo* get() {
    static auto* clickhandler = &::il2cpp_utils::GetClassFromName("ExtUI", "AuctionChest")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionPostMenu*), "init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{clickhandler});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionPostMenu::getItemPosition
// Il2CppName: getItemPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&GlobalNamespace::AuctionPostMenu::getItemPosition)> {
  static const MethodInfo* get() {
    static auto* buttonId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionPostMenu*), "getItemPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buttonId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionPostMenu::updatePrices
// Il2CppName: updatePrices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*)>(&GlobalNamespace::AuctionPostMenu::updatePrices)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionPostMenu*), "updatePrices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionPostMenu::postItem
// Il2CppName: postItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionPostMenu::postItem)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionPostMenu*), "postItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionPostMenu::cancelItem
// Il2CppName: cancelItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionPostMenu::cancelItem)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionPostMenu*), "cancelItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionPostMenu::showKeyboard
// Il2CppName: showKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionPostMenu::showKeyboard)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionPostMenu*), "showKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionPostMenu::doWithdraw
// Il2CppName: doWithdraw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionPostMenu::doWithdraw)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionPostMenu*), "doWithdraw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionPostMenu::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::AuctionPostMenu::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::AuctionPostMenu::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionPostMenu*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
