// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Document
  class Document;
  // Forward declaring type: UIEvent
  class UIEvent;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: KeyboardMenu
  class KeyboardMenu;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::KeyboardMenu);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::KeyboardMenu*, "", "KeyboardMenu");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: KeyboardMenu
  // [TokenAttribute] Offset: FFFFFFFF
  class KeyboardMenu : public ::UnityEngine::MonoBehaviour {
    public:
    // Get static field: static private System.String currentValueString
    static ::StringW _get_currentValueString();
    // Set static field: static private System.String currentValueString
    static void _set_currentValueString(::StringW value);
    // Get static field: static private System.String layoutZero
    static ::StringW _get_layoutZero();
    // Set static field: static private System.String layoutZero
    static void _set_layoutZero(::StringW value);
    // Get static field: static private System.String layoutOne
    static ::StringW _get_layoutOne();
    // Set static field: static private System.String layoutOne
    static void _set_layoutOne(::StringW value);
    // Get static field: static private System.String layoutTwo
    static ::StringW _get_layoutTwo();
    // Set static field: static private System.String layoutTwo
    static void _set_layoutTwo(::StringW value);
    // Get static field: static private System.String layoutThree
    static ::StringW _get_layoutThree();
    // Set static field: static private System.String layoutThree
    static void _set_layoutThree(::StringW value);
    // Get static field: static private System.String shiftedLayoutZero
    static ::StringW _get_shiftedLayoutZero();
    // Set static field: static private System.String shiftedLayoutZero
    static void _set_shiftedLayoutZero(::StringW value);
    // Get static field: static private System.String shiftedLayoutOne
    static ::StringW _get_shiftedLayoutOne();
    // Set static field: static private System.String shiftedLayoutOne
    static void _set_shiftedLayoutOne(::StringW value);
    // Get static field: static private System.String shiftedLayoutTwo
    static ::StringW _get_shiftedLayoutTwo();
    // Set static field: static private System.String shiftedLayoutTwo
    static void _set_shiftedLayoutTwo(::StringW value);
    // Get static field: static private System.String shiftedLayoutThree
    static ::StringW _get_shiftedLayoutThree();
    // Set static field: static private System.String shiftedLayoutThree
    static void _set_shiftedLayoutThree(::StringW value);
    // Get static field: static private System.String altLayoutZero
    static ::StringW _get_altLayoutZero();
    // Set static field: static private System.String altLayoutZero
    static void _set_altLayoutZero(::StringW value);
    // Get static field: static private System.String altLayoutOne
    static ::StringW _get_altLayoutOne();
    // Set static field: static private System.String altLayoutOne
    static void _set_altLayoutOne(::StringW value);
    // Get static field: static private System.String altLayoutTwo
    static ::StringW _get_altLayoutTwo();
    // Set static field: static private System.String altLayoutTwo
    static void _set_altLayoutTwo(::StringW value);
    // Get static field: static private System.String altLayoutThree
    static ::StringW _get_altLayoutThree();
    // Set static field: static private System.String altLayoutThree
    static void _set_altLayoutThree(::StringW value);
    // Get static field: static private System.String altShiftedLayoutZero
    static ::StringW _get_altShiftedLayoutZero();
    // Set static field: static private System.String altShiftedLayoutZero
    static void _set_altShiftedLayoutZero(::StringW value);
    // Get static field: static private System.String altShiftedLayoutOne
    static ::StringW _get_altShiftedLayoutOne();
    // Set static field: static private System.String altShiftedLayoutOne
    static void _set_altShiftedLayoutOne(::StringW value);
    // Get static field: static private System.String altShiftedLayoutTwo
    static ::StringW _get_altShiftedLayoutTwo();
    // Set static field: static private System.String altShiftedLayoutTwo
    static void _set_altShiftedLayoutTwo(::StringW value);
    // Get static field: static private System.String altShiftedLayoutThree
    static ::StringW _get_altShiftedLayoutThree();
    // Set static field: static private System.String altShiftedLayoutThree
    static void _set_altShiftedLayoutThree(::StringW value);
    // Get static field: static private System.String numericLayoutZero
    static ::StringW _get_numericLayoutZero();
    // Set static field: static private System.String numericLayoutZero
    static void _set_numericLayoutZero(::StringW value);
    // Get static field: static private System.String numericLayoutOne
    static ::StringW _get_numericLayoutOne();
    // Set static field: static private System.String numericLayoutOne
    static void _set_numericLayoutOne(::StringW value);
    // Get static field: static private System.String numericLayoutTwo
    static ::StringW _get_numericLayoutTwo();
    // Set static field: static private System.String numericLayoutTwo
    static void _set_numericLayoutTwo(::StringW value);
    // Get static field: static private System.String numericLayoutThree
    static ::StringW _get_numericLayoutThree();
    // Set static field: static private System.String numericLayoutThree
    static void _set_numericLayoutThree(::StringW value);
    // Get static field: static private System.Boolean shiftDown
    static bool _get_shiftDown();
    // Set static field: static private System.Boolean shiftDown
    static void _set_shiftDown(bool value);
    // Get static field: static private System.Boolean altDown
    static bool _get_altDown();
    // Set static field: static private System.Boolean altDown
    static void _set_altDown(bool value);
    // Get static field: static private System.Boolean acceptInput
    static bool _get_acceptInput();
    // Set static field: static private System.Boolean acceptInput
    static void _set_acceptInput(bool value);
    // static public System.String makeRow(System.String layoutString)
    // Offset: 0x1064CF4
    static ::StringW makeRow(::StringW layoutString);
    // static public System.Void makeKeyboard(PowerUI.Document document)
    // Offset: 0x1064E48
    static void makeKeyboard(::PowerUI::Document* document);
    // static public System.Void makeNumericKeyboard(PowerUI.Document document)
    // Offset: 0x1065258
    static void makeNumericKeyboard(::PowerUI::Document* document);
    // static public System.Void firstOpen(PowerUI.Document document, System.Boolean numericOnly)
    // Offset: 0x1065440
    static void firstOpen(::PowerUI::Document* document, bool numericOnly);
    // static public System.Void clickKey(PowerUI.UIEvent e)
    // Offset: 0x10654F8
    static void clickKey(::PowerUI::UIEvent* e);
    // static public System.Void enterPressed()
    // Offset: 0x1065870
    static void enterPressed();
    // static public System.Void SetText(System.String newtext, PowerUI.Document document)
    // Offset: 0x1065A00
    static void SetText(::StringW newtext, ::PowerUI::Document* document);
    // static public System.Void toggleShift(PowerUI.UIEvent e)
    // Offset: 0x1065AC0
    static void toggleShift(::PowerUI::UIEvent* e);
    // static public System.Void toggleAlt(PowerUI.UIEvent e)
    // Offset: 0x1065B5C
    static void toggleAlt(::PowerUI::UIEvent* e);
    // static public System.Void releaseModifiers(PowerUI.Document document)
    // Offset: 0x1065934
    static void releaseModifiers(::PowerUI::Document* document);
    // static public System.Void addCommonPhrase(PowerUI.UIEvent e)
    // Offset: 0x1065BF8
    static void addCommonPhrase(::PowerUI::UIEvent* e);
    // static public System.Void showCommonPhrases(PowerUI.Document document)
    // Offset: 0x1065D20
    static void showCommonPhrases(::PowerUI::Document* document);
    // static public System.Void hideCommonPhrases(PowerUI.Document document)
    // Offset: 0x1065E1C
    static void hideCommonPhrases(::PowerUI::Document* document);
    // static public System.Void showCommonBugPhrases(PowerUI.Document document)
    // Offset: 0x1065EB8
    static void showCommonBugPhrases(::PowerUI::Document* document);
    // static public System.Void hideCommonBugPhrases(PowerUI.Document document)
    // Offset: 0x1065FB4
    static void hideCommonBugPhrases(::PowerUI::Document* document);
    // public System.Void .ctor()
    // Offset: 0x1066050
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static KeyboardMenu* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardMenu::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<KeyboardMenu*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x1066058
    static void _cctor();
  }; // KeyboardMenu
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::makeRow
// Il2CppName: makeRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&GlobalNamespace::KeyboardMenu::makeRow)> {
  static const MethodInfo* get() {
    static auto* layoutString = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "makeRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{layoutString});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::makeKeyboard
// Il2CppName: makeKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*)>(&GlobalNamespace::KeyboardMenu::makeKeyboard)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "makeKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::makeNumericKeyboard
// Il2CppName: makeNumericKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*)>(&GlobalNamespace::KeyboardMenu::makeNumericKeyboard)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "makeNumericKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::firstOpen
// Il2CppName: firstOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*, bool)>(&GlobalNamespace::KeyboardMenu::firstOpen)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    static auto* numericOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "firstOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document, numericOnly});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::clickKey
// Il2CppName: clickKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::KeyboardMenu::clickKey)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "clickKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::enterPressed
// Il2CppName: enterPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::KeyboardMenu::enterPressed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "enterPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::SetText
// Il2CppName: SetText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::PowerUI::Document*)>(&GlobalNamespace::KeyboardMenu::SetText)> {
  static const MethodInfo* get() {
    static auto* newtext = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "SetText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newtext, document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::toggleShift
// Il2CppName: toggleShift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::KeyboardMenu::toggleShift)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "toggleShift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::toggleAlt
// Il2CppName: toggleAlt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::KeyboardMenu::toggleAlt)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "toggleAlt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::releaseModifiers
// Il2CppName: releaseModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*)>(&GlobalNamespace::KeyboardMenu::releaseModifiers)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "releaseModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::addCommonPhrase
// Il2CppName: addCommonPhrase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::KeyboardMenu::addCommonPhrase)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "addCommonPhrase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::showCommonPhrases
// Il2CppName: showCommonPhrases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*)>(&GlobalNamespace::KeyboardMenu::showCommonPhrases)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "showCommonPhrases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::hideCommonPhrases
// Il2CppName: hideCommonPhrases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*)>(&GlobalNamespace::KeyboardMenu::hideCommonPhrases)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "hideCommonPhrases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::showCommonBugPhrases
// Il2CppName: showCommonBugPhrases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*)>(&GlobalNamespace::KeyboardMenu::showCommonBugPhrases)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "showCommonBugPhrases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::hideCommonBugPhrases
// Il2CppName: hideCommonBugPhrases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*)>(&GlobalNamespace::KeyboardMenu::hideCommonBugPhrases)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), "hideCommonBugPhrases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::KeyboardMenu::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::KeyboardMenu::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::KeyboardMenu*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
