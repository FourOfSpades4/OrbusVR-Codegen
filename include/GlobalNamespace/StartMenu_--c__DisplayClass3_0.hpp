// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: StartMenu
#include "GlobalNamespace/StartMenu.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::StartMenu::$$c__DisplayClass3_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::StartMenu::$$c__DisplayClass3_0*, "", "StartMenu/<>c__DisplayClass3_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: StartMenu/<>c__DisplayClass3_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ACE600
  class StartMenu::$$c__DisplayClass3_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 sceneIndex
    // Size: 0x4
    // Offset: 0x10
    int sceneIndex;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: sceneIndex and: $$4__this
    char __padding0[0x4] = {};
    // public StartMenu <>4__this
    // Size: 0x8
    // Offset: 0x18
    ::GlobalNamespace::StartMenu* $$4__this;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::StartMenu*) == 0x8);
    public:
    // Get instance field reference: public System.Int32 sceneIndex
    [[deprecated("Use field access instead!")]] int& dyn_sceneIndex();
    // Get instance field reference: public StartMenu <>4__this
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::StartMenu*& dyn_$$4__this();
    // public System.Void .ctor()
    // Offset: 0xDFD638
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StartMenu::$$c__DisplayClass3_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StartMenu::$$c__DisplayClass3_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StartMenu::$$c__DisplayClass3_0*, creationType>()));
    }
    // System.Void <Start>b__0()
    // Offset: 0xDFD750
    void $Start$b__0();
  }; // StartMenu/<>c__DisplayClass3_0
  #pragma pack(pop)
  static check_size<sizeof(StartMenu::$$c__DisplayClass3_0), 24 + sizeof(::GlobalNamespace::StartMenu*)> __GlobalNamespace_StartMenu_$$c__DisplayClass3_0SizeCheck;
  static_assert(sizeof(StartMenu::$$c__DisplayClass3_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::StartMenu::$$c__DisplayClass3_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::StartMenu::$$c__DisplayClass3_0::$Start$b__0
// Il2CppName: <Start>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::StartMenu::$$c__DisplayClass3_0::*)()>(&GlobalNamespace::StartMenu::$$c__DisplayClass3_0::$Start$b__0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::StartMenu::$$c__DisplayClass3_0*), "<Start>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
