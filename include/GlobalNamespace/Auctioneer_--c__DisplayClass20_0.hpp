// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Auctioneer
#include "GlobalNamespace/Auctioneer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: BinaryWriter
  class BinaryWriter;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::Auctioneer::$$c__DisplayClass20_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::Auctioneer::$$c__DisplayClass20_0*, "", "Auctioneer/<>c__DisplayClass20_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: Auctioneer/<>c__DisplayClass20_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ACDEE8
  class Auctioneer::$$c__DisplayClass20_0 : public ::Il2CppObject {
    public:
    public:
    // public System.String auctionId
    // Size: 0x8
    // Offset: 0x10
    ::StringW auctionId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String bid
    // Size: 0x8
    // Offset: 0x18
    ::StringW bid;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Int32 isBuyout
    // Size: 0x4
    // Offset: 0x20
    int isBuyout;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.String auctionId
    [[deprecated("Use field access instead!")]] ::StringW& dyn_auctionId();
    // Get instance field reference: public System.String bid
    [[deprecated("Use field access instead!")]] ::StringW& dyn_bid();
    // Get instance field reference: public System.Int32 isBuyout
    [[deprecated("Use field access instead!")]] int& dyn_isBuyout();
    // public System.Void .ctor()
    // Offset: 0x12B16B0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Auctioneer::$$c__DisplayClass20_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Auctioneer::$$c__DisplayClass20_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Auctioneer::$$c__DisplayClass20_0*, creationType>()));
    }
    // System.Void <Bid>b__0(System.IO.BinaryWriter writer)
    // Offset: 0x12B1D28
    void $Bid$b__0(::System::IO::BinaryWriter* writer);
  }; // Auctioneer/<>c__DisplayClass20_0
  #pragma pack(pop)
  static check_size<sizeof(Auctioneer::$$c__DisplayClass20_0), 32 + sizeof(int)> __GlobalNamespace_Auctioneer_$$c__DisplayClass20_0SizeCheck;
  static_assert(sizeof(Auctioneer::$$c__DisplayClass20_0) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::Auctioneer::$$c__DisplayClass20_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::Auctioneer::$$c__DisplayClass20_0::$Bid$b__0
// Il2CppName: <Bid>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::Auctioneer::$$c__DisplayClass20_0::*)(::System::IO::BinaryWriter*)>(&GlobalNamespace::Auctioneer::$$c__DisplayClass20_0::$Bid$b__0)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::Auctioneer::$$c__DisplayClass20_0*), "<Bid>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer});
  }
};
