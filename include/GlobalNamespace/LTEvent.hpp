// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: LTEvent
  class LTEvent;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::LTEvent);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::LTEvent*, "", "LTEvent");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: LTEvent
  // [TokenAttribute] Offset: FFFFFFFF
  class LTEvent : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 id
    // Size: 0x4
    // Offset: 0x10
    int id;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: id and: data
    char __padding0[0x4] = {};
    // public System.Object data
    // Size: 0x8
    // Offset: 0x18
    ::Il2CppObject* data;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    public:
    // Get instance field reference: public System.Int32 id
    [[deprecated("Use field access instead!")]] int& dyn_id();
    // Get instance field reference: public System.Object data
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_data();
    // public System.Void .ctor(System.Int32 id, System.Object data)
    // Offset: 0x1ABC614
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LTEvent* New_ctor(int id, ::Il2CppObject* data) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LTEvent::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LTEvent*, creationType>(id, data)));
    }
  }; // LTEvent
  #pragma pack(pop)
  static check_size<sizeof(LTEvent), 24 + sizeof(::Il2CppObject*)> __GlobalNamespace_LTEventSizeCheck;
  static_assert(sizeof(LTEvent) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::LTEvent::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
