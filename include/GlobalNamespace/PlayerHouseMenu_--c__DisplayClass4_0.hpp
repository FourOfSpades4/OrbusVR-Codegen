// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: PlayerHouseMenu
#include "GlobalNamespace/PlayerHouseMenu.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Document
  class Document;
}
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: CharacterPerksArray
  class CharacterPerksArray;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::PlayerHouseMenu::$$c__DisplayClass4_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::PlayerHouseMenu::$$c__DisplayClass4_0*, "", "PlayerHouseMenu/<>c__DisplayClass4_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: PlayerHouseMenu/<>c__DisplayClass4_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ACE0C4
  class PlayerHouseMenu::$$c__DisplayClass4_0 : public ::Il2CppObject {
    public:
    public:
    // public PowerUI.Document document
    // Size: 0x8
    // Offset: 0x10
    ::PowerUI::Document* document;
    // Field size check
    static_assert(sizeof(::PowerUI::Document*) == 0x8);
    public:
    // Creating conversion operator: operator ::PowerUI::Document*
    constexpr operator ::PowerUI::Document*() const noexcept {
      return document;
    }
    // Get instance field reference: public PowerUI.Document document
    [[deprecated("Use field access instead!")]] ::PowerUI::Document*& dyn_document();
    // public System.Void .ctor()
    // Offset: 0xE521C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlayerHouseMenu::$$c__DisplayClass4_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHouseMenu::$$c__DisplayClass4_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlayerHouseMenu::$$c__DisplayClass4_0*, creationType>()));
    }
    // System.Void <updatePerks>b__0(ExtUI.CharacterPerksArray perks)
    // Offset: 0xE5286C
    void $updatePerks$b__0(::ExtUI::CharacterPerksArray* perks);
  }; // PlayerHouseMenu/<>c__DisplayClass4_0
  #pragma pack(pop)
  static check_size<sizeof(PlayerHouseMenu::$$c__DisplayClass4_0), 16 + sizeof(::PowerUI::Document*)> __GlobalNamespace_PlayerHouseMenu_$$c__DisplayClass4_0SizeCheck;
  static_assert(sizeof(PlayerHouseMenu::$$c__DisplayClass4_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::PlayerHouseMenu::$$c__DisplayClass4_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::PlayerHouseMenu::$$c__DisplayClass4_0::$updatePerks$b__0
// Il2CppName: <updatePerks>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::PlayerHouseMenu::$$c__DisplayClass4_0::*)(::ExtUI::CharacterPerksArray*)>(&GlobalNamespace::PlayerHouseMenu::$$c__DisplayClass4_0::$updatePerks$b__0)> {
  static const MethodInfo* get() {
    static auto* perks = &::il2cpp_utils::GetClassFromName("ExtUI", "CharacterPerksArray")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::PlayerHouseMenu::$$c__DisplayClass4_0*), "<updatePerks>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{perks});
  }
};
