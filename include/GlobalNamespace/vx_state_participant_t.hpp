// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: vx_participant_type
  struct vx_participant_type;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: vx_state_participant_t
  class vx_state_participant_t;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::vx_state_participant_t);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::vx_state_participant_t*, "", "vx_state_participant_t");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: vx_state_participant_t
  // [TokenAttribute] Offset: FFFFFFFF
  class vx_state_participant_t : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated("Use field access instead!")]] bool& dyn_swigCMemOwn();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0x281FDC0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_state_participant_t* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_state_participant_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_state_participant_t*, creationType>(cPtr, cMemoryOwn)));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(vx_state_participant_t obj)
    // Offset: 0x281FE24
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::GlobalNamespace::vx_state_participant_t* obj);
    // public System.Void Dispose()
    // Offset: 0x281FF14
    void Dispose();
    // public System.Void set_uri(System.String value)
    // Offset: 0x2820084
    void set_uri(::StringW value);
    // public System.String get_uri()
    // Offset: 0x2820104
    ::StringW get_uri();
    // public System.Void set_display_name(System.String value)
    // Offset: 0x2820174
    void set_display_name(::StringW value);
    // public System.String get_display_name()
    // Offset: 0x28201F4
    ::StringW get_display_name();
    // public System.Void set_is_audio_enabled(System.Int32 value)
    // Offset: 0x2820264
    void set_is_audio_enabled(int value);
    // public System.Int32 get_is_audio_enabled()
    // Offset: 0x28202E4
    int get_is_audio_enabled();
    // public System.Void set_is_text_enabled(System.Int32 value)
    // Offset: 0x2820354
    void set_is_text_enabled(int value);
    // public System.Int32 get_is_text_enabled()
    // Offset: 0x28203D4
    int get_is_text_enabled();
    // public System.Void set_is_audio_muted_for_me(System.Int32 value)
    // Offset: 0x2820444
    void set_is_audio_muted_for_me(int value);
    // public System.Int32 get_is_audio_muted_for_me()
    // Offset: 0x28204C4
    int get_is_audio_muted_for_me();
    // public System.Void set_is_text_muted_for_me(System.Int32 value)
    // Offset: 0x2820534
    void set_is_text_muted_for_me(int value);
    // public System.Int32 get_is_text_muted_for_me()
    // Offset: 0x28205B4
    int get_is_text_muted_for_me();
    // public System.Void set_is_audio_moderator_muted(System.Int32 value)
    // Offset: 0x2820624
    void set_is_audio_moderator_muted(int value);
    // public System.Int32 get_is_audio_moderator_muted()
    // Offset: 0x28206A4
    int get_is_audio_moderator_muted();
    // public System.Void set_is_text_moderator_muted(System.Int32 value)
    // Offset: 0x2820714
    void set_is_text_moderator_muted(int value);
    // public System.Int32 get_is_text_moderator_muted()
    // Offset: 0x2820794
    int get_is_text_moderator_muted();
    // public System.Void set_is_hand_raised(System.Int32 value)
    // Offset: 0x2820804
    void set_is_hand_raised(int value);
    // public System.Int32 get_is_hand_raised()
    // Offset: 0x2820884
    int get_is_hand_raised();
    // public System.Void set_is_typing(System.Int32 value)
    // Offset: 0x28208F4
    void set_is_typing(int value);
    // public System.Int32 get_is_typing()
    // Offset: 0x2820974
    int get_is_typing();
    // public System.Void set_is_speaking(System.Int32 value)
    // Offset: 0x28209E4
    void set_is_speaking(int value);
    // public System.Int32 get_is_speaking()
    // Offset: 0x2820A64
    int get_is_speaking();
    // public System.Void set_volume(System.Int32 value)
    // Offset: 0x2820AD4
    void set_volume(int value);
    // public System.Int32 get_volume()
    // Offset: 0x2820B54
    int get_volume();
    // public System.Void set_energy(System.Double value)
    // Offset: 0x2820BC4
    void set_energy(double value);
    // public System.Double get_energy()
    // Offset: 0x2820C44
    double get_energy();
    // public System.Void set_type(vx_participant_type value)
    // Offset: 0x2820CB4
    void set_type(::GlobalNamespace::vx_participant_type value);
    // public vx_participant_type get_type()
    // Offset: 0x2820D34
    ::GlobalNamespace::vx_participant_type get_type();
    // public System.Void set_is_anonymous_login(System.Int32 value)
    // Offset: 0x2820DA4
    void set_is_anonymous_login(int value);
    // public System.Int32 get_is_anonymous_login()
    // Offset: 0x2820E24
    int get_is_anonymous_login();
    // public System.Void .ctor()
    // Offset: 0x2820E94
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_state_participant_t* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_state_participant_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_state_participant_t*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x281FE98
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // vx_state_participant_t
  #pragma pack(pop)
  static check_size<sizeof(vx_state_participant_t), 32 + sizeof(bool)> __GlobalNamespace_vx_state_participant_tSizeCheck;
  static_assert(sizeof(vx_state_participant_t) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::GlobalNamespace::vx_state_participant_t*)>(&GlobalNamespace::vx_state_participant_t::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("", "vx_state_participant_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_uri
// Il2CppName: set_uri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(::StringW)>(&GlobalNamespace::vx_state_participant_t::set_uri)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_uri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_uri
// Il2CppName: get_uri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_uri)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_uri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_display_name
// Il2CppName: set_display_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(::StringW)>(&GlobalNamespace::vx_state_participant_t::set_display_name)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_display_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_display_name
// Il2CppName: get_display_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_display_name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_display_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_is_audio_enabled
// Il2CppName: set_is_audio_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(int)>(&GlobalNamespace::vx_state_participant_t::set_is_audio_enabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_is_audio_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_is_audio_enabled
// Il2CppName: get_is_audio_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_is_audio_enabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_is_audio_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_is_text_enabled
// Il2CppName: set_is_text_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(int)>(&GlobalNamespace::vx_state_participant_t::set_is_text_enabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_is_text_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_is_text_enabled
// Il2CppName: get_is_text_enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_is_text_enabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_is_text_enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_is_audio_muted_for_me
// Il2CppName: set_is_audio_muted_for_me
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(int)>(&GlobalNamespace::vx_state_participant_t::set_is_audio_muted_for_me)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_is_audio_muted_for_me", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_is_audio_muted_for_me
// Il2CppName: get_is_audio_muted_for_me
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_is_audio_muted_for_me)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_is_audio_muted_for_me", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_is_text_muted_for_me
// Il2CppName: set_is_text_muted_for_me
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(int)>(&GlobalNamespace::vx_state_participant_t::set_is_text_muted_for_me)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_is_text_muted_for_me", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_is_text_muted_for_me
// Il2CppName: get_is_text_muted_for_me
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_is_text_muted_for_me)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_is_text_muted_for_me", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_is_audio_moderator_muted
// Il2CppName: set_is_audio_moderator_muted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(int)>(&GlobalNamespace::vx_state_participant_t::set_is_audio_moderator_muted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_is_audio_moderator_muted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_is_audio_moderator_muted
// Il2CppName: get_is_audio_moderator_muted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_is_audio_moderator_muted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_is_audio_moderator_muted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_is_text_moderator_muted
// Il2CppName: set_is_text_moderator_muted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(int)>(&GlobalNamespace::vx_state_participant_t::set_is_text_moderator_muted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_is_text_moderator_muted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_is_text_moderator_muted
// Il2CppName: get_is_text_moderator_muted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_is_text_moderator_muted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_is_text_moderator_muted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_is_hand_raised
// Il2CppName: set_is_hand_raised
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(int)>(&GlobalNamespace::vx_state_participant_t::set_is_hand_raised)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_is_hand_raised", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_is_hand_raised
// Il2CppName: get_is_hand_raised
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_is_hand_raised)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_is_hand_raised", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_is_typing
// Il2CppName: set_is_typing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(int)>(&GlobalNamespace::vx_state_participant_t::set_is_typing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_is_typing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_is_typing
// Il2CppName: get_is_typing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_is_typing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_is_typing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_is_speaking
// Il2CppName: set_is_speaking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(int)>(&GlobalNamespace::vx_state_participant_t::set_is_speaking)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_is_speaking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_is_speaking
// Il2CppName: get_is_speaking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_is_speaking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_is_speaking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_volume
// Il2CppName: set_volume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(int)>(&GlobalNamespace::vx_state_participant_t::set_volume)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_volume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_volume
// Il2CppName: get_volume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_volume)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_volume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_energy
// Il2CppName: set_energy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(double)>(&GlobalNamespace::vx_state_participant_t::set_energy)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_energy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_energy
// Il2CppName: get_energy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_energy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_energy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_type
// Il2CppName: set_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(::GlobalNamespace::vx_participant_type)>(&GlobalNamespace::vx_state_participant_t::set_type)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_participant_type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_type
// Il2CppName: get_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_participant_type (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::set_is_anonymous_login
// Il2CppName: set_is_anonymous_login
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)(int)>(&GlobalNamespace::vx_state_participant_t::set_is_anonymous_login)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "set_is_anonymous_login", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::get_is_anonymous_login
// Il2CppName: get_is_anonymous_login
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::get_is_anonymous_login)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "get_is_anonymous_login", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_state_participant_t::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_participant_t::*)()>(&GlobalNamespace::vx_state_participant_t::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_participant_t*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
