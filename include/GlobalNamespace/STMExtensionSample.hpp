// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SuperTextMesh
  class SuperTextMesh;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: STMExtensionSample
  class STMExtensionSample;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::STMExtensionSample);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::STMExtensionSample*, "", "STMExtensionSample");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: STMExtensionSample
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class STMExtensionSample : public ::Il2CppObject {
    public:
    // static public System.Void SetTextWithStringAtStart(SuperTextMesh stm, System.String extra)
    // Offset: 0xE2DFB8
    static void SetTextWithStringAtStart(::GlobalNamespace::SuperTextMesh* stm, ::StringW extra);
    // static public System.Void SetUppercaseText(SuperTextMesh superTextMesh, System.String newText)
    // Offset: 0xE2E018
    static void SetUppercaseText(::GlobalNamespace::SuperTextMesh* superTextMesh, ::StringW newText);
  }; // STMExtensionSample
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::STMExtensionSample::SetTextWithStringAtStart
// Il2CppName: SetTextWithStringAtStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::SuperTextMesh*, ::StringW)>(&GlobalNamespace::STMExtensionSample::SetTextWithStringAtStart)> {
  static const MethodInfo* get() {
    static auto* stm = &::il2cpp_utils::GetClassFromName("", "SuperTextMesh")->byval_arg;
    static auto* extra = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::STMExtensionSample*), "SetTextWithStringAtStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{stm, extra});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::STMExtensionSample::SetUppercaseText
// Il2CppName: SetUppercaseText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::SuperTextMesh*, ::StringW)>(&GlobalNamespace::STMExtensionSample::SetUppercaseText)> {
  static const MethodInfo* get() {
    static auto* superTextMesh = &::il2cpp_utils::GetClassFromName("", "SuperTextMesh")->byval_arg;
    static auto* newText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::STMExtensionSample*), "SetUppercaseText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{superTextMesh, newText});
  }
};
