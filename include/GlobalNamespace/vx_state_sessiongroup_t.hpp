// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SWIGTYPE_p_p_vx_state_session
  class SWIGTYPE_p_p_vx_state_session;
  // Forward declaring type: vx_sessiongroup_playback_mode
  struct vx_sessiongroup_playback_mode;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: vx_state_sessiongroup_t
  class vx_state_sessiongroup_t;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::vx_state_sessiongroup_t);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::vx_state_sessiongroup_t*, "", "vx_state_sessiongroup_t");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: vx_state_sessiongroup_t
  // [TokenAttribute] Offset: FFFFFFFF
  class vx_state_sessiongroup_t : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated("Use field access instead!")]] bool& dyn_swigCMemOwn();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0x282228C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_state_sessiongroup_t* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_state_sessiongroup_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_state_sessiongroup_t*, creationType>(cPtr, cMemoryOwn)));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(vx_state_sessiongroup_t obj)
    // Offset: 0x28222F0
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::GlobalNamespace::vx_state_sessiongroup_t* obj);
    // public System.Void Dispose()
    // Offset: 0x28223E0
    void Dispose();
    // public System.Void set_sessiongroup_handle(System.String value)
    // Offset: 0x2822550
    void set_sessiongroup_handle(::StringW value);
    // public System.String get_sessiongroup_handle()
    // Offset: 0x28225D0
    ::StringW get_sessiongroup_handle();
    // public System.Void set_state_sessions_count(System.Int32 value)
    // Offset: 0x2822640
    void set_state_sessions_count(int value);
    // public System.Int32 get_state_sessions_count()
    // Offset: 0x28226C0
    int get_state_sessions_count();
    // public System.Void set_state_sessions(SWIGTYPE_p_p_vx_state_session value)
    // Offset: 0x2822730
    void set_state_sessions(::GlobalNamespace::SWIGTYPE_p_p_vx_state_session* value);
    // public SWIGTYPE_p_p_vx_state_session get_state_sessions()
    // Offset: 0x28227C8
    ::GlobalNamespace::SWIGTYPE_p_p_vx_state_session* get_state_sessions();
    // public System.Void set_in_delayed_playback(System.Int32 value)
    // Offset: 0x282287C
    void set_in_delayed_playback(int value);
    // public System.Int32 get_in_delayed_playback()
    // Offset: 0x28228FC
    int get_in_delayed_playback();
    // public System.Void set_current_playback_speed(System.Double value)
    // Offset: 0x282296C
    void set_current_playback_speed(double value);
    // public System.Double get_current_playback_speed()
    // Offset: 0x28229EC
    double get_current_playback_speed();
    // public System.Void set_current_playback_mode(vx_sessiongroup_playback_mode value)
    // Offset: 0x2822A5C
    void set_current_playback_mode(::GlobalNamespace::vx_sessiongroup_playback_mode value);
    // public vx_sessiongroup_playback_mode get_current_playback_mode()
    // Offset: 0x2822ADC
    ::GlobalNamespace::vx_sessiongroup_playback_mode get_current_playback_mode();
    // public System.Void set_playback_paused(System.Int32 value)
    // Offset: 0x2822B4C
    void set_playback_paused(int value);
    // public System.Int32 get_playback_paused()
    // Offset: 0x2822BCC
    int get_playback_paused();
    // public System.Void set_loop_buffer_capacity(System.Int32 value)
    // Offset: 0x2822C3C
    void set_loop_buffer_capacity(int value);
    // public System.Int32 get_loop_buffer_capacity()
    // Offset: 0x2822CBC
    int get_loop_buffer_capacity();
    // public System.Void set_first_loop_frame(System.Int32 value)
    // Offset: 0x2822D2C
    void set_first_loop_frame(int value);
    // public System.Int32 get_first_loop_frame()
    // Offset: 0x2822DAC
    int get_first_loop_frame();
    // public System.Void set_total_loop_frames_captured(System.Int32 value)
    // Offset: 0x2822E1C
    void set_total_loop_frames_captured(int value);
    // public System.Int32 get_total_loop_frames_captured()
    // Offset: 0x2822E9C
    int get_total_loop_frames_captured();
    // public System.Void set_last_loop_frame_played(System.Int32 value)
    // Offset: 0x2822F0C
    void set_last_loop_frame_played(int value);
    // public System.Int32 get_last_loop_frame_played()
    // Offset: 0x2822F8C
    int get_last_loop_frame_played();
    // public System.Void set_current_recording_filename(System.String value)
    // Offset: 0x2822FFC
    void set_current_recording_filename(::StringW value);
    // public System.String get_current_recording_filename()
    // Offset: 0x282307C
    ::StringW get_current_recording_filename();
    // public System.Void set_total_recorded_frames(System.Int32 value)
    // Offset: 0x28230EC
    void set_total_recorded_frames(int value);
    // public System.Int32 get_total_recorded_frames()
    // Offset: 0x282316C
    int get_total_recorded_frames();
    // public System.Void .ctor()
    // Offset: 0x28231DC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_state_sessiongroup_t* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_state_sessiongroup_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_state_sessiongroup_t*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x2822364
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // vx_state_sessiongroup_t
  #pragma pack(pop)
  static check_size<sizeof(vx_state_sessiongroup_t), 32 + sizeof(bool)> __GlobalNamespace_vx_state_sessiongroup_tSizeCheck;
  static_assert(sizeof(vx_state_sessiongroup_t) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::GlobalNamespace::vx_state_sessiongroup_t*)>(&GlobalNamespace::vx_state_sessiongroup_t::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("", "vx_state_sessiongroup_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_sessiongroup_handle
// Il2CppName: set_sessiongroup_handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(::StringW)>(&GlobalNamespace::vx_state_sessiongroup_t::set_sessiongroup_handle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_sessiongroup_handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_sessiongroup_handle
// Il2CppName: get_sessiongroup_handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_sessiongroup_handle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_sessiongroup_handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_state_sessions_count
// Il2CppName: set_state_sessions_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(int)>(&GlobalNamespace::vx_state_sessiongroup_t::set_state_sessions_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_state_sessions_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_state_sessions_count
// Il2CppName: get_state_sessions_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_state_sessions_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_state_sessions_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_state_sessions
// Il2CppName: set_state_sessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(::GlobalNamespace::SWIGTYPE_p_p_vx_state_session*)>(&GlobalNamespace::vx_state_sessiongroup_t::set_state_sessions)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_p_vx_state_session")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_state_sessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_state_sessions
// Il2CppName: get_state_sessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_p_vx_state_session* (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_state_sessions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_state_sessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_in_delayed_playback
// Il2CppName: set_in_delayed_playback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(int)>(&GlobalNamespace::vx_state_sessiongroup_t::set_in_delayed_playback)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_in_delayed_playback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_in_delayed_playback
// Il2CppName: get_in_delayed_playback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_in_delayed_playback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_in_delayed_playback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_current_playback_speed
// Il2CppName: set_current_playback_speed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(double)>(&GlobalNamespace::vx_state_sessiongroup_t::set_current_playback_speed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_current_playback_speed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_current_playback_speed
// Il2CppName: get_current_playback_speed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_current_playback_speed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_current_playback_speed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_current_playback_mode
// Il2CppName: set_current_playback_mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(::GlobalNamespace::vx_sessiongroup_playback_mode)>(&GlobalNamespace::vx_state_sessiongroup_t::set_current_playback_mode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_sessiongroup_playback_mode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_current_playback_mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_current_playback_mode
// Il2CppName: get_current_playback_mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_sessiongroup_playback_mode (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_current_playback_mode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_current_playback_mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_playback_paused
// Il2CppName: set_playback_paused
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(int)>(&GlobalNamespace::vx_state_sessiongroup_t::set_playback_paused)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_playback_paused", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_playback_paused
// Il2CppName: get_playback_paused
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_playback_paused)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_playback_paused", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_loop_buffer_capacity
// Il2CppName: set_loop_buffer_capacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(int)>(&GlobalNamespace::vx_state_sessiongroup_t::set_loop_buffer_capacity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_loop_buffer_capacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_loop_buffer_capacity
// Il2CppName: get_loop_buffer_capacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_loop_buffer_capacity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_loop_buffer_capacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_first_loop_frame
// Il2CppName: set_first_loop_frame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(int)>(&GlobalNamespace::vx_state_sessiongroup_t::set_first_loop_frame)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_first_loop_frame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_first_loop_frame
// Il2CppName: get_first_loop_frame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_first_loop_frame)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_first_loop_frame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_total_loop_frames_captured
// Il2CppName: set_total_loop_frames_captured
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(int)>(&GlobalNamespace::vx_state_sessiongroup_t::set_total_loop_frames_captured)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_total_loop_frames_captured", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_total_loop_frames_captured
// Il2CppName: get_total_loop_frames_captured
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_total_loop_frames_captured)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_total_loop_frames_captured", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_last_loop_frame_played
// Il2CppName: set_last_loop_frame_played
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(int)>(&GlobalNamespace::vx_state_sessiongroup_t::set_last_loop_frame_played)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_last_loop_frame_played", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_last_loop_frame_played
// Il2CppName: get_last_loop_frame_played
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_last_loop_frame_played)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_last_loop_frame_played", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_current_recording_filename
// Il2CppName: set_current_recording_filename
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(::StringW)>(&GlobalNamespace::vx_state_sessiongroup_t::set_current_recording_filename)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_current_recording_filename", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_current_recording_filename
// Il2CppName: get_current_recording_filename
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_current_recording_filename)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_current_recording_filename", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::set_total_recorded_frames
// Il2CppName: set_total_recorded_frames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)(int)>(&GlobalNamespace::vx_state_sessiongroup_t::set_total_recorded_frames)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "set_total_recorded_frames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::get_total_recorded_frames
// Il2CppName: get_total_recorded_frames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::get_total_recorded_frames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "get_total_recorded_frames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_state_sessiongroup_t::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_state_sessiongroup_t::*)()>(&GlobalNamespace::vx_state_sessiongroup_t::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_state_sessiongroup_t*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
