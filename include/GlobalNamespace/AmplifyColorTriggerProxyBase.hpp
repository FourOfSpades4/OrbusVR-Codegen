// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: AmplifyColorBase
  class AmplifyColorBase;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: AmplifyColorTriggerProxyBase
  class AmplifyColorTriggerProxyBase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::AmplifyColorTriggerProxyBase);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::AmplifyColorTriggerProxyBase*, "", "AmplifyColorTriggerProxyBase");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyColorTriggerProxyBase
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: ACCCA0
  class AmplifyColorTriggerProxyBase : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public UnityEngine.Transform Reference
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Transform* Reference;
    // Field size check
    static_assert(sizeof(::UnityEngine::Transform*) == 0x8);
    // public AmplifyColorBase OwnerEffect
    // Size: 0x8
    // Offset: 0x20
    ::GlobalNamespace::AmplifyColorBase* OwnerEffect;
    // Field size check
    static_assert(sizeof(::GlobalNamespace::AmplifyColorBase*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Transform Reference
    [[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& dyn_Reference();
    // Get instance field reference: public AmplifyColorBase OwnerEffect
    [[deprecated("Use field access instead!")]] ::GlobalNamespace::AmplifyColorBase*& dyn_OwnerEffect();
    // public System.Void .ctor()
    // Offset: 0xF08BDC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AmplifyColorTriggerProxyBase* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxyBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AmplifyColorTriggerProxyBase*, creationType>()));
    }
  }; // AmplifyColorTriggerProxyBase
  #pragma pack(pop)
  static check_size<sizeof(AmplifyColorTriggerProxyBase), 32 + sizeof(::GlobalNamespace::AmplifyColorBase*)> __GlobalNamespace_AmplifyColorTriggerProxyBaseSizeCheck;
  static_assert(sizeof(AmplifyColorTriggerProxyBase) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::AmplifyColorTriggerProxyBase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
