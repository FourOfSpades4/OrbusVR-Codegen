// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: CSVReader
  class CSVReader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::CSVReader);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::CSVReader*, "", "CSVReader");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: CSVReader
  // [TokenAttribute] Offset: FFFFFFFF
  class CSVReader : public ::Il2CppObject {
    public:
    // Get static field: static private System.String SPLIT_RE
    static ::StringW _get_SPLIT_RE();
    // Set static field: static private System.String SPLIT_RE
    static void _set_SPLIT_RE(::StringW value);
    // Get static field: static private System.String LINE_SPLIT_RE
    static ::StringW _get_LINE_SPLIT_RE();
    // Set static field: static private System.String LINE_SPLIT_RE
    static void _set_LINE_SPLIT_RE(::StringW value);
    // Get static field: static private System.Char[] TRIM_CHARS
    static ::ArrayW<::Il2CppChar> _get_TRIM_CHARS();
    // Set static field: static private System.Char[] TRIM_CHARS
    static void _set_TRIM_CHARS(::ArrayW<::Il2CppChar> value);
    // static public System.Collections.Generic.List`1<System.Collections.Generic.Dictionary`2<System.Int32,System.Object>> Read(System.String file)
    // Offset: 0xDDEC40
    static ::System::Collections::Generic::List_1<::System::Collections::Generic::Dictionary_2<int, ::Il2CppObject*>*>* Read(::StringW file);
    // public System.Void .ctor()
    // Offset: 0xDDF1E0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CSVReader* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CSVReader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CSVReader*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0xDDF1E8
    static void _cctor();
  }; // CSVReader
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::CSVReader::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::System::Collections::Generic::Dictionary_2<int, ::Il2CppObject*>*>* (*)(::StringW)>(&GlobalNamespace::CSVReader::Read)> {
  static const MethodInfo* get() {
    static auto* file = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CSVReader*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{file});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::CSVReader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::CSVReader::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::CSVReader::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::CSVReader*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
