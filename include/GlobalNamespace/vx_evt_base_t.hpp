// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: vx_evt_account_login_state_change_t
  class vx_evt_account_login_state_change_t;
  // Forward declaring type: vx_evt_buddy_presence_t
  class vx_evt_buddy_presence_t;
  // Forward declaring type: vx_evt_subscription_t
  class vx_evt_subscription_t;
  // Forward declaring type: vx_evt_session_notification_t
  class vx_evt_session_notification_t;
  // Forward declaring type: vx_evt_message_t
  class vx_evt_message_t;
  // Forward declaring type: vx_evt_session_archive_message_t
  class vx_evt_session_archive_message_t;
  // Forward declaring type: vx_evt_transcribed_message_t
  class vx_evt_transcribed_message_t;
  // Forward declaring type: vx_evt_session_archive_query_end_t
  class vx_evt_session_archive_query_end_t;
  // Forward declaring type: vx_evt_aux_audio_properties_t
  class vx_evt_aux_audio_properties_t;
  // Forward declaring type: vx_evt_buddy_changed_t
  class vx_evt_buddy_changed_t;
  // Forward declaring type: vx_evt_buddy_group_changed_t
  class vx_evt_buddy_group_changed_t;
  // Forward declaring type: vx_evt_buddy_and_group_list_changed_t
  class vx_evt_buddy_and_group_list_changed_t;
  // Forward declaring type: vx_evt_keyboard_mouse_t
  class vx_evt_keyboard_mouse_t;
  // Forward declaring type: vx_evt_idle_state_changed_t
  class vx_evt_idle_state_changed_t;
  // Forward declaring type: vx_evt_media_stream_updated_t
  class vx_evt_media_stream_updated_t;
  // Forward declaring type: vx_evt_text_stream_updated_t
  class vx_evt_text_stream_updated_t;
  // Forward declaring type: vx_evt_sessiongroup_added_t
  class vx_evt_sessiongroup_added_t;
  // Forward declaring type: vx_evt_sessiongroup_removed_t
  class vx_evt_sessiongroup_removed_t;
  // Forward declaring type: vx_evt_session_added_t
  class vx_evt_session_added_t;
  // Forward declaring type: vx_evt_session_removed_t
  class vx_evt_session_removed_t;
  // Forward declaring type: vx_evt_participant_added_t
  class vx_evt_participant_added_t;
  // Forward declaring type: vx_evt_participant_removed_t
  class vx_evt_participant_removed_t;
  // Forward declaring type: vx_evt_participant_updated_t
  class vx_evt_participant_updated_t;
  // Forward declaring type: vx_evt_sessiongroup_playback_frame_played_t
  class vx_evt_sessiongroup_playback_frame_played_t;
  // Forward declaring type: vx_evt_session_updated_t
  class vx_evt_session_updated_t;
  // Forward declaring type: vx_evt_sessiongroup_updated_t
  class vx_evt_sessiongroup_updated_t;
  // Forward declaring type: vx_evt_media_completion_t
  class vx_evt_media_completion_t;
  // Forward declaring type: vx_evt_server_app_data_t
  class vx_evt_server_app_data_t;
  // Forward declaring type: vx_evt_user_app_data_t
  class vx_evt_user_app_data_t;
  // Forward declaring type: vx_evt_network_message_t
  class vx_evt_network_message_t;
  // Forward declaring type: vx_evt_voice_service_connection_state_changed_t
  class vx_evt_voice_service_connection_state_changed_t;
  // Forward declaring type: vx_evt_publication_state_changed_t
  class vx_evt_publication_state_changed_t;
  // Forward declaring type: vx_evt_audio_device_hot_swap_t
  class vx_evt_audio_device_hot_swap_t;
  // Forward declaring type: vx_evt_user_to_user_message_t
  class vx_evt_user_to_user_message_t;
  // Forward declaring type: vx_evt_account_archive_message_t
  class vx_evt_account_archive_message_t;
  // Forward declaring type: vx_evt_account_archive_query_end_t
  class vx_evt_account_archive_query_end_t;
  // Forward declaring type: vx_evt_account_send_message_failed_t
  class vx_evt_account_send_message_failed_t;
  // Forward declaring type: vx_evt_tts_injection_started_t
  class vx_evt_tts_injection_started_t;
  // Forward declaring type: vx_evt_tts_injection_ended_t
  class vx_evt_tts_injection_ended_t;
  // Forward declaring type: vx_evt_tts_injection_failed_t
  class vx_evt_tts_injection_failed_t;
  // Forward declaring type: vx_message_base_t
  class vx_message_base_t;
  // Forward declaring type: vx_event_type
  struct vx_event_type;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: vx_evt_base_t
  class vx_evt_base_t;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::vx_evt_base_t);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::vx_evt_base_t*, "", "vx_evt_base_t");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: vx_evt_base_t
  // [TokenAttribute] Offset: FFFFFFFF
  class vx_evt_base_t : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated("Use field access instead!")]] bool& dyn_swigCMemOwn();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0x12E6AF8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_evt_base_t* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_evt_base_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_evt_base_t*, creationType>(cPtr, cMemoryOwn)));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(vx_evt_base_t obj)
    // Offset: 0x12E69D4
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::GlobalNamespace::vx_evt_base_t* obj);
    // public System.Void Dispose()
    // Offset: 0x12EA8E8
    void Dispose();
    // public System.Void set_message(vx_message_base_t value)
    // Offset: 0x12ECC28
    void set_message(::GlobalNamespace::vx_message_base_t* value);
    // public vx_message_base_t get_message()
    // Offset: 0x12ECCC0
    ::GlobalNamespace::vx_message_base_t* get_message();
    // public System.Void set_type(vx_event_type value)
    // Offset: 0x12ECD74
    void set_type(::GlobalNamespace::vx_event_type value);
    // public vx_event_type get_type()
    // Offset: 0x12D7254
    ::GlobalNamespace::vx_event_type get_type();
    // public System.Void set_extended_status_info(System.String value)
    // Offset: 0x12ECDF4
    void set_extended_status_info(::StringW value);
    // public System.String get_extended_status_info()
    // Offset: 0x12ECE74
    ::StringW get_extended_status_info();
    // public vx_evt_account_login_state_change_t as_vx_evt_account_login_state_change()
    // Offset: 0x12EAA80
    ::GlobalNamespace::vx_evt_account_login_state_change_t* as_vx_evt_account_login_state_change();
    // public vx_evt_buddy_presence_t as_vx_evt_buddy_presence()
    // Offset: 0x12EAB58
    ::GlobalNamespace::vx_evt_buddy_presence_t* as_vx_evt_buddy_presence();
    // public vx_evt_subscription_t as_vx_evt_subscription()
    // Offset: 0x12EAC34
    ::GlobalNamespace::vx_evt_subscription_t* as_vx_evt_subscription();
    // public vx_evt_session_notification_t as_vx_evt_session_notification()
    // Offset: 0x12EAD10
    ::GlobalNamespace::vx_evt_session_notification_t* as_vx_evt_session_notification();
    // public vx_evt_message_t as_vx_evt_message()
    // Offset: 0x12EADEC
    ::GlobalNamespace::vx_evt_message_t* as_vx_evt_message();
    // public vx_evt_session_archive_message_t as_vx_evt_session_archive_message()
    // Offset: 0x12EAEC8
    ::GlobalNamespace::vx_evt_session_archive_message_t* as_vx_evt_session_archive_message();
    // public vx_evt_transcribed_message_t as_vx_evt_transcribed_message()
    // Offset: 0x12EAFA4
    ::GlobalNamespace::vx_evt_transcribed_message_t* as_vx_evt_transcribed_message();
    // public vx_evt_session_archive_query_end_t as_vx_evt_session_archive_query_end()
    // Offset: 0x12EB080
    ::GlobalNamespace::vx_evt_session_archive_query_end_t* as_vx_evt_session_archive_query_end();
    // public vx_evt_aux_audio_properties_t as_vx_evt_aux_audio_properties()
    // Offset: 0x12EB15C
    ::GlobalNamespace::vx_evt_aux_audio_properties_t* as_vx_evt_aux_audio_properties();
    // public vx_evt_buddy_changed_t as_vx_evt_buddy_changed()
    // Offset: 0x12EB234
    ::GlobalNamespace::vx_evt_buddy_changed_t* as_vx_evt_buddy_changed();
    // public vx_evt_buddy_group_changed_t as_vx_evt_buddy_group_changed()
    // Offset: 0x12EB310
    ::GlobalNamespace::vx_evt_buddy_group_changed_t* as_vx_evt_buddy_group_changed();
    // public vx_evt_buddy_and_group_list_changed_t as_vx_evt_buddy_and_group_list_changed()
    // Offset: 0x12EB3EC
    ::GlobalNamespace::vx_evt_buddy_and_group_list_changed_t* as_vx_evt_buddy_and_group_list_changed();
    // public vx_evt_keyboard_mouse_t as_vx_evt_keyboard_mouse()
    // Offset: 0x12EB4C8
    ::GlobalNamespace::vx_evt_keyboard_mouse_t* as_vx_evt_keyboard_mouse();
    // public vx_evt_idle_state_changed_t as_vx_evt_idle_state_changed()
    // Offset: 0x12EB5A4
    ::GlobalNamespace::vx_evt_idle_state_changed_t* as_vx_evt_idle_state_changed();
    // public vx_evt_media_stream_updated_t as_vx_evt_media_stream_updated()
    // Offset: 0x12EB680
    ::GlobalNamespace::vx_evt_media_stream_updated_t* as_vx_evt_media_stream_updated();
    // public vx_evt_text_stream_updated_t as_vx_evt_text_stream_updated()
    // Offset: 0x12EB75C
    ::GlobalNamespace::vx_evt_text_stream_updated_t* as_vx_evt_text_stream_updated();
    // public vx_evt_sessiongroup_added_t as_vx_evt_sessiongroup_added()
    // Offset: 0x12EB838
    ::GlobalNamespace::vx_evt_sessiongroup_added_t* as_vx_evt_sessiongroup_added();
    // public vx_evt_sessiongroup_removed_t as_vx_evt_sessiongroup_removed()
    // Offset: 0x12EB914
    ::GlobalNamespace::vx_evt_sessiongroup_removed_t* as_vx_evt_sessiongroup_removed();
    // public vx_evt_session_added_t as_vx_evt_session_added()
    // Offset: 0x12EB9F0
    ::GlobalNamespace::vx_evt_session_added_t* as_vx_evt_session_added();
    // public vx_evt_session_removed_t as_vx_evt_session_removed()
    // Offset: 0x12EBACC
    ::GlobalNamespace::vx_evt_session_removed_t* as_vx_evt_session_removed();
    // public vx_evt_participant_added_t as_vx_evt_participant_added()
    // Offset: 0x12EBBA8
    ::GlobalNamespace::vx_evt_participant_added_t* as_vx_evt_participant_added();
    // public vx_evt_participant_removed_t as_vx_evt_participant_removed()
    // Offset: 0x12EBC84
    ::GlobalNamespace::vx_evt_participant_removed_t* as_vx_evt_participant_removed();
    // public vx_evt_participant_updated_t as_vx_evt_participant_updated()
    // Offset: 0x12EBD60
    ::GlobalNamespace::vx_evt_participant_updated_t* as_vx_evt_participant_updated();
    // public vx_evt_sessiongroup_playback_frame_played_t as_vx_evt_sessiongroup_playback_frame_played()
    // Offset: 0x12EBE3C
    ::GlobalNamespace::vx_evt_sessiongroup_playback_frame_played_t* as_vx_evt_sessiongroup_playback_frame_played();
    // public vx_evt_session_updated_t as_vx_evt_session_updated()
    // Offset: 0x12EBF18
    ::GlobalNamespace::vx_evt_session_updated_t* as_vx_evt_session_updated();
    // public vx_evt_sessiongroup_updated_t as_vx_evt_sessiongroup_updated()
    // Offset: 0x12EBFF4
    ::GlobalNamespace::vx_evt_sessiongroup_updated_t* as_vx_evt_sessiongroup_updated();
    // public vx_evt_media_completion_t as_vx_evt_media_completion()
    // Offset: 0x12EC0D0
    ::GlobalNamespace::vx_evt_media_completion_t* as_vx_evt_media_completion();
    // public vx_evt_server_app_data_t as_vx_evt_server_app_data()
    // Offset: 0x12EC1AC
    ::GlobalNamespace::vx_evt_server_app_data_t* as_vx_evt_server_app_data();
    // public vx_evt_user_app_data_t as_vx_evt_user_app_data()
    // Offset: 0x12EC288
    ::GlobalNamespace::vx_evt_user_app_data_t* as_vx_evt_user_app_data();
    // public vx_evt_network_message_t as_vx_evt_network_message()
    // Offset: 0x12EC364
    ::GlobalNamespace::vx_evt_network_message_t* as_vx_evt_network_message();
    // public vx_evt_voice_service_connection_state_changed_t as_vx_evt_voice_service_connection_state_changed()
    // Offset: 0x12EC440
    ::GlobalNamespace::vx_evt_voice_service_connection_state_changed_t* as_vx_evt_voice_service_connection_state_changed();
    // public vx_evt_publication_state_changed_t as_vx_evt_publication_state_changed()
    // Offset: 0x12EC51C
    ::GlobalNamespace::vx_evt_publication_state_changed_t* as_vx_evt_publication_state_changed();
    // public vx_evt_audio_device_hot_swap_t as_vx_evt_audio_device_hot_swap()
    // Offset: 0x12EC5F8
    ::GlobalNamespace::vx_evt_audio_device_hot_swap_t* as_vx_evt_audio_device_hot_swap();
    // public vx_evt_user_to_user_message_t as_vx_evt_user_to_user_message()
    // Offset: 0x12EC6D0
    ::GlobalNamespace::vx_evt_user_to_user_message_t* as_vx_evt_user_to_user_message();
    // public vx_evt_account_archive_message_t as_vx_evt_account_archive_message()
    // Offset: 0x12EC7AC
    ::GlobalNamespace::vx_evt_account_archive_message_t* as_vx_evt_account_archive_message();
    // public vx_evt_account_archive_query_end_t as_vx_evt_account_archive_query_end()
    // Offset: 0x12EC884
    ::GlobalNamespace::vx_evt_account_archive_query_end_t* as_vx_evt_account_archive_query_end();
    // public vx_evt_account_send_message_failed_t as_vx_evt_account_send_message_failed()
    // Offset: 0x12EC95C
    ::GlobalNamespace::vx_evt_account_send_message_failed_t* as_vx_evt_account_send_message_failed();
    // public vx_evt_tts_injection_started_t as_vx_evt_tts_injection_started()
    // Offset: 0x12ECA0C
    ::GlobalNamespace::vx_evt_tts_injection_started_t* as_vx_evt_tts_injection_started();
    // public vx_evt_tts_injection_ended_t as_vx_evt_tts_injection_ended()
    // Offset: 0x12ECAC0
    ::GlobalNamespace::vx_evt_tts_injection_ended_t* as_vx_evt_tts_injection_ended();
    // public vx_evt_tts_injection_failed_t as_vx_evt_tts_injection_failed()
    // Offset: 0x12ECB74
    ::GlobalNamespace::vx_evt_tts_injection_failed_t* as_vx_evt_tts_injection_failed();
    // public System.Void .ctor()
    // Offset: 0x12ECEE4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_evt_base_t* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_evt_base_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_evt_base_t*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x12EA86C
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // vx_evt_base_t
  #pragma pack(pop)
  static check_size<sizeof(vx_evt_base_t), 32 + sizeof(bool)> __GlobalNamespace_vx_evt_base_tSizeCheck;
  static_assert(sizeof(vx_evt_base_t) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::GlobalNamespace::vx_evt_base_t*)>(&GlobalNamespace::vx_evt_base_t::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("", "vx_evt_base_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::set_message
// Il2CppName: set_message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_evt_base_t::*)(::GlobalNamespace::vx_message_base_t*)>(&GlobalNamespace::vx_evt_base_t::set_message)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_message_base_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "set_message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::get_message
// Il2CppName: get_message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_message_base_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::get_message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "get_message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::set_type
// Il2CppName: set_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_evt_base_t::*)(::GlobalNamespace::vx_event_type)>(&GlobalNamespace::vx_evt_base_t::set_type)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_event_type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "set_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::get_type
// Il2CppName: get_type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_event_type (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::get_type)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "get_type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::set_extended_status_info
// Il2CppName: set_extended_status_info
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_evt_base_t::*)(::StringW)>(&GlobalNamespace::vx_evt_base_t::set_extended_status_info)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "set_extended_status_info", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::get_extended_status_info
// Il2CppName: get_extended_status_info
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::get_extended_status_info)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "get_extended_status_info", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_account_login_state_change
// Il2CppName: as_vx_evt_account_login_state_change
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_account_login_state_change_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_account_login_state_change)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_account_login_state_change", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_buddy_presence
// Il2CppName: as_vx_evt_buddy_presence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_buddy_presence_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_buddy_presence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_buddy_presence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_subscription
// Il2CppName: as_vx_evt_subscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_subscription_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_subscription)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_subscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_session_notification
// Il2CppName: as_vx_evt_session_notification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_session_notification_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_session_notification)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_session_notification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_message
// Il2CppName: as_vx_evt_message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_message_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_session_archive_message
// Il2CppName: as_vx_evt_session_archive_message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_session_archive_message_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_session_archive_message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_session_archive_message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_transcribed_message
// Il2CppName: as_vx_evt_transcribed_message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_transcribed_message_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_transcribed_message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_transcribed_message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_session_archive_query_end
// Il2CppName: as_vx_evt_session_archive_query_end
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_session_archive_query_end_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_session_archive_query_end)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_session_archive_query_end", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_aux_audio_properties
// Il2CppName: as_vx_evt_aux_audio_properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_aux_audio_properties_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_aux_audio_properties)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_aux_audio_properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_buddy_changed
// Il2CppName: as_vx_evt_buddy_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_buddy_changed_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_buddy_changed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_buddy_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_buddy_group_changed
// Il2CppName: as_vx_evt_buddy_group_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_buddy_group_changed_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_buddy_group_changed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_buddy_group_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_buddy_and_group_list_changed
// Il2CppName: as_vx_evt_buddy_and_group_list_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_buddy_and_group_list_changed_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_buddy_and_group_list_changed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_buddy_and_group_list_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_keyboard_mouse
// Il2CppName: as_vx_evt_keyboard_mouse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_keyboard_mouse_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_keyboard_mouse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_keyboard_mouse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_idle_state_changed
// Il2CppName: as_vx_evt_idle_state_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_idle_state_changed_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_idle_state_changed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_idle_state_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_media_stream_updated
// Il2CppName: as_vx_evt_media_stream_updated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_media_stream_updated_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_media_stream_updated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_media_stream_updated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_text_stream_updated
// Il2CppName: as_vx_evt_text_stream_updated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_text_stream_updated_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_text_stream_updated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_text_stream_updated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_sessiongroup_added
// Il2CppName: as_vx_evt_sessiongroup_added
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_sessiongroup_added_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_sessiongroup_added)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_sessiongroup_added", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_sessiongroup_removed
// Il2CppName: as_vx_evt_sessiongroup_removed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_sessiongroup_removed_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_sessiongroup_removed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_sessiongroup_removed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_session_added
// Il2CppName: as_vx_evt_session_added
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_session_added_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_session_added)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_session_added", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_session_removed
// Il2CppName: as_vx_evt_session_removed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_session_removed_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_session_removed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_session_removed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_participant_added
// Il2CppName: as_vx_evt_participant_added
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_participant_added_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_participant_added)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_participant_added", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_participant_removed
// Il2CppName: as_vx_evt_participant_removed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_participant_removed_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_participant_removed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_participant_removed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_participant_updated
// Il2CppName: as_vx_evt_participant_updated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_participant_updated_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_participant_updated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_participant_updated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_sessiongroup_playback_frame_played
// Il2CppName: as_vx_evt_sessiongroup_playback_frame_played
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_sessiongroup_playback_frame_played_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_sessiongroup_playback_frame_played)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_sessiongroup_playback_frame_played", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_session_updated
// Il2CppName: as_vx_evt_session_updated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_session_updated_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_session_updated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_session_updated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_sessiongroup_updated
// Il2CppName: as_vx_evt_sessiongroup_updated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_sessiongroup_updated_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_sessiongroup_updated)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_sessiongroup_updated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_media_completion
// Il2CppName: as_vx_evt_media_completion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_media_completion_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_media_completion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_media_completion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_server_app_data
// Il2CppName: as_vx_evt_server_app_data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_server_app_data_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_server_app_data)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_server_app_data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_user_app_data
// Il2CppName: as_vx_evt_user_app_data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_user_app_data_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_user_app_data)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_user_app_data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_network_message
// Il2CppName: as_vx_evt_network_message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_network_message_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_network_message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_network_message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_voice_service_connection_state_changed
// Il2CppName: as_vx_evt_voice_service_connection_state_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_voice_service_connection_state_changed_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_voice_service_connection_state_changed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_voice_service_connection_state_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_publication_state_changed
// Il2CppName: as_vx_evt_publication_state_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_publication_state_changed_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_publication_state_changed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_publication_state_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_audio_device_hot_swap
// Il2CppName: as_vx_evt_audio_device_hot_swap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_audio_device_hot_swap_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_audio_device_hot_swap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_audio_device_hot_swap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_user_to_user_message
// Il2CppName: as_vx_evt_user_to_user_message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_user_to_user_message_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_user_to_user_message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_user_to_user_message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_account_archive_message
// Il2CppName: as_vx_evt_account_archive_message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_account_archive_message_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_account_archive_message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_account_archive_message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_account_archive_query_end
// Il2CppName: as_vx_evt_account_archive_query_end
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_account_archive_query_end_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_account_archive_query_end)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_account_archive_query_end", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_account_send_message_failed
// Il2CppName: as_vx_evt_account_send_message_failed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_account_send_message_failed_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_account_send_message_failed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_account_send_message_failed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_tts_injection_started
// Il2CppName: as_vx_evt_tts_injection_started
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_tts_injection_started_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_tts_injection_started)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_tts_injection_started", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_tts_injection_ended
// Il2CppName: as_vx_evt_tts_injection_ended
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_tts_injection_ended_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_tts_injection_ended)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_tts_injection_ended", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::as_vx_evt_tts_injection_failed
// Il2CppName: as_vx_evt_tts_injection_failed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_evt_tts_injection_failed_t* (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::as_vx_evt_tts_injection_failed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "as_vx_evt_tts_injection_failed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_evt_base_t::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_evt_base_t::*)()>(&GlobalNamespace::vx_evt_base_t::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_evt_base_t*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
