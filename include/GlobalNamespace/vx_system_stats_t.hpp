// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: vx_stat_sample_t
  class vx_stat_sample_t;
  // Forward declaring type: vx_stat_thread_t
  class vx_stat_thread_t;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: vx_system_stats_t
  class vx_system_stats_t;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::vx_system_stats_t);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::vx_system_stats_t*, "", "vx_system_stats_t");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: vx_system_stats_t
  // [TokenAttribute] Offset: FFFFFFFF
  class vx_system_stats_t : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated("Use field access instead!")]] bool& dyn_swigCMemOwn();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0x2823250
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_system_stats_t* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_system_stats_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_system_stats_t*, creationType>(cPtr, cMemoryOwn)));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(vx_system_stats_t obj)
    // Offset: 0x28232B4
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::GlobalNamespace::vx_system_stats_t* obj);
    // public System.Void Dispose()
    // Offset: 0x28233A4
    void Dispose();
    // public System.Void set_ss_size(System.Int32 value)
    // Offset: 0x2823514
    void set_ss_size(int value);
    // public System.Int32 get_ss_size()
    // Offset: 0x2823594
    int get_ss_size();
    // public System.Void set_ar_source_count(System.Int32 value)
    // Offset: 0x2823604
    void set_ar_source_count(int value);
    // public System.Int32 get_ar_source_count()
    // Offset: 0x2823684
    int get_ar_source_count();
    // public System.Void set_ar_source_queue_limit(System.Int32 value)
    // Offset: 0x28236F4
    void set_ar_source_queue_limit(int value);
    // public System.Int32 get_ar_source_queue_limit()
    // Offset: 0x2823774
    int get_ar_source_queue_limit();
    // public System.Void set_ar_source_queue_overflows(System.Int32 value)
    // Offset: 0x28237E4
    void set_ar_source_queue_overflows(int value);
    // public System.Int32 get_ar_source_queue_overflows()
    // Offset: 0x2823864
    int get_ar_source_queue_overflows();
    // public System.Void set_ar_source_poll_count(System.Int32 value)
    // Offset: 0x28238D4
    void set_ar_source_poll_count(int value);
    // public System.Int32 get_ar_source_poll_count()
    // Offset: 0x2823954
    int get_ar_source_poll_count();
    // public System.Void set_msgovrld_count(System.UInt32 value)
    // Offset: 0x28239C4
    void set_msgovrld_count(uint value);
    // public System.UInt32 get_msgovrld_count()
    // Offset: 0x2823A44
    uint get_msgovrld_count();
    // public System.Void set_ar_source_free_buffers(vx_stat_sample_t value)
    // Offset: 0x2823AB4
    void set_ar_source_free_buffers(::GlobalNamespace::vx_stat_sample_t* value);
    // public vx_stat_sample_t get_ar_source_free_buffers()
    // Offset: 0x2823B48
    ::GlobalNamespace::vx_stat_sample_t* get_ar_source_free_buffers();
    // public System.Void set_ar_source_queue_depth(vx_stat_sample_t value)
    // Offset: 0x2823BF8
    void set_ar_source_queue_depth(::GlobalNamespace::vx_stat_sample_t* value);
    // public vx_stat_sample_t get_ar_source_queue_depth()
    // Offset: 0x2823C8C
    ::GlobalNamespace::vx_stat_sample_t* get_ar_source_queue_depth();
    // public System.Void set_vp_thread(vx_stat_thread_t value)
    // Offset: 0x2823D3C
    void set_vp_thread(::GlobalNamespace::vx_stat_thread_t* value);
    // public vx_stat_thread_t get_vp_thread()
    // Offset: 0x2823DD0
    ::GlobalNamespace::vx_stat_thread_t* get_vp_thread();
    // public System.Void set_ticker_thread(vx_stat_thread_t value)
    // Offset: 0x2823E80
    void set_ticker_thread(::GlobalNamespace::vx_stat_thread_t* value);
    // public vx_stat_thread_t get_ticker_thread()
    // Offset: 0x2823F14
    ::GlobalNamespace::vx_stat_thread_t* get_ticker_thread();
    // public System.Void set_clnt_count(System.Int32 value)
    // Offset: 0x2823FC4
    void set_clnt_count(int value);
    // public System.Int32 get_clnt_count()
    // Offset: 0x2824044
    int get_clnt_count();
    // public System.Void set_lc_count(System.Int32 value)
    // Offset: 0x28240B4
    void set_lc_count(int value);
    // public System.Int32 get_lc_count()
    // Offset: 0x2824134
    int get_lc_count();
    // public System.Void set_mps_count(System.Int32 value)
    // Offset: 0x28241A4
    void set_mps_count(int value);
    // public System.Int32 get_mps_count()
    // Offset: 0x2824224
    int get_mps_count();
    // public System.Void set_mpsg_count(System.Int32 value)
    // Offset: 0x2824294
    void set_mpsg_count(int value);
    // public System.Int32 get_mpsg_count()
    // Offset: 0x2824314
    int get_mpsg_count();
    // public System.Void set_strms_count(System.Int32 value)
    // Offset: 0x2824384
    void set_strms_count(int value);
    // public System.Int32 get_strms_count()
    // Offset: 0x2824404
    int get_strms_count();
    // public System.Void set_strr_count(System.Int32 value)
    // Offset: 0x2824474
    void set_strr_count(int value);
    // public System.Int32 get_strr_count()
    // Offset: 0x28244F4
    int get_strr_count();
    // public System.Void set_strss_count(System.Int32 value)
    // Offset: 0x2824564
    void set_strss_count(int value);
    // public System.Int32 get_strss_count()
    // Offset: 0x28245E4
    int get_strss_count();
    // public System.Void set_vp_count(System.Int32 value)
    // Offset: 0x2824654
    void set_vp_count(int value);
    // public System.Int32 get_vp_count()
    // Offset: 0x28246D4
    int get_vp_count();
    // public System.Void .ctor()
    // Offset: 0x2824744
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_system_stats_t* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_system_stats_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_system_stats_t*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x2823328
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // vx_system_stats_t
  #pragma pack(pop)
  static check_size<sizeof(vx_system_stats_t), 32 + sizeof(bool)> __GlobalNamespace_vx_system_stats_tSizeCheck;
  static_assert(sizeof(vx_system_stats_t) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::GlobalNamespace::vx_system_stats_t*)>(&GlobalNamespace::vx_system_stats_t::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("", "vx_system_stats_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_ss_size
// Il2CppName: set_ss_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_ss_size)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_ss_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_ss_size
// Il2CppName: get_ss_size
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_ss_size)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_ss_size", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_ar_source_count
// Il2CppName: set_ar_source_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_ar_source_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_ar_source_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_ar_source_count
// Il2CppName: get_ar_source_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_ar_source_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_ar_source_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_ar_source_queue_limit
// Il2CppName: set_ar_source_queue_limit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_ar_source_queue_limit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_ar_source_queue_limit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_ar_source_queue_limit
// Il2CppName: get_ar_source_queue_limit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_ar_source_queue_limit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_ar_source_queue_limit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_ar_source_queue_overflows
// Il2CppName: set_ar_source_queue_overflows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_ar_source_queue_overflows)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_ar_source_queue_overflows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_ar_source_queue_overflows
// Il2CppName: get_ar_source_queue_overflows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_ar_source_queue_overflows)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_ar_source_queue_overflows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_ar_source_poll_count
// Il2CppName: set_ar_source_poll_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_ar_source_poll_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_ar_source_poll_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_ar_source_poll_count
// Il2CppName: get_ar_source_poll_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_ar_source_poll_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_ar_source_poll_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_msgovrld_count
// Il2CppName: set_msgovrld_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(uint)>(&GlobalNamespace::vx_system_stats_t::set_msgovrld_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_msgovrld_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_msgovrld_count
// Il2CppName: get_msgovrld_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_msgovrld_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_msgovrld_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_ar_source_free_buffers
// Il2CppName: set_ar_source_free_buffers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(::GlobalNamespace::vx_stat_sample_t*)>(&GlobalNamespace::vx_system_stats_t::set_ar_source_free_buffers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_stat_sample_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_ar_source_free_buffers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_ar_source_free_buffers
// Il2CppName: get_ar_source_free_buffers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_stat_sample_t* (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_ar_source_free_buffers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_ar_source_free_buffers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_ar_source_queue_depth
// Il2CppName: set_ar_source_queue_depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(::GlobalNamespace::vx_stat_sample_t*)>(&GlobalNamespace::vx_system_stats_t::set_ar_source_queue_depth)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_stat_sample_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_ar_source_queue_depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_ar_source_queue_depth
// Il2CppName: get_ar_source_queue_depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_stat_sample_t* (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_ar_source_queue_depth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_ar_source_queue_depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_vp_thread
// Il2CppName: set_vp_thread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(::GlobalNamespace::vx_stat_thread_t*)>(&GlobalNamespace::vx_system_stats_t::set_vp_thread)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_stat_thread_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_vp_thread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_vp_thread
// Il2CppName: get_vp_thread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_stat_thread_t* (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_vp_thread)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_vp_thread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_ticker_thread
// Il2CppName: set_ticker_thread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(::GlobalNamespace::vx_stat_thread_t*)>(&GlobalNamespace::vx_system_stats_t::set_ticker_thread)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_stat_thread_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_ticker_thread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_ticker_thread
// Il2CppName: get_ticker_thread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_stat_thread_t* (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_ticker_thread)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_ticker_thread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_clnt_count
// Il2CppName: set_clnt_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_clnt_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_clnt_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_clnt_count
// Il2CppName: get_clnt_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_clnt_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_clnt_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_lc_count
// Il2CppName: set_lc_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_lc_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_lc_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_lc_count
// Il2CppName: get_lc_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_lc_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_lc_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_mps_count
// Il2CppName: set_mps_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_mps_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_mps_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_mps_count
// Il2CppName: get_mps_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_mps_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_mps_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_mpsg_count
// Il2CppName: set_mpsg_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_mpsg_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_mpsg_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_mpsg_count
// Il2CppName: get_mpsg_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_mpsg_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_mpsg_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_strms_count
// Il2CppName: set_strms_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_strms_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_strms_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_strms_count
// Il2CppName: get_strms_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_strms_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_strms_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_strr_count
// Il2CppName: set_strr_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_strr_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_strr_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_strr_count
// Il2CppName: get_strr_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_strr_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_strr_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_strss_count
// Il2CppName: set_strss_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_strss_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_strss_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_strss_count
// Il2CppName: get_strss_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_strss_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_strss_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::set_vp_count
// Il2CppName: set_vp_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)(int)>(&GlobalNamespace::vx_system_stats_t::set_vp_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "set_vp_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::get_vp_count
// Il2CppName: get_vp_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::get_vp_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "get_vp_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_system_stats_t::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_system_stats_t::*)()>(&GlobalNamespace::vx_system_stats_t::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_system_stats_t*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
