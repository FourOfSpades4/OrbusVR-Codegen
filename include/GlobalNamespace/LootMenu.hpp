// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
}
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Document
  class Document;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: LootMenu
  class LootMenu;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::LootMenu);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::LootMenu*, "", "LootMenu");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: LootMenu
  // [TokenAttribute] Offset: FFFFFFFF
  class LootMenu : public ::UnityEngine::MonoBehaviour {
    public:
    // static public System.Void addItemToList(ExtUI.InventoryItemInstance item, PowerUI.Document document)
    // Offset: 0x12120AC
    static void addItemToList(::ExtUI::InventoryItemInstance* item, ::PowerUI::Document* document);
    // static public System.Void clearList(PowerUI.Document document)
    // Offset: 0x1212508
    static void clearList(::PowerUI::Document* document);
    // public System.Void .ctor()
    // Offset: 0x121258C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LootMenu* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LootMenu::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LootMenu*, creationType>()));
    }
  }; // LootMenu
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::LootMenu::addItemToList
// Il2CppName: addItemToList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ExtUI::InventoryItemInstance*, ::PowerUI::Document*)>(&GlobalNamespace::LootMenu::addItemToList)> {
  static const MethodInfo* get() {
    static auto* item = &::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance")->byval_arg;
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LootMenu*), "addItemToList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{item, document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LootMenu::clearList
// Il2CppName: clearList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*)>(&GlobalNamespace::LootMenu::clearList)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::LootMenu*), "clearList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::LootMenu::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
