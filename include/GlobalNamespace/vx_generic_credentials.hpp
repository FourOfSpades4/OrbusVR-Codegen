// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: vx_generic_credentials
  class vx_generic_credentials;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::vx_generic_credentials);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::vx_generic_credentials*, "", "vx_generic_credentials");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: vx_generic_credentials
  // [TokenAttribute] Offset: FFFFFFFF
  class vx_generic_credentials : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated("Use field access instead!")]] bool& dyn_swigCMemOwn();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0x2183120
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_generic_credentials* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_generic_credentials::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_generic_credentials*, creationType>(cPtr, cMemoryOwn)));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(vx_generic_credentials obj)
    // Offset: 0x2183184
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::GlobalNamespace::vx_generic_credentials* obj);
    // public System.Void Dispose()
    // Offset: 0x2183274
    void Dispose();
    // public System.Void set_admin_username(System.String value)
    // Offset: 0x21833E4
    void set_admin_username(::StringW value);
    // public System.String get_admin_username()
    // Offset: 0x2183464
    ::StringW get_admin_username();
    // public System.Void set_admin_password(System.String value)
    // Offset: 0x21834D4
    void set_admin_password(::StringW value);
    // public System.String get_admin_password()
    // Offset: 0x2183554
    ::StringW get_admin_password();
    // public System.Void set_grant_document(System.String value)
    // Offset: 0x21835C4
    void set_grant_document(::StringW value);
    // public System.String get_grant_document()
    // Offset: 0x2183644
    ::StringW get_grant_document();
    // public System.Void set_server_url(System.String value)
    // Offset: 0x21836B4
    void set_server_url(::StringW value);
    // public System.String get_server_url()
    // Offset: 0x2183734
    ::StringW get_server_url();
    // public System.Void .ctor()
    // Offset: 0x21837A4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_generic_credentials* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_generic_credentials::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_generic_credentials*, creationType>()));
    }
    // protected override System.Void Finalize()
    // Offset: 0x21831F8
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // vx_generic_credentials
  #pragma pack(pop)
  static check_size<sizeof(vx_generic_credentials), 32 + sizeof(bool)> __GlobalNamespace_vx_generic_credentialsSizeCheck;
  static_assert(sizeof(vx_generic_credentials) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::GlobalNamespace::vx_generic_credentials*)>(&GlobalNamespace::vx_generic_credentials::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("", "vx_generic_credentials")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_generic_credentials*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_generic_credentials::*)()>(&GlobalNamespace::vx_generic_credentials::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_generic_credentials*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::set_admin_username
// Il2CppName: set_admin_username
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_generic_credentials::*)(::StringW)>(&GlobalNamespace::vx_generic_credentials::set_admin_username)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_generic_credentials*), "set_admin_username", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::get_admin_username
// Il2CppName: get_admin_username
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_generic_credentials::*)()>(&GlobalNamespace::vx_generic_credentials::get_admin_username)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_generic_credentials*), "get_admin_username", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::set_admin_password
// Il2CppName: set_admin_password
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_generic_credentials::*)(::StringW)>(&GlobalNamespace::vx_generic_credentials::set_admin_password)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_generic_credentials*), "set_admin_password", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::get_admin_password
// Il2CppName: get_admin_password
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_generic_credentials::*)()>(&GlobalNamespace::vx_generic_credentials::get_admin_password)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_generic_credentials*), "get_admin_password", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::set_grant_document
// Il2CppName: set_grant_document
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_generic_credentials::*)(::StringW)>(&GlobalNamespace::vx_generic_credentials::set_grant_document)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_generic_credentials*), "set_grant_document", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::get_grant_document
// Il2CppName: get_grant_document
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_generic_credentials::*)()>(&GlobalNamespace::vx_generic_credentials::get_grant_document)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_generic_credentials*), "get_grant_document", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::set_server_url
// Il2CppName: set_server_url
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_generic_credentials::*)(::StringW)>(&GlobalNamespace::vx_generic_credentials::set_server_url)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_generic_credentials*), "set_server_url", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::get_server_url
// Il2CppName: get_server_url
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_generic_credentials::*)()>(&GlobalNamespace::vx_generic_credentials::get_server_url)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_generic_credentials*), "get_server_url", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_generic_credentials::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_generic_credentials::*)()>(&GlobalNamespace::vx_generic_credentials::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_generic_credentials*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
