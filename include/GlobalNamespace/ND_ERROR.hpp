// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: ND_ERROR
  struct ND_ERROR;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::ND_ERROR, "", "ND_ERROR");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: ND_ERROR
  // [TokenAttribute] Offset: FFFFFFFF
  struct ND_ERROR/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: ND_ERROR
    constexpr ND_ERROR(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public ND_ERROR ND_E_NO_ERROR
    static constexpr const int ND_E_NO_ERROR = 0;
    // Get static field: static public ND_ERROR ND_E_NO_ERROR
    static ::GlobalNamespace::ND_ERROR _get_ND_E_NO_ERROR();
    // Set static field: static public ND_ERROR ND_E_NO_ERROR
    static void _set_ND_E_NO_ERROR(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_TEST_NOT_RUN
    static constexpr const int ND_E_TEST_NOT_RUN = 1;
    // Get static field: static public ND_ERROR ND_E_TEST_NOT_RUN
    static ::GlobalNamespace::ND_ERROR _get_ND_E_TEST_NOT_RUN();
    // Set static field: static public ND_ERROR ND_E_TEST_NOT_RUN
    static void _set_ND_E_TEST_NOT_RUN(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_NO_INTERFACE
    static constexpr const int ND_E_NO_INTERFACE = 2;
    // Get static field: static public ND_ERROR ND_E_NO_INTERFACE
    static ::GlobalNamespace::ND_ERROR _get_ND_E_NO_INTERFACE();
    // Set static field: static public ND_ERROR ND_E_NO_INTERFACE
    static void _set_ND_E_NO_INTERFACE(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_NO_INTERFACE_WITH_GATEWAY
    static constexpr const int ND_E_NO_INTERFACE_WITH_GATEWAY = 3;
    // Get static field: static public ND_ERROR ND_E_NO_INTERFACE_WITH_GATEWAY
    static ::GlobalNamespace::ND_ERROR _get_ND_E_NO_INTERFACE_WITH_GATEWAY();
    // Set static field: static public ND_ERROR ND_E_NO_INTERFACE_WITH_GATEWAY
    static void _set_ND_E_NO_INTERFACE_WITH_GATEWAY(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_NO_INTERFACE_WITH_ROUTE
    static constexpr const int ND_E_NO_INTERFACE_WITH_ROUTE = 4;
    // Get static field: static public ND_ERROR ND_E_NO_INTERFACE_WITH_ROUTE
    static ::GlobalNamespace::ND_ERROR _get_ND_E_NO_INTERFACE_WITH_ROUTE();
    // Set static field: static public ND_ERROR ND_E_NO_INTERFACE_WITH_ROUTE
    static void _set_ND_E_NO_INTERFACE_WITH_ROUTE(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_TIMEOUT
    static constexpr const int ND_E_TIMEOUT = 5;
    // Get static field: static public ND_ERROR ND_E_TIMEOUT
    static ::GlobalNamespace::ND_ERROR _get_ND_E_TIMEOUT();
    // Set static field: static public ND_ERROR ND_E_TIMEOUT
    static void _set_ND_E_TIMEOUT(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_CANT_ICMP
    static constexpr const int ND_E_CANT_ICMP = 6;
    // Get static field: static public ND_ERROR ND_E_CANT_ICMP
    static ::GlobalNamespace::ND_ERROR _get_ND_E_CANT_ICMP();
    // Set static field: static public ND_ERROR ND_E_CANT_ICMP
    static void _set_ND_E_CANT_ICMP(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER
    static constexpr const int ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER = 7;
    // Get static field: static public ND_ERROR ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER
    static ::GlobalNamespace::ND_ERROR _get_ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER();
    // Set static field: static public ND_ERROR ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER
    static void _set_ND_E_CANT_RESOLVE_VIVOX_UDP_SERVER(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_CANT_RESOLVE_ROOT_DNS_SERVER
    static constexpr const int ND_E_CANT_RESOLVE_ROOT_DNS_SERVER = 8;
    // Get static field: static public ND_ERROR ND_E_CANT_RESOLVE_ROOT_DNS_SERVER
    static ::GlobalNamespace::ND_ERROR _get_ND_E_CANT_RESOLVE_ROOT_DNS_SERVER();
    // Set static field: static public ND_ERROR ND_E_CANT_RESOLVE_ROOT_DNS_SERVER
    static void _set_ND_E_CANT_RESOLVE_ROOT_DNS_SERVER(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS
    static constexpr const int ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS = 9;
    // Get static field: static public ND_ERROR ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS
    static ::GlobalNamespace::ND_ERROR _get_ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS();
    // Set static field: static public ND_ERROR ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS
    static void _set_ND_E_CANT_CONVERT_LOCAL_IP_ADDRESS(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478
    static constexpr const int ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478 = 10;
    // Get static field: static public ND_ERROR ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478
    static ::GlobalNamespace::ND_ERROR _get_ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478();
    // Set static field: static public ND_ERROR ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478
    static void _set_ND_E_CANT_CONTACT_STUN_SERVER_ON_UDP_PORT_3478(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_CANT_CREATE_TCP_SOCKET
    static constexpr const int ND_E_CANT_CREATE_TCP_SOCKET = 11;
    // Get static field: static public ND_ERROR ND_E_CANT_CREATE_TCP_SOCKET
    static ::GlobalNamespace::ND_ERROR _get_ND_E_CANT_CREATE_TCP_SOCKET();
    // Set static field: static public ND_ERROR ND_E_CANT_CREATE_TCP_SOCKET
    static void _set_ND_E_CANT_CREATE_TCP_SOCKET(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_CANT_LOAD_ICMP_LIBRARY
    static constexpr const int ND_E_CANT_LOAD_ICMP_LIBRARY = 12;
    // Get static field: static public ND_ERROR ND_E_CANT_LOAD_ICMP_LIBRARY
    static ::GlobalNamespace::ND_ERROR _get_ND_E_CANT_LOAD_ICMP_LIBRARY();
    // Set static field: static public ND_ERROR ND_E_CANT_LOAD_ICMP_LIBRARY
    static void _set_ND_E_CANT_LOAD_ICMP_LIBRARY(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_CANT_FIND_SENDECHO2_PROCADDR
    static constexpr const int ND_E_CANT_FIND_SENDECHO2_PROCADDR = 13;
    // Get static field: static public ND_ERROR ND_E_CANT_FIND_SENDECHO2_PROCADDR
    static ::GlobalNamespace::ND_ERROR _get_ND_E_CANT_FIND_SENDECHO2_PROCADDR();
    // Set static field: static public ND_ERROR ND_E_CANT_FIND_SENDECHO2_PROCADDR
    static void _set_ND_E_CANT_FIND_SENDECHO2_PROCADDR(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_CANT_CONNECT_TO_ECHO_SERVER
    static constexpr const int ND_E_CANT_CONNECT_TO_ECHO_SERVER = 14;
    // Get static field: static public ND_ERROR ND_E_CANT_CONNECT_TO_ECHO_SERVER
    static ::GlobalNamespace::ND_ERROR _get_ND_E_CANT_CONNECT_TO_ECHO_SERVER();
    // Set static field: static public ND_ERROR ND_E_CANT_CONNECT_TO_ECHO_SERVER
    static void _set_ND_E_CANT_CONNECT_TO_ECHO_SERVER(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_SEND_FAILED
    static constexpr const int ND_E_ECHO_SERVER_LOGIN_SEND_FAILED = 15;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_SEND_FAILED
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_LOGIN_SEND_FAILED();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_SEND_FAILED
    static void _set_ND_E_ECHO_SERVER_LOGIN_SEND_FAILED(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RECV_FAILED
    static constexpr const int ND_E_ECHO_SERVER_LOGIN_RECV_FAILED = 16;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RECV_FAILED
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RECV_FAILED
    static void _set_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS
    static constexpr const int ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS = 17;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS
    static void _set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_STATUS(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS
    static constexpr const int ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS = 18;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS
    static void _set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_FAILED_STATUS(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID
    static constexpr const int ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID = 19;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID
    static void _set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SESSIONID(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT
    static constexpr const int ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT = 20;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT
    static void _set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_SIPPORT(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP
    static constexpr const int ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP = 21;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP
    static void _set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTP(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP
    static constexpr const int ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP = 22;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP
    static void _set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_AUDIORTCP(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP
    static constexpr const int ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP = 23;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP
    static void _set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTP(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP
    static constexpr const int ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP = 24;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP
    static void _set_ND_E_ECHO_SERVER_LOGIN_RESPONSE_MISSING_VIDEORTCP(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET
    static constexpr const int ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET = 25;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET
    static void _set_ND_E_ECHO_SERVER_CANT_ALLOCATE_SIP_SOCKET(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET
    static constexpr const int ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET = 26;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET
    static void _set_ND_E_ECHO_SERVER_CANT_ALLOCATE_MEDIA_SOCKET(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED
    static constexpr const int ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED = 27;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED
    static void _set_ND_E_ECHO_SERVER_SIP_UDP_SEND_FAILED(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED
    static constexpr const int ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED = 28;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED
    static void _set_ND_E_ECHO_SERVER_SIP_UDP_RECV_FAILED(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED
    static constexpr const int ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED = 29;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED
    static void _set_ND_E_ECHO_SERVER_SIP_TCP_SEND_FAILED(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED
    static constexpr const int ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED = 30;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED
    static void _set_ND_E_ECHO_SERVER_SIP_TCP_RECV_FAILED(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP
    static constexpr const int ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP = 31;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP
    static void _set_ND_E_ECHO_SERVER_SIP_NO_UDP_OR_TCP(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_UDP
    static constexpr const int ND_E_ECHO_SERVER_SIP_NO_UDP = 32;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_UDP
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_NO_UDP();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_UDP
    static void _set_ND_E_ECHO_SERVER_SIP_NO_UDP(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_TCP
    static constexpr const int ND_E_ECHO_SERVER_SIP_NO_TCP = 33;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_TCP
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_NO_TCP();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_NO_TCP
    static void _set_ND_E_ECHO_SERVER_SIP_NO_TCP(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET
    static constexpr const int ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET = 34;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET
    static void _set_ND_E_ECHO_SERVER_SIP_MALFORMED_TCP_PACKET(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH
    static constexpr const int ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH = 35;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH
    static void _set_ND_E_ECHO_SERVER_SIP_UDP_DIFFERENT_LENGTH(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT
    static constexpr const int ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT = 36;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT
    static void _set_ND_E_ECHO_SERVER_SIP_UDP_DATA_DIFFERENT(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT
    static constexpr const int ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT = 37;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT
    static void _set_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE
    static constexpr const int ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE = 38;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE
    static void _set_ND_E_ECHO_SERVER_SIP_TCP_PACKETS_DIFFERENT_SIZE(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT
    static constexpr const int ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT = 39;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT
    static void _set_ND_E_ECHO_SERVER_LOGIN_RECV_FAILED_TIMEOUT(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED
    static constexpr const int ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED = 40;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED
    static void _set_ND_E_ECHO_SERVER_TCP_SET_ASYNC_FAILED(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED
    static constexpr const int ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED = 41;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED
    static void _set_ND_E_ECHO_SERVER_UDP_SET_ASYNC_FAILED(::GlobalNamespace::ND_ERROR value);
    // static field const value: static public ND_ERROR ND_E_ECHO_SERVER_CANT_RESOLVE_NAME
    static constexpr const int ND_E_ECHO_SERVER_CANT_RESOLVE_NAME = 42;
    // Get static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_RESOLVE_NAME
    static ::GlobalNamespace::ND_ERROR _get_ND_E_ECHO_SERVER_CANT_RESOLVE_NAME();
    // Set static field: static public ND_ERROR ND_E_ECHO_SERVER_CANT_RESOLVE_NAME
    static void _set_ND_E_ECHO_SERVER_CANT_RESOLVE_NAME(::GlobalNamespace::ND_ERROR value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // ND_ERROR
  #pragma pack(pop)
  static check_size<sizeof(ND_ERROR), 0 + sizeof(int)> __GlobalNamespace_ND_ERRORSizeCheck;
  static_assert(sizeof(ND_ERROR) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
