// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: IPooling
  class IPooling;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::IPooling);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::IPooling*, "", "IPooling");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: IPooling
  // [TokenAttribute] Offset: FFFFFFFF
  class IPooling {
    public:
    // public System.Void PoolingReset()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void PoolingReset();
  }; // IPooling
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::IPooling::PoolingReset
// Il2CppName: PoolingReset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IPooling::*)()>(&GlobalNamespace::IPooling::PoolingReset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPooling*), "PoolingReset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
