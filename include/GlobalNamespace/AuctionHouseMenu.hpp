// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: Auctioneer
  class Auctioneer;
  // Forward declaring type: LTDescr
  class LTDescr;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
}
// Forward declaring namespace: PowerUI
namespace PowerUI {
  // Forward declaring type: Document
  class Document;
  // Forward declaring type: Element
  class Element;
  // Forward declaring type: UIEvent
  class UIEvent;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: AuctionHouseMenu
  class AuctionHouseMenu;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::AuctionHouseMenu);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::AuctionHouseMenu*, "", "AuctionHouseMenu");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: AuctionHouseMenu
  // [TokenAttribute] Offset: FFFFFFFF
  class AuctionHouseMenu : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem
    class AuctionHouseItem;
    // Nested type: ::GlobalNamespace::AuctionHouseMenu::$$c__DisplayClass32_0
    class $$c__DisplayClass32_0;
    // Nested type: ::GlobalNamespace::AuctionHouseMenu::$$c
    class $$c;
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get static field: static private MagicalActual.NetEntity myEntity
    static ::MagicalActual::NetEntity* _get_myEntity();
    // Set static field: static private MagicalActual.NetEntity myEntity
    static void _set_myEntity(::MagicalActual::NetEntity* value);
    // Get static field: static private Auctioneer parentBehaviour
    static ::GlobalNamespace::Auctioneer* _get_parentBehaviour();
    // Set static field: static private Auctioneer parentBehaviour
    static void _set_parentBehaviour(::GlobalNamespace::Auctioneer* value);
    // Get static field: static private PowerUI.Document doc
    static ::PowerUI::Document* _get_doc();
    // Set static field: static private PowerUI.Document doc
    static void _set_doc(::PowerUI::Document* value);
    // Get static field: static private System.Int32 numchoices
    static int _get_numchoices();
    // Set static field: static private System.Int32 numchoices
    static void _set_numchoices(int value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,AuctionHouseMenu/AuctionHouseItem> auctionhouseItems
    static ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem*>* _get_auctionhouseItems();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,AuctionHouseMenu/AuctionHouseItem> auctionhouseItems
    static void _set_auctionhouseItems(::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,AuctionHouseMenu/AuctionHouseItem> sortedItems
    static ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem*>* _get_sortedItems();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,AuctionHouseMenu/AuctionHouseItem> sortedItems
    static void _set_sortedItems(::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem*>* value);
    // Get static field: static private System.Int32 itemPos
    static int _get_itemPos();
    // Set static field: static private System.Int32 itemPos
    static void _set_itemPos(int value);
    // Get static field: static private System.String aucId
    static ::StringW _get_aucId();
    // Set static field: static private System.String aucId
    static void _set_aucId(::StringW value);
    // Get static field: static private System.String buyoutPrice
    static ::StringW _get_buyoutPrice();
    // Set static field: static private System.String buyoutPrice
    static void _set_buyoutPrice(::StringW value);
    // Get static field: static private System.Boolean isMarketStallItem
    static bool _get_isMarketStallItem();
    // Set static field: static private System.Boolean isMarketStallItem
    static void _set_isMarketStallItem(bool value);
    // Get static field: static private System.String categorySelection
    static ::StringW _get_categorySelection();
    // Set static field: static private System.String categorySelection
    static void _set_categorySelection(::StringW value);
    // Get static field: static private System.String itemSelection
    static ::StringW _get_itemSelection();
    // Set static field: static private System.String itemSelection
    static void _set_itemSelection(::StringW value);
    // Get static field: static public PowerUI.Element tooltipEl
    static ::PowerUI::Element* _get_tooltipEl();
    // Set static field: static public PowerUI.Element tooltipEl
    static void _set_tooltipEl(::PowerUI::Element* value);
    // Get static field: static private System.String tooltipBoxIdx
    static ::StringW _get_tooltipBoxIdx();
    // Set static field: static private System.String tooltipBoxIdx
    static void _set_tooltipBoxIdx(::StringW value);
    // Get static field: static private System.String tooltipBoxType
    static ::StringW _get_tooltipBoxType();
    // Set static field: static private System.String tooltipBoxType
    static void _set_tooltipBoxType(::StringW value);
    // Get static field: static private LTDescr tooltipTimeout
    static ::GlobalNamespace::LTDescr* _get_tooltipTimeout();
    // Set static field: static private LTDescr tooltipTimeout
    static void _set_tooltipTimeout(::GlobalNamespace::LTDescr* value);
    // Get static field: static private LTDescr resizeTimeout
    static ::GlobalNamespace::LTDescr* _get_resizeTimeout();
    // Set static field: static private LTDescr resizeTimeout
    static void _set_resizeTimeout(::GlobalNamespace::LTDescr* value);
    // Get static field: static private System.String tooltipItemId
    static ::StringW _get_tooltipItemId();
    // Set static field: static private System.String tooltipItemId
    static void _set_tooltipItemId(::StringW value);
    // Get static field: static private System.String tooltipSlotName
    static ::StringW _get_tooltipSlotName();
    // Set static field: static private System.String tooltipSlotName
    static void _set_tooltipSlotName(::StringW value);
    // Get static field: static private System.String computedLeft
    static ::StringW _get_computedLeft();
    // Set static field: static private System.String computedLeft
    static void _set_computedLeft(::StringW value);
    // Get static field: static private System.String computedTop
    static ::StringW _get_computedTop();
    // Set static field: static private System.String computedTop
    static void _set_computedTop(::StringW value);
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // static public System.Void init(Auctioneer _behavior, PowerUI.Document document)
    // Offset: 0x12A7D00
    static void init(::GlobalNamespace::Auctioneer* _behavior, ::PowerUI::Document* document);
    // static public System.String capitalizeFirstLetter(System.String thisstring)
    // Offset: 0x12A7DB8
    static ::StringW capitalizeFirstLetter(::StringW thisstring);
    // static public System.Collections.Generic.Dictionary`2<System.String,System.String> getDataFromClasses(PowerUI.Element el)
    // Offset: 0x12A7E20
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* getDataFromClasses(::PowerUI::Element* el);
    // static public System.String parseHtmlId(System.String buttonId)
    // Offset: 0x12A8088
    static ::StringW parseHtmlId(::StringW buttonId);
    // static public System.String getAuctionId(System.String buttonId)
    // Offset: 0x12A8150
    static ::StringW getAuctionId(::StringW buttonId);
    // static public System.Void addItemSelections(PowerUI.Document document, System.String category)
    // Offset: 0x12A8218
    static void addItemSelections(::PowerUI::Document* document, ::StringW category);
    // static public System.Void addAuctionListings(System.Collections.Generic.Dictionary`2<System.Int32,AuctionHouseMenu/AuctionHouseItem> items)
    // Offset: 0x12A88D4
    static void addAuctionListings(::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem*>* items);
    // static public System.String determineTimeRemaining(System.Int32 auctionLength)
    // Offset: 0x12AAAD0
    static ::StringW determineTimeRemaining(int auctionLength);
    // static public System.Void addErrors(PowerUI.Document document, System.String[] errors)
    // Offset: 0x12AAB54
    static void addErrors(::PowerUI::Document* document, ::ArrayW<::StringW> errors);
    // static public System.Void Bid(PowerUI.UIEvent e)
    // Offset: 0x12AAC68
    static void Bid(::PowerUI::UIEvent* e);
    // static public System.Void Buyout(PowerUI.UIEvent e)
    // Offset: 0x12AAF44
    static void Buyout(::PowerUI::UIEvent* e);
    // static public System.Void handleCategoryClick(PowerUI.UIEvent e)
    // Offset: 0x12AB2C8
    static void handleCategoryClick(::PowerUI::UIEvent* e);
    // static public System.Void handleItemClick(PowerUI.UIEvent e)
    // Offset: 0x12AB46C
    static void handleItemClick(::PowerUI::UIEvent* e);
    // static public System.Void refreshAuctionListings()
    // Offset: 0x12A8798
    static void refreshAuctionListings();
    // static public System.Void handleChoiceClick(PowerUI.UIEvent e)
    // Offset: 0x12AB774
    static void handleChoiceClick(::PowerUI::UIEvent* e);
    // static public System.Void handleLeaveClick(PowerUI.UIEvent e)
    // Offset: 0x12AB84C
    static void handleLeaveClick(::PowerUI::UIEvent* e);
    // static public System.Void addClass(PowerUI.Element el, System.String cname)
    // Offset: 0x12AB940
    static void addClass(::PowerUI::Element* el, ::StringW cname);
    // static public System.Void removeClass(PowerUI.Element el, System.String cname)
    // Offset: 0x12ABA70
    static void removeClass(::PowerUI::Element* el, ::StringW cname);
    // static public System.Boolean hasClass(PowerUI.Element el, System.String cname)
    // Offset: 0x12ABA18
    static bool hasClass(::PowerUI::Element* el, ::StringW cname);
    // static public System.Void showKeyboard(PowerUI.UIEvent e)
    // Offset: 0x12ABB3C
    static void showKeyboard(::PowerUI::UIEvent* e);
    // static public System.Void showBuyoutConfirmation(PowerUI.UIEvent e)
    // Offset: 0x12ABC30
    static void showBuyoutConfirmation(::PowerUI::UIEvent* e);
    // static public System.Void hideBuyoutConfirmation(PowerUI.UIEvent e)
    // Offset: 0x12AB1BC
    static void hideBuyoutConfirmation(::PowerUI::UIEvent* e);
    // static public System.Collections.Generic.Dictionary`2<System.Int32,AuctionHouseMenu/AuctionHouseItem> sortItems()
    // Offset: 0x12A9DE4
    static ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem*>* sortItems();
    // static public System.Void toggleSortMethod(PowerUI.UIEvent e)
    // Offset: 0x12ABE94
    static void toggleSortMethod(::PowerUI::UIEvent* e);
    // static public System.Void inventoryHover(PowerUI.UIEvent e)
    // Offset: 0x12AC13C
    static void inventoryHover(::PowerUI::UIEvent* e);
    // static public System.Void inventoryStopHover(PowerUI.UIEvent e)
    // Offset: 0x12AE6D8
    static void inventoryStopHover(::PowerUI::UIEvent* e);
    // public System.Void .ctor()
    // Offset: 0x12AEA14
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuctionHouseMenu* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuctionHouseMenu::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuctionHouseMenu*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x12AEA6C
    static void _cctor();
  }; // AuctionHouseMenu
  #pragma pack(pop)
  static check_size<sizeof(AuctionHouseMenu), 24 + sizeof(::StringW)> __GlobalNamespace_AuctionHouseMenuSizeCheck;
  static_assert(sizeof(AuctionHouseMenu) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::init
// Il2CppName: init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::GlobalNamespace::Auctioneer*, ::PowerUI::Document*)>(&GlobalNamespace::AuctionHouseMenu::init)> {
  static const MethodInfo* get() {
    static auto* _behavior = &::il2cpp_utils::GetClassFromName("", "Auctioneer")->byval_arg;
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{_behavior, document});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::capitalizeFirstLetter
// Il2CppName: capitalizeFirstLetter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&GlobalNamespace::AuctionHouseMenu::capitalizeFirstLetter)> {
  static const MethodInfo* get() {
    static auto* thisstring = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "capitalizeFirstLetter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisstring});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::getDataFromClasses
// Il2CppName: getDataFromClasses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* (*)(::PowerUI::Element*)>(&GlobalNamespace::AuctionHouseMenu::getDataFromClasses)> {
  static const MethodInfo* get() {
    static auto* el = &::il2cpp_utils::GetClassFromName("PowerUI", "Element")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "getDataFromClasses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{el});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::parseHtmlId
// Il2CppName: parseHtmlId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&GlobalNamespace::AuctionHouseMenu::parseHtmlId)> {
  static const MethodInfo* get() {
    static auto* buttonId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "parseHtmlId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buttonId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::getAuctionId
// Il2CppName: getAuctionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&GlobalNamespace::AuctionHouseMenu::getAuctionId)> {
  static const MethodInfo* get() {
    static auto* buttonId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "getAuctionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buttonId});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::addItemSelections
// Il2CppName: addItemSelections
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*, ::StringW)>(&GlobalNamespace::AuctionHouseMenu::addItemSelections)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    static auto* category = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "addItemSelections", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document, category});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::addAuctionListings
// Il2CppName: addAuctionListings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem*>*)>(&GlobalNamespace::AuctionHouseMenu::addAuctionListings)> {
  static const MethodInfo* get() {
    static auto* items = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("", "AuctionHouseMenu/AuctionHouseItem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "addAuctionListings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{items});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::determineTimeRemaining
// Il2CppName: determineTimeRemaining
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int)>(&GlobalNamespace::AuctionHouseMenu::determineTimeRemaining)> {
  static const MethodInfo* get() {
    static auto* auctionLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "determineTimeRemaining", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{auctionLength});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::addErrors
// Il2CppName: addErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Document*, ::ArrayW<::StringW>)>(&GlobalNamespace::AuctionHouseMenu::addErrors)> {
  static const MethodInfo* get() {
    static auto* document = &::il2cpp_utils::GetClassFromName("PowerUI", "Document")->byval_arg;
    static auto* errors = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "addErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{document, errors});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::Bid
// Il2CppName: Bid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::Bid)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "Bid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::Buyout
// Il2CppName: Buyout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::Buyout)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "Buyout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::handleCategoryClick
// Il2CppName: handleCategoryClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::handleCategoryClick)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "handleCategoryClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::handleItemClick
// Il2CppName: handleItemClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::handleItemClick)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "handleItemClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::refreshAuctionListings
// Il2CppName: refreshAuctionListings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::AuctionHouseMenu::refreshAuctionListings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "refreshAuctionListings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::handleChoiceClick
// Il2CppName: handleChoiceClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::handleChoiceClick)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "handleChoiceClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::handleLeaveClick
// Il2CppName: handleLeaveClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::handleLeaveClick)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "handleLeaveClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::addClass
// Il2CppName: addClass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Element*, ::StringW)>(&GlobalNamespace::AuctionHouseMenu::addClass)> {
  static const MethodInfo* get() {
    static auto* el = &::il2cpp_utils::GetClassFromName("PowerUI", "Element")->byval_arg;
    static auto* cname = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "addClass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{el, cname});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::removeClass
// Il2CppName: removeClass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::Element*, ::StringW)>(&GlobalNamespace::AuctionHouseMenu::removeClass)> {
  static const MethodInfo* get() {
    static auto* el = &::il2cpp_utils::GetClassFromName("PowerUI", "Element")->byval_arg;
    static auto* cname = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "removeClass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{el, cname});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::hasClass
// Il2CppName: hasClass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::PowerUI::Element*, ::StringW)>(&GlobalNamespace::AuctionHouseMenu::hasClass)> {
  static const MethodInfo* get() {
    static auto* el = &::il2cpp_utils::GetClassFromName("PowerUI", "Element")->byval_arg;
    static auto* cname = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "hasClass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{el, cname});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::showKeyboard
// Il2CppName: showKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::showKeyboard)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "showKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::showBuyoutConfirmation
// Il2CppName: showBuyoutConfirmation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::showBuyoutConfirmation)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "showBuyoutConfirmation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::hideBuyoutConfirmation
// Il2CppName: hideBuyoutConfirmation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::hideBuyoutConfirmation)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "hideBuyoutConfirmation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::sortItems
// Il2CppName: sortItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::AuctionHouseMenu::AuctionHouseItem*>* (*)()>(&GlobalNamespace::AuctionHouseMenu::sortItems)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "sortItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::toggleSortMethod
// Il2CppName: toggleSortMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::toggleSortMethod)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "toggleSortMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::inventoryHover
// Il2CppName: inventoryHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::inventoryHover)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "inventoryHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::inventoryStopHover
// Il2CppName: inventoryStopHover
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::PowerUI::UIEvent*)>(&GlobalNamespace::AuctionHouseMenu::inventoryStopHover)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("PowerUI", "UIEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), "inventoryStopHover", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::AuctionHouseMenu::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::AuctionHouseMenu::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AuctionHouseMenu*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
