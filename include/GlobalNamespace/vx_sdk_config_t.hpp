// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SWIGTYPE_p_f_size_t__p_void
  class SWIGTYPE_p_f_size_t__p_void;
  // Forward declaring type: SWIGTYPE_p_f_p_void__void
  class SWIGTYPE_p_f_p_void__void;
  // Forward declaring type: SWIGTYPE_p_f_p_void_size_t__p_void
  class SWIGTYPE_p_f_p_void_size_t__p_void;
  // Forward declaring type: SWIGTYPE_p_f_size_t_size_t__p_void
  class SWIGTYPE_p_f_size_t_size_t__p_void;
  // Forward declaring type: SWIGTYPE_p_void
  class SWIGTYPE_p_void;
  // Forward declaring type: SWIGTYPE_p_f_p_void_p_void_size_t__int
  class SWIGTYPE_p_f_p_void_p_void_size_t__int;
  // Forward declaring type: SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void
  class SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void;
  // Forward declaring type: vx_log_level
  struct vx_log_level;
  // Forward declaring type: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void
  class SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void;
  // Forward declaring type: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void
  class SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void;
  // Forward declaring type: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void
  class SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void;
  // Forward declaring type: SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void
  class SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void;
  // Forward declaring type: SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void
  class SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void;
  // Forward declaring type: SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void
  class SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void;
  // Forward declaring type: SWIGTYPE_p_f_p_void_p_q_const__char__void
  class SWIGTYPE_p_f_p_void_p_q_const__char__void;
  // Forward declaring type: SWIGTYPE_p_f_void__int
  class SWIGTYPE_p_f_void__int;
  // Forward declaring type: SWIGTYPE_p_f_int__void
  class SWIGTYPE_p_f_int__void;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: vx_sdk_config_t
  class vx_sdk_config_t;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::vx_sdk_config_t);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::vx_sdk_config_t*, "", "vx_sdk_config_t");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: vx_sdk_config_t
  // [TokenAttribute] Offset: FFFFFFFF
  class vx_sdk_config_t : public ::Il2CppObject/*, public ::System::IDisposable*/ {
    public:
    public:
    // private System.Runtime.InteropServices.HandleRef swigCPtr
    // Size: 0x10
    // Offset: 0x10
    ::System::Runtime::InteropServices::HandleRef swigCPtr;
    // Field size check
    static_assert(sizeof(::System::Runtime::InteropServices::HandleRef) == 0x10);
    // protected System.Boolean swigCMemOwn
    // Size: 0x1
    // Offset: 0x20
    bool swigCMemOwn;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::System::IDisposable
    operator ::System::IDisposable() noexcept {
      return *reinterpret_cast<::System::IDisposable*>(this);
    }
    // Get static field: static public readonly System.UInt32 configSize
    static uint _get_configSize();
    // Set static field: static public readonly System.UInt32 configSize
    static void _set_configSize(uint value);
    // Get instance field reference: private System.Runtime.InteropServices.HandleRef swigCPtr
    [[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::HandleRef& dyn_swigCPtr();
    // Get instance field reference: protected System.Boolean swigCMemOwn
    [[deprecated("Use field access instead!")]] bool& dyn_swigCMemOwn();
    // System.Void .ctor(System.IntPtr cPtr, System.Boolean cMemoryOwn)
    // Offset: 0x2817470
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_sdk_config_t* New_ctor(::System::IntPtr cPtr, bool cMemoryOwn) {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_sdk_config_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_sdk_config_t*, creationType>(cPtr, cMemoryOwn)));
    }
    // static System.Runtime.InteropServices.HandleRef getCPtr(vx_sdk_config_t obj)
    // Offset: 0x28174D4
    static ::System::Runtime::InteropServices::HandleRef getCPtr(::GlobalNamespace::vx_sdk_config_t* obj);
    // public System.Void Dispose()
    // Offset: 0x28175C4
    void Dispose();
    // public System.Void set_num_codec_threads(System.Int32 value)
    // Offset: 0x2817734
    void set_num_codec_threads(int value);
    // public System.Int32 get_num_codec_threads()
    // Offset: 0x28177B4
    int get_num_codec_threads();
    // public System.Void set_num_voice_threads(System.Int32 value)
    // Offset: 0x2817824
    void set_num_voice_threads(int value);
    // public System.Int32 get_num_voice_threads()
    // Offset: 0x28178A4
    int get_num_voice_threads();
    // public System.Void set_num_web_threads(System.Int32 value)
    // Offset: 0x2817914
    void set_num_web_threads(int value);
    // public System.Int32 get_num_web_threads()
    // Offset: 0x2817994
    int get_num_web_threads();
    // public System.Void set_render_source_queue_depth_max(System.Int32 value)
    // Offset: 0x2817A04
    void set_render_source_queue_depth_max(int value);
    // public System.Int32 get_render_source_queue_depth_max()
    // Offset: 0x2817A84
    int get_render_source_queue_depth_max();
    // public System.Void set_render_source_initial_buffer_count(System.Int32 value)
    // Offset: 0x2817AF4
    void set_render_source_initial_buffer_count(int value);
    // public System.Int32 get_render_source_initial_buffer_count()
    // Offset: 0x2817B74
    int get_render_source_initial_buffer_count();
    // public System.Void set_upstream_jitter_frame_count(System.Int32 value)
    // Offset: 0x2817BE4
    void set_upstream_jitter_frame_count(int value);
    // public System.Int32 get_upstream_jitter_frame_count()
    // Offset: 0x2817C64
    int get_upstream_jitter_frame_count();
    // public System.Void set_allow_shared_capture_devices(System.Int32 value)
    // Offset: 0x2817CD4
    void set_allow_shared_capture_devices(int value);
    // public System.Int32 get_allow_shared_capture_devices()
    // Offset: 0x2817D54
    int get_allow_shared_capture_devices();
    // public System.Void set_max_logins_per_user(System.Int32 value)
    // Offset: 0x2817DC4
    void set_max_logins_per_user(int value);
    // public System.Int32 get_max_logins_per_user()
    // Offset: 0x2817E44
    int get_max_logins_per_user();
    // public System.Void set_app_id(System.String value)
    // Offset: 0x2817EB4
    void set_app_id(::StringW value);
    // public System.String get_app_id()
    // Offset: 0x2817F34
    ::StringW get_app_id();
    // public System.Void set_cert_data_dir(System.String value)
    // Offset: 0x2817FA4
    void set_cert_data_dir(::StringW value);
    // public System.String get_cert_data_dir()
    // Offset: 0x2818024
    ::StringW get_cert_data_dir();
    // public System.Void set_pf_malloc_func(SWIGTYPE_p_f_size_t__p_void value)
    // Offset: 0x2818094
    void set_pf_malloc_func(::GlobalNamespace::SWIGTYPE_p_f_size_t__p_void* value);
    // public SWIGTYPE_p_f_size_t__p_void get_pf_malloc_func()
    // Offset: 0x281812C
    ::GlobalNamespace::SWIGTYPE_p_f_size_t__p_void* get_pf_malloc_func();
    // public System.Void set_pf_free_func(SWIGTYPE_p_f_p_void__void value)
    // Offset: 0x28181E0
    void set_pf_free_func(::GlobalNamespace::SWIGTYPE_p_f_p_void__void* value);
    // public SWIGTYPE_p_f_p_void__void get_pf_free_func()
    // Offset: 0x2818278
    ::GlobalNamespace::SWIGTYPE_p_f_p_void__void* get_pf_free_func();
    // public System.Void set_pf_realloc_func(SWIGTYPE_p_f_p_void_size_t__p_void value)
    // Offset: 0x281832C
    void set_pf_realloc_func(::GlobalNamespace::SWIGTYPE_p_f_p_void_size_t__p_void* value);
    // public SWIGTYPE_p_f_p_void_size_t__p_void get_pf_realloc_func()
    // Offset: 0x28183C4
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_size_t__p_void* get_pf_realloc_func();
    // public System.Void set_pf_calloc_func(SWIGTYPE_p_f_size_t_size_t__p_void value)
    // Offset: 0x2818478
    void set_pf_calloc_func(::GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void* value);
    // public SWIGTYPE_p_f_size_t_size_t__p_void get_pf_calloc_func()
    // Offset: 0x2818510
    ::GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void* get_pf_calloc_func();
    // public System.Void set_pf_malloc_aligned_func(SWIGTYPE_p_f_size_t_size_t__p_void value)
    // Offset: 0x28185C4
    void set_pf_malloc_aligned_func(::GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void* value);
    // public SWIGTYPE_p_f_size_t_size_t__p_void get_pf_malloc_aligned_func()
    // Offset: 0x281865C
    ::GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void* get_pf_malloc_aligned_func();
    // public System.Void set_pf_free_aligned_func(SWIGTYPE_p_f_p_void__void value)
    // Offset: 0x2818710
    void set_pf_free_aligned_func(::GlobalNamespace::SWIGTYPE_p_f_p_void__void* value);
    // public SWIGTYPE_p_f_p_void__void get_pf_free_aligned_func()
    // Offset: 0x28187A8
    ::GlobalNamespace::SWIGTYPE_p_f_p_void__void* get_pf_free_aligned_func();
    // public System.Void set_reserved(System.Int32 value)
    // Offset: 0x281885C
    void set_reserved(int value);
    // public System.Int32 get_reserved()
    // Offset: 0x28188DC
    int get_reserved();
    // public System.Void set_job_queue_handle(SWIGTYPE_p_void value)
    // Offset: 0x281894C
    void set_job_queue_handle(::GlobalNamespace::SWIGTYPE_p_void* value);
    // public SWIGTYPE_p_void get_job_queue_handle()
    // Offset: 0x28189E4
    ::GlobalNamespace::SWIGTYPE_p_void* get_job_queue_handle();
    // public System.Void set_pf_queue_job_sync(SWIGTYPE_p_f_p_void_p_void_size_t__int value)
    // Offset: 0x2818A98
    void set_pf_queue_job_sync(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int* value);
    // public SWIGTYPE_p_f_p_void_p_void_size_t__int get_pf_queue_job_sync()
    // Offset: 0x2818B30
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int* get_pf_queue_job_sync();
    // public System.Void set_pf_queue_job_async(SWIGTYPE_p_f_p_void_p_void_size_t__int value)
    // Offset: 0x2818BE4
    void set_pf_queue_job_async(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int* value);
    // public SWIGTYPE_p_f_p_void_p_void_size_t__int get_pf_queue_job_async()
    // Offset: 0x2818C7C
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int* get_pf_queue_job_async();
    // public System.Void set_processor_affinity_mask(System.Int64 value)
    // Offset: 0x2818D30
    void set_processor_affinity_mask(int64_t value);
    // public System.Int64 get_processor_affinity_mask()
    // Offset: 0x2818DB0
    int64_t get_processor_affinity_mask();
    // public System.Void set_callback_handle(SWIGTYPE_p_void value)
    // Offset: 0x2818E20
    void set_callback_handle(::GlobalNamespace::SWIGTYPE_p_void* value);
    // public SWIGTYPE_p_void get_callback_handle()
    // Offset: 0x2818EB8
    ::GlobalNamespace::SWIGTYPE_p_void* get_callback_handle();
    // public System.Void set_pf_logging_callback(SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void value)
    // Offset: 0x2818F6C
    void set_pf_logging_callback(::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void* value);
    // public SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void get_pf_logging_callback()
    // Offset: 0x2819004
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void* get_pf_logging_callback();
    // public System.Void set_pf_sdk_message_callback(SWIGTYPE_p_f_p_void__void value)
    // Offset: 0x28190B8
    void set_pf_sdk_message_callback(::GlobalNamespace::SWIGTYPE_p_f_p_void__void* value);
    // public SWIGTYPE_p_f_p_void__void get_pf_sdk_message_callback()
    // Offset: 0x2819150
    ::GlobalNamespace::SWIGTYPE_p_f_p_void__void* get_pf_sdk_message_callback();
    // public System.Void set_initial_log_level(vx_log_level value)
    // Offset: 0x2819204
    void set_initial_log_level(::GlobalNamespace::vx_log_level value);
    // public vx_log_level get_initial_log_level()
    // Offset: 0x2819284
    ::GlobalNamespace::vx_log_level get_initial_log_level();
    // public System.Void set_disable_device_polling(System.Int32 value)
    // Offset: 0x28192F4
    void set_disable_device_polling(int value);
    // public System.Int32 get_disable_device_polling()
    // Offset: 0x2819374
    int get_disable_device_polling();
    // public System.Void set_force_capture_silence(System.Int32 value)
    // Offset: 0x28193E4
    void set_force_capture_silence(int value);
    // public System.Int32 get_force_capture_silence()
    // Offset: 0x2819464
    int get_force_capture_silence();
    // public System.Void set_enable_advanced_auto_levels(System.Int32 value)
    // Offset: 0x28194D4
    void set_enable_advanced_auto_levels(int value);
    // public System.Int32 get_enable_advanced_auto_levels()
    // Offset: 0x2819554
    int get_enable_advanced_auto_levels();
    // public System.Void set_pf_on_audio_unit_started(SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void value)
    // Offset: 0x28195C4
    void set_pf_on_audio_unit_started(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void* value);
    // public SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void get_pf_on_audio_unit_started()
    // Offset: 0x281965C
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void* get_pf_on_audio_unit_started();
    // public System.Void set_pf_on_audio_unit_stopped(SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void value)
    // Offset: 0x2819710
    void set_pf_on_audio_unit_stopped(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void* value);
    // public SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void get_pf_on_audio_unit_stopped()
    // Offset: 0x28197A8
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void* get_pf_on_audio_unit_stopped();
    // public System.Void set_pf_on_audio_unit_after_capture_audio_read(SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void value)
    // Offset: 0x281985C
    void set_pf_on_audio_unit_after_capture_audio_read(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void* value);
    // public SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void get_pf_on_audio_unit_after_capture_audio_read()
    // Offset: 0x28198F4
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void* get_pf_on_audio_unit_after_capture_audio_read();
    // public System.Void set_pf_on_audio_unit_before_capture_audio_sent(SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void value)
    // Offset: 0x28199A8
    void set_pf_on_audio_unit_before_capture_audio_sent(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void* value);
    // public SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void get_pf_on_audio_unit_before_capture_audio_sent()
    // Offset: 0x2819A40
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void* get_pf_on_audio_unit_before_capture_audio_sent();
    // public System.Void set_pf_on_audio_unit_before_recv_audio_mixed(SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void value)
    // Offset: 0x2819AF4
    void set_pf_on_audio_unit_before_recv_audio_mixed(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void* value);
    // public SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void get_pf_on_audio_unit_before_recv_audio_mixed()
    // Offset: 0x2819B8C
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void* get_pf_on_audio_unit_before_recv_audio_mixed();
    // public System.Void set_pf_on_audio_unit_before_recv_audio_rendered(SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void value)
    // Offset: 0x2819C40
    void set_pf_on_audio_unit_before_recv_audio_rendered(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void* value);
    // public SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void get_pf_on_audio_unit_before_recv_audio_rendered()
    // Offset: 0x2819CD8
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void* get_pf_on_audio_unit_before_recv_audio_rendered();
    // public System.Void set_capture_device_buffer_size_intervals(System.Int32 value)
    // Offset: 0x2819D8C
    void set_capture_device_buffer_size_intervals(int value);
    // public System.Int32 get_capture_device_buffer_size_intervals()
    // Offset: 0x2819E0C
    int get_capture_device_buffer_size_intervals();
    // public System.Void set_render_device_buffer_size_intervals(System.Int32 value)
    // Offset: 0x2819E7C
    void set_render_device_buffer_size_intervals(int value);
    // public System.Int32 get_render_device_buffer_size_intervals()
    // Offset: 0x2819EFC
    int get_render_device_buffer_size_intervals();
    // public System.Void set_disable_audio_ducking(System.Int32 value)
    // Offset: 0x2819F6C
    void set_disable_audio_ducking(int value);
    // public System.Int32 get_disable_audio_ducking()
    // Offset: 0x2819FEC
    int get_disable_audio_ducking();
    // public System.Void set_use_access_tokens(System.Int32 value)
    // Offset: 0x281A05C
    void set_use_access_tokens(int value);
    // public System.Int32 get_use_access_tokens()
    // Offset: 0x281A0DC
    int get_use_access_tokens();
    // public System.Void set_enable_multiparty_text(System.Int32 value)
    // Offset: 0x281A14C
    void set_enable_multiparty_text(int value);
    // public System.Int32 get_enable_multiparty_text()
    // Offset: 0x281A1CC
    int get_enable_multiparty_text();
    // public System.Void set_enable_dtx(System.Int32 value)
    // Offset: 0x281A23C
    void set_enable_dtx(int value);
    // public System.Int32 get_enable_dtx()
    // Offset: 0x281A2BC
    int get_enable_dtx();
    // public System.Void set_default_codecs_mask(System.UInt32 value)
    // Offset: 0x281A32C
    void set_default_codecs_mask(uint value);
    // public System.UInt32 get_default_codecs_mask()
    // Offset: 0x281A3AC
    uint get_default_codecs_mask();
    // public System.Void set_pf_on_before_udp_frame_transmitted(SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void value)
    // Offset: 0x281A41C
    void set_pf_on_before_udp_frame_transmitted(::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void* value);
    // public SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void get_pf_on_before_udp_frame_transmitted()
    // Offset: 0x281A4B4
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void* get_pf_on_before_udp_frame_transmitted();
    // public System.Void set_pf_on_after_udp_frame_transmitted(SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void value)
    // Offset: 0x281A568
    void set_pf_on_after_udp_frame_transmitted(::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void* value);
    // public SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void get_pf_on_after_udp_frame_transmitted()
    // Offset: 0x281A600
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void* get_pf_on_after_udp_frame_transmitted();
    // public System.Void set_enable_fast_network_change_detection(System.Int32 value)
    // Offset: 0x281A6B4
    void set_enable_fast_network_change_detection(int value);
    // public System.Int32 get_enable_fast_network_change_detection()
    // Offset: 0x281A734
    int get_enable_fast_network_change_detection();
    // public System.Void set_use_os_proxy_settings(System.Int32 value)
    // Offset: 0x281A7A4
    void set_use_os_proxy_settings(int value);
    // public System.Int32 get_use_os_proxy_settings()
    // Offset: 0x281A824
    int get_use_os_proxy_settings();
    // public System.Void set_enable_persistent_http(System.Int32 value)
    // Offset: 0x281A894
    void set_enable_persistent_http(int value);
    // public System.Int32 get_enable_persistent_http()
    // Offset: 0x281A914
    int get_enable_persistent_http();
    // public System.Void set_preferred_sip_port(System.Int32 value)
    // Offset: 0x281A984
    void set_preferred_sip_port(int value);
    // public System.Int32 get_preferred_sip_port()
    // Offset: 0x281AA04
    int get_preferred_sip_port();
    // public System.Void set_default_render_to_receiver(System.Int32 value)
    // Offset: 0x281AA74
    void set_default_render_to_receiver(int value);
    // public System.Int32 get_default_render_to_receiver()
    // Offset: 0x281AAF4
    int get_default_render_to_receiver();
    // public System.Void set_mic_makeup_gain(System.Single value)
    // Offset: 0x281AB64
    void set_mic_makeup_gain(float value);
    // public System.Single get_mic_makeup_gain()
    // Offset: 0x281ABE4
    float get_mic_makeup_gain();
    // public System.Void set_pf_on_thread_created(SWIGTYPE_p_f_p_void_p_q_const__char__void value)
    // Offset: 0x281AC54
    void set_pf_on_thread_created(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char__void* value);
    // public SWIGTYPE_p_f_p_void_p_q_const__char__void get_pf_on_thread_created()
    // Offset: 0x281ACEC
    ::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char__void* get_pf_on_thread_created();
    // public System.Void set_pf_on_thread_exit(SWIGTYPE_p_f_p_void__void value)
    // Offset: 0x281ADA0
    void set_pf_on_thread_exit(::GlobalNamespace::SWIGTYPE_p_f_p_void__void* value);
    // public SWIGTYPE_p_f_p_void__void get_pf_on_thread_exit()
    // Offset: 0x281AE38
    ::GlobalNamespace::SWIGTYPE_p_f_p_void__void* get_pf_on_thread_exit();
    // public System.Void set_pf_request_permission_for_network(SWIGTYPE_p_f_void__int value)
    // Offset: 0x281AEEC
    void set_pf_request_permission_for_network(::GlobalNamespace::SWIGTYPE_p_f_void__int* value);
    // public SWIGTYPE_p_f_void__int get_pf_request_permission_for_network()
    // Offset: 0x281AF84
    ::GlobalNamespace::SWIGTYPE_p_f_void__int* get_pf_request_permission_for_network();
    // public System.Void set_dynamic_voice_processing_switching(System.Int32 value)
    // Offset: 0x281B038
    void set_dynamic_voice_processing_switching(int value);
    // public System.Int32 get_dynamic_voice_processing_switching()
    // Offset: 0x281B0B8
    int get_dynamic_voice_processing_switching();
    // public System.Void set_pf_on_audio_unit_capture_device_status_changed(SWIGTYPE_p_f_int__void value)
    // Offset: 0x281B128
    void set_pf_on_audio_unit_capture_device_status_changed(::GlobalNamespace::SWIGTYPE_p_f_int__void* value);
    // public SWIGTYPE_p_f_int__void get_pf_on_audio_unit_capture_device_status_changed()
    // Offset: 0x281B1C0
    ::GlobalNamespace::SWIGTYPE_p_f_int__void* get_pf_on_audio_unit_capture_device_status_changed();
    // public System.Void set_never_rtp_timeout_ms(System.Int32 value)
    // Offset: 0x281B274
    void set_never_rtp_timeout_ms(int value);
    // public System.Int32 get_never_rtp_timeout_ms()
    // Offset: 0x281B2F4
    int get_never_rtp_timeout_ms();
    // public System.Void set_lost_rtp_timeout_ms(System.Int32 value)
    // Offset: 0x281B364
    void set_lost_rtp_timeout_ms(int value);
    // public System.Int32 get_lost_rtp_timeout_ms()
    // Offset: 0x281B3E4
    int get_lost_rtp_timeout_ms();
    // public System.Void set_pf_on_assert(SWIGTYPE_p_f_int__void value)
    // Offset: 0x281B454
    void set_pf_on_assert(::GlobalNamespace::SWIGTYPE_p_f_int__void* value);
    // public SWIGTYPE_p_f_int__void get_pf_on_assert()
    // Offset: 0x281B4EC
    ::GlobalNamespace::SWIGTYPE_p_f_int__void* get_pf_on_assert();
    // public System.Void .ctor()
    // Offset: 0x281B5A0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static vx_sdk_config_t* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::vx_sdk_config_t::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<vx_sdk_config_t*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x281B614
    static void _cctor();
    // protected override System.Void Finalize()
    // Offset: 0x2817548
    // Implemented from: System.Object
    // Base method: System.Void Object::Finalize()
    void Finalize();
  }; // vx_sdk_config_t
  #pragma pack(pop)
  static check_size<sizeof(vx_sdk_config_t), 32 + sizeof(bool)> __GlobalNamespace_vx_sdk_config_tSizeCheck;
  static_assert(sizeof(vx_sdk_config_t) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::getCPtr
// Il2CppName: getCPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Runtime::InteropServices::HandleRef (*)(::GlobalNamespace::vx_sdk_config_t*)>(&GlobalNamespace::vx_sdk_config_t::getCPtr)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("", "vx_sdk_config_t")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "getCPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::Dispose)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_num_codec_threads
// Il2CppName: set_num_codec_threads
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_num_codec_threads)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_num_codec_threads", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_num_codec_threads
// Il2CppName: get_num_codec_threads
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_num_codec_threads)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_num_codec_threads", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_num_voice_threads
// Il2CppName: set_num_voice_threads
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_num_voice_threads)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_num_voice_threads", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_num_voice_threads
// Il2CppName: get_num_voice_threads
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_num_voice_threads)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_num_voice_threads", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_num_web_threads
// Il2CppName: set_num_web_threads
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_num_web_threads)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_num_web_threads", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_num_web_threads
// Il2CppName: get_num_web_threads
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_num_web_threads)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_num_web_threads", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_render_source_queue_depth_max
// Il2CppName: set_render_source_queue_depth_max
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_render_source_queue_depth_max)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_render_source_queue_depth_max", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_render_source_queue_depth_max
// Il2CppName: get_render_source_queue_depth_max
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_render_source_queue_depth_max)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_render_source_queue_depth_max", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_render_source_initial_buffer_count
// Il2CppName: set_render_source_initial_buffer_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_render_source_initial_buffer_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_render_source_initial_buffer_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_render_source_initial_buffer_count
// Il2CppName: get_render_source_initial_buffer_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_render_source_initial_buffer_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_render_source_initial_buffer_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_upstream_jitter_frame_count
// Il2CppName: set_upstream_jitter_frame_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_upstream_jitter_frame_count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_upstream_jitter_frame_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_upstream_jitter_frame_count
// Il2CppName: get_upstream_jitter_frame_count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_upstream_jitter_frame_count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_upstream_jitter_frame_count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_allow_shared_capture_devices
// Il2CppName: set_allow_shared_capture_devices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_allow_shared_capture_devices)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_allow_shared_capture_devices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_allow_shared_capture_devices
// Il2CppName: get_allow_shared_capture_devices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_allow_shared_capture_devices)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_allow_shared_capture_devices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_max_logins_per_user
// Il2CppName: set_max_logins_per_user
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_max_logins_per_user)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_max_logins_per_user", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_max_logins_per_user
// Il2CppName: get_max_logins_per_user
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_max_logins_per_user)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_max_logins_per_user", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_app_id
// Il2CppName: set_app_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::StringW)>(&GlobalNamespace::vx_sdk_config_t::set_app_id)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_app_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_app_id
// Il2CppName: get_app_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_app_id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_app_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_cert_data_dir
// Il2CppName: set_cert_data_dir
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::StringW)>(&GlobalNamespace::vx_sdk_config_t::set_cert_data_dir)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_cert_data_dir", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_cert_data_dir
// Il2CppName: get_cert_data_dir
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_cert_data_dir)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_cert_data_dir", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_malloc_func
// Il2CppName: set_pf_malloc_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_size_t__p_void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_malloc_func)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_size_t__p_void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_malloc_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_malloc_func
// Il2CppName: get_pf_malloc_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_size_t__p_void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_malloc_func)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_malloc_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_free_func
// Il2CppName: set_pf_free_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_free_func)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_free_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_free_func
// Il2CppName: get_pf_free_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_free_func)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_free_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_realloc_func
// Il2CppName: set_pf_realloc_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_size_t__p_void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_realloc_func)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_size_t__p_void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_realloc_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_realloc_func
// Il2CppName: get_pf_realloc_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_size_t__p_void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_realloc_func)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_realloc_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_calloc_func
// Il2CppName: set_pf_calloc_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_calloc_func)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_size_t_size_t__p_void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_calloc_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_calloc_func
// Il2CppName: get_pf_calloc_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_calloc_func)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_calloc_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_malloc_aligned_func
// Il2CppName: set_pf_malloc_aligned_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_malloc_aligned_func)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_size_t_size_t__p_void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_malloc_aligned_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_malloc_aligned_func
// Il2CppName: get_pf_malloc_aligned_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_size_t_size_t__p_void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_malloc_aligned_func)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_malloc_aligned_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_free_aligned_func
// Il2CppName: set_pf_free_aligned_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_free_aligned_func)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_free_aligned_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_free_aligned_func
// Il2CppName: get_pf_free_aligned_func
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_free_aligned_func)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_free_aligned_func", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_reserved
// Il2CppName: set_reserved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_reserved)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_reserved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_reserved
// Il2CppName: get_reserved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_reserved)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_reserved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_job_queue_handle
// Il2CppName: set_job_queue_handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_void*)>(&GlobalNamespace::vx_sdk_config_t::set_job_queue_handle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_job_queue_handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_job_queue_handle
// Il2CppName: get_job_queue_handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_job_queue_handle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_job_queue_handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_queue_job_sync
// Il2CppName: set_pf_queue_job_sync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_queue_job_sync)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_p_void_size_t__int")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_queue_job_sync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_queue_job_sync
// Il2CppName: get_pf_queue_job_sync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_queue_job_sync)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_queue_job_sync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_queue_job_async
// Il2CppName: set_pf_queue_job_async
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_queue_job_async)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_p_void_size_t__int")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_queue_job_async", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_queue_job_async
// Il2CppName: get_pf_queue_job_async
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_p_void_size_t__int* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_queue_job_async)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_queue_job_async", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_processor_affinity_mask
// Il2CppName: set_processor_affinity_mask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int64_t)>(&GlobalNamespace::vx_sdk_config_t::set_processor_affinity_mask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_processor_affinity_mask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_processor_affinity_mask
// Il2CppName: get_processor_affinity_mask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_processor_affinity_mask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_processor_affinity_mask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_callback_handle
// Il2CppName: set_callback_handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_void*)>(&GlobalNamespace::vx_sdk_config_t::set_callback_handle)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_callback_handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_callback_handle
// Il2CppName: get_callback_handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_callback_handle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_callback_handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_logging_callback
// Il2CppName: set_pf_logging_callback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_logging_callback)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_logging_callback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_logging_callback
// Il2CppName: get_pf_logging_callback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_log_level_p_q_const__char_p_q_const__char__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_logging_callback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_logging_callback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_sdk_message_callback
// Il2CppName: set_pf_sdk_message_callback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_sdk_message_callback)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_sdk_message_callback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_sdk_message_callback
// Il2CppName: get_pf_sdk_message_callback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_sdk_message_callback)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_sdk_message_callback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_initial_log_level
// Il2CppName: set_initial_log_level
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::vx_log_level)>(&GlobalNamespace::vx_sdk_config_t::set_initial_log_level)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "vx_log_level")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_initial_log_level", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_initial_log_level
// Il2CppName: get_initial_log_level
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_log_level (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_initial_log_level)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_initial_log_level", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_disable_device_polling
// Il2CppName: set_disable_device_polling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_disable_device_polling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_disable_device_polling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_disable_device_polling
// Il2CppName: get_disable_device_polling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_disable_device_polling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_disable_device_polling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_force_capture_silence
// Il2CppName: set_force_capture_silence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_force_capture_silence)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_force_capture_silence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_force_capture_silence
// Il2CppName: get_force_capture_silence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_force_capture_silence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_force_capture_silence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_enable_advanced_auto_levels
// Il2CppName: set_enable_advanced_auto_levels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_enable_advanced_auto_levels)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_enable_advanced_auto_levels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_enable_advanced_auto_levels
// Il2CppName: get_enable_advanced_auto_levels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_enable_advanced_auto_levels)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_enable_advanced_auto_levels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_started
// Il2CppName: set_pf_on_audio_unit_started
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_started)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_audio_unit_started", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_started
// Il2CppName: get_pf_on_audio_unit_started
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_started)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_audio_unit_started", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_stopped
// Il2CppName: set_pf_on_audio_unit_stopped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_stopped)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_audio_unit_stopped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_stopped
// Il2CppName: get_pf_on_audio_unit_stopped
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_stopped)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_audio_unit_stopped", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_after_capture_audio_read
// Il2CppName: set_pf_on_audio_unit_after_capture_audio_read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_after_capture_audio_read)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_audio_unit_after_capture_audio_read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_after_capture_audio_read
// Il2CppName: get_pf_on_audio_unit_after_capture_audio_read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_after_capture_audio_read)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_audio_unit_after_capture_audio_read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_before_capture_audio_sent
// Il2CppName: set_pf_on_audio_unit_before_capture_audio_sent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_before_capture_audio_sent)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_audio_unit_before_capture_audio_sent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_before_capture_audio_sent
// Il2CppName: get_pf_on_audio_unit_before_capture_audio_sent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_before_capture_audio_sent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_audio_unit_before_capture_audio_sent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_before_recv_audio_mixed
// Il2CppName: set_pf_on_audio_unit_before_recv_audio_mixed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_before_recv_audio_mixed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_audio_unit_before_recv_audio_mixed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_before_recv_audio_mixed
// Il2CppName: get_pf_on_audio_unit_before_recv_audio_mixed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_p_vx_before_recv_audio_mixed_participant_data_t_size_t__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_before_recv_audio_mixed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_audio_unit_before_recv_audio_mixed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_before_recv_audio_rendered
// Il2CppName: set_pf_on_audio_unit_before_recv_audio_rendered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_before_recv_audio_rendered)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_audio_unit_before_recv_audio_rendered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_before_recv_audio_rendered
// Il2CppName: get_pf_on_audio_unit_before_recv_audio_rendered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char_p_q_const__char_p_short_int_int_int_int__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_before_recv_audio_rendered)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_audio_unit_before_recv_audio_rendered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_capture_device_buffer_size_intervals
// Il2CppName: set_capture_device_buffer_size_intervals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_capture_device_buffer_size_intervals)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_capture_device_buffer_size_intervals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_capture_device_buffer_size_intervals
// Il2CppName: get_capture_device_buffer_size_intervals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_capture_device_buffer_size_intervals)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_capture_device_buffer_size_intervals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_render_device_buffer_size_intervals
// Il2CppName: set_render_device_buffer_size_intervals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_render_device_buffer_size_intervals)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_render_device_buffer_size_intervals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_render_device_buffer_size_intervals
// Il2CppName: get_render_device_buffer_size_intervals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_render_device_buffer_size_intervals)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_render_device_buffer_size_intervals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_disable_audio_ducking
// Il2CppName: set_disable_audio_ducking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_disable_audio_ducking)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_disable_audio_ducking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_disable_audio_ducking
// Il2CppName: get_disable_audio_ducking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_disable_audio_ducking)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_disable_audio_ducking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_use_access_tokens
// Il2CppName: set_use_access_tokens
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_use_access_tokens)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_use_access_tokens", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_use_access_tokens
// Il2CppName: get_use_access_tokens
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_use_access_tokens)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_use_access_tokens", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_enable_multiparty_text
// Il2CppName: set_enable_multiparty_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_enable_multiparty_text)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_enable_multiparty_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_enable_multiparty_text
// Il2CppName: get_enable_multiparty_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_enable_multiparty_text)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_enable_multiparty_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_enable_dtx
// Il2CppName: set_enable_dtx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_enable_dtx)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_enable_dtx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_enable_dtx
// Il2CppName: get_enable_dtx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_enable_dtx)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_enable_dtx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_default_codecs_mask
// Il2CppName: set_default_codecs_mask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(uint)>(&GlobalNamespace::vx_sdk_config_t::set_default_codecs_mask)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_default_codecs_mask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_default_codecs_mask
// Il2CppName: get_default_codecs_mask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_default_codecs_mask)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_default_codecs_mask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_before_udp_frame_transmitted
// Il2CppName: set_pf_on_before_udp_frame_transmitted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_before_udp_frame_transmitted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_before_udp_frame_transmitted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_before_udp_frame_transmitted
// Il2CppName: get_pf_on_before_udp_frame_transmitted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_p_void_p_int_p_p_void_p_int__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_before_udp_frame_transmitted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_before_udp_frame_transmitted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_after_udp_frame_transmitted
// Il2CppName: set_pf_on_after_udp_frame_transmitted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_after_udp_frame_transmitted)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_after_udp_frame_transmitted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_after_udp_frame_transmitted
// Il2CppName: get_pf_on_after_udp_frame_transmitted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_enum_vx_udp_frame_type_p_void_int_p_void_int_p_void_int_int__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_after_udp_frame_transmitted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_after_udp_frame_transmitted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_enable_fast_network_change_detection
// Il2CppName: set_enable_fast_network_change_detection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_enable_fast_network_change_detection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_enable_fast_network_change_detection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_enable_fast_network_change_detection
// Il2CppName: get_enable_fast_network_change_detection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_enable_fast_network_change_detection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_enable_fast_network_change_detection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_use_os_proxy_settings
// Il2CppName: set_use_os_proxy_settings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_use_os_proxy_settings)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_use_os_proxy_settings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_use_os_proxy_settings
// Il2CppName: get_use_os_proxy_settings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_use_os_proxy_settings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_use_os_proxy_settings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_enable_persistent_http
// Il2CppName: set_enable_persistent_http
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_enable_persistent_http)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_enable_persistent_http", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_enable_persistent_http
// Il2CppName: get_enable_persistent_http
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_enable_persistent_http)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_enable_persistent_http", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_preferred_sip_port
// Il2CppName: set_preferred_sip_port
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_preferred_sip_port)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_preferred_sip_port", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_preferred_sip_port
// Il2CppName: get_preferred_sip_port
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_preferred_sip_port)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_preferred_sip_port", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_default_render_to_receiver
// Il2CppName: set_default_render_to_receiver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_default_render_to_receiver)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_default_render_to_receiver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_default_render_to_receiver
// Il2CppName: get_default_render_to_receiver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_default_render_to_receiver)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_default_render_to_receiver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_mic_makeup_gain
// Il2CppName: set_mic_makeup_gain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(float)>(&GlobalNamespace::vx_sdk_config_t::set_mic_makeup_gain)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_mic_makeup_gain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_mic_makeup_gain
// Il2CppName: get_mic_makeup_gain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_mic_makeup_gain)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_mic_makeup_gain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_thread_created
// Il2CppName: set_pf_on_thread_created
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_thread_created)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void_p_q_const__char__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_thread_created", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_thread_created
// Il2CppName: get_pf_on_thread_created
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void_p_q_const__char__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_thread_created)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_thread_created", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_thread_exit
// Il2CppName: set_pf_on_thread_exit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_p_void__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_thread_exit)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_p_void__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_thread_exit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_thread_exit
// Il2CppName: get_pf_on_thread_exit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_p_void__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_thread_exit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_thread_exit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_request_permission_for_network
// Il2CppName: set_pf_request_permission_for_network
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_void__int*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_request_permission_for_network)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_void__int")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_request_permission_for_network", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_request_permission_for_network
// Il2CppName: get_pf_request_permission_for_network
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_void__int* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_request_permission_for_network)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_request_permission_for_network", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_dynamic_voice_processing_switching
// Il2CppName: set_dynamic_voice_processing_switching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_dynamic_voice_processing_switching)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_dynamic_voice_processing_switching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_dynamic_voice_processing_switching
// Il2CppName: get_dynamic_voice_processing_switching
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_dynamic_voice_processing_switching)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_dynamic_voice_processing_switching", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_capture_device_status_changed
// Il2CppName: set_pf_on_audio_unit_capture_device_status_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_int__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_audio_unit_capture_device_status_changed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_int__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_audio_unit_capture_device_status_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_capture_device_status_changed
// Il2CppName: get_pf_on_audio_unit_capture_device_status_changed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_int__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_audio_unit_capture_device_status_changed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_audio_unit_capture_device_status_changed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_never_rtp_timeout_ms
// Il2CppName: set_never_rtp_timeout_ms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_never_rtp_timeout_ms)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_never_rtp_timeout_ms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_never_rtp_timeout_ms
// Il2CppName: get_never_rtp_timeout_ms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_never_rtp_timeout_ms)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_never_rtp_timeout_ms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_lost_rtp_timeout_ms
// Il2CppName: set_lost_rtp_timeout_ms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(int)>(&GlobalNamespace::vx_sdk_config_t::set_lost_rtp_timeout_ms)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_lost_rtp_timeout_ms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_lost_rtp_timeout_ms
// Il2CppName: get_lost_rtp_timeout_ms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_lost_rtp_timeout_ms)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_lost_rtp_timeout_ms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::set_pf_on_assert
// Il2CppName: set_pf_on_assert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)(::GlobalNamespace::SWIGTYPE_p_f_int__void*)>(&GlobalNamespace::vx_sdk_config_t::set_pf_on_assert)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("", "SWIGTYPE_p_f_int__void")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "set_pf_on_assert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::get_pf_on_assert
// Il2CppName: get_pf_on_assert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::SWIGTYPE_p_f_int__void* (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::get_pf_on_assert)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "get_pf_on_assert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlobalNamespace::vx_sdk_config_t::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::vx_sdk_config_t::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::vx_sdk_config_t::*)()>(&GlobalNamespace::vx_sdk_config_t::Finalize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::vx_sdk_config_t*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
