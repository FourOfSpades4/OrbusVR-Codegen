// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: IPlayerClass
  class IPlayerClass;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::IPlayerClass);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::IPlayerClass*, "", "IPlayerClass");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: IPlayerClass
  // [TokenAttribute] Offset: FFFFFFFF
  class IPlayerClass {
    public:
    // public UnityEngine.GameObject GetWeaponObject()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::GameObject* GetWeaponObject();
    // public UnityEngine.GameObject GetWeaponSkin()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::UnityEngine::GameObject* GetWeaponSkin();
    // public System.Void ToggleAdjustWeapon()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ToggleAdjustWeapon();
    // public System.Void WeaponAdjusted()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void WeaponAdjusted();
    // public System.Void ClassDisabled()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClassDisabled();
    // public System.Void ClassEnabled()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void ClassEnabled();
  }; // IPlayerClass
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::IPlayerClass::GetWeaponObject
// Il2CppName: GetWeaponObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (GlobalNamespace::IPlayerClass::*)()>(&GlobalNamespace::IPlayerClass::GetWeaponObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPlayerClass*), "GetWeaponObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IPlayerClass::GetWeaponSkin
// Il2CppName: GetWeaponSkin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (GlobalNamespace::IPlayerClass::*)()>(&GlobalNamespace::IPlayerClass::GetWeaponSkin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPlayerClass*), "GetWeaponSkin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IPlayerClass::ToggleAdjustWeapon
// Il2CppName: ToggleAdjustWeapon
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IPlayerClass::*)()>(&GlobalNamespace::IPlayerClass::ToggleAdjustWeapon)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPlayerClass*), "ToggleAdjustWeapon", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IPlayerClass::WeaponAdjusted
// Il2CppName: WeaponAdjusted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IPlayerClass::*)()>(&GlobalNamespace::IPlayerClass::WeaponAdjusted)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPlayerClass*), "WeaponAdjusted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IPlayerClass::ClassDisabled
// Il2CppName: ClassDisabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IPlayerClass::*)()>(&GlobalNamespace::IPlayerClass::ClassDisabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPlayerClass*), "ClassDisabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::IPlayerClass::ClassEnabled
// Il2CppName: ClassEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::IPlayerClass::*)()>(&GlobalNamespace::IPlayerClass::ClassEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::IPlayerClass*), "ClassEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
