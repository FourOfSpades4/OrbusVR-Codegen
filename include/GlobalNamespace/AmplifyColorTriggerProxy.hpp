// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: AmplifyColorTriggerProxyBase
#include "GlobalNamespace/AmplifyColorTriggerProxyBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: SphereCollider
  class SphereCollider;
  // Forward declaring type: Rigidbody
  class Rigidbody;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: AmplifyColorTriggerProxy
  class AmplifyColorTriggerProxy;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::AmplifyColorTriggerProxy);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::AmplifyColorTriggerProxy*, "", "AmplifyColorTriggerProxy");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyColorTriggerProxy
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: ACCB40
  // [RequireComponent] Offset: ACCB40
  // [RequireComponent] Offset: ACCB40
  class AmplifyColorTriggerProxy : public ::GlobalNamespace::AmplifyColorTriggerProxyBase {
    public:
    public:
    // private UnityEngine.SphereCollider sphereCollider
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::SphereCollider* sphereCollider;
    // Field size check
    static_assert(sizeof(::UnityEngine::SphereCollider*) == 0x8);
    // private UnityEngine.Rigidbody rigidBody
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::Rigidbody* rigidBody;
    // Field size check
    static_assert(sizeof(::UnityEngine::Rigidbody*) == 0x8);
    public:
    // Get instance field reference: private UnityEngine.SphereCollider sphereCollider
    [[deprecated("Use field access instead!")]] ::UnityEngine::SphereCollider*& dyn_sphereCollider();
    // Get instance field reference: private UnityEngine.Rigidbody rigidBody
    [[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& dyn_rigidBody();
    // private System.Void Start()
    // Offset: 0xF08A00
    void Start();
    // private System.Void LateUpdate()
    // Offset: 0xF08AE8
    void LateUpdate();
    // public System.Void .ctor()
    // Offset: 0xF08BD4
    // Implemented from: AmplifyColorTriggerProxyBase
    // Base method: System.Void AmplifyColorTriggerProxyBase::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AmplifyColorTriggerProxy* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AmplifyColorTriggerProxy::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AmplifyColorTriggerProxy*, creationType>()));
    }
  }; // AmplifyColorTriggerProxy
  #pragma pack(pop)
  static check_size<sizeof(AmplifyColorTriggerProxy), 48 + sizeof(::UnityEngine::Rigidbody*)> __GlobalNamespace_AmplifyColorTriggerProxySizeCheck;
  static_assert(sizeof(AmplifyColorTriggerProxy) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::AmplifyColorTriggerProxy::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AmplifyColorTriggerProxy::*)()>(&GlobalNamespace::AmplifyColorTriggerProxy::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AmplifyColorTriggerProxy*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AmplifyColorTriggerProxy::LateUpdate
// Il2CppName: LateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::AmplifyColorTriggerProxy::*)()>(&GlobalNamespace::AmplifyColorTriggerProxy::LateUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::AmplifyColorTriggerProxy*), "LateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::AmplifyColorTriggerProxy::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
