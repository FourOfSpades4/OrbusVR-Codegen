// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: SuperTextMesh
#include "GlobalNamespace/SuperTextMesh.hpp"
// Including type: STMSoundClipData
#include "GlobalNamespace/STMSoundClipData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SuperTextMesh::$$c__DisplayClass235_0);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SuperTextMesh::$$c__DisplayClass235_0*, "", "SuperTextMesh/<>c__DisplayClass235_0");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: SuperTextMesh/<>c__DisplayClass235_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ACDC18
  class SuperTextMesh::$$c__DisplayClass235_0 : public ::Il2CppObject {
    public:
    public:
    // public System.String nameToSearch
    // Size: 0x8
    // Offset: 0x10
    ::StringW nameToSearch;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return nameToSearch;
    }
    // Get instance field reference: public System.String nameToSearch
    [[deprecated("Use field access instead!")]] ::StringW& dyn_nameToSearch();
    // public System.Void .ctor()
    // Offset: 0x1037B70
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SuperTextMesh::$$c__DisplayClass235_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SuperTextMesh::$$c__DisplayClass235_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SuperTextMesh::$$c__DisplayClass235_0*, creationType>()));
    }
    // System.Boolean <PlaySound>b__0(STMSoundClipData/AutoClip x)
    // Offset: 0x1037B78
    bool $PlaySound$b__0(::GlobalNamespace::STMSoundClipData::AutoClip* x);
  }; // SuperTextMesh/<>c__DisplayClass235_0
  #pragma pack(pop)
  static check_size<sizeof(SuperTextMesh::$$c__DisplayClass235_0), 16 + sizeof(::StringW)> __GlobalNamespace_SuperTextMesh_$$c__DisplayClass235_0SizeCheck;
  static_assert(sizeof(SuperTextMesh::$$c__DisplayClass235_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SuperTextMesh::$$c__DisplayClass235_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: GlobalNamespace::SuperTextMesh::$$c__DisplayClass235_0::$PlaySound$b__0
// Il2CppName: <PlaySound>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlobalNamespace::SuperTextMesh::$$c__DisplayClass235_0::*)(::GlobalNamespace::STMSoundClipData::AutoClip*)>(&GlobalNamespace::SuperTextMesh::$$c__DisplayClass235_0::$PlaySound$b__0)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("", "STMSoundClipData/AutoClip")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SuperTextMesh::$$c__DisplayClass235_0*), "<PlaySound>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
