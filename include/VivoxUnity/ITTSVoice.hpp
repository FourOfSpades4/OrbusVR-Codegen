// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.IKeyedItemNotifyPropertyChanged`1
#include "VivoxUnity/IKeyedItemNotifyPropertyChanged_1.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: ITTSVoice
  class ITTSVoice;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::ITTSVoice);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::ITTSVoice*, "VivoxUnity", "ITTSVoice");
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.ITTSVoice
  // [TokenAttribute] Offset: FFFFFFFF
  class ITTSVoice/*, public ::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<uint>*/ {
    public:
    // Creating interface conversion operator: operator ::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<uint>
    operator ::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<uint>() noexcept {
      return *reinterpret_cast<::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<uint>*>(this);
    }
    // public System.String get_Name()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_Name();
  }; // VivoxUnity.ITTSVoice
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::ITTSVoice::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::ITTSVoice::*)()>(&VivoxUnity::ITTSVoice::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ITTSVoice*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
