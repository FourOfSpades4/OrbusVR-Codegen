// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: TTSMessage
  class TTSMessage;
}
// Completed forward declares
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: ITTSMessageQueueEventArgs
  class ITTSMessageQueueEventArgs;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::ITTSMessageQueueEventArgs);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::ITTSMessageQueueEventArgs*, "VivoxUnity", "ITTSMessageQueueEventArgs");
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.ITTSMessageQueueEventArgs
  // [TokenAttribute] Offset: FFFFFFFF
  class ITTSMessageQueueEventArgs : public ::System::EventArgs {
    public:
    public:
    // [CompilerGeneratedAttribute] Offset: 0xABDC48
    // private readonly VivoxUnity.TTSMessage <Message>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::VivoxUnity::TTSMessage* Message;
    // Field size check
    static_assert(sizeof(::VivoxUnity::TTSMessage*) == 0x8);
    public:
    // Creating conversion operator: operator ::VivoxUnity::TTSMessage*
    constexpr operator ::VivoxUnity::TTSMessage*() const noexcept {
      return Message;
    }
    // Get instance field reference: private readonly VivoxUnity.TTSMessage <Message>k__BackingField
    [[deprecated("Use field access instead!")]] ::VivoxUnity::TTSMessage*& dyn_$Message$k__BackingField();
    // public System.Void .ctor(VivoxUnity.TTSMessage message)
    // Offset: 0x14B97E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ITTSMessageQueueEventArgs* New_ctor(::VivoxUnity::TTSMessage* message) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::ITTSMessageQueueEventArgs::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ITTSMessageQueueEventArgs*, creationType>(message)));
    }
    // public VivoxUnity.TTSMessage get_Message()
    // Offset: 0x14B9860
    ::VivoxUnity::TTSMessage* get_Message();
  }; // VivoxUnity.ITTSMessageQueueEventArgs
  #pragma pack(pop)
  static check_size<sizeof(ITTSMessageQueueEventArgs), 16 + sizeof(::VivoxUnity::TTSMessage*)> __VivoxUnity_ITTSMessageQueueEventArgsSizeCheck;
  static_assert(sizeof(ITTSMessageQueueEventArgs) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::ITTSMessageQueueEventArgs::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VivoxUnity::ITTSMessageQueueEventArgs::get_Message
// Il2CppName: get_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::TTSMessage* (VivoxUnity::ITTSMessageQueueEventArgs::*)()>(&VivoxUnity::ITTSMessageQueueEventArgs::get_Message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ITTSMessageQueueEventArgs*), "get_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
