// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.Client
#include "VivoxUnity/Client.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VivoxUnity::Private
namespace VivoxUnity::Private {
  // Forward declaring type: LoginSession
  class LoginSession;
}
// Forward declaring namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: AccountId
  class AccountId;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyChangedEventArgs
  class PropertyChangedEventArgs;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::Client::$$c__DisplayClass18_0);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::Client::$$c__DisplayClass18_0*, "VivoxUnity", "Client/<>c__DisplayClass18_0");
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Size: 0x28
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.Client/<>c__DisplayClass18_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ABD788
  class Client::$$c__DisplayClass18_0 : public ::Il2CppObject {
    public:
    public:
    // public VivoxUnity.Private.LoginSession loginSession
    // Size: 0x8
    // Offset: 0x10
    ::VivoxUnity::Private::LoginSession* loginSession;
    // Field size check
    static_assert(sizeof(::VivoxUnity::Private::LoginSession*) == 0x8);
    // public VivoxUnity.Client <>4__this
    // Size: 0x8
    // Offset: 0x18
    ::VivoxUnity::Client* $$4__this;
    // Field size check
    static_assert(sizeof(::VivoxUnity::Client*) == 0x8);
    // public VivoxUnity.AccountId accountId
    // Size: 0x8
    // Offset: 0x20
    ::VivoxUnity::AccountId* accountId;
    // Field size check
    static_assert(sizeof(::VivoxUnity::AccountId*) == 0x8);
    public:
    // Get instance field reference: public VivoxUnity.Private.LoginSession loginSession
    [[deprecated("Use field access instead!")]] ::VivoxUnity::Private::LoginSession*& dyn_loginSession();
    // Get instance field reference: public VivoxUnity.Client <>4__this
    [[deprecated("Use field access instead!")]] ::VivoxUnity::Client*& dyn_$$4__this();
    // Get instance field reference: public VivoxUnity.AccountId accountId
    [[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& dyn_accountId();
    // public System.Void .ctor()
    // Offset: 0x14B7AD0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Client::$$c__DisplayClass18_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Client::$$c__DisplayClass18_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Client::$$c__DisplayClass18_0*, creationType>()));
    }
    // System.Void <GetLoginSession>b__0(System.Object sender, System.ComponentModel.PropertyChangedEventArgs args)
    // Offset: 0x14B8F30
    void $GetLoginSession$b__0(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangedEventArgs* args);
  }; // VivoxUnity.Client/<>c__DisplayClass18_0
  #pragma pack(pop)
  static check_size<sizeof(Client::$$c__DisplayClass18_0), 32 + sizeof(::VivoxUnity::AccountId*)> __VivoxUnity_Client_$$c__DisplayClass18_0SizeCheck;
  static_assert(sizeof(Client::$$c__DisplayClass18_0) == 0x28);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::Client::$$c__DisplayClass18_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VivoxUnity::Client::$$c__DisplayClass18_0::$GetLoginSession$b__0
// Il2CppName: <GetLoginSession>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Client::$$c__DisplayClass18_0::*)(::Il2CppObject*, ::System::ComponentModel::PropertyChangedEventArgs*)>(&VivoxUnity::Client::$$c__DisplayClass18_0::$GetLoginSession$b__0)> {
  static const MethodInfo* get() {
    static auto* sender = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* args = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyChangedEventArgs")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Client::$$c__DisplayClass18_0*), "<GetLoginSession>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sender, args});
  }
};
