// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: vx_message_base_t
  class vx_message_base_t;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
}
// Completed forward declares
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: Helper
  class Helper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::Helper);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::Helper*, "VivoxUnity", "Helper");
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.Helper
  // [TokenAttribute] Offset: FFFFFFFF
  class Helper : public ::Il2CppObject {
    public:
    // Get static field: static public System.UInt64 serialNumber
    static uint64_t _get_serialNumber();
    // Set static field: static public System.UInt64 serialNumber
    static void _set_serialNumber(uint64_t value);
    // Get static field: static private readonly System.DateTime unixEpoch
    static ::System::DateTime _get_unixEpoch();
    // Set static field: static private readonly System.DateTime unixEpoch
    static void _set_unixEpoch(::System::DateTime value);
    // static public vx_message_base_t NextMessage()
    // Offset: 0x14B9028
    static ::GlobalNamespace::vx_message_base_t* NextMessage();
    // static private System.Void CheckInitialized()
    // Offset: 0x14B9088
    static void CheckInitialized();
    // static public System.String GetLoginToken(System.String issuer, System.TimeSpan expiration, System.String userUri, System.String key)
    // Offset: 0x14B912C
    static ::StringW GetLoginToken(::StringW issuer, ::System::TimeSpan expiration, ::StringW userUri, ::StringW key);
    // static public System.String GetJoinToken(System.String issuer, System.TimeSpan expiration, System.String userUri, System.String conferenceUri, System.String key)
    // Offset: 0x14B9350
    static ::StringW GetJoinToken(::StringW issuer, ::System::TimeSpan expiration, ::StringW userUri, ::StringW conferenceUri, ::StringW key);
    // static public System.String GetMuteForAllToken(System.String issuer, System.TimeSpan expiration, System.String fromUserUri, System.String userUri, System.String conferenceUri, System.String key)
    // Offset: 0x14B946C
    static ::StringW GetMuteForAllToken(::StringW issuer, ::System::TimeSpan expiration, ::StringW fromUserUri, ::StringW userUri, ::StringW conferenceUri, ::StringW key);
    // static public System.String GetTranscriptionToken(System.String issuer, System.TimeSpan expiration, System.String userUri, System.String conferenceUri, System.String key)
    // Offset: 0x14B9594
    static ::StringW GetTranscriptionToken(::StringW issuer, ::System::TimeSpan expiration, ::StringW userUri, ::StringW conferenceUri, ::StringW key);
    // static public System.String GetRandomUserId(System.String prefix)
    // Offset: 0x14B8070
    static ::StringW GetRandomUserId(::StringW prefix);
    // static public System.String GetRandomUserIdEx(System.String prefix, System.String issuer)
    // Offset: 0x14B96AC
    static ::StringW GetRandomUserIdEx(::StringW prefix, ::StringW issuer);
    // static public System.String GetRandomChannelUri(System.String prefix, System.String realm)
    // Offset: 0x14B8170
    static ::StringW GetRandomChannelUri(::StringW prefix, ::StringW realm);
    // static private System.Int32 SecondsSinceUnixEpochPlusDuration(System.Nullable`1<System.TimeSpan> duration)
    // Offset: 0x14B9244
    static int SecondsSinceUnixEpochPlusDuration(::System::Nullable_1<::System::TimeSpan> duration);
    // public System.Void .ctor()
    // Offset: 0x14B9748
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Helper* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Helper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Helper*, creationType>()));
    }
    // static private System.Void .cctor()
    // Offset: 0x14B9750
    static void _cctor();
  }; // VivoxUnity.Helper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::Helper::NextMessage
// Il2CppName: NextMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::vx_message_base_t* (*)()>(&VivoxUnity::Helper::NextMessage)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Helper*), "NextMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Helper::CheckInitialized
// Il2CppName: CheckInitialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VivoxUnity::Helper::CheckInitialized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Helper*), "CheckInitialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Helper::GetLoginToken
// Il2CppName: GetLoginToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::System::TimeSpan, ::StringW, ::StringW)>(&VivoxUnity::Helper::GetLoginToken)> {
  static const MethodInfo* get() {
    static auto* issuer = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expiration = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->byval_arg;
    static auto* userUri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Helper*), "GetLoginToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{issuer, expiration, userUri, key});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Helper::GetJoinToken
// Il2CppName: GetJoinToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::System::TimeSpan, ::StringW, ::StringW, ::StringW)>(&VivoxUnity::Helper::GetJoinToken)> {
  static const MethodInfo* get() {
    static auto* issuer = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expiration = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->byval_arg;
    static auto* userUri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* conferenceUri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Helper*), "GetJoinToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{issuer, expiration, userUri, conferenceUri, key});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Helper::GetMuteForAllToken
// Il2CppName: GetMuteForAllToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::System::TimeSpan, ::StringW, ::StringW, ::StringW, ::StringW)>(&VivoxUnity::Helper::GetMuteForAllToken)> {
  static const MethodInfo* get() {
    static auto* issuer = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expiration = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->byval_arg;
    static auto* fromUserUri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userUri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* conferenceUri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Helper*), "GetMuteForAllToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{issuer, expiration, fromUserUri, userUri, conferenceUri, key});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Helper::GetTranscriptionToken
// Il2CppName: GetTranscriptionToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::System::TimeSpan, ::StringW, ::StringW, ::StringW)>(&VivoxUnity::Helper::GetTranscriptionToken)> {
  static const MethodInfo* get() {
    static auto* issuer = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expiration = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->byval_arg;
    static auto* userUri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* conferenceUri = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Helper*), "GetTranscriptionToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{issuer, expiration, userUri, conferenceUri, key});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Helper::GetRandomUserId
// Il2CppName: GetRandomUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&VivoxUnity::Helper::GetRandomUserId)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Helper*), "GetRandomUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Helper::GetRandomUserIdEx
// Il2CppName: GetRandomUserIdEx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::StringW)>(&VivoxUnity::Helper::GetRandomUserIdEx)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* issuer = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Helper*), "GetRandomUserIdEx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix, issuer});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Helper::GetRandomChannelUri
// Il2CppName: GetRandomChannelUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, ::StringW)>(&VivoxUnity::Helper::GetRandomChannelUri)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* realm = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Helper*), "GetRandomChannelUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix, realm});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Helper::SecondsSinceUnixEpochPlusDuration
// Il2CppName: SecondsSinceUnixEpochPlusDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::Nullable_1<::System::TimeSpan>)>(&VivoxUnity::Helper::SecondsSinceUnixEpochPlusDuration)> {
  static const MethodInfo* get() {
    static auto* duration = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "TimeSpan")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Helper*), "SecondsSinceUnixEpochPlusDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{duration});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Helper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VivoxUnity::Helper::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VivoxUnity::Helper::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Helper*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
