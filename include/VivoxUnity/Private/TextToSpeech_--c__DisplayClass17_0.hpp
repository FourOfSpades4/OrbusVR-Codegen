// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.Private.TextToSpeech
#include "VivoxUnity/Private/TextToSpeech.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: ITTSVoice
  class ITTSVoice;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0*, "VivoxUnity.Private", "TextToSpeech/<>c__DisplayClass17_0");
// Type namespace: VivoxUnity.Private
namespace VivoxUnity::Private {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.Private.TextToSpeech/<>c__DisplayClass17_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ABDB28
  class TextToSpeech::$$c__DisplayClass17_0 : public ::Il2CppObject {
    public:
    public:
    // public VivoxUnity.ITTSVoice value
    // Size: 0x8
    // Offset: 0x10
    ::VivoxUnity::ITTSVoice* value;
    // Field size check
    static_assert(sizeof(::VivoxUnity::ITTSVoice*) == 0x8);
    public:
    // Creating conversion operator: operator ::VivoxUnity::ITTSVoice*
    constexpr operator ::VivoxUnity::ITTSVoice*() const noexcept {
      return value;
    }
    // Get instance field reference: public VivoxUnity.ITTSVoice value
    [[deprecated("Use field access instead!")]] ::VivoxUnity::ITTSVoice*& dyn_value();
    // public System.Void .ctor()
    // Offset: 0x12D7D4C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextToSpeech::$$c__DisplayClass17_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextToSpeech::$$c__DisplayClass17_0*, creationType>()));
    }
    // System.Boolean <set_CurrentVoice>b__0(VivoxUnity.ITTSVoice v)
    // Offset: 0x12D8598
    bool $set_CurrentVoice$b__0(::VivoxUnity::ITTSVoice* v);
  }; // VivoxUnity.Private.TextToSpeech/<>c__DisplayClass17_0
  #pragma pack(pop)
  static check_size<sizeof(TextToSpeech::$$c__DisplayClass17_0), 16 + sizeof(::VivoxUnity::ITTSVoice*)> __VivoxUnity_Private_TextToSpeech_$$c__DisplayClass17_0SizeCheck;
  static_assert(sizeof(TextToSpeech::$$c__DisplayClass17_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0::$set_CurrentVoice$b__0
// Il2CppName: <set_CurrentVoice>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0::*)(::VivoxUnity::ITTSVoice*)>(&VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0::$set_CurrentVoice$b__0)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("VivoxUnity", "ITTSVoice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TextToSpeech::$$c__DisplayClass17_0*), "<set_CurrentVoice>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v});
  }
};
