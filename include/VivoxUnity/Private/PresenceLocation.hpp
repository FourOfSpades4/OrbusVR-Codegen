// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.IPresenceLocation
#include "VivoxUnity/IPresenceLocation.hpp"
// Including type: VivoxUnity.Presence
#include "VivoxUnity/Presence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyChangedEventHandler
  class PropertyChangedEventHandler;
}
// Forward declaring namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: IPresenceSubscription
  class IPresenceSubscription;
}
// Completed forward declares
// Type namespace: VivoxUnity.Private
namespace VivoxUnity::Private {
  // Forward declaring type: PresenceLocation
  class PresenceLocation;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::Private::PresenceLocation);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::Private::PresenceLocation*, "VivoxUnity.Private", "PresenceLocation");
// Type namespace: VivoxUnity.Private
namespace VivoxUnity::Private {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.Private.PresenceLocation
  // [TokenAttribute] Offset: FFFFFFFF
  class PresenceLocation : public ::Il2CppObject/*, public ::VivoxUnity::IPresenceLocation*/ {
    public:
    public:
    // private VivoxUnity.Presence _currentPresence
    // Size: 0x10
    // Offset: 0x10
    ::VivoxUnity::Presence currentPresence;
    // Field size check
    static_assert(sizeof(::VivoxUnity::Presence) == 0x10);
    // private System.String _location
    // Size: 0x8
    // Offset: 0x20
    ::StringW location;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABE078
    // private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
    // Size: 0x8
    // Offset: 0x28
    ::System::ComponentModel::PropertyChangedEventHandler* PropertyChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyChangedEventHandler*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABE088
    // private readonly System.String <Key>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::StringW Key;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABE098
    // private VivoxUnity.IPresenceSubscription <Subscription>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::VivoxUnity::IPresenceSubscription* Subscription;
    // Field size check
    static_assert(sizeof(::VivoxUnity::IPresenceSubscription*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::VivoxUnity::IPresenceLocation
    operator ::VivoxUnity::IPresenceLocation() noexcept {
      return *reinterpret_cast<::VivoxUnity::IPresenceLocation*>(this);
    }
    // Get instance field reference: private VivoxUnity.Presence _currentPresence
    [[deprecated("Use field access instead!")]] ::VivoxUnity::Presence& dyn__currentPresence();
    // Get instance field reference: private System.String _location
    [[deprecated("Use field access instead!")]] ::StringW& dyn__location();
    // Get instance field reference: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& dyn_PropertyChanged();
    // Get instance field reference: private readonly System.String <Key>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Key$k__BackingField();
    // Get instance field reference: private VivoxUnity.IPresenceSubscription <Subscription>k__BackingField
    [[deprecated("Use field access instead!")]] ::VivoxUnity::IPresenceSubscription*& dyn_$Subscription$k__BackingField();
    // public System.Void add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler value)
    // Offset: 0x12D460C
    void add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value);
    // public System.Void remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler value)
    // Offset: 0x12D46F8
    void remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value);
    // public System.Void .ctor(System.String key)
    // Offset: 0x12D47E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PresenceLocation* New_ctor(::StringW key) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::PresenceLocation::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PresenceLocation*, creationType>(key)));
    }
    // public System.String get_Key()
    // Offset: 0x12D4814
    ::StringW get_Key();
    // public VivoxUnity.Presence get_CurrentPresence()
    // Offset: 0x12D481C
    ::VivoxUnity::Presence get_CurrentPresence();
    // public System.Void set_CurrentPresence(VivoxUnity.Presence value)
    // Offset: 0x12D4828
    void set_CurrentPresence(::VivoxUnity::Presence value);
    // public System.String get_Location()
    // Offset: 0x12D48F8
    ::StringW get_Location();
    // public System.Void set_Location(System.String value)
    // Offset: 0x12D4900
    void set_Location(::StringW value);
    // public VivoxUnity.IPresenceSubscription get_Subscription()
    // Offset: 0x12D49B4
    ::VivoxUnity::IPresenceSubscription* get_Subscription();
    // public System.Void set_Subscription(VivoxUnity.IPresenceSubscription value)
    // Offset: 0x12D49BC
    void set_Subscription(::VivoxUnity::IPresenceSubscription* value);
    // public System.String get_LocationId()
    // Offset: 0x12D49C4
    ::StringW get_LocationId();
  }; // VivoxUnity.Private.PresenceLocation
  #pragma pack(pop)
  static check_size<sizeof(PresenceLocation), 56 + sizeof(::VivoxUnity::IPresenceSubscription*)> __VivoxUnity_Private_PresenceLocationSizeCheck;
  static_assert(sizeof(PresenceLocation) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::Private::PresenceLocation::add_PropertyChanged
// Il2CppName: add_PropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::PresenceLocation::*)(::System::ComponentModel::PropertyChangedEventHandler*)>(&VivoxUnity::Private::PresenceLocation::add_PropertyChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::PresenceLocation*), "add_PropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::PresenceLocation::remove_PropertyChanged
// Il2CppName: remove_PropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::PresenceLocation::*)(::System::ComponentModel::PropertyChangedEventHandler*)>(&VivoxUnity::Private::PresenceLocation::remove_PropertyChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::PresenceLocation*), "remove_PropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::PresenceLocation::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VivoxUnity::Private::PresenceLocation::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::Private::PresenceLocation::*)()>(&VivoxUnity::Private::PresenceLocation::get_Key)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::PresenceLocation*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::PresenceLocation::get_CurrentPresence
// Il2CppName: get_CurrentPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::Presence (VivoxUnity::Private::PresenceLocation::*)()>(&VivoxUnity::Private::PresenceLocation::get_CurrentPresence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::PresenceLocation*), "get_CurrentPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::PresenceLocation::set_CurrentPresence
// Il2CppName: set_CurrentPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::PresenceLocation::*)(::VivoxUnity::Presence)>(&VivoxUnity::Private::PresenceLocation::set_CurrentPresence)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VivoxUnity", "Presence")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::PresenceLocation*), "set_CurrentPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::PresenceLocation::get_Location
// Il2CppName: get_Location
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::Private::PresenceLocation::*)()>(&VivoxUnity::Private::PresenceLocation::get_Location)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::PresenceLocation*), "get_Location", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::PresenceLocation::set_Location
// Il2CppName: set_Location
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::PresenceLocation::*)(::StringW)>(&VivoxUnity::Private::PresenceLocation::set_Location)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::PresenceLocation*), "set_Location", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::PresenceLocation::get_Subscription
// Il2CppName: get_Subscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IPresenceSubscription* (VivoxUnity::Private::PresenceLocation::*)()>(&VivoxUnity::Private::PresenceLocation::get_Subscription)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::PresenceLocation*), "get_Subscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::PresenceLocation::set_Subscription
// Il2CppName: set_Subscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::PresenceLocation::*)(::VivoxUnity::IPresenceSubscription*)>(&VivoxUnity::Private::PresenceLocation::set_Subscription)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VivoxUnity", "IPresenceSubscription")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::PresenceLocation*), "set_Subscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::PresenceLocation::get_LocationId
// Il2CppName: get_LocationId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::Private::PresenceLocation::*)()>(&VivoxUnity::Private::PresenceLocation::get_LocationId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::PresenceLocation*), "get_LocationId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
