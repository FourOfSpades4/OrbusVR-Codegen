// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.Private.ChannelSession
#include "VivoxUnity/Private/ChannelSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_0);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_0*, "VivoxUnity.Private", "ChannelSession/<>c__DisplayClass58_0");
// Type namespace: VivoxUnity.Private
namespace VivoxUnity::Private {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.Private.ChannelSession/<>c__DisplayClass58_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ABD918
  class ChannelSession::$$c__DisplayClass58_0 : public ::Il2CppObject {
    public:
    public:
    // public VivoxUnity.Private.ChannelSession <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::VivoxUnity::Private::ChannelSession* $$4__this;
    // Field size check
    static_assert(sizeof(::VivoxUnity::Private::ChannelSession*) == 0x8);
    // public System.Boolean value
    // Size: 0x1
    // Offset: 0x18
    bool value;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public VivoxUnity.Private.ChannelSession <>4__this
    [[deprecated("Use field access instead!")]] ::VivoxUnity::Private::ChannelSession*& dyn_$$4__this();
    // Get instance field reference: public System.Boolean value
    [[deprecated("Use field access instead!")]] bool& dyn_value();
    // public System.Void .ctor()
    // Offset: 0x14C2BE8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ChannelSession::$$c__DisplayClass58_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ChannelSession::$$c__DisplayClass58_0*, creationType>()));
    }
  }; // VivoxUnity.Private.ChannelSession/<>c__DisplayClass58_0
  #pragma pack(pop)
  static check_size<sizeof(ChannelSession::$$c__DisplayClass58_0), 24 + sizeof(bool)> __VivoxUnity_Private_ChannelSession_$$c__DisplayClass58_0SizeCheck;
  static_assert(sizeof(ChannelSession::$$c__DisplayClass58_0) == 0x19);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::Private::ChannelSession::$$c__DisplayClass58_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
