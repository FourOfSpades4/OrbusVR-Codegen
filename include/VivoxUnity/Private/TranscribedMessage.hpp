// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.ITranscribedMessage
#include "VivoxUnity/ITranscribedMessage.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Exception
  class Exception;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyChangedEventHandler
  class PropertyChangedEventHandler;
}
// Forward declaring namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: IChannelSession
  class IChannelSession;
  // Forward declaring type: AccountId
  class AccountId;
}
// Completed forward declares
// Type namespace: VivoxUnity.Private
namespace VivoxUnity::Private {
  // Forward declaring type: TranscribedMessage
  class TranscribedMessage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::Private::TranscribedMessage);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::Private::TranscribedMessage*, "VivoxUnity.Private", "TranscribedMessage");
// Type namespace: VivoxUnity.Private
namespace VivoxUnity::Private {
  // Size: 0x51
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.Private.TranscribedMessage
  // [TokenAttribute] Offset: FFFFFFFF
  class TranscribedMessage : public ::Il2CppObject/*, public ::VivoxUnity::ITranscribedMessage*/ {
    public:
    public:
    // private System.Exception _exception
    // Size: 0x8
    // Offset: 0x10
    ::System::Exception* exception;
    // Field size check
    static_assert(sizeof(::System::Exception*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABE388
    // private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
    // Size: 0x8
    // Offset: 0x18
    ::System::ComponentModel::PropertyChangedEventHandler* PropertyChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyChangedEventHandler*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABE398
    // private System.String <Key>k__BackingField
    // Size: 0x8
    // Offset: 0x20
    ::StringW Key;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABE3A8
    // private System.DateTime <ReceivedTime>k__BackingField
    // Size: 0x8
    // Offset: 0x28
    ::System::DateTime ReceivedTime;
    // Field size check
    static_assert(sizeof(::System::DateTime) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABE3B8
    // private System.String <Message>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::StringW Message;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABE3C8
    // private System.String <Language>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::StringW Language;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABE3D8
    // private VivoxUnity.IChannelSession <ChannelSession>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::VivoxUnity::IChannelSession* ChannelSession;
    // Field size check
    static_assert(sizeof(::VivoxUnity::IChannelSession*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABE3E8
    // private VivoxUnity.AccountId <Sender>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::VivoxUnity::AccountId* Sender;
    // Field size check
    static_assert(sizeof(::VivoxUnity::AccountId*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABE3F8
    // private System.Boolean <FromSelf>k__BackingField
    // Size: 0x1
    // Offset: 0x50
    bool FromSelf;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Creating interface conversion operator: operator ::VivoxUnity::ITranscribedMessage
    operator ::VivoxUnity::ITranscribedMessage() noexcept {
      return *reinterpret_cast<::VivoxUnity::ITranscribedMessage*>(this);
    }
    // Get instance field reference: private System.Exception _exception
    [[deprecated("Use field access instead!")]] ::System::Exception*& dyn__exception();
    // Get instance field reference: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& dyn_PropertyChanged();
    // Get instance field reference: private System.String <Key>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Key$k__BackingField();
    // Get instance field reference: private System.DateTime <ReceivedTime>k__BackingField
    [[deprecated("Use field access instead!")]] ::System::DateTime& dyn_$ReceivedTime$k__BackingField();
    // Get instance field reference: private System.String <Message>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Message$k__BackingField();
    // Get instance field reference: private System.String <Language>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$Language$k__BackingField();
    // Get instance field reference: private VivoxUnity.IChannelSession <ChannelSession>k__BackingField
    [[deprecated("Use field access instead!")]] ::VivoxUnity::IChannelSession*& dyn_$ChannelSession$k__BackingField();
    // Get instance field reference: private VivoxUnity.AccountId <Sender>k__BackingField
    [[deprecated("Use field access instead!")]] ::VivoxUnity::AccountId*& dyn_$Sender$k__BackingField();
    // Get instance field reference: private System.Boolean <FromSelf>k__BackingField
    [[deprecated("Use field access instead!")]] bool& dyn_$FromSelf$k__BackingField();
    // public System.Void .ctor(VivoxUnity.AccountId sender, System.String message, System.String key, System.String language, VivoxUnity.IChannelSession channelSession, System.Boolean fromSelf, System.Nullable`1<System.DateTime> receivedTime)
    // Offset: 0x12D8750
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TranscribedMessage* New_ctor(::VivoxUnity::AccountId* sender, ::StringW message, ::StringW key, ::StringW language, ::VivoxUnity::IChannelSession* channelSession, bool fromSelf, ::System::Nullable_1<::System::DateTime> receivedTime) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TranscribedMessage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TranscribedMessage*, creationType>(sender, message, key, language, channelSession, fromSelf, receivedTime)));
    }
    // public System.Void add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler value)
    // Offset: 0x12D889C
    void add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value);
    // public System.Void remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler value)
    // Offset: 0x12D8988
    void remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value);
    // public System.Exception get_Exception()
    // Offset: 0x12D8A74
    ::System::Exception* get_Exception();
    // public System.Void set_Exception(System.Exception value)
    // Offset: 0x12D8A7C
    void set_Exception(::System::Exception* value);
    // public System.String get_Key()
    // Offset: 0x12D8B28
    ::StringW get_Key();
    // public System.Void set_Key(System.String value)
    // Offset: 0x12D8878
    void set_Key(::StringW value);
    // public System.DateTime get_ReceivedTime()
    // Offset: 0x12D8B30
    ::System::DateTime get_ReceivedTime();
    // private System.Void set_ReceivedTime(System.DateTime value)
    // Offset: 0x12D8860
    void set_ReceivedTime(::System::DateTime value);
    // public System.String get_Message()
    // Offset: 0x12D8B38
    ::StringW get_Message();
    // private System.Void set_Message(System.String value)
    // Offset: 0x12D8870
    void set_Message(::StringW value);
    // public System.String get_Language()
    // Offset: 0x12D8B40
    ::StringW get_Language();
    // private System.Void set_Language(System.String value)
    // Offset: 0x12D8880
    void set_Language(::StringW value);
    // public VivoxUnity.IChannelSession get_ChannelSession()
    // Offset: 0x12D8B48
    ::VivoxUnity::IChannelSession* get_ChannelSession();
    // private System.Void set_ChannelSession(VivoxUnity.IChannelSession value)
    // Offset: 0x12D8888
    void set_ChannelSession(::VivoxUnity::IChannelSession* value);
    // public VivoxUnity.AccountId get_Sender()
    // Offset: 0x12D8B50
    ::VivoxUnity::AccountId* get_Sender();
    // private System.Void set_Sender(VivoxUnity.AccountId value)
    // Offset: 0x12D8868
    void set_Sender(::VivoxUnity::AccountId* value);
    // public System.Boolean get_FromSelf()
    // Offset: 0x12D8B58
    bool get_FromSelf();
    // private System.Void set_FromSelf(System.Boolean value)
    // Offset: 0x12D8890
    void set_FromSelf(bool value);
  }; // VivoxUnity.Private.TranscribedMessage
  #pragma pack(pop)
  static check_size<sizeof(TranscribedMessage), 80 + sizeof(bool)> __VivoxUnity_Private_TranscribedMessageSizeCheck;
  static_assert(sizeof(TranscribedMessage) == 0x51);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::add_PropertyChanged
// Il2CppName: add_PropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::TranscribedMessage::*)(::System::ComponentModel::PropertyChangedEventHandler*)>(&VivoxUnity::Private::TranscribedMessage::add_PropertyChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "add_PropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::remove_PropertyChanged
// Il2CppName: remove_PropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::TranscribedMessage::*)(::System::ComponentModel::PropertyChangedEventHandler*)>(&VivoxUnity::Private::TranscribedMessage::remove_PropertyChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "remove_PropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::get_Exception
// Il2CppName: get_Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Exception* (VivoxUnity::Private::TranscribedMessage::*)()>(&VivoxUnity::Private::TranscribedMessage::get_Exception)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "get_Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::set_Exception
// Il2CppName: set_Exception
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::TranscribedMessage::*)(::System::Exception*)>(&VivoxUnity::Private::TranscribedMessage::set_Exception)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Exception")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "set_Exception", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::Private::TranscribedMessage::*)()>(&VivoxUnity::Private::TranscribedMessage::get_Key)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::set_Key
// Il2CppName: set_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::TranscribedMessage::*)(::StringW)>(&VivoxUnity::Private::TranscribedMessage::set_Key)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "set_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::get_ReceivedTime
// Il2CppName: get_ReceivedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::DateTime (VivoxUnity::Private::TranscribedMessage::*)()>(&VivoxUnity::Private::TranscribedMessage::get_ReceivedTime)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "get_ReceivedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::set_ReceivedTime
// Il2CppName: set_ReceivedTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::TranscribedMessage::*)(::System::DateTime)>(&VivoxUnity::Private::TranscribedMessage::set_ReceivedTime)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "DateTime")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "set_ReceivedTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::get_Message
// Il2CppName: get_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::Private::TranscribedMessage::*)()>(&VivoxUnity::Private::TranscribedMessage::get_Message)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "get_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::set_Message
// Il2CppName: set_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::TranscribedMessage::*)(::StringW)>(&VivoxUnity::Private::TranscribedMessage::set_Message)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "set_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::get_Language
// Il2CppName: get_Language
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::Private::TranscribedMessage::*)()>(&VivoxUnity::Private::TranscribedMessage::get_Language)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "get_Language", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::set_Language
// Il2CppName: set_Language
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::TranscribedMessage::*)(::StringW)>(&VivoxUnity::Private::TranscribedMessage::set_Language)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "set_Language", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::get_ChannelSession
// Il2CppName: get_ChannelSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IChannelSession* (VivoxUnity::Private::TranscribedMessage::*)()>(&VivoxUnity::Private::TranscribedMessage::get_ChannelSession)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "get_ChannelSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::set_ChannelSession
// Il2CppName: set_ChannelSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::TranscribedMessage::*)(::VivoxUnity::IChannelSession*)>(&VivoxUnity::Private::TranscribedMessage::set_ChannelSession)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VivoxUnity", "IChannelSession")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "set_ChannelSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::get_Sender
// Il2CppName: get_Sender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::AccountId* (VivoxUnity::Private::TranscribedMessage::*)()>(&VivoxUnity::Private::TranscribedMessage::get_Sender)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "get_Sender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::set_Sender
// Il2CppName: set_Sender
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::TranscribedMessage::*)(::VivoxUnity::AccountId*)>(&VivoxUnity::Private::TranscribedMessage::set_Sender)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "set_Sender", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::get_FromSelf
// Il2CppName: get_FromSelf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VivoxUnity::Private::TranscribedMessage::*)()>(&VivoxUnity::Private::TranscribedMessage::get_FromSelf)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "get_FromSelf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::TranscribedMessage::set_FromSelf
// Il2CppName: set_FromSelf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::TranscribedMessage::*)(bool)>(&VivoxUnity::Private::TranscribedMessage::set_FromSelf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TranscribedMessage*), "set_FromSelf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
