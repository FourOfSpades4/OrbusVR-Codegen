// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.Private.TextToSpeech
#include "VivoxUnity/Private/TextToSpeech.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: TTSMessage
  class TTSMessage;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0*, "VivoxUnity.Private", "TextToSpeech/<>c__DisplayClass29_0");
// Type namespace: VivoxUnity.Private
namespace VivoxUnity::Private {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.Private.TextToSpeech/<>c__DisplayClass29_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ABDB48
  class TextToSpeech::$$c__DisplayClass29_0 : public ::Il2CppObject {
    public:
    public:
    // public System.UInt32 utteranceId
    // Size: 0x4
    // Offset: 0x10
    uint utteranceId;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    public:
    // Creating conversion operator: operator uint
    constexpr operator uint() const noexcept {
      return utteranceId;
    }
    // Get instance field reference: public System.UInt32 utteranceId
    [[deprecated("Use field access instead!")]] uint& dyn_utteranceId();
    // public System.Void .ctor()
    // Offset: 0x12D83D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextToSpeech::$$c__DisplayClass29_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextToSpeech::$$c__DisplayClass29_0*, creationType>()));
    }
    // System.Boolean <GetTTSMessageFromEvt>b__0(VivoxUnity.TTSMessage m)
    // Offset: 0x12D8714
    bool $GetTTSMessageFromEvt$b__0(::VivoxUnity::TTSMessage* m);
  }; // VivoxUnity.Private.TextToSpeech/<>c__DisplayClass29_0
  #pragma pack(pop)
  static check_size<sizeof(TextToSpeech::$$c__DisplayClass29_0), 16 + sizeof(uint)> __VivoxUnity_Private_TextToSpeech_$$c__DisplayClass29_0SizeCheck;
  static_assert(sizeof(TextToSpeech::$$c__DisplayClass29_0) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0::$GetTTSMessageFromEvt$b__0
// Il2CppName: <GetTTSMessageFromEvt>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0::*)(::VivoxUnity::TTSMessage*)>(&VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0::$GetTTSMessageFromEvt$b__0)> {
  static const MethodInfo* get() {
    static auto* m = &::il2cpp_utils::GetClassFromName("VivoxUnity", "TTSMessage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::TextToSpeech::$$c__DisplayClass29_0*), "<GetTTSMessageFromEvt>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{m});
  }
};
