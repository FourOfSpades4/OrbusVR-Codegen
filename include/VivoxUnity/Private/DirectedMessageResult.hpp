// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.IDirectedMessageResult
#include "VivoxUnity/IDirectedMessageResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: VivoxUnity.Private
namespace VivoxUnity::Private {
  // Forward declaring type: DirectedMessageResult
  class DirectedMessageResult;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::Private::DirectedMessageResult);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::Private::DirectedMessageResult*, "VivoxUnity.Private", "DirectedMessageResult");
// Type namespace: VivoxUnity.Private
namespace VivoxUnity::Private {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.Private.DirectedMessageResult
  // [TokenAttribute] Offset: FFFFFFFF
  class DirectedMessageResult : public ::Il2CppObject/*, public ::VivoxUnity::IDirectedMessageResult*/ {
    public:
    public:
    // [CompilerGeneratedAttribute] Offset: 0xABE048
    // private System.String <RequestId>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW RequestId;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating interface conversion operator: operator ::VivoxUnity::IDirectedMessageResult
    operator ::VivoxUnity::IDirectedMessageResult() noexcept {
      return *reinterpret_cast<::VivoxUnity::IDirectedMessageResult*>(this);
    }
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return RequestId;
    }
    // Get instance field reference: private System.String <RequestId>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$RequestId$k__BackingField();
    // public System.String get_RequestId()
    // Offset: 0x14C6140
    ::StringW get_RequestId();
    // private System.Void set_RequestId(System.String value)
    // Offset: 0x14C6148
    void set_RequestId(::StringW value);
    // public System.Void .ctor()
    // Offset: 0x14C6150
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DirectedMessageResult* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedMessageResult::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DirectedMessageResult*, creationType>()));
    }
    // public System.Void .ctor(System.String _requestID)
    // Offset: 0x14C61AC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DirectedMessageResult* New_ctor(::StringW _requestID) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Private::DirectedMessageResult::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DirectedMessageResult*, creationType>(_requestID)));
    }
  }; // VivoxUnity.Private.DirectedMessageResult
  #pragma pack(pop)
  static check_size<sizeof(DirectedMessageResult), 16 + sizeof(::StringW)> __VivoxUnity_Private_DirectedMessageResultSizeCheck;
  static_assert(sizeof(DirectedMessageResult) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::Private::DirectedMessageResult::get_RequestId
// Il2CppName: get_RequestId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::Private::DirectedMessageResult::*)()>(&VivoxUnity::Private::DirectedMessageResult::get_RequestId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::DirectedMessageResult*), "get_RequestId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::DirectedMessageResult::set_RequestId
// Il2CppName: set_RequestId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::Private::DirectedMessageResult::*)(::StringW)>(&VivoxUnity::Private::DirectedMessageResult::set_RequestId)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Private::DirectedMessageResult*), "set_RequestId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Private::DirectedMessageResult::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VivoxUnity::Private::DirectedMessageResult::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
