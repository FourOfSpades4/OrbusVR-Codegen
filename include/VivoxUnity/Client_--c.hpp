// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.Client
#include "VivoxUnity/Client.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: LoopDone
  class LoopDone;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::Client::$$c);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::Client::$$c*, "VivoxUnity", "Client/<>c");
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.Client/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ABD7A8
  class Client::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly VivoxUnity.Client/<>c <>9
    static ::VivoxUnity::Client::$$c* _get_$$9();
    // Set static field: static public readonly VivoxUnity.Client/<>c <>9
    static void _set_$$9(::VivoxUnity::Client::$$c* value);
    // Get static field: static public LoopDone <>9__35_0
    static ::GlobalNamespace::LoopDone* _get_$$9__35_0();
    // Set static field: static public LoopDone <>9__35_0
    static void _set_$$9__35_0(::GlobalNamespace::LoopDone* value);
    // static private System.Void .cctor()
    // Offset: 0x14B8954
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x14B89B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Client::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::Client::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Client::$$c*, creationType>()));
    }
    // System.Boolean <RunOnce>b__35_0()
    // Offset: 0x14B89C0
    bool $RunOnce$b__35_0();
  }; // VivoxUnity.Client/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::Client::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VivoxUnity::Client::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Client::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::Client::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VivoxUnity::Client::$$c::$RunOnce$b__35_0
// Il2CppName: <RunOnce>b__35_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VivoxUnity::Client::$$c::*)()>(&VivoxUnity::Client::$$c::$RunOnce$b__35_0)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::Client::$$c*), "<RunOnce>b__35_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
