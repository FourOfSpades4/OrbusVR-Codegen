// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.IKeyedItemNotifyPropertyChanged`1
#include "VivoxUnity/IKeyedItemNotifyPropertyChanged_1.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: AccountId
  class AccountId;
  // Forward declaring type: IReadOnlyDictionary`2<TK, T>
  template<typename TK, typename T>
  class IReadOnlyDictionary_2;
  // Forward declaring type: ChannelId
  class ChannelId;
  // Forward declaring type: IChannelSession
  class IChannelSession;
  // Forward declaring type: IPresenceSubscription
  class IPresenceSubscription;
  // Forward declaring type: IReadOnlyHashSet`1<T>
  template<typename T>
  class IReadOnlyHashSet_1;
  // Forward declaring type: IReadOnlyQueue`1<T>
  template<typename T>
  class IReadOnlyQueue_1;
  // Forward declaring type: IDirectedTextMessage
  class IDirectedTextMessage;
  // Forward declaring type: IFailedDirectedTextMessage
  class IFailedDirectedTextMessage;
  // Forward declaring type: IAccountArchiveMessage
  class IAccountArchiveMessage;
  // Forward declaring type: IArchiveQueryResult
  class IArchiveQueryResult;
  // Forward declaring type: IDirectedMessageResult
  class IDirectedMessageResult;
  // Forward declaring type: LoginState
  struct LoginState;
  // Forward declaring type: TransmissionMode
  struct TransmissionMode;
  // Forward declaring type: Presence
  struct Presence;
  // Forward declaring type: ParticipantPropertyUpdateFrequency
  struct ParticipantPropertyUpdateFrequency;
  // Forward declaring type: ITextToSpeech
  class ITextToSpeech;
  // Forward declaring type: SubscriptionMode
  struct SubscriptionMode;
}
// Forward declaring namespace: System::Collections::ObjectModel
namespace System::Collections::ObjectModel {
  // Forward declaring type: ReadOnlyCollection`1<T>
  template<typename T>
  class ReadOnlyCollection_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: Uri
  class Uri;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
  // Forward declaring type: TimeSpan
  struct TimeSpan;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: ILoginSession
  class ILoginSession;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::ILoginSession);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::ILoginSession*, "VivoxUnity", "ILoginSession");
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.ILoginSession
  // [TokenAttribute] Offset: FFFFFFFF
  class ILoginSession/*, public ::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<::VivoxUnity::AccountId*>*/ {
    public:
    // Creating interface conversion operator: operator ::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<::VivoxUnity::AccountId*>
    operator ::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<::VivoxUnity::AccountId*>() noexcept {
      return *reinterpret_cast<::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<::VivoxUnity::AccountId*>*>(this);
    }
    // public VivoxUnity.IReadOnlyDictionary`2<VivoxUnity.ChannelId,VivoxUnity.IChannelSession> get_ChannelSessions()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyDictionary_2<::VivoxUnity::ChannelId*, ::VivoxUnity::IChannelSession*>* get_ChannelSessions();
    // public VivoxUnity.IReadOnlyDictionary`2<VivoxUnity.AccountId,VivoxUnity.IPresenceSubscription> get_PresenceSubscriptions()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyDictionary_2<::VivoxUnity::AccountId*, ::VivoxUnity::IPresenceSubscription*>* get_PresenceSubscriptions();
    // public VivoxUnity.IReadOnlyHashSet`1<VivoxUnity.AccountId> get_BlockedSubscriptions()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* get_BlockedSubscriptions();
    // public VivoxUnity.IReadOnlyHashSet`1<VivoxUnity.AccountId> get_AllowedSubscriptions()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* get_AllowedSubscriptions();
    // public VivoxUnity.IReadOnlyQueue`1<VivoxUnity.AccountId> get_IncomingSubscriptionRequests()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::AccountId*>* get_IncomingSubscriptionRequests();
    // public VivoxUnity.IReadOnlyHashSet`1<VivoxUnity.AccountId> get_CrossMutedCommunications()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* get_CrossMutedCommunications();
    // public VivoxUnity.IReadOnlyQueue`1<VivoxUnity.IDirectedTextMessage> get_DirectedMessages()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IDirectedTextMessage*>* get_DirectedMessages();
    // public VivoxUnity.IReadOnlyQueue`1<VivoxUnity.IFailedDirectedTextMessage> get_FailedDirectedMessages()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IFailedDirectedTextMessage*>* get_FailedDirectedMessages();
    // public VivoxUnity.IReadOnlyQueue`1<VivoxUnity.IAccountArchiveMessage> get_AccountArchive()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IAccountArchiveMessage*>* get_AccountArchive();
    // public VivoxUnity.IArchiveQueryResult get_AccountArchiveResult()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IArchiveQueryResult* get_AccountArchiveResult();
    // public VivoxUnity.IDirectedMessageResult get_DirectedMessageResult()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IDirectedMessageResult* get_DirectedMessageResult();
    // public VivoxUnity.LoginState get_State()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::LoginState get_State();
    // public VivoxUnity.TransmissionMode get_TransmissionType()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::TransmissionMode get_TransmissionType();
    // public System.Collections.ObjectModel.ReadOnlyCollection`1<VivoxUnity.ChannelId> get_TransmittingChannels()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Collections::ObjectModel::ReadOnlyCollection_1<::VivoxUnity::ChannelId*>* get_TransmittingChannels();
    // public System.Boolean get_IsInjectingAudio()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsInjectingAudio();
    // public VivoxUnity.Presence get_Presence()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::Presence get_Presence();
    // public System.Void set_Presence(VivoxUnity.Presence value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Presence(::VivoxUnity::Presence value);
    // public VivoxUnity.AccountId get_LoginSessionId()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::AccountId* get_LoginSessionId();
    // public VivoxUnity.ParticipantPropertyUpdateFrequency get_ParticipantPropertyFrequency()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::ParticipantPropertyUpdateFrequency get_ParticipantPropertyFrequency();
    // public System.Void set_ParticipantPropertyFrequency(VivoxUnity.ParticipantPropertyUpdateFrequency value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_ParticipantPropertyFrequency(::VivoxUnity::ParticipantPropertyUpdateFrequency value);
    // public VivoxUnity.ITextToSpeech get_TTS()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::ITextToSpeech* get_TTS();
    // public System.IAsyncResult BeginLogin(System.Uri server, System.String accessToken, VivoxUnity.SubscriptionMode subscriptionMode, VivoxUnity.IReadOnlyHashSet`1<VivoxUnity.AccountId> presenceSubscriptions, VivoxUnity.IReadOnlyHashSet`1<VivoxUnity.AccountId> blockedPresenceSubscriptions, VivoxUnity.IReadOnlyHashSet`1<VivoxUnity.AccountId> allowedPresenceSubscriptions, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginLogin(::System::Uri* server, ::StringW accessToken, ::VivoxUnity::SubscriptionMode subscriptionMode, ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* presenceSubscriptions, ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* blockedPresenceSubscriptions, ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* allowedPresenceSubscriptions, ::System::AsyncCallback* callback);
    // public System.IAsyncResult BeginLogin(System.Uri server, System.String accessToken, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginLogin(::System::Uri* server, ::StringW accessToken, ::System::AsyncCallback* callback);
    // public System.Void EndLogin(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndLogin(::System::IAsyncResult* result);
    // public System.IAsyncResult BeginAccountSetLoginProperties(VivoxUnity.ParticipantPropertyUpdateFrequency participantPropertyFrequency, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginAccountSetLoginProperties(::VivoxUnity::ParticipantPropertyUpdateFrequency participantPropertyFrequency, ::System::AsyncCallback* callback);
    // public System.Void EndAccountSetLoginProperties(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndAccountSetLoginProperties(::System::IAsyncResult* result);
    // public VivoxUnity.IChannelSession GetChannelSession(VivoxUnity.ChannelId channelId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IChannelSession* GetChannelSession(::VivoxUnity::ChannelId* channelId);
    // public System.Void DeleteChannelSession(VivoxUnity.ChannelId channelId)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void DeleteChannelSession(::VivoxUnity::ChannelId* channelId);
    // public System.IAsyncResult BeginAddBlockedSubscription(VivoxUnity.AccountId accountId, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginAddBlockedSubscription(::VivoxUnity::AccountId* accountId, ::System::AsyncCallback* callback);
    // public System.Void EndAddBlockedSubscription(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndAddBlockedSubscription(::System::IAsyncResult* result);
    // public System.IAsyncResult BeginRemoveBlockedSubscription(VivoxUnity.AccountId accountId, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginRemoveBlockedSubscription(::VivoxUnity::AccountId* accountId, ::System::AsyncCallback* callback);
    // public System.Void EndRemoveBlockedSubscription(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndRemoveBlockedSubscription(::System::IAsyncResult* result);
    // public System.IAsyncResult BeginAddAllowedSubscription(VivoxUnity.AccountId accountId, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginAddAllowedSubscription(::VivoxUnity::AccountId* accountId, ::System::AsyncCallback* callback);
    // public System.Void EndAddAllowedSubscription(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndAddAllowedSubscription(::System::IAsyncResult* result);
    // public System.IAsyncResult BeginRemoveAllowedSubscription(VivoxUnity.AccountId accountId, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginRemoveAllowedSubscription(::VivoxUnity::AccountId* accountId, ::System::AsyncCallback* callback);
    // public System.Void EndRemoveAllowedSubscription(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndRemoveAllowedSubscription(::System::IAsyncResult* result);
    // public System.IAsyncResult BeginAddPresenceSubscription(VivoxUnity.AccountId accountId, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginAddPresenceSubscription(::VivoxUnity::AccountId* accountId, ::System::AsyncCallback* callback);
    // public VivoxUnity.IPresenceSubscription EndAddPresenceSubscription(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IPresenceSubscription* EndAddPresenceSubscription(::System::IAsyncResult* result);
    // public System.IAsyncResult BeginRemovePresenceSubscription(VivoxUnity.AccountId accountId, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginRemovePresenceSubscription(::VivoxUnity::AccountId* accountId, ::System::AsyncCallback* callback);
    // public System.Void EndRemovePresenceSubscription(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndRemovePresenceSubscription(::System::IAsyncResult* result);
    // public System.IAsyncResult BeginSendDirectedMessage(VivoxUnity.AccountId accountId, System.String language, System.String message, System.String applicationStanzaNamespace, System.String applicationStanzaBody, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginSendDirectedMessage(::VivoxUnity::AccountId* accountId, ::StringW language, ::StringW message, ::StringW applicationStanzaNamespace, ::StringW applicationStanzaBody, ::System::AsyncCallback* callback);
    // public System.IAsyncResult BeginSendDirectedMessage(VivoxUnity.AccountId accountId, System.String message, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginSendDirectedMessage(::VivoxUnity::AccountId* accountId, ::StringW message, ::System::AsyncCallback* callback);
    // public System.Void EndSendDirectedMessage(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndSendDirectedMessage(::System::IAsyncResult* result);
    // public System.IAsyncResult BeginAccountArchiveQuery(System.Nullable`1<System.DateTime> timeStart, System.Nullable`1<System.DateTime> timeEnd, System.String searchText, VivoxUnity.AccountId userId, VivoxUnity.ChannelId channel, System.UInt32 max, System.String afterId, System.String beforeId, System.Int32 firstMessageIndex, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginAccountArchiveQuery(::System::Nullable_1<::System::DateTime> timeStart, ::System::Nullable_1<::System::DateTime> timeEnd, ::StringW searchText, ::VivoxUnity::AccountId* userId, ::VivoxUnity::ChannelId* channel, uint max, ::StringW afterId, ::StringW beforeId, int firstMessageIndex, ::System::AsyncCallback* callback);
    // public System.Void EndAccountArchiveQuery(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndAccountArchiveQuery(::System::IAsyncResult* result);
    // public System.Void SetTransmissionMode(VivoxUnity.TransmissionMode mode, VivoxUnity.ChannelId singleChannel)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetTransmissionMode(::VivoxUnity::TransmissionMode mode, ::VivoxUnity::ChannelId* singleChannel);
    // public System.Void Logout()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Logout();
    // public System.String GetLoginToken(System.String tokenSigningKey, System.TimeSpan tokenExpirationDuration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW GetLoginToken(::StringW tokenSigningKey, ::System::TimeSpan tokenExpirationDuration);
    // public System.Void StartAudioInjection(System.String audioFilePath)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void StartAudioInjection(::StringW audioFilePath);
    // public System.Void StopAudioInjection()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void StopAudioInjection();
    // public System.IAsyncResult SetCrossMutedCommunications(VivoxUnity.AccountId accountId, System.Boolean muted, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* SetCrossMutedCommunications(::VivoxUnity::AccountId* accountId, bool muted, ::System::AsyncCallback* callback);
    // public System.IAsyncResult SetCrossMutedCommunications(System.Collections.Generic.List`1<VivoxUnity.AccountId> accountIdSet, System.Boolean muted, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* SetCrossMutedCommunications(::System::Collections::Generic::List_1<::VivoxUnity::AccountId*>* accountIdSet, bool muted, ::System::AsyncCallback* callback);
    // public System.IAsyncResult ClearCrossMutedCommunications(System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* ClearCrossMutedCommunications(::System::AsyncCallback* callback);
  }; // VivoxUnity.ILoginSession
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_ChannelSessions
// Il2CppName: get_ChannelSessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyDictionary_2<::VivoxUnity::ChannelId*, ::VivoxUnity::IChannelSession*>* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_ChannelSessions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_ChannelSessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_PresenceSubscriptions
// Il2CppName: get_PresenceSubscriptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyDictionary_2<::VivoxUnity::AccountId*, ::VivoxUnity::IPresenceSubscription*>* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_PresenceSubscriptions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_PresenceSubscriptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_BlockedSubscriptions
// Il2CppName: get_BlockedSubscriptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_BlockedSubscriptions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_BlockedSubscriptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_AllowedSubscriptions
// Il2CppName: get_AllowedSubscriptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_AllowedSubscriptions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_AllowedSubscriptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_IncomingSubscriptionRequests
// Il2CppName: get_IncomingSubscriptionRequests
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::AccountId*>* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_IncomingSubscriptionRequests)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_IncomingSubscriptionRequests", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_CrossMutedCommunications
// Il2CppName: get_CrossMutedCommunications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_CrossMutedCommunications)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_CrossMutedCommunications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_DirectedMessages
// Il2CppName: get_DirectedMessages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IDirectedTextMessage*>* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_DirectedMessages)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_DirectedMessages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_FailedDirectedMessages
// Il2CppName: get_FailedDirectedMessages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IFailedDirectedTextMessage*>* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_FailedDirectedMessages)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_FailedDirectedMessages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_AccountArchive
// Il2CppName: get_AccountArchive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IAccountArchiveMessage*>* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_AccountArchive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_AccountArchive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_AccountArchiveResult
// Il2CppName: get_AccountArchiveResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IArchiveQueryResult* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_AccountArchiveResult)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_AccountArchiveResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_DirectedMessageResult
// Il2CppName: get_DirectedMessageResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IDirectedMessageResult* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_DirectedMessageResult)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_DirectedMessageResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_State
// Il2CppName: get_State
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::LoginState (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_State)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_State", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_TransmissionType
// Il2CppName: get_TransmissionType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::TransmissionMode (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_TransmissionType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_TransmissionType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_TransmittingChannels
// Il2CppName: get_TransmittingChannels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ObjectModel::ReadOnlyCollection_1<::VivoxUnity::ChannelId*>* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_TransmittingChannels)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_TransmittingChannels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_IsInjectingAudio
// Il2CppName: get_IsInjectingAudio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_IsInjectingAudio)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_IsInjectingAudio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_Presence
// Il2CppName: get_Presence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::Presence (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_Presence)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_Presence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::set_Presence
// Il2CppName: set_Presence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::VivoxUnity::Presence)>(&VivoxUnity::ILoginSession::set_Presence)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VivoxUnity", "Presence")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "set_Presence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_LoginSessionId
// Il2CppName: get_LoginSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::AccountId* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_LoginSessionId)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_LoginSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_ParticipantPropertyFrequency
// Il2CppName: get_ParticipantPropertyFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::ParticipantPropertyUpdateFrequency (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_ParticipantPropertyFrequency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_ParticipantPropertyFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::set_ParticipantPropertyFrequency
// Il2CppName: set_ParticipantPropertyFrequency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::VivoxUnity::ParticipantPropertyUpdateFrequency)>(&VivoxUnity::ILoginSession::set_ParticipantPropertyFrequency)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VivoxUnity", "ParticipantPropertyUpdateFrequency")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "set_ParticipantPropertyFrequency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::get_TTS
// Il2CppName: get_TTS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::ITextToSpeech* (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::get_TTS)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "get_TTS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginLogin
// Il2CppName: BeginLogin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::System::Uri*, ::StringW, ::VivoxUnity::SubscriptionMode, ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>*, ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>*, ::VivoxUnity::IReadOnlyHashSet_1<::VivoxUnity::AccountId*>*, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginLogin)> {
  static const MethodInfo* get() {
    static auto* server = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* accessToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* subscriptionMode = &::il2cpp_utils::GetClassFromName("VivoxUnity", "SubscriptionMode")->byval_arg;
    static auto* presenceSubscriptions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("VivoxUnity", "IReadOnlyHashSet`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")})->byval_arg;
    static auto* blockedPresenceSubscriptions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("VivoxUnity", "IReadOnlyHashSet`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")})->byval_arg;
    static auto* allowedPresenceSubscriptions = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("VivoxUnity", "IReadOnlyHashSet`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")})->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginLogin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{server, accessToken, subscriptionMode, presenceSubscriptions, blockedPresenceSubscriptions, allowedPresenceSubscriptions, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginLogin
// Il2CppName: BeginLogin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::System::Uri*, ::StringW, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginLogin)> {
  static const MethodInfo* get() {
    static auto* server = &::il2cpp_utils::GetClassFromName("System", "Uri")->byval_arg;
    static auto* accessToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginLogin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{server, accessToken, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::EndLogin
// Il2CppName: EndLogin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::System::IAsyncResult*)>(&VivoxUnity::ILoginSession::EndLogin)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "EndLogin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginAccountSetLoginProperties
// Il2CppName: BeginAccountSetLoginProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::VivoxUnity::ParticipantPropertyUpdateFrequency, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginAccountSetLoginProperties)> {
  static const MethodInfo* get() {
    static auto* participantPropertyFrequency = &::il2cpp_utils::GetClassFromName("VivoxUnity", "ParticipantPropertyUpdateFrequency")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginAccountSetLoginProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{participantPropertyFrequency, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::EndAccountSetLoginProperties
// Il2CppName: EndAccountSetLoginProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::System::IAsyncResult*)>(&VivoxUnity::ILoginSession::EndAccountSetLoginProperties)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "EndAccountSetLoginProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::GetChannelSession
// Il2CppName: GetChannelSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IChannelSession* (VivoxUnity::ILoginSession::*)(::VivoxUnity::ChannelId*)>(&VivoxUnity::ILoginSession::GetChannelSession)> {
  static const MethodInfo* get() {
    static auto* channelId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "ChannelId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "GetChannelSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channelId});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::DeleteChannelSession
// Il2CppName: DeleteChannelSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::VivoxUnity::ChannelId*)>(&VivoxUnity::ILoginSession::DeleteChannelSession)> {
  static const MethodInfo* get() {
    static auto* channelId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "ChannelId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "DeleteChannelSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{channelId});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginAddBlockedSubscription
// Il2CppName: BeginAddBlockedSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::VivoxUnity::AccountId*, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginAddBlockedSubscription)> {
  static const MethodInfo* get() {
    static auto* accountId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginAddBlockedSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountId, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::EndAddBlockedSubscription
// Il2CppName: EndAddBlockedSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::System::IAsyncResult*)>(&VivoxUnity::ILoginSession::EndAddBlockedSubscription)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "EndAddBlockedSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginRemoveBlockedSubscription
// Il2CppName: BeginRemoveBlockedSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::VivoxUnity::AccountId*, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginRemoveBlockedSubscription)> {
  static const MethodInfo* get() {
    static auto* accountId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginRemoveBlockedSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountId, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::EndRemoveBlockedSubscription
// Il2CppName: EndRemoveBlockedSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::System::IAsyncResult*)>(&VivoxUnity::ILoginSession::EndRemoveBlockedSubscription)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "EndRemoveBlockedSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginAddAllowedSubscription
// Il2CppName: BeginAddAllowedSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::VivoxUnity::AccountId*, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginAddAllowedSubscription)> {
  static const MethodInfo* get() {
    static auto* accountId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginAddAllowedSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountId, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::EndAddAllowedSubscription
// Il2CppName: EndAddAllowedSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::System::IAsyncResult*)>(&VivoxUnity::ILoginSession::EndAddAllowedSubscription)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "EndAddAllowedSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginRemoveAllowedSubscription
// Il2CppName: BeginRemoveAllowedSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::VivoxUnity::AccountId*, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginRemoveAllowedSubscription)> {
  static const MethodInfo* get() {
    static auto* accountId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginRemoveAllowedSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountId, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::EndRemoveAllowedSubscription
// Il2CppName: EndRemoveAllowedSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::System::IAsyncResult*)>(&VivoxUnity::ILoginSession::EndRemoveAllowedSubscription)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "EndRemoveAllowedSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginAddPresenceSubscription
// Il2CppName: BeginAddPresenceSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::VivoxUnity::AccountId*, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginAddPresenceSubscription)> {
  static const MethodInfo* get() {
    static auto* accountId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginAddPresenceSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountId, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::EndAddPresenceSubscription
// Il2CppName: EndAddPresenceSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IPresenceSubscription* (VivoxUnity::ILoginSession::*)(::System::IAsyncResult*)>(&VivoxUnity::ILoginSession::EndAddPresenceSubscription)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "EndAddPresenceSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginRemovePresenceSubscription
// Il2CppName: BeginRemovePresenceSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::VivoxUnity::AccountId*, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginRemovePresenceSubscription)> {
  static const MethodInfo* get() {
    static auto* accountId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginRemovePresenceSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountId, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::EndRemovePresenceSubscription
// Il2CppName: EndRemovePresenceSubscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::System::IAsyncResult*)>(&VivoxUnity::ILoginSession::EndRemovePresenceSubscription)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "EndRemovePresenceSubscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginSendDirectedMessage
// Il2CppName: BeginSendDirectedMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::VivoxUnity::AccountId*, ::StringW, ::StringW, ::StringW, ::StringW, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginSendDirectedMessage)> {
  static const MethodInfo* get() {
    static auto* accountId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    static auto* language = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* applicationStanzaNamespace = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* applicationStanzaBody = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginSendDirectedMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountId, language, message, applicationStanzaNamespace, applicationStanzaBody, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginSendDirectedMessage
// Il2CppName: BeginSendDirectedMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::VivoxUnity::AccountId*, ::StringW, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginSendDirectedMessage)> {
  static const MethodInfo* get() {
    static auto* accountId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginSendDirectedMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountId, message, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::EndSendDirectedMessage
// Il2CppName: EndSendDirectedMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::System::IAsyncResult*)>(&VivoxUnity::ILoginSession::EndSendDirectedMessage)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "EndSendDirectedMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::BeginAccountArchiveQuery
// Il2CppName: BeginAccountArchiveQuery
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::System::Nullable_1<::System::DateTime>, ::System::Nullable_1<::System::DateTime>, ::StringW, ::VivoxUnity::AccountId*, ::VivoxUnity::ChannelId*, uint, ::StringW, ::StringW, int, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::BeginAccountArchiveQuery)> {
  static const MethodInfo* get() {
    static auto* timeStart = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "DateTime")})->byval_arg;
    static auto* timeEnd = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "DateTime")})->byval_arg;
    static auto* searchText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    static auto* channel = &::il2cpp_utils::GetClassFromName("VivoxUnity", "ChannelId")->byval_arg;
    static auto* max = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* afterId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* beforeId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* firstMessageIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "BeginAccountArchiveQuery", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{timeStart, timeEnd, searchText, userId, channel, max, afterId, beforeId, firstMessageIndex, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::EndAccountArchiveQuery
// Il2CppName: EndAccountArchiveQuery
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::System::IAsyncResult*)>(&VivoxUnity::ILoginSession::EndAccountArchiveQuery)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "EndAccountArchiveQuery", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::SetTransmissionMode
// Il2CppName: SetTransmissionMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::VivoxUnity::TransmissionMode, ::VivoxUnity::ChannelId*)>(&VivoxUnity::ILoginSession::SetTransmissionMode)> {
  static const MethodInfo* get() {
    static auto* mode = &::il2cpp_utils::GetClassFromName("VivoxUnity", "TransmissionMode")->byval_arg;
    static auto* singleChannel = &::il2cpp_utils::GetClassFromName("VivoxUnity", "ChannelId")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "SetTransmissionMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{mode, singleChannel});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::Logout
// Il2CppName: Logout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::Logout)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "Logout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::GetLoginToken
// Il2CppName: GetLoginToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::ILoginSession::*)(::StringW, ::System::TimeSpan)>(&VivoxUnity::ILoginSession::GetLoginToken)> {
  static const MethodInfo* get() {
    static auto* tokenSigningKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* tokenExpirationDuration = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "GetLoginToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenSigningKey, tokenExpirationDuration});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::StartAudioInjection
// Il2CppName: StartAudioInjection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)(::StringW)>(&VivoxUnity::ILoginSession::StartAudioInjection)> {
  static const MethodInfo* get() {
    static auto* audioFilePath = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "StartAudioInjection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{audioFilePath});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::StopAudioInjection
// Il2CppName: StopAudioInjection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::ILoginSession::*)()>(&VivoxUnity::ILoginSession::StopAudioInjection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "StopAudioInjection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::SetCrossMutedCommunications
// Il2CppName: SetCrossMutedCommunications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::VivoxUnity::AccountId*, bool, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::SetCrossMutedCommunications)> {
  static const MethodInfo* get() {
    static auto* accountId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    static auto* muted = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "SetCrossMutedCommunications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountId, muted, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::SetCrossMutedCommunications
// Il2CppName: SetCrossMutedCommunications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::System::Collections::Generic::List_1<::VivoxUnity::AccountId*>*, bool, ::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::SetCrossMutedCommunications)> {
  static const MethodInfo* get() {
    static auto* accountIdSet = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")})->byval_arg;
    static auto* muted = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "SetCrossMutedCommunications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountIdSet, muted, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::ILoginSession::ClearCrossMutedCommunications
// Il2CppName: ClearCrossMutedCommunications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::ILoginSession::*)(::System::AsyncCallback*)>(&VivoxUnity::ILoginSession::ClearCrossMutedCommunications)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::ILoginSession*), "ClearCrossMutedCommunications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
