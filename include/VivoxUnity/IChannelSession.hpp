// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.IKeyedItemNotifyPropertyChanged`1
#include "VivoxUnity/IKeyedItemNotifyPropertyChanged_1.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: ChannelId
  class ChannelId;
  // Forward declaring type: ILoginSession
  class ILoginSession;
  // Forward declaring type: ConnectionState
  struct ConnectionState;
  // Forward declaring type: IReadOnlyDictionary`2<TK, T>
  template<typename TK, typename T>
  class IReadOnlyDictionary_2;
  // Forward declaring type: IParticipant
  class IParticipant;
  // Forward declaring type: IReadOnlyQueue`1<T>
  template<typename T>
  class IReadOnlyQueue_1;
  // Forward declaring type: IChannelTextMessage
  class IChannelTextMessage;
  // Forward declaring type: ISessionArchiveMessage
  class ISessionArchiveMessage;
  // Forward declaring type: IArchiveQueryResult
  class IArchiveQueryResult;
  // Forward declaring type: ITranscribedMessage
  class ITranscribedMessage;
  // Forward declaring type: AccountId
  class AccountId;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
  // Forward declaring type: Nullable`1<T>
  template<typename T>
  struct Nullable_1;
  // Forward declaring type: TimeSpan
  struct TimeSpan;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: IChannelSession
  class IChannelSession;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::IChannelSession);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::IChannelSession*, "VivoxUnity", "IChannelSession");
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Size: 0x0
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.IChannelSession
  // [TokenAttribute] Offset: FFFFFFFF
  class IChannelSession/*, public ::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<::VivoxUnity::ChannelId*>*/ {
    public:
    // Creating interface conversion operator: operator ::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<::VivoxUnity::ChannelId*>
    operator ::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<::VivoxUnity::ChannelId*>() noexcept {
      return *reinterpret_cast<::VivoxUnity::IKeyedItemNotifyPropertyChanged_1<::VivoxUnity::ChannelId*>*>(this);
    }
    // public System.String get_SessionHandle()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_SessionHandle();
    // public VivoxUnity.ILoginSession get_Parent()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::ILoginSession* get_Parent();
    // public VivoxUnity.ConnectionState get_AudioState()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::ConnectionState get_AudioState();
    // public VivoxUnity.ConnectionState get_TextState()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::ConnectionState get_TextState();
    // public VivoxUnity.IReadOnlyDictionary`2<System.String,VivoxUnity.IParticipant> get_Participants()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyDictionary_2<::StringW, ::VivoxUnity::IParticipant*>* get_Participants();
    // public System.Boolean get_Typing()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_Typing();
    // public System.Void set_Typing(System.Boolean value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Typing(bool value);
    // public VivoxUnity.IReadOnlyQueue`1<VivoxUnity.IChannelTextMessage> get_MessageLog()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IChannelTextMessage*>* get_MessageLog();
    // public VivoxUnity.IReadOnlyQueue`1<VivoxUnity.ISessionArchiveMessage> get_SessionArchive()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::ISessionArchiveMessage*>* get_SessionArchive();
    // public VivoxUnity.IArchiveQueryResult get_SessionArchiveResult()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IArchiveQueryResult* get_SessionArchiveResult();
    // public VivoxUnity.IReadOnlyQueue`1<VivoxUnity.ITranscribedMessage> get_TranscribedLog()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::ITranscribedMessage*>* get_TranscribedLog();
    // public System.Boolean get_IsTransmitting()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsTransmitting();
    // public System.Boolean get_IsSessionBeingTranscribed()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_IsSessionBeingTranscribed();
    // public VivoxUnity.ChannelId get_Channel()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::VivoxUnity::ChannelId* get_Channel();
    // public System.IAsyncResult BeginConnect(System.Boolean connectAudio, System.Boolean connectText, System.Boolean switchTransmission, System.String accessToken, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginConnect(bool connectAudio, bool connectText, bool switchTransmission, ::StringW accessToken, ::System::AsyncCallback* callback);
    // public System.Void EndConnect(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndConnect(::System::IAsyncResult* result);
    // public System.IAsyncResult Disconnect(System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* Disconnect(::System::AsyncCallback* callback);
    // public System.IAsyncResult BeginSetAudioConnected(System.Boolean value, System.Boolean switchTransmission, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginSetAudioConnected(bool value, bool switchTransmission, ::System::AsyncCallback* callback);
    // public System.Void EndSetAudioConnected(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndSetAudioConnected(::System::IAsyncResult* result);
    // public System.IAsyncResult BeginSetTextConnected(System.Boolean value, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginSetTextConnected(bool value, ::System::AsyncCallback* callback);
    // public System.Void EndSetTextConnected(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndSetTextConnected(::System::IAsyncResult* result);
    // public System.IAsyncResult BeginSendText(System.String message, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginSendText(::StringW message, ::System::AsyncCallback* callback);
    // public System.IAsyncResult BeginSendText(System.String language, System.String message, System.String applicationStanzaNamespace, System.String applicationStanzaBody, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginSendText(::StringW language, ::StringW message, ::StringW applicationStanzaNamespace, ::StringW applicationStanzaBody, ::System::AsyncCallback* callback);
    // public System.Void EndSendText(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndSendText(::System::IAsyncResult* result);
    // public System.IAsyncResult BeginSessionArchiveQuery(System.Nullable`1<System.DateTime> timeStart, System.Nullable`1<System.DateTime> timeEnd, System.String searchText, VivoxUnity.AccountId userId, System.UInt32 max, System.String afterId, System.String beforeId, System.Int32 firstMessageIndex, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginSessionArchiveQuery(::System::Nullable_1<::System::DateTime> timeStart, ::System::Nullable_1<::System::DateTime> timeEnd, ::StringW searchText, ::VivoxUnity::AccountId* userId, uint max, ::StringW afterId, ::StringW beforeId, int firstMessageIndex, ::System::AsyncCallback* callback);
    // public System.Void EndSessionArchiveQuery(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndSessionArchiveQuery(::System::IAsyncResult* result);
    // public System.String GetConnectToken(System.String tokenSigningKey, System.TimeSpan tokenExpirationDuration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW GetConnectToken(::StringW tokenSigningKey, ::System::TimeSpan tokenExpirationDuration);
    // public System.Void Set3DPosition(UnityEngine.Vector3 speakerPos, UnityEngine.Vector3 listenerPos, UnityEngine.Vector3 listenerAtOrient, UnityEngine.Vector3 listenerUpOrient)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Set3DPosition(::UnityEngine::Vector3 speakerPos, ::UnityEngine::Vector3 listenerPos, ::UnityEngine::Vector3 listenerAtOrient, ::UnityEngine::Vector3 listenerUpOrient);
    // public System.IAsyncResult BeginSetChannelTranscription(System.Boolean value, System.String accessToken, System.AsyncCallback callback)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::IAsyncResult* BeginSetChannelTranscription(bool value, ::StringW accessToken, ::System::AsyncCallback* callback);
    // public System.Void EndSetChannelTranscription(System.IAsyncResult result)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void EndSetChannelTranscription(::System::IAsyncResult* result);
    // public System.String GetTranscriptionToken(System.String tokenSigningKey, System.TimeSpan tokenExpirationDuration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW GetTranscriptionToken(::StringW tokenSigningKey, ::System::TimeSpan tokenExpirationDuration);
  }; // VivoxUnity.IChannelSession
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_SessionHandle
// Il2CppName: get_SessionHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_SessionHandle)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_SessionHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_Parent
// Il2CppName: get_Parent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::ILoginSession* (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_Parent)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_Parent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_AudioState
// Il2CppName: get_AudioState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::ConnectionState (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_AudioState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_AudioState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_TextState
// Il2CppName: get_TextState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::ConnectionState (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_TextState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_TextState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_Participants
// Il2CppName: get_Participants
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyDictionary_2<::StringW, ::VivoxUnity::IParticipant*>* (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_Participants)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_Participants", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_Typing
// Il2CppName: get_Typing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_Typing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_Typing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::set_Typing
// Il2CppName: set_Typing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::IChannelSession::*)(bool)>(&VivoxUnity::IChannelSession::set_Typing)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "set_Typing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_MessageLog
// Il2CppName: get_MessageLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::IChannelTextMessage*>* (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_MessageLog)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_MessageLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_SessionArchive
// Il2CppName: get_SessionArchive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::ISessionArchiveMessage*>* (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_SessionArchive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_SessionArchive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_SessionArchiveResult
// Il2CppName: get_SessionArchiveResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IArchiveQueryResult* (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_SessionArchiveResult)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_SessionArchiveResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_TranscribedLog
// Il2CppName: get_TranscribedLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::IReadOnlyQueue_1<::VivoxUnity::ITranscribedMessage*>* (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_TranscribedLog)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_TranscribedLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_IsTransmitting
// Il2CppName: get_IsTransmitting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_IsTransmitting)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_IsTransmitting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_IsSessionBeingTranscribed
// Il2CppName: get_IsSessionBeingTranscribed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_IsSessionBeingTranscribed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_IsSessionBeingTranscribed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::get_Channel
// Il2CppName: get_Channel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::ChannelId* (VivoxUnity::IChannelSession::*)()>(&VivoxUnity::IChannelSession::get_Channel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "get_Channel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::BeginConnect
// Il2CppName: BeginConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::IChannelSession::*)(bool, bool, bool, ::StringW, ::System::AsyncCallback*)>(&VivoxUnity::IChannelSession::BeginConnect)> {
  static const MethodInfo* get() {
    static auto* connectAudio = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* connectText = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* switchTransmission = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* accessToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "BeginConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{connectAudio, connectText, switchTransmission, accessToken, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::EndConnect
// Il2CppName: EndConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::IChannelSession::*)(::System::IAsyncResult*)>(&VivoxUnity::IChannelSession::EndConnect)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "EndConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::Disconnect
// Il2CppName: Disconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::IChannelSession::*)(::System::AsyncCallback*)>(&VivoxUnity::IChannelSession::Disconnect)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "Disconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::BeginSetAudioConnected
// Il2CppName: BeginSetAudioConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::IChannelSession::*)(bool, bool, ::System::AsyncCallback*)>(&VivoxUnity::IChannelSession::BeginSetAudioConnected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* switchTransmission = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "BeginSetAudioConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, switchTransmission, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::EndSetAudioConnected
// Il2CppName: EndSetAudioConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::IChannelSession::*)(::System::IAsyncResult*)>(&VivoxUnity::IChannelSession::EndSetAudioConnected)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "EndSetAudioConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::BeginSetTextConnected
// Il2CppName: BeginSetTextConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::IChannelSession::*)(bool, ::System::AsyncCallback*)>(&VivoxUnity::IChannelSession::BeginSetTextConnected)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "BeginSetTextConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::EndSetTextConnected
// Il2CppName: EndSetTextConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::IChannelSession::*)(::System::IAsyncResult*)>(&VivoxUnity::IChannelSession::EndSetTextConnected)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "EndSetTextConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::BeginSendText
// Il2CppName: BeginSendText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::IChannelSession::*)(::StringW, ::System::AsyncCallback*)>(&VivoxUnity::IChannelSession::BeginSendText)> {
  static const MethodInfo* get() {
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "BeginSendText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{message, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::BeginSendText
// Il2CppName: BeginSendText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::IChannelSession::*)(::StringW, ::StringW, ::StringW, ::StringW, ::System::AsyncCallback*)>(&VivoxUnity::IChannelSession::BeginSendText)> {
  static const MethodInfo* get() {
    static auto* language = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* message = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* applicationStanzaNamespace = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* applicationStanzaBody = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "BeginSendText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{language, message, applicationStanzaNamespace, applicationStanzaBody, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::EndSendText
// Il2CppName: EndSendText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::IChannelSession::*)(::System::IAsyncResult*)>(&VivoxUnity::IChannelSession::EndSendText)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "EndSendText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::BeginSessionArchiveQuery
// Il2CppName: BeginSessionArchiveQuery
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::IChannelSession::*)(::System::Nullable_1<::System::DateTime>, ::System::Nullable_1<::System::DateTime>, ::StringW, ::VivoxUnity::AccountId*, uint, ::StringW, ::StringW, int, ::System::AsyncCallback*)>(&VivoxUnity::IChannelSession::BeginSessionArchiveQuery)> {
  static const MethodInfo* get() {
    static auto* timeStart = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "DateTime")})->byval_arg;
    static auto* timeEnd = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Nullable`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "DateTime")})->byval_arg;
    static auto* searchText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("VivoxUnity", "AccountId")->byval_arg;
    static auto* max = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    static auto* afterId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* beforeId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* firstMessageIndex = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "BeginSessionArchiveQuery", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{timeStart, timeEnd, searchText, userId, max, afterId, beforeId, firstMessageIndex, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::EndSessionArchiveQuery
// Il2CppName: EndSessionArchiveQuery
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::IChannelSession::*)(::System::IAsyncResult*)>(&VivoxUnity::IChannelSession::EndSessionArchiveQuery)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "EndSessionArchiveQuery", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::GetConnectToken
// Il2CppName: GetConnectToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::IChannelSession::*)(::StringW, ::System::TimeSpan)>(&VivoxUnity::IChannelSession::GetConnectToken)> {
  static const MethodInfo* get() {
    static auto* tokenSigningKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* tokenExpirationDuration = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "GetConnectToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenSigningKey, tokenExpirationDuration});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::Set3DPosition
// Il2CppName: Set3DPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::IChannelSession::*)(::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Vector3, ::UnityEngine::Vector3)>(&VivoxUnity::IChannelSession::Set3DPosition)> {
  static const MethodInfo* get() {
    static auto* speakerPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* listenerPos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* listenerAtOrient = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* listenerUpOrient = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "Set3DPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{speakerPos, listenerPos, listenerAtOrient, listenerUpOrient});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::BeginSetChannelTranscription
// Il2CppName: BeginSetChannelTranscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (VivoxUnity::IChannelSession::*)(bool, ::StringW, ::System::AsyncCallback*)>(&VivoxUnity::IChannelSession::BeginSetChannelTranscription)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* accessToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "BeginSetChannelTranscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, accessToken, callback});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::EndSetChannelTranscription
// Il2CppName: EndSetChannelTranscription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::IChannelSession::*)(::System::IAsyncResult*)>(&VivoxUnity::IChannelSession::EndSetChannelTranscription)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "EndSetChannelTranscription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
// Writing MetadataGetter for method: VivoxUnity::IChannelSession::GetTranscriptionToken
// Il2CppName: GetTranscriptionToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::IChannelSession::*)(::StringW, ::System::TimeSpan)>(&VivoxUnity::IChannelSession::GetTranscriptionToken)> {
  static const MethodInfo* get() {
    static auto* tokenSigningKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* tokenExpirationDuration = &::il2cpp_utils::GetClassFromName("System", "TimeSpan")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::IChannelSession*), "GetTranscriptionToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tokenSigningKey, tokenExpirationDuration});
  }
};
