// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VivoxUnity.TTSDestination
#include "VivoxUnity/TTSDestination.hpp"
// Including type: VivoxUnity.TTSMessageState
#include "VivoxUnity/TTSMessageState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: ITTSVoice
  class ITTSVoice;
  // Forward declaring type: ITextToSpeech
  class ITextToSpeech;
  // Forward declaring type: ILoginSession
  class ILoginSession;
}
// Forward declaring namespace: System::ComponentModel
namespace System::ComponentModel {
  // Forward declaring type: PropertyChangedEventHandler
  class PropertyChangedEventHandler;
}
// Completed forward declares
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Forward declaring type: TTSMessage
  class TTSMessage;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VivoxUnity::TTSMessage);
DEFINE_IL2CPP_ARG_TYPE(::VivoxUnity::TTSMessage*, "VivoxUnity", "TTSMessage");
// Type namespace: VivoxUnity
namespace VivoxUnity {
  // Size: 0x50
  #pragma pack(push, 1)
  // Autogenerated type: VivoxUnity.TTSMessage
  // [TokenAttribute] Offset: FFFFFFFF
  class TTSMessage : public ::Il2CppObject {
    public:
    public:
    // private readonly System.String _text
    // Size: 0x8
    // Offset: 0x10
    ::StringW text;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private readonly VivoxUnity.TTSDestination _destination
    // Size: 0x4
    // Offset: 0x18
    ::VivoxUnity::TTSDestination destination;
    // Field size check
    static_assert(sizeof(::VivoxUnity::TTSDestination) == 0x4);
    // Padding between fields: destination and: voice
    char __padding1[0x4] = {};
    // private VivoxUnity.ITTSVoice _voice
    // Size: 0x8
    // Offset: 0x20
    ::VivoxUnity::ITTSVoice* voice;
    // Field size check
    static_assert(sizeof(::VivoxUnity::ITTSVoice*) == 0x8);
    // private VivoxUnity.TTSMessageState _state
    // Size: 0x4
    // Offset: 0x28
    ::VivoxUnity::TTSMessageState state;
    // Field size check
    static_assert(sizeof(::VivoxUnity::TTSMessageState) == 0x4);
    // private System.UInt32 _numConsumers
    // Size: 0x4
    // Offset: 0x2C
    uint numConsumers;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // private System.Double _duration
    // Size: 0x8
    // Offset: 0x30
    double duration;
    // Field size check
    static_assert(sizeof(double) == 0x8);
    // private System.UInt32 _key
    // Size: 0x4
    // Offset: 0x38
    uint key;
    // Field size check
    static_assert(sizeof(uint) == 0x4);
    // Padding between fields: key and: ttsSubSystem
    char __padding6[0x4] = {};
    // private VivoxUnity.ITextToSpeech _ttsSubSystem
    // Size: 0x8
    // Offset: 0x40
    ::VivoxUnity::ITextToSpeech* ttsSubSystem;
    // Field size check
    static_assert(sizeof(::VivoxUnity::ITextToSpeech*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xABDC58
    // private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
    // Size: 0x8
    // Offset: 0x48
    ::System::ComponentModel::PropertyChangedEventHandler* PropertyChanged;
    // Field size check
    static_assert(sizeof(::System::ComponentModel::PropertyChangedEventHandler*) == 0x8);
    public:
    // Get instance field reference: private readonly System.String _text
    [[deprecated("Use field access instead!")]] ::StringW& dyn__text();
    // Get instance field reference: private readonly VivoxUnity.TTSDestination _destination
    [[deprecated("Use field access instead!")]] ::VivoxUnity::TTSDestination& dyn__destination();
    // Get instance field reference: private VivoxUnity.ITTSVoice _voice
    [[deprecated("Use field access instead!")]] ::VivoxUnity::ITTSVoice*& dyn__voice();
    // Get instance field reference: private VivoxUnity.TTSMessageState _state
    [[deprecated("Use field access instead!")]] ::VivoxUnity::TTSMessageState& dyn__state();
    // Get instance field reference: private System.UInt32 _numConsumers
    [[deprecated("Use field access instead!")]] uint& dyn__numConsumers();
    // Get instance field reference: private System.Double _duration
    [[deprecated("Use field access instead!")]] double& dyn__duration();
    // Get instance field reference: private System.UInt32 _key
    [[deprecated("Use field access instead!")]] uint& dyn__key();
    // Get instance field reference: private VivoxUnity.ITextToSpeech _ttsSubSystem
    [[deprecated("Use field access instead!")]] ::VivoxUnity::ITextToSpeech*& dyn__ttsSubSystem();
    // Get instance field reference: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
    [[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& dyn_PropertyChanged();
    // public System.Void .ctor(System.String text, VivoxUnity.TTSDestination destination)
    // Offset: 0x12D9634
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TTSMessage* New_ctor(::StringW text, ::VivoxUnity::TTSDestination destination) {
      static auto ___internal__logger = ::Logger::get().WithContext("::VivoxUnity::TTSMessage::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TTSMessage*, creationType>(text, destination)));
    }
    // public System.String get_Text()
    // Offset: 0x12D63F0
    ::StringW get_Text();
    // public VivoxUnity.TTSDestination get_Destination()
    // Offset: 0x12D63F8
    ::VivoxUnity::TTSDestination get_Destination();
    // public VivoxUnity.ITTSVoice get_Voice()
    // Offset: 0x12D63E8
    ::VivoxUnity::ITTSVoice* get_Voice();
    // System.Void set_Voice(VivoxUnity.ITTSVoice value)
    // Offset: 0x12D6358
    void set_Voice(::VivoxUnity::ITTSVoice* value);
    // public VivoxUnity.TTSMessageState get_State()
    // Offset: 0x12D98C4
    ::VivoxUnity::TTSMessageState get_State();
    // System.Void set_State(VivoxUnity.TTSMessageState value)
    // Offset: 0x12D6434
    void set_State(::VivoxUnity::TTSMessageState value);
    // public System.UInt32 get_NumConsumers()
    // Offset: 0x12D98CC
    uint get_NumConsumers();
    // System.Void set_NumConsumers(System.UInt32 value)
    // Offset: 0x12D7604
    void set_NumConsumers(uint value);
    // public System.Double get_Duration()
    // Offset: 0x12D98D4
    double get_Duration();
    // System.Void set_Duration(System.Double value)
    // Offset: 0x12D7664
    void set_Duration(double value);
    // System.UInt32 get_Key()
    // Offset: 0x12D6890
    uint get_Key();
    // System.Void set_Key(System.UInt32 value)
    // Offset: 0x12D6424
    void set_Key(uint value);
    // VivoxUnity.ITextToSpeech get_TTS()
    // Offset: 0x12D98DC
    ::VivoxUnity::ITextToSpeech* get_TTS();
    // System.Void set_TTS(VivoxUnity.ITextToSpeech value)
    // Offset: 0x12D642C
    void set_TTS(::VivoxUnity::ITextToSpeech* value);
    // public System.Void Speak(VivoxUnity.ILoginSession userSpeaking)
    // Offset: 0x12D98E4
    void Speak(::VivoxUnity::ILoginSession* userSpeaking);
    // public System.Void Cancel()
    // Offset: 0x12D9A20
    void Cancel();
    // private System.Boolean Equals(VivoxUnity.TTSMessage other)
    // Offset: 0x12D9C7C
    bool Equals(::VivoxUnity::TTSMessage* other);
    // public System.Void add_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler value)
    // Offset: 0x12D6494
    void add_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value);
    // public System.Void remove_PropertyChanged(System.ComponentModel.PropertyChangedEventHandler value)
    // Offset: 0x12D9FB0
    void remove_PropertyChanged(::System::ComponentModel::PropertyChangedEventHandler* value);
    // private System.Void OnPropertyChanged(System.String propertyName)
    // Offset: 0x12D9830
    void OnPropertyChanged(::StringW propertyName);
    // System.Boolean AlreadySpoken()
    // Offset: 0x12D61E8
    bool AlreadySpoken();
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x12D9B54
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x12D9E8C
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
  }; // VivoxUnity.TTSMessage
  #pragma pack(pop)
  static check_size<sizeof(TTSMessage), 72 + sizeof(::System::ComponentModel::PropertyChangedEventHandler*)> __VivoxUnity_TTSMessageSizeCheck;
  static_assert(sizeof(TTSMessage) == 0x50);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::get_Text
// Il2CppName: get_Text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VivoxUnity::TTSMessage::*)()>(&VivoxUnity::TTSMessage::get_Text)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "get_Text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::get_Destination
// Il2CppName: get_Destination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::TTSDestination (VivoxUnity::TTSMessage::*)()>(&VivoxUnity::TTSMessage::get_Destination)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "get_Destination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::get_Voice
// Il2CppName: get_Voice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::ITTSVoice* (VivoxUnity::TTSMessage::*)()>(&VivoxUnity::TTSMessage::get_Voice)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "get_Voice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::set_Voice
// Il2CppName: set_Voice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::TTSMessage::*)(::VivoxUnity::ITTSVoice*)>(&VivoxUnity::TTSMessage::set_Voice)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VivoxUnity", "ITTSVoice")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "set_Voice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::get_State
// Il2CppName: get_State
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::TTSMessageState (VivoxUnity::TTSMessage::*)()>(&VivoxUnity::TTSMessage::get_State)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "get_State", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::set_State
// Il2CppName: set_State
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::TTSMessage::*)(::VivoxUnity::TTSMessageState)>(&VivoxUnity::TTSMessage::set_State)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VivoxUnity", "TTSMessageState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "set_State", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::get_NumConsumers
// Il2CppName: get_NumConsumers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (VivoxUnity::TTSMessage::*)()>(&VivoxUnity::TTSMessage::get_NumConsumers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "get_NumConsumers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::set_NumConsumers
// Il2CppName: set_NumConsumers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::TTSMessage::*)(uint)>(&VivoxUnity::TTSMessage::set_NumConsumers)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "set_NumConsumers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::get_Duration
// Il2CppName: get_Duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (VivoxUnity::TTSMessage::*)()>(&VivoxUnity::TTSMessage::get_Duration)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "get_Duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::set_Duration
// Il2CppName: set_Duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::TTSMessage::*)(double)>(&VivoxUnity::TTSMessage::set_Duration)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "set_Duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (VivoxUnity::TTSMessage::*)()>(&VivoxUnity::TTSMessage::get_Key)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::set_Key
// Il2CppName: set_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::TTSMessage::*)(uint)>(&VivoxUnity::TTSMessage::set_Key)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "UInt32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "set_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::get_TTS
// Il2CppName: get_TTS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VivoxUnity::ITextToSpeech* (VivoxUnity::TTSMessage::*)()>(&VivoxUnity::TTSMessage::get_TTS)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "get_TTS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::set_TTS
// Il2CppName: set_TTS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::TTSMessage::*)(::VivoxUnity::ITextToSpeech*)>(&VivoxUnity::TTSMessage::set_TTS)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("VivoxUnity", "ITextToSpeech")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "set_TTS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::Speak
// Il2CppName: Speak
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::TTSMessage::*)(::VivoxUnity::ILoginSession*)>(&VivoxUnity::TTSMessage::Speak)> {
  static const MethodInfo* get() {
    static auto* userSpeaking = &::il2cpp_utils::GetClassFromName("VivoxUnity", "ILoginSession")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "Speak", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{userSpeaking});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::Cancel
// Il2CppName: Cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::TTSMessage::*)()>(&VivoxUnity::TTSMessage::Cancel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "Cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VivoxUnity::TTSMessage::*)(::VivoxUnity::TTSMessage*)>(&VivoxUnity::TTSMessage::Equals)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("VivoxUnity", "TTSMessage")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::add_PropertyChanged
// Il2CppName: add_PropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::TTSMessage::*)(::System::ComponentModel::PropertyChangedEventHandler*)>(&VivoxUnity::TTSMessage::add_PropertyChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "add_PropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::remove_PropertyChanged
// Il2CppName: remove_PropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::TTSMessage::*)(::System::ComponentModel::PropertyChangedEventHandler*)>(&VivoxUnity::TTSMessage::remove_PropertyChanged)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System.ComponentModel", "PropertyChangedEventHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "remove_PropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::OnPropertyChanged
// Il2CppName: OnPropertyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VivoxUnity::TTSMessage::*)(::StringW)>(&VivoxUnity::TTSMessage::OnPropertyChanged)> {
  static const MethodInfo* get() {
    static auto* propertyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "OnPropertyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyName});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::AlreadySpoken
// Il2CppName: AlreadySpoken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VivoxUnity::TTSMessage::*)()>(&VivoxUnity::TTSMessage::AlreadySpoken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "AlreadySpoken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VivoxUnity::TTSMessage::*)(::Il2CppObject*)>(&VivoxUnity::TTSMessage::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: VivoxUnity::TTSMessage::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VivoxUnity::TTSMessage::*)()>(&VivoxUnity::TTSMessage::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VivoxUnity::TTSMessage*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
