// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: CharacterTalentsResponse
  class CharacterTalentsResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExtUI::CharacterTalentsResponse);
DEFINE_IL2CPP_ARG_TYPE(::ExtUI::CharacterTalentsResponse*, "ExtUI", "CharacterTalentsResponse");
// Type namespace: ExtUI
namespace ExtUI {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: ExtUI.CharacterTalentsResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class CharacterTalentsResponse : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 tierone
    // Size: 0x4
    // Offset: 0x10
    int tierone;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 tiertwo
    // Size: 0x4
    // Offset: 0x14
    int tiertwo;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 tierthree
    // Size: 0x4
    // Offset: 0x18
    int tierthree;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 tierfour
    // Size: 0x4
    // Offset: 0x1C
    int tierfour;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 tierfive
    // Size: 0x4
    // Offset: 0x20
    int tierfive;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.Int32 tierone
    [[deprecated("Use field access instead!")]] int& dyn_tierone();
    // Get instance field reference: public System.Int32 tiertwo
    [[deprecated("Use field access instead!")]] int& dyn_tiertwo();
    // Get instance field reference: public System.Int32 tierthree
    [[deprecated("Use field access instead!")]] int& dyn_tierthree();
    // Get instance field reference: public System.Int32 tierfour
    [[deprecated("Use field access instead!")]] int& dyn_tierfour();
    // Get instance field reference: public System.Int32 tierfive
    [[deprecated("Use field access instead!")]] int& dyn_tierfive();
    // public System.Void .ctor()
    // Offset: 0xF498D0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CharacterTalentsResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::CharacterTalentsResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CharacterTalentsResponse*, creationType>()));
    }
  }; // ExtUI.CharacterTalentsResponse
  #pragma pack(pop)
  static check_size<sizeof(CharacterTalentsResponse), 32 + sizeof(int)> __ExtUI_CharacterTalentsResponseSizeCheck;
  static_assert(sizeof(CharacterTalentsResponse) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExtUI::CharacterTalentsResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
