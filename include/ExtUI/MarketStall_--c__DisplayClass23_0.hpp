// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ExtUI.MarketStall
#include "ExtUI/MarketStall.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: BinaryWriter
  class BinaryWriter;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExtUI::MarketStall::$$c__DisplayClass23_0);
DEFINE_IL2CPP_ARG_TYPE(::ExtUI::MarketStall::$$c__DisplayClass23_0*, "ExtUI", "MarketStall/<>c__DisplayClass23_0");
// Type namespace: ExtUI
namespace ExtUI {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: ExtUI.MarketStall/<>c__DisplayClass23_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AD1CB8
  class MarketStall::$$c__DisplayClass23_0 : public ::Il2CppObject {
    public:
    public:
    // public System.String newprices
    // Size: 0x8
    // Offset: 0x10
    ::StringW newprices;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Creating conversion operator: operator ::StringW
    constexpr operator ::StringW() const noexcept {
      return newprices;
    }
    // Get instance field reference: public System.String newprices
    [[deprecated("Use field access instead!")]] ::StringW& dyn_newprices();
    // public System.Void .ctor()
    // Offset: 0x28E8734
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static MarketStall::$$c__DisplayClass23_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::MarketStall::$$c__DisplayClass23_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<MarketStall::$$c__DisplayClass23_0*, creationType>()));
    }
    // System.Void <SavePrices>b__0(System.IO.BinaryWriter writer)
    // Offset: 0x28E8BFC
    void $SavePrices$b__0(::System::IO::BinaryWriter* writer);
  }; // ExtUI.MarketStall/<>c__DisplayClass23_0
  #pragma pack(pop)
  static check_size<sizeof(MarketStall::$$c__DisplayClass23_0), 16 + sizeof(::StringW)> __ExtUI_MarketStall_$$c__DisplayClass23_0SizeCheck;
  static_assert(sizeof(MarketStall::$$c__DisplayClass23_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExtUI::MarketStall::$$c__DisplayClass23_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExtUI::MarketStall::$$c__DisplayClass23_0::$SavePrices$b__0
// Il2CppName: <SavePrices>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::MarketStall::$$c__DisplayClass23_0::*)(::System::IO::BinaryWriter*)>(&ExtUI::MarketStall::$$c__DisplayClass23_0::$SavePrices$b__0)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("System.IO", "BinaryWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::MarketStall::$$c__DisplayClass23_0*), "<SavePrices>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer});
  }
};
