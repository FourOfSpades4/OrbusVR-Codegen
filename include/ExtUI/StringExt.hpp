// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: StringExt
  class StringExt;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExtUI::StringExt);
DEFINE_IL2CPP_ARG_TYPE(::ExtUI::StringExt*, "ExtUI", "StringExt");
// Type namespace: ExtUI
namespace ExtUI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: ExtUI.StringExt
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class StringExt : public ::Il2CppObject {
    public:
    // static public System.String Truncate(System.String value, System.Int32 maxLength)
    // Offset: 0x28E92AC
    static ::StringW Truncate(::StringW value, int maxLength);
  }; // ExtUI.StringExt
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExtUI::StringExt::Truncate
// Il2CppName: Truncate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW, int)>(&ExtUI::StringExt::Truncate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* maxLength = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::StringExt*), "Truncate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value, maxLength});
  }
};
