// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
  // Forward declaring type: TradeOffer
  class TradeOffer;
  // Forward declaring type: FriendsListEntry
  class FriendsListEntry;
  // Forward declaring type: FellowshipListEntry
  class FellowshipListEntry;
  // Forward declaring type: AccountCharacterList
  class AccountCharacterList;
  // Forward declaring type: BlogPostList
  class BlogPostList;
  // Forward declaring type: InventoryItem
  class InventoryItem;
  // Forward declaring type: PrivateMessage
  class PrivateMessage;
  // Forward declaring type: LfgPost
  class LfgPost;
  // Forward declaring type: CharacterStatsArray
  class CharacterStatsArray;
  // Forward declaring type: CharacterTalentsArray
  class CharacterTalentsArray;
  // Forward declaring type: CharacterPerksArray
  class CharacterPerksArray;
  // Forward declaring type: CharacterAchievementsArray
  class CharacterAchievementsArray;
  // Forward declaring type: TeleportDestinationsArray
  class TeleportDestinationsArray;
  // Forward declaring type: InfusionCalculationArray
  class InfusionCalculationArray;
  // Forward declaring type: PrivateMessageThread
  class PrivateMessageThread;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: ItemContainer
  class ItemContainer;
  // Forward declaring type: Vendor
  class Vendor;
  // Forward declaring type: PlayerCharacter
  class PlayerCharacter;
  // Forward declaring type: Monster
  class Monster;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
  // Forward declaring type: Quaternion
  struct Quaternion;
}
// Forward declaring namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonData
  class JsonData;
}
// Forward declaring namespace: Facepunch::Steamworks
namespace Facepunch::Steamworks {
  // Forward declaring type: Client
  class Client;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Forward declaring namespace: Oculus::Platform
namespace Oculus::Platform {
  // Forward declaring type: Message`1<T>
  template<typename T>
  class Message_1;
}
// Forward declaring namespace: Oculus::Platform::Models
namespace Oculus::Platform::Models {
  // Forward declaring type: Purchase
  class Purchase;
}
// Completed forward declares
// Type namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InterfaceAPI
  class InterfaceAPI;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExtUI::InterfaceAPI);
DEFINE_IL2CPP_ARG_TYPE(::ExtUI::InterfaceAPI*, "ExtUI", "InterfaceAPI");
// Type namespace: ExtUI
namespace ExtUI {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: ExtUI.InterfaceAPI
  // [TokenAttribute] Offset: FFFFFFFF
  class InterfaceAPI : public ::Il2CppObject {
    public:
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass93_0
    class $$c__DisplayClass93_0;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass93_1
    class $$c__DisplayClass93_1;
    // Nested type: ::ExtUI::InterfaceAPI::$$c
    class $$c;
    // Nested type: ::ExtUI::InterfaceAPI::$fetchGameTokenFromStore$d__95
    class $fetchGameTokenFromStore$d__95;
    // Nested type: ::ExtUI::InterfaceAPI::$fetchLoginToken$d__96
    class $fetchLoginToken$d__96;
    // Nested type: ::ExtUI::InterfaceAPI::$runSubmitAccountLink$d__98
    class $runSubmitAccountLink$d__98;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass114_0
    class $$c__DisplayClass114_0;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass115_0
    class $$c__DisplayClass115_0;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass116_0
    class $$c__DisplayClass116_0;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass117_0
    class $$c__DisplayClass117_0;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass118_0
    class $$c__DisplayClass118_0;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass119_0
    class $$c__DisplayClass119_0;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass120_0
    class $$c__DisplayClass120_0;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass121_0
    class $$c__DisplayClass121_0;
    // Nested type: ::ExtUI::InterfaceAPI::$fetchAccountList$d__123
    class $fetchAccountList$d__123;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass124_0
    class $$c__DisplayClass124_0;
    // Nested type: ::ExtUI::InterfaceAPI::$fetchNews$d__125
    class $fetchNews$d__125;
    // Nested type: ::ExtUI::InterfaceAPI::$submitNewCharacter$d__130
    class $submitNewCharacter$d__130;
    // Nested type: ::ExtUI::InterfaceAPI::$deleteCharacter$d__132
    class $deleteCharacter$d__132;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass305_0
    class $$c__DisplayClass305_0;
    // Nested type: ::ExtUI::InterfaceAPI::$initiateSteamIap$d__316
    class $initiateSteamIap$d__316;
    // Nested type: ::ExtUI::InterfaceAPI::$finalizeSteamIap$d__317
    class $finalizeSteamIap$d__317;
    // Nested type: ::ExtUI::InterfaceAPI::$finalizeOculusIap$d__318
    class $finalizeOculusIap$d__318;
    // Nested type: ::ExtUI::InterfaceAPI::$$c__DisplayClass322_0
    class $$c__DisplayClass322_0;
    // Get static field: static private System.String domainUrl
    static ::StringW _get_domainUrl();
    // Set static field: static private System.String domainUrl
    static void _set_domainUrl(::StringW value);
    // Get static field: static public System.String EMPTYSTRING
    static ::StringW _get_EMPTYSTRING();
    // Set static field: static public System.String EMPTYSTRING
    static void _set_EMPTYSTRING(::StringW value);
    // Get static field: static private System.String tokenStoreType
    static ::StringW _get_tokenStoreType();
    // Set static field: static private System.String tokenStoreType
    static void _set_tokenStoreType(::StringW value);
    // Get static field: static private ExtUI.InventoryItemInstance[] inventory
    static ::ArrayW<::ExtUI::InventoryItemInstance*> _get_inventory();
    // Set static field: static private ExtUI.InventoryItemInstance[] inventory
    static void _set_inventory(::ArrayW<::ExtUI::InventoryItemInstance*> value);
    // Get static field: static private System.Action currentCharlistCallback
    static ::System::Action* _get_currentCharlistCallback();
    // Set static field: static private System.Action currentCharlistCallback
    static void _set_currentCharlistCallback(::System::Action* value);
    // Get static field: static private System.Action currentNewsCallback
    static ::System::Action* _get_currentNewsCallback();
    // Set static field: static private System.Action currentNewsCallback
    static void _set_currentNewsCallback(::System::Action* value);
    // [CompilerGeneratedAttribute] Offset: 0xAE122C
    // Get static field: static private ExtUI.TradeOffer <currentTradeOffer>k__BackingField
    static ::ExtUI::TradeOffer* _get_$currentTradeOffer$k__BackingField();
    // Set static field: static private ExtUI.TradeOffer <currentTradeOffer>k__BackingField
    static void _set_$currentTradeOffer$k__BackingField(::ExtUI::TradeOffer* value);
    // Get static field: static private System.Collections.Generic.List`1<System.Int32> currentOfferedItems
    static ::System::Collections::Generic::List_1<int>* _get_currentOfferedItems();
    // Set static field: static private System.Collections.Generic.List`1<System.Int32> currentOfferedItems
    static void _set_currentOfferedItems(::System::Collections::Generic::List_1<int>* value);
    // Get static field: static private System.Collections.Generic.List`1<ExtUI.FriendsListEntry> currentFriendsList
    static ::System::Collections::Generic::List_1<::ExtUI::FriendsListEntry*>* _get_currentFriendsList();
    // Set static field: static private System.Collections.Generic.List`1<ExtUI.FriendsListEntry> currentFriendsList
    static void _set_currentFriendsList(::System::Collections::Generic::List_1<::ExtUI::FriendsListEntry*>* value);
    // Get static field: static private ExtUI.FellowshipListEntry[] currentFellowshipList
    static ::ArrayW<::ExtUI::FellowshipListEntry*> _get_currentFellowshipList();
    // Set static field: static private ExtUI.FellowshipListEntry[] currentFellowshipList
    static void _set_currentFellowshipList(::ArrayW<::ExtUI::FellowshipListEntry*> value);
    // Get static field: static private MagicalActual.ItemContainer currentAttachedContainer
    static ::MagicalActual::ItemContainer* _get_currentAttachedContainer();
    // Set static field: static private MagicalActual.ItemContainer currentAttachedContainer
    static void _set_currentAttachedContainer(::MagicalActual::ItemContainer* value);
    // Get static field: static private MagicalActual.Vendor currentAttachedVendor
    static ::MagicalActual::Vendor* _get_currentAttachedVendor();
    // Set static field: static private MagicalActual.Vendor currentAttachedVendor
    static void _set_currentAttachedVendor(::MagicalActual::Vendor* value);
    // Get static field: static private System.Int32 currentRepairCost
    static int _get_currentRepairCost();
    // Set static field: static private System.Int32 currentRepairCost
    static void _set_currentRepairCost(int value);
    // Get static field: static private System.Int32 currentRepairDurability
    static int _get_currentRepairDurability();
    // Set static field: static private System.Int32 currentRepairDurability
    static void _set_currentRepairDurability(int value);
    // Get static field: static private System.Action`1<System.String> currentNewCharCallback
    static ::System::Action_1<::StringW>* _get_currentNewCharCallback();
    // Set static field: static private System.Action`1<System.String> currentNewCharCallback
    static void _set_currentNewCharCallback(::System::Action_1<::StringW>* value);
    // Get static field: static private System.Action`1<System.String> currentCharacterDeleteCallback
    static ::System::Action_1<::StringW>* _get_currentCharacterDeleteCallback();
    // Set static field: static private System.Action`1<System.String> currentCharacterDeleteCallback
    static void _set_currentCharacterDeleteCallback(::System::Action_1<::StringW>* value);
    // Get static field: static private System.Action`1<System.String> currentConnectTokenCallback
    static ::System::Action_1<::StringW>* _get_currentConnectTokenCallback();
    // Set static field: static private System.Action`1<System.String> currentConnectTokenCallback
    static void _set_currentConnectTokenCallback(::System::Action_1<::StringW>* value);
    // [CompilerGeneratedAttribute] Offset: 0xAE123C
    // Get static field: static private ExtUI.AccountCharacterList <charList>k__BackingField
    static ::ExtUI::AccountCharacterList* _get_$charList$k__BackingField();
    // Set static field: static private ExtUI.AccountCharacterList <charList>k__BackingField
    static void _set_$charList$k__BackingField(::ExtUI::AccountCharacterList* value);
    // [CompilerGeneratedAttribute] Offset: 0xAE124C
    // Get static field: static private ExtUI.BlogPostList <currentNews>k__BackingField
    static ::ExtUI::BlogPostList* _get_$currentNews$k__BackingField();
    // Set static field: static private ExtUI.BlogPostList <currentNews>k__BackingField
    static void _set_$currentNews$k__BackingField(::ExtUI::BlogPostList* value);
    // [CompilerGeneratedAttribute] Offset: 0xAE125C
    // Get static field: static private System.String <gameToken>k__BackingField
    static ::StringW _get_$gameToken$k__BackingField();
    // Set static field: static private System.String <gameToken>k__BackingField
    static void _set_$gameToken$k__BackingField(::StringW value);
    // [CompilerGeneratedAttribute] Offset: 0xAE126C
    // Get static field: static private System.String <gameServerUrl>k__BackingField
    static ::StringW _get_$gameServerUrl$k__BackingField();
    // Set static field: static private System.String <gameServerUrl>k__BackingField
    static void _set_$gameServerUrl$k__BackingField(::StringW value);
    // [CompilerGeneratedAttribute] Offset: 0xAE127C
    // Get static field: static private System.String <connectionProtocol>k__BackingField
    static ::StringW _get_$connectionProtocol$k__BackingField();
    // Set static field: static private System.String <connectionProtocol>k__BackingField
    static void _set_$connectionProtocol$k__BackingField(::StringW value);
    // [CompilerGeneratedAttribute] Offset: 0xAE128C
    // Get static field: static private System.String <loginToken>k__BackingField
    static ::StringW _get_$loginToken$k__BackingField();
    // Set static field: static private System.String <loginToken>k__BackingField
    static void _set_$loginToken$k__BackingField(::StringW value);
    // [CompilerGeneratedAttribute] Offset: 0xAE129C
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,ExtUI.InventoryItem> <gameItems>k__BackingField
    static ::System::Collections::Generic::Dictionary_2<int, ::ExtUI::InventoryItem*>* _get_$gameItems$k__BackingField();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,ExtUI.InventoryItem> <gameItems>k__BackingField
    static void _set_$gameItems$k__BackingField(::System::Collections::Generic::Dictionary_2<int, ::ExtUI::InventoryItem*>* value);
    // Get static field: static private System.Action`1<System.String> currentKeyboardCallback
    static ::System::Action_1<::StringW>* _get_currentKeyboardCallback();
    // Set static field: static private System.Action`1<System.String> currentKeyboardCallback
    static void _set_currentKeyboardCallback(::System::Action_1<::StringW>* value);
    // Get static field: static public UnityEngine.GameObject lastMenuTouched
    static ::UnityEngine::GameObject* _get_lastMenuTouched();
    // Set static field: static public UnityEngine.GameObject lastMenuTouched
    static void _set_lastMenuTouched(::UnityEngine::GameObject* value);
    // Get static field: static public UnityEngine.Vector3 lastMenuTouchPosition
    static ::UnityEngine::Vector3 _get_lastMenuTouchPosition();
    // Set static field: static public UnityEngine.Vector3 lastMenuTouchPosition
    static void _set_lastMenuTouchPosition(::UnityEngine::Vector3 value);
    // Get static field: static public System.String currentQueueName
    static ::StringW _get_currentQueueName();
    // Set static field: static public System.String currentQueueName
    static void _set_currentQueueName(::StringW value);
    // Get static field: static public System.String currentQueueStatus
    static ::StringW _get_currentQueueStatus();
    // Set static field: static public System.String currentQueueStatus
    static void _set_currentQueueStatus(::StringW value);
    // Get static field: static public System.Boolean FingerGestureEnabled
    static bool _get_FingerGestureEnabled();
    // Set static field: static public System.Boolean FingerGestureEnabled
    static void _set_FingerGestureEnabled(bool value);
    // Get static field: static public System.Boolean HelpSignsEnabled
    static bool _get_HelpSignsEnabled();
    // Set static field: static public System.Boolean HelpSignsEnabled
    static void _set_HelpSignsEnabled(bool value);
    // Get static field: static public System.Boolean MoviesEnabled
    static bool _get_MoviesEnabled();
    // Set static field: static public System.Boolean MoviesEnabled
    static void _set_MoviesEnabled(bool value);
    // Get static field: static public System.Boolean StatsEnabled
    static bool _get_StatsEnabled();
    // Set static field: static public System.Boolean StatsEnabled
    static void _set_StatsEnabled(bool value);
    // Get static field: static public System.Boolean VerticalDirectionEnabled
    static bool _get_VerticalDirectionEnabled();
    // Set static field: static public System.Boolean VerticalDirectionEnabled
    static void _set_VerticalDirectionEnabled(bool value);
    // Get static field: static public System.Boolean StaticHealthBar
    static bool _get_StaticHealthBar();
    // Set static field: static public System.Boolean StaticHealthBar
    static void _set_StaticHealthBar(bool value);
    // Get static field: static public System.Boolean CombatSprintEnabled
    static bool _get_CombatSprintEnabled();
    // Set static field: static public System.Boolean CombatSprintEnabled
    static void _set_CombatSprintEnabled(bool value);
    // Get static field: static public System.Boolean DragonRaceFadeEnabled
    static bool _get_DragonRaceFadeEnabled();
    // Set static field: static public System.Boolean DragonRaceFadeEnabled
    static void _set_DragonRaceFadeEnabled(bool value);
    // Get static field: static public System.Boolean RelocationGrabPointsEnabled
    static bool _get_RelocationGrabPointsEnabled();
    // Set static field: static public System.Boolean RelocationGrabPointsEnabled
    static void _set_RelocationGrabPointsEnabled(bool value);
    // Get static field: static public System.Boolean MapEnabled
    static bool _get_MapEnabled();
    // Set static field: static public System.Boolean MapEnabled
    static void _set_MapEnabled(bool value);
    // Get static field: static public System.Boolean FellowshipChatEnabled
    static bool _get_FellowshipChatEnabled();
    // Set static field: static public System.Boolean FellowshipChatEnabled
    static void _set_FellowshipChatEnabled(bool value);
    // Get static field: static public System.Boolean FacialExpressionsEnabled
    static bool _get_FacialExpressionsEnabled();
    // Set static field: static public System.Boolean FacialExpressionsEnabled
    static void _set_FacialExpressionsEnabled(bool value);
    // Get static field: static public LitJson.JsonData translations
    static ::LitJson::JsonData* _get_translations();
    // Set static field: static public LitJson.JsonData translations
    static void _set_translations(::LitJson::JsonData* value);
    // Get static field: static public System.Collections.Generic.List`1<ExtUI.PrivateMessage> myPrivateMessages
    static ::System::Collections::Generic::List_1<::ExtUI::PrivateMessage*>* _get_myPrivateMessages();
    // Set static field: static public System.Collections.Generic.List`1<ExtUI.PrivateMessage> myPrivateMessages
    static void _set_myPrivateMessages(::System::Collections::Generic::List_1<::ExtUI::PrivateMessage*>* value);
    // Get static field: static public System.Collections.Generic.List`1<ExtUI.LfgPost> myLfgPosts
    static ::System::Collections::Generic::List_1<::ExtUI::LfgPost*>* _get_myLfgPosts();
    // Set static field: static public System.Collections.Generic.List`1<ExtUI.LfgPost> myLfgPosts
    static void _set_myLfgPosts(::System::Collections::Generic::List_1<::ExtUI::LfgPost*>* value);
    // Get static field: static private System.Int32 lastApplyOldIdx
    static int _get_lastApplyOldIdx();
    // Set static field: static private System.Int32 lastApplyOldIdx
    static void _set_lastApplyOldIdx(int value);
    // Get static field: static private System.Int32 lastApplyNewIdx
    static int _get_lastApplyNewIdx();
    // Set static field: static private System.Int32 lastApplyNewIdx
    static void _set_lastApplyNewIdx(int value);
    // Get static field: static private System.String storeType
    static ::StringW _get_storeType();
    // Set static field: static private System.String storeType
    static void _set_storeType(::StringW value);
    // Get static field: static private System.String storeId
    static ::StringW _get_storeId();
    // Set static field: static private System.String storeId
    static void _set_storeId(::StringW value);
    // Get static field: static public System.Collections.Generic.Dictionary`2<System.String,System.Boolean> classVfxEnabled
    static ::System::Collections::Generic::Dictionary_2<::StringW, bool>* _get_classVfxEnabled();
    // Set static field: static public System.Collections.Generic.Dictionary`2<System.String,System.Boolean> classVfxEnabled
    static void _set_classVfxEnabled(::System::Collections::Generic::Dictionary_2<::StringW, bool>* value);
    // Get static field: static public System.Int32 HandSize
    static int _get_HandSize();
    // Set static field: static public System.Int32 HandSize
    static void _set_HandSize(int value);
    // Get static field: static private System.Collections.Generic.List`1<System.String> alreadyFinalizedOrders
    static ::System::Collections::Generic::List_1<::StringW>* _get_alreadyFinalizedOrders();
    // Set static field: static private System.Collections.Generic.List`1<System.String> alreadyFinalizedOrders
    static void _set_alreadyFinalizedOrders(::System::Collections::Generic::List_1<::StringW>* value);
    // Get static field: static private Facepunch.Steamworks.Client steamworksClient
    static ::Facepunch::Steamworks::Client* _get_steamworksClient();
    // Set static field: static private Facepunch.Steamworks.Client steamworksClient
    static void _set_steamworksClient(::Facepunch::Steamworks::Client* value);
    // Get static field: static public System.String[] iapItems
    static ::ArrayW<::StringW> _get_iapItems();
    // Set static field: static public System.String[] iapItems
    static void _set_iapItems(::ArrayW<::StringW> value);
    // Get static field: static public System.String[] iapPrices
    static ::ArrayW<::StringW> _get_iapPrices();
    // Set static field: static public System.String[] iapPrices
    static void _set_iapPrices(::ArrayW<::StringW> value);
    // Get static field: static public System.String[] iapDLC
    static ::ArrayW<::StringW> _get_iapDLC();
    // Set static field: static public System.String[] iapDLC
    static void _set_iapDLC(::ArrayW<::StringW> value);
    // Get static field: static public System.Collections.Generic.Dictionary`2<System.String,System.String> dlcIdToName
    static ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* _get_dlcIdToName();
    // Set static field: static public System.Collections.Generic.Dictionary`2<System.String,System.String> dlcIdToName
    static void _set_dlcIdToName(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value);
    // Get static field: static public System.String[] iapDLCPrices
    static ::ArrayW<::StringW> _get_iapDLCPrices();
    // Set static field: static public System.String[] iapDLCPrices
    static void _set_iapDLCPrices(::ArrayW<::StringW> value);
    // Get static field: static private System.Single[] cameraDistances
    static ::ArrayW<float> _get_cameraDistances();
    // Set static field: static private System.Single[] cameraDistances
    static void _set_cameraDistances(::ArrayW<float> value);
    // Get static field: static public UnityEngine.MaterialPropertyBlock dyePropertyBlock
    static ::UnityEngine::MaterialPropertyBlock* _get_dyePropertyBlock();
    // Set static field: static public UnityEngine.MaterialPropertyBlock dyePropertyBlock
    static void _set_dyePropertyBlock(::UnityEngine::MaterialPropertyBlock* value);
    // Get static field: static public UnityEngine.MaterialPropertyBlock skinPropertyBlock
    static ::UnityEngine::MaterialPropertyBlock* _get_skinPropertyBlock();
    // Set static field: static public UnityEngine.MaterialPropertyBlock skinPropertyBlock
    static void _set_skinPropertyBlock(::UnityEngine::MaterialPropertyBlock* value);
    // Get static field: static public UnityEngine.MaterialPropertyBlock mouthPropertyBlock
    static ::UnityEngine::MaterialPropertyBlock* _get_mouthPropertyBlock();
    // Set static field: static public UnityEngine.MaterialPropertyBlock mouthPropertyBlock
    static void _set_mouthPropertyBlock(::UnityEngine::MaterialPropertyBlock* value);
    // Get static field: static public UnityEngine.MaterialPropertyBlock eyePropertyBlock
    static ::UnityEngine::MaterialPropertyBlock* _get_eyePropertyBlock();
    // Set static field: static public UnityEngine.MaterialPropertyBlock eyePropertyBlock
    static void _set_eyePropertyBlock(::UnityEngine::MaterialPropertyBlock* value);
    // Get static field: static public System.String lastLoginCharacter
    static ::StringW _get_lastLoginCharacter();
    // Set static field: static public System.String lastLoginCharacter
    static void _set_lastLoginCharacter(::StringW value);
    // Get static field: static public System.String currentLoginCharacter
    static ::StringW _get_currentLoginCharacter();
    // Set static field: static public System.String currentLoginCharacter
    static void _set_currentLoginCharacter(::StringW value);
    // Get static field: static public System.Boolean pushToTalkEnabled
    static bool _get_pushToTalkEnabled();
    // Set static field: static public System.Boolean pushToTalkEnabled
    static void _set_pushToTalkEnabled(bool value);
    // Get static field: static public System.Int32 bodyRotationType
    static int _get_bodyRotationType();
    // Set static field: static public System.Int32 bodyRotationType
    static void _set_bodyRotationType(int value);
    // static public ExtUI.TradeOffer get_currentTradeOffer()
    // Offset: 0x28CC124
    static ::ExtUI::TradeOffer* get_currentTradeOffer();
    // static private System.Void set_currentTradeOffer(ExtUI.TradeOffer value)
    // Offset: 0x28CC18C
    static void set_currentTradeOffer(::ExtUI::TradeOffer* value);
    // static public ExtUI.AccountCharacterList get_charList()
    // Offset: 0x28CC1F8
    static ::ExtUI::AccountCharacterList* get_charList();
    // static private System.Void set_charList(ExtUI.AccountCharacterList value)
    // Offset: 0x28CC260
    static void set_charList(::ExtUI::AccountCharacterList* value);
    // static public ExtUI.BlogPostList get_currentNews()
    // Offset: 0x28CC2CC
    static ::ExtUI::BlogPostList* get_currentNews();
    // static private System.Void set_currentNews(ExtUI.BlogPostList value)
    // Offset: 0x28CC334
    static void set_currentNews(::ExtUI::BlogPostList* value);
    // static public System.String get_gameToken()
    // Offset: 0x28CC3A0
    static ::StringW get_gameToken();
    // static private System.Void set_gameToken(System.String value)
    // Offset: 0x28CC408
    static void set_gameToken(::StringW value);
    // static public System.String get_gameServerUrl()
    // Offset: 0x28CC474
    static ::StringW get_gameServerUrl();
    // static private System.Void set_gameServerUrl(System.String value)
    // Offset: 0x28CC4DC
    static void set_gameServerUrl(::StringW value);
    // static public System.String get_connectionProtocol()
    // Offset: 0x28CC548
    static ::StringW get_connectionProtocol();
    // static private System.Void set_connectionProtocol(System.String value)
    // Offset: 0x28CC5B0
    static void set_connectionProtocol(::StringW value);
    // static public System.String get_loginToken()
    // Offset: 0x28CC61C
    static ::StringW get_loginToken();
    // static private System.Void set_loginToken(System.String value)
    // Offset: 0x28CC684
    static void set_loginToken(::StringW value);
    // static public System.Collections.Generic.Dictionary`2<System.Int32,ExtUI.InventoryItem> get_gameItems()
    // Offset: 0x28CC6F0
    static ::System::Collections::Generic::Dictionary_2<int, ::ExtUI::InventoryItem*>* get_gameItems();
    // static private System.Void set_gameItems(System.Collections.Generic.Dictionary`2<System.Int32,ExtUI.InventoryItem> value)
    // Offset: 0x28CC758
    static void set_gameItems(::System::Collections::Generic::Dictionary_2<int, ::ExtUI::InventoryItem*>* value);
    // static private System.Void .cctor()
    // Offset: 0x28CC7C4
    static void _cctor();
    // static public System.String t(System.String key)
    // Offset: 0x28CECF0
    static ::StringW t(::StringW key);
    // static public System.String GetDomainUrl()
    // Offset: 0x28CEE20
    static ::StringW GetDomainUrl();
    // static private System.Void DoLoginFlow()
    // Offset: 0x28CE8D0
    static void DoLoginFlow();
    // static public System.Void ManualFixedUpdate()
    // Offset: 0x28CEE88
    static void ManualFixedUpdate();
    // static private System.Collections.IEnumerator fetchGameTokenFromStore(System.String storeType, System.String nonce, System.String userid)
    // Offset: 0x28CEF38
    static ::System::Collections::IEnumerator* fetchGameTokenFromStore(::StringW storeType, ::StringW nonce, ::StringW userid);
    // static private System.Collections.IEnumerator fetchLoginToken(System.String characterId)
    // Offset: 0x28CF010
    static ::System::Collections::IEnumerator* fetchLoginToken(::StringW characterId);
    // static public System.Void SubmitAccountLink(System.String accountemail, System.String accountpassword)
    // Offset: 0x28CF0B0
    static void SubmitAccountLink(::StringW accountemail, ::StringW accountpassword);
    // static private System.Collections.IEnumerator runSubmitAccountLink(System.String accountemail, System.String accountpassword)
    // Offset: 0x28CF154
    static ::System::Collections::IEnumerator* runSubmitAccountLink(::StringW accountemail, ::StringW accountpassword);
    // static public System.Void OpenUrl(System.String destination)
    // Offset: 0x28CF218
    static void OpenUrl(::StringW destination);
    // static public System.Void LoginCharacter(System.String characterId)
    // Offset: 0x28CF220
    static void LoginCharacter(::StringW characterId);
    // static public System.Boolean compareString(System.String a, System.String b)
    // Offset: 0x28CF46C
    static bool compareString(::StringW a, ::StringW b);
    // static public System.String trimString(System.String a)
    // Offset: 0x28CF474
    static ::StringW trimString(::StringW a);
    // static public MagicalActual.PlayerCharacter PCI()
    // Offset: 0x28CF4A0
    static ::MagicalActual::PlayerCharacter* PCI();
    // static public System.Void DepositAllIngredients()
    // Offset: 0x28CF4A8
    static void DepositAllIngredients();
    // static public System.Void InventoryMoveItem(System.Int32 oldidx, System.String oldboxtype, System.Int32 newidx, System.String newboxtype)
    // Offset: 0x28CF5C8
    static void InventoryMoveItem(int oldidx, ::StringW oldboxtype, int newidx, ::StringW newboxtype);
    // static public System.Void InventorySplitItem(System.Int32 oldidx, System.String oldboxtype, System.Int32 numNewStacks)
    // Offset: 0x28D0280
    static void InventorySplitItem(int oldidx, ::StringW oldboxtype, int numNewStacks);
    // static public System.Void InventoryLockItem(System.Int32 oldidx)
    // Offset: 0x28D03E0
    static void InventoryLockItem(int oldidx);
    // static public System.Void InventoryUnlockItem(System.Int32 oldidx)
    // Offset: 0x28D0420
    static void InventoryUnlockItem(int oldidx);
    // static public System.Void InventoryDestroyItem(System.Int32 oldidx)
    // Offset: 0x28D0460
    static void InventoryDestroyItem(int oldidx);
    // static public ExtUI.InventoryItemInstance[] GetInventory()
    // Offset: 0x28D049C
    static ::ArrayW<::ExtUI::InventoryItemInstance*> GetInventory();
    // static public ExtUI.InventoryItemInstance[] UpdateInventoryContainerFromString(System.String inputvalue)
    // Offset: 0x28D0504
    static ::ArrayW<::ExtUI::InventoryItemInstance*> UpdateInventoryContainerFromString(::StringW inputvalue);
    // static public System.Void UpdateInventoryFromSyncvar()
    // Offset: 0x28D0D8C
    static void UpdateInventoryFromSyncvar();
    // static public System.Int32 AvailableCurrency()
    // Offset: 0x28D0E7C
    static int AvailableCurrency();
    // static public System.Void GetItemDescription(System.String itemid, System.Action`1<ExtUI.InventoryItem> itemDescCallback)
    // Offset: 0x28D0EC0
    static void GetItemDescription(::StringW itemid, ::System::Action_1<::ExtUI::InventoryItem*>* itemDescCallback);
    // static public System.Void GetCurrentStats(System.Action`1<ExtUI.CharacterStatsArray> statsCallback)
    // Offset: 0x28D1278
    static void GetCurrentStats(::System::Action_1<::ExtUI::CharacterStatsArray*>* statsCallback);
    // static public System.Void GetCurrentTalents(System.Action`1<ExtUI.CharacterTalentsArray> statsCallback)
    // Offset: 0x28D1380
    static void GetCurrentTalents(::System::Action_1<::ExtUI::CharacterTalentsArray*>* statsCallback);
    // static public System.Void GetCurrentPerks(System.Action`1<ExtUI.CharacterPerksArray> statsCallback)
    // Offset: 0x28D1488
    static void GetCurrentPerks(::System::Action_1<::ExtUI::CharacterPerksArray*>* statsCallback);
    // static public System.Void GetCurrentCharacterAchievements(System.Action`1<ExtUI.CharacterAchievementsArray> statsCallback)
    // Offset: 0x28D1590
    static void GetCurrentCharacterAchievements(::System::Action_1<::ExtUI::CharacterAchievementsArray*>* statsCallback);
    // static public System.Void GetCurrentTelportationDestinations(System.Action`1<ExtUI.TeleportDestinationsArray> statsCallback)
    // Offset: 0x28D1698
    static void GetCurrentTelportationDestinations(::System::Action_1<::ExtUI::TeleportDestinationsArray*>* statsCallback);
    // static public System.Void GetInfusionCalculation(System.Int32 oldidx, System.Int32 newidx, System.Action`1<ExtUI.InfusionCalculationArray> statsCallback)
    // Offset: 0x28D1960
    static void GetInfusionCalculation(int oldidx, int newidx, ::System::Action_1<::ExtUI::InfusionCalculationArray*>* statsCallback);
    // static public System.Void GetAccountCharacterList(System.Action`1<ExtUI.AccountCharacterList> charlistCallback)
    // Offset: 0x28D1AB4
    static void GetAccountCharacterList(::System::Action_1<::ExtUI::AccountCharacterList*>* charlistCallback);
    // static public System.String[] GetCurrentAchievements()
    // Offset: 0x28D1C0C
    static ::ArrayW<::StringW> GetCurrentAchievements();
    // static private System.Collections.IEnumerator fetchAccountList()
    // Offset: 0x28D1BAC
    static ::System::Collections::IEnumerator* fetchAccountList();
    // static public System.Void GetNews(System.Action`1<ExtUI.BlogPostList> newsCallback)
    // Offset: 0x28D1C78
    static void GetNews(::System::Action_1<::ExtUI::BlogPostList*>* newsCallback);
    // static private System.Collections.IEnumerator fetchNews()
    // Offset: 0x28D1D70
    static ::System::Collections::IEnumerator* fetchNews();
    // static public System.String NewsSummary(System.String fullArticle)
    // Offset: 0x28D1DFC
    static ::StringW NewsSummary(::StringW fullArticle);
    // static public System.Void OpenLatestBlog()
    // Offset: 0x28D1EC0
    static void OpenLatestBlog();
    // static public System.String CurrentVersion()
    // Offset: 0x28D1FAC
    static ::StringW CurrentVersion();
    // static public System.Void CreateNewCharacter(System.Action`1<System.String> callback)
    // Offset: 0x28D1FB4
    static void CreateNewCharacter(::System::Action_1<::StringW>* callback);
    // static private System.Collections.IEnumerator submitNewCharacter()
    // Offset: 0x28D204C
    static ::System::Collections::IEnumerator* submitNewCharacter();
    // static public System.Void DeleteCharacter(System.String characterid, System.Action`1<System.String> callback)
    // Offset: 0x28D20D8
    static void DeleteCharacter(::StringW characterid, ::System::Action_1<::StringW>* callback);
    // static private System.Collections.IEnumerator deleteCharacter(System.String characterid)
    // Offset: 0x28D2180
    static ::System::Collections::IEnumerator* deleteCharacter(::StringW characterid);
    // static public System.String Ucfirst(System.String astring)
    // Offset: 0x28D2220
    static ::StringW Ucfirst(::StringW astring);
    // static public System.Void Initialize()
    // Offset: 0x28D2328
    static void Initialize();
    // static public System.Void PlayUISound(System.Int32 soundIdx)
    // Offset: 0x28D01C8
    static void PlayUISound(int soundIdx);
    // static public System.String LongClassName(System.String shortclass)
    // Offset: 0x28D2384
    static ::StringW LongClassName(::StringW shortclass);
    // static public System.String LongItemType(System.String shorttype)
    // Offset: 0x28D2678
    static ::StringW LongItemType(::StringW shorttype);
    // static public System.String LongSlotName(System.String slotname)
    // Offset: 0x28D270C
    static ::StringW LongSlotName(::StringW slotname);
    // static public System.String LongStatName(System.String statname)
    // Offset: 0x28D2908
    static ::StringW LongStatName(::StringW statname);
    // static public System.String currentClassName()
    // Offset: 0x28D29F0
    static ::StringW currentClassName();
    // static public System.Int32 CurrentLevel()
    // Offset: 0x28D2B50
    static int CurrentLevel();
    // static public System.Boolean InParty()
    // Offset: 0x28D2B90
    static bool InParty();
    // static public System.String[] PartyMemberNames()
    // Offset: 0x28D2BD4
    static ::ArrayW<::StringW> PartyMemberNames();
    // static public System.String[] CurrentZoneShards()
    // Offset: 0x28D2C18
    static ::ArrayW<::StringW> CurrentZoneShards();
    // static public System.String[] CurrentZonePop()
    // Offset: 0x28D2C5C
    static ::ArrayW<::StringW> CurrentZonePop();
    // static public System.Boolean[] CurrentZoneExpiring()
    // Offset: 0x28D2CA0
    static ::ArrayW<bool> CurrentZoneExpiring();
    // static public System.Int32 CurrentResidentShard()
    // Offset: 0x28D2CE4
    static int CurrentResidentShard();
    // static public System.Int32 GetLevelsPast30()
    // Offset: 0x28D2D28
    static int GetLevelsPast30();
    // static public System.Void ChangeShard(System.String destinationShard)
    // Offset: 0x28D2D68
    static void ChangeShard(::StringW destinationShard);
    // static public System.Boolean IsPartyLeader()
    // Offset: 0x28D2E1C
    static bool IsPartyLeader();
    // static public System.Boolean PlayerInParty(System.String playerName)
    // Offset: 0x28D2E60
    static bool PlayerInParty(::StringW playerName);
    // static public System.Void InvitePlayerToParty(System.UInt16 playerguid)
    // Offset: 0x28D2F38
    static void InvitePlayerToParty(uint16_t playerguid);
    // static public System.Void InvitePlayerToPartyFromMessage(System.String messageIdx)
    // Offset: 0x28D3018
    static void InvitePlayerToPartyFromMessage(::StringW messageIdx);
    // static public System.Void InvitePlayerToPartyFromFellowship(System.String fellowshipIdx)
    // Offset: 0x28D3314
    static void InvitePlayerToPartyFromFellowship(::StringW fellowshipIdx);
    // static public System.Void InvitePlayerToPartyFromFriend(System.String friendIdx)
    // Offset: 0x28D34C4
    static void InvitePlayerToPartyFromFriend(::StringW friendIdx);
    // static public System.Void LeaveParty()
    // Offset: 0x28D3594
    static void LeaveParty();
    // static public System.Void KickFromParty(System.String memberidx)
    // Offset: 0x28D35C8
    static void KickFromParty(::StringW memberidx);
    // static public System.Boolean InFellowship()
    // Offset: 0x28D360C
    static bool InFellowship();
    // static public System.Void UpdateFellowshipListFromString(System.String newvalue)
    // Offset: 0x28D3650
    static void UpdateFellowshipListFromString(::StringW newvalue);
    // static public ExtUI.FellowshipListEntry[] GetCurrentFellowshipList()
    // Offset: 0x28D3EAC
    static ::ArrayW<::ExtUI::FellowshipListEntry*> GetCurrentFellowshipList();
    // static public System.String GetFellowshipMemberLastOnline(System.String playerIdx)
    // Offset: 0x28D3F14
    static ::StringW GetFellowshipMemberLastOnline(::StringW playerIdx);
    // static public System.String[] FellowshipMemberNames()
    // Offset: 0x28D40E0
    static ::ArrayW<::StringW> FellowshipMemberNames();
    // static public System.Int32 FellowshipMemberCount()
    // Offset: 0x28D4124
    static int FellowshipMemberCount();
    // static public System.Int32 FellowshipXP()
    // Offset: 0x28D41BC
    static int FellowshipXP();
    // static public System.Int32 FellowshipMaxMembers()
    // Offset: 0x28D425C
    static int FellowshipMaxMembers();
    // static public System.Int32 FellowshipLevel()
    // Offset: 0x28D42DC
    static int FellowshipLevel();
    // static public System.Boolean IsFellowshipLeader()
    // Offset: 0x28D437C
    static bool IsFellowshipLeader();
    // static public System.Boolean IsFellowshipOfficer()
    // Offset: 0x28D43C0
    static bool IsFellowshipOfficer();
    // static public System.Boolean IsFellowshipOfficerById(System.String playerIdx)
    // Offset: 0x28D4404
    static bool IsFellowshipOfficerById(::StringW playerIdx);
    // static public System.Boolean HasFellowshipChestAccessById(System.String playerIdx)
    // Offset: 0x28D45A4
    static bool HasFellowshipChestAccessById(::StringW playerIdx);
    // static public System.Boolean PlayerInFellowship(System.String playerName)
    // Offset: 0x28D4684
    static bool PlayerInFellowship(::StringW playerName);
    // static public System.Void InvitePlayerToFellowship(System.UInt16 playerguid)
    // Offset: 0x28D475C
    static void InvitePlayerToFellowship(uint16_t playerguid);
    // static public System.Void LeaveFellowship()
    // Offset: 0x28D483C
    static void LeaveFellowship();
    // static public System.Void KickFromFellowship(System.String memberidx)
    // Offset: 0x28D4870
    static void KickFromFellowship(::StringW memberidx);
    // static public System.Void PromoteToOfficer(System.String memberidx)
    // Offset: 0x28D4950
    static void PromoteToOfficer(::StringW memberidx);
    // static public System.Void DemoteOfficer(System.String memberidx)
    // Offset: 0x28D4A30
    static void DemoteOfficer(::StringW memberidx);
    // static public System.Void GiveFellowshipChestAccess(System.String memberidx)
    // Offset: 0x28D4B10
    static void GiveFellowshipChestAccess(::StringW memberidx);
    // static public System.Void RevokeFellowshipChestAccess(System.String memberidx)
    // Offset: 0x28D4BF0
    static void RevokeFellowshipChestAccess(::StringW memberidx);
    // static public System.Void CreateFellowship(System.String name)
    // Offset: 0x28D4CD0
    static void CreateFellowship(::StringW name);
    // static public System.Void UpgradeFellowship()
    // Offset: 0x28D4D0C
    static void UpgradeFellowship();
    // static public System.String FellowshipName()
    // Offset: 0x28D4D40
    static ::StringW FellowshipName();
    // static public System.Boolean HasSurname()
    // Offset: 0x28D4D84
    static bool HasSurname();
    // static public System.String Surname()
    // Offset: 0x28D4E00
    static ::StringW Surname();
    // static public ExtUI.InventoryItem GetItemById(System.Int32 id)
    // Offset: 0x28D0FC4
    static ::ExtUI::InventoryItem* GetItemById(int id);
    // static public ExtUI.InventoryItem GetItemById(System.String id)
    // Offset: 0x28D4E44
    static ::ExtUI::InventoryItem* GetItemById(::StringW id);
    // static public ExtUI.InventoryItem GetItemByIdString(System.String id)
    // Offset: 0x28D4EDC
    static ::ExtUI::InventoryItem* GetItemByIdString(::StringW id);
    // static public System.String GetDLCTitle(System.String dlcName)
    // Offset: 0x28D4F74
    static ::StringW GetDLCTitle(::StringW dlcName);
    // static public System.String GetDLCDescription(System.String dlcName)
    // Offset: 0x28D4FEC
    static ::StringW GetDLCDescription(::StringW dlcName);
    // static public System.Void ShowKeyboard(System.String defaultText, System.Action`1<System.String> doneCallback, System.Boolean showCommonPhrases, System.Boolean numericOnly)
    // Offset: 0x28D5064
    static void ShowKeyboard(::StringW defaultText, ::System::Action_1<::StringW>* doneCallback, bool showCommonPhrases, bool numericOnly);
    // static public System.Void ShowBugKeyboard(System.String defaultText, System.Action`1<System.String> doneCallback, System.Boolean showCommonPhrases, System.Boolean numericOnly)
    // Offset: 0x28D536C
    static void ShowBugKeyboard(::StringW defaultText, ::System::Action_1<::StringW>* doneCallback, bool showCommonPhrases, bool numericOnly);
    // static public System.Void HideKeyboard(System.String returnValue)
    // Offset: 0x28D5674
    static void HideKeyboard(::StringW returnValue);
    // static public System.Void ForceCloseKeyboard()
    // Offset: 0x28D5758
    static void ForceCloseKeyboard();
    // static public System.Void EnterRaid()
    // Offset: 0x28D578C
    static void EnterRaid();
    // static public System.Void JoinQueue(System.String queueName)
    // Offset: 0x28D57C0
    static void JoinQueue(::StringW queueName);
    // static public System.Void LeaveQueue()
    // Offset: 0x28D57FC
    static void LeaveQueue();
    // static public System.Void UpdateQueueStatus(System.String queueName, System.String status)
    // Offset: 0x28D5830
    static void UpdateQueueStatus(::StringW queueName, ::StringW status);
    // static public System.Boolean HasItemInInventory(System.Int32 itemId)
    // Offset: 0x28D58CC
    static bool HasItemInInventory(int itemId);
    // static public System.Void UpdateTradeOffer(System.String myOffer, System.String theirOffer, System.String theirName, System.Boolean haveIAccepted, System.Boolean haveTheyAccepted, System.Int32 myCurrencyOffer, System.Int32 theirCurrencyOffer)
    // Offset: 0x28D59AC
    static void UpdateTradeOffer(::StringW myOffer, ::StringW theirOffer, ::StringW theirName, bool haveIAccepted, bool haveTheyAccepted, int myCurrencyOffer, int theirCurrencyOffer);
    // static public System.Void UpdateMyCurrencyOffer(System.Int32 currencyOffer)
    // Offset: 0x28D6244
    static void UpdateMyCurrencyOffer(int currencyOffer);
    // static public System.Void EndTradeOffer()
    // Offset: 0x28D6280
    static void EndTradeOffer();
    // static public System.Void AcceptTrade()
    // Offset: 0x28D6330
    static void AcceptTrade();
    // static public System.Void CancelTrade()
    // Offset: 0x28D63BC
    static void CancelTrade();
    // static public System.Void InitiateTradeWithPlayer(System.UInt16 guid)
    // Offset: 0x28D6448
    static void InitiateTradeWithPlayer(uint16_t guid);
    // static public System.Boolean hasCurrentTrade()
    // Offset: 0x28D6508
    static bool hasCurrentTrade();
    // static public System.Boolean IsTradingIdx(System.Int32 idx)
    // Offset: 0x28D6570
    static bool IsTradingIdx(int idx);
    // static public System.Boolean hasCurrentVendor()
    // Offset: 0x28D65FC
    static bool hasCurrentVendor();
    // static public MagicalActual.Monster CurrentVendorMonster()
    // Offset: 0x28D6694
    static ::MagicalActual::Monster* CurrentVendorMonster();
    // static public ExtUI.InventoryItemInstance[] getItemsForCurrentVendor()
    // Offset: 0x28D6744
    static ::ArrayW<::ExtUI::InventoryItemInstance*> getItemsForCurrentVendor();
    // static public System.Int32[] getPricesForCurrentVendor()
    // Offset: 0x28D6838
    static ::ArrayW<int> getPricesForCurrentVendor();
    // static public System.Int32[] getRepLevelRequirementsForCurrentVendor()
    // Offset: 0x28D692C
    static ::ArrayW<int> getRepLevelRequirementsForCurrentVendor();
    // static public System.String[] getAchievementRequirementsForCurrentVendor()
    // Offset: 0x28D6A20
    static ::ArrayW<::StringW> getAchievementRequirementsForCurrentVendor();
    // static public System.String getCurrencyIconForCurrentVendor(System.Int32 itemIdx)
    // Offset: 0x28D6B14
    static ::StringW getCurrencyIconForCurrentVendor(int itemIdx);
    // static public System.Boolean currentVendorNeedsPriceUpdate()
    // Offset: 0x28D6D24
    static bool currentVendorNeedsPriceUpdate();
    // static public System.Int32 getVendorPriceForSlot(System.String slotIdx)
    // Offset: 0x28D6E08
    static int getVendorPriceForSlot(::StringW slotIdx);
    // static public System.UInt16 attachedVendorGuid()
    // Offset: 0x28D6ED4
    static uint16_t attachedVendorGuid();
    // static public ExtUI.InventoryItemInstance getVendorItemForSlot(System.String slotIdx)
    // Offset: 0x28D6F50
    static ::ExtUI::InventoryItemInstance* getVendorItemForSlot(::StringW slotIdx);
    // static public System.Void AttachVendor(MagicalActual.Vendor thisContainer)
    // Offset: 0x28D701C
    static void AttachVendor(::MagicalActual::Vendor* thisContainer);
    // static public System.Void DetachVendor()
    // Offset: 0x28D71A4
    static void DetachVendor();
    // static public MagicalActual.Vendor CurrentVendor()
    // Offset: 0x28D72BC
    static ::MagicalActual::Vendor* CurrentVendor();
    // static public System.Int32[] CalculateRepairCostForCurrentPlayer()
    // Offset: 0x28D7324
    static ::ArrayW<int> CalculateRepairCostForCurrentPlayer();
    // static public System.Void UpdateCurrentRepairWindowCost(System.Int32 cost, System.Int32 durability)
    // Offset: 0x28D7408
    static void UpdateCurrentRepairWindowCost(int cost, int durability);
    // static public System.Void RequestRepairFromCurrentVendor()
    // Offset: 0x28D74A8
    static void RequestRepairFromCurrentVendor();
    // static public System.Void AttachContainer(MagicalActual.ItemContainer thisContainer)
    // Offset: 0x28D758C
    static void AttachContainer(::MagicalActual::ItemContainer* thisContainer);
    // static public System.Void DetachContainer()
    // Offset: 0x28D76C8
    static void DetachContainer();
    // static public System.Boolean hasDepositContainer()
    // Offset: 0x28D77EC
    static bool hasDepositContainer();
    // static public MagicalActual.ItemContainer CurrentContainer()
    // Offset: 0x28D7884
    static ::MagicalActual::ItemContainer* CurrentContainer();
    // static public System.Boolean CurrentContainerIsPlayerChest()
    // Offset: 0x28D78EC
    static bool CurrentContainerIsPlayerChest();
    // static public System.Void RequestPlayerChestUpgrade()
    // Offset: 0x28D7A30
    static void RequestPlayerChestUpgrade();
    // static public System.Void RequestFurnitureChestUpgrade()
    // Offset: 0x28D7C3C
    static void RequestFurnitureChestUpgrade();
    // static public System.Boolean GetBuildMode()
    // Offset: 0x28D7D40
    static bool GetBuildMode();
    // static public System.Void ToggleBuildMode()
    // Offset: 0x28D7E48
    static void ToggleBuildMode();
    // static public System.Boolean CurrentContainerIsFellowshipChest()
    // Offset: 0x28D7F4C
    static bool CurrentContainerIsFellowshipChest();
    // static public System.Boolean CurrentContainerIsIngredientChest()
    // Offset: 0x28D8090
    static bool CurrentContainerIsIngredientChest();
    // static public System.Boolean CurrentContainerIsFurnitureChest()
    // Offset: 0x28D82F4
    static bool CurrentContainerIsFurnitureChest();
    // static public System.Boolean CurrentContainerIsTinkererChest()
    // Offset: 0x28D8438
    static bool CurrentContainerIsTinkererChest();
    // static public System.String GetFellowshipChestLog()
    // Offset: 0x28D857C
    static ::StringW GetFellowshipChestLog();
    // static public ExtUI.InventoryItemInstance[] AttachedContainerInventory()
    // Offset: 0x28D8710
    static ::ArrayW<::ExtUI::InventoryItemInstance*> AttachedContainerInventory();
    // static public ExtUI.InventoryItemInstance GetItemInstance(System.String boxType, System.String boxIdx)
    // Offset: 0x28D87F8
    static ::ExtUI::InventoryItemInstance* GetItemInstance(::StringW boxType, ::StringW boxIdx);
    // static public System.Void UpdateVibrationStrength(System.Single strength)
    // Offset: 0x28D8BB0
    static void UpdateVibrationStrength(float strength);
    // static public System.Void UpdateSmoothTurn(System.Single strength)
    // Offset: 0x28D8C14
    static void UpdateSmoothTurn(float strength);
    // static public System.Void UpdateVolume(System.String volumeId, System.Single percent)
    // Offset: 0x28D8C78
    static void UpdateVolume(::StringW volumeId, float percent);
    // static public System.Void SetRelocationSetting(System.String setting, UnityEngine.Vector3 position)
    // Offset: 0x28D9000
    static void SetRelocationSetting(::StringW setting, ::UnityEngine::Vector3 position);
    // static public UnityEngine.Vector3 GetRelocationSetting(System.String setting)
    // Offset: 0x28D90CC
    static ::UnityEngine::Vector3 GetRelocationSetting(::StringW setting);
    // static public System.Void SetRelocationRotationSetting(System.String setting, UnityEngine.Quaternion rotation)
    // Offset: 0x28D91C4
    static void SetRelocationRotationSetting(::StringW setting, ::UnityEngine::Quaternion rotation);
    // static public UnityEngine.Quaternion GetRelocationRotationSetting(System.String setting)
    // Offset: 0x28D92B8
    static ::UnityEngine::Quaternion GetRelocationRotationSetting(::StringW setting);
    // static public System.Single GetVolume(System.String volumeId)
    // Offset: 0x28D93D8
    static float GetVolume(::StringW volumeId);
    // static public System.Void InitVolumes()
    // Offset: 0x28D9474
    static void InitVolumes();
    // static public System.Void MuteAllSound()
    // Offset: 0x28D9718
    static void MuteAllSound();
    // static public System.Void StopAllPlayerEvents()
    // Offset: 0x28D9784
    static void StopAllPlayerEvents();
    // static private System.Void SetVolumeInManager(System.String volumeId, System.Single percent)
    // Offset: 0x28D8D04
    static void SetVolumeInManager(::StringW volumeId, float percent);
    // static public System.Void SetShadowQuality(System.Boolean isIndoors)
    // Offset: 0x28D980C
    static void SetShadowQuality(bool isIndoors);
    // static public System.Void SetGraphicsQuality(System.Int32 quality)
    // Offset: 0x28D9810
    static void SetGraphicsQuality(int quality);
    // static public System.Int32 GetGraphicsQuality()
    // Offset: 0x28D9C98
    static int GetGraphicsQuality();
    // static public System.Void InitGraphicsQuality()
    // Offset: 0x28D9CA0
    static void InitGraphicsQuality();
    // static public System.Single CurrentWeight()
    // Offset: 0x28D9D00
    static float CurrentWeight();
    // static public System.Single MaxWeight()
    // Offset: 0x28D9D44
    static float MaxWeight();
    // static public System.Byte EncumberedStatus()
    // Offset: 0x28D9D88
    static uint8_t EncumberedStatus();
    // static public System.Void UpdateConnectionType(System.Int32 newvalue)
    // Offset: 0x28D9DCC
    static void UpdateConnectionType(int newvalue);
    // static private System.Void UpdateConnection()
    // Offset: 0x28CE7B4
    static void UpdateConnection();
    // static public System.Int32 CurrentConnectionType()
    // Offset: 0x28D9EB8
    static int CurrentConnectionType();
    // static public System.Void UpdateBodyRotation(System.Int32 newvalue)
    // Offset: 0x28D9EC0
    static void UpdateBodyRotation(int newvalue);
    // static public System.Void InitBodyRotation()
    // Offset: 0x28DA114
    static void InitBodyRotation();
    // static public System.Void UpdateLocomotionPref(System.String keyName, System.Int32 newvalue)
    // Offset: 0x28DA194
    static void UpdateLocomotionPref(::StringW keyName, int newvalue);
    // static public System.Void UpdateLocomotion()
    // Offset: 0x28DA210
    static void UpdateLocomotion();
    // static public System.Int32[] CurrentLocomotionSettings()
    // Offset: 0x28DA300
    static ::ArrayW<int> CurrentLocomotionSettings();
    // static public System.Void UpdateFriendsListFromString(System.String newvalue)
    // Offset: 0x28DA424
    static void UpdateFriendsListFromString(::StringW newvalue);
    // static public ExtUI.FriendsListEntry[] GetCurrentFriendsList()
    // Offset: 0x28DA730
    static ::ArrayW<::ExtUI::FriendsListEntry*> GetCurrentFriendsList();
    // static public System.Void AddFriend(System.UInt16 guid)
    // Offset: 0x28DA7B4
    static void AddFriend(uint16_t guid);
    // static public System.Void RemoveFriend(System.String friendIdx)
    // Offset: 0x28DA7F0
    static void RemoveFriend(::StringW friendIdx);
    // static public System.Void ChangeFingerGesture(System.Boolean newvalue)
    // Offset: 0x28DA8D0
    static void ChangeFingerGesture(bool newvalue);
    // static public System.Void ChangeEnemyHealthBarPreference(System.Boolean newValue)
    // Offset: 0x28DA9D8
    static void ChangeEnemyHealthBarPreference(bool newValue);
    // static public System.Void UpdateEnemyHealthBarVariable()
    // Offset: 0x28DAA50
    static void UpdateEnemyHealthBarVariable();
    // static public System.Void UpdateFingerGestureVariable()
    // Offset: 0x28DA948
    static void UpdateFingerGestureVariable();
    // static public System.Void ChangeHandSize(System.Int32 newvalue)
    // Offset: 0x28DAAE0
    static void ChangeHandSize(int newvalue);
    // static public System.Void UpdateHandSizeVariable()
    // Offset: 0x28DABCC
    static void UpdateHandSizeVariable();
    // static public System.Void UpdateClassVfxEnabled(System.String className, System.Int32 newValue)
    // Offset: 0x28DACE0
    static void UpdateClassVfxEnabled(::StringW className, int newValue);
    // static public System.Void UpdateClassVfxVariables()
    // Offset: 0x28DAD70
    static void UpdateClassVfxVariables();
    // static public System.Void ChangeHelpsigns(System.Boolean newvalue)
    // Offset: 0x28DB1E4
    static void ChangeHelpsigns(bool newvalue);
    // static public System.Void UpdateHelpSignsVariable()
    // Offset: 0x28DB25C
    static void UpdateHelpSignsVariable();
    // static public System.Void ChangeMovies(System.Boolean newvalue)
    // Offset: 0x28DB328
    static void ChangeMovies(bool newvalue);
    // static public System.Void UpdateMoviesVariable()
    // Offset: 0x28DB3A0
    static void UpdateMoviesVariable();
    // static public System.Void ChangeStats(System.Boolean newvalue)
    // Offset: 0x28DB430
    static void ChangeStats(bool newvalue);
    // static public System.Void UpdateStatsVariable()
    // Offset: 0x28DB4A8
    static void UpdateStatsVariable();
    // static public System.Void ChangeVerticalDirection(System.Boolean newvalue)
    // Offset: 0x28DB5F0
    static void ChangeVerticalDirection(bool newvalue);
    // static public System.Void UpdateVerticalDirectionVariable()
    // Offset: 0x28DB668
    static void UpdateVerticalDirectionVariable();
    // static public System.Void ChangeCombatSprint(System.Boolean newvalue)
    // Offset: 0x28DB6F8
    static void ChangeCombatSprint(bool newvalue);
    // static public System.Void UpdateCombatSprintVariable()
    // Offset: 0x28DB770
    static void UpdateCombatSprintVariable();
    // static public System.Void ChangeAutoRunPreference(System.Boolean newvalue)
    // Offset: 0x28DB800
    static void ChangeAutoRunPreference(bool newvalue);
    // static public System.Void UpdateAutoRunVariable()
    // Offset: 0x28DB878
    static void UpdateAutoRunVariable();
    // static public System.Void ChangeDragonRaceFade(System.Boolean newvalue)
    // Offset: 0x28DB8F0
    static void ChangeDragonRaceFade(bool newvalue);
    // static public System.Void UpdateDragonRaceFadeVariable()
    // Offset: 0x28DB968
    static void UpdateDragonRaceFadeVariable();
    // static public System.Void ChangeFellowshipChatToggle(System.Boolean newvalue)
    // Offset: 0x28DB9F8
    static void ChangeFellowshipChatToggle(bool newvalue);
    // static public System.Void UpdateFellowshipChatToggleVariable()
    // Offset: 0x28DBA70
    static void UpdateFellowshipChatToggleVariable();
    // static public System.Void ChangeFacialExpressionToggle(System.Boolean newValue)
    // Offset: 0x28DBB40
    static void ChangeFacialExpressionToggle(bool newValue);
    // static public System.Void UpdateFacialToggleVariable()
    // Offset: 0x28DBBB8
    static void UpdateFacialToggleVariable();
    // static public System.Void ChangeMapToggle(System.Boolean newvalue)
    // Offset: 0x28DBC48
    static void ChangeMapToggle(bool newvalue);
    // static public System.Void UpdateMapToggleVariable()
    // Offset: 0x28DBCC0
    static void UpdateMapToggleVariable();
    // static public System.Void ChangeRelocationGrabPoints(System.Boolean newvalue)
    // Offset: 0x28DBE6C
    static void ChangeRelocationGrabPoints(bool newvalue);
    // static public System.Void UpdateRelocationGrabPointsVariable()
    // Offset: 0x28DBEE4
    static void UpdateRelocationGrabPointsVariable();
    // static public System.Void ResetRelocationGrabPoints()
    // Offset: 0x28DC030
    static void ResetRelocationGrabPoints();
    // static public System.Void ChangePtt(System.Boolean newvalue)
    // Offset: 0x28DC14C
    static void ChangePtt(bool newvalue);
    // static public System.Void UpdatePttVariable()
    // Offset: 0x28DC1C4
    static void UpdatePttVariable();
    // static public System.Void UpdateLfgPostsFromString(System.String postsJson)
    // Offset: 0x28DC254
    static void UpdateLfgPostsFromString(::StringW postsJson);
    // static public System.Void UpdateMessagesFromString(System.String messagesJson)
    // Offset: 0x28DC47C
    static void UpdateMessagesFromString(::StringW messagesJson);
    // static public System.Void GetMessageThread(System.String messageidx, System.Action`1<ExtUI.PrivateMessageThread> threadCallback)
    // Offset: 0x28DC618
    static void GetMessageThread(::StringW messageidx, ::System::Action_1<::ExtUI::PrivateMessageThread*>* threadCallback);
    // static public System.Collections.Generic.List`1<ExtUI.PrivateMessage> GetCurrentMessages()
    // Offset: 0x28DC8C8
    static ::System::Collections::Generic::List_1<::ExtUI::PrivateMessage*>* GetCurrentMessages();
    // static public System.Void SendChatMessage(System.String messageidx, System.String chatmessage)
    // Offset: 0x28DC930
    static void SendChatMessage(::StringW messageidx, ::StringW chatmessage);
    // static public System.Void HidePrivateMessage(System.String messageidx)
    // Offset: 0x28DCA44
    static void HidePrivateMessage(::StringW messageidx);
    // static public System.Void SendNewMessage(System.String recipienttype, System.String fellowshipIdx, System.String friendIdx, System.String subject, System.String chatmessage)
    // Offset: 0x28DCB84
    static void SendNewMessage(::StringW recipienttype, ::StringW fellowshipIdx, ::StringW friendIdx, ::StringW subject, ::StringW chatmessage);
    // static public System.Void ConfirmLastApply()
    // Offset: 0x28DD168
    static void ConfirmLastApply();
    // static public System.Void ChooseTalent(System.String talentTier, System.String tierOption)
    // Offset: 0x28DD208
    static void ChooseTalent(::StringW talentTier, ::StringW tierOption);
    // static public System.Void ChoosePerk(System.String perkType, System.String perkTier)
    // Offset: 0x28DD374
    static void ChoosePerk(::StringW perkType, ::StringW perkTier);
    // static public System.String FormatSeconds(System.Single time)
    // Offset: 0x28DD498
    static ::StringW FormatSeconds(float time);
    // static public System.String LongDungeonName(System.String shortName)
    // Offset: 0x28DD594
    static ::StringW LongDungeonName(::StringW shortName);
    // static public System.Boolean canMakeCashShopPurchase()
    // Offset: 0x28DDD9C
    static bool canMakeCashShopPurchase();
    // static private System.Collections.IEnumerator initiateSteamIap(System.String itemIdx)
    // Offset: 0x28DDEE8
    static ::System::Collections::IEnumerator* initiateSteamIap(::StringW itemIdx);
    // static private System.Collections.IEnumerator finalizeSteamIap(System.String orderId)
    // Offset: 0x28DDF88
    static ::System::Collections::IEnumerator* finalizeSteamIap(::StringW orderId);
    // static private System.Collections.IEnumerator finalizeOculusIap(System.String sku, System.String nonce, System.Boolean initialCheck)
    // Offset: 0x28DE028
    static ::System::Collections::IEnumerator* finalizeOculusIap(::StringW sku, ::StringW nonce, bool initialCheck);
    // static public System.Void InitiateCashShopPurchase(System.String itemIdx)
    // Offset: 0x28DE104
    static void InitiateCashShopPurchase(::StringW itemIdx);
    // static private System.Void LaunchCheckoutFlowCallback(Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase> msg)
    // Offset: 0x28DE2B8
    static void LaunchCheckoutFlowCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>* msg);
    // static public System.Void CompleteCashShopPurchase(System.String transId, System.String sku)
    // Offset: 0x28DE484
    static void CompleteCashShopPurchase(::StringW transId, ::StringW sku);
    // static public System.Void HandleOculusTransaction(System.String[] sku, System.Boolean initialCheck)
    // Offset: 0x28DE5E8
    static void HandleOculusTransaction(::ArrayW<::StringW> sku, bool initialCheck);
    // static public System.Void HandleSteamTransaction(System.String transId)
    // Offset: 0x28DE71C
    static void HandleSteamTransaction(::StringW transId);
    // static public System.String GetFormattedClassName(System.String className)
    // Offset: 0x28DE7E4
    static ::StringW GetFormattedClassName(::StringW className);
  }; // ExtUI.InterfaceAPI
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::get_currentTradeOffer
// Il2CppName: get_currentTradeOffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExtUI::TradeOffer* (*)()>(&ExtUI::InterfaceAPI::get_currentTradeOffer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "get_currentTradeOffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::set_currentTradeOffer
// Il2CppName: set_currentTradeOffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ExtUI::TradeOffer*)>(&ExtUI::InterfaceAPI::set_currentTradeOffer)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("ExtUI", "TradeOffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "set_currentTradeOffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::get_charList
// Il2CppName: get_charList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExtUI::AccountCharacterList* (*)()>(&ExtUI::InterfaceAPI::get_charList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "get_charList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::set_charList
// Il2CppName: set_charList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ExtUI::AccountCharacterList*)>(&ExtUI::InterfaceAPI::set_charList)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("ExtUI", "AccountCharacterList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "set_charList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::get_currentNews
// Il2CppName: get_currentNews
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExtUI::BlogPostList* (*)()>(&ExtUI::InterfaceAPI::get_currentNews)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "get_currentNews", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::set_currentNews
// Il2CppName: set_currentNews
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ExtUI::BlogPostList*)>(&ExtUI::InterfaceAPI::set_currentNews)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("ExtUI", "BlogPostList")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "set_currentNews", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::get_gameToken
// Il2CppName: get_gameToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&ExtUI::InterfaceAPI::get_gameToken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "get_gameToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::set_gameToken
// Il2CppName: set_gameToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::set_gameToken)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "set_gameToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::get_gameServerUrl
// Il2CppName: get_gameServerUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&ExtUI::InterfaceAPI::get_gameServerUrl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "get_gameServerUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::set_gameServerUrl
// Il2CppName: set_gameServerUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::set_gameServerUrl)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "set_gameServerUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::get_connectionProtocol
// Il2CppName: get_connectionProtocol
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&ExtUI::InterfaceAPI::get_connectionProtocol)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "get_connectionProtocol", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::set_connectionProtocol
// Il2CppName: set_connectionProtocol
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::set_connectionProtocol)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "set_connectionProtocol", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::get_loginToken
// Il2CppName: get_loginToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&ExtUI::InterfaceAPI::get_loginToken)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "get_loginToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::set_loginToken
// Il2CppName: set_loginToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::set_loginToken)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "set_loginToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::get_gameItems
// Il2CppName: get_gameItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<int, ::ExtUI::InventoryItem*>* (*)()>(&ExtUI::InterfaceAPI::get_gameItems)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "get_gameItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::set_gameItems
// Il2CppName: set_gameItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::Dictionary_2<int, ::ExtUI::InventoryItem*>*)>(&ExtUI::InterfaceAPI::set_gameItems)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "Dictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "set_gameItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::t
// Il2CppName: t
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::t)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "t", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetDomainUrl
// Il2CppName: GetDomainUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&ExtUI::InterfaceAPI::GetDomainUrl)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetDomainUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::DoLoginFlow
// Il2CppName: DoLoginFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::DoLoginFlow)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "DoLoginFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ManualFixedUpdate
// Il2CppName: ManualFixedUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::ManualFixedUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ManualFixedUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::fetchGameTokenFromStore
// Il2CppName: fetchGameTokenFromStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)(::StringW, ::StringW, ::StringW)>(&ExtUI::InterfaceAPI::fetchGameTokenFromStore)> {
  static const MethodInfo* get() {
    static auto* storeType = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* nonce = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "fetchGameTokenFromStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{storeType, nonce, userid});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::fetchLoginToken
// Il2CppName: fetchLoginToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)(::StringW)>(&ExtUI::InterfaceAPI::fetchLoginToken)> {
  static const MethodInfo* get() {
    static auto* characterId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "fetchLoginToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{characterId});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::SubmitAccountLink
// Il2CppName: SubmitAccountLink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW)>(&ExtUI::InterfaceAPI::SubmitAccountLink)> {
  static const MethodInfo* get() {
    static auto* accountemail = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* accountpassword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "SubmitAccountLink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountemail, accountpassword});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::runSubmitAccountLink
// Il2CppName: runSubmitAccountLink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)(::StringW, ::StringW)>(&ExtUI::InterfaceAPI::runSubmitAccountLink)> {
  static const MethodInfo* get() {
    static auto* accountemail = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* accountpassword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "runSubmitAccountLink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{accountemail, accountpassword});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::OpenUrl
// Il2CppName: OpenUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::OpenUrl)> {
  static const MethodInfo* get() {
    static auto* destination = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "OpenUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destination});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::LoginCharacter
// Il2CppName: LoginCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::LoginCharacter)> {
  static const MethodInfo* get() {
    static auto* characterId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "LoginCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{characterId});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::compareString
// Il2CppName: compareString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::StringW)>(&ExtUI::InterfaceAPI::compareString)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* b = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "compareString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a, b});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::trimString
// Il2CppName: trimString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::trimString)> {
  static const MethodInfo* get() {
    static auto* a = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "trimString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{a});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::PCI
// Il2CppName: PCI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::PlayerCharacter* (*)()>(&ExtUI::InterfaceAPI::PCI)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "PCI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::DepositAllIngredients
// Il2CppName: DepositAllIngredients
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::DepositAllIngredients)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "DepositAllIngredients", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InventoryMoveItem
// Il2CppName: InventoryMoveItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::StringW, int, ::StringW)>(&ExtUI::InterfaceAPI::InventoryMoveItem)> {
  static const MethodInfo* get() {
    static auto* oldidx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* oldboxtype = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newidx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* newboxtype = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InventoryMoveItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldidx, oldboxtype, newidx, newboxtype});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InventorySplitItem
// Il2CppName: InventorySplitItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::StringW, int)>(&ExtUI::InterfaceAPI::InventorySplitItem)> {
  static const MethodInfo* get() {
    static auto* oldidx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* oldboxtype = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* numNewStacks = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InventorySplitItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldidx, oldboxtype, numNewStacks});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InventoryLockItem
// Il2CppName: InventoryLockItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&ExtUI::InterfaceAPI::InventoryLockItem)> {
  static const MethodInfo* get() {
    static auto* oldidx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InventoryLockItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldidx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InventoryUnlockItem
// Il2CppName: InventoryUnlockItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&ExtUI::InterfaceAPI::InventoryUnlockItem)> {
  static const MethodInfo* get() {
    static auto* oldidx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InventoryUnlockItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldidx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InventoryDestroyItem
// Il2CppName: InventoryDestroyItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&ExtUI::InterfaceAPI::InventoryDestroyItem)> {
  static const MethodInfo* get() {
    static auto* oldidx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InventoryDestroyItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldidx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetInventory
// Il2CppName: GetInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExtUI::InventoryItemInstance*> (*)()>(&ExtUI::InterfaceAPI::GetInventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateInventoryContainerFromString
// Il2CppName: UpdateInventoryContainerFromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExtUI::InventoryItemInstance*> (*)(::StringW)>(&ExtUI::InterfaceAPI::UpdateInventoryContainerFromString)> {
  static const MethodInfo* get() {
    static auto* inputvalue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateInventoryContainerFromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{inputvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateInventoryFromSyncvar
// Il2CppName: UpdateInventoryFromSyncvar
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateInventoryFromSyncvar)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateInventoryFromSyncvar", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::AvailableCurrency
// Il2CppName: AvailableCurrency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&ExtUI::InterfaceAPI::AvailableCurrency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "AvailableCurrency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetItemDescription
// Il2CppName: GetItemDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Action_1<::ExtUI::InventoryItem*>*)>(&ExtUI::InterfaceAPI::GetItemDescription)> {
  static const MethodInfo* get() {
    static auto* itemid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* itemDescCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItem")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetItemDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemid, itemDescCallback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetCurrentStats
// Il2CppName: GetCurrentStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::ExtUI::CharacterStatsArray*>*)>(&ExtUI::InterfaceAPI::GetCurrentStats)> {
  static const MethodInfo* get() {
    static auto* statsCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("ExtUI", "CharacterStatsArray")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetCurrentStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statsCallback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetCurrentTalents
// Il2CppName: GetCurrentTalents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::ExtUI::CharacterTalentsArray*>*)>(&ExtUI::InterfaceAPI::GetCurrentTalents)> {
  static const MethodInfo* get() {
    static auto* statsCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("ExtUI", "CharacterTalentsArray")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetCurrentTalents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statsCallback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetCurrentPerks
// Il2CppName: GetCurrentPerks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::ExtUI::CharacterPerksArray*>*)>(&ExtUI::InterfaceAPI::GetCurrentPerks)> {
  static const MethodInfo* get() {
    static auto* statsCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("ExtUI", "CharacterPerksArray")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetCurrentPerks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statsCallback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetCurrentCharacterAchievements
// Il2CppName: GetCurrentCharacterAchievements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::ExtUI::CharacterAchievementsArray*>*)>(&ExtUI::InterfaceAPI::GetCurrentCharacterAchievements)> {
  static const MethodInfo* get() {
    static auto* statsCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("ExtUI", "CharacterAchievementsArray")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetCurrentCharacterAchievements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statsCallback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetCurrentTelportationDestinations
// Il2CppName: GetCurrentTelportationDestinations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::ExtUI::TeleportDestinationsArray*>*)>(&ExtUI::InterfaceAPI::GetCurrentTelportationDestinations)> {
  static const MethodInfo* get() {
    static auto* statsCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("ExtUI", "TeleportDestinationsArray")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetCurrentTelportationDestinations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statsCallback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetInfusionCalculation
// Il2CppName: GetInfusionCalculation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int, ::System::Action_1<::ExtUI::InfusionCalculationArray*>*)>(&ExtUI::InterfaceAPI::GetInfusionCalculation)> {
  static const MethodInfo* get() {
    static auto* oldidx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* newidx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* statsCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("ExtUI", "InfusionCalculationArray")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetInfusionCalculation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{oldidx, newidx, statsCallback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetAccountCharacterList
// Il2CppName: GetAccountCharacterList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::ExtUI::AccountCharacterList*>*)>(&ExtUI::InterfaceAPI::GetAccountCharacterList)> {
  static const MethodInfo* get() {
    static auto* charlistCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("ExtUI", "AccountCharacterList")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetAccountCharacterList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{charlistCallback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetCurrentAchievements
// Il2CppName: GetCurrentAchievements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)()>(&ExtUI::InterfaceAPI::GetCurrentAchievements)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetCurrentAchievements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::fetchAccountList
// Il2CppName: fetchAccountList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)()>(&ExtUI::InterfaceAPI::fetchAccountList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "fetchAccountList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetNews
// Il2CppName: GetNews
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::ExtUI::BlogPostList*>*)>(&ExtUI::InterfaceAPI::GetNews)> {
  static const MethodInfo* get() {
    static auto* newsCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("ExtUI", "BlogPostList")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetNews", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newsCallback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::fetchNews
// Il2CppName: fetchNews
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)()>(&ExtUI::InterfaceAPI::fetchNews)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "fetchNews", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::NewsSummary
// Il2CppName: NewsSummary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::NewsSummary)> {
  static const MethodInfo* get() {
    static auto* fullArticle = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "NewsSummary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fullArticle});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::OpenLatestBlog
// Il2CppName: OpenLatestBlog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::OpenLatestBlog)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "OpenLatestBlog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentVersion
// Il2CppName: CurrentVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&ExtUI::InterfaceAPI::CurrentVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CreateNewCharacter
// Il2CppName: CreateNewCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_1<::StringW>*)>(&ExtUI::InterfaceAPI::CreateNewCharacter)> {
  static const MethodInfo* get() {
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CreateNewCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{callback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::submitNewCharacter
// Il2CppName: submitNewCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)()>(&ExtUI::InterfaceAPI::submitNewCharacter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "submitNewCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::DeleteCharacter
// Il2CppName: DeleteCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Action_1<::StringW>*)>(&ExtUI::InterfaceAPI::DeleteCharacter)> {
  static const MethodInfo* get() {
    static auto* characterid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* callback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "DeleteCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{characterid, callback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::deleteCharacter
// Il2CppName: deleteCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)(::StringW)>(&ExtUI::InterfaceAPI::deleteCharacter)> {
  static const MethodInfo* get() {
    static auto* characterid = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "deleteCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{characterid});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::Ucfirst
// Il2CppName: Ucfirst
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::Ucfirst)> {
  static const MethodInfo* get() {
    static auto* astring = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "Ucfirst", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{astring});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::Initialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::PlayUISound
// Il2CppName: PlayUISound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&ExtUI::InterfaceAPI::PlayUISound)> {
  static const MethodInfo* get() {
    static auto* soundIdx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "PlayUISound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{soundIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::LongClassName
// Il2CppName: LongClassName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::LongClassName)> {
  static const MethodInfo* get() {
    static auto* shortclass = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "LongClassName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shortclass});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::LongItemType
// Il2CppName: LongItemType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::LongItemType)> {
  static const MethodInfo* get() {
    static auto* shorttype = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "LongItemType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shorttype});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::LongSlotName
// Il2CppName: LongSlotName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::LongSlotName)> {
  static const MethodInfo* get() {
    static auto* slotname = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "LongSlotName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slotname});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::LongStatName
// Il2CppName: LongStatName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::LongStatName)> {
  static const MethodInfo* get() {
    static auto* statname = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "LongStatName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{statname});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::currentClassName
// Il2CppName: currentClassName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&ExtUI::InterfaceAPI::currentClassName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "currentClassName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentLevel
// Il2CppName: CurrentLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&ExtUI::InterfaceAPI::CurrentLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InParty
// Il2CppName: InParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::InParty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::PartyMemberNames
// Il2CppName: PartyMemberNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)()>(&ExtUI::InterfaceAPI::PartyMemberNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "PartyMemberNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentZoneShards
// Il2CppName: CurrentZoneShards
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)()>(&ExtUI::InterfaceAPI::CurrentZoneShards)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentZoneShards", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentZonePop
// Il2CppName: CurrentZonePop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)()>(&ExtUI::InterfaceAPI::CurrentZonePop)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentZonePop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentZoneExpiring
// Il2CppName: CurrentZoneExpiring
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<bool> (*)()>(&ExtUI::InterfaceAPI::CurrentZoneExpiring)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentZoneExpiring", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentResidentShard
// Il2CppName: CurrentResidentShard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&ExtUI::InterfaceAPI::CurrentResidentShard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentResidentShard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetLevelsPast30
// Il2CppName: GetLevelsPast30
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&ExtUI::InterfaceAPI::GetLevelsPast30)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetLevelsPast30", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeShard
// Il2CppName: ChangeShard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::ChangeShard)> {
  static const MethodInfo* get() {
    static auto* destinationShard = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeShard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destinationShard});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::IsPartyLeader
// Il2CppName: IsPartyLeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::IsPartyLeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "IsPartyLeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::PlayerInParty
// Il2CppName: PlayerInParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&ExtUI::InterfaceAPI::PlayerInParty)> {
  static const MethodInfo* get() {
    static auto* playerName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "PlayerInParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerName});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InvitePlayerToParty
// Il2CppName: InvitePlayerToParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint16_t)>(&ExtUI::InterfaceAPI::InvitePlayerToParty)> {
  static const MethodInfo* get() {
    static auto* playerguid = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InvitePlayerToParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerguid});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InvitePlayerToPartyFromMessage
// Il2CppName: InvitePlayerToPartyFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::InvitePlayerToPartyFromMessage)> {
  static const MethodInfo* get() {
    static auto* messageIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InvitePlayerToPartyFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{messageIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InvitePlayerToPartyFromFellowship
// Il2CppName: InvitePlayerToPartyFromFellowship
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::InvitePlayerToPartyFromFellowship)> {
  static const MethodInfo* get() {
    static auto* fellowshipIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InvitePlayerToPartyFromFellowship", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{fellowshipIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InvitePlayerToPartyFromFriend
// Il2CppName: InvitePlayerToPartyFromFriend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::InvitePlayerToPartyFromFriend)> {
  static const MethodInfo* get() {
    static auto* friendIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InvitePlayerToPartyFromFriend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{friendIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::LeaveParty
// Il2CppName: LeaveParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::LeaveParty)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "LeaveParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::KickFromParty
// Il2CppName: KickFromParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::KickFromParty)> {
  static const MethodInfo* get() {
    static auto* memberidx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "KickFromParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{memberidx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InFellowship
// Il2CppName: InFellowship
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::InFellowship)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InFellowship", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateFellowshipListFromString
// Il2CppName: UpdateFellowshipListFromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::UpdateFellowshipListFromString)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateFellowshipListFromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetCurrentFellowshipList
// Il2CppName: GetCurrentFellowshipList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExtUI::FellowshipListEntry*> (*)()>(&ExtUI::InterfaceAPI::GetCurrentFellowshipList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetCurrentFellowshipList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetFellowshipMemberLastOnline
// Il2CppName: GetFellowshipMemberLastOnline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::GetFellowshipMemberLastOnline)> {
  static const MethodInfo* get() {
    static auto* playerIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetFellowshipMemberLastOnline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::FellowshipMemberNames
// Il2CppName: FellowshipMemberNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)()>(&ExtUI::InterfaceAPI::FellowshipMemberNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "FellowshipMemberNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::FellowshipMemberCount
// Il2CppName: FellowshipMemberCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&ExtUI::InterfaceAPI::FellowshipMemberCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "FellowshipMemberCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::FellowshipXP
// Il2CppName: FellowshipXP
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&ExtUI::InterfaceAPI::FellowshipXP)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "FellowshipXP", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::FellowshipMaxMembers
// Il2CppName: FellowshipMaxMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&ExtUI::InterfaceAPI::FellowshipMaxMembers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "FellowshipMaxMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::FellowshipLevel
// Il2CppName: FellowshipLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&ExtUI::InterfaceAPI::FellowshipLevel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "FellowshipLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::IsFellowshipLeader
// Il2CppName: IsFellowshipLeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::IsFellowshipLeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "IsFellowshipLeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::IsFellowshipOfficer
// Il2CppName: IsFellowshipOfficer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::IsFellowshipOfficer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "IsFellowshipOfficer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::IsFellowshipOfficerById
// Il2CppName: IsFellowshipOfficerById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&ExtUI::InterfaceAPI::IsFellowshipOfficerById)> {
  static const MethodInfo* get() {
    static auto* playerIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "IsFellowshipOfficerById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::HasFellowshipChestAccessById
// Il2CppName: HasFellowshipChestAccessById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&ExtUI::InterfaceAPI::HasFellowshipChestAccessById)> {
  static const MethodInfo* get() {
    static auto* playerIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "HasFellowshipChestAccessById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::PlayerInFellowship
// Il2CppName: PlayerInFellowship
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&ExtUI::InterfaceAPI::PlayerInFellowship)> {
  static const MethodInfo* get() {
    static auto* playerName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "PlayerInFellowship", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerName});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InvitePlayerToFellowship
// Il2CppName: InvitePlayerToFellowship
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint16_t)>(&ExtUI::InterfaceAPI::InvitePlayerToFellowship)> {
  static const MethodInfo* get() {
    static auto* playerguid = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InvitePlayerToFellowship", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerguid});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::LeaveFellowship
// Il2CppName: LeaveFellowship
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::LeaveFellowship)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "LeaveFellowship", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::KickFromFellowship
// Il2CppName: KickFromFellowship
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::KickFromFellowship)> {
  static const MethodInfo* get() {
    static auto* memberidx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "KickFromFellowship", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{memberidx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::PromoteToOfficer
// Il2CppName: PromoteToOfficer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::PromoteToOfficer)> {
  static const MethodInfo* get() {
    static auto* memberidx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "PromoteToOfficer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{memberidx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::DemoteOfficer
// Il2CppName: DemoteOfficer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::DemoteOfficer)> {
  static const MethodInfo* get() {
    static auto* memberidx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "DemoteOfficer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{memberidx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GiveFellowshipChestAccess
// Il2CppName: GiveFellowshipChestAccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::GiveFellowshipChestAccess)> {
  static const MethodInfo* get() {
    static auto* memberidx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GiveFellowshipChestAccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{memberidx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::RevokeFellowshipChestAccess
// Il2CppName: RevokeFellowshipChestAccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::RevokeFellowshipChestAccess)> {
  static const MethodInfo* get() {
    static auto* memberidx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "RevokeFellowshipChestAccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{memberidx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CreateFellowship
// Il2CppName: CreateFellowship
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::CreateFellowship)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CreateFellowship", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpgradeFellowship
// Il2CppName: UpgradeFellowship
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpgradeFellowship)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpgradeFellowship", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::FellowshipName
// Il2CppName: FellowshipName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&ExtUI::InterfaceAPI::FellowshipName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "FellowshipName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::HasSurname
// Il2CppName: HasSurname
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::HasSurname)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "HasSurname", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::Surname
// Il2CppName: Surname
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&ExtUI::InterfaceAPI::Surname)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "Surname", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetItemById
// Il2CppName: GetItemById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExtUI::InventoryItem* (*)(int)>(&ExtUI::InterfaceAPI::GetItemById)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetItemById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetItemById
// Il2CppName: GetItemById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExtUI::InventoryItem* (*)(::StringW)>(&ExtUI::InterfaceAPI::GetItemById)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetItemById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetItemByIdString
// Il2CppName: GetItemByIdString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExtUI::InventoryItem* (*)(::StringW)>(&ExtUI::InterfaceAPI::GetItemByIdString)> {
  static const MethodInfo* get() {
    static auto* id = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetItemByIdString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{id});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetDLCTitle
// Il2CppName: GetDLCTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::GetDLCTitle)> {
  static const MethodInfo* get() {
    static auto* dlcName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetDLCTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dlcName});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetDLCDescription
// Il2CppName: GetDLCDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::GetDLCDescription)> {
  static const MethodInfo* get() {
    static auto* dlcName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetDLCDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{dlcName});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ShowKeyboard
// Il2CppName: ShowKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Action_1<::StringW>*, bool, bool)>(&ExtUI::InterfaceAPI::ShowKeyboard)> {
  static const MethodInfo* get() {
    static auto* defaultText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* doneCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* showCommonPhrases = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* numericOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ShowKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{defaultText, doneCallback, showCommonPhrases, numericOnly});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ShowBugKeyboard
// Il2CppName: ShowBugKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Action_1<::StringW>*, bool, bool)>(&ExtUI::InterfaceAPI::ShowBugKeyboard)> {
  static const MethodInfo* get() {
    static auto* defaultText = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* doneCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* showCommonPhrases = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* numericOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ShowBugKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{defaultText, doneCallback, showCommonPhrases, numericOnly});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::HideKeyboard
// Il2CppName: HideKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::HideKeyboard)> {
  static const MethodInfo* get() {
    static auto* returnValue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "HideKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{returnValue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ForceCloseKeyboard
// Il2CppName: ForceCloseKeyboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::ForceCloseKeyboard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ForceCloseKeyboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::EnterRaid
// Il2CppName: EnterRaid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::EnterRaid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "EnterRaid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::JoinQueue
// Il2CppName: JoinQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::JoinQueue)> {
  static const MethodInfo* get() {
    static auto* queueName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "JoinQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{queueName});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::LeaveQueue
// Il2CppName: LeaveQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::LeaveQueue)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "LeaveQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateQueueStatus
// Il2CppName: UpdateQueueStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW)>(&ExtUI::InterfaceAPI::UpdateQueueStatus)> {
  static const MethodInfo* get() {
    static auto* queueName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* status = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateQueueStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{queueName, status});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::HasItemInInventory
// Il2CppName: HasItemInInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&ExtUI::InterfaceAPI::HasItemInInventory)> {
  static const MethodInfo* get() {
    static auto* itemId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "HasItemInInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemId});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateTradeOffer
// Il2CppName: UpdateTradeOffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW, ::StringW, bool, bool, int, int)>(&ExtUI::InterfaceAPI::UpdateTradeOffer)> {
  static const MethodInfo* get() {
    static auto* myOffer = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* theirOffer = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* theirName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* haveIAccepted = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* haveTheyAccepted = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* myCurrencyOffer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* theirCurrencyOffer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateTradeOffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{myOffer, theirOffer, theirName, haveIAccepted, haveTheyAccepted, myCurrencyOffer, theirCurrencyOffer});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateMyCurrencyOffer
// Il2CppName: UpdateMyCurrencyOffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&ExtUI::InterfaceAPI::UpdateMyCurrencyOffer)> {
  static const MethodInfo* get() {
    static auto* currencyOffer = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateMyCurrencyOffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currencyOffer});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::EndTradeOffer
// Il2CppName: EndTradeOffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::EndTradeOffer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "EndTradeOffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::AcceptTrade
// Il2CppName: AcceptTrade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::AcceptTrade)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "AcceptTrade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CancelTrade
// Il2CppName: CancelTrade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::CancelTrade)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CancelTrade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InitiateTradeWithPlayer
// Il2CppName: InitiateTradeWithPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint16_t)>(&ExtUI::InterfaceAPI::InitiateTradeWithPlayer)> {
  static const MethodInfo* get() {
    static auto* guid = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InitiateTradeWithPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{guid});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::hasCurrentTrade
// Il2CppName: hasCurrentTrade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::hasCurrentTrade)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "hasCurrentTrade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::IsTradingIdx
// Il2CppName: IsTradingIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&ExtUI::InterfaceAPI::IsTradingIdx)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "IsTradingIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::hasCurrentVendor
// Il2CppName: hasCurrentVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::hasCurrentVendor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "hasCurrentVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentVendorMonster
// Il2CppName: CurrentVendorMonster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::Monster* (*)()>(&ExtUI::InterfaceAPI::CurrentVendorMonster)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentVendorMonster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::getItemsForCurrentVendor
// Il2CppName: getItemsForCurrentVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExtUI::InventoryItemInstance*> (*)()>(&ExtUI::InterfaceAPI::getItemsForCurrentVendor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "getItemsForCurrentVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::getPricesForCurrentVendor
// Il2CppName: getPricesForCurrentVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (*)()>(&ExtUI::InterfaceAPI::getPricesForCurrentVendor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "getPricesForCurrentVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::getRepLevelRequirementsForCurrentVendor
// Il2CppName: getRepLevelRequirementsForCurrentVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (*)()>(&ExtUI::InterfaceAPI::getRepLevelRequirementsForCurrentVendor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "getRepLevelRequirementsForCurrentVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::getAchievementRequirementsForCurrentVendor
// Il2CppName: getAchievementRequirementsForCurrentVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)()>(&ExtUI::InterfaceAPI::getAchievementRequirementsForCurrentVendor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "getAchievementRequirementsForCurrentVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::getCurrencyIconForCurrentVendor
// Il2CppName: getCurrencyIconForCurrentVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(int)>(&ExtUI::InterfaceAPI::getCurrencyIconForCurrentVendor)> {
  static const MethodInfo* get() {
    static auto* itemIdx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "getCurrencyIconForCurrentVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::currentVendorNeedsPriceUpdate
// Il2CppName: currentVendorNeedsPriceUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::currentVendorNeedsPriceUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "currentVendorNeedsPriceUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::getVendorPriceForSlot
// Il2CppName: getVendorPriceForSlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::StringW)>(&ExtUI::InterfaceAPI::getVendorPriceForSlot)> {
  static const MethodInfo* get() {
    static auto* slotIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "getVendorPriceForSlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slotIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::attachedVendorGuid
// Il2CppName: attachedVendorGuid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (*)()>(&ExtUI::InterfaceAPI::attachedVendorGuid)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "attachedVendorGuid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::getVendorItemForSlot
// Il2CppName: getVendorItemForSlot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExtUI::InventoryItemInstance* (*)(::StringW)>(&ExtUI::InterfaceAPI::getVendorItemForSlot)> {
  static const MethodInfo* get() {
    static auto* slotIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "getVendorItemForSlot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{slotIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::AttachVendor
// Il2CppName: AttachVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::MagicalActual::Vendor*)>(&ExtUI::InterfaceAPI::AttachVendor)> {
  static const MethodInfo* get() {
    static auto* thisContainer = &::il2cpp_utils::GetClassFromName("MagicalActual", "Vendor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "AttachVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisContainer});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::DetachVendor
// Il2CppName: DetachVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::DetachVendor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "DetachVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentVendor
// Il2CppName: CurrentVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::Vendor* (*)()>(&ExtUI::InterfaceAPI::CurrentVendor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CalculateRepairCostForCurrentPlayer
// Il2CppName: CalculateRepairCostForCurrentPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (*)()>(&ExtUI::InterfaceAPI::CalculateRepairCostForCurrentPlayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CalculateRepairCostForCurrentPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateCurrentRepairWindowCost
// Il2CppName: UpdateCurrentRepairWindowCost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&ExtUI::InterfaceAPI::UpdateCurrentRepairWindowCost)> {
  static const MethodInfo* get() {
    static auto* cost = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* durability = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateCurrentRepairWindowCost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{cost, durability});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::RequestRepairFromCurrentVendor
// Il2CppName: RequestRepairFromCurrentVendor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::RequestRepairFromCurrentVendor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "RequestRepairFromCurrentVendor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::AttachContainer
// Il2CppName: AttachContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::MagicalActual::ItemContainer*)>(&ExtUI::InterfaceAPI::AttachContainer)> {
  static const MethodInfo* get() {
    static auto* thisContainer = &::il2cpp_utils::GetClassFromName("MagicalActual", "ItemContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "AttachContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{thisContainer});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::DetachContainer
// Il2CppName: DetachContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::DetachContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "DetachContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::hasDepositContainer
// Il2CppName: hasDepositContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::hasDepositContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "hasDepositContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentContainer
// Il2CppName: CurrentContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::MagicalActual::ItemContainer* (*)()>(&ExtUI::InterfaceAPI::CurrentContainer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentContainerIsPlayerChest
// Il2CppName: CurrentContainerIsPlayerChest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::CurrentContainerIsPlayerChest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentContainerIsPlayerChest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::RequestPlayerChestUpgrade
// Il2CppName: RequestPlayerChestUpgrade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::RequestPlayerChestUpgrade)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "RequestPlayerChestUpgrade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::RequestFurnitureChestUpgrade
// Il2CppName: RequestFurnitureChestUpgrade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::RequestFurnitureChestUpgrade)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "RequestFurnitureChestUpgrade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetBuildMode
// Il2CppName: GetBuildMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::GetBuildMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetBuildMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ToggleBuildMode
// Il2CppName: ToggleBuildMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::ToggleBuildMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ToggleBuildMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentContainerIsFellowshipChest
// Il2CppName: CurrentContainerIsFellowshipChest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::CurrentContainerIsFellowshipChest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentContainerIsFellowshipChest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentContainerIsIngredientChest
// Il2CppName: CurrentContainerIsIngredientChest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::CurrentContainerIsIngredientChest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentContainerIsIngredientChest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentContainerIsFurnitureChest
// Il2CppName: CurrentContainerIsFurnitureChest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::CurrentContainerIsFurnitureChest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentContainerIsFurnitureChest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentContainerIsTinkererChest
// Il2CppName: CurrentContainerIsTinkererChest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::CurrentContainerIsTinkererChest)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentContainerIsTinkererChest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetFellowshipChestLog
// Il2CppName: GetFellowshipChestLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&ExtUI::InterfaceAPI::GetFellowshipChestLog)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetFellowshipChestLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::AttachedContainerInventory
// Il2CppName: AttachedContainerInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExtUI::InventoryItemInstance*> (*)()>(&ExtUI::InterfaceAPI::AttachedContainerInventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "AttachedContainerInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetItemInstance
// Il2CppName: GetItemInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ExtUI::InventoryItemInstance* (*)(::StringW, ::StringW)>(&ExtUI::InterfaceAPI::GetItemInstance)> {
  static const MethodInfo* get() {
    static auto* boxType = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* boxIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetItemInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{boxType, boxIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateVibrationStrength
// Il2CppName: UpdateVibrationStrength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float)>(&ExtUI::InterfaceAPI::UpdateVibrationStrength)> {
  static const MethodInfo* get() {
    static auto* strength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateVibrationStrength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strength});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateSmoothTurn
// Il2CppName: UpdateSmoothTurn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float)>(&ExtUI::InterfaceAPI::UpdateSmoothTurn)> {
  static const MethodInfo* get() {
    static auto* strength = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateSmoothTurn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{strength});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateVolume
// Il2CppName: UpdateVolume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, float)>(&ExtUI::InterfaceAPI::UpdateVolume)> {
  static const MethodInfo* get() {
    static auto* volumeId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* percent = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateVolume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{volumeId, percent});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::SetRelocationSetting
// Il2CppName: SetRelocationSetting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::Vector3)>(&ExtUI::InterfaceAPI::SetRelocationSetting)> {
  static const MethodInfo* get() {
    static auto* setting = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "SetRelocationSetting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{setting, position});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetRelocationSetting
// Il2CppName: GetRelocationSetting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(::StringW)>(&ExtUI::InterfaceAPI::GetRelocationSetting)> {
  static const MethodInfo* get() {
    static auto* setting = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetRelocationSetting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{setting});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::SetRelocationRotationSetting
// Il2CppName: SetRelocationRotationSetting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::UnityEngine::Quaternion)>(&ExtUI::InterfaceAPI::SetRelocationRotationSetting)> {
  static const MethodInfo* get() {
    static auto* setting = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "SetRelocationRotationSetting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{setting, rotation});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetRelocationRotationSetting
// Il2CppName: GetRelocationRotationSetting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(::StringW)>(&ExtUI::InterfaceAPI::GetRelocationRotationSetting)> {
  static const MethodInfo* get() {
    static auto* setting = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetRelocationRotationSetting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{setting});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetVolume
// Il2CppName: GetVolume
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::StringW)>(&ExtUI::InterfaceAPI::GetVolume)> {
  static const MethodInfo* get() {
    static auto* volumeId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetVolume", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{volumeId});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InitVolumes
// Il2CppName: InitVolumes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::InitVolumes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InitVolumes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::MuteAllSound
// Il2CppName: MuteAllSound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::MuteAllSound)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "MuteAllSound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::StopAllPlayerEvents
// Il2CppName: StopAllPlayerEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::StopAllPlayerEvents)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "StopAllPlayerEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::SetVolumeInManager
// Il2CppName: SetVolumeInManager
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, float)>(&ExtUI::InterfaceAPI::SetVolumeInManager)> {
  static const MethodInfo* get() {
    static auto* volumeId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* percent = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "SetVolumeInManager", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{volumeId, percent});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::SetShadowQuality
// Il2CppName: SetShadowQuality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::SetShadowQuality)> {
  static const MethodInfo* get() {
    static auto* isIndoors = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "SetShadowQuality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{isIndoors});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::SetGraphicsQuality
// Il2CppName: SetGraphicsQuality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&ExtUI::InterfaceAPI::SetGraphicsQuality)> {
  static const MethodInfo* get() {
    static auto* quality = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "SetGraphicsQuality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{quality});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetGraphicsQuality
// Il2CppName: GetGraphicsQuality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&ExtUI::InterfaceAPI::GetGraphicsQuality)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetGraphicsQuality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InitGraphicsQuality
// Il2CppName: InitGraphicsQuality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::InitGraphicsQuality)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InitGraphicsQuality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentWeight
// Il2CppName: CurrentWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&ExtUI::InterfaceAPI::CurrentWeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::MaxWeight
// Il2CppName: MaxWeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&ExtUI::InterfaceAPI::MaxWeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "MaxWeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::EncumberedStatus
// Il2CppName: EncumberedStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (*)()>(&ExtUI::InterfaceAPI::EncumberedStatus)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "EncumberedStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateConnectionType
// Il2CppName: UpdateConnectionType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&ExtUI::InterfaceAPI::UpdateConnectionType)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateConnectionType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateConnection
// Il2CppName: UpdateConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateConnection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentConnectionType
// Il2CppName: CurrentConnectionType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&ExtUI::InterfaceAPI::CurrentConnectionType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentConnectionType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateBodyRotation
// Il2CppName: UpdateBodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&ExtUI::InterfaceAPI::UpdateBodyRotation)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateBodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InitBodyRotation
// Il2CppName: InitBodyRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::InitBodyRotation)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InitBodyRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateLocomotionPref
// Il2CppName: UpdateLocomotionPref
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, int)>(&ExtUI::InterfaceAPI::UpdateLocomotionPref)> {
  static const MethodInfo* get() {
    static auto* keyName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateLocomotionPref", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{keyName, newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateLocomotion
// Il2CppName: UpdateLocomotion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateLocomotion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateLocomotion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CurrentLocomotionSettings
// Il2CppName: CurrentLocomotionSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (*)()>(&ExtUI::InterfaceAPI::CurrentLocomotionSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CurrentLocomotionSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateFriendsListFromString
// Il2CppName: UpdateFriendsListFromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::UpdateFriendsListFromString)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateFriendsListFromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetCurrentFriendsList
// Il2CppName: GetCurrentFriendsList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExtUI::FriendsListEntry*> (*)()>(&ExtUI::InterfaceAPI::GetCurrentFriendsList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetCurrentFriendsList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::AddFriend
// Il2CppName: AddFriend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint16_t)>(&ExtUI::InterfaceAPI::AddFriend)> {
  static const MethodInfo* get() {
    static auto* guid = &::il2cpp_utils::GetClassFromName("System", "UInt16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "AddFriend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{guid});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::RemoveFriend
// Il2CppName: RemoveFriend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::RemoveFriend)> {
  static const MethodInfo* get() {
    static auto* friendIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "RemoveFriend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{friendIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeFingerGesture
// Il2CppName: ChangeFingerGesture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeFingerGesture)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeFingerGesture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeEnemyHealthBarPreference
// Il2CppName: ChangeEnemyHealthBarPreference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeEnemyHealthBarPreference)> {
  static const MethodInfo* get() {
    static auto* newValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeEnemyHealthBarPreference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newValue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateEnemyHealthBarVariable
// Il2CppName: UpdateEnemyHealthBarVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateEnemyHealthBarVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateEnemyHealthBarVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateFingerGestureVariable
// Il2CppName: UpdateFingerGestureVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateFingerGestureVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateFingerGestureVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeHandSize
// Il2CppName: ChangeHandSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&ExtUI::InterfaceAPI::ChangeHandSize)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeHandSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateHandSizeVariable
// Il2CppName: UpdateHandSizeVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateHandSizeVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateHandSizeVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateClassVfxEnabled
// Il2CppName: UpdateClassVfxEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, int)>(&ExtUI::InterfaceAPI::UpdateClassVfxEnabled)> {
  static const MethodInfo* get() {
    static auto* className = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newValue = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateClassVfxEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{className, newValue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateClassVfxVariables
// Il2CppName: UpdateClassVfxVariables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateClassVfxVariables)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateClassVfxVariables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeHelpsigns
// Il2CppName: ChangeHelpsigns
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeHelpsigns)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeHelpsigns", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateHelpSignsVariable
// Il2CppName: UpdateHelpSignsVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateHelpSignsVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateHelpSignsVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeMovies
// Il2CppName: ChangeMovies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeMovies)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeMovies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateMoviesVariable
// Il2CppName: UpdateMoviesVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateMoviesVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateMoviesVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeStats
// Il2CppName: ChangeStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeStats)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateStatsVariable
// Il2CppName: UpdateStatsVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateStatsVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateStatsVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeVerticalDirection
// Il2CppName: ChangeVerticalDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeVerticalDirection)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeVerticalDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateVerticalDirectionVariable
// Il2CppName: UpdateVerticalDirectionVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateVerticalDirectionVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateVerticalDirectionVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeCombatSprint
// Il2CppName: ChangeCombatSprint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeCombatSprint)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeCombatSprint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateCombatSprintVariable
// Il2CppName: UpdateCombatSprintVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateCombatSprintVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateCombatSprintVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeAutoRunPreference
// Il2CppName: ChangeAutoRunPreference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeAutoRunPreference)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeAutoRunPreference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateAutoRunVariable
// Il2CppName: UpdateAutoRunVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateAutoRunVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateAutoRunVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeDragonRaceFade
// Il2CppName: ChangeDragonRaceFade
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeDragonRaceFade)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeDragonRaceFade", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateDragonRaceFadeVariable
// Il2CppName: UpdateDragonRaceFadeVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateDragonRaceFadeVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateDragonRaceFadeVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeFellowshipChatToggle
// Il2CppName: ChangeFellowshipChatToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeFellowshipChatToggle)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeFellowshipChatToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateFellowshipChatToggleVariable
// Il2CppName: UpdateFellowshipChatToggleVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateFellowshipChatToggleVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateFellowshipChatToggleVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeFacialExpressionToggle
// Il2CppName: ChangeFacialExpressionToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeFacialExpressionToggle)> {
  static const MethodInfo* get() {
    static auto* newValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeFacialExpressionToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newValue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateFacialToggleVariable
// Il2CppName: UpdateFacialToggleVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateFacialToggleVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateFacialToggleVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeMapToggle
// Il2CppName: ChangeMapToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeMapToggle)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeMapToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateMapToggleVariable
// Il2CppName: UpdateMapToggleVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateMapToggleVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateMapToggleVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangeRelocationGrabPoints
// Il2CppName: ChangeRelocationGrabPoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangeRelocationGrabPoints)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangeRelocationGrabPoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateRelocationGrabPointsVariable
// Il2CppName: UpdateRelocationGrabPointsVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdateRelocationGrabPointsVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateRelocationGrabPointsVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ResetRelocationGrabPoints
// Il2CppName: ResetRelocationGrabPoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::ResetRelocationGrabPoints)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ResetRelocationGrabPoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChangePtt
// Il2CppName: ChangePtt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&ExtUI::InterfaceAPI::ChangePtt)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChangePtt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdatePttVariable
// Il2CppName: UpdatePttVariable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::UpdatePttVariable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdatePttVariable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateLfgPostsFromString
// Il2CppName: UpdateLfgPostsFromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::UpdateLfgPostsFromString)> {
  static const MethodInfo* get() {
    static auto* postsJson = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateLfgPostsFromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{postsJson});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::UpdateMessagesFromString
// Il2CppName: UpdateMessagesFromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::UpdateMessagesFromString)> {
  static const MethodInfo* get() {
    static auto* messagesJson = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "UpdateMessagesFromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{messagesJson});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetMessageThread
// Il2CppName: GetMessageThread
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::System::Action_1<::ExtUI::PrivateMessageThread*>*)>(&ExtUI::InterfaceAPI::GetMessageThread)> {
  static const MethodInfo* get() {
    static auto* messageidx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* threadCallback = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("ExtUI", "PrivateMessageThread")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetMessageThread", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{messageidx, threadCallback});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetCurrentMessages
// Il2CppName: GetCurrentMessages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::ExtUI::PrivateMessage*>* (*)()>(&ExtUI::InterfaceAPI::GetCurrentMessages)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetCurrentMessages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::SendChatMessage
// Il2CppName: SendChatMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW)>(&ExtUI::InterfaceAPI::SendChatMessage)> {
  static const MethodInfo* get() {
    static auto* messageidx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* chatmessage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "SendChatMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{messageidx, chatmessage});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::HidePrivateMessage
// Il2CppName: HidePrivateMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::HidePrivateMessage)> {
  static const MethodInfo* get() {
    static auto* messageidx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "HidePrivateMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{messageidx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::SendNewMessage
// Il2CppName: SendNewMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW, ::StringW, ::StringW, ::StringW)>(&ExtUI::InterfaceAPI::SendNewMessage)> {
  static const MethodInfo* get() {
    static auto* recipienttype = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* fellowshipIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* friendIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* subject = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* chatmessage = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "SendNewMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{recipienttype, fellowshipIdx, friendIdx, subject, chatmessage});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ConfirmLastApply
// Il2CppName: ConfirmLastApply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExtUI::InterfaceAPI::ConfirmLastApply)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ConfirmLastApply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChooseTalent
// Il2CppName: ChooseTalent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW)>(&ExtUI::InterfaceAPI::ChooseTalent)> {
  static const MethodInfo* get() {
    static auto* talentTier = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* tierOption = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChooseTalent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{talentTier, tierOption});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::ChoosePerk
// Il2CppName: ChoosePerk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW)>(&ExtUI::InterfaceAPI::ChoosePerk)> {
  static const MethodInfo* get() {
    static auto* perkType = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* perkTier = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "ChoosePerk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{perkType, perkTier});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::FormatSeconds
// Il2CppName: FormatSeconds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(float)>(&ExtUI::InterfaceAPI::FormatSeconds)> {
  static const MethodInfo* get() {
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "FormatSeconds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{time});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::LongDungeonName
// Il2CppName: LongDungeonName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::LongDungeonName)> {
  static const MethodInfo* get() {
    static auto* shortName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "LongDungeonName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shortName});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::canMakeCashShopPurchase
// Il2CppName: canMakeCashShopPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&ExtUI::InterfaceAPI::canMakeCashShopPurchase)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "canMakeCashShopPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::initiateSteamIap
// Il2CppName: initiateSteamIap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)(::StringW)>(&ExtUI::InterfaceAPI::initiateSteamIap)> {
  static const MethodInfo* get() {
    static auto* itemIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "initiateSteamIap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::finalizeSteamIap
// Il2CppName: finalizeSteamIap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)(::StringW)>(&ExtUI::InterfaceAPI::finalizeSteamIap)> {
  static const MethodInfo* get() {
    static auto* orderId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "finalizeSteamIap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{orderId});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::finalizeOculusIap
// Il2CppName: finalizeOculusIap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (*)(::StringW, ::StringW, bool)>(&ExtUI::InterfaceAPI::finalizeOculusIap)> {
  static const MethodInfo* get() {
    static auto* sku = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* nonce = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* initialCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "finalizeOculusIap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sku, nonce, initialCheck});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::InitiateCashShopPurchase
// Il2CppName: InitiateCashShopPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::InitiateCashShopPurchase)> {
  static const MethodInfo* get() {
    static auto* itemIdx = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "InitiateCashShopPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemIdx});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::LaunchCheckoutFlowCallback
// Il2CppName: LaunchCheckoutFlowCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*)>(&ExtUI::InterfaceAPI::LaunchCheckoutFlowCallback)> {
  static const MethodInfo* get() {
    static auto* msg = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("Oculus.Platform", "Message`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Oculus.Platform.Models", "Purchase")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "LaunchCheckoutFlowCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{msg});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::CompleteCashShopPurchase
// Il2CppName: CompleteCashShopPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::StringW)>(&ExtUI::InterfaceAPI::CompleteCashShopPurchase)> {
  static const MethodInfo* get() {
    static auto* transId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* sku = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "CompleteCashShopPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transId, sku});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::HandleOculusTransaction
// Il2CppName: HandleOculusTransaction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::StringW>, bool)>(&ExtUI::InterfaceAPI::HandleOculusTransaction)> {
  static const MethodInfo* get() {
    static auto* sku = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    static auto* initialCheck = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "HandleOculusTransaction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sku, initialCheck});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::HandleSteamTransaction
// Il2CppName: HandleSteamTransaction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&ExtUI::InterfaceAPI::HandleSteamTransaction)> {
  static const MethodInfo* get() {
    static auto* transId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "HandleSteamTransaction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transId});
  }
};
// Writing MetadataGetter for method: ExtUI::InterfaceAPI::GetFormattedClassName
// Il2CppName: GetFormattedClassName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&ExtUI::InterfaceAPI::GetFormattedClassName)> {
  static const MethodInfo* get() {
    static auto* className = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::InterfaceAPI*), "GetFormattedClassName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{className});
  }
};
