// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: BlogPost
  class BlogPost;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExtUI::BlogPost);
DEFINE_IL2CPP_ARG_TYPE(::ExtUI::BlogPost*, "ExtUI", "BlogPost");
// Type namespace: ExtUI
namespace ExtUI {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: ExtUI.BlogPost
  // [TokenAttribute] Offset: FFFFFFFF
  class BlogPost : public ::Il2CppObject {
    public:
    public:
    // public System.String id
    // Size: 0x8
    // Offset: 0x10
    ::StringW id;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String title
    // Size: 0x8
    // Offset: 0x18
    ::StringW title;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String slug
    // Size: 0x8
    // Offset: 0x20
    ::StringW slug;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String markdown
    // Size: 0x8
    // Offset: 0x28
    ::StringW markdown;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.String id
    [[deprecated("Use field access instead!")]] ::StringW& dyn_id();
    // Get instance field reference: public System.String title
    [[deprecated("Use field access instead!")]] ::StringW& dyn_title();
    // Get instance field reference: public System.String slug
    [[deprecated("Use field access instead!")]] ::StringW& dyn_slug();
    // Get instance field reference: public System.String markdown
    [[deprecated("Use field access instead!")]] ::StringW& dyn_markdown();
    // public System.Void .ctor()
    // Offset: 0xF48358
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BlogPost* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::BlogPost::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BlogPost*, creationType>()));
    }
  }; // ExtUI.BlogPost
  #pragma pack(pop)
  static check_size<sizeof(BlogPost), 40 + sizeof(::StringW)> __ExtUI_BlogPostSizeCheck;
  static_assert(sizeof(BlogPost) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExtUI::BlogPost::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
