// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InventoryItemInstance
  class InventoryItemInstance;
}
// Forward declaring namespace: MagicalActual
namespace MagicalActual {
  // Forward declaring type: NetEntity
  class NetEntity;
  // Forward declaring type: ItemContainer
  class ItemContainer;
  // Forward declaring type: WorldMenu
  class WorldMenu;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: TextAsset
  class TextAsset;
}
// Completed forward declares
// Type namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: AuctionChest
  class AuctionChest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExtUI::AuctionChest);
DEFINE_IL2CPP_ARG_TYPE(::ExtUI::AuctionChest*, "ExtUI", "AuctionChest");
// Type namespace: ExtUI
namespace ExtUI {
  // Size: 0x98
  #pragma pack(push, 1)
  // Autogenerated type: ExtUI.AuctionChest
  // [TokenAttribute] Offset: FFFFFFFF
  class AuctionChest : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::ExtUI::AuctionChest::$$c__DisplayClass40_0
    class $$c__DisplayClass40_0;
    // Nested type: ::ExtUI::AuctionChest::$$c__DisplayClass41_0
    class $$c__DisplayClass41_0;
    public:
    // public System.String OrbusNetComponent
    // Size: 0x8
    // Offset: 0x18
    ::StringW OrbusNetComponent;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private MagicalActual.NetEntity myEntity
    // Size: 0x8
    // Offset: 0x20
    ::MagicalActual::NetEntity* myEntity;
    // Field size check
    static_assert(sizeof(::MagicalActual::NetEntity*) == 0x8);
    // private MagicalActual.ItemContainer myItemContainer
    // Size: 0x8
    // Offset: 0x28
    ::MagicalActual::ItemContainer* myItemContainer;
    // Field size check
    static_assert(sizeof(::MagicalActual::ItemContainer*) == 0x8);
    // public UnityEngine.GameObject ownerMenuPoint
    // Size: 0x8
    // Offset: 0x30
    ::UnityEngine::GameObject* ownerMenuPoint;
    // Field size check
    static_assert(sizeof(::UnityEngine::GameObject*) == 0x8);
    // private MagicalActual.WorldMenu interactionMenu
    // Size: 0x8
    // Offset: 0x38
    ::MagicalActual::WorldMenu* interactionMenu;
    // Field size check
    static_assert(sizeof(::MagicalActual::WorldMenu*) == 0x8);
    // public UnityEngine.TextAsset ownerMenuHtml
    // Size: 0x8
    // Offset: 0x40
    ::UnityEngine::TextAsset* ownerMenuHtml;
    // Field size check
    static_assert(sizeof(::UnityEngine::TextAsset*) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE11DC
    // private ExtUI.InventoryItemInstance[] <myInventory>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<::ExtUI::InventoryItemInstance*> myInventory;
    // Field size check
    static_assert(sizeof(::ArrayW<::ExtUI::InventoryItemInstance*>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE11EC
    // private System.Int32[] <myBids>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<int> myBids;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE11FC
    // private System.Int32[] <myBuyouts>k__BackingField
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<int> myBuyouts;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE120C
    // private System.String[] <myErrors>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::ArrayW<::StringW> myErrors;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // [CompilerGeneratedAttribute] Offset: 0xAE121C
    // private System.String[] <myAuctions>k__BackingField
    // Size: 0x8
    // Offset: 0x68
    ::ArrayW<::StringW> myAuctions;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // public System.String inventory
    // Size: 0x8
    // Offset: 0x70
    ::StringW inventory;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String bids
    // Size: 0x8
    // Offset: 0x78
    ::StringW bids;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String buyouts
    // Size: 0x8
    // Offset: 0x80
    ::StringW buyouts;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String errors
    // Size: 0x8
    // Offset: 0x88
    ::StringW errors;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String auctions
    // Size: 0x8
    // Offset: 0x90
    ::StringW auctions;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.String OrbusNetComponent
    [[deprecated("Use field access instead!")]] ::StringW& dyn_OrbusNetComponent();
    // Get instance field reference: private MagicalActual.NetEntity myEntity
    [[deprecated("Use field access instead!")]] ::MagicalActual::NetEntity*& dyn_myEntity();
    // Get instance field reference: private MagicalActual.ItemContainer myItemContainer
    [[deprecated("Use field access instead!")]] ::MagicalActual::ItemContainer*& dyn_myItemContainer();
    // Get instance field reference: public UnityEngine.GameObject ownerMenuPoint
    [[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& dyn_ownerMenuPoint();
    // Get instance field reference: private MagicalActual.WorldMenu interactionMenu
    [[deprecated("Use field access instead!")]] ::MagicalActual::WorldMenu*& dyn_interactionMenu();
    // Get instance field reference: public UnityEngine.TextAsset ownerMenuHtml
    [[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& dyn_ownerMenuHtml();
    // Get instance field reference: private ExtUI.InventoryItemInstance[] <myInventory>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::ExtUI::InventoryItemInstance*>& dyn_$myInventory$k__BackingField();
    // Get instance field reference: private System.Int32[] <myBids>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_$myBids$k__BackingField();
    // Get instance field reference: private System.Int32[] <myBuyouts>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<int>& dyn_$myBuyouts$k__BackingField();
    // Get instance field reference: private System.String[] <myErrors>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$myErrors$k__BackingField();
    // Get instance field reference: private System.String[] <myAuctions>k__BackingField
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_$myAuctions$k__BackingField();
    // Get instance field reference: public System.String inventory
    [[deprecated("Use field access instead!")]] ::StringW& dyn_inventory();
    // Get instance field reference: public System.String bids
    [[deprecated("Use field access instead!")]] ::StringW& dyn_bids();
    // Get instance field reference: public System.String buyouts
    [[deprecated("Use field access instead!")]] ::StringW& dyn_buyouts();
    // Get instance field reference: public System.String errors
    [[deprecated("Use field access instead!")]] ::StringW& dyn_errors();
    // Get instance field reference: public System.String auctions
    [[deprecated("Use field access instead!")]] ::StringW& dyn_auctions();
    // private System.Void set_myInventory(ExtUI.InventoryItemInstance[] value)
    // Offset: 0xF46E8C
    void set_myInventory(::ArrayW<::ExtUI::InventoryItemInstance*> value);
    // protected ExtUI.InventoryItemInstance[] get_myInventory()
    // Offset: 0xF46E94
    ::ArrayW<::ExtUI::InventoryItemInstance*> get_myInventory();
    // private System.Void set_myBids(System.Int32[] value)
    // Offset: 0xF46E9C
    void set_myBids(::ArrayW<int> value);
    // protected System.Int32[] get_myBids()
    // Offset: 0xF46EA4
    ::ArrayW<int> get_myBids();
    // private System.Void set_myBuyouts(System.Int32[] value)
    // Offset: 0xF46EAC
    void set_myBuyouts(::ArrayW<int> value);
    // protected System.Int32[] get_myBuyouts()
    // Offset: 0xF46EB4
    ::ArrayW<int> get_myBuyouts();
    // private System.Void set_myErrors(System.String[] value)
    // Offset: 0xF46EBC
    void set_myErrors(::ArrayW<::StringW> value);
    // protected System.String[] get_myErrors()
    // Offset: 0xF46EC4
    ::ArrayW<::StringW> get_myErrors();
    // private System.Void set_myAuctions(System.String[] value)
    // Offset: 0xF46ECC
    void set_myAuctions(::ArrayW<::StringW> value);
    // protected System.String[] get_myAuctions()
    // Offset: 0xF46ED4
    ::ArrayW<::StringW> get_myAuctions();
    // private System.Void Awake()
    // Offset: 0xF46EDC
    void Awake();
    // private System.Void Start()
    // Offset: 0xF46F34
    void Start();
    // private System.Void UpdateOwnerMenu()
    // Offset: 0xF46FA4
    void UpdateOwnerMenu();
    // private System.Void ItemContainerInventoryChanged(MagicalActual.ItemContainer container)
    // Offset: 0xF4721C
    void ItemContainerInventoryChanged(::MagicalActual::ItemContainer* container);
    // public System.Int32[] GetCurrentBids()
    // Offset: 0xF47220
    ::ArrayW<int> GetCurrentBids();
    // public System.Int32[] GetCurrentBuyouts()
    // Offset: 0xF47228
    ::ArrayW<int> GetCurrentBuyouts();
    // public ExtUI.InventoryItemInstance[] GetCurrentItems()
    // Offset: 0xF47230
    ::ArrayW<::ExtUI::InventoryItemInstance*> GetCurrentItems();
    // public System.String[] GetCurrentErrors()
    // Offset: 0xF47238
    ::ArrayW<::StringW> GetCurrentErrors();
    // public System.String[] GetCurrentAuctions()
    // Offset: 0xF47240
    ::ArrayW<::StringW> GetCurrentAuctions();
    // public System.Void PostItem(System.Int32 itemPosition, System.Int32[] newbids, System.Int32[] newbuyouts)
    // Offset: 0xF47248
    void PostItem(int itemPosition, ::ArrayW<int> newbids, ::ArrayW<int> newbuyouts);
    // public System.Void CancelItem(System.Int32 itemPosition)
    // Offset: 0xF475A8
    void CancelItem(int itemPosition);
    // private System.String JoinIntArray(System.Int32[] arr)
    // Offset: 0xF47378
    ::StringW JoinIntArray(::ArrayW<int> arr);
    // private System.String JoinStringArray(System.String[] arr)
    // Offset: 0xF47498
    ::StringW JoinStringArray(::ArrayW<::StringW> arr);
    // private System.Void OnDestroy()
    // Offset: 0xF476B8
    void OnDestroy();
    // public System.Void WithdrawCurrency()
    // Offset: 0xF47738
    void WithdrawCurrency();
    // public System.Int32 AvailableCurrency()
    // Offset: 0xF47768
    int AvailableCurrency();
    // private System.Void UpdateInventory()
    // Offset: 0xF47798
    void UpdateInventory();
    // public System.Void orbusNetInit(MagicalActual.NetEntity entity)
    // Offset: 0xF47BC8
    void orbusNetInit(::MagicalActual::NetEntity* entity);
    // public System.Void .ctor()
    // Offset: 0xF47DCC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuctionChest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::AuctionChest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuctionChest*, creationType>()));
    }
    // private System.Void <orbusNetInit>b__48_0(System.Object newvalue)
    // Offset: 0xF47E3C
    void $orbusNetInit$b__48_0(::Il2CppObject* newvalue);
    // private System.Void <orbusNetInit>b__48_1(System.Object newvalue)
    // Offset: 0xF47EF8
    void $orbusNetInit$b__48_1(::Il2CppObject* newvalue);
    // private System.Void <orbusNetInit>b__48_2(System.Object newvalue)
    // Offset: 0xF47FB4
    void $orbusNetInit$b__48_2(::Il2CppObject* newvalue);
    // private System.Void <orbusNetInit>b__48_3(System.Object newvalue)
    // Offset: 0xF48070
    void $orbusNetInit$b__48_3(::Il2CppObject* newvalue);
    // private System.Void <orbusNetInit>b__48_4(System.Object newvalue)
    // Offset: 0xF4812C
    void $orbusNetInit$b__48_4(::Il2CppObject* newvalue);
  }; // ExtUI.AuctionChest
  #pragma pack(pop)
  static check_size<sizeof(AuctionChest), 144 + sizeof(::StringW)> __ExtUI_AuctionChestSizeCheck;
  static_assert(sizeof(AuctionChest) == 0x98);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExtUI::AuctionChest::set_myInventory
// Il2CppName: set_myInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::ArrayW<::ExtUI::InventoryItemInstance*>)>(&ExtUI::AuctionChest::set_myInventory)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("ExtUI", "InventoryItemInstance"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "set_myInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::get_myInventory
// Il2CppName: get_myInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExtUI::InventoryItemInstance*> (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::get_myInventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "get_myInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::set_myBids
// Il2CppName: set_myBids
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::ArrayW<int>)>(&ExtUI::AuctionChest::set_myBids)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "set_myBids", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::get_myBids
// Il2CppName: get_myBids
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::get_myBids)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "get_myBids", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::set_myBuyouts
// Il2CppName: set_myBuyouts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::ArrayW<int>)>(&ExtUI::AuctionChest::set_myBuyouts)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "set_myBuyouts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::get_myBuyouts
// Il2CppName: get_myBuyouts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::get_myBuyouts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "get_myBuyouts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::set_myErrors
// Il2CppName: set_myErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::ArrayW<::StringW>)>(&ExtUI::AuctionChest::set_myErrors)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "set_myErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::get_myErrors
// Il2CppName: get_myErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::get_myErrors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "get_myErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::set_myAuctions
// Il2CppName: set_myAuctions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::ArrayW<::StringW>)>(&ExtUI::AuctionChest::set_myAuctions)> {
  static const MethodInfo* get() {
    static auto* value = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "set_myAuctions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::get_myAuctions
// Il2CppName: get_myAuctions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::get_myAuctions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "get_myAuctions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::UpdateOwnerMenu
// Il2CppName: UpdateOwnerMenu
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::UpdateOwnerMenu)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "UpdateOwnerMenu", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::ItemContainerInventoryChanged
// Il2CppName: ItemContainerInventoryChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::MagicalActual::ItemContainer*)>(&ExtUI::AuctionChest::ItemContainerInventoryChanged)> {
  static const MethodInfo* get() {
    static auto* container = &::il2cpp_utils::GetClassFromName("MagicalActual", "ItemContainer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "ItemContainerInventoryChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{container});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::GetCurrentBids
// Il2CppName: GetCurrentBids
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::GetCurrentBids)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "GetCurrentBids", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::GetCurrentBuyouts
// Il2CppName: GetCurrentBuyouts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::GetCurrentBuyouts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "GetCurrentBuyouts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::GetCurrentItems
// Il2CppName: GetCurrentItems
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ExtUI::InventoryItemInstance*> (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::GetCurrentItems)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "GetCurrentItems", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::GetCurrentErrors
// Il2CppName: GetCurrentErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::GetCurrentErrors)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "GetCurrentErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::GetCurrentAuctions
// Il2CppName: GetCurrentAuctions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::GetCurrentAuctions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "GetCurrentAuctions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::PostItem
// Il2CppName: PostItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(int, ::ArrayW<int>, ::ArrayW<int>)>(&ExtUI::AuctionChest::PostItem)> {
  static const MethodInfo* get() {
    static auto* itemPosition = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* newbids = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* newbuyouts = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "PostItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemPosition, newbids, newbuyouts});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::CancelItem
// Il2CppName: CancelItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(int)>(&ExtUI::AuctionChest::CancelItem)> {
  static const MethodInfo* get() {
    static auto* itemPosition = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "CancelItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{itemPosition});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::JoinIntArray
// Il2CppName: JoinIntArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (ExtUI::AuctionChest::*)(::ArrayW<int>)>(&ExtUI::AuctionChest::JoinIntArray)> {
  static const MethodInfo* get() {
    static auto* arr = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "JoinIntArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arr});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::JoinStringArray
// Il2CppName: JoinStringArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (ExtUI::AuctionChest::*)(::ArrayW<::StringW>)>(&ExtUI::AuctionChest::JoinStringArray)> {
  static const MethodInfo* get() {
    static auto* arr = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "JoinStringArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{arr});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::WithdrawCurrency
// Il2CppName: WithdrawCurrency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::WithdrawCurrency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "WithdrawCurrency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::AvailableCurrency
// Il2CppName: AvailableCurrency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::AvailableCurrency)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "AvailableCurrency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::UpdateInventory
// Il2CppName: UpdateInventory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)()>(&ExtUI::AuctionChest::UpdateInventory)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "UpdateInventory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::orbusNetInit
// Il2CppName: orbusNetInit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::MagicalActual::NetEntity*)>(&ExtUI::AuctionChest::orbusNetInit)> {
  static const MethodInfo* get() {
    static auto* entity = &::il2cpp_utils::GetClassFromName("MagicalActual", "NetEntity")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "orbusNetInit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{entity});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: ExtUI::AuctionChest::$orbusNetInit$b__48_0
// Il2CppName: <orbusNetInit>b__48_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::Il2CppObject*)>(&ExtUI::AuctionChest::$orbusNetInit$b__48_0)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "<orbusNetInit>b__48_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::$orbusNetInit$b__48_1
// Il2CppName: <orbusNetInit>b__48_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::Il2CppObject*)>(&ExtUI::AuctionChest::$orbusNetInit$b__48_1)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "<orbusNetInit>b__48_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::$orbusNetInit$b__48_2
// Il2CppName: <orbusNetInit>b__48_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::Il2CppObject*)>(&ExtUI::AuctionChest::$orbusNetInit$b__48_2)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "<orbusNetInit>b__48_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::$orbusNetInit$b__48_3
// Il2CppName: <orbusNetInit>b__48_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::Il2CppObject*)>(&ExtUI::AuctionChest::$orbusNetInit$b__48_3)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "<orbusNetInit>b__48_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
// Writing MetadataGetter for method: ExtUI::AuctionChest::$orbusNetInit$b__48_4
// Il2CppName: <orbusNetInit>b__48_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExtUI::AuctionChest::*)(::Il2CppObject*)>(&ExtUI::AuctionChest::$orbusNetInit$b__48_4)> {
  static const MethodInfo* get() {
    static auto* newvalue = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(ExtUI::AuctionChest*), "<orbusNetInit>b__48_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{newvalue});
  }
};
