// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: ExtUI.InventoryItem
#include "ExtUI/InventoryItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Mesh
  class Mesh;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExtUI::InventoryItem::$$c__DisplayClass44_0);
DEFINE_IL2CPP_ARG_TYPE(::ExtUI::InventoryItem::$$c__DisplayClass44_0*, "ExtUI", "InventoryItem/<>c__DisplayClass44_0");
// Type namespace: ExtUI
namespace ExtUI {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: ExtUI.InventoryItem/<>c__DisplayClass44_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AD1B78
  class InventoryItem::$$c__DisplayClass44_0 : public ::Il2CppObject {
    public:
    public:
    // public ExtUI.InventoryItem <>4__this
    // Size: 0x8
    // Offset: 0x10
    ::ExtUI::InventoryItem* $$4__this;
    // Field size check
    static_assert(sizeof(::ExtUI::InventoryItem*) == 0x8);
    // public System.Action`1<UnityEngine.Mesh> callback
    // Size: 0x8
    // Offset: 0x18
    ::System::Action_1<::UnityEngine::Mesh*>* callback;
    // Field size check
    static_assert(sizeof(::System::Action_1<::UnityEngine::Mesh*>*) == 0x8);
    public:
    // Get instance field reference: public ExtUI.InventoryItem <>4__this
    [[deprecated("Use field access instead!")]] ::ExtUI::InventoryItem*& dyn_$$4__this();
    // Get instance field reference: public System.Action`1<UnityEngine.Mesh> callback
    [[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Mesh*>*& dyn_callback();
    // public System.Void .ctor()
    // Offset: 0x28E3E08
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InventoryItem::$$c__DisplayClass44_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InventoryItem::$$c__DisplayClass44_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InventoryItem::$$c__DisplayClass44_0*, creationType>()));
    }
  }; // ExtUI.InventoryItem/<>c__DisplayClass44_0
  #pragma pack(pop)
  static check_size<sizeof(InventoryItem::$$c__DisplayClass44_0), 24 + sizeof(::System::Action_1<::UnityEngine::Mesh*>*)> __ExtUI_InventoryItem_$$c__DisplayClass44_0SizeCheck;
  static_assert(sizeof(InventoryItem::$$c__DisplayClass44_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExtUI::InventoryItem::$$c__DisplayClass44_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
