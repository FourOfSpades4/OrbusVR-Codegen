// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: DataRequest
  class DataRequest;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExtUI::DataRequest);
DEFINE_IL2CPP_ARG_TYPE(::ExtUI::DataRequest*, "ExtUI", "DataRequest");
// Type namespace: ExtUI
namespace ExtUI {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: ExtUI.DataRequest
  // [TokenAttribute] Offset: FFFFFFFF
  class DataRequest : public ::Il2CppObject {
    public:
    public:
    // public System.Boolean isDone
    // Size: 0x1
    // Offset: 0x10
    bool isDone;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: isDone and: response
    char __padding0[0x7] = {};
    // public System.String response
    // Size: 0x8
    // Offset: 0x18
    ::StringW response;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public System.Boolean isDone
    [[deprecated("Use field access instead!")]] bool& dyn_isDone();
    // Get instance field reference: public System.String response
    [[deprecated("Use field access instead!")]] ::StringW& dyn_response();
    // public System.Void .ctor()
    // Offset: 0xF498D8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static DataRequest* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::DataRequest::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<DataRequest*, creationType>()));
    }
  }; // ExtUI.DataRequest
  #pragma pack(pop)
  static check_size<sizeof(DataRequest), 24 + sizeof(::StringW)> __ExtUI_DataRequestSizeCheck;
  static_assert(sizeof(DataRequest) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExtUI::DataRequest::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
