// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: ExtUI
namespace ExtUI {
  // Forward declaring type: InfusionCalculationResponse
  class InfusionCalculationResponse;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::ExtUI::InfusionCalculationResponse);
DEFINE_IL2CPP_ARG_TYPE(::ExtUI::InfusionCalculationResponse*, "ExtUI", "InfusionCalculationResponse");
// Type namespace: ExtUI
namespace ExtUI {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: ExtUI.InfusionCalculationResponse
  // [TokenAttribute] Offset: FFFFFFFF
  class InfusionCalculationResponse : public ::Il2CppObject {
    public:
    public:
    // public System.String[] upgradedStatNames
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<::StringW> upgradedStatNames;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    // public System.String[] upgradedStatValues
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::StringW> upgradedStatValues;
    // Field size check
    static_assert(sizeof(::ArrayW<::StringW>) == 0x8);
    public:
    // Get instance field reference: public System.String[] upgradedStatNames
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_upgradedStatNames();
    // Get instance field reference: public System.String[] upgradedStatValues
    [[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& dyn_upgradedStatValues();
    // public System.Void .ctor()
    // Offset: 0x28CC11C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static InfusionCalculationResponse* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::ExtUI::InfusionCalculationResponse::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<InfusionCalculationResponse*, creationType>()));
    }
  }; // ExtUI.InfusionCalculationResponse
  #pragma pack(pop)
  static check_size<sizeof(InfusionCalculationResponse), 24 + sizeof(::ArrayW<::StringW>)> __ExtUI_InfusionCalculationResponseSizeCheck;
  static_assert(sizeof(InfusionCalculationResponse) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: ExtUI::InfusionCalculationResponse::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
