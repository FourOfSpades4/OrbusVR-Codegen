// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: LitJson.UnityTypeBindings
#include "LitJson/UnityTypeBindings.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Forward declaring namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonWriter
  class JsonWriter;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Bounds
  struct Bounds;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LitJson::UnityTypeBindings::$$c__DisplayClass2_0);
DEFINE_IL2CPP_ARG_TYPE(::LitJson::UnityTypeBindings::$$c__DisplayClass2_0*, "LitJson", "UnityTypeBindings/<>c__DisplayClass2_0");
// Type namespace: LitJson
namespace LitJson {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: LitJson.UnityTypeBindings/<>c__DisplayClass2_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: ACEBD0
  class UnityTypeBindings::$$c__DisplayClass2_0 : public ::Il2CppObject {
    public:
    public:
    // public System.Action`2<UnityEngine.Vector2,LitJson.JsonWriter> writeVector2
    // Size: 0x8
    // Offset: 0x10
    ::System::Action_2<::UnityEngine::Vector2, ::LitJson::JsonWriter*>* writeVector2;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::Vector2, ::LitJson::JsonWriter*>*) == 0x8);
    // public System.Action`2<UnityEngine.Vector3,LitJson.JsonWriter> writeVector3
    // Size: 0x8
    // Offset: 0x18
    ::System::Action_2<::UnityEngine::Vector3, ::LitJson::JsonWriter*>* writeVector3;
    // Field size check
    static_assert(sizeof(::System::Action_2<::UnityEngine::Vector3, ::LitJson::JsonWriter*>*) == 0x8);
    public:
    // Get instance field reference: public System.Action`2<UnityEngine.Vector2,LitJson.JsonWriter> writeVector2
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::Vector2, ::LitJson::JsonWriter*>*& dyn_writeVector2();
    // Get instance field reference: public System.Action`2<UnityEngine.Vector3,LitJson.JsonWriter> writeVector3
    [[deprecated("Use field access instead!")]] ::System::Action_2<::UnityEngine::Vector3, ::LitJson::JsonWriter*>*& dyn_writeVector3();
    // public System.Void .ctor()
    // Offset: 0x120D22C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UnityTypeBindings::$$c__DisplayClass2_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::UnityTypeBindings::$$c__DisplayClass2_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UnityTypeBindings::$$c__DisplayClass2_0*, creationType>()));
    }
    // System.Void <Register>b__3(UnityEngine.Vector2 v, LitJson.JsonWriter w)
    // Offset: 0x120DC08
    void $Register$b__3(::UnityEngine::Vector2 v, ::LitJson::JsonWriter* w);
    // System.Void <Register>b__5(UnityEngine.Vector3 v, LitJson.JsonWriter w)
    // Offset: 0x120DC90
    void $Register$b__5(::UnityEngine::Vector3 v, ::LitJson::JsonWriter* w);
    // System.Void <Register>b__10(UnityEngine.Bounds v, LitJson.JsonWriter w)
    // Offset: 0x120DD28
    void $Register$b__10(::UnityEngine::Bounds v, ::LitJson::JsonWriter* w);
  }; // LitJson.UnityTypeBindings/<>c__DisplayClass2_0
  #pragma pack(pop)
  static check_size<sizeof(UnityTypeBindings::$$c__DisplayClass2_0), 24 + sizeof(::System::Action_2<::UnityEngine::Vector3, ::LitJson::JsonWriter*>*)> __LitJson_UnityTypeBindings_$$c__DisplayClass2_0SizeCheck;
  static_assert(sizeof(UnityTypeBindings::$$c__DisplayClass2_0) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LitJson::UnityTypeBindings::$$c__DisplayClass2_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::UnityTypeBindings::$$c__DisplayClass2_0::$Register$b__3
// Il2CppName: <Register>b__3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::UnityTypeBindings::$$c__DisplayClass2_0::*)(::UnityEngine::Vector2, ::LitJson::JsonWriter*)>(&LitJson::UnityTypeBindings::$$c__DisplayClass2_0::$Register$b__3)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector2")->byval_arg;
    static auto* w = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::UnityTypeBindings::$$c__DisplayClass2_0*), "<Register>b__3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v, w});
  }
};
// Writing MetadataGetter for method: LitJson::UnityTypeBindings::$$c__DisplayClass2_0::$Register$b__5
// Il2CppName: <Register>b__5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::UnityTypeBindings::$$c__DisplayClass2_0::*)(::UnityEngine::Vector3, ::LitJson::JsonWriter*)>(&LitJson::UnityTypeBindings::$$c__DisplayClass2_0::$Register$b__5)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* w = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::UnityTypeBindings::$$c__DisplayClass2_0*), "<Register>b__5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v, w});
  }
};
// Writing MetadataGetter for method: LitJson::UnityTypeBindings::$$c__DisplayClass2_0::$Register$b__10
// Il2CppName: <Register>b__10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::UnityTypeBindings::$$c__DisplayClass2_0::*)(::UnityEngine::Bounds, ::LitJson::JsonWriter*)>(&LitJson::UnityTypeBindings::$$c__DisplayClass2_0::$Register$b__10)> {
  static const MethodInfo* get() {
    static auto* v = &::il2cpp_utils::GetClassFromName("UnityEngine", "Bounds")->byval_arg;
    static auto* w = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::UnityTypeBindings::$$c__DisplayClass2_0*), "<Register>b__10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{v, w});
  }
};
