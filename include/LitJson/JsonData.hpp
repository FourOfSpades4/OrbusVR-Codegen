// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: LitJson.IJsonWrapper
#include "LitJson/IJsonWrapper.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: LitJson.JsonType
#include "LitJson/JsonType.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
  // Forward declaring type: ICollection`1<T>
  template<typename T>
  class ICollection_1;
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Skipping declaration: ICollection because it is already included!
  // Forward declaring type: IDictionaryEnumerator
  class IDictionaryEnumerator;
  // Forward declaring type: IEnumerator
  class IEnumerator;
  // Skipping declaration: IDictionary because it is already included!
  // Skipping declaration: IList because it is already included!
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Array
  class Array;
}
// Forward declaring namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonWriter
  class JsonWriter;
}
// Completed forward declares
// Type namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonData
  class JsonData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LitJson::JsonData);
DEFINE_IL2CPP_ARG_TYPE(::LitJson::JsonData*, "LitJson", "JsonData");
// Type namespace: LitJson
namespace LitJson {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: LitJson.JsonData
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: ACEB58
  class JsonData : public ::Il2CppObject/*, public ::LitJson::IJsonWrapper, public ::System::IEquatable_1<::LitJson::JsonData*>*/ {
    public:
    public:
    // private System.Object val
    // Size: 0x8
    // Offset: 0x10
    ::Il2CppObject* val;
    // Field size check
    static_assert(sizeof(::Il2CppObject*) == 0x8);
    // private System.String json
    // Size: 0x8
    // Offset: 0x18
    ::StringW json;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private LitJson.JsonType type
    // Size: 0x4
    // Offset: 0x20
    ::LitJson::JsonType type;
    // Field size check
    static_assert(sizeof(::LitJson::JsonType) == 0x4);
    // Padding between fields: type and: list
    char __padding2[0x4] = {};
    // private System.Collections.Generic.IList`1<System.Collections.Generic.KeyValuePair`2<System.String,LitJson.JsonData>> list
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>* list;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::LitJson::IJsonWrapper
    operator ::LitJson::IJsonWrapper() noexcept {
      return *reinterpret_cast<::LitJson::IJsonWrapper*>(this);
    }
    // Creating interface conversion operator: operator ::System::IEquatable_1<::LitJson::JsonData*>
    operator ::System::IEquatable_1<::LitJson::JsonData*>() noexcept {
      return *reinterpret_cast<::System::IEquatable_1<::LitJson::JsonData*>*>(this);
    }
    // Get instance field reference: private System.Object val
    [[deprecated("Use field access instead!")]] ::Il2CppObject*& dyn_val();
    // Get instance field reference: private System.String json
    [[deprecated("Use field access instead!")]] ::StringW& dyn_json();
    // Get instance field reference: private LitJson.JsonType type
    [[deprecated("Use field access instead!")]] ::LitJson::JsonType& dyn_type();
    // Get instance field reference: private System.Collections.Generic.IList`1<System.Collections.Generic.KeyValuePair`2<System.String,LitJson.JsonData>> list
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>*& dyn_list();
    // public System.Int32 get_Count()
    // Offset: 0x106FB98
    int get_Count();
    // public System.Boolean get_IsArray()
    // Offset: 0x106FD64
    bool get_IsArray();
    // public System.Boolean get_IsBoolean()
    // Offset: 0x106FD74
    bool get_IsBoolean();
    // public System.Boolean get_IsReal()
    // Offset: 0x106FD84
    bool get_IsReal();
    // public System.Boolean get_IsNatural()
    // Offset: 0x106FD94
    bool get_IsNatural();
    // public System.Boolean get_IsObject()
    // Offset: 0x106FDA4
    bool get_IsObject();
    // public System.Boolean get_IsString()
    // Offset: 0x106FDB4
    bool get_IsString();
    // public System.Collections.Generic.ICollection`1<System.String> get_Keys()
    // Offset: 0x106FDC4
    ::System::Collections::Generic::ICollection_1<::StringW>* get_Keys();
    // private System.Int32 System.Collections.ICollection.get_Count()
    // Offset: 0x1070108
    int System_Collections_ICollection_get_Count();
    // private System.Boolean System.Collections.ICollection.get_IsSynchronized()
    // Offset: 0x107010C
    bool System_Collections_ICollection_get_IsSynchronized();
    // private System.Object System.Collections.ICollection.get_SyncRoot()
    // Offset: 0x10701C8
    ::Il2CppObject* System_Collections_ICollection_get_SyncRoot();
    // private System.Boolean System.Collections.IDictionary.get_IsFixedSize()
    // Offset: 0x1070284
    bool System_Collections_IDictionary_get_IsFixedSize();
    // private System.Boolean System.Collections.IDictionary.get_IsReadOnly()
    // Offset: 0x1070340
    bool System_Collections_IDictionary_get_IsReadOnly();
    // private System.Collections.ICollection System.Collections.IDictionary.get_Keys()
    // Offset: 0x10703FC
    ::System::Collections::ICollection* System_Collections_IDictionary_get_Keys();
    // private System.Collections.ICollection System.Collections.IDictionary.get_Values()
    // Offset: 0x10707B8
    ::System::Collections::ICollection* System_Collections_IDictionary_get_Values();
    // private System.Boolean System.Collections.IList.get_IsFixedSize()
    // Offset: 0x1070B74
    bool System_Collections_IList_get_IsFixedSize();
    // private System.Boolean System.Collections.IList.get_IsReadOnly()
    // Offset: 0x1070D78
    bool System_Collections_IList_get_IsReadOnly();
    // private System.Object System.Collections.IDictionary.get_Item(System.Object key)
    // Offset: 0x1070E34
    ::Il2CppObject* System_Collections_IDictionary_get_Item(::Il2CppObject* key);
    // private System.Void System.Collections.IDictionary.set_Item(System.Object key, System.Object value)
    // Offset: 0x1070EFC
    void System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value);
    // private System.Object System.Collections.Specialized.IOrderedDictionary.get_Item(System.Int32 idx)
    // Offset: 0x10714B4
    ::Il2CppObject* System_Collections_Specialized_IOrderedDictionary_get_Item(int idx);
    // private System.Void System.Collections.Specialized.IOrderedDictionary.set_Item(System.Int32 idx, System.Object value)
    // Offset: 0x10715AC
    void System_Collections_Specialized_IOrderedDictionary_set_Item(int idx, ::Il2CppObject* value);
    // private System.Object System.Collections.IList.get_Item(System.Int32 index)
    // Offset: 0x1071800
    ::Il2CppObject* System_Collections_IList_get_Item(int index);
    // private System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)
    // Offset: 0x10718C8
    void System_Collections_IList_set_Item(int index, ::Il2CppObject* value);
    // public LitJson.JsonData get_Item(System.String name)
    // Offset: 0x1071BF4
    ::LitJson::JsonData* get_Item(::StringW name);
    // public System.Void set_Item(System.String name, LitJson.JsonData value)
    // Offset: 0x10710C4
    void set_Item(::StringW name, ::LitJson::JsonData* value);
    // public LitJson.JsonData get_Item(System.Int32 index)
    // Offset: 0x1071CC4
    ::LitJson::JsonData* get_Item(int index);
    // public System.Void set_Item(System.Int32 index, LitJson.JsonData value)
    // Offset: 0x107190C
    void set_Item(int index, ::LitJson::JsonData* value);
    // public System.Void .ctor(System.Boolean boolean)
    // Offset: 0x1071F58
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(bool boolean) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(boolean)));
    }
    // public System.Void .ctor(System.Double number)
    // Offset: 0x1071FD4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(double number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.Int64 number)
    // Offset: 0x1072050
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(int64_t number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.String str)
    // Offset: 0x10720CC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(::StringW str) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(str)));
    }
    // public System.Void .ctor(System.Object obj)
    // Offset: 0x1072100
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(::Il2CppObject* obj) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(obj)));
    }
    // public System.Void .ctor()
    // Offset: 0x107257C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>()));
    }
    // public System.Void .ctor(System.SByte number)
    // Offset: 0x1072584
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(int8_t number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.Byte number)
    // Offset: 0x107258C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(uint8_t number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.Int16 number)
    // Offset: 0x1072594
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(int16_t number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.UInt16 number)
    // Offset: 0x107259C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(uint16_t number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.Int32 number)
    // Offset: 0x10725A4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(int number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.UInt32 number)
    // Offset: 0x10725AC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(uint number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.UInt64 number)
    // Offset: 0x10725B4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(uint64_t number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.Single number)
    // Offset: 0x10725B8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(float number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // public System.Void .ctor(System.Decimal number)
    // Offset: 0x10725C0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonData* New_ctor(::System::Decimal number) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonData*, creationType>(number)));
    }
    // static public System.Boolean op_Explicit(LitJson.JsonData data)
    // Offset: 0x10727D8
    explicit operator bool();
    // static public System.Single op_Explicit(LitJson.JsonData data)
    // Offset: 0x1072920
    explicit operator float();
    // static public System.Double op_Explicit(LitJson.JsonData data)
    // Offset: 0x1072D00
    explicit operator double();
    // static public System.Decimal op_Explicit(LitJson.JsonData data)
    // Offset: 0x1072DF0
    explicit operator ::System::Decimal();
    // static public System.SByte op_Explicit(LitJson.JsonData data)
    // Offset: 0x1072F48
    explicit operator int8_t();
    // static public System.Byte op_Explicit(LitJson.JsonData data)
    // Offset: 0x1073034
    explicit operator uint8_t();
    // static public System.Int16 op_Explicit(LitJson.JsonData data)
    // Offset: 0x1073128
    explicit operator int16_t();
    // static public System.UInt16 op_Explicit(LitJson.JsonData data)
    // Offset: 0x1073214
    explicit operator uint16_t();
    // static public System.Int32 op_Explicit(LitJson.JsonData data)
    // Offset: 0x1073308
    explicit operator int();
    // static public System.UInt32 op_Explicit(LitJson.JsonData data)
    // Offset: 0x10733F4
    explicit operator uint();
    // static public System.Int64 op_Explicit(LitJson.JsonData data)
    // Offset: 0x10734EC
    explicit operator int64_t();
    // static public System.UInt64 op_Explicit(LitJson.JsonData data)
    // Offset: 0x10735DC
    explicit operator uint64_t();
    // static public System.String op_Explicit(LitJson.JsonData data)
    // Offset: 0x10736D8
    explicit operator ::StringW();
    // private System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 index)
    // Offset: 0x1073718
    void System_Collections_ICollection_CopyTo(::System::Array* array, int index);
    // private System.Void System.Collections.IDictionary.Add(System.Object key, System.Object value)
    // Offset: 0x10737E8
    void System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value);
    // private System.Void System.Collections.IDictionary.Clear()
    // Offset: 0x10739E4
    void System_Collections_IDictionary_Clear();
    // private System.Boolean System.Collections.IDictionary.Contains(System.Object key)
    // Offset: 0x1073B24
    bool System_Collections_IDictionary_Contains(::Il2CppObject* key);
    // private System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
    // Offset: 0x1073BF0
    ::System::Collections::IDictionaryEnumerator* System_Collections_IDictionary_GetEnumerator();
    // private System.Void System.Collections.IDictionary.Remove(System.Object key)
    // Offset: 0x1073C98
    void System_Collections_IDictionary_Remove(::Il2CppObject* key);
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x1073FA8
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // public System.Boolean GetBoolean()
    // Offset: 0x1072878
    bool GetBoolean();
    // public System.Double GetReal()
    // Offset: 0x1072A10
    double GetReal();
    // public System.Int64 GetNatural()
    // Offset: 0x1072AB8
    int64_t GetNatural();
    // public System.String GetString()
    // Offset: 0x1074060
    ::StringW GetString();
    // private System.Collections.Generic.IDictionary`2<System.String,LitJson.JsonData> GetObject()
    // Offset: 0x106FFFC
    ::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::JsonData*>* GetObject();
    // private System.Collections.Generic.IList`1<LitJson.JsonData> GetArray()
    // Offset: 0x1071E4C
    ::System::Collections::Generic::IList_1<::LitJson::JsonData*>* GetArray();
    // public System.Void SetBoolean(System.Boolean val)
    // Offset: 0x1074160
    void SetBoolean(bool val);
    // public System.Void SetReal(System.Double val)
    // Offset: 0x10741D0
    void SetReal(double val);
    // public System.Void SetNatural(System.Int64 val)
    // Offset: 0x1074240
    void SetNatural(int64_t val);
    // public System.Void SetString(System.String val)
    // Offset: 0x10742B0
    void SetString(::StringW val);
    // private System.Void LitJson.IJsonWrapper.ToJson(LitJson.JsonWriter writer)
    // Offset: 0x10742C0
    void LitJson_IJsonWrapper_ToJson(::LitJson::JsonWriter* writer);
    // private System.Int32 System.Collections.IList.Add(System.Object value)
    // Offset: 0x1074358
    int System_Collections_IList_Add(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Clear()
    // Offset: 0x1074438
    void System_Collections_IList_Clear();
    // private System.Boolean System.Collections.IList.Contains(System.Object value)
    // Offset: 0x10744FC
    bool System_Collections_IList_Contains(::Il2CppObject* value);
    // private System.Int32 System.Collections.IList.IndexOf(System.Object value)
    // Offset: 0x10745C8
    int System_Collections_IList_IndexOf(::Il2CppObject* value);
    // private System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)
    // Offset: 0x1074694
    void System_Collections_IList_Insert(int index, ::Il2CppObject* value);
    // private System.Void System.Collections.IList.Remove(System.Object value)
    // Offset: 0x1074770
    void System_Collections_IList_Remove(::Il2CppObject* value);
    // private System.Void System.Collections.IList.RemoveAt(System.Int32 index)
    // Offset: 0x1074844
    void System_Collections_IList_RemoveAt(int index);
    // private System.Collections.IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
    // Offset: 0x1074918
    ::System::Collections::IDictionaryEnumerator* System_Collections_Specialized_IOrderedDictionary_GetEnumerator();
    // private System.Void System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32 idx, System.Object key, System.Object value)
    // Offset: 0x1074A04
    void System_Collections_Specialized_IOrderedDictionary_Insert(int idx, ::Il2CppObject* key, ::Il2CppObject* value);
    // private System.Void System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32 idx)
    // Offset: 0x1074B94
    void System_Collections_Specialized_IOrderedDictionary_RemoveAt(int idx);
    // private System.Collections.ICollection EnsureCollection()
    // Offset: 0x106FC54
    ::System::Collections::ICollection* EnsureCollection();
    // private System.Collections.IDictionary EnsureDictionary()
    // Offset: 0x106FE88
    ::System::Collections::IDictionary* EnsureDictionary();
    // private System.Collections.IList EnsureList()
    // Offset: 0x1070C30
    ::System::Collections::IList* EnsureList();
    // private LitJson.JsonData ToJsonData(System.Object obj)
    // Offset: 0x1071028
    ::LitJson::JsonData* ToJsonData(::Il2CppObject* obj);
    // static private System.Void WriteJson(LitJson.IJsonWrapper obj, LitJson.JsonWriter writer)
    // Offset: 0x1074D98
    static void WriteJson(::LitJson::IJsonWrapper* obj, ::LitJson::JsonWriter* writer);
    // public System.Int32 Add(System.Object value)
    // Offset: 0x107435C
    int Add(::Il2CppObject* value);
    // public System.Void Clear()
    // Offset: 0x10758F8
    void Clear();
    // public System.Boolean Equals(LitJson.JsonData data)
    // Offset: 0x1075A14
    bool Equals(::LitJson::JsonData* data);
    // public LitJson.JsonType GetJsonType()
    // Offset: 0x1075C14
    ::LitJson::JsonType GetJsonType();
    // public System.Void SetJsonType(LitJson.JsonType type)
    // Offset: 0x1075C1C
    void SetJsonType(::LitJson::JsonType type);
    // public System.String ToJson()
    // Offset: 0x1075D5C
    ::StringW ToJson();
    // public System.Void ToJson(LitJson.JsonWriter writer)
    // Offset: 0x10742C4
    void ToJson(::LitJson::JsonWriter* writer);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0x1075A20
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1075BFC
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.String ToString()
    // Offset: 0x1075E30
    // Implemented from: System.Object
    // Base method: System.String Object::ToString()
    ::StringW ToString();
  }; // LitJson.JsonData
  #pragma pack(pop)
  static check_size<sizeof(JsonData), 40 + sizeof(::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>*)> __LitJson_JsonDataSizeCheck;
  static_assert(sizeof(JsonData) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LitJson::JsonData::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)()>(&LitJson::JsonData::get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsArray
// Il2CppName: get_IsArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsBoolean
// Il2CppName: get_IsBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsBoolean)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsReal
// Il2CppName: get_IsReal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsReal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsReal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsNatural
// Il2CppName: get_IsNatural
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsNatural)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsNatural", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsObject
// Il2CppName: get_IsObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_IsString
// Il2CppName: get_IsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::get_IsString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_IsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_Keys
// Il2CppName: get_Keys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::ICollection_1<::StringW>* (LitJson::JsonData::*)()>(&LitJson::JsonData::get_Keys)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_Keys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_ICollection_get_Count
// Il2CppName: System.Collections.ICollection.get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_ICollection_get_Count)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_ICollection_get_IsSynchronized
// Il2CppName: System.Collections.ICollection.get_IsSynchronized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_ICollection_get_IsSynchronized)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.ICollection.get_IsSynchronized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_ICollection_get_SyncRoot
// Il2CppName: System.Collections.ICollection.get_SyncRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_ICollection_get_SyncRoot)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_get_IsFixedSize
// Il2CppName: System.Collections.IDictionary.get_IsFixedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_get_IsFixedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.get_IsFixedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_get_IsReadOnly
// Il2CppName: System.Collections.IDictionary.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_get_Keys
// Il2CppName: System.Collections.IDictionary.get_Keys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ICollection* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_get_Keys)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.get_Keys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_get_Values
// Il2CppName: System.Collections.IDictionary.get_Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ICollection* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_get_Values)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.get_Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_get_IsFixedSize
// Il2CppName: System.Collections.IList.get_IsFixedSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IList_get_IsFixedSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_get_IsReadOnly
// Il2CppName: System.Collections.IList.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IList_get_IsReadOnly)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_get_Item
// Il2CppName: System.Collections.IDictionary.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IDictionary_get_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_set_Item
// Il2CppName: System.Collections.IDictionary.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::Il2CppObject*, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IDictionary_set_Item)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_get_Item
// Il2CppName: System.Collections.Specialized.IOrderedDictionary.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (LitJson::JsonData::*)(int)>(&LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_get_Item)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.Specialized.IOrderedDictionary.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_set_Item
// Il2CppName: System.Collections.Specialized.IOrderedDictionary.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_set_Item)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.Specialized.IOrderedDictionary.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_get_Item
// Il2CppName: System.Collections.IList.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (LitJson::JsonData::*)(int)>(&LitJson::JsonData::System_Collections_IList_get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_set_Item
// Il2CppName: System.Collections.IList.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (LitJson::JsonData::*)(::StringW)>(&LitJson::JsonData::get_Item)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::StringW, ::LitJson::JsonData*)>(&LitJson::JsonData::set_Item)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("LitJson", "JsonData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (LitJson::JsonData::*)(int)>(&LitJson::JsonData::get_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int, ::LitJson::JsonData*)>(&LitJson::JsonData::set_Item)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("LitJson", "JsonData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LitJson::JsonData::operator bool
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator float
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator double
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator ::System::Decimal
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator int8_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator uint8_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator int16_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator uint16_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator int
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator uint
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator int64_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator uint64_t
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::operator ::StringW
// Il2CppName: op_Explicit
// Cannot perform method pointer template specialization from operators!
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_ICollection_CopyTo
// Il2CppName: System.Collections.ICollection.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::System::Array*, int)>(&LitJson::JsonData::System_Collections_ICollection_CopyTo)> {
  static const MethodInfo* get() {
    static auto* array = &::il2cpp_utils::GetClassFromName("System", "Array")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{array, index});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_Add
// Il2CppName: System.Collections.IDictionary.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::Il2CppObject*, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IDictionary_Add)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_Clear
// Il2CppName: System.Collections.IDictionary.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_Contains
// Il2CppName: System.Collections.IDictionary.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IDictionary_Contains)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_GetEnumerator
// Il2CppName: System.Collections.IDictionary.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IDictionaryEnumerator* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IDictionary_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IDictionary_Remove
// Il2CppName: System.Collections.IDictionary.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IDictionary_Remove)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IDictionary.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::GetBoolean
// Il2CppName: GetBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)()>(&LitJson::JsonData::GetBoolean)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "GetBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::GetReal
// Il2CppName: GetReal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (LitJson::JsonData::*)()>(&LitJson::JsonData::GetReal)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "GetReal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::GetNatural
// Il2CppName: GetNatural
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (LitJson::JsonData::*)()>(&LitJson::JsonData::GetNatural)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "GetNatural", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (LitJson::JsonData::*)()>(&LitJson::JsonData::GetString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::GetObject
// Il2CppName: GetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::JsonData*>* (LitJson::JsonData::*)()>(&LitJson::JsonData::GetObject)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "GetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::GetArray
// Il2CppName: GetArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IList_1<::LitJson::JsonData*>* (LitJson::JsonData::*)()>(&LitJson::JsonData::GetArray)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "GetArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::SetBoolean
// Il2CppName: SetBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(bool)>(&LitJson::JsonData::SetBoolean)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "SetBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::SetReal
// Il2CppName: SetReal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(double)>(&LitJson::JsonData::SetReal)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "SetReal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::SetNatural
// Il2CppName: SetNatural
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int64_t)>(&LitJson::JsonData::SetNatural)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "SetNatural", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::SetString
// Il2CppName: SetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::StringW)>(&LitJson::JsonData::SetString)> {
  static const MethodInfo* get() {
    static auto* val = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "SetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{val});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::LitJson_IJsonWrapper_ToJson
// Il2CppName: LitJson.IJsonWrapper.ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::LitJson::JsonWriter*)>(&LitJson::JsonData::LitJson_IJsonWrapper_ToJson)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "LitJson.IJsonWrapper.ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_Add
// Il2CppName: System.Collections.IList.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_Add)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_Clear
// Il2CppName: System.Collections.IList.Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_IList_Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_Contains
// Il2CppName: System.Collections.IList.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_Contains)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_IndexOf
// Il2CppName: System.Collections.IList.IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_IndexOf)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_Insert
// Il2CppName: System.Collections.IList.Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_Insert)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_Remove
// Il2CppName: System.Collections.IList.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::System_Collections_IList_Remove)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_IList_RemoveAt
// Il2CppName: System.Collections.IList.RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int)>(&LitJson::JsonData::System_Collections_IList_RemoveAt)> {
  static const MethodInfo* get() {
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{index});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_GetEnumerator
// Il2CppName: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IDictionaryEnumerator* (LitJson::JsonData::*)()>(&LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.Specialized.IOrderedDictionary.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_Insert
// Il2CppName: System.Collections.Specialized.IOrderedDictionary.Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int, ::Il2CppObject*, ::Il2CppObject*)>(&LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_Insert)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.Specialized.IOrderedDictionary.Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx, key, value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_RemoveAt
// Il2CppName: System.Collections.Specialized.IOrderedDictionary.RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(int)>(&LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_RemoveAt)> {
  static const MethodInfo* get() {
    static auto* idx = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "System.Collections.Specialized.IOrderedDictionary.RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{idx});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::EnsureCollection
// Il2CppName: EnsureCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::ICollection* (LitJson::JsonData::*)()>(&LitJson::JsonData::EnsureCollection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "EnsureCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::EnsureDictionary
// Il2CppName: EnsureDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IDictionary* (LitJson::JsonData::*)()>(&LitJson::JsonData::EnsureDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "EnsureDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::EnsureList
// Il2CppName: EnsureList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IList* (LitJson::JsonData::*)()>(&LitJson::JsonData::EnsureList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "EnsureList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::ToJsonData
// Il2CppName: ToJsonData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::ToJsonData)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "ToJsonData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::WriteJson
// Il2CppName: WriteJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::LitJson::IJsonWrapper*, ::LitJson::JsonWriter*)>(&LitJson::JsonData::WriteJson)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("LitJson", "IJsonWrapper")->byval_arg;
    static auto* writer = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "WriteJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, writer});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::Add)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)()>(&LitJson::JsonData::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)(::LitJson::JsonData*)>(&LitJson::JsonData::Equals)> {
  static const MethodInfo* get() {
    static auto* data = &::il2cpp_utils::GetClassFromName("LitJson", "JsonData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::GetJsonType
// Il2CppName: GetJsonType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonType (LitJson::JsonData::*)()>(&LitJson::JsonData::GetJsonType)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "GetJsonType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::SetJsonType
// Il2CppName: SetJsonType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::LitJson::JsonType)>(&LitJson::JsonData::SetJsonType)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("LitJson", "JsonType")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "SetJsonType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (LitJson::JsonData::*)()>(&LitJson::JsonData::ToJson)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LitJson::JsonData::*)(::LitJson::JsonWriter*)>(&LitJson::JsonData::ToJson)> {
  static const MethodInfo* get() {
    static auto* writer = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{writer});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LitJson::JsonData::*)(::Il2CppObject*)>(&LitJson::JsonData::Equals)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LitJson::JsonData::*)()>(&LitJson::JsonData::GetHashCode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonData::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (LitJson::JsonData::*)()>(&LitJson::JsonData::ToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonData*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
