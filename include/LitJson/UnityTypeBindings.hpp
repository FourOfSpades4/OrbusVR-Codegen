// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LitJson
namespace LitJson {
}
// Completed forward declares
// Type namespace: LitJson
namespace LitJson {
  // Forward declaring type: UnityTypeBindings
  class UnityTypeBindings;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LitJson::UnityTypeBindings);
DEFINE_IL2CPP_ARG_TYPE(::LitJson::UnityTypeBindings*, "LitJson", "UnityTypeBindings");
// Type namespace: LitJson
namespace LitJson {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LitJson.UnityTypeBindings
  // [TokenAttribute] Offset: FFFFFFFF
  class UnityTypeBindings : public ::Il2CppObject {
    public:
    // Nested type: ::LitJson::UnityTypeBindings::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    // Nested type: ::LitJson::UnityTypeBindings::$$c
    class $$c;
    // Get static field: static private System.Boolean registerd
    static bool _get_registerd();
    // Set static field: static private System.Boolean registerd
    static void _set_registerd(bool value);
    // static private System.Void .cctor()
    // Offset: 0x120C978
    static void _cctor();
    // static public System.Void Register()
    // Offset: 0x120C97C
    static void Register();
  }; // LitJson.UnityTypeBindings
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LitJson::UnityTypeBindings::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::UnityTypeBindings::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::UnityTypeBindings*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::UnityTypeBindings::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::UnityTypeBindings::Register)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::UnityTypeBindings*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
