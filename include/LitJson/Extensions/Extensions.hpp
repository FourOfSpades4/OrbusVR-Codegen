// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonWriter
  class JsonWriter;
}
// Completed forward declares
// Type namespace: LitJson.Extensions
namespace LitJson::Extensions {
  // Forward declaring type: Extensions
  class Extensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LitJson::Extensions::Extensions);
DEFINE_IL2CPP_ARG_TYPE(::LitJson::Extensions::Extensions*, "LitJson.Extensions", "Extensions");
// Type namespace: LitJson.Extensions
namespace LitJson::Extensions {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LitJson.Extensions.Extensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class Extensions : public ::Il2CppObject {
    public:
    // static public System.Void WriteProperty(LitJson.JsonWriter w, System.String name, System.Int64 value)
    // Offset: 0x106ED80
    static void WriteProperty(::LitJson::JsonWriter* w, ::StringW name, int64_t value);
    // static public System.Void WriteProperty(LitJson.JsonWriter w, System.String name, System.String value)
    // Offset: 0x106EDEC
    static void WriteProperty(::LitJson::JsonWriter* w, ::StringW name, ::StringW value);
    // static public System.Void WriteProperty(LitJson.JsonWriter w, System.String name, System.Boolean value)
    // Offset: 0x106EE58
    static void WriteProperty(::LitJson::JsonWriter* w, ::StringW name, bool value);
    // static public System.Void WriteProperty(LitJson.JsonWriter w, System.String name, System.Double value)
    // Offset: 0x106EEC4
    static void WriteProperty(::LitJson::JsonWriter* w, ::StringW name, double value);
  }; // LitJson.Extensions.Extensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LitJson::Extensions::Extensions::WriteProperty
// Il2CppName: WriteProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::LitJson::JsonWriter*, ::StringW, int64_t)>(&LitJson::Extensions::Extensions::WriteProperty)> {
  static const MethodInfo* get() {
    static auto* w = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int64")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::Extensions::Extensions*), "WriteProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{w, name, value});
  }
};
// Writing MetadataGetter for method: LitJson::Extensions::Extensions::WriteProperty
// Il2CppName: WriteProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::LitJson::JsonWriter*, ::StringW, ::StringW)>(&LitJson::Extensions::Extensions::WriteProperty)> {
  static const MethodInfo* get() {
    static auto* w = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::Extensions::Extensions*), "WriteProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{w, name, value});
  }
};
// Writing MetadataGetter for method: LitJson::Extensions::Extensions::WriteProperty
// Il2CppName: WriteProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::LitJson::JsonWriter*, ::StringW, bool)>(&LitJson::Extensions::Extensions::WriteProperty)> {
  static const MethodInfo* get() {
    static auto* w = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::Extensions::Extensions*), "WriteProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{w, name, value});
  }
};
// Writing MetadataGetter for method: LitJson::Extensions::Extensions::WriteProperty
// Il2CppName: WriteProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::LitJson::JsonWriter*, ::StringW, double)>(&LitJson::Extensions::Extensions::WriteProperty)> {
  static const MethodInfo* get() {
    static auto* w = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Double")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::Extensions::Extensions*), "WriteProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{w, name, value});
  }
};
