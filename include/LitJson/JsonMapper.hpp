// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: LitJson.ArrayMetadata
#include "LitJson/ArrayMetadata.hpp"
// Including type: LitJson.ObjectMetadata
#include "LitJson/ObjectMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LitJson
namespace LitJson {
  // Forward declaring type: ExporterFunc
  class ExporterFunc;
  // Forward declaring type: ImporterFunc
  class ImporterFunc;
  // Forward declaring type: FactoryFunc
  class FactoryFunc;
  // Forward declaring type: JsonReader
  class JsonReader;
  // Forward declaring type: IJsonWrapper
  class IJsonWrapper;
  // Forward declaring type: WrapperFactory
  class WrapperFactory;
  // Forward declaring type: JsonWriter
  class JsonWriter;
  // Forward declaring type: JsonData
  class JsonData;
  // Forward declaring type: ExporterFunc`1<T>
  template<typename T>
  class ExporterFunc_1;
  // Forward declaring type: ImporterFunc`2<TJson, TValue>
  template<typename TJson, typename TValue>
  class ImporterFunc_2;
  // Forward declaring type: FactoryFunc`1<T>
  template<typename T>
  class FactoryFunc_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IFormatProvider
  class IFormatProvider;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: IDictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class IDictionary_2;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
}
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: TextReader
  class TextReader;
}
// Completed forward declares
// Type namespace: LitJson
namespace LitJson {
  // Forward declaring type: JsonMapper
  class JsonMapper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LitJson::JsonMapper);
DEFINE_IL2CPP_ARG_TYPE(::LitJson::JsonMapper*, "LitJson", "JsonMapper");
// Type namespace: LitJson
namespace LitJson {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LitJson.JsonMapper
  // [TokenAttribute] Offset: FFFFFFFF
  class JsonMapper : public ::Il2CppObject {
    public:
    // Nested type: ::LitJson::JsonMapper::$$c
    class $$c;
    // Nested type: ::LitJson::JsonMapper::$$c__DisplayClass34_0_1<T>
    template<typename T>
    class $$c__DisplayClass34_0_1;
    // Nested type: ::LitJson::JsonMapper::$$c__DisplayClass35_0_2<TJson, TValue>
    template<typename TJson, typename TValue>
    class $$c__DisplayClass35_0_2;
    // Nested type: ::LitJson::JsonMapper::$$c__DisplayClass36_0_1<T>
    template<typename T>
    class $$c__DisplayClass36_0_1;
    // Get static field: static private readonly System.Int32 maxNestingDepth
    static int _get_maxNestingDepth();
    // Set static field: static private readonly System.Int32 maxNestingDepth
    static void _set_maxNestingDepth(int value);
    // Get static field: static private readonly System.IFormatProvider datetimeFormat
    static ::System::IFormatProvider* _get_datetimeFormat();
    // Set static field: static private readonly System.IFormatProvider datetimeFormat
    static void _set_datetimeFormat(::System::IFormatProvider* value);
    // Get static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> baseExportTable
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* _get_baseExportTable();
    // Set static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> baseExportTable
    static void _set_baseExportTable(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* value);
    // Get static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> customExportTable
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* _get_customExportTable();
    // Set static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> customExportTable
    static void _set_customExportTable(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* value);
    // Get static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> baseImportTable
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* _get_baseImportTable();
    // Set static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> baseImportTable
    static void _set_baseImportTable(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* value);
    // Get static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> customImportTable
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* _get_customImportTable();
    // Set static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> customImportTable
    static void _set_customImportTable(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* value);
    // Get static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,LitJson.FactoryFunc> customFactoryTable
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::FactoryFunc*>* _get_customFactoryTable();
    // Set static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,LitJson.FactoryFunc> customFactoryTable
    static void _set_customFactoryTable(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::FactoryFunc*>* value);
    // Get static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,LitJson.ArrayMetadata> arrayMetadata
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ArrayMetadata>* _get_arrayMetadata();
    // Set static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,LitJson.ArrayMetadata> arrayMetadata
    static void _set_arrayMetadata(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ArrayMetadata>* value);
    // Get static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,System.Reflection.MethodInfo>> convOps
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Reflection::MethodInfo*>*>* _get_convOps();
    // Set static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,System.Reflection.MethodInfo>> convOps
    static void _set_convOps(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Reflection::MethodInfo*>*>* value);
    // Get static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,LitJson.ObjectMetadata> objectMetadata
    static ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ObjectMetadata>* _get_objectMetadata();
    // Set static field: static private readonly System.Collections.Generic.IDictionary`2<System.Type,LitJson.ObjectMetadata> objectMetadata
    static void _set_objectMetadata(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ObjectMetadata>* value);
    // static private System.Void .cctor()
    // Offset: 0x11FB150
    static void _cctor();
    // static private LitJson.ArrayMetadata AddArrayMetadata(System.Type type)
    // Offset: 0x11FD1D8
    static ::LitJson::ArrayMetadata AddArrayMetadata(::System::Type* type);
    // static private LitJson.ObjectMetadata AddObjectMetadata(System.Type type)
    // Offset: 0x11FD650
    static ::LitJson::ObjectMetadata AddObjectMetadata(::System::Type* type);
    // static private System.Object CreateInstance(System.Type type)
    // Offset: 0x11FEEDC
    static ::Il2CppObject* CreateInstance(::System::Type* type);
    // static private System.Reflection.MethodInfo GetConvOp(System.Type t1, System.Type t2)
    // Offset: 0x11FF09C
    static ::System::Reflection::MethodInfo* GetConvOp(::System::Type* t1, ::System::Type* t2);
    // static private LitJson.ImporterFunc GetImporter(System.Type jsonType, System.Type valueType)
    // Offset: 0x11FF634
    static ::LitJson::ImporterFunc* GetImporter(::System::Type* jsonType, ::System::Type* valueType);
    // static private LitJson.ExporterFunc GetExporter(System.Type valueType)
    // Offset: 0x11FFBEC
    static ::LitJson::ExporterFunc* GetExporter(::System::Type* valueType);
    // static private System.Object ReadValue(System.Type instType, LitJson.JsonReader reader)
    // Offset: 0x11FFE4C
    static ::Il2CppObject* ReadValue(::System::Type* instType, ::LitJson::JsonReader* reader);
    // static private LitJson.IJsonWrapper ReadValue(LitJson.WrapperFactory factory, LitJson.JsonReader reader)
    // Offset: 0x1201710
    static ::LitJson::IJsonWrapper* ReadValue(::LitJson::WrapperFactory* factory, ::LitJson::JsonReader* reader);
    // static private System.Void ReadSkip(LitJson.JsonReader reader)
    // Offset: 0x1201534
    static void ReadSkip(::LitJson::JsonReader* reader);
    // static private System.Void RegisterBaseExporters()
    // Offset: 0x11FB344
    static void RegisterBaseExporters();
    // static private System.Void RegisterBaseImporters()
    // Offset: 0x11FC2D4
    static void RegisterBaseImporters();
    // static private System.Void RegisterImporter(System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> table, System.Type jsonType, System.Type valueType, LitJson.ImporterFunc importer)
    // Offset: 0x120227C
    static void RegisterImporter(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* table, ::System::Type* jsonType, ::System::Type* valueType, ::LitJson::ImporterFunc* importer);
    // static private System.Void WriteValue(System.Object obj, LitJson.JsonWriter writer, System.Boolean privateWriter, System.Int32 depth)
    // Offset: 0x12024E0
    static void WriteValue(::Il2CppObject* obj, ::LitJson::JsonWriter* writer, bool privateWriter, int depth);
    // static public System.String ToJson(System.Object obj)
    // Offset: 0x1204CBC
    static ::StringW ToJson(::Il2CppObject* obj);
    // static public System.Void ToJson(System.Object obj, LitJson.JsonWriter writer)
    // Offset: 0x1204DFC
    static void ToJson(::Il2CppObject* obj, ::LitJson::JsonWriter* writer);
    // static public LitJson.JsonData ToObject(LitJson.JsonReader reader)
    // Offset: 0x1204E78
    static ::LitJson::JsonData* ToObject(::LitJson::JsonReader* reader);
    // static public LitJson.JsonData ToObject(System.IO.TextReader reader)
    // Offset: 0x1204FFC
    static ::LitJson::JsonData* ToObject(::System::IO::TextReader* reader);
    // static public LitJson.JsonData ToObject(System.String json)
    // Offset: 0x12051A8
    static ::LitJson::JsonData* ToObject(::StringW json);
    // static public T ToObject(LitJson.JsonReader reader)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T ToObject(::LitJson::JsonReader* reader) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, reader);
    }
    // static public T ToObject(System.IO.TextReader reader)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T ToObject(::System::IO::TextReader* reader) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, reader);
    }
    // static public T ToObject(System.String json)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static T ToObject(::StringW json) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToObject");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToObject", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, json);
    }
    // static public LitJson.IJsonWrapper ToWrapper(LitJson.WrapperFactory factory, LitJson.JsonReader reader)
    // Offset: 0x1202208
    static ::LitJson::IJsonWrapper* ToWrapper(::LitJson::WrapperFactory* factory, ::LitJson::JsonReader* reader);
    // static public LitJson.IJsonWrapper ToWrapper(LitJson.WrapperFactory factory, System.String json)
    // Offset: 0x120532C
    static ::LitJson::IJsonWrapper* ToWrapper(::LitJson::WrapperFactory* factory, ::StringW json);
    // static public System.Void RegisterExporter(LitJson.ExporterFunc`1<T> exporter)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void RegisterExporter(::LitJson::ExporterFunc_1<T>* exporter) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::RegisterExporter");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "RegisterExporter", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exporter)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, exporter);
    }
    // static public System.Void RegisterImporter(LitJson.ImporterFunc`2<TJson,TValue> importer)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TJson, class TValue>
    static void RegisterImporter(::LitJson::ImporterFunc_2<TJson, TValue>* importer) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::RegisterImporter");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "RegisterImporter", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TJson>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(importer)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TJson>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TValue>::get()})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, importer);
    }
    // static public System.Void RegisterFactory(LitJson.FactoryFunc`1<T> factory)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static void RegisterFactory(::LitJson::FactoryFunc_1<T>* factory) {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::RegisterFactory");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "RegisterFactory", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(factory)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, factory);
    }
    // static public System.Void UnregisterFactories()
    // Offset: 0x1205434
    static void UnregisterFactories();
    // static public System.Void UnregisterExporters()
    // Offset: 0x1205510
    static void UnregisterExporters();
    // static public System.Void UnregisterImporters()
    // Offset: 0x12055EC
    static void UnregisterImporters();
    // public System.Void .ctor()
    // Offset: 0x12056C8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static JsonMapper* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<JsonMapper*, creationType>()));
    }
  }; // LitJson.JsonMapper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LitJson::JsonMapper::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::JsonMapper::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::AddArrayMetadata
// Il2CppName: AddArrayMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::ArrayMetadata (*)(::System::Type*)>(&LitJson::JsonMapper::AddArrayMetadata)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "AddArrayMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::AddObjectMetadata
// Il2CppName: AddObjectMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::ObjectMetadata (*)(::System::Type*)>(&LitJson::JsonMapper::AddObjectMetadata)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "AddObjectMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::CreateInstance
// Il2CppName: CreateInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*)>(&LitJson::JsonMapper::CreateInstance)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "CreateInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::GetConvOp
// Il2CppName: GetConvOp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Reflection::MethodInfo* (*)(::System::Type*, ::System::Type*)>(&LitJson::JsonMapper::GetConvOp)> {
  static const MethodInfo* get() {
    static auto* t1 = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* t2 = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "GetConvOp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{t1, t2});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::GetImporter
// Il2CppName: GetImporter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::ImporterFunc* (*)(::System::Type*, ::System::Type*)>(&LitJson::JsonMapper::GetImporter)> {
  static const MethodInfo* get() {
    static auto* jsonType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* valueType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "GetImporter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{jsonType, valueType});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::GetExporter
// Il2CppName: GetExporter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::ExporterFunc* (*)(::System::Type*)>(&LitJson::JsonMapper::GetExporter)> {
  static const MethodInfo* get() {
    static auto* valueType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "GetExporter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{valueType});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ReadValue
// Il2CppName: ReadValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::System::Type*, ::LitJson::JsonReader*)>(&LitJson::JsonMapper::ReadValue)> {
  static const MethodInfo* get() {
    static auto* instType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* reader = &::il2cpp_utils::GetClassFromName("LitJson", "JsonReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ReadValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{instType, reader});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ReadValue
// Il2CppName: ReadValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::IJsonWrapper* (*)(::LitJson::WrapperFactory*, ::LitJson::JsonReader*)>(&LitJson::JsonMapper::ReadValue)> {
  static const MethodInfo* get() {
    static auto* factory = &::il2cpp_utils::GetClassFromName("LitJson", "WrapperFactory")->byval_arg;
    static auto* reader = &::il2cpp_utils::GetClassFromName("LitJson", "JsonReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ReadValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{factory, reader});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ReadSkip
// Il2CppName: ReadSkip
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::LitJson::JsonReader*)>(&LitJson::JsonMapper::ReadSkip)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("LitJson", "JsonReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ReadSkip", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::RegisterBaseExporters
// Il2CppName: RegisterBaseExporters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::JsonMapper::RegisterBaseExporters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "RegisterBaseExporters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::RegisterBaseImporters
// Il2CppName: RegisterBaseImporters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::JsonMapper::RegisterBaseImporters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "RegisterBaseImporters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::RegisterImporter
// Il2CppName: RegisterImporter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>*, ::System::Type*, ::System::Type*, ::LitJson::ImporterFunc*)>(&LitJson::JsonMapper::RegisterImporter)> {
  static const MethodInfo* get() {
    static auto* table = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Type"), ::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IDictionary`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Type"), ::il2cpp_utils::GetClassFromName("LitJson", "ImporterFunc")})})->byval_arg;
    static auto* jsonType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* valueType = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    static auto* importer = &::il2cpp_utils::GetClassFromName("LitJson", "ImporterFunc")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "RegisterImporter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{table, jsonType, valueType, importer});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::WriteValue
// Il2CppName: WriteValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::LitJson::JsonWriter*, bool, int)>(&LitJson::JsonMapper::WriteValue)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writer = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    static auto* privateWriter = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* depth = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "WriteValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, writer, privateWriter, depth});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Il2CppObject*)>(&LitJson::JsonMapper::ToJson)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToJson
// Il2CppName: ToJson
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::LitJson::JsonWriter*)>(&LitJson::JsonMapper::ToJson)> {
  static const MethodInfo* get() {
    static auto* obj = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* writer = &::il2cpp_utils::GetClassFromName("LitJson", "JsonWriter")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToJson", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{obj, writer});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (*)(::LitJson::JsonReader*)>(&LitJson::JsonMapper::ToObject)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("LitJson", "JsonReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (*)(::System::IO::TextReader*)>(&LitJson::JsonMapper::ToObject)> {
  static const MethodInfo* get() {
    static auto* reader = &::il2cpp_utils::GetClassFromName("System.IO", "TextReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reader});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::JsonData* (*)(::StringW)>(&LitJson::JsonMapper::ToObject)> {
  static const MethodInfo* get() {
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{json});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LitJson::JsonMapper::ToObject
// Il2CppName: ToObject
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LitJson::JsonMapper::ToWrapper
// Il2CppName: ToWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::IJsonWrapper* (*)(::LitJson::WrapperFactory*, ::LitJson::JsonReader*)>(&LitJson::JsonMapper::ToWrapper)> {
  static const MethodInfo* get() {
    static auto* factory = &::il2cpp_utils::GetClassFromName("LitJson", "WrapperFactory")->byval_arg;
    static auto* reader = &::il2cpp_utils::GetClassFromName("LitJson", "JsonReader")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{factory, reader});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::ToWrapper
// Il2CppName: ToWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::LitJson::IJsonWrapper* (*)(::LitJson::WrapperFactory*, ::StringW)>(&LitJson::JsonMapper::ToWrapper)> {
  static const MethodInfo* get() {
    static auto* factory = &::il2cpp_utils::GetClassFromName("LitJson", "WrapperFactory")->byval_arg;
    static auto* json = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "ToWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{factory, json});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::RegisterExporter
// Il2CppName: RegisterExporter
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LitJson::JsonMapper::RegisterImporter
// Il2CppName: RegisterImporter
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LitJson::JsonMapper::RegisterFactory
// Il2CppName: RegisterFactory
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: LitJson::JsonMapper::UnregisterFactories
// Il2CppName: UnregisterFactories
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::JsonMapper::UnregisterFactories)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "UnregisterFactories", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::UnregisterExporters
// Il2CppName: UnregisterExporters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::JsonMapper::UnregisterExporters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "UnregisterExporters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::UnregisterImporters
// Il2CppName: UnregisterImporters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LitJson::JsonMapper::UnregisterImporters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LitJson::JsonMapper*), "UnregisterImporters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LitJson::JsonMapper::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
