// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: AmplifyColor
namespace AmplifyColor {
  // Forward declaring type: VolumeEffectComponentFlags
  class VolumeEffectComponentFlags;
  // Forward declaring type: VolumeEffect
  class VolumeEffect;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Component
  class Component;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: AmplifyColorBase
  class AmplifyColorBase;
  // Forward declaring type: AmplifyColorVolumeBase
  class AmplifyColorVolumeBase;
}
// Completed forward declares
// Type namespace: AmplifyColor
namespace AmplifyColor {
  // Forward declaring type: VolumeEffectFlags
  class VolumeEffectFlags;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AmplifyColor::VolumeEffectFlags);
DEFINE_IL2CPP_ARG_TYPE(::AmplifyColor::VolumeEffectFlags*, "AmplifyColor", "VolumeEffectFlags");
// Type namespace: AmplifyColor
namespace AmplifyColor {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyColor.VolumeEffectFlags
  // [TokenAttribute] Offset: FFFFFFFF
  class VolumeEffectFlags : public ::Il2CppObject {
    public:
    // Nested type: ::AmplifyColor::VolumeEffectFlags::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    // Nested type: ::AmplifyColor::VolumeEffectFlags::$$c__DisplayClass3_0
    class $$c__DisplayClass3_0;
    // Nested type: ::AmplifyColor::VolumeEffectFlags::$$c
    class $$c;
    public:
    // public System.Collections.Generic.List`1<AmplifyColor.VolumeEffectComponentFlags> components
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectComponentFlags*>* components;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectComponentFlags*>*) == 0x8);
    public:
    // Creating conversion operator: operator ::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectComponentFlags*>*
    constexpr operator ::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectComponentFlags*>*() const noexcept {
      return components;
    }
    // Get instance field reference: public System.Collections.Generic.List`1<AmplifyColor.VolumeEffectComponentFlags> components
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectComponentFlags*>*& dyn_components();
    // public System.Void .ctor()
    // Offset: 0xF04770
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VolumeEffectFlags* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFlags::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VolumeEffectFlags*, creationType>()));
    }
    // public System.Void AddComponent(UnityEngine.Component c)
    // Offset: 0xF047E4
    void AddComponent(::UnityEngine::Component* c);
    // public System.Void UpdateFlags(AmplifyColor.VolumeEffect effectVol)
    // Offset: 0xF0491C
    void UpdateFlags(::AmplifyColor::VolumeEffect* effectVol);
    // static public System.Void UpdateCamFlags(AmplifyColorBase[] effects, AmplifyColorVolumeBase[] volumes)
    // Offset: 0xF04B74
    static void UpdateCamFlags(::ArrayW<::GlobalNamespace::AmplifyColorBase*> effects, ::ArrayW<::GlobalNamespace::AmplifyColorVolumeBase*> volumes);
    // public AmplifyColor.VolumeEffect GenerateEffectData(AmplifyColorBase go)
    // Offset: 0xF04CE0
    ::AmplifyColor::VolumeEffect* GenerateEffectData(::GlobalNamespace::AmplifyColorBase* go);
    // public AmplifyColor.VolumeEffectComponentFlags FindComponentFlags(System.String compName)
    // Offset: 0xF04EB8
    ::AmplifyColor::VolumeEffectComponentFlags* FindComponentFlags(::StringW compName);
    // public System.String[] GetComponentNames()
    // Offset: 0xF04FB4
    ::ArrayW<::StringW> GetComponentNames();
  }; // AmplifyColor.VolumeEffectFlags
  #pragma pack(pop)
  static check_size<sizeof(VolumeEffectFlags), 16 + sizeof(::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectComponentFlags*>*)> __AmplifyColor_VolumeEffectFlagsSizeCheck;
  static_assert(sizeof(VolumeEffectFlags) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectFlags::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectFlags::AddComponent
// Il2CppName: AddComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AmplifyColor::VolumeEffectFlags::*)(::UnityEngine::Component*)>(&AmplifyColor::VolumeEffectFlags::AddComponent)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectFlags*), "AddComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectFlags::UpdateFlags
// Il2CppName: UpdateFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AmplifyColor::VolumeEffectFlags::*)(::AmplifyColor::VolumeEffect*)>(&AmplifyColor::VolumeEffectFlags::UpdateFlags)> {
  static const MethodInfo* get() {
    static auto* effectVol = &::il2cpp_utils::GetClassFromName("AmplifyColor", "VolumeEffect")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectFlags*), "UpdateFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effectVol});
  }
};
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectFlags::UpdateCamFlags
// Il2CppName: UpdateCamFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::GlobalNamespace::AmplifyColorBase*>, ::ArrayW<::GlobalNamespace::AmplifyColorVolumeBase*>)>(&AmplifyColor::VolumeEffectFlags::UpdateCamFlags)> {
  static const MethodInfo* get() {
    static auto* effects = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("", "AmplifyColorBase"), 1)->byval_arg;
    static auto* volumes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("", "AmplifyColorVolumeBase"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectFlags*), "UpdateCamFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{effects, volumes});
  }
};
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectFlags::GenerateEffectData
// Il2CppName: GenerateEffectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AmplifyColor::VolumeEffect* (AmplifyColor::VolumeEffectFlags::*)(::GlobalNamespace::AmplifyColorBase*)>(&AmplifyColor::VolumeEffectFlags::GenerateEffectData)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("", "AmplifyColorBase")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectFlags*), "GenerateEffectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go});
  }
};
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectFlags::FindComponentFlags
// Il2CppName: FindComponentFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::AmplifyColor::VolumeEffectComponentFlags* (AmplifyColor::VolumeEffectFlags::*)(::StringW)>(&AmplifyColor::VolumeEffectFlags::FindComponentFlags)> {
  static const MethodInfo* get() {
    static auto* compName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectFlags*), "FindComponentFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{compName});
  }
};
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectFlags::GetComponentNames
// Il2CppName: GetComponentNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (AmplifyColor::VolumeEffectFlags::*)()>(&AmplifyColor::VolumeEffectFlags::GetComponentNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectFlags*), "GetComponentNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
