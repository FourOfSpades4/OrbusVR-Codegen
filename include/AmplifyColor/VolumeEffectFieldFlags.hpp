// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: FieldInfo
  class FieldInfo;
}
// Forward declaring namespace: AmplifyColor
namespace AmplifyColor {
  // Forward declaring type: VolumeEffectField
  class VolumeEffectField;
}
// Completed forward declares
// Type namespace: AmplifyColor
namespace AmplifyColor {
  // Forward declaring type: VolumeEffectFieldFlags
  class VolumeEffectFieldFlags;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AmplifyColor::VolumeEffectFieldFlags);
DEFINE_IL2CPP_ARG_TYPE(::AmplifyColor::VolumeEffectFieldFlags*, "AmplifyColor", "VolumeEffectFieldFlags");
// Type namespace: AmplifyColor
namespace AmplifyColor {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyColor.VolumeEffectFieldFlags
  // [TokenAttribute] Offset: FFFFFFFF
  class VolumeEffectFieldFlags : public ::Il2CppObject {
    public:
    public:
    // public System.String fieldName
    // Size: 0x8
    // Offset: 0x10
    ::StringW fieldName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String fieldType
    // Size: 0x8
    // Offset: 0x18
    ::StringW fieldType;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean blendFlag
    // Size: 0x1
    // Offset: 0x20
    bool blendFlag;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.String fieldName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_fieldName();
    // Get instance field reference: public System.String fieldType
    [[deprecated("Use field access instead!")]] ::StringW& dyn_fieldType();
    // Get instance field reference: public System.Boolean blendFlag
    [[deprecated("Use field access instead!")]] bool& dyn_blendFlag();
    // public System.Void .ctor(System.Reflection.FieldInfo pi)
    // Offset: 0xF0379C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VolumeEffectFieldFlags* New_ctor(::System::Reflection::FieldInfo* pi) {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFieldFlags::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VolumeEffectFieldFlags*, creationType>(pi)));
    }
    // public System.Void .ctor(AmplifyColor.VolumeEffectField field)
    // Offset: 0xF035A8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VolumeEffectFieldFlags* New_ctor(::AmplifyColor::VolumeEffectField* field) {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectFieldFlags::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VolumeEffectFieldFlags*, creationType>(field)));
    }
  }; // AmplifyColor.VolumeEffectFieldFlags
  #pragma pack(pop)
  static check_size<sizeof(VolumeEffectFieldFlags), 32 + sizeof(bool)> __AmplifyColor_VolumeEffectFieldFlagsSizeCheck;
  static_assert(sizeof(VolumeEffectFieldFlags) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectFieldFlags::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectFieldFlags::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
