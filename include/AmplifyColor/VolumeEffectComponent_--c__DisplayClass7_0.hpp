// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: AmplifyColor.VolumeEffectComponent
#include "AmplifyColor/VolumeEffectComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: AmplifyColor
namespace AmplifyColor {
  // Forward declaring type: VolumeEffectFieldFlags
  class VolumeEffectFieldFlags;
  // Forward declaring type: VolumeEffectField
  class VolumeEffectField;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0);
DEFINE_IL2CPP_ARG_TYPE(::AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0*, "AmplifyColor", "VolumeEffectComponent/<>c__DisplayClass7_0");
// Type namespace: AmplifyColor
namespace AmplifyColor {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyColor.VolumeEffectComponent/<>c__DisplayClass7_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AD86D0
  class VolumeEffectComponent::$$c__DisplayClass7_0 : public ::Il2CppObject {
    public:
    public:
    // public AmplifyColor.VolumeEffectFieldFlags fieldFlags
    // Size: 0x8
    // Offset: 0x10
    ::AmplifyColor::VolumeEffectFieldFlags* fieldFlags;
    // Field size check
    static_assert(sizeof(::AmplifyColor::VolumeEffectFieldFlags*) == 0x8);
    public:
    // Creating conversion operator: operator ::AmplifyColor::VolumeEffectFieldFlags*
    constexpr operator ::AmplifyColor::VolumeEffectFieldFlags*() const noexcept {
      return fieldFlags;
    }
    // Get instance field reference: public AmplifyColor.VolumeEffectFieldFlags fieldFlags
    [[deprecated("Use field access instead!")]] ::AmplifyColor::VolumeEffectFieldFlags*& dyn_fieldFlags();
    // public System.Void .ctor()
    // Offset: 0xF02F80
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VolumeEffectComponent::$$c__DisplayClass7_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VolumeEffectComponent::$$c__DisplayClass7_0*, creationType>()));
    }
    // System.Boolean <UpdateComponent>b__0(AmplifyColor.VolumeEffectField s)
    // Offset: 0xF03304
    bool $UpdateComponent$b__0(::AmplifyColor::VolumeEffectField* s);
  }; // AmplifyColor.VolumeEffectComponent/<>c__DisplayClass7_0
  #pragma pack(pop)
  static check_size<sizeof(VolumeEffectComponent::$$c__DisplayClass7_0), 16 + sizeof(::AmplifyColor::VolumeEffectFieldFlags*)> __AmplifyColor_VolumeEffectComponent_$$c__DisplayClass7_0SizeCheck;
  static_assert(sizeof(VolumeEffectComponent::$$c__DisplayClass7_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0::$UpdateComponent$b__0
// Il2CppName: <UpdateComponent>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0::*)(::AmplifyColor::VolumeEffectField*)>(&AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0::$UpdateComponent$b__0)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("AmplifyColor", "VolumeEffectField")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectComponent::$$c__DisplayClass7_0*), "<UpdateComponent>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
