// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: AmplifyColor.VolumeEffectComponentFlags
#include "AmplifyColor/VolumeEffectComponentFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: AmplifyColor
namespace AmplifyColor {
  // Forward declaring type: VolumeEffectFieldFlags
  class VolumeEffectFieldFlags;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AmplifyColor::VolumeEffectComponentFlags::$$c);
DEFINE_IL2CPP_ARG_TYPE(::AmplifyColor::VolumeEffectComponentFlags::$$c*, "AmplifyColor", "VolumeEffectComponentFlags/<>c");
// Type namespace: AmplifyColor
namespace AmplifyColor {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyColor.VolumeEffectComponentFlags/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AD8730
  class VolumeEffectComponentFlags::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly AmplifyColor.VolumeEffectComponentFlags/<>c <>9
    static ::AmplifyColor::VolumeEffectComponentFlags::$$c* _get_$$9();
    // Set static field: static public readonly AmplifyColor.VolumeEffectComponentFlags/<>c <>9
    static void _set_$$9(::AmplifyColor::VolumeEffectComponentFlags::$$c* value);
    // Get static field: static public System.Func`2<AmplifyColor.VolumeEffectFieldFlags,System.Boolean> <>9__8_0
    static ::System::Func_2<::AmplifyColor::VolumeEffectFieldFlags*, bool>* _get_$$9__8_0();
    // Set static field: static public System.Func`2<AmplifyColor.VolumeEffectFieldFlags,System.Boolean> <>9__8_0
    static void _set_$$9__8_0(::System::Func_2<::AmplifyColor::VolumeEffectFieldFlags*, bool>* value);
    // Get static field: static public System.Func`2<AmplifyColor.VolumeEffectFieldFlags,System.String> <>9__8_1
    static ::System::Func_2<::AmplifyColor::VolumeEffectFieldFlags*, ::StringW>* _get_$$9__8_1();
    // Set static field: static public System.Func`2<AmplifyColor.VolumeEffectFieldFlags,System.String> <>9__8_1
    static void _set_$$9__8_1(::System::Func_2<::AmplifyColor::VolumeEffectFieldFlags*, ::StringW>* value);
    // static private System.Void .cctor()
    // Offset: 0xF03E4C
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0xF03EB0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VolumeEffectComponentFlags::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VolumeEffectComponentFlags::$$c*, creationType>()));
    }
    // System.Boolean <GetFieldNames>b__8_0(AmplifyColor.VolumeEffectFieldFlags r)
    // Offset: 0xF03EB8
    bool $GetFieldNames$b__8_0(::AmplifyColor::VolumeEffectFieldFlags* r);
    // System.String <GetFieldNames>b__8_1(AmplifyColor.VolumeEffectFieldFlags r)
    // Offset: 0xF03EE4
    ::StringW $GetFieldNames$b__8_1(::AmplifyColor::VolumeEffectFieldFlags* r);
  }; // AmplifyColor.VolumeEffectComponentFlags/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&AmplifyColor::VolumeEffectComponentFlags::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectComponentFlags::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::$$c::$GetFieldNames$b__8_0
// Il2CppName: <GetFieldNames>b__8_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AmplifyColor::VolumeEffectComponentFlags::$$c::*)(::AmplifyColor::VolumeEffectFieldFlags*)>(&AmplifyColor::VolumeEffectComponentFlags::$$c::$GetFieldNames$b__8_0)> {
  static const MethodInfo* get() {
    static auto* r = &::il2cpp_utils::GetClassFromName("AmplifyColor", "VolumeEffectFieldFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectComponentFlags::$$c*), "<GetFieldNames>b__8_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{r});
  }
};
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::$$c::$GetFieldNames$b__8_1
// Il2CppName: <GetFieldNames>b__8_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (AmplifyColor::VolumeEffectComponentFlags::$$c::*)(::AmplifyColor::VolumeEffectFieldFlags*)>(&AmplifyColor::VolumeEffectComponentFlags::$$c::$GetFieldNames$b__8_1)> {
  static const MethodInfo* get() {
    static auto* r = &::il2cpp_utils::GetClassFromName("AmplifyColor", "VolumeEffectFieldFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectComponentFlags::$$c*), "<GetFieldNames>b__8_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{r});
  }
};
