// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: AmplifyColor.VolumeEffect
#include "AmplifyColor/VolumeEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Component
  class Component;
}
// Forward declaring namespace: AmplifyColor
namespace AmplifyColor {
  // Forward declaring type: VolumeEffectComponent
  class VolumeEffectComponent;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AmplifyColor::VolumeEffect::$$c);
DEFINE_IL2CPP_ARG_TYPE(::AmplifyColor::VolumeEffect::$$c*, "AmplifyColor", "VolumeEffect/<>c");
// Type namespace: AmplifyColor
namespace AmplifyColor {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyColor.VolumeEffect/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AD86F0
  class VolumeEffect::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly AmplifyColor.VolumeEffect/<>c <>9
    static ::AmplifyColor::VolumeEffect::$$c* _get_$$9();
    // Set static field: static public readonly AmplifyColor.VolumeEffect/<>c <>9
    static void _set_$$9(::AmplifyColor::VolumeEffect::$$c* value);
    // Get static field: static public System.Func`2<UnityEngine.Component,System.Boolean> <>9__10_0
    static ::System::Func_2<::UnityEngine::Component*, bool>* _get_$$9__10_0();
    // Set static field: static public System.Func`2<UnityEngine.Component,System.Boolean> <>9__10_0
    static void _set_$$9__10_0(::System::Func_2<::UnityEngine::Component*, bool>* value);
    // Get static field: static public System.Func`2<AmplifyColor.VolumeEffectComponent,System.String> <>9__11_0
    static ::System::Func_2<::AmplifyColor::VolumeEffectComponent*, ::StringW>* _get_$$9__11_0();
    // Set static field: static public System.Func`2<AmplifyColor.VolumeEffectComponent,System.String> <>9__11_0
    static void _set_$$9__11_0(::System::Func_2<::AmplifyColor::VolumeEffectComponent*, ::StringW>* value);
    // static private System.Void .cctor()
    // Offset: 0xF02A28
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0xF02A8C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VolumeEffect::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffect::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VolumeEffect::$$c*, creationType>()));
    }
    // System.Boolean <ListAcceptableComponents>b__10_0(UnityEngine.Component comp)
    // Offset: 0xF02A94
    bool $ListAcceptableComponents$b__10_0(::UnityEngine::Component* comp);
    // System.String <GetComponentNames>b__11_0(AmplifyColor.VolumeEffectComponent r)
    // Offset: 0xF02BC8
    ::StringW $GetComponentNames$b__11_0(::AmplifyColor::VolumeEffectComponent* r);
  }; // AmplifyColor.VolumeEffect/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AmplifyColor::VolumeEffect::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&AmplifyColor::VolumeEffect::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffect::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AmplifyColor::VolumeEffect::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AmplifyColor::VolumeEffect::$$c::$ListAcceptableComponents$b__10_0
// Il2CppName: <ListAcceptableComponents>b__10_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AmplifyColor::VolumeEffect::$$c::*)(::UnityEngine::Component*)>(&AmplifyColor::VolumeEffect::$$c::$ListAcceptableComponents$b__10_0)> {
  static const MethodInfo* get() {
    static auto* comp = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffect::$$c*), "<ListAcceptableComponents>b__10_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{comp});
  }
};
// Writing MetadataGetter for method: AmplifyColor::VolumeEffect::$$c::$GetComponentNames$b__11_0
// Il2CppName: <GetComponentNames>b__11_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (AmplifyColor::VolumeEffect::$$c::*)(::AmplifyColor::VolumeEffectComponent*)>(&AmplifyColor::VolumeEffect::$$c::$GetComponentNames$b__11_0)> {
  static const MethodInfo* get() {
    static auto* r = &::il2cpp_utils::GetClassFromName("AmplifyColor", "VolumeEffectComponent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffect::$$c*), "<GetComponentNames>b__11_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{r});
  }
};
