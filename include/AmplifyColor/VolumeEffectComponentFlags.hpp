// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: AmplifyColor
namespace AmplifyColor {
  // Forward declaring type: VolumeEffectFieldFlags
  class VolumeEffectFieldFlags;
  // Forward declaring type: VolumeEffectComponent
  class VolumeEffectComponent;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Component
  class Component;
}
// Completed forward declares
// Type namespace: AmplifyColor
namespace AmplifyColor {
  // Forward declaring type: VolumeEffectComponentFlags
  class VolumeEffectComponentFlags;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AmplifyColor::VolumeEffectComponentFlags);
DEFINE_IL2CPP_ARG_TYPE(::AmplifyColor::VolumeEffectComponentFlags*, "AmplifyColor", "VolumeEffectComponentFlags");
// Type namespace: AmplifyColor
namespace AmplifyColor {
  // Size: 0x21
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyColor.VolumeEffectComponentFlags
  // [TokenAttribute] Offset: FFFFFFFF
  class VolumeEffectComponentFlags : public ::Il2CppObject {
    public:
    // Nested type: ::AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0
    class $$c__DisplayClass6_0;
    // Nested type: ::AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass7_0
    class $$c__DisplayClass7_0;
    // Nested type: ::AmplifyColor::VolumeEffectComponentFlags::$$c
    class $$c;
    public:
    // public System.String componentName
    // Size: 0x8
    // Offset: 0x10
    ::StringW componentName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Collections.Generic.List`1<AmplifyColor.VolumeEffectFieldFlags> componentFields
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectFieldFlags*>* componentFields;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectFieldFlags*>*) == 0x8);
    // public System.Boolean blendFlag
    // Size: 0x1
    // Offset: 0x20
    bool blendFlag;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public System.String componentName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_componentName();
    // Get instance field reference: public System.Collections.Generic.List`1<AmplifyColor.VolumeEffectFieldFlags> componentFields
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::AmplifyColor::VolumeEffectFieldFlags*>*& dyn_componentFields();
    // Get instance field reference: public System.Boolean blendFlag
    [[deprecated("Use field access instead!")]] bool& dyn_blendFlag();
    // public System.Void .ctor(System.String name)
    // Offset: 0xF03350
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VolumeEffectComponentFlags* New_ctor(::StringW name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VolumeEffectComponentFlags*, creationType>(name)));
    }
    // public System.Void .ctor(AmplifyColor.VolumeEffectComponent comp)
    // Offset: 0xF033D4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VolumeEffectComponentFlags* New_ctor(::AmplifyColor::VolumeEffectComponent* comp) {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VolumeEffectComponentFlags*, creationType>(comp)));
    }
    // public System.Void .ctor(UnityEngine.Component c)
    // Offset: 0xF0360C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VolumeEffectComponentFlags* New_ctor(::UnityEngine::Component* c) {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VolumeEffectComponentFlags*, creationType>(c)));
    }
    // public System.Void UpdateComponentFlags(AmplifyColor.VolumeEffectComponent comp)
    // Offset: 0xF03828
    void UpdateComponentFlags(::AmplifyColor::VolumeEffectComponent* comp);
    // public System.Void UpdateComponentFlags(UnityEngine.Component c)
    // Offset: 0xF03A94
    void UpdateComponentFlags(::UnityEngine::Component* c);
    // public System.String[] GetFieldNames()
    // Offset: 0xF03CA0
    ::ArrayW<::StringW> GetFieldNames();
  }; // AmplifyColor.VolumeEffectComponentFlags
  #pragma pack(pop)
  static check_size<sizeof(VolumeEffectComponentFlags), 32 + sizeof(bool)> __AmplifyColor_VolumeEffectComponentFlagsSizeCheck;
  static_assert(sizeof(VolumeEffectComponentFlags) == 0x21);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::UpdateComponentFlags
// Il2CppName: UpdateComponentFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AmplifyColor::VolumeEffectComponentFlags::*)(::AmplifyColor::VolumeEffectComponent*)>(&AmplifyColor::VolumeEffectComponentFlags::UpdateComponentFlags)> {
  static const MethodInfo* get() {
    static auto* comp = &::il2cpp_utils::GetClassFromName("AmplifyColor", "VolumeEffectComponent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectComponentFlags*), "UpdateComponentFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{comp});
  }
};
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::UpdateComponentFlags
// Il2CppName: UpdateComponentFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AmplifyColor::VolumeEffectComponentFlags::*)(::UnityEngine::Component*)>(&AmplifyColor::VolumeEffectComponentFlags::UpdateComponentFlags)> {
  static const MethodInfo* get() {
    static auto* c = &::il2cpp_utils::GetClassFromName("UnityEngine", "Component")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectComponentFlags*), "UpdateComponentFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{c});
  }
};
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::GetFieldNames
// Il2CppName: GetFieldNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (AmplifyColor::VolumeEffectComponentFlags::*)()>(&AmplifyColor::VolumeEffectComponentFlags::GetFieldNames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectComponentFlags*), "GetFieldNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
