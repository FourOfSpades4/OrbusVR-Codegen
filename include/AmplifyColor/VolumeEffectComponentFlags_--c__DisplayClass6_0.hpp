// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: AmplifyColor.VolumeEffectComponentFlags
#include "AmplifyColor/VolumeEffectComponentFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: AmplifyColor
namespace AmplifyColor {
  // Forward declaring type: VolumeEffectField
  class VolumeEffectField;
  // Forward declaring type: VolumeEffectFieldFlags
  class VolumeEffectFieldFlags;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0);
DEFINE_IL2CPP_ARG_TYPE(::AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0*, "AmplifyColor", "VolumeEffectComponentFlags/<>c__DisplayClass6_0");
// Type namespace: AmplifyColor
namespace AmplifyColor {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: AmplifyColor.VolumeEffectComponentFlags/<>c__DisplayClass6_0
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AD8710
  class VolumeEffectComponentFlags::$$c__DisplayClass6_0 : public ::Il2CppObject {
    public:
    public:
    // public AmplifyColor.VolumeEffectField field
    // Size: 0x8
    // Offset: 0x10
    ::AmplifyColor::VolumeEffectField* field;
    // Field size check
    static_assert(sizeof(::AmplifyColor::VolumeEffectField*) == 0x8);
    public:
    // Creating conversion operator: operator ::AmplifyColor::VolumeEffectField*
    constexpr operator ::AmplifyColor::VolumeEffectField*() const noexcept {
      return field;
    }
    // Get instance field reference: public AmplifyColor.VolumeEffectField field
    [[deprecated("Use field access instead!")]] ::AmplifyColor::VolumeEffectField*& dyn_field();
    // public System.Void .ctor()
    // Offset: 0xF03A8C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static VolumeEffectComponentFlags::$$c__DisplayClass6_0* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<VolumeEffectComponentFlags::$$c__DisplayClass6_0*, creationType>()));
    }
    // System.Boolean <UpdateComponentFlags>b__0(AmplifyColor.VolumeEffectFieldFlags s)
    // Offset: 0xF03F10
    bool $UpdateComponentFlags$b__0(::AmplifyColor::VolumeEffectFieldFlags* s);
  }; // AmplifyColor.VolumeEffectComponentFlags/<>c__DisplayClass6_0
  #pragma pack(pop)
  static check_size<sizeof(VolumeEffectComponentFlags::$$c__DisplayClass6_0), 16 + sizeof(::AmplifyColor::VolumeEffectField*)> __AmplifyColor_VolumeEffectComponentFlags_$$c__DisplayClass6_0SizeCheck;
  static_assert(sizeof(VolumeEffectComponentFlags::$$c__DisplayClass6_0) == 0x18);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0::$UpdateComponentFlags$b__0
// Il2CppName: <UpdateComponentFlags>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0::*)(::AmplifyColor::VolumeEffectFieldFlags*)>(&AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0::$UpdateComponentFlags$b__0)> {
  static const MethodInfo* get() {
    static auto* s = &::il2cpp_utils::GetClassFromName("AmplifyColor", "VolumeEffectFieldFlags")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(AmplifyColor::VolumeEffectComponentFlags::$$c__DisplayClass6_0*), "<UpdateComponentFlags>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{s});
  }
};
