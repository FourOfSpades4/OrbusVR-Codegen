// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: FMOD
namespace FMOD {
  // Forward declaring type: VECTOR
  struct VECTOR;
  // Forward declaring type: ATTRIBUTES_3D
  struct ATTRIBUTES_3D;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Transform
  class Transform;
  // Forward declaring type: Rigidbody
  class Rigidbody;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Rigidbody2D
  class Rigidbody2D;
}
// Forward declaring namespace: FMODUnity
namespace FMODUnity {
  // Forward declaring type: FMODPlatform
  struct FMODPlatform;
}
// Completed forward declares
// Type namespace: FMODUnity
namespace FMODUnity {
  // Forward declaring type: RuntimeUtils
  class RuntimeUtils;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::FMODUnity::RuntimeUtils);
DEFINE_IL2CPP_ARG_TYPE(::FMODUnity::RuntimeUtils*, "FMODUnity", "RuntimeUtils");
// Type namespace: FMODUnity
namespace FMODUnity {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: FMODUnity.RuntimeUtils
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class RuntimeUtils : public ::Il2CppObject {
    public:
    // static field const value: static private System.String BankExtension
    static constexpr const char* BankExtension = ".bank";
    // Get static field: static private System.String BankExtension
    static ::StringW _get_BankExtension();
    // Set static field: static private System.String BankExtension
    static void _set_BankExtension(::StringW value);
    // static public FMOD.VECTOR ToFMODVector(UnityEngine.Vector3 vec)
    // Offset: 0x15DAB30
    static ::FMOD::VECTOR ToFMODVector(::UnityEngine::Vector3 vec);
    // static public FMOD.ATTRIBUTES_3D To3DAttributes(UnityEngine.Vector3 pos)
    // Offset: 0x15D4144
    static ::FMOD::ATTRIBUTES_3D To3DAttributes(::UnityEngine::Vector3 pos);
    // static public FMOD.ATTRIBUTES_3D To3DAttributes(UnityEngine.Transform transform)
    // Offset: 0x15DA05C
    static ::FMOD::ATTRIBUTES_3D To3DAttributes(::UnityEngine::Transform* transform);
    // static public FMOD.ATTRIBUTES_3D To3DAttributes(UnityEngine.Transform transform, UnityEngine.Rigidbody rigidbody)
    // Offset: 0x15D78E8
    static ::FMOD::ATTRIBUTES_3D To3DAttributes(::UnityEngine::Transform* transform, ::UnityEngine::Rigidbody* rigidbody);
    // static public FMOD.ATTRIBUTES_3D To3DAttributes(UnityEngine.GameObject go, UnityEngine.Rigidbody rigidbody)
    // Offset: 0x15D9C84
    static ::FMOD::ATTRIBUTES_3D To3DAttributes(::UnityEngine::GameObject* go, ::UnityEngine::Rigidbody* rigidbody);
    // static public FMOD.ATTRIBUTES_3D To3DAttributes(UnityEngine.Transform transform, UnityEngine.Rigidbody2D rigidbody)
    // Offset: 0x15D7A10
    static ::FMOD::ATTRIBUTES_3D To3DAttributes(::UnityEngine::Transform* transform, ::UnityEngine::Rigidbody2D* rigidbody);
    // static public FMOD.ATTRIBUTES_3D To3DAttributes(UnityEngine.GameObject go, UnityEngine.Rigidbody2D rigidbody)
    // Offset: 0x15D9E64
    static ::FMOD::ATTRIBUTES_3D To3DAttributes(::UnityEngine::GameObject* go, ::UnityEngine::Rigidbody2D* rigidbody);
    // static FMODUnity.FMODPlatform GetCurrentPlatform()
    // Offset: 0x15D6B24
    static ::FMODUnity::FMODPlatform GetCurrentPlatform();
    // static System.String GetBankPath(System.String bankName)
    // Offset: 0x15D8A8C
    static ::StringW GetBankPath(::StringW bankName);
    // static System.String GetPluginPath(System.String pluginName)
    // Offset: 0x15DA820
    static ::StringW GetPluginPath(::StringW pluginName);
    // static public System.Void EnforceLibraryOrder()
    // Offset: 0x15D5EE0
    static void EnforceLibraryOrder();
  }; // FMODUnity.RuntimeUtils
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: FMODUnity::RuntimeUtils::ToFMODVector
// Il2CppName: ToFMODVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::VECTOR (*)(::UnityEngine::Vector3)>(&FMODUnity::RuntimeUtils::ToFMODVector)> {
  static const MethodInfo* get() {
    static auto* vec = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::RuntimeUtils*), "ToFMODVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{vec});
  }
};
// Writing MetadataGetter for method: FMODUnity::RuntimeUtils::To3DAttributes
// Il2CppName: To3DAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::ATTRIBUTES_3D (*)(::UnityEngine::Vector3)>(&FMODUnity::RuntimeUtils::To3DAttributes)> {
  static const MethodInfo* get() {
    static auto* pos = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::RuntimeUtils*), "To3DAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pos});
  }
};
// Writing MetadataGetter for method: FMODUnity::RuntimeUtils::To3DAttributes
// Il2CppName: To3DAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::ATTRIBUTES_3D (*)(::UnityEngine::Transform*)>(&FMODUnity::RuntimeUtils::To3DAttributes)> {
  static const MethodInfo* get() {
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::RuntimeUtils*), "To3DAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transform});
  }
};
// Writing MetadataGetter for method: FMODUnity::RuntimeUtils::To3DAttributes
// Il2CppName: To3DAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::ATTRIBUTES_3D (*)(::UnityEngine::Transform*, ::UnityEngine::Rigidbody*)>(&FMODUnity::RuntimeUtils::To3DAttributes)> {
  static const MethodInfo* get() {
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::RuntimeUtils*), "To3DAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transform, rigidbody});
  }
};
// Writing MetadataGetter for method: FMODUnity::RuntimeUtils::To3DAttributes
// Il2CppName: To3DAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::ATTRIBUTES_3D (*)(::UnityEngine::GameObject*, ::UnityEngine::Rigidbody*)>(&FMODUnity::RuntimeUtils::To3DAttributes)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::RuntimeUtils*), "To3DAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go, rigidbody});
  }
};
// Writing MetadataGetter for method: FMODUnity::RuntimeUtils::To3DAttributes
// Il2CppName: To3DAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::ATTRIBUTES_3D (*)(::UnityEngine::Transform*, ::UnityEngine::Rigidbody2D*)>(&FMODUnity::RuntimeUtils::To3DAttributes)> {
  static const MethodInfo* get() {
    static auto* transform = &::il2cpp_utils::GetClassFromName("UnityEngine", "Transform")->byval_arg;
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::RuntimeUtils*), "To3DAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{transform, rigidbody});
  }
};
// Writing MetadataGetter for method: FMODUnity::RuntimeUtils::To3DAttributes
// Il2CppName: To3DAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMOD::ATTRIBUTES_3D (*)(::UnityEngine::GameObject*, ::UnityEngine::Rigidbody2D*)>(&FMODUnity::RuntimeUtils::To3DAttributes)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* rigidbody = &::il2cpp_utils::GetClassFromName("UnityEngine", "Rigidbody2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::RuntimeUtils*), "To3DAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go, rigidbody});
  }
};
// Writing MetadataGetter for method: FMODUnity::RuntimeUtils::GetCurrentPlatform
// Il2CppName: GetCurrentPlatform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::FMODUnity::FMODPlatform (*)()>(&FMODUnity::RuntimeUtils::GetCurrentPlatform)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::RuntimeUtils*), "GetCurrentPlatform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::RuntimeUtils::GetBankPath
// Il2CppName: GetBankPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&FMODUnity::RuntimeUtils::GetBankPath)> {
  static const MethodInfo* get() {
    static auto* bankName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::RuntimeUtils*), "GetBankPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{bankName});
  }
};
// Writing MetadataGetter for method: FMODUnity::RuntimeUtils::GetPluginPath
// Il2CppName: GetPluginPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&FMODUnity::RuntimeUtils::GetPluginPath)> {
  static const MethodInfo* get() {
    static auto* pluginName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::RuntimeUtils*), "GetPluginPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pluginName});
  }
};
// Writing MetadataGetter for method: FMODUnity::RuntimeUtils::EnforceLibraryOrder
// Il2CppName: EnforceLibraryOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&FMODUnity::RuntimeUtils::EnforceLibraryOrder)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::RuntimeUtils*), "EnforceLibraryOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
