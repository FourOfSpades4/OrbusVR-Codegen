// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: FMODUnity.LoaderGameEvent
#include "FMODUnity/LoaderGameEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Collider2D
  class Collider2D;
}
// Completed forward declares
// Type namespace: FMODUnity
namespace FMODUnity {
  // Forward declaring type: StudioBankLoader
  class StudioBankLoader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::FMODUnity::StudioBankLoader);
DEFINE_IL2CPP_ARG_TYPE(::FMODUnity::StudioBankLoader*, "FMODUnity", "StudioBankLoader");
// Type namespace: FMODUnity
namespace FMODUnity {
  // Size: 0x32
  #pragma pack(push, 1)
  // Autogenerated type: FMODUnity.StudioBankLoader
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: AC20CC
  class StudioBankLoader : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public FMODUnity.LoaderGameEvent LoadEvent
    // Size: 0x4
    // Offset: 0x18
    ::FMODUnity::LoaderGameEvent LoadEvent;
    // Field size check
    static_assert(sizeof(::FMODUnity::LoaderGameEvent) == 0x4);
    // public FMODUnity.LoaderGameEvent UnloadEvent
    // Size: 0x4
    // Offset: 0x1C
    ::FMODUnity::LoaderGameEvent UnloadEvent;
    // Field size check
    static_assert(sizeof(::FMODUnity::LoaderGameEvent) == 0x4);
    // public System.Collections.Generic.List`1<System.String> Banks
    // Size: 0x8
    // Offset: 0x20
    ::System::Collections::Generic::List_1<::StringW>* Banks;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public System.String CollisionTag
    // Size: 0x8
    // Offset: 0x28
    ::StringW CollisionTag;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean PreloadSamples
    // Size: 0x1
    // Offset: 0x30
    bool PreloadSamples;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // private System.Boolean isQuitting
    // Size: 0x1
    // Offset: 0x31
    bool isQuitting;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public FMODUnity.LoaderGameEvent LoadEvent
    [[deprecated("Use field access instead!")]] ::FMODUnity::LoaderGameEvent& dyn_LoadEvent();
    // Get instance field reference: public FMODUnity.LoaderGameEvent UnloadEvent
    [[deprecated("Use field access instead!")]] ::FMODUnity::LoaderGameEvent& dyn_UnloadEvent();
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> Banks
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_Banks();
    // Get instance field reference: public System.String CollisionTag
    [[deprecated("Use field access instead!")]] ::StringW& dyn_CollisionTag();
    // Get instance field reference: public System.Boolean PreloadSamples
    [[deprecated("Use field access instead!")]] bool& dyn_PreloadSamples();
    // Get instance field reference: private System.Boolean isQuitting
    [[deprecated("Use field access instead!")]] bool& dyn_isQuitting();
    // private System.Void HandleGameEvent(FMODUnity.LoaderGameEvent gameEvent)
    // Offset: 0x15DB168
    void HandleGameEvent(::FMODUnity::LoaderGameEvent gameEvent);
    // private System.Void Start()
    // Offset: 0x15DB52C
    void Start();
    // private System.Void OnApplicationQuit()
    // Offset: 0x15DB554
    void OnApplicationQuit();
    // private System.Void OnDestroy()
    // Offset: 0x15DB560
    void OnDestroy();
    // private System.Void OnTriggerEnter(UnityEngine.Collider other)
    // Offset: 0x15DB574
    void OnTriggerEnter(::UnityEngine::Collider* other);
    // private System.Void OnTriggerExit(UnityEngine.Collider other)
    // Offset: 0x15DB5E8
    void OnTriggerExit(::UnityEngine::Collider* other);
    // private System.Void OnTriggerEnter2D(UnityEngine.Collider2D other)
    // Offset: 0x15DB65C
    void OnTriggerEnter2D(::UnityEngine::Collider2D* other);
    // private System.Void OnTriggerExit2D(UnityEngine.Collider2D other)
    // Offset: 0x15DB6D0
    void OnTriggerExit2D(::UnityEngine::Collider2D* other);
    // public System.Void Load()
    // Offset: 0x15DB1B8
    void Load();
    // public System.Void Unload()
    // Offset: 0x15DB3F4
    void Unload();
    // public System.Void .ctor()
    // Offset: 0x15DB744
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StudioBankLoader* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioBankLoader::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StudioBankLoader*, creationType>()));
    }
  }; // FMODUnity.StudioBankLoader
  #pragma pack(pop)
  static check_size<sizeof(StudioBankLoader), 49 + sizeof(bool)> __FMODUnity_StudioBankLoaderSizeCheck;
  static_assert(sizeof(StudioBankLoader) == 0x32);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: FMODUnity::StudioBankLoader::HandleGameEvent
// Il2CppName: HandleGameEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioBankLoader::*)(::FMODUnity::LoaderGameEvent)>(&FMODUnity::StudioBankLoader::HandleGameEvent)> {
  static const MethodInfo* get() {
    static auto* gameEvent = &::il2cpp_utils::GetClassFromName("FMODUnity", "LoaderGameEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioBankLoader*), "HandleGameEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameEvent});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioBankLoader::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioBankLoader::*)()>(&FMODUnity::StudioBankLoader::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioBankLoader*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioBankLoader::OnApplicationQuit
// Il2CppName: OnApplicationQuit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioBankLoader::*)()>(&FMODUnity::StudioBankLoader::OnApplicationQuit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioBankLoader*), "OnApplicationQuit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioBankLoader::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioBankLoader::*)()>(&FMODUnity::StudioBankLoader::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioBankLoader*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioBankLoader::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioBankLoader::*)(::UnityEngine::Collider*)>(&FMODUnity::StudioBankLoader::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioBankLoader*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioBankLoader::OnTriggerExit
// Il2CppName: OnTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioBankLoader::*)(::UnityEngine::Collider*)>(&FMODUnity::StudioBankLoader::OnTriggerExit)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioBankLoader*), "OnTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioBankLoader::OnTriggerEnter2D
// Il2CppName: OnTriggerEnter2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioBankLoader::*)(::UnityEngine::Collider2D*)>(&FMODUnity::StudioBankLoader::OnTriggerEnter2D)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioBankLoader*), "OnTriggerEnter2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioBankLoader::OnTriggerExit2D
// Il2CppName: OnTriggerExit2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioBankLoader::*)(::UnityEngine::Collider2D*)>(&FMODUnity::StudioBankLoader::OnTriggerExit2D)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioBankLoader*), "OnTriggerExit2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioBankLoader::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioBankLoader::*)()>(&FMODUnity::StudioBankLoader::Load)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioBankLoader*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioBankLoader::Unload
// Il2CppName: Unload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioBankLoader::*)()>(&FMODUnity::StudioBankLoader::Unload)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioBankLoader*), "Unload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioBankLoader::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
