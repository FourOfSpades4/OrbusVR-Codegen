// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: FMODUnity.EmitterGameEvent
#include "FMODUnity/EmitterGameEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: FMODUnity
namespace FMODUnity {
  // Forward declaring type: EmitterRef
  class EmitterRef;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Collider
  class Collider;
  // Forward declaring type: Collider2D
  class Collider2D;
}
// Completed forward declares
// Type namespace: FMODUnity
namespace FMODUnity {
  // Forward declaring type: StudioParameterTrigger
  class StudioParameterTrigger;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::FMODUnity::StudioParameterTrigger);
DEFINE_IL2CPP_ARG_TYPE(::FMODUnity::StudioParameterTrigger*, "FMODUnity", "StudioParameterTrigger");
// Type namespace: FMODUnity
namespace FMODUnity {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: FMODUnity.StudioParameterTrigger
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: AC2174
  class StudioParameterTrigger : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // public FMODUnity.EmitterRef[] Emitters
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::FMODUnity::EmitterRef*> Emitters;
    // Field size check
    static_assert(sizeof(::ArrayW<::FMODUnity::EmitterRef*>) == 0x8);
    // public FMODUnity.EmitterGameEvent TriggerEvent
    // Size: 0x4
    // Offset: 0x20
    ::FMODUnity::EmitterGameEvent TriggerEvent;
    // Field size check
    static_assert(sizeof(::FMODUnity::EmitterGameEvent) == 0x4);
    // Padding between fields: TriggerEvent and: CollisionTag
    char __padding1[0x4] = {};
    // public System.String CollisionTag
    // Size: 0x8
    // Offset: 0x28
    ::StringW CollisionTag;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public FMODUnity.EmitterRef[] Emitters
    [[deprecated("Use field access instead!")]] ::ArrayW<::FMODUnity::EmitterRef*>& dyn_Emitters();
    // Get instance field reference: public FMODUnity.EmitterGameEvent TriggerEvent
    [[deprecated("Use field access instead!")]] ::FMODUnity::EmitterGameEvent& dyn_TriggerEvent();
    // Get instance field reference: public System.String CollisionTag
    [[deprecated("Use field access instead!")]] ::StringW& dyn_CollisionTag();
    // private System.Void Start()
    // Offset: 0x15DC3AC
    void Start();
    // private System.Void OnDestroy()
    // Offset: 0x15DC3D4
    void OnDestroy();
    // private System.Void OnEnable()
    // Offset: 0x15DC3E8
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x15DC3FC
    void OnDisable();
    // private System.Void OnTriggerEnter(UnityEngine.Collider other)
    // Offset: 0x15DC410
    void OnTriggerEnter(::UnityEngine::Collider* other);
    // private System.Void OnTriggerExit(UnityEngine.Collider other)
    // Offset: 0x15DC48C
    void OnTriggerExit(::UnityEngine::Collider* other);
    // private System.Void OnTriggerEnter2D(UnityEngine.Collider2D other)
    // Offset: 0x15DC508
    void OnTriggerEnter2D(::UnityEngine::Collider2D* other);
    // private System.Void OnTriggerExit2D(UnityEngine.Collider2D other)
    // Offset: 0x15DC584
    void OnTriggerExit2D(::UnityEngine::Collider2D* other);
    // private System.Void OnCollisionEnter()
    // Offset: 0x15DC600
    void OnCollisionEnter();
    // private System.Void OnCollisionExit()
    // Offset: 0x15DC614
    void OnCollisionExit();
    // private System.Void OnCollisionEnter2D()
    // Offset: 0x15DC628
    void OnCollisionEnter2D();
    // private System.Void OnCollisionExit2D()
    // Offset: 0x15DC63C
    void OnCollisionExit2D();
    // private System.Void HandleGameEvent(FMODUnity.EmitterGameEvent gameEvent)
    // Offset: 0x15DC3C0
    void HandleGameEvent(::FMODUnity::EmitterGameEvent gameEvent);
    // public System.Void TriggerParameters()
    // Offset: 0x15DC650
    void TriggerParameters();
    // public System.Void .ctor()
    // Offset: 0x15DC908
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static StudioParameterTrigger* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::StudioParameterTrigger::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<StudioParameterTrigger*, creationType>()));
    }
  }; // FMODUnity.StudioParameterTrigger
  #pragma pack(pop)
  static check_size<sizeof(StudioParameterTrigger), 40 + sizeof(::StringW)> __FMODUnity_StudioParameterTriggerSizeCheck;
  static_assert(sizeof(StudioParameterTrigger) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)()>(&FMODUnity::StudioParameterTrigger::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)()>(&FMODUnity::StudioParameterTrigger::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)()>(&FMODUnity::StudioParameterTrigger::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)()>(&FMODUnity::StudioParameterTrigger::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::OnTriggerEnter
// Il2CppName: OnTriggerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)(::UnityEngine::Collider*)>(&FMODUnity::StudioParameterTrigger::OnTriggerEnter)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "OnTriggerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::OnTriggerExit
// Il2CppName: OnTriggerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)(::UnityEngine::Collider*)>(&FMODUnity::StudioParameterTrigger::OnTriggerExit)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "OnTriggerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::OnTriggerEnter2D
// Il2CppName: OnTriggerEnter2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)(::UnityEngine::Collider2D*)>(&FMODUnity::StudioParameterTrigger::OnTriggerEnter2D)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "OnTriggerEnter2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::OnTriggerExit2D
// Il2CppName: OnTriggerExit2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)(::UnityEngine::Collider2D*)>(&FMODUnity::StudioParameterTrigger::OnTriggerExit2D)> {
  static const MethodInfo* get() {
    static auto* other = &::il2cpp_utils::GetClassFromName("UnityEngine", "Collider2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "OnTriggerExit2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{other});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::OnCollisionEnter
// Il2CppName: OnCollisionEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)()>(&FMODUnity::StudioParameterTrigger::OnCollisionEnter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "OnCollisionEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::OnCollisionExit
// Il2CppName: OnCollisionExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)()>(&FMODUnity::StudioParameterTrigger::OnCollisionExit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "OnCollisionExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::OnCollisionEnter2D
// Il2CppName: OnCollisionEnter2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)()>(&FMODUnity::StudioParameterTrigger::OnCollisionEnter2D)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "OnCollisionEnter2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::OnCollisionExit2D
// Il2CppName: OnCollisionExit2D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)()>(&FMODUnity::StudioParameterTrigger::OnCollisionExit2D)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "OnCollisionExit2D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::HandleGameEvent
// Il2CppName: HandleGameEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)(::FMODUnity::EmitterGameEvent)>(&FMODUnity::StudioParameterTrigger::HandleGameEvent)> {
  static const MethodInfo* get() {
    static auto* gameEvent = &::il2cpp_utils::GetClassFromName("FMODUnity", "EmitterGameEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "HandleGameEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{gameEvent});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::TriggerParameters
// Il2CppName: TriggerParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FMODUnity::StudioParameterTrigger::*)()>(&FMODUnity::StudioParameterTrigger::TriggerParameters)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FMODUnity::StudioParameterTrigger*), "TriggerParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FMODUnity::StudioParameterTrigger::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
