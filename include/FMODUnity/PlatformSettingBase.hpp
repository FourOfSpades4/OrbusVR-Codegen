// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: FMODUnity.FMODPlatform
#include "FMODUnity/FMODPlatform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: FMODUnity
namespace FMODUnity {
  // Forward declaring type: PlatformSettingBase
  class PlatformSettingBase;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::FMODUnity::PlatformSettingBase);
DEFINE_IL2CPP_ARG_TYPE(::FMODUnity::PlatformSettingBase*, "FMODUnity", "PlatformSettingBase");
// Type namespace: FMODUnity
namespace FMODUnity {
  // Size: 0x14
  #pragma pack(push, 1)
  // Autogenerated type: FMODUnity.PlatformSettingBase
  // [TokenAttribute] Offset: FFFFFFFF
  class PlatformSettingBase : public ::Il2CppObject {
    public:
    public:
    // public FMODUnity.FMODPlatform Platform
    // Size: 0x4
    // Offset: 0x10
    ::FMODUnity::FMODPlatform Platform;
    // Field size check
    static_assert(sizeof(::FMODUnity::FMODPlatform) == 0x4);
    public:
    // Creating conversion operator: operator ::FMODUnity::FMODPlatform
    constexpr operator ::FMODUnity::FMODPlatform() const noexcept {
      return Platform;
    }
    // Get instance field reference: public FMODUnity.FMODPlatform Platform
    [[deprecated("Use field access instead!")]] ::FMODUnity::FMODPlatform& dyn_Platform();
    // public System.Void .ctor()
    // Offset: 0x15D53E8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PlatformSettingBase* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::FMODUnity::PlatformSettingBase::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PlatformSettingBase*, creationType>()));
    }
  }; // FMODUnity.PlatformSettingBase
  #pragma pack(pop)
  static check_size<sizeof(PlatformSettingBase), 16 + sizeof(::FMODUnity::FMODPlatform)> __FMODUnity_PlatformSettingBaseSizeCheck;
  static_assert(sizeof(PlatformSettingBase) == 0x14);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: FMODUnity::PlatformSettingBase::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
