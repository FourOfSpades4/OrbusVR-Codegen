// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Quaternion
  struct Quaternion;
  // Forward declaring type: Matrix4x4
  struct Matrix4x4;
  // Forward declaring type: Vector3
  struct Vector3;
}
// Completed forward declares
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Forward declaring type: Extensions
  class Extensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LIV::SDK::Unity::Extensions);
DEFINE_IL2CPP_ARG_TYPE(::LIV::SDK::Unity::Extensions*, "LIV.SDK.Unity", "Extensions");
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LIV.SDK.Unity.Extensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class Extensions : public ::Il2CppObject {
    public:
    // static private System.Single _copysign(System.Single sizeval, System.Single signval)
    // Offset: 0x10672B8
    static float _copysign(float sizeval, float signval);
    // static public UnityEngine.Quaternion GetRotation(UnityEngine.Matrix4x4 matrix)
    // Offset: 0x1067374
    static ::UnityEngine::Quaternion GetRotation(::UnityEngine::Matrix4x4 matrix);
    // static public UnityEngine.Vector3 GetPosition(UnityEngine.Matrix4x4 matrix)
    // Offset: 0x1067540
    static ::UnityEngine::Vector3 GetPosition(::UnityEngine::Matrix4x4 matrix);
  }; // LIV.SDK.Unity.Extensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LIV::SDK::Unity::Extensions::_copysign
// Il2CppName: _copysign
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, float)>(&LIV::SDK::Unity::Extensions::_copysign)> {
  static const MethodInfo* get() {
    static auto* sizeval = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* signval = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::Extensions*), "_copysign", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sizeval, signval});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::Extensions::GetRotation
// Il2CppName: GetRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Quaternion (*)(::UnityEngine::Matrix4x4)>(&LIV::SDK::Unity::Extensions::GetRotation)> {
  static const MethodInfo* get() {
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::Extensions*), "GetRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matrix});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::Extensions::GetPosition
// Il2CppName: GetPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (*)(::UnityEngine::Matrix4x4)>(&LIV::SDK::Unity::Extensions::GetPosition)> {
  static const MethodInfo* get() {
    static auto* matrix = &::il2cpp_utils::GetClassFromName("UnityEngine", "Matrix4x4")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::Extensions*), "GetPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{matrix});
  }
};
