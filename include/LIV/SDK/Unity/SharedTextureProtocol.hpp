// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: LIV::SDK::Unity
namespace LIV::SDK::Unity {
}
// Forward declaring namespace: System
namespace System {
  // Skipping declaration: IntPtr because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture
  class Texture;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Forward declaring type: SharedTextureProtocol
  class SharedTextureProtocol;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LIV::SDK::Unity::SharedTextureProtocol);
DEFINE_IL2CPP_ARG_TYPE(::LIV::SDK::Unity::SharedTextureProtocol*, "LIV.SDK.Unity", "SharedTextureProtocol");
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: LIV.SDK.Unity.SharedTextureProtocol
  // [TokenAttribute] Offset: FFFFFFFF
  // [AddComponentMenu] Offset: AD1E44
  class SharedTextureProtocol : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::LIV::SDK::Unity::SharedTextureProtocol::$CallPluginAtEndOfFrames$d__13
    class $CallPluginAtEndOfFrames$d__13;
    // static private System.IntPtr GetRenderEventFunc()
    // Offset: 0x106B54C
    static ::System::IntPtr GetRenderEventFunc();
    // static private System.Boolean GetIsCaptureActive()
    // Offset: 0x106B5D8
    static bool GetIsCaptureActive();
    // static private System.Int32 GetTextureWidth()
    // Offset: 0x106B66C
    static int GetTextureWidth();
    // static private System.Int32 GetTextureHeight()
    // Offset: 0x106B6F8
    static int GetTextureHeight();
    // static private System.Void SetTexture(System.IntPtr texture)
    // Offset: 0x106B784
    static void SetTexture(::System::IntPtr texture);
    // static public System.Boolean get_IsActive()
    // Offset: 0x10690F0
    static bool get_IsActive();
    // static public System.Int32 get_TextureWidth()
    // Offset: 0x106A68C
    static int get_TextureWidth();
    // static public System.Int32 get_TextureHeight()
    // Offset: 0x106A690
    static int get_TextureHeight();
    // static public System.Void SetOutputTexture(UnityEngine.Texture texture)
    // Offset: 0x106B2A8
    static void SetOutputTexture(::UnityEngine::Texture* texture);
    // private System.Void OnEnable()
    // Offset: 0x106B820
    void OnEnable();
    // private System.Collections.IEnumerator CallPluginAtEndOfFrames()
    // Offset: 0x106B84C
    ::System::Collections::IEnumerator* CallPluginAtEndOfFrames();
    // private System.Void OnDisable()
    // Offset: 0x106B8EC
    void OnDisable();
    // public System.Void .ctor()
    // Offset: 0x106B92C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SharedTextureProtocol* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SharedTextureProtocol::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SharedTextureProtocol*, creationType>()));
    }
  }; // LIV.SDK.Unity.SharedTextureProtocol
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::GetRenderEventFunc
// Il2CppName: GetRenderEventFunc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IntPtr (*)()>(&LIV::SDK::Unity::SharedTextureProtocol::GetRenderEventFunc)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "GetRenderEventFunc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::GetIsCaptureActive
// Il2CppName: GetIsCaptureActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&LIV::SDK::Unity::SharedTextureProtocol::GetIsCaptureActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "GetIsCaptureActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::GetTextureWidth
// Il2CppName: GetTextureWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&LIV::SDK::Unity::SharedTextureProtocol::GetTextureWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "GetTextureWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::GetTextureHeight
// Il2CppName: GetTextureHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&LIV::SDK::Unity::SharedTextureProtocol::GetTextureHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "GetTextureHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::SetTexture
// Il2CppName: SetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&LIV::SDK::Unity::SharedTextureProtocol::SetTexture)> {
  static const MethodInfo* get() {
    static auto* texture = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{texture});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::get_IsActive
// Il2CppName: get_IsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&LIV::SDK::Unity::SharedTextureProtocol::get_IsActive)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "get_IsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::get_TextureWidth
// Il2CppName: get_TextureWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&LIV::SDK::Unity::SharedTextureProtocol::get_TextureWidth)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "get_TextureWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::get_TextureHeight
// Il2CppName: get_TextureHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&LIV::SDK::Unity::SharedTextureProtocol::get_TextureHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "get_TextureHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::SetOutputTexture
// Il2CppName: SetOutputTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::Texture*)>(&LIV::SDK::Unity::SharedTextureProtocol::SetOutputTexture)> {
  static const MethodInfo* get() {
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "SetOutputTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{texture});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LIV::SDK::Unity::SharedTextureProtocol::*)()>(&LIV::SDK::Unity::SharedTextureProtocol::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::CallPluginAtEndOfFrames
// Il2CppName: CallPluginAtEndOfFrames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (LIV::SDK::Unity::SharedTextureProtocol::*)()>(&LIV::SDK::Unity::SharedTextureProtocol::CallPluginAtEndOfFrames)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "CallPluginAtEndOfFrames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LIV::SDK::Unity::SharedTextureProtocol::*)()>(&LIV::SDK::Unity::SharedTextureProtocol::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SharedTextureProtocol*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SharedTextureProtocol::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
