// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: LIV.SDK.Unity.ExternalCamera
#include "LIV/SDK/Unity/ExternalCamera.hpp"
// Including type: Valve.VR.TrackedDevicePose_t
#include "Valve/VR/TrackedDevicePose_t.hpp"
// Including type: Valve.VR.ETrackedDeviceClass
#include "Valve/VR/ETrackedDeviceClass.hpp"
// Including type: Valve.VR.ETrackedControllerRole
#include "Valve/VR/ETrackedControllerRole.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`3<T1, T2, TResult>
  template<typename T1, typename T2, typename TResult>
  class Func_3;
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: <>f__AnonymousType0`2<$pose$j__TPar, $index$j__TPar>
  template<typename $pose$j__TPar, typename $index$j__TPar>
  class $$f__AnonymousType0_2;
  // Forward declaring type: <>f__AnonymousType1`3<$pose$j__TPar, $index$j__TPar, $deviceClass$j__TPar>
  template<typename $pose$j__TPar, typename $index$j__TPar, typename $deviceClass$j__TPar>
  class $$f__AnonymousType1_3;
  // Forward declaring type: <>f__AnonymousType2`6<$pose$j__TPar, $index$j__TPar, $deviceClass$j__TPar, $deviceRole$j__TPar, $modelNumber$j__TPar, $renderModel$j__TPar>
  template<typename $pose$j__TPar, typename $index$j__TPar, typename $deviceClass$j__TPar, typename $deviceRole$j__TPar, typename $modelNumber$j__TPar, typename $renderModel$j__TPar>
  class $$f__AnonymousType2_6;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LIV::SDK::Unity::ExternalCamera::$$c);
DEFINE_IL2CPP_ARG_TYPE(::LIV::SDK::Unity::ExternalCamera::$$c*, "LIV.SDK.Unity", "ExternalCamera/<>c");
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LIV.SDK.Unity.ExternalCamera/<>c
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: AD1D40
  class ExternalCamera::$$c : public ::Il2CppObject {
    public:
    // Get static field: static public readonly LIV.SDK.Unity.ExternalCamera/<>c <>9
    static ::LIV::SDK::Unity::ExternalCamera::$$c* _get_$$9();
    // Set static field: static public readonly LIV.SDK.Unity.ExternalCamera/<>c <>9
    static void _set_$$9(::LIV::SDK::Unity::ExternalCamera::$$c* value);
    // Get static field: static public System.Func`3<Valve.VR.TrackedDevicePose_t,System.Int32,<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>> <>9__17_0
    static ::System::Func_3<::Valve::VR::TrackedDevicePose_t, int, ::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*>* _get_$$9__17_0();
    // Set static field: static public System.Func`3<Valve.VR.TrackedDevicePose_t,System.Int32,<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>> <>9__17_0
    static void _set_$$9__17_0(::System::Func_3<::Valve::VR::TrackedDevicePose_t, int, ::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*>* value);
    // Get static field: static public System.Func`2<<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>,System.Boolean> <>9__17_1
    static ::System::Func_2<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*, bool>* _get_$$9__17_1();
    // Set static field: static public System.Func`2<<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>,System.Boolean> <>9__17_1
    static void _set_$$9__17_1(::System::Func_2<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*, bool>* value);
    // Get static field: static public System.Func`2<<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>,<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>> <>9__17_2
    static ::System::Func_2<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*, ::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*>* _get_$$9__17_2();
    // Set static field: static public System.Func`2<<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32>,<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>> <>9__17_2
    static void _set_$$9__17_2(::System::Func_2<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*, ::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*>* value);
    // Get static field: static public System.Func`2<<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>,System.Boolean> <>9__17_3
    static ::System::Func_2<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*, bool>* _get_$$9__17_3();
    // Set static field: static public System.Func`2<<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>,System.Boolean> <>9__17_3
    static void _set_$$9__17_3(::System::Func_2<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*, bool>* value);
    // Get static field: static public System.Func`2<<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>,<>f__AnonymousType2`6<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass,Valve.VR.ETrackedControllerRole,System.String,System.String>> <>9__17_4
    static ::System::Func_2<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*, ::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*>* _get_$$9__17_4();
    // Set static field: static public System.Func`2<<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass>,<>f__AnonymousType2`6<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass,Valve.VR.ETrackedControllerRole,System.String,System.String>> <>9__17_4
    static void _set_$$9__17_4(::System::Func_2<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*, ::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*>* value);
    // Get static field: static public System.Func`2<<>f__AnonymousType2`6<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass,Valve.VR.ETrackedControllerRole,System.String,System.String>,System.Int32> <>9__17_5
    static ::System::Func_2<::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*, int>* _get_$$9__17_5();
    // Set static field: static public System.Func`2<<>f__AnonymousType2`6<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass,Valve.VR.ETrackedControllerRole,System.String,System.String>,System.Int32> <>9__17_5
    static void _set_$$9__17_5(::System::Func_2<::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*, int>* value);
    // static private System.Void .cctor()
    // Offset: 0x10681B8
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x106821C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ExternalCamera::$$c* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::ExternalCamera::$$c::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ExternalCamera::$$c*, creationType>()));
    }
    // <>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32> <IdentifyExternalCameraDevice>b__17_0(Valve.VR.TrackedDevicePose_t pose, System.Int32 index)
    // Offset: 0x1068224
    ::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>* $IdentifyExternalCameraDevice$b__17_0(::Valve::VR::TrackedDevicePose_t pose, int index);
    // System.Boolean <IdentifyExternalCameraDevice>b__17_1(<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32> candidate)
    // Offset: 0x10682D0
    bool $IdentifyExternalCameraDevice$b__17_1(::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>* candidate);
    // <>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass> <IdentifyExternalCameraDevice>b__17_2(<>f__AnonymousType0`2<Valve.VR.TrackedDevicePose_t,System.UInt32> candidate)
    // Offset: 0x1068340
    ::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>* $IdentifyExternalCameraDevice$b__17_2(::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>* candidate);
    // System.Boolean <IdentifyExternalCameraDevice>b__17_3(<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass> candidate)
    // Offset: 0x1068494
    bool $IdentifyExternalCameraDevice$b__17_3(::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>* candidate);
    // <>f__AnonymousType2`6<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass,Valve.VR.ETrackedControllerRole,System.String,System.String> <IdentifyExternalCameraDevice>b__17_4(<>f__AnonymousType1`3<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass> candidate)
    // Offset: 0x1068524
    ::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>* $IdentifyExternalCameraDevice$b__17_4(::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>* candidate);
    // System.Int32 <IdentifyExternalCameraDevice>b__17_5(<>f__AnonymousType2`6<Valve.VR.TrackedDevicePose_t,System.UInt32,Valve.VR.ETrackedDeviceClass,Valve.VR.ETrackedControllerRole,System.String,System.String> candidate)
    // Offset: 0x1068720
    int $IdentifyExternalCameraDevice$b__17_5(::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>* candidate);
  }; // LIV.SDK.Unity.ExternalCamera/<>c
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LIV::SDK::Unity::ExternalCamera::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LIV::SDK::Unity::ExternalCamera::$$c::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::ExternalCamera::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::ExternalCamera::$$c::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_0
// Il2CppName: <IdentifyExternalCameraDevice>b__17_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>* (LIV::SDK::Unity::ExternalCamera::$$c::*)(::Valve::VR::TrackedDevicePose_t, int)>(&LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_0)> {
  static const MethodInfo* get() {
    static auto* pose = &::il2cpp_utils::GetClassFromName("Valve.VR", "TrackedDevicePose_t")->byval_arg;
    static auto* index = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::ExternalCamera::$$c*), "<IdentifyExternalCameraDevice>b__17_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{pose, index});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_1
// Il2CppName: <IdentifyExternalCameraDevice>b__17_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LIV::SDK::Unity::ExternalCamera::$$c::*)(::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*)>(&LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_1)> {
  static const MethodInfo* get() {
    static auto* candidate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "<>f__AnonymousType0`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Valve.VR", "TrackedDevicePose_t"), ::il2cpp_utils::GetClassFromName("System", "UInt32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::ExternalCamera::$$c*), "<IdentifyExternalCameraDevice>b__17_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{candidate});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_2
// Il2CppName: <IdentifyExternalCameraDevice>b__17_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>* (LIV::SDK::Unity::ExternalCamera::$$c::*)(::GlobalNamespace::$$f__AnonymousType0_2<::Valve::VR::TrackedDevicePose_t, uint>*)>(&LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_2)> {
  static const MethodInfo* get() {
    static auto* candidate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "<>f__AnonymousType0`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Valve.VR", "TrackedDevicePose_t"), ::il2cpp_utils::GetClassFromName("System", "UInt32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::ExternalCamera::$$c*), "<IdentifyExternalCameraDevice>b__17_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{candidate});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_3
// Il2CppName: <IdentifyExternalCameraDevice>b__17_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LIV::SDK::Unity::ExternalCamera::$$c::*)(::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*)>(&LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_3)> {
  static const MethodInfo* get() {
    static auto* candidate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "<>f__AnonymousType1`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Valve.VR", "TrackedDevicePose_t"), ::il2cpp_utils::GetClassFromName("System", "UInt32"), ::il2cpp_utils::GetClassFromName("Valve.VR", "ETrackedDeviceClass")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::ExternalCamera::$$c*), "<IdentifyExternalCameraDevice>b__17_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{candidate});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_4
// Il2CppName: <IdentifyExternalCameraDevice>b__17_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>* (LIV::SDK::Unity::ExternalCamera::$$c::*)(::GlobalNamespace::$$f__AnonymousType1_3<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass>*)>(&LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_4)> {
  static const MethodInfo* get() {
    static auto* candidate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "<>f__AnonymousType1`3"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Valve.VR", "TrackedDevicePose_t"), ::il2cpp_utils::GetClassFromName("System", "UInt32"), ::il2cpp_utils::GetClassFromName("Valve.VR", "ETrackedDeviceClass")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::ExternalCamera::$$c*), "<IdentifyExternalCameraDevice>b__17_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{candidate});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_5
// Il2CppName: <IdentifyExternalCameraDevice>b__17_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LIV::SDK::Unity::ExternalCamera::$$c::*)(::GlobalNamespace::$$f__AnonymousType2_6<::Valve::VR::TrackedDevicePose_t, uint, ::Valve::VR::ETrackedDeviceClass, ::Valve::VR::ETrackedControllerRole, ::StringW, ::StringW>*)>(&LIV::SDK::Unity::ExternalCamera::$$c::$IdentifyExternalCameraDevice$b__17_5)> {
  static const MethodInfo* get() {
    static auto* candidate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("", "<>f__AnonymousType2`6"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Valve.VR", "TrackedDevicePose_t"), ::il2cpp_utils::GetClassFromName("System", "UInt32"), ::il2cpp_utils::GetClassFromName("Valve.VR", "ETrackedDeviceClass"), ::il2cpp_utils::GetClassFromName("Valve.VR", "ETrackedControllerRole"), ::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::ExternalCamera::$$c*), "<IdentifyExternalCameraDevice>b__17_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{candidate});
  }
};
