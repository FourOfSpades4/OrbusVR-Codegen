// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Forward declaring type: SteamVRCompatibility
  class SteamVRCompatibility;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::LIV::SDK::Unity::SteamVRCompatibility);
DEFINE_IL2CPP_ARG_TYPE(::LIV::SDK::Unity::SteamVRCompatibility*, "LIV.SDK.Unity", "SteamVRCompatibility");
// Type namespace: LIV.SDK.Unity
namespace LIV::SDK::Unity {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: LIV.SDK.Unity.SteamVRCompatibility
  // [TokenAttribute] Offset: FFFFFFFF
  class SteamVRCompatibility : public ::Il2CppObject {
    public:
    // Get static field: static public System.Boolean IsAvailable
    static bool _get_IsAvailable();
    // Set static field: static public System.Boolean IsAvailable
    static void _set_IsAvailable(bool value);
    // Get static field: static public System.Type SteamVRCamera
    static ::System::Type* _get_SteamVRCamera();
    // Set static field: static public System.Type SteamVRCamera
    static void _set_SteamVRCamera(::System::Type* value);
    // Get static field: static public System.Type SteamVRExternalCamera
    static ::System::Type* _get_SteamVRExternalCamera();
    // Set static field: static public System.Type SteamVRExternalCamera
    static void _set_SteamVRExternalCamera(::System::Type* value);
    // Get static field: static public System.Type SteamVRFade
    static ::System::Type* _get_SteamVRFade();
    // Set static field: static public System.Type SteamVRFade
    static void _set_SteamVRFade(::System::Type* value);
    // static private System.Void .cctor()
    // Offset: 0x106BA78
    static void _cctor();
    // static private System.Boolean FindSteamVRAsset()
    // Offset: 0x106BAD0
    static bool FindSteamVRAsset();
  }; // LIV.SDK.Unity.SteamVRCompatibility
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: LIV::SDK::Unity::SteamVRCompatibility::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LIV::SDK::Unity::SteamVRCompatibility::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SteamVRCompatibility*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LIV::SDK::Unity::SteamVRCompatibility::FindSteamVRAsset
// Il2CppName: FindSteamVRAsset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&LIV::SDK::Unity::SteamVRCompatibility::FindSteamVRAsset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LIV::SDK::Unity::SteamVRCompatibility*), "FindSteamVRAsset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
