// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Wrench
namespace Wrench {
  // Forward declaring type: OnLogEvent
  class OnLogEvent;
}
// Completed forward declares
// Type namespace: Wrench
namespace Wrench {
  // Forward declaring type: Log
  class Log;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Wrench::Log);
DEFINE_IL2CPP_ARG_TYPE(::Wrench::Log*, "Wrench", "Log");
// Type namespace: Wrench
namespace Wrench {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Wrench.Log
  // [TokenAttribute] Offset: FFFFFFFF
  class Log : public ::Il2CppObject {
    public:
    // Get static field: static public System.Boolean Active
    static bool _get_Active();
    // Set static field: static public System.Boolean Active
    static void _set_Active(bool value);
    // [CompilerGeneratedAttribute] Offset: 0xADEC94
    // Get static field: static private Wrench.OnLogEvent OnLog
    static ::Wrench::OnLogEvent* _get_OnLog();
    // Set static field: static private Wrench.OnLogEvent OnLog
    static void _set_OnLog(::Wrench::OnLogEvent* value);
    // static public System.Void add_OnLog(Wrench.OnLogEvent value)
    // Offset: 0x282B640
    static void add_OnLog(::Wrench::OnLogEvent* value);
    // static public System.Void remove_OnLog(Wrench.OnLogEvent value)
    // Offset: 0x282B770
    static void remove_OnLog(::Wrench::OnLogEvent* value);
    // static public System.Void Add(System.String text)
    // Offset: 0x282B8A0
    static void Add(::StringW text);
    // static public System.Void Add(System.Object e)
    // Offset: 0x282C0AC
    static void Add(::Il2CppObject* e);
    // static private System.Void .cctor()
    // Offset: 0x282C134
    static void _cctor();
  }; // Wrench.Log
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Wrench::Log::add_OnLog
// Il2CppName: add_OnLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Wrench::OnLogEvent*)>(&Wrench::Log::add_OnLog)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Wrench", "OnLogEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Wrench::Log*), "add_OnLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Wrench::Log::remove_OnLog
// Il2CppName: remove_OnLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Wrench::OnLogEvent*)>(&Wrench::Log::remove_OnLog)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Wrench", "OnLogEvent")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Wrench::Log*), "remove_OnLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Wrench::Log::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&Wrench::Log::Add)> {
  static const MethodInfo* get() {
    static auto* text = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Wrench::Log*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{text});
  }
};
// Writing MetadataGetter for method: Wrench::Log::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*)>(&Wrench::Log::Add)> {
  static const MethodInfo* get() {
    static auto* e = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Wrench::Log*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{e});
  }
};
// Writing MetadataGetter for method: Wrench::Log::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Wrench::Log::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Wrench::Log*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
