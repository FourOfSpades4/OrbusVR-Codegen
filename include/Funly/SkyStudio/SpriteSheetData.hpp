// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: SpriteSheetData
  class SpriteSheetData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::SpriteSheetData);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::SpriteSheetData*, "Funly.SkyStudio", "SpriteSheetData");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Funly.SkyStudio.SpriteSheetData
  // [TokenAttribute] Offset: FFFFFFFF
  class SpriteSheetData : public ::Il2CppObject {
    public:
    public:
    // public System.Int32 columns
    // Size: 0x4
    // Offset: 0x10
    int columns;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 rows
    // Size: 0x4
    // Offset: 0x14
    int rows;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 frameCount
    // Size: 0x4
    // Offset: 0x18
    int frameCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 frameRate
    // Size: 0x4
    // Offset: 0x1C
    int frameRate;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: public System.Int32 columns
    [[deprecated("Use field access instead!")]] int& dyn_columns();
    // Get instance field reference: public System.Int32 rows
    [[deprecated("Use field access instead!")]] int& dyn_rows();
    // Get instance field reference: public System.Int32 frameCount
    [[deprecated("Use field access instead!")]] int& dyn_frameCount();
    // Get instance field reference: public System.Int32 frameRate
    [[deprecated("Use field access instead!")]] int& dyn_frameRate();
    // public System.Void .ctor()
    // Offset: 0x150E610
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SpriteSheetData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SpriteSheetData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SpriteSheetData*, creationType>()));
    }
  }; // Funly.SkyStudio.SpriteSheetData
  #pragma pack(pop)
  static check_size<sizeof(SpriteSheetData), 28 + sizeof(int)> __Funly_SkyStudio_SpriteSheetDataSizeCheck;
  static_assert(sizeof(SpriteSheetData) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::SpriteSheetData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
