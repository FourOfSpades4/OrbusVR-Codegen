// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Funly::SkyStudio
namespace Funly::SkyStudio {
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Camera
  class Camera;
  // Forward declaring type: Shader
  class Shader;
  // Forward declaring type: RenderTexture
  class RenderTexture;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: WeatherDepthCamera
  class WeatherDepthCamera;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::WeatherDepthCamera);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::WeatherDepthCamera*, "Funly.SkyStudio", "WeatherDepthCamera");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: Funly.SkyStudio.WeatherDepthCamera
  // [TokenAttribute] Offset: FFFFFFFF
  // [RequireComponent] Offset: AD280C
  class WeatherDepthCamera : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::Funly::SkyStudio::WeatherDepthCamera::$RenderAtEndOfFrame$d__10
    class $RenderAtEndOfFrame$d__10;
    public:
    // private UnityEngine.Camera m_DepthCamera
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Camera* m_DepthCamera;
    // Field size check
    static_assert(sizeof(::UnityEngine::Camera*) == 0x8);
    // [TooltipAttribute] Offset: 0xAE2A1C
    // public UnityEngine.Shader depthShader
    // Size: 0x8
    // Offset: 0x20
    ::UnityEngine::Shader* depthShader;
    // Field size check
    static_assert(sizeof(::UnityEngine::Shader*) == 0x8);
    // public UnityEngine.RenderTexture overheadDepthTexture
    // Size: 0x8
    // Offset: 0x28
    ::UnityEngine::RenderTexture* overheadDepthTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::RenderTexture*) == 0x8);
    // [RangeAttribute] Offset: 0xAE2A64
    // [TooltipAttribute] Offset: 0xAE2A64
    // public System.Int32 renderFrameInterval
    // Size: 0x4
    // Offset: 0x30
    int renderFrameInterval;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RangeAttribute] Offset: 0xAE2ABC
    // [TooltipAttribute] Offset: 0xAE2ABC
    // public System.Int32 textureResolution
    // Size: 0x4
    // Offset: 0x34
    int textureResolution;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private UnityEngine.Camera m_DepthCamera
    [[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& dyn_m_DepthCamera();
    // Get instance field reference: public UnityEngine.Shader depthShader
    [[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& dyn_depthShader();
    // Get instance field reference: public UnityEngine.RenderTexture overheadDepthTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& dyn_overheadDepthTexture();
    // Get instance field reference: public System.Int32 renderFrameInterval
    [[deprecated("Use field access instead!")]] int& dyn_renderFrameInterval();
    // Get instance field reference: public System.Int32 textureResolution
    [[deprecated("Use field access instead!")]] int& dyn_textureResolution();
    // private System.Void Start()
    // Offset: 0x1526578
    void Start();
    // private System.Void OnEnable()
    // Offset: 0x15265E8
    void OnEnable();
    // private System.Void Update()
    // Offset: 0x1526688
    void Update();
    // private System.Void RenderOverheadCamera()
    // Offset: 0x15266EC
    void RenderOverheadCamera();
    // private System.Void PrepareRenderTexture()
    // Offset: 0x1526934
    void PrepareRenderTexture();
    // private System.Collections.IEnumerator RenderAtEndOfFrame()
    // Offset: 0x1526614
    ::System::Collections::IEnumerator* RenderAtEndOfFrame();
    // public System.Void .ctor()
    // Offset: 0x1526BF8
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static WeatherDepthCamera* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::WeatherDepthCamera::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<WeatherDepthCamera*, creationType>()));
    }
  }; // Funly.SkyStudio.WeatherDepthCamera
  #pragma pack(pop)
  static check_size<sizeof(WeatherDepthCamera), 52 + sizeof(int)> __Funly_SkyStudio_WeatherDepthCameraSizeCheck;
  static_assert(sizeof(WeatherDepthCamera) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::WeatherDepthCamera::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::WeatherDepthCamera::*)()>(&Funly::SkyStudio::WeatherDepthCamera::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::WeatherDepthCamera*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::WeatherDepthCamera::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::WeatherDepthCamera::*)()>(&Funly::SkyStudio::WeatherDepthCamera::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::WeatherDepthCamera*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::WeatherDepthCamera::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::WeatherDepthCamera::*)()>(&Funly::SkyStudio::WeatherDepthCamera::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::WeatherDepthCamera*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::WeatherDepthCamera::RenderOverheadCamera
// Il2CppName: RenderOverheadCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::WeatherDepthCamera::*)()>(&Funly::SkyStudio::WeatherDepthCamera::RenderOverheadCamera)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::WeatherDepthCamera*), "RenderOverheadCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::WeatherDepthCamera::PrepareRenderTexture
// Il2CppName: PrepareRenderTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::WeatherDepthCamera::*)()>(&Funly::SkyStudio::WeatherDepthCamera::PrepareRenderTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::WeatherDepthCamera*), "PrepareRenderTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::WeatherDepthCamera::RenderAtEndOfFrame
// Il2CppName: RenderAtEndOfFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Funly::SkyStudio::WeatherDepthCamera::*)()>(&Funly::SkyStudio::WeatherDepthCamera::RenderAtEndOfFrame)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::WeatherDepthCamera*), "RenderAtEndOfFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::WeatherDepthCamera::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
