// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Funly::SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: SpherePoint
  class SpherePoint;
  // Skipping declaration: RebuildType because it is already included!
  // Skipping declaration: FormatStyle because it is already included!
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Completed forward declares
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: ProfileGroupDefinition
  class ProfileGroupDefinition;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::ProfileGroupDefinition);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::ProfileGroupDefinition*, "Funly.SkyStudio", "ProfileGroupDefinition");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Size: 0x71
  #pragma pack(push, 1)
  // Autogenerated type: Funly.SkyStudio.ProfileGroupDefinition
  // [TokenAttribute] Offset: FFFFFFFF
  class ProfileGroupDefinition : public ::Il2CppObject {
    public:
    // Nested type: ::Funly::SkyStudio::ProfileGroupDefinition::GroupType
    struct GroupType;
    // Nested type: ::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle
    struct FormatStyle;
    // Nested type: ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType
    struct RebuildType;
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Funly.SkyStudio.ProfileGroupDefinition/GroupType
    // [TokenAttribute] Offset: FFFFFFFF
    struct GroupType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: GroupType
      constexpr GroupType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType None
      static constexpr const int None = 0;
      // Get static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType None
      static ::Funly::SkyStudio::ProfileGroupDefinition::GroupType _get_None();
      // Set static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType None
      static void _set_None(::Funly::SkyStudio::ProfileGroupDefinition::GroupType value);
      // static field const value: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Color
      static constexpr const int Color = 1;
      // Get static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Color
      static ::Funly::SkyStudio::ProfileGroupDefinition::GroupType _get_Color();
      // Set static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Color
      static void _set_Color(::Funly::SkyStudio::ProfileGroupDefinition::GroupType value);
      // static field const value: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Number
      static constexpr const int Number = 2;
      // Get static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Number
      static ::Funly::SkyStudio::ProfileGroupDefinition::GroupType _get_Number();
      // Set static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Number
      static void _set_Number(::Funly::SkyStudio::ProfileGroupDefinition::GroupType value);
      // static field const value: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Texture
      static constexpr const int Texture = 3;
      // Get static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Texture
      static ::Funly::SkyStudio::ProfileGroupDefinition::GroupType _get_Texture();
      // Set static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Texture
      static void _set_Texture(::Funly::SkyStudio::ProfileGroupDefinition::GroupType value);
      // static field const value: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType SpherePoint
      static constexpr const int SpherePoint = 4;
      // Get static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType SpherePoint
      static ::Funly::SkyStudio::ProfileGroupDefinition::GroupType _get_SpherePoint();
      // Set static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType SpherePoint
      static void _set_SpherePoint(::Funly::SkyStudio::ProfileGroupDefinition::GroupType value);
      // static field const value: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Boolean
      static constexpr const int Boolean = 5;
      // Get static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Boolean
      static ::Funly::SkyStudio::ProfileGroupDefinition::GroupType _get_Boolean();
      // Set static field: static public Funly.SkyStudio.ProfileGroupDefinition/GroupType Boolean
      static void _set_Boolean(::Funly::SkyStudio::ProfileGroupDefinition::GroupType value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Funly.SkyStudio.ProfileGroupDefinition/GroupType
    #pragma pack(pop)
    static check_size<sizeof(ProfileGroupDefinition::GroupType), 0 + sizeof(int)> __Funly_SkyStudio_ProfileGroupDefinition_GroupTypeSizeCheck;
    static_assert(sizeof(ProfileGroupDefinition::GroupType) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Funly.SkyStudio.ProfileGroupDefinition/FormatStyle
    // [TokenAttribute] Offset: FFFFFFFF
    struct FormatStyle/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: FormatStyle
      constexpr FormatStyle(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Funly.SkyStudio.ProfileGroupDefinition/FormatStyle None
      static constexpr const int None = 0;
      // Get static field: static public Funly.SkyStudio.ProfileGroupDefinition/FormatStyle None
      static ::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle _get_None();
      // Set static field: static public Funly.SkyStudio.ProfileGroupDefinition/FormatStyle None
      static void _set_None(::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle value);
      // static field const value: static public Funly.SkyStudio.ProfileGroupDefinition/FormatStyle Integer
      static constexpr const int Integer = 1;
      // Get static field: static public Funly.SkyStudio.ProfileGroupDefinition/FormatStyle Integer
      static ::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle _get_Integer();
      // Set static field: static public Funly.SkyStudio.ProfileGroupDefinition/FormatStyle Integer
      static void _set_Integer(::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle value);
      // static field const value: static public Funly.SkyStudio.ProfileGroupDefinition/FormatStyle Float
      static constexpr const int Float = 2;
      // Get static field: static public Funly.SkyStudio.ProfileGroupDefinition/FormatStyle Float
      static ::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle _get_Float();
      // Set static field: static public Funly.SkyStudio.ProfileGroupDefinition/FormatStyle Float
      static void _set_Float(::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Funly.SkyStudio.ProfileGroupDefinition/FormatStyle
    #pragma pack(pop)
    static check_size<sizeof(ProfileGroupDefinition::FormatStyle), 0 + sizeof(int)> __Funly_SkyStudio_ProfileGroupDefinition_FormatStyleSizeCheck;
    static_assert(sizeof(ProfileGroupDefinition::FormatStyle) == 0x4);
    // Size: 0x4
    #pragma pack(push, 1)
    // Autogenerated type: Funly.SkyStudio.ProfileGroupDefinition/RebuildType
    // [TokenAttribute] Offset: FFFFFFFF
    struct RebuildType/*, public ::System::Enum*/ {
      public:
      public:
      // public System.Int32 value__
      // Size: 0x4
      // Offset: 0x0
      int value;
      // Field size check
      static_assert(sizeof(int) == 0x4);
      public:
      // Creating value type constructor for type: RebuildType
      constexpr RebuildType(int value_ = {}) noexcept : value{value_} {}
      // Creating interface conversion operator: operator ::System::Enum
      operator ::System::Enum() noexcept {
        return *reinterpret_cast<::System::Enum*>(this);
      }
      // Creating conversion operator: operator int
      constexpr operator int() const noexcept {
        return value;
      }
      // static field const value: static public Funly.SkyStudio.ProfileGroupDefinition/RebuildType None
      static constexpr const int None = 0;
      // Get static field: static public Funly.SkyStudio.ProfileGroupDefinition/RebuildType None
      static ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType _get_None();
      // Set static field: static public Funly.SkyStudio.ProfileGroupDefinition/RebuildType None
      static void _set_None(::Funly::SkyStudio::ProfileGroupDefinition::RebuildType value);
      // static field const value: static public Funly.SkyStudio.ProfileGroupDefinition/RebuildType Stars
      static constexpr const int Stars = 1;
      // Get static field: static public Funly.SkyStudio.ProfileGroupDefinition/RebuildType Stars
      static ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType _get_Stars();
      // Set static field: static public Funly.SkyStudio.ProfileGroupDefinition/RebuildType Stars
      static void _set_Stars(::Funly::SkyStudio::ProfileGroupDefinition::RebuildType value);
      // Get instance field reference: public System.Int32 value__
      [[deprecated("Use field access instead!")]] int& dyn_value__();
    }; // Funly.SkyStudio.ProfileGroupDefinition/RebuildType
    #pragma pack(pop)
    static check_size<sizeof(ProfileGroupDefinition::RebuildType), 0 + sizeof(int)> __Funly_SkyStudio_ProfileGroupDefinition_RebuildTypeSizeCheck;
    static_assert(sizeof(ProfileGroupDefinition::RebuildType) == 0x4);
    public:
    // public Funly.SkyStudio.ProfileGroupDefinition/GroupType type
    // Size: 0x4
    // Offset: 0x10
    ::Funly::SkyStudio::ProfileGroupDefinition::GroupType type;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::ProfileGroupDefinition::GroupType) == 0x4);
    // public Funly.SkyStudio.ProfileGroupDefinition/FormatStyle formatStyle
    // Size: 0x4
    // Offset: 0x14
    ::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle formatStyle;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle) == 0x4);
    // public Funly.SkyStudio.ProfileGroupDefinition/RebuildType rebuildType
    // Size: 0x4
    // Offset: 0x18
    ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType rebuildType;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::ProfileGroupDefinition::RebuildType) == 0x4);
    // Padding between fields: rebuildType and: propertyKey
    char __padding2[0x4] = {};
    // public System.String propertyKey
    // Size: 0x8
    // Offset: 0x20
    ::StringW propertyKey;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String groupName
    // Size: 0x8
    // Offset: 0x28
    ::StringW groupName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public UnityEngine.Color color
    // Size: 0x10
    // Offset: 0x30
    ::UnityEngine::Color color;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // public Funly.SkyStudio.SpherePoint spherePoint
    // Size: 0x8
    // Offset: 0x40
    ::Funly::SkyStudio::SpherePoint* spherePoint;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::SpherePoint*) == 0x8);
    // public System.Single minimumValue
    // Size: 0x4
    // Offset: 0x48
    float minimumValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single maximumValue
    // Size: 0x4
    // Offset: 0x4C
    float maximumValue;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Single value
    // Size: 0x4
    // Offset: 0x50
    float value;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean boolValue
    // Size: 0x1
    // Offset: 0x54
    bool boolValue;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: boolValue and: texture
    char __padding10[0x3] = {};
    // public UnityEngine.Texture2D texture
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Texture2D* texture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // public System.String tooltip
    // Size: 0x8
    // Offset: 0x60
    ::StringW tooltip;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.String dependsOnFeature
    // Size: 0x8
    // Offset: 0x68
    ::StringW dependsOnFeature;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public System.Boolean dependsOnValue
    // Size: 0x1
    // Offset: 0x70
    bool dependsOnValue;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Get instance field reference: public Funly.SkyStudio.ProfileGroupDefinition/GroupType type
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::ProfileGroupDefinition::GroupType& dyn_type();
    // Get instance field reference: public Funly.SkyStudio.ProfileGroupDefinition/FormatStyle formatStyle
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle& dyn_formatStyle();
    // Get instance field reference: public Funly.SkyStudio.ProfileGroupDefinition/RebuildType rebuildType
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType& dyn_rebuildType();
    // Get instance field reference: public System.String propertyKey
    [[deprecated("Use field access instead!")]] ::StringW& dyn_propertyKey();
    // Get instance field reference: public System.String groupName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_groupName();
    // Get instance field reference: public UnityEngine.Color color
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn_color();
    // Get instance field reference: public Funly.SkyStudio.SpherePoint spherePoint
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::SpherePoint*& dyn_spherePoint();
    // Get instance field reference: public System.Single minimumValue
    [[deprecated("Use field access instead!")]] float& dyn_minimumValue();
    // Get instance field reference: public System.Single maximumValue
    [[deprecated("Use field access instead!")]] float& dyn_maximumValue();
    // Get instance field reference: public System.Single value
    [[deprecated("Use field access instead!")]] float& dyn_value();
    // Get instance field reference: public System.Boolean boolValue
    [[deprecated("Use field access instead!")]] bool& dyn_boolValue();
    // Get instance field reference: public UnityEngine.Texture2D texture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_texture();
    // Get instance field reference: public System.String tooltip
    [[deprecated("Use field access instead!")]] ::StringW& dyn_tooltip();
    // Get instance field reference: public System.String dependsOnFeature
    [[deprecated("Use field access instead!")]] ::StringW& dyn_dependsOnFeature();
    // Get instance field reference: public System.Boolean dependsOnValue
    [[deprecated("Use field access instead!")]] bool& dyn_dependsOnValue();
    // static public Funly.SkyStudio.ProfileGroupDefinition NumberGroupDefinition(System.String groupName, System.String propKey, System.Single minimumValue, System.Single maximumValue, System.Single value, System.String tooltip)
    // Offset: 0x1513D40
    static ::Funly::SkyStudio::ProfileGroupDefinition* NumberGroupDefinition(::StringW groupName, ::StringW propKey, float minimumValue, float maximumValue, float value, ::StringW tooltip);
    // static public Funly.SkyStudio.ProfileGroupDefinition NumberGroupDefinition(System.String groupName, System.String propKey, System.Single minimumValue, System.Single maximumValue, System.Single value, System.String dependsOnKeyword, System.Boolean dependsOnValue, System.String tooltip)
    // Offset: 0x1513D78
    static ::Funly::SkyStudio::ProfileGroupDefinition* NumberGroupDefinition(::StringW groupName, ::StringW propKey, float minimumValue, float maximumValue, float value, ::StringW dependsOnKeyword, bool dependsOnValue, ::StringW tooltip);
    // static public Funly.SkyStudio.ProfileGroupDefinition NumberGroupDefinition(System.String groupName, System.String propKey, System.Single minimumValue, System.Single maximumValue, System.Single value, Funly.SkyStudio.ProfileGroupDefinition/RebuildType rebuildType, System.String dependsOnKeyword, System.Boolean dependsOnValue, System.String tooltip)
    // Offset: 0x1513D5C
    static ::Funly::SkyStudio::ProfileGroupDefinition* NumberGroupDefinition(::StringW groupName, ::StringW propKey, float minimumValue, float maximumValue, float value, ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType rebuildType, ::StringW dependsOnKeyword, bool dependsOnValue, ::StringW tooltip);
    // static public Funly.SkyStudio.ProfileGroupDefinition NumberGroupDefinition(System.String groupName, System.String propKey, System.Single minimumValue, System.Single maximumValue, System.Single value, Funly.SkyStudio.ProfileGroupDefinition/RebuildType rebuildType, Funly.SkyStudio.ProfileGroupDefinition/FormatStyle formatStyle, System.String dependsOnKeyword, System.Boolean dependsOnValue, System.String tooltip)
    // Offset: 0x1513D98
    static ::Funly::SkyStudio::ProfileGroupDefinition* NumberGroupDefinition(::StringW groupName, ::StringW propKey, float minimumValue, float maximumValue, float value, ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType rebuildType, ::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle formatStyle, ::StringW dependsOnKeyword, bool dependsOnValue, ::StringW tooltip);
    // static public Funly.SkyStudio.ProfileGroupDefinition ColorGroupDefinition(System.String groupName, System.String propKey, UnityEngine.Color color, System.String tooltip)
    // Offset: 0x1513F3C
    static ::Funly::SkyStudio::ProfileGroupDefinition* ColorGroupDefinition(::StringW groupName, ::StringW propKey, ::UnityEngine::Color color, ::StringW tooltip);
    // static public Funly.SkyStudio.ProfileGroupDefinition ColorGroupDefinition(System.String groupName, System.String propKey, UnityEngine.Color color, Funly.SkyStudio.ProfileGroupDefinition/RebuildType rebuildType, System.String dependsOnKeyword, System.Boolean dependsOnValue, System.String tooltip)
    // Offset: 0x1513F54
    static ::Funly::SkyStudio::ProfileGroupDefinition* ColorGroupDefinition(::StringW groupName, ::StringW propKey, ::UnityEngine::Color color, ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType rebuildType, ::StringW dependsOnKeyword, bool dependsOnValue, ::StringW tooltip);
    // static public Funly.SkyStudio.ProfileGroupDefinition SpherePointGroupDefinition(System.String groupName, System.String propKey, System.Single horizontalRotation, System.Single verticalRotation, System.String tooltip)
    // Offset: 0x15140BC
    static ::Funly::SkyStudio::ProfileGroupDefinition* SpherePointGroupDefinition(::StringW groupName, ::StringW propKey, float horizontalRotation, float verticalRotation, ::StringW tooltip);
    // static public Funly.SkyStudio.ProfileGroupDefinition SpherePointGroupDefinition(System.String groupName, System.String propKey, System.Single horizontalRotation, System.Single verticalRotation, Funly.SkyStudio.ProfileGroupDefinition/RebuildType rebuildType, System.String dependsOnKeyword, System.Boolean dependsOnValue, System.String tooltip)
    // Offset: 0x15140D4
    static ::Funly::SkyStudio::ProfileGroupDefinition* SpherePointGroupDefinition(::StringW groupName, ::StringW propKey, float horizontalRotation, float verticalRotation, ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType rebuildType, ::StringW dependsOnKeyword, bool dependsOnValue, ::StringW tooltip);
    // static public Funly.SkyStudio.ProfileGroupDefinition TextureGroupDefinition(System.String groupName, System.String propKey, UnityEngine.Texture2D texture, System.String tooltip)
    // Offset: 0x1514244
    static ::Funly::SkyStudio::ProfileGroupDefinition* TextureGroupDefinition(::StringW groupName, ::StringW propKey, ::UnityEngine::Texture2D* texture, ::StringW tooltip);
    // static public Funly.SkyStudio.ProfileGroupDefinition TextureGroupDefinition(System.String groupName, System.String propKey, UnityEngine.Texture2D texture, Funly.SkyStudio.ProfileGroupDefinition/RebuildType rebuildType, System.String dependsOnKeyword, System.Boolean dependsOnValue, System.String tooltip)
    // Offset: 0x151425C
    static ::Funly::SkyStudio::ProfileGroupDefinition* TextureGroupDefinition(::StringW groupName, ::StringW propKey, ::UnityEngine::Texture2D* texture, ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType rebuildType, ::StringW dependsOnKeyword, bool dependsOnValue, ::StringW tooltip);
    // static public Funly.SkyStudio.ProfileGroupDefinition BoolGroupDefinition(System.String groupName, System.String propKey, System.Boolean value, System.String dependsOnKeyword, System.Boolean dependsOnValue, System.String tooltip)
    // Offset: 0x15143A4
    static ::Funly::SkyStudio::ProfileGroupDefinition* BoolGroupDefinition(::StringW groupName, ::StringW propKey, bool value, ::StringW dependsOnKeyword, bool dependsOnValue, ::StringW tooltip);
    // public System.Void .ctor()
    // Offset: 0x1513F20
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ProfileGroupDefinition* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::ProfileGroupDefinition::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ProfileGroupDefinition*, creationType>()));
    }
  }; // Funly.SkyStudio.ProfileGroupDefinition
  #pragma pack(pop)
  static check_size<sizeof(ProfileGroupDefinition), 112 + sizeof(bool)> __Funly_SkyStudio_ProfileGroupDefinitionSizeCheck;
  static_assert(sizeof(ProfileGroupDefinition) == 0x71);
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::ProfileGroupDefinition::RebuildType, "Funly.SkyStudio", "ProfileGroupDefinition/RebuildType");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle, "Funly.SkyStudio", "ProfileGroupDefinition/FormatStyle");
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::ProfileGroupDefinition::GroupType, "Funly.SkyStudio", "ProfileGroupDefinition/GroupType");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::NumberGroupDefinition
// Il2CppName: NumberGroupDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (*)(::StringW, ::StringW, float, float, float, ::StringW)>(&Funly::SkyStudio::ProfileGroupDefinition::NumberGroupDefinition)> {
  static const MethodInfo* get() {
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* minimumValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* maximumValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* tooltip = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ProfileGroupDefinition*), "NumberGroupDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupName, propKey, minimumValue, maximumValue, value, tooltip});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::NumberGroupDefinition
// Il2CppName: NumberGroupDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (*)(::StringW, ::StringW, float, float, float, ::StringW, bool, ::StringW)>(&Funly::SkyStudio::ProfileGroupDefinition::NumberGroupDefinition)> {
  static const MethodInfo* get() {
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* minimumValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* maximumValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* dependsOnKeyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dependsOnValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tooltip = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ProfileGroupDefinition*), "NumberGroupDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupName, propKey, minimumValue, maximumValue, value, dependsOnKeyword, dependsOnValue, tooltip});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::NumberGroupDefinition
// Il2CppName: NumberGroupDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (*)(::StringW, ::StringW, float, float, float, ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType, ::StringW, bool, ::StringW)>(&Funly::SkyStudio::ProfileGroupDefinition::NumberGroupDefinition)> {
  static const MethodInfo* get() {
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* minimumValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* maximumValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* rebuildType = &::il2cpp_utils::GetClassFromName("Funly.SkyStudio", "ProfileGroupDefinition/RebuildType")->byval_arg;
    static auto* dependsOnKeyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dependsOnValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tooltip = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ProfileGroupDefinition*), "NumberGroupDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupName, propKey, minimumValue, maximumValue, value, rebuildType, dependsOnKeyword, dependsOnValue, tooltip});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::NumberGroupDefinition
// Il2CppName: NumberGroupDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (*)(::StringW, ::StringW, float, float, float, ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType, ::Funly::SkyStudio::ProfileGroupDefinition::FormatStyle, ::StringW, bool, ::StringW)>(&Funly::SkyStudio::ProfileGroupDefinition::NumberGroupDefinition)> {
  static const MethodInfo* get() {
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* minimumValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* maximumValue = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* rebuildType = &::il2cpp_utils::GetClassFromName("Funly.SkyStudio", "ProfileGroupDefinition/RebuildType")->byval_arg;
    static auto* formatStyle = &::il2cpp_utils::GetClassFromName("Funly.SkyStudio", "ProfileGroupDefinition/FormatStyle")->byval_arg;
    static auto* dependsOnKeyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dependsOnValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tooltip = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ProfileGroupDefinition*), "NumberGroupDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupName, propKey, minimumValue, maximumValue, value, rebuildType, formatStyle, dependsOnKeyword, dependsOnValue, tooltip});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::ColorGroupDefinition
// Il2CppName: ColorGroupDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (*)(::StringW, ::StringW, ::UnityEngine::Color, ::StringW)>(&Funly::SkyStudio::ProfileGroupDefinition::ColorGroupDefinition)> {
  static const MethodInfo* get() {
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* tooltip = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ProfileGroupDefinition*), "ColorGroupDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupName, propKey, color, tooltip});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::ColorGroupDefinition
// Il2CppName: ColorGroupDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (*)(::StringW, ::StringW, ::UnityEngine::Color, ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType, ::StringW, bool, ::StringW)>(&Funly::SkyStudio::ProfileGroupDefinition::ColorGroupDefinition)> {
  static const MethodInfo* get() {
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    static auto* rebuildType = &::il2cpp_utils::GetClassFromName("Funly.SkyStudio", "ProfileGroupDefinition/RebuildType")->byval_arg;
    static auto* dependsOnKeyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dependsOnValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tooltip = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ProfileGroupDefinition*), "ColorGroupDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupName, propKey, color, rebuildType, dependsOnKeyword, dependsOnValue, tooltip});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::SpherePointGroupDefinition
// Il2CppName: SpherePointGroupDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (*)(::StringW, ::StringW, float, float, ::StringW)>(&Funly::SkyStudio::ProfileGroupDefinition::SpherePointGroupDefinition)> {
  static const MethodInfo* get() {
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* horizontalRotation = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* verticalRotation = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* tooltip = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ProfileGroupDefinition*), "SpherePointGroupDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupName, propKey, horizontalRotation, verticalRotation, tooltip});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::SpherePointGroupDefinition
// Il2CppName: SpherePointGroupDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (*)(::StringW, ::StringW, float, float, ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType, ::StringW, bool, ::StringW)>(&Funly::SkyStudio::ProfileGroupDefinition::SpherePointGroupDefinition)> {
  static const MethodInfo* get() {
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* horizontalRotation = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* verticalRotation = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* rebuildType = &::il2cpp_utils::GetClassFromName("Funly.SkyStudio", "ProfileGroupDefinition/RebuildType")->byval_arg;
    static auto* dependsOnKeyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dependsOnValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tooltip = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ProfileGroupDefinition*), "SpherePointGroupDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupName, propKey, horizontalRotation, verticalRotation, rebuildType, dependsOnKeyword, dependsOnValue, tooltip});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::TextureGroupDefinition
// Il2CppName: TextureGroupDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (*)(::StringW, ::StringW, ::UnityEngine::Texture2D*, ::StringW)>(&Funly::SkyStudio::ProfileGroupDefinition::TextureGroupDefinition)> {
  static const MethodInfo* get() {
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* tooltip = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ProfileGroupDefinition*), "TextureGroupDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupName, propKey, texture, tooltip});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::TextureGroupDefinition
// Il2CppName: TextureGroupDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (*)(::StringW, ::StringW, ::UnityEngine::Texture2D*, ::Funly::SkyStudio::ProfileGroupDefinition::RebuildType, ::StringW, bool, ::StringW)>(&Funly::SkyStudio::ProfileGroupDefinition::TextureGroupDefinition)> {
  static const MethodInfo* get() {
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    static auto* rebuildType = &::il2cpp_utils::GetClassFromName("Funly.SkyStudio", "ProfileGroupDefinition/RebuildType")->byval_arg;
    static auto* dependsOnKeyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dependsOnValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tooltip = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ProfileGroupDefinition*), "TextureGroupDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupName, propKey, texture, rebuildType, dependsOnKeyword, dependsOnValue, tooltip});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::BoolGroupDefinition
// Il2CppName: BoolGroupDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (*)(::StringW, ::StringW, bool, ::StringW, bool, ::StringW)>(&Funly::SkyStudio::ProfileGroupDefinition::BoolGroupDefinition)> {
  static const MethodInfo* get() {
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* dependsOnKeyword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* dependsOnValue = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* tooltip = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ProfileGroupDefinition*), "BoolGroupDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupName, propKey, value, dependsOnKeyword, dependsOnValue, tooltip});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ProfileGroupDefinition::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
