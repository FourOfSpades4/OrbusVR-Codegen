// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Funly.SkyStudio.KeyframeGroup`1
#include "Funly/SkyStudio/KeyframeGroup_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Funly::SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: TextureKeyframe
  class TextureKeyframe;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture
  class Texture;
}
// Completed forward declares
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: TextureKeyframeGroup
  class TextureKeyframeGroup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::TextureKeyframeGroup);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::TextureKeyframeGroup*, "Funly.SkyStudio", "TextureKeyframeGroup");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // WARNING Size may be invalid!
  // Autogenerated type: Funly.SkyStudio.TextureKeyframeGroup
  // [TokenAttribute] Offset: FFFFFFFF
  class TextureKeyframeGroup : public ::Funly::SkyStudio::KeyframeGroup_1<::Funly::SkyStudio::TextureKeyframe*> {
    public:
    // public System.Void .ctor(System.String name, Funly.SkyStudio.TextureKeyframe keyframe)
    // Offset: 0x151B080
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TextureKeyframeGroup* New_ctor(::StringW name, ::Funly::SkyStudio::TextureKeyframe* keyframe) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::TextureKeyframeGroup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TextureKeyframeGroup*, creationType>(name, keyframe)));
    }
    // public UnityEngine.Texture TextureForTime(System.Single time)
    // Offset: 0x15197E8
    ::UnityEngine::Texture* TextureForTime(float time);
  }; // Funly.SkyStudio.TextureKeyframeGroup
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::TextureKeyframeGroup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Funly::SkyStudio::TextureKeyframeGroup::TextureForTime
// Il2CppName: TextureForTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (Funly::SkyStudio::TextureKeyframeGroup::*)(float)>(&Funly::SkyStudio::TextureKeyframeGroup::TextureForTime)> {
  static const MethodInfo* get() {
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::TextureKeyframeGroup*), "TextureForTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{time});
  }
};
