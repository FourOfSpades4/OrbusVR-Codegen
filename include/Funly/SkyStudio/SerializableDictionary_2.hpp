// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: SerializableDictionary`2<K, V>
  template<typename K, typename V>
  class SerializableDictionary_2;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::Funly::SkyStudio::SerializableDictionary_2, "Funly.SkyStudio", "SerializableDictionary`2");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // WARNING Size may be invalid!
  // Autogenerated type: Funly.SkyStudio.SerializableDictionary`2
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: AD270C
  template<typename K, typename V>
  class SerializableDictionary_2 : public ::Il2CppObject/*, public ::UnityEngine::ISerializationCallbackReceiver*/ {
    public:
    public:
    // public System.Collections.Generic.Dictionary`2<K,V> dict
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::Dictionary_2<K, V>* dict;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<K, V>*) == 0x8);
    // public System.Collections.Generic.List`1<K> m_Keys
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<K>* m_Keys;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<K>*) == 0x8);
    // public System.Collections.Generic.List`1<V> m_Values
    // Size: 0x8
    // Offset: 0x0
    ::System::Collections::Generic::List_1<V>* m_Values;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<V>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::ISerializationCallbackReceiver
    operator ::UnityEngine::ISerializationCallbackReceiver() noexcept {
      return *reinterpret_cast<::UnityEngine::ISerializationCallbackReceiver*>(this);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Collections.Generic.Dictionary`2<K,V> dict
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<K, V>*& dyn_dict() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SerializableDictionary_2::dyn_dict");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dict"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<K, V>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Collections.Generic.List`1<K> m_Keys
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<K>*& dyn_m_Keys() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SerializableDictionary_2::dyn_m_Keys");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Keys"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<K>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // Autogenerated instance field getter
    // Get instance field: public System.Collections.Generic.List`1<V> m_Values
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<V>*& dyn_m_Values() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SerializableDictionary_2::dyn_m_Values");
      auto ___internal__instance = this;
      static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Values"))->offset;
      return *reinterpret_cast<::System::Collections::Generic::List_1<V>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
    }
    // public System.Void Clear()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Clear() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SerializableDictionary_2::Clear");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public V get_Item(K aKey)
    // Offset: 0xFFFFFFFFFFFFFFFF
    V get_Item(K aKey) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SerializableDictionary_2::get_Item");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey)})));
      return ::il2cpp_utils::RunMethodRethrow<V, false>(this, ___internal__method, aKey);
    }
    // public System.Void set_Item(K aKey, V value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_Item(K aKey, V value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SerializableDictionary_2::set_Item");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aKey), ::il2cpp_utils::ExtractType(value)})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aKey, value);
    }
    // public System.Void OnBeforeSerialize()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnBeforeSerialize() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SerializableDictionary_2::OnBeforeSerialize");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Funly::SkyStudio::SerializableDictionary_2<K, V>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void OnAfterDeserialize()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void OnAfterDeserialize() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SerializableDictionary_2::OnAfterDeserialize");
      auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::ResolveVtableSlot(this, classof(::Funly::SkyStudio::SerializableDictionary_2<K, V>*), -1)));
      ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SerializableDictionary_2<K, V>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SerializableDictionary_2::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SerializableDictionary_2<K, V>*, creationType>()));
    }
  }; // Funly.SkyStudio.SerializableDictionary`2
  // Could not write size check! Type: Funly.SkyStudio.SerializableDictionary`2 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
