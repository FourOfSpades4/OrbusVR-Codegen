// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Funly.SkyStudio.IProfileDefinition
#include "Funly/SkyStudio/IProfileDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Funly::SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: ProfileGroupSection
  class ProfileGroupSection;
  // Forward declaring type: ProfileFeatureSection
  class ProfileFeatureSection;
  // Forward declaring type: ProfileFeatureDefinition
  class ProfileFeatureDefinition;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Completed forward declares
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: BaseShaderDefinition
  class BaseShaderDefinition;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::BaseShaderDefinition);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::BaseShaderDefinition*, "Funly.SkyStudio", "BaseShaderDefinition");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Funly.SkyStudio.BaseShaderDefinition
  // [TokenAttribute] Offset: FFFFFFFF
  class BaseShaderDefinition : public ::Il2CppObject/*, public ::Funly::SkyStudio::IProfileDefinition*/ {
    public:
    public:
    // [CompilerGeneratedAttribute] Offset: 0xAE19E4
    // private System.String <shaderName>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::StringW shaderName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // private Funly.SkyStudio.ProfileGroupSection[] m_ProfileDefinitions
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> m_ProfileDefinitions;
    // Field size check
    static_assert(sizeof(::ArrayW<::Funly::SkyStudio::ProfileGroupSection*>) == 0x8);
    // private Funly.SkyStudio.ProfileFeatureSection[] m_ProfileFeatures
    // Size: 0x8
    // Offset: 0x20
    ::ArrayW<::Funly::SkyStudio::ProfileFeatureSection*> m_ProfileFeatures;
    // Field size check
    static_assert(sizeof(::ArrayW<::Funly::SkyStudio::ProfileFeatureSection*>) == 0x8);
    // private System.Collections.Generic.Dictionary`2<System.String,Funly.SkyStudio.ProfileFeatureDefinition> m_KeyToFeature
    // Size: 0x8
    // Offset: 0x28
    ::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::ProfileFeatureDefinition*>* m_KeyToFeature;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::ProfileFeatureDefinition*>*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::Funly::SkyStudio::IProfileDefinition
    operator ::Funly::SkyStudio::IProfileDefinition() noexcept {
      return *reinterpret_cast<::Funly::SkyStudio::IProfileDefinition*>(this);
    }
    // Get instance field reference: private System.String <shaderName>k__BackingField
    [[deprecated("Use field access instead!")]] ::StringW& dyn_$shaderName$k__BackingField();
    // Get instance field reference: private Funly.SkyStudio.ProfileGroupSection[] m_ProfileDefinitions
    [[deprecated("Use field access instead!")]] ::ArrayW<::Funly::SkyStudio::ProfileGroupSection*>& dyn_m_ProfileDefinitions();
    // Get instance field reference: private Funly.SkyStudio.ProfileFeatureSection[] m_ProfileFeatures
    [[deprecated("Use field access instead!")]] ::ArrayW<::Funly::SkyStudio::ProfileFeatureSection*>& dyn_m_ProfileFeatures();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,Funly.SkyStudio.ProfileFeatureDefinition> m_KeyToFeature
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::ProfileFeatureDefinition*>*& dyn_m_KeyToFeature();
    // public System.String get_shaderName()
    // Offset: 0x150CF5C
    ::StringW get_shaderName();
    // protected System.Void set_shaderName(System.String value)
    // Offset: 0x150CF64
    void set_shaderName(::StringW value);
    // public Funly.SkyStudio.ProfileGroupSection[] get_groups()
    // Offset: 0x150CF6C
    ::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> get_groups();
    // public Funly.SkyStudio.ProfileFeatureSection[] get_features()
    // Offset: 0x150CFA4
    ::ArrayW<::Funly::SkyStudio::ProfileFeatureSection*> get_features();
    // public Funly.SkyStudio.ProfileFeatureDefinition GetFeatureDefinition(System.String featureKey)
    // Offset: 0x150CFDC
    ::Funly::SkyStudio::ProfileFeatureDefinition* GetFeatureDefinition(::StringW featureKey);
    // protected Funly.SkyStudio.ProfileFeatureSection[] ProfileFeatureSection()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<::Funly::SkyStudio::ProfileFeatureSection*> ProfileFeatureSection();
    // protected Funly.SkyStudio.ProfileGroupSection[] ProfileDefinitionTable()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> ProfileDefinitionTable();
    // protected System.Void .ctor()
    // Offset: 0x150D1CC
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static BaseShaderDefinition* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::BaseShaderDefinition::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<BaseShaderDefinition*, creationType>()));
    }
  }; // Funly.SkyStudio.BaseShaderDefinition
  #pragma pack(pop)
  static check_size<sizeof(BaseShaderDefinition), 40 + sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::ProfileFeatureDefinition*>*)> __Funly_SkyStudio_BaseShaderDefinitionSizeCheck;
  static_assert(sizeof(BaseShaderDefinition) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::BaseShaderDefinition::get_shaderName
// Il2CppName: get_shaderName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Funly::SkyStudio::BaseShaderDefinition::*)()>(&Funly::SkyStudio::BaseShaderDefinition::get_shaderName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::BaseShaderDefinition*), "get_shaderName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::BaseShaderDefinition::set_shaderName
// Il2CppName: set_shaderName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::BaseShaderDefinition::*)(::StringW)>(&Funly::SkyStudio::BaseShaderDefinition::set_shaderName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::BaseShaderDefinition*), "set_shaderName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::BaseShaderDefinition::get_groups
// Il2CppName: get_groups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> (Funly::SkyStudio::BaseShaderDefinition::*)()>(&Funly::SkyStudio::BaseShaderDefinition::get_groups)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::BaseShaderDefinition*), "get_groups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::BaseShaderDefinition::get_features
// Il2CppName: get_features
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Funly::SkyStudio::ProfileFeatureSection*> (Funly::SkyStudio::BaseShaderDefinition::*)()>(&Funly::SkyStudio::BaseShaderDefinition::get_features)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::BaseShaderDefinition*), "get_features", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::BaseShaderDefinition::GetFeatureDefinition
// Il2CppName: GetFeatureDefinition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileFeatureDefinition* (Funly::SkyStudio::BaseShaderDefinition::*)(::StringW)>(&Funly::SkyStudio::BaseShaderDefinition::GetFeatureDefinition)> {
  static const MethodInfo* get() {
    static auto* featureKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::BaseShaderDefinition*), "GetFeatureDefinition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{featureKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::BaseShaderDefinition::ProfileFeatureSection
// Il2CppName: ProfileFeatureSection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Funly::SkyStudio::ProfileFeatureSection*> (Funly::SkyStudio::BaseShaderDefinition::*)()>(&Funly::SkyStudio::BaseShaderDefinition::ProfileFeatureSection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::BaseShaderDefinition*), "ProfileFeatureSection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::BaseShaderDefinition::ProfileDefinitionTable
// Il2CppName: ProfileDefinitionTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> (Funly::SkyStudio::BaseShaderDefinition::*)()>(&Funly::SkyStudio::BaseShaderDefinition::ProfileDefinitionTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::BaseShaderDefinition*), "ProfileDefinitionTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::BaseShaderDefinition::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
