// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Cubemap
  class Cubemap;
  // Forward declaring type: Texture
  class Texture;
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Vector2
  struct Vector2;
}
// Completed forward declares
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: SkyMaterialController
  class SkyMaterialController;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::SkyMaterialController);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::SkyMaterialController*, "Funly.SkyStudio", "SkyMaterialController");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Size: 0x270
  #pragma pack(push, 1)
  // Autogenerated type: Funly.SkyStudio.SkyMaterialController
  // [TokenAttribute] Offset: FFFFFFFF
  class SkyMaterialController : public ::Il2CppObject {
    public:
    public:
    // private UnityEngine.Material _skyboxMaterial
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Material* skyboxMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private UnityEngine.Color _skyColor
    // Size: 0x10
    // Offset: 0x18
    ::UnityEngine::Color skyColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color _skyMiddleColor
    // Size: 0x10
    // Offset: 0x28
    ::UnityEngine::Color skyMiddleColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color _horizonColor
    // Size: 0x10
    // Offset: 0x38
    ::UnityEngine::Color horizonColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // [RangeAttribute] Offset: 0xAE1A74
    // private System.Single _gradientFadeBegin
    // Size: 0x4
    // Offset: 0x48
    float gradientFadeBegin;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1AB4
    // private System.Single _gradientFadeLength
    // Size: 0x4
    // Offset: 0x4C
    float gradientFadeLength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1AF4
    // private System.Single _skyMiddlePosition
    // Size: 0x4
    // Offset: 0x50
    float skyMiddlePosition;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: skyMiddlePosition and: backgroundCubemap
    char __padding6[0x4] = {};
    // private UnityEngine.Cubemap _backgroundCubemap
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Cubemap* backgroundCubemap;
    // Field size check
    static_assert(sizeof(::UnityEngine::Cubemap*) == 0x8);
    // [RangeAttribute] Offset: 0xAE1B44
    // private System.Single _starFadeBegin
    // Size: 0x4
    // Offset: 0x60
    float starFadeBegin;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1B84
    // private System.Single _starFadeLength
    // Size: 0x4
    // Offset: 0x64
    float starFadeLength;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1BC4
    // private System.Single _horizonDistanceScale
    // Size: 0x4
    // Offset: 0x68
    float horizonDistanceScale;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: horizonDistanceScale and: starLayer1Texture
    char __padding10[0x4] = {};
    // private UnityEngine.Texture _starLayer1Texture
    // Size: 0x8
    // Offset: 0x70
    ::UnityEngine::Texture* starLayer1Texture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture*) == 0x8);
    // private UnityEngine.Texture2D _starLayer1DataTexture
    // Size: 0x8
    // Offset: 0x78
    ::UnityEngine::Texture2D* starLayer1DataTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private UnityEngine.Color _starLayer1Color
    // Size: 0x10
    // Offset: 0x80
    ::UnityEngine::Color starLayer1Color;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // [RangeAttribute] Offset: 0xAE1C34
    // private System.Single _starLayer1MaxRadius
    // Size: 0x4
    // Offset: 0x90
    float starLayer1MaxRadius;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1C78
    // private System.Single _starLayer1TwinkleAmount
    // Size: 0x4
    // Offset: 0x94
    float starLayer1TwinkleAmount;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1CB8
    // private System.Single _starLayer1TwinkleSpeed
    // Size: 0x4
    // Offset: 0x98
    float starLayer1TwinkleSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1CF8
    // private System.Single _starLayer1RotationSpeed
    // Size: 0x4
    // Offset: 0x9C
    float starLayer1RotationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1D38
    // private System.Single _starLayer1EdgeFeathering
    // Size: 0x4
    // Offset: 0xA0
    float starLayer1EdgeFeathering;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1D80
    // private System.Single _starLayer1BloomFilterBoost
    // Size: 0x4
    // Offset: 0xA4
    float starLayer1BloomFilterBoost;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector4 _starLayer1SpriteDimensions
    // Size: 0x10
    // Offset: 0xA8
    ::UnityEngine::Vector4 starLayer1SpriteDimensions;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector4) == 0x10);
    // private System.Int32 _starLayer1SpriteItemCount
    // Size: 0x4
    // Offset: 0xB8
    int starLayer1SpriteItemCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RangeAttribute] Offset: 0xAE1DE0
    // private System.Single _starLayer1SpriteAnimationSpeed
    // Size: 0x4
    // Offset: 0xBC
    float starLayer1SpriteAnimationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Texture _starLayer2Texture
    // Size: 0x8
    // Offset: 0xC0
    ::UnityEngine::Texture* starLayer2Texture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture*) == 0x8);
    // private UnityEngine.Texture2D _starLayer2DataTexture
    // Size: 0x8
    // Offset: 0xC8
    ::UnityEngine::Texture2D* starLayer2DataTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private UnityEngine.Color _starLayer2Color
    // Size: 0x10
    // Offset: 0xD0
    ::UnityEngine::Color starLayer2Color;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // [RangeAttribute] Offset: 0xAE1E50
    // private System.Single _starLayer2MaxRadius
    // Size: 0x4
    // Offset: 0xE0
    float starLayer2MaxRadius;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1E94
    // private System.Single _starLayer2TwinkleAmount
    // Size: 0x4
    // Offset: 0xE4
    float starLayer2TwinkleAmount;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1ED4
    // private System.Single _starLayer2TwinkleSpeed
    // Size: 0x4
    // Offset: 0xE8
    float starLayer2TwinkleSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1F14
    // private System.Single _starLayer2RotationSpeed
    // Size: 0x4
    // Offset: 0xEC
    float starLayer2RotationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1F54
    // private System.Single _starLayer2EdgeFeathering
    // Size: 0x4
    // Offset: 0xF0
    float starLayer2EdgeFeathering;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE1F9C
    // private System.Single _starLayer2BloomFilterBoost
    // Size: 0x4
    // Offset: 0xF4
    float starLayer2BloomFilterBoost;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector4 _starLayer2SpriteDimensions
    // Size: 0x10
    // Offset: 0xF8
    ::UnityEngine::Vector4 starLayer2SpriteDimensions;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector4) == 0x10);
    // private System.Int32 _starLayer2SpriteItemCount
    // Size: 0x4
    // Offset: 0x108
    int starLayer2SpriteItemCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RangeAttribute] Offset: 0xAE1FFC
    // private System.Single _starLayer2SpriteAnimationSpeed
    // Size: 0x4
    // Offset: 0x10C
    float starLayer2SpriteAnimationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Texture _starLayer3Texture
    // Size: 0x8
    // Offset: 0x110
    ::UnityEngine::Texture* starLayer3Texture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture*) == 0x8);
    // private UnityEngine.Texture2D _starLayer3DataTexture
    // Size: 0x8
    // Offset: 0x118
    ::UnityEngine::Texture2D* starLayer3DataTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private UnityEngine.Color _starLayer3Color
    // Size: 0x10
    // Offset: 0x120
    ::UnityEngine::Color starLayer3Color;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // [RangeAttribute] Offset: 0xAE206C
    // private System.Single _starLayer3MaxRadius
    // Size: 0x4
    // Offset: 0x130
    float starLayer3MaxRadius;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE20B0
    // private System.Single _starLayer3TwinkleAmount
    // Size: 0x4
    // Offset: 0x134
    float starLayer3TwinkleAmount;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE20F0
    // private System.Single _starLayer3TwinkleSpeed
    // Size: 0x4
    // Offset: 0x138
    float starLayer3TwinkleSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE2130
    // private System.Single _starLayer3RotationSpeed
    // Size: 0x4
    // Offset: 0x13C
    float starLayer3RotationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE2170
    // private System.Single _starLayer3EdgeFeathering
    // Size: 0x4
    // Offset: 0x140
    float starLayer3EdgeFeathering;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE21B8
    // private System.Single _starLayer3BloomFilterBoost
    // Size: 0x4
    // Offset: 0x144
    float starLayer3BloomFilterBoost;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector4 _starLayer3SpriteDimensions
    // Size: 0x10
    // Offset: 0x148
    ::UnityEngine::Vector4 starLayer3SpriteDimensions;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector4) == 0x10);
    // private System.Int32 _starLayer3SpriteItemCount
    // Size: 0x4
    // Offset: 0x158
    int starLayer3SpriteItemCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RangeAttribute] Offset: 0xAE2218
    // private System.Single _starLayer3SpriteAnimationSpeed
    // Size: 0x4
    // Offset: 0x15C
    float starLayer3SpriteAnimationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Texture _moonTexture
    // Size: 0x8
    // Offset: 0x160
    ::UnityEngine::Texture* moonTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture*) == 0x8);
    // private System.Single _moonRotationSpeed
    // Size: 0x4
    // Offset: 0x168
    float moonRotationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color _moonColor
    // Size: 0x10
    // Offset: 0x16C
    ::UnityEngine::Color moonColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Vector3 _moonDirection
    // Size: 0xC
    // Offset: 0x17C
    ::UnityEngine::Vector3 moonDirection;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // [RangeAttribute] Offset: 0xAE2298
    // private System.Single _moonSize
    // Size: 0x4
    // Offset: 0x188
    float moonSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE22D8
    // private System.Single _moonEdgeFeathering
    // Size: 0x4
    // Offset: 0x18C
    float moonEdgeFeathering;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE2320
    // private System.Single _moonBloomFilterBoost
    // Size: 0x4
    // Offset: 0x190
    float moonBloomFilterBoost;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector4 _moonSpriteDimensions
    // Size: 0x10
    // Offset: 0x194
    ::UnityEngine::Vector4 moonSpriteDimensions;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector4) == 0x10);
    // private System.Int32 _moonSpriteItemCount
    // Size: 0x4
    // Offset: 0x1A4
    int moonSpriteItemCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RangeAttribute] Offset: 0xAE2380
    // private System.Single _moonSpriteAnimationSpeed
    // Size: 0x4
    // Offset: 0x1A8
    float moonSpriteAnimationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // Padding between fields: moonSpriteAnimationSpeed and: sunTexture
    char __padding56[0x4] = {};
    // private UnityEngine.Texture _sunTexture
    // Size: 0x8
    // Offset: 0x1B0
    ::UnityEngine::Texture* sunTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture*) == 0x8);
    // private UnityEngine.Color _sunColor
    // Size: 0x10
    // Offset: 0x1B8
    ::UnityEngine::Color sunColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Single _sunRotationSpeed
    // Size: 0x4
    // Offset: 0x1C8
    float sunRotationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector3 _sunDirection
    // Size: 0xC
    // Offset: 0x1CC
    ::UnityEngine::Vector3 sunDirection;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    // [RangeAttribute] Offset: 0xAE2400
    // private System.Single _sunSize
    // Size: 0x4
    // Offset: 0x1D8
    float sunSize;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE2440
    // private System.Single _sunEdgeFeathering
    // Size: 0x4
    // Offset: 0x1DC
    float sunEdgeFeathering;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE2488
    // private System.Single _sunBloomFilterBoost
    // Size: 0x4
    // Offset: 0x1E0
    float sunBloomFilterBoost;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Vector4 _sunSpriteDimensions
    // Size: 0x10
    // Offset: 0x1E4
    ::UnityEngine::Vector4 sunSpriteDimensions;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector4) == 0x10);
    // private System.Int32 _sunSpriteItemCount
    // Size: 0x4
    // Offset: 0x1F4
    int sunSpriteItemCount;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // [RangeAttribute] Offset: 0xAE24E8
    // private System.Single _sunSpriteAnimationSpeed
    // Size: 0x4
    // Offset: 0x1F8
    float sunSpriteAnimationSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // [RangeAttribute] Offset: 0xAE2528
    // private System.Single _cloudBegin
    // Size: 0x4
    // Offset: 0x1FC
    float cloudBegin;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _cloudTextureTiling
    // Size: 0x4
    // Offset: 0x200
    float cloudTextureTiling;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color _cloudColor
    // Size: 0x10
    // Offset: 0x204
    ::UnityEngine::Color cloudColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // Padding between fields: cloudColor and: cloudTexture
    char __padding69[0x4] = {};
    // private UnityEngine.Texture _cloudTexture
    // Size: 0x8
    // Offset: 0x218
    ::UnityEngine::Texture* cloudTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture*) == 0x8);
    // private System.Single _cloudDensity
    // Size: 0x4
    // Offset: 0x220
    float cloudDensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _cloudSpeed
    // Size: 0x4
    // Offset: 0x224
    float cloudSpeed;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _cloudDirection
    // Size: 0x4
    // Offset: 0x228
    float cloudDirection;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _cloudHeight
    // Size: 0x4
    // Offset: 0x22C
    float cloudHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color _cloudColor1
    // Size: 0x10
    // Offset: 0x230
    ::UnityEngine::Color cloudColor1;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private UnityEngine.Color _cloudColor2
    // Size: 0x10
    // Offset: 0x240
    ::UnityEngine::Color cloudColor2;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Single _cloudFadePosition
    // Size: 0x4
    // Offset: 0x250
    float cloudFadePosition;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _cloudFadeAmount
    // Size: 0x4
    // Offset: 0x254
    float cloudFadeAmount;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private UnityEngine.Color _fogColor
    // Size: 0x10
    // Offset: 0x258
    ::UnityEngine::Color fogColor;
    // Field size check
    static_assert(sizeof(::UnityEngine::Color) == 0x10);
    // private System.Single _fogDensity
    // Size: 0x4
    // Offset: 0x268
    float fogDensity;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _fogHeight
    // Size: 0x4
    // Offset: 0x26C
    float fogHeight;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private UnityEngine.Material _skyboxMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn__skyboxMaterial();
    // Get instance field reference: private UnityEngine.Color _skyColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__skyColor();
    // Get instance field reference: private UnityEngine.Color _skyMiddleColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__skyMiddleColor();
    // Get instance field reference: private UnityEngine.Color _horizonColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__horizonColor();
    // Get instance field reference: private System.Single _gradientFadeBegin
    [[deprecated("Use field access instead!")]] float& dyn__gradientFadeBegin();
    // Get instance field reference: private System.Single _gradientFadeLength
    [[deprecated("Use field access instead!")]] float& dyn__gradientFadeLength();
    // Get instance field reference: private System.Single _skyMiddlePosition
    [[deprecated("Use field access instead!")]] float& dyn__skyMiddlePosition();
    // Get instance field reference: private UnityEngine.Cubemap _backgroundCubemap
    [[deprecated("Use field access instead!")]] ::UnityEngine::Cubemap*& dyn__backgroundCubemap();
    // Get instance field reference: private System.Single _starFadeBegin
    [[deprecated("Use field access instead!")]] float& dyn__starFadeBegin();
    // Get instance field reference: private System.Single _starFadeLength
    [[deprecated("Use field access instead!")]] float& dyn__starFadeLength();
    // Get instance field reference: private System.Single _horizonDistanceScale
    [[deprecated("Use field access instead!")]] float& dyn__horizonDistanceScale();
    // Get instance field reference: private UnityEngine.Texture _starLayer1Texture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& dyn__starLayer1Texture();
    // Get instance field reference: private UnityEngine.Texture2D _starLayer1DataTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn__starLayer1DataTexture();
    // Get instance field reference: private UnityEngine.Color _starLayer1Color
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__starLayer1Color();
    // Get instance field reference: private System.Single _starLayer1MaxRadius
    [[deprecated("Use field access instead!")]] float& dyn__starLayer1MaxRadius();
    // Get instance field reference: private System.Single _starLayer1TwinkleAmount
    [[deprecated("Use field access instead!")]] float& dyn__starLayer1TwinkleAmount();
    // Get instance field reference: private System.Single _starLayer1TwinkleSpeed
    [[deprecated("Use field access instead!")]] float& dyn__starLayer1TwinkleSpeed();
    // Get instance field reference: private System.Single _starLayer1RotationSpeed
    [[deprecated("Use field access instead!")]] float& dyn__starLayer1RotationSpeed();
    // Get instance field reference: private System.Single _starLayer1EdgeFeathering
    [[deprecated("Use field access instead!")]] float& dyn__starLayer1EdgeFeathering();
    // Get instance field reference: private System.Single _starLayer1BloomFilterBoost
    [[deprecated("Use field access instead!")]] float& dyn__starLayer1BloomFilterBoost();
    // Get instance field reference: private UnityEngine.Vector4 _starLayer1SpriteDimensions
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& dyn__starLayer1SpriteDimensions();
    // Get instance field reference: private System.Int32 _starLayer1SpriteItemCount
    [[deprecated("Use field access instead!")]] int& dyn__starLayer1SpriteItemCount();
    // Get instance field reference: private System.Single _starLayer1SpriteAnimationSpeed
    [[deprecated("Use field access instead!")]] float& dyn__starLayer1SpriteAnimationSpeed();
    // Get instance field reference: private UnityEngine.Texture _starLayer2Texture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& dyn__starLayer2Texture();
    // Get instance field reference: private UnityEngine.Texture2D _starLayer2DataTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn__starLayer2DataTexture();
    // Get instance field reference: private UnityEngine.Color _starLayer2Color
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__starLayer2Color();
    // Get instance field reference: private System.Single _starLayer2MaxRadius
    [[deprecated("Use field access instead!")]] float& dyn__starLayer2MaxRadius();
    // Get instance field reference: private System.Single _starLayer2TwinkleAmount
    [[deprecated("Use field access instead!")]] float& dyn__starLayer2TwinkleAmount();
    // Get instance field reference: private System.Single _starLayer2TwinkleSpeed
    [[deprecated("Use field access instead!")]] float& dyn__starLayer2TwinkleSpeed();
    // Get instance field reference: private System.Single _starLayer2RotationSpeed
    [[deprecated("Use field access instead!")]] float& dyn__starLayer2RotationSpeed();
    // Get instance field reference: private System.Single _starLayer2EdgeFeathering
    [[deprecated("Use field access instead!")]] float& dyn__starLayer2EdgeFeathering();
    // Get instance field reference: private System.Single _starLayer2BloomFilterBoost
    [[deprecated("Use field access instead!")]] float& dyn__starLayer2BloomFilterBoost();
    // Get instance field reference: private UnityEngine.Vector4 _starLayer2SpriteDimensions
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& dyn__starLayer2SpriteDimensions();
    // Get instance field reference: private System.Int32 _starLayer2SpriteItemCount
    [[deprecated("Use field access instead!")]] int& dyn__starLayer2SpriteItemCount();
    // Get instance field reference: private System.Single _starLayer2SpriteAnimationSpeed
    [[deprecated("Use field access instead!")]] float& dyn__starLayer2SpriteAnimationSpeed();
    // Get instance field reference: private UnityEngine.Texture _starLayer3Texture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& dyn__starLayer3Texture();
    // Get instance field reference: private UnityEngine.Texture2D _starLayer3DataTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn__starLayer3DataTexture();
    // Get instance field reference: private UnityEngine.Color _starLayer3Color
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__starLayer3Color();
    // Get instance field reference: private System.Single _starLayer3MaxRadius
    [[deprecated("Use field access instead!")]] float& dyn__starLayer3MaxRadius();
    // Get instance field reference: private System.Single _starLayer3TwinkleAmount
    [[deprecated("Use field access instead!")]] float& dyn__starLayer3TwinkleAmount();
    // Get instance field reference: private System.Single _starLayer3TwinkleSpeed
    [[deprecated("Use field access instead!")]] float& dyn__starLayer3TwinkleSpeed();
    // Get instance field reference: private System.Single _starLayer3RotationSpeed
    [[deprecated("Use field access instead!")]] float& dyn__starLayer3RotationSpeed();
    // Get instance field reference: private System.Single _starLayer3EdgeFeathering
    [[deprecated("Use field access instead!")]] float& dyn__starLayer3EdgeFeathering();
    // Get instance field reference: private System.Single _starLayer3BloomFilterBoost
    [[deprecated("Use field access instead!")]] float& dyn__starLayer3BloomFilterBoost();
    // Get instance field reference: private UnityEngine.Vector4 _starLayer3SpriteDimensions
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& dyn__starLayer3SpriteDimensions();
    // Get instance field reference: private System.Int32 _starLayer3SpriteItemCount
    [[deprecated("Use field access instead!")]] int& dyn__starLayer3SpriteItemCount();
    // Get instance field reference: private System.Single _starLayer3SpriteAnimationSpeed
    [[deprecated("Use field access instead!")]] float& dyn__starLayer3SpriteAnimationSpeed();
    // Get instance field reference: private UnityEngine.Texture _moonTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& dyn__moonTexture();
    // Get instance field reference: private System.Single _moonRotationSpeed
    [[deprecated("Use field access instead!")]] float& dyn__moonRotationSpeed();
    // Get instance field reference: private UnityEngine.Color _moonColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__moonColor();
    // Get instance field reference: private UnityEngine.Vector3 _moonDirection
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn__moonDirection();
    // Get instance field reference: private System.Single _moonSize
    [[deprecated("Use field access instead!")]] float& dyn__moonSize();
    // Get instance field reference: private System.Single _moonEdgeFeathering
    [[deprecated("Use field access instead!")]] float& dyn__moonEdgeFeathering();
    // Get instance field reference: private System.Single _moonBloomFilterBoost
    [[deprecated("Use field access instead!")]] float& dyn__moonBloomFilterBoost();
    // Get instance field reference: private UnityEngine.Vector4 _moonSpriteDimensions
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& dyn__moonSpriteDimensions();
    // Get instance field reference: private System.Int32 _moonSpriteItemCount
    [[deprecated("Use field access instead!")]] int& dyn__moonSpriteItemCount();
    // Get instance field reference: private System.Single _moonSpriteAnimationSpeed
    [[deprecated("Use field access instead!")]] float& dyn__moonSpriteAnimationSpeed();
    // Get instance field reference: private UnityEngine.Texture _sunTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& dyn__sunTexture();
    // Get instance field reference: private UnityEngine.Color _sunColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__sunColor();
    // Get instance field reference: private System.Single _sunRotationSpeed
    [[deprecated("Use field access instead!")]] float& dyn__sunRotationSpeed();
    // Get instance field reference: private UnityEngine.Vector3 _sunDirection
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn__sunDirection();
    // Get instance field reference: private System.Single _sunSize
    [[deprecated("Use field access instead!")]] float& dyn__sunSize();
    // Get instance field reference: private System.Single _sunEdgeFeathering
    [[deprecated("Use field access instead!")]] float& dyn__sunEdgeFeathering();
    // Get instance field reference: private System.Single _sunBloomFilterBoost
    [[deprecated("Use field access instead!")]] float& dyn__sunBloomFilterBoost();
    // Get instance field reference: private UnityEngine.Vector4 _sunSpriteDimensions
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector4& dyn__sunSpriteDimensions();
    // Get instance field reference: private System.Int32 _sunSpriteItemCount
    [[deprecated("Use field access instead!")]] int& dyn__sunSpriteItemCount();
    // Get instance field reference: private System.Single _sunSpriteAnimationSpeed
    [[deprecated("Use field access instead!")]] float& dyn__sunSpriteAnimationSpeed();
    // Get instance field reference: private System.Single _cloudBegin
    [[deprecated("Use field access instead!")]] float& dyn__cloudBegin();
    // Get instance field reference: private System.Single _cloudTextureTiling
    [[deprecated("Use field access instead!")]] float& dyn__cloudTextureTiling();
    // Get instance field reference: private UnityEngine.Color _cloudColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__cloudColor();
    // Get instance field reference: private UnityEngine.Texture _cloudTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture*& dyn__cloudTexture();
    // Get instance field reference: private System.Single _cloudDensity
    [[deprecated("Use field access instead!")]] float& dyn__cloudDensity();
    // Get instance field reference: private System.Single _cloudSpeed
    [[deprecated("Use field access instead!")]] float& dyn__cloudSpeed();
    // Get instance field reference: private System.Single _cloudDirection
    [[deprecated("Use field access instead!")]] float& dyn__cloudDirection();
    // Get instance field reference: private System.Single _cloudHeight
    [[deprecated("Use field access instead!")]] float& dyn__cloudHeight();
    // Get instance field reference: private UnityEngine.Color _cloudColor1
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__cloudColor1();
    // Get instance field reference: private UnityEngine.Color _cloudColor2
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__cloudColor2();
    // Get instance field reference: private System.Single _cloudFadePosition
    [[deprecated("Use field access instead!")]] float& dyn__cloudFadePosition();
    // Get instance field reference: private System.Single _cloudFadeAmount
    [[deprecated("Use field access instead!")]] float& dyn__cloudFadeAmount();
    // Get instance field reference: private UnityEngine.Color _fogColor
    [[deprecated("Use field access instead!")]] ::UnityEngine::Color& dyn__fogColor();
    // Get instance field reference: private System.Single _fogDensity
    [[deprecated("Use field access instead!")]] float& dyn__fogDensity();
    // Get instance field reference: private System.Single _fogHeight
    [[deprecated("Use field access instead!")]] float& dyn__fogHeight();
    // public UnityEngine.Material get_SkyboxMaterial()
    // Offset: 0x151624C
    ::UnityEngine::Material* get_SkyboxMaterial();
    // public System.Void set_SkyboxMaterial(UnityEngine.Material value)
    // Offset: 0x1516254
    void set_SkyboxMaterial(::UnityEngine::Material* value);
    // public UnityEngine.Color get_SkyColor()
    // Offset: 0x151625C
    ::UnityEngine::Color get_SkyColor();
    // public System.Void set_SkyColor(UnityEngine.Color value)
    // Offset: 0x1516268
    void set_SkyColor(::UnityEngine::Color value);
    // public UnityEngine.Color get_SkyMiddleColor()
    // Offset: 0x1516304
    ::UnityEngine::Color get_SkyMiddleColor();
    // public System.Void set_SkyMiddleColor(UnityEngine.Color value)
    // Offset: 0x1516310
    void set_SkyMiddleColor(::UnityEngine::Color value);
    // public UnityEngine.Color get_HorizonColor()
    // Offset: 0x15163AC
    ::UnityEngine::Color get_HorizonColor();
    // public System.Void set_HorizonColor(UnityEngine.Color value)
    // Offset: 0x15163B8
    void set_HorizonColor(::UnityEngine::Color value);
    // public System.Single get_GradientFadeBegin()
    // Offset: 0x1516454
    float get_GradientFadeBegin();
    // public System.Void set_GradientFadeBegin(System.Single value)
    // Offset: 0x151645C
    void set_GradientFadeBegin(float value);
    // public System.Single get_GradientFadeLength()
    // Offset: 0x1516540
    float get_GradientFadeLength();
    // public System.Void set_GradientFadeLength(System.Single value)
    // Offset: 0x1516548
    void set_GradientFadeLength(float value);
    // public System.Single get_SkyMiddlePosition()
    // Offset: 0x1516550
    float get_SkyMiddlePosition();
    // public System.Void set_SkyMiddlePosition(System.Single value)
    // Offset: 0x1516558
    void set_SkyMiddlePosition(float value);
    // public UnityEngine.Cubemap get_BackgroundCubemap()
    // Offset: 0x15165D0
    ::UnityEngine::Cubemap* get_BackgroundCubemap();
    // public System.Void set_BackgroundCubemap(UnityEngine.Cubemap value)
    // Offset: 0x15165D8
    void set_BackgroundCubemap(::UnityEngine::Cubemap* value);
    // public System.Single get_StarFadeBegin()
    // Offset: 0x1516650
    float get_StarFadeBegin();
    // public System.Void set_StarFadeBegin(System.Single value)
    // Offset: 0x1516658
    void set_StarFadeBegin(float value);
    // public System.Single get_StarFadeLength()
    // Offset: 0x151673C
    float get_StarFadeLength();
    // public System.Void set_StarFadeLength(System.Single value)
    // Offset: 0x1516744
    void set_StarFadeLength(float value);
    // public System.Single get_HorizonDistanceScale()
    // Offset: 0x151674C
    float get_HorizonDistanceScale();
    // public System.Void set_HorizonDistanceScale(System.Single value)
    // Offset: 0x1516754
    void set_HorizonDistanceScale(float value);
    // public UnityEngine.Texture get_StarLayer1Texture()
    // Offset: 0x15167CC
    ::UnityEngine::Texture* get_StarLayer1Texture();
    // public System.Void set_StarLayer1Texture(UnityEngine.Texture value)
    // Offset: 0x15167D4
    void set_StarLayer1Texture(::UnityEngine::Texture* value);
    // public UnityEngine.Texture2D get_StarLayer1DataTexture()
    // Offset: 0x151684C
    ::UnityEngine::Texture2D* get_StarLayer1DataTexture();
    // public System.Void set_StarLayer1DataTexture(UnityEngine.Texture2D value)
    // Offset: 0x1516854
    void set_StarLayer1DataTexture(::UnityEngine::Texture2D* value);
    // public UnityEngine.Color get_StarLayer1Color()
    // Offset: 0x15168CC
    ::UnityEngine::Color get_StarLayer1Color();
    // public System.Void set_StarLayer1Color(UnityEngine.Color value)
    // Offset: 0x15168D8
    void set_StarLayer1Color(::UnityEngine::Color value);
    // public System.Single get_StarLayer1MaxRadius()
    // Offset: 0x1516974
    float get_StarLayer1MaxRadius();
    // public System.Void set_StarLayer1MaxRadius(System.Single value)
    // Offset: 0x151697C
    void set_StarLayer1MaxRadius(float value);
    // public System.Single get_StarLayer1TwinkleAmount()
    // Offset: 0x15169F4
    float get_StarLayer1TwinkleAmount();
    // public System.Void set_StarLayer1TwinkleAmount(System.Single value)
    // Offset: 0x15169FC
    void set_StarLayer1TwinkleAmount(float value);
    // public System.Single get_StarLayer1TwinkleSpeed()
    // Offset: 0x1516A74
    float get_StarLayer1TwinkleSpeed();
    // public System.Void set_StarLayer1TwinkleSpeed(System.Single value)
    // Offset: 0x1516A7C
    void set_StarLayer1TwinkleSpeed(float value);
    // public System.Single get_StarLayer1RotationSpeed()
    // Offset: 0x1516AF4
    float get_StarLayer1RotationSpeed();
    // public System.Void set_StarLayer1RotationSpeed(System.Single value)
    // Offset: 0x1516AFC
    void set_StarLayer1RotationSpeed(float value);
    // public System.Single get_StarLayer1EdgeFeathering()
    // Offset: 0x1516B74
    float get_StarLayer1EdgeFeathering();
    // public System.Void set_StarLayer1EdgeFeathering(System.Single value)
    // Offset: 0x1516B7C
    void set_StarLayer1EdgeFeathering(float value);
    // public System.Single get_StarLayer1BloomFilterBoost()
    // Offset: 0x1516BF4
    float get_StarLayer1BloomFilterBoost();
    // public System.Void set_StarLayer1BloomFilterBoost(System.Single value)
    // Offset: 0x1516BFC
    void set_StarLayer1BloomFilterBoost(float value);
    // public System.Void SetStarLayer1SpriteDimensions(System.Int32 columns, System.Int32 rows)
    // Offset: 0x1516C74
    void SetStarLayer1SpriteDimensions(int columns, int rows);
    // public UnityEngine.Vector2 GetStarLayer1SpriteDimensions()
    // Offset: 0x1516D18
    ::UnityEngine::Vector2 GetStarLayer1SpriteDimensions();
    // public System.Int32 get_StarLayer1SpriteItemCount()
    // Offset: 0x1516D48
    int get_StarLayer1SpriteItemCount();
    // public System.Void set_StarLayer1SpriteItemCount(System.Int32 value)
    // Offset: 0x1516D50
    void set_StarLayer1SpriteItemCount(int value);
    // public System.Single get_StarLayer1SpriteAnimationSpeed()
    // Offset: 0x1516DC8
    float get_StarLayer1SpriteAnimationSpeed();
    // public System.Void set_StarLayer1SpriteAnimationSpeed(System.Single value)
    // Offset: 0x1516DD0
    void set_StarLayer1SpriteAnimationSpeed(float value);
    // public UnityEngine.Texture get_StarLayer2Texture()
    // Offset: 0x1516E48
    ::UnityEngine::Texture* get_StarLayer2Texture();
    // public System.Void set_StarLayer2Texture(UnityEngine.Texture value)
    // Offset: 0x1516E50
    void set_StarLayer2Texture(::UnityEngine::Texture* value);
    // public UnityEngine.Texture2D get_StarLayer2DataTexture()
    // Offset: 0x1516EC8
    ::UnityEngine::Texture2D* get_StarLayer2DataTexture();
    // public System.Void set_StarLayer2DataTexture(UnityEngine.Texture2D value)
    // Offset: 0x1516ED0
    void set_StarLayer2DataTexture(::UnityEngine::Texture2D* value);
    // public UnityEngine.Color get_StarLayer2Color()
    // Offset: 0x1516F48
    ::UnityEngine::Color get_StarLayer2Color();
    // public System.Void set_StarLayer2Color(UnityEngine.Color value)
    // Offset: 0x1516F54
    void set_StarLayer2Color(::UnityEngine::Color value);
    // public System.Single get_StarLayer2MaxRadius()
    // Offset: 0x1516FF0
    float get_StarLayer2MaxRadius();
    // public System.Void set_StarLayer2MaxRadius(System.Single value)
    // Offset: 0x1516FF8
    void set_StarLayer2MaxRadius(float value);
    // public System.Single get_StarLayer2TwinkleAmount()
    // Offset: 0x1517070
    float get_StarLayer2TwinkleAmount();
    // public System.Void set_StarLayer2TwinkleAmount(System.Single value)
    // Offset: 0x1517078
    void set_StarLayer2TwinkleAmount(float value);
    // public System.Single get_StarLayer2TwinkleSpeed()
    // Offset: 0x15170F0
    float get_StarLayer2TwinkleSpeed();
    // public System.Void set_StarLayer2TwinkleSpeed(System.Single value)
    // Offset: 0x15170F8
    void set_StarLayer2TwinkleSpeed(float value);
    // public System.Single get_StarLayer2RotationSpeed()
    // Offset: 0x1517170
    float get_StarLayer2RotationSpeed();
    // public System.Void set_StarLayer2RotationSpeed(System.Single value)
    // Offset: 0x1517178
    void set_StarLayer2RotationSpeed(float value);
    // public System.Single get_StarLayer2EdgeFeathering()
    // Offset: 0x15171F0
    float get_StarLayer2EdgeFeathering();
    // public System.Void set_StarLayer2EdgeFeathering(System.Single value)
    // Offset: 0x15171F8
    void set_StarLayer2EdgeFeathering(float value);
    // public System.Single get_StarLayer2BloomFilterBoost()
    // Offset: 0x1517270
    float get_StarLayer2BloomFilterBoost();
    // public System.Void set_StarLayer2BloomFilterBoost(System.Single value)
    // Offset: 0x1517278
    void set_StarLayer2BloomFilterBoost(float value);
    // public System.Void SetStarLayer2SpriteDimensions(System.Int32 columns, System.Int32 rows)
    // Offset: 0x15172F0
    void SetStarLayer2SpriteDimensions(int columns, int rows);
    // public UnityEngine.Vector2 GetStarLayer2SpriteDimensions()
    // Offset: 0x1517398
    ::UnityEngine::Vector2 GetStarLayer2SpriteDimensions();
    // public System.Int32 get_StarLayer2SpriteItemCount()
    // Offset: 0x15173C8
    int get_StarLayer2SpriteItemCount();
    // public System.Void set_StarLayer2SpriteItemCount(System.Int32 value)
    // Offset: 0x15173D0
    void set_StarLayer2SpriteItemCount(int value);
    // public System.Single get_StarLayer2SpriteAnimationSpeed()
    // Offset: 0x1517448
    float get_StarLayer2SpriteAnimationSpeed();
    // public System.Void set_StarLayer2SpriteAnimationSpeed(System.Single value)
    // Offset: 0x1517450
    void set_StarLayer2SpriteAnimationSpeed(float value);
    // public UnityEngine.Texture get_StarLayer3Texture()
    // Offset: 0x15174C8
    ::UnityEngine::Texture* get_StarLayer3Texture();
    // public System.Void set_StarLayer3Texture(UnityEngine.Texture value)
    // Offset: 0x15174D0
    void set_StarLayer3Texture(::UnityEngine::Texture* value);
    // public UnityEngine.Texture2D get_StarLayer3DataTexture()
    // Offset: 0x1517548
    ::UnityEngine::Texture2D* get_StarLayer3DataTexture();
    // public System.Void set_StarLayer3DataTexture(UnityEngine.Texture2D value)
    // Offset: 0x1517550
    void set_StarLayer3DataTexture(::UnityEngine::Texture2D* value);
    // public UnityEngine.Color get_StarLayer3Color()
    // Offset: 0x15175C8
    ::UnityEngine::Color get_StarLayer3Color();
    // public System.Void set_StarLayer3Color(UnityEngine.Color value)
    // Offset: 0x15175DC
    void set_StarLayer3Color(::UnityEngine::Color value);
    // public System.Single get_StarLayer3MaxRadius()
    // Offset: 0x1517680
    float get_StarLayer3MaxRadius();
    // public System.Void set_StarLayer3MaxRadius(System.Single value)
    // Offset: 0x1517688
    void set_StarLayer3MaxRadius(float value);
    // public System.Single get_StarLayer3TwinkleAmount()
    // Offset: 0x1517700
    float get_StarLayer3TwinkleAmount();
    // public System.Void set_StarLayer3TwinkleAmount(System.Single value)
    // Offset: 0x1517708
    void set_StarLayer3TwinkleAmount(float value);
    // public System.Single get_StarLayer3TwinkleSpeed()
    // Offset: 0x1517780
    float get_StarLayer3TwinkleSpeed();
    // public System.Void set_StarLayer3TwinkleSpeed(System.Single value)
    // Offset: 0x1517788
    void set_StarLayer3TwinkleSpeed(float value);
    // public System.Single get_StarLayer3RotationSpeed()
    // Offset: 0x1517800
    float get_StarLayer3RotationSpeed();
    // public System.Void set_StarLayer3RotationSpeed(System.Single value)
    // Offset: 0x1517808
    void set_StarLayer3RotationSpeed(float value);
    // public System.Single get_StarLayer3EdgeFeathering()
    // Offset: 0x1517880
    float get_StarLayer3EdgeFeathering();
    // public System.Void set_StarLayer3EdgeFeathering(System.Single value)
    // Offset: 0x1517888
    void set_StarLayer3EdgeFeathering(float value);
    // public System.Single get_StarLayer3BloomFilterBoost()
    // Offset: 0x1517900
    float get_StarLayer3BloomFilterBoost();
    // public System.Void set_StarLayer3BloomFilterBoost(System.Single value)
    // Offset: 0x1517908
    void set_StarLayer3BloomFilterBoost(float value);
    // public System.Void SetStarLayer3SpriteDimensions(System.Int32 columns, System.Int32 rows)
    // Offset: 0x1517980
    void SetStarLayer3SpriteDimensions(int columns, int rows);
    // public UnityEngine.Vector2 GetStarLayer3SpriteDimensions()
    // Offset: 0x1517A2C
    ::UnityEngine::Vector2 GetStarLayer3SpriteDimensions();
    // public System.Int32 get_StarLayer3SpriteItemCount()
    // Offset: 0x1517A60
    int get_StarLayer3SpriteItemCount();
    // public System.Void set_StarLayer3SpriteItemCount(System.Int32 value)
    // Offset: 0x1517A68
    void set_StarLayer3SpriteItemCount(int value);
    // public System.Single get_StarLayer3SpriteAnimationSpeed()
    // Offset: 0x1517AE0
    float get_StarLayer3SpriteAnimationSpeed();
    // public System.Void set_StarLayer3SpriteAnimationSpeed(System.Single value)
    // Offset: 0x1517AE8
    void set_StarLayer3SpriteAnimationSpeed(float value);
    // public UnityEngine.Texture get_MoonTexture()
    // Offset: 0x1517B60
    ::UnityEngine::Texture* get_MoonTexture();
    // public System.Void set_MoonTexture(UnityEngine.Texture value)
    // Offset: 0x1517B68
    void set_MoonTexture(::UnityEngine::Texture* value);
    // public System.Single get_MoonRotationSpeed()
    // Offset: 0x1517BE0
    float get_MoonRotationSpeed();
    // public System.Void set_MoonRotationSpeed(System.Single value)
    // Offset: 0x1517BE8
    void set_MoonRotationSpeed(float value);
    // public UnityEngine.Color get_MoonColor()
    // Offset: 0x1517C60
    ::UnityEngine::Color get_MoonColor();
    // public System.Void set_MoonColor(UnityEngine.Color value)
    // Offset: 0x1517C74
    void set_MoonColor(::UnityEngine::Color value);
    // public UnityEngine.Vector3 get_MoonDirection()
    // Offset: 0x1517D18
    ::UnityEngine::Vector3 get_MoonDirection();
    // public System.Void set_MoonDirection(UnityEngine.Vector3 value)
    // Offset: 0x1517D28
    void set_MoonDirection(::UnityEngine::Vector3 value);
    // public System.Single get_MoonSize()
    // Offset: 0x1517E28
    float get_MoonSize();
    // public System.Void set_MoonSize(System.Single value)
    // Offset: 0x1517E30
    void set_MoonSize(float value);
    // public System.Single get_MoonEdgeFeathering()
    // Offset: 0x1517EA8
    float get_MoonEdgeFeathering();
    // public System.Void set_MoonEdgeFeathering(System.Single value)
    // Offset: 0x1517EB0
    void set_MoonEdgeFeathering(float value);
    // public System.Single get_MoonBloomFilterBoost()
    // Offset: 0x1517F28
    float get_MoonBloomFilterBoost();
    // public System.Void set_MoonBloomFilterBoost(System.Single value)
    // Offset: 0x1517F30
    void set_MoonBloomFilterBoost(float value);
    // public System.Void SetMoonSpriteDimensions(System.Int32 columns, System.Int32 rows)
    // Offset: 0x1517FA8
    void SetMoonSpriteDimensions(int columns, int rows);
    // public UnityEngine.Vector2 GetMoonSpriteDimensions()
    // Offset: 0x1518054
    ::UnityEngine::Vector2 GetMoonSpriteDimensions();
    // public System.Int32 get_MoonSpriteItemCount()
    // Offset: 0x1518088
    int get_MoonSpriteItemCount();
    // public System.Void set_MoonSpriteItemCount(System.Int32 value)
    // Offset: 0x1518090
    void set_MoonSpriteItemCount(int value);
    // public System.Single get_MoonSpriteAnimationSpeed()
    // Offset: 0x1518108
    float get_MoonSpriteAnimationSpeed();
    // public System.Void set_MoonSpriteAnimationSpeed(System.Single value)
    // Offset: 0x1518110
    void set_MoonSpriteAnimationSpeed(float value);
    // public UnityEngine.Texture get_SunTexture()
    // Offset: 0x1518188
    ::UnityEngine::Texture* get_SunTexture();
    // public System.Void set_SunTexture(UnityEngine.Texture value)
    // Offset: 0x1518190
    void set_SunTexture(::UnityEngine::Texture* value);
    // public UnityEngine.Color get_SunColor()
    // Offset: 0x1518208
    ::UnityEngine::Color get_SunColor();
    // public System.Void set_SunColor(UnityEngine.Color value)
    // Offset: 0x151821C
    void set_SunColor(::UnityEngine::Color value);
    // public System.Single get_SunRotationSpeed()
    // Offset: 0x15182C0
    float get_SunRotationSpeed();
    // public System.Void set_SunRotationSpeed(System.Single value)
    // Offset: 0x15182C8
    void set_SunRotationSpeed(float value);
    // public UnityEngine.Vector3 get_SunDirection()
    // Offset: 0x1518340
    ::UnityEngine::Vector3 get_SunDirection();
    // public System.Void set_SunDirection(UnityEngine.Vector3 value)
    // Offset: 0x1518350
    void set_SunDirection(::UnityEngine::Vector3 value);
    // public System.Single get_SunSize()
    // Offset: 0x1518450
    float get_SunSize();
    // public System.Void set_SunSize(System.Single value)
    // Offset: 0x1518458
    void set_SunSize(float value);
    // public System.Single get_SunEdgeFeathering()
    // Offset: 0x15184D0
    float get_SunEdgeFeathering();
    // public System.Void set_SunEdgeFeathering(System.Single value)
    // Offset: 0x15184D8
    void set_SunEdgeFeathering(float value);
    // public System.Single get_SunBloomFilterBoost()
    // Offset: 0x1518550
    float get_SunBloomFilterBoost();
    // public System.Void set_SunBloomFilterBoost(System.Single value)
    // Offset: 0x1518558
    void set_SunBloomFilterBoost(float value);
    // public System.Void SetSunSpriteDimensions(System.Int32 columns, System.Int32 rows)
    // Offset: 0x15185D0
    void SetSunSpriteDimensions(int columns, int rows);
    // public UnityEngine.Vector2 GetSunSpriteDimensions()
    // Offset: 0x151867C
    ::UnityEngine::Vector2 GetSunSpriteDimensions();
    // public System.Int32 get_SunSpriteItemCount()
    // Offset: 0x15186B0
    int get_SunSpriteItemCount();
    // public System.Void set_SunSpriteItemCount(System.Int32 value)
    // Offset: 0x15186B8
    void set_SunSpriteItemCount(int value);
    // public System.Single get_SunSpriteAnimationSpeed()
    // Offset: 0x1518730
    float get_SunSpriteAnimationSpeed();
    // public System.Void set_SunSpriteAnimationSpeed(System.Single value)
    // Offset: 0x1518738
    void set_SunSpriteAnimationSpeed(float value);
    // public System.Single get_CloudBegin()
    // Offset: 0x15187B0
    float get_CloudBegin();
    // public System.Void set_CloudBegin(System.Single value)
    // Offset: 0x15187B8
    void set_CloudBegin(float value);
    // public System.Single get_CloudTextureTiling()
    // Offset: 0x1518830
    float get_CloudTextureTiling();
    // public System.Void set_CloudTextureTiling(System.Single value)
    // Offset: 0x1518838
    void set_CloudTextureTiling(float value);
    // public UnityEngine.Color get_CloudColor()
    // Offset: 0x15188B0
    ::UnityEngine::Color get_CloudColor();
    // public System.Void set_CloudColor(UnityEngine.Color value)
    // Offset: 0x15188C4
    void set_CloudColor(::UnityEngine::Color value);
    // public UnityEngine.Texture get_CloudTexture()
    // Offset: 0x1518968
    ::UnityEngine::Texture* get_CloudTexture();
    // public System.Void set_CloudTexture(UnityEngine.Texture value)
    // Offset: 0x15189F0
    void set_CloudTexture(::UnityEngine::Texture* value);
    // public System.Single get_CloudDensity()
    // Offset: 0x1518A68
    float get_CloudDensity();
    // public System.Void set_CloudDensity(System.Single value)
    // Offset: 0x1518A70
    void set_CloudDensity(float value);
    // public System.Single get_CloudSpeed()
    // Offset: 0x1518AE8
    float get_CloudSpeed();
    // public System.Void set_CloudSpeed(System.Single value)
    // Offset: 0x1518AF0
    void set_CloudSpeed(float value);
    // public System.Single get_CloudDirection()
    // Offset: 0x1518B68
    float get_CloudDirection();
    // public System.Void set_CloudDirection(System.Single value)
    // Offset: 0x1518B70
    void set_CloudDirection(float value);
    // public System.Single get_CloudHeight()
    // Offset: 0x1518BE8
    float get_CloudHeight();
    // public System.Void set_CloudHeight(System.Single value)
    // Offset: 0x1518BF0
    void set_CloudHeight(float value);
    // public UnityEngine.Color get_CloudColor1()
    // Offset: 0x1518C68
    ::UnityEngine::Color get_CloudColor1();
    // public System.Void set_CloudColor1(UnityEngine.Color value)
    // Offset: 0x1518C7C
    void set_CloudColor1(::UnityEngine::Color value);
    // public UnityEngine.Color get_CloudColor2()
    // Offset: 0x1518D20
    ::UnityEngine::Color get_CloudColor2();
    // public System.Void set_CloudColor2(UnityEngine.Color value)
    // Offset: 0x1518D34
    void set_CloudColor2(::UnityEngine::Color value);
    // public System.Single get_CloudFadePosition()
    // Offset: 0x1518DD8
    float get_CloudFadePosition();
    // public System.Void set_CloudFadePosition(System.Single value)
    // Offset: 0x1518DE0
    void set_CloudFadePosition(float value);
    // public System.Single get_CloudFadeAmount()
    // Offset: 0x1518E58
    float get_CloudFadeAmount();
    // public System.Void set_CloudFadeAmount(System.Single value)
    // Offset: 0x1518E60
    void set_CloudFadeAmount(float value);
    // public UnityEngine.Color get_FogColor()
    // Offset: 0x1518ED8
    ::UnityEngine::Color get_FogColor();
    // public System.Void set_FogColor(UnityEngine.Color value)
    // Offset: 0x1518EEC
    void set_FogColor(::UnityEngine::Color value);
    // public System.Single get_FogDensity()
    // Offset: 0x1518F90
    float get_FogDensity();
    // public System.Void set_FogDensity(System.Single value)
    // Offset: 0x1518F98
    void set_FogDensity(float value);
    // public System.Single get_FogHeight()
    // Offset: 0x1519010
    float get_FogHeight();
    // public System.Void set_FogHeight(System.Single value)
    // Offset: 0x1519018
    void set_FogHeight(float value);
    // private System.Void ApplyGradientValuesOnMaterial()
    // Offset: 0x1516464
    void ApplyGradientValuesOnMaterial();
    // private System.Void ApplyStarFadeValuesOnMaterial()
    // Offset: 0x1516660
    void ApplyStarFadeValuesOnMaterial();
    // public System.Void .ctor()
    // Offset: 0x1519090
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SkyMaterialController* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SkyMaterialController::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SkyMaterialController*, creationType>()));
    }
  }; // Funly.SkyStudio.SkyMaterialController
  #pragma pack(pop)
  static check_size<sizeof(SkyMaterialController), 620 + sizeof(float)> __Funly_SkyStudio_SkyMaterialControllerSizeCheck;
  static_assert(sizeof(SkyMaterialController) == 0x270);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SkyboxMaterial
// Il2CppName: get_SkyboxMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SkyboxMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SkyboxMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SkyboxMaterial
// Il2CppName: set_SkyboxMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Material*)>(&Funly::SkyStudio::SkyMaterialController::set_SkyboxMaterial)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SkyboxMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SkyColor
// Il2CppName: get_SkyColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SkyColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SkyColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SkyColor
// Il2CppName: set_SkyColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_SkyColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SkyColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SkyMiddleColor
// Il2CppName: get_SkyMiddleColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SkyMiddleColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SkyMiddleColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SkyMiddleColor
// Il2CppName: set_SkyMiddleColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_SkyMiddleColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SkyMiddleColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_HorizonColor
// Il2CppName: get_HorizonColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_HorizonColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_HorizonColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_HorizonColor
// Il2CppName: set_HorizonColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_HorizonColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_HorizonColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_GradientFadeBegin
// Il2CppName: get_GradientFadeBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_GradientFadeBegin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_GradientFadeBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_GradientFadeBegin
// Il2CppName: set_GradientFadeBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_GradientFadeBegin)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_GradientFadeBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_GradientFadeLength
// Il2CppName: get_GradientFadeLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_GradientFadeLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_GradientFadeLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_GradientFadeLength
// Il2CppName: set_GradientFadeLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_GradientFadeLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_GradientFadeLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SkyMiddlePosition
// Il2CppName: get_SkyMiddlePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SkyMiddlePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SkyMiddlePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SkyMiddlePosition
// Il2CppName: set_SkyMiddlePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_SkyMiddlePosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SkyMiddlePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_BackgroundCubemap
// Il2CppName: get_BackgroundCubemap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Cubemap* (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_BackgroundCubemap)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_BackgroundCubemap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_BackgroundCubemap
// Il2CppName: set_BackgroundCubemap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Cubemap*)>(&Funly::SkyStudio::SkyMaterialController::set_BackgroundCubemap)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Cubemap")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_BackgroundCubemap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarFadeBegin
// Il2CppName: get_StarFadeBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarFadeBegin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarFadeBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarFadeBegin
// Il2CppName: set_StarFadeBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarFadeBegin)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarFadeBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarFadeLength
// Il2CppName: get_StarFadeLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarFadeLength)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarFadeLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarFadeLength
// Il2CppName: set_StarFadeLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarFadeLength)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarFadeLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_HorizonDistanceScale
// Il2CppName: get_HorizonDistanceScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_HorizonDistanceScale)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_HorizonDistanceScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_HorizonDistanceScale
// Il2CppName: set_HorizonDistanceScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_HorizonDistanceScale)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_HorizonDistanceScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer1Texture
// Il2CppName: get_StarLayer1Texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer1Texture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer1Texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer1Texture
// Il2CppName: set_StarLayer1Texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Texture*)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer1Texture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer1Texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer1DataTexture
// Il2CppName: get_StarLayer1DataTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer1DataTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer1DataTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer1DataTexture
// Il2CppName: set_StarLayer1DataTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Texture2D*)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer1DataTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer1DataTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer1Color
// Il2CppName: get_StarLayer1Color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer1Color)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer1Color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer1Color
// Il2CppName: set_StarLayer1Color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer1Color)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer1Color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer1MaxRadius
// Il2CppName: get_StarLayer1MaxRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer1MaxRadius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer1MaxRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer1MaxRadius
// Il2CppName: set_StarLayer1MaxRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer1MaxRadius)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer1MaxRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer1TwinkleAmount
// Il2CppName: get_StarLayer1TwinkleAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer1TwinkleAmount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer1TwinkleAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer1TwinkleAmount
// Il2CppName: set_StarLayer1TwinkleAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer1TwinkleAmount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer1TwinkleAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer1TwinkleSpeed
// Il2CppName: get_StarLayer1TwinkleSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer1TwinkleSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer1TwinkleSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer1TwinkleSpeed
// Il2CppName: set_StarLayer1TwinkleSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer1TwinkleSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer1TwinkleSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer1RotationSpeed
// Il2CppName: get_StarLayer1RotationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer1RotationSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer1RotationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer1RotationSpeed
// Il2CppName: set_StarLayer1RotationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer1RotationSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer1RotationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer1EdgeFeathering
// Il2CppName: get_StarLayer1EdgeFeathering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer1EdgeFeathering)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer1EdgeFeathering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer1EdgeFeathering
// Il2CppName: set_StarLayer1EdgeFeathering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer1EdgeFeathering)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer1EdgeFeathering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer1BloomFilterBoost
// Il2CppName: get_StarLayer1BloomFilterBoost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer1BloomFilterBoost)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer1BloomFilterBoost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer1BloomFilterBoost
// Il2CppName: set_StarLayer1BloomFilterBoost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer1BloomFilterBoost)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer1BloomFilterBoost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::SetStarLayer1SpriteDimensions
// Il2CppName: SetStarLayer1SpriteDimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(int, int)>(&Funly::SkyStudio::SkyMaterialController::SetStarLayer1SpriteDimensions)> {
  static const MethodInfo* get() {
    static auto* columns = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* rows = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "SetStarLayer1SpriteDimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columns, rows});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::GetStarLayer1SpriteDimensions
// Il2CppName: GetStarLayer1SpriteDimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::GetStarLayer1SpriteDimensions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "GetStarLayer1SpriteDimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer1SpriteItemCount
// Il2CppName: get_StarLayer1SpriteItemCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer1SpriteItemCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer1SpriteItemCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer1SpriteItemCount
// Il2CppName: set_StarLayer1SpriteItemCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(int)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer1SpriteItemCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer1SpriteItemCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer1SpriteAnimationSpeed
// Il2CppName: get_StarLayer1SpriteAnimationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer1SpriteAnimationSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer1SpriteAnimationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer1SpriteAnimationSpeed
// Il2CppName: set_StarLayer1SpriteAnimationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer1SpriteAnimationSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer1SpriteAnimationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer2Texture
// Il2CppName: get_StarLayer2Texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer2Texture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer2Texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer2Texture
// Il2CppName: set_StarLayer2Texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Texture*)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer2Texture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer2Texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer2DataTexture
// Il2CppName: get_StarLayer2DataTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer2DataTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer2DataTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer2DataTexture
// Il2CppName: set_StarLayer2DataTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Texture2D*)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer2DataTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer2DataTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer2Color
// Il2CppName: get_StarLayer2Color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer2Color)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer2Color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer2Color
// Il2CppName: set_StarLayer2Color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer2Color)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer2Color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer2MaxRadius
// Il2CppName: get_StarLayer2MaxRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer2MaxRadius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer2MaxRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer2MaxRadius
// Il2CppName: set_StarLayer2MaxRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer2MaxRadius)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer2MaxRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer2TwinkleAmount
// Il2CppName: get_StarLayer2TwinkleAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer2TwinkleAmount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer2TwinkleAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer2TwinkleAmount
// Il2CppName: set_StarLayer2TwinkleAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer2TwinkleAmount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer2TwinkleAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer2TwinkleSpeed
// Il2CppName: get_StarLayer2TwinkleSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer2TwinkleSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer2TwinkleSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer2TwinkleSpeed
// Il2CppName: set_StarLayer2TwinkleSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer2TwinkleSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer2TwinkleSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer2RotationSpeed
// Il2CppName: get_StarLayer2RotationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer2RotationSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer2RotationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer2RotationSpeed
// Il2CppName: set_StarLayer2RotationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer2RotationSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer2RotationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer2EdgeFeathering
// Il2CppName: get_StarLayer2EdgeFeathering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer2EdgeFeathering)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer2EdgeFeathering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer2EdgeFeathering
// Il2CppName: set_StarLayer2EdgeFeathering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer2EdgeFeathering)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer2EdgeFeathering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer2BloomFilterBoost
// Il2CppName: get_StarLayer2BloomFilterBoost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer2BloomFilterBoost)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer2BloomFilterBoost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer2BloomFilterBoost
// Il2CppName: set_StarLayer2BloomFilterBoost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer2BloomFilterBoost)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer2BloomFilterBoost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::SetStarLayer2SpriteDimensions
// Il2CppName: SetStarLayer2SpriteDimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(int, int)>(&Funly::SkyStudio::SkyMaterialController::SetStarLayer2SpriteDimensions)> {
  static const MethodInfo* get() {
    static auto* columns = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* rows = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "SetStarLayer2SpriteDimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columns, rows});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::GetStarLayer2SpriteDimensions
// Il2CppName: GetStarLayer2SpriteDimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::GetStarLayer2SpriteDimensions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "GetStarLayer2SpriteDimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer2SpriteItemCount
// Il2CppName: get_StarLayer2SpriteItemCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer2SpriteItemCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer2SpriteItemCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer2SpriteItemCount
// Il2CppName: set_StarLayer2SpriteItemCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(int)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer2SpriteItemCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer2SpriteItemCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer2SpriteAnimationSpeed
// Il2CppName: get_StarLayer2SpriteAnimationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer2SpriteAnimationSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer2SpriteAnimationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer2SpriteAnimationSpeed
// Il2CppName: set_StarLayer2SpriteAnimationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer2SpriteAnimationSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer2SpriteAnimationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer3Texture
// Il2CppName: get_StarLayer3Texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer3Texture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer3Texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer3Texture
// Il2CppName: set_StarLayer3Texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Texture*)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer3Texture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer3Texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer3DataTexture
// Il2CppName: get_StarLayer3DataTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture2D* (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer3DataTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer3DataTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer3DataTexture
// Il2CppName: set_StarLayer3DataTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Texture2D*)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer3DataTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer3DataTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer3Color
// Il2CppName: get_StarLayer3Color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer3Color)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer3Color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer3Color
// Il2CppName: set_StarLayer3Color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer3Color)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer3Color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer3MaxRadius
// Il2CppName: get_StarLayer3MaxRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer3MaxRadius)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer3MaxRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer3MaxRadius
// Il2CppName: set_StarLayer3MaxRadius
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer3MaxRadius)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer3MaxRadius", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer3TwinkleAmount
// Il2CppName: get_StarLayer3TwinkleAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer3TwinkleAmount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer3TwinkleAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer3TwinkleAmount
// Il2CppName: set_StarLayer3TwinkleAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer3TwinkleAmount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer3TwinkleAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer3TwinkleSpeed
// Il2CppName: get_StarLayer3TwinkleSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer3TwinkleSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer3TwinkleSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer3TwinkleSpeed
// Il2CppName: set_StarLayer3TwinkleSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer3TwinkleSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer3TwinkleSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer3RotationSpeed
// Il2CppName: get_StarLayer3RotationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer3RotationSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer3RotationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer3RotationSpeed
// Il2CppName: set_StarLayer3RotationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer3RotationSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer3RotationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer3EdgeFeathering
// Il2CppName: get_StarLayer3EdgeFeathering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer3EdgeFeathering)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer3EdgeFeathering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer3EdgeFeathering
// Il2CppName: set_StarLayer3EdgeFeathering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer3EdgeFeathering)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer3EdgeFeathering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer3BloomFilterBoost
// Il2CppName: get_StarLayer3BloomFilterBoost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer3BloomFilterBoost)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer3BloomFilterBoost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer3BloomFilterBoost
// Il2CppName: set_StarLayer3BloomFilterBoost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer3BloomFilterBoost)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer3BloomFilterBoost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::SetStarLayer3SpriteDimensions
// Il2CppName: SetStarLayer3SpriteDimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(int, int)>(&Funly::SkyStudio::SkyMaterialController::SetStarLayer3SpriteDimensions)> {
  static const MethodInfo* get() {
    static auto* columns = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* rows = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "SetStarLayer3SpriteDimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columns, rows});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::GetStarLayer3SpriteDimensions
// Il2CppName: GetStarLayer3SpriteDimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::GetStarLayer3SpriteDimensions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "GetStarLayer3SpriteDimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer3SpriteItemCount
// Il2CppName: get_StarLayer3SpriteItemCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer3SpriteItemCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer3SpriteItemCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer3SpriteItemCount
// Il2CppName: set_StarLayer3SpriteItemCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(int)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer3SpriteItemCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer3SpriteItemCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_StarLayer3SpriteAnimationSpeed
// Il2CppName: get_StarLayer3SpriteAnimationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_StarLayer3SpriteAnimationSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_StarLayer3SpriteAnimationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_StarLayer3SpriteAnimationSpeed
// Il2CppName: set_StarLayer3SpriteAnimationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_StarLayer3SpriteAnimationSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_StarLayer3SpriteAnimationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_MoonTexture
// Il2CppName: get_MoonTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_MoonTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_MoonTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_MoonTexture
// Il2CppName: set_MoonTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Texture*)>(&Funly::SkyStudio::SkyMaterialController::set_MoonTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_MoonTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_MoonRotationSpeed
// Il2CppName: get_MoonRotationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_MoonRotationSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_MoonRotationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_MoonRotationSpeed
// Il2CppName: set_MoonRotationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_MoonRotationSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_MoonRotationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_MoonColor
// Il2CppName: get_MoonColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_MoonColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_MoonColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_MoonColor
// Il2CppName: set_MoonColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_MoonColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_MoonColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_MoonDirection
// Il2CppName: get_MoonDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_MoonDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_MoonDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_MoonDirection
// Il2CppName: set_MoonDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Vector3)>(&Funly::SkyStudio::SkyMaterialController::set_MoonDirection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_MoonDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_MoonSize
// Il2CppName: get_MoonSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_MoonSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_MoonSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_MoonSize
// Il2CppName: set_MoonSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_MoonSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_MoonSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_MoonEdgeFeathering
// Il2CppName: get_MoonEdgeFeathering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_MoonEdgeFeathering)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_MoonEdgeFeathering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_MoonEdgeFeathering
// Il2CppName: set_MoonEdgeFeathering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_MoonEdgeFeathering)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_MoonEdgeFeathering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_MoonBloomFilterBoost
// Il2CppName: get_MoonBloomFilterBoost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_MoonBloomFilterBoost)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_MoonBloomFilterBoost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_MoonBloomFilterBoost
// Il2CppName: set_MoonBloomFilterBoost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_MoonBloomFilterBoost)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_MoonBloomFilterBoost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::SetMoonSpriteDimensions
// Il2CppName: SetMoonSpriteDimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(int, int)>(&Funly::SkyStudio::SkyMaterialController::SetMoonSpriteDimensions)> {
  static const MethodInfo* get() {
    static auto* columns = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* rows = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "SetMoonSpriteDimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columns, rows});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::GetMoonSpriteDimensions
// Il2CppName: GetMoonSpriteDimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::GetMoonSpriteDimensions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "GetMoonSpriteDimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_MoonSpriteItemCount
// Il2CppName: get_MoonSpriteItemCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_MoonSpriteItemCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_MoonSpriteItemCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_MoonSpriteItemCount
// Il2CppName: set_MoonSpriteItemCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(int)>(&Funly::SkyStudio::SkyMaterialController::set_MoonSpriteItemCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_MoonSpriteItemCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_MoonSpriteAnimationSpeed
// Il2CppName: get_MoonSpriteAnimationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_MoonSpriteAnimationSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_MoonSpriteAnimationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_MoonSpriteAnimationSpeed
// Il2CppName: set_MoonSpriteAnimationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_MoonSpriteAnimationSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_MoonSpriteAnimationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SunTexture
// Il2CppName: get_SunTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SunTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SunTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SunTexture
// Il2CppName: set_SunTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Texture*)>(&Funly::SkyStudio::SkyMaterialController::set_SunTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SunTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SunColor
// Il2CppName: get_SunColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SunColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SunColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SunColor
// Il2CppName: set_SunColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_SunColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SunColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SunRotationSpeed
// Il2CppName: get_SunRotationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SunRotationSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SunRotationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SunRotationSpeed
// Il2CppName: set_SunRotationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_SunRotationSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SunRotationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SunDirection
// Il2CppName: get_SunDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector3 (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SunDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SunDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SunDirection
// Il2CppName: set_SunDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Vector3)>(&Funly::SkyStudio::SkyMaterialController::set_SunDirection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SunDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SunSize
// Il2CppName: get_SunSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SunSize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SunSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SunSize
// Il2CppName: set_SunSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_SunSize)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SunSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SunEdgeFeathering
// Il2CppName: get_SunEdgeFeathering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SunEdgeFeathering)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SunEdgeFeathering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SunEdgeFeathering
// Il2CppName: set_SunEdgeFeathering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_SunEdgeFeathering)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SunEdgeFeathering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SunBloomFilterBoost
// Il2CppName: get_SunBloomFilterBoost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SunBloomFilterBoost)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SunBloomFilterBoost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SunBloomFilterBoost
// Il2CppName: set_SunBloomFilterBoost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_SunBloomFilterBoost)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SunBloomFilterBoost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::SetSunSpriteDimensions
// Il2CppName: SetSunSpriteDimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(int, int)>(&Funly::SkyStudio::SkyMaterialController::SetSunSpriteDimensions)> {
  static const MethodInfo* get() {
    static auto* columns = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* rows = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "SetSunSpriteDimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{columns, rows});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::GetSunSpriteDimensions
// Il2CppName: GetSunSpriteDimensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Vector2 (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::GetSunSpriteDimensions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "GetSunSpriteDimensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SunSpriteItemCount
// Il2CppName: get_SunSpriteItemCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SunSpriteItemCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SunSpriteItemCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SunSpriteItemCount
// Il2CppName: set_SunSpriteItemCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(int)>(&Funly::SkyStudio::SkyMaterialController::set_SunSpriteItemCount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SunSpriteItemCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_SunSpriteAnimationSpeed
// Il2CppName: get_SunSpriteAnimationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_SunSpriteAnimationSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_SunSpriteAnimationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_SunSpriteAnimationSpeed
// Il2CppName: set_SunSpriteAnimationSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_SunSpriteAnimationSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_SunSpriteAnimationSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudBegin
// Il2CppName: get_CloudBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudBegin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudBegin
// Il2CppName: set_CloudBegin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_CloudBegin)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudBegin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudTextureTiling
// Il2CppName: get_CloudTextureTiling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudTextureTiling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudTextureTiling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudTextureTiling
// Il2CppName: set_CloudTextureTiling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_CloudTextureTiling)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudTextureTiling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudColor
// Il2CppName: get_CloudColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudColor
// Il2CppName: set_CloudColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_CloudColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudTexture
// Il2CppName: get_CloudTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudTexture)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudTexture
// Il2CppName: set_CloudTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Texture*)>(&Funly::SkyStudio::SkyMaterialController::set_CloudTexture)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudDensity
// Il2CppName: get_CloudDensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudDensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudDensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudDensity
// Il2CppName: set_CloudDensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_CloudDensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudDensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudSpeed
// Il2CppName: get_CloudSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudSpeed)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudSpeed
// Il2CppName: set_CloudSpeed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_CloudSpeed)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudSpeed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudDirection
// Il2CppName: get_CloudDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudDirection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudDirection
// Il2CppName: set_CloudDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_CloudDirection)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudHeight
// Il2CppName: get_CloudHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudHeight
// Il2CppName: set_CloudHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_CloudHeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudColor1
// Il2CppName: get_CloudColor1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudColor1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudColor1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudColor1
// Il2CppName: set_CloudColor1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_CloudColor1)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudColor1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudColor2
// Il2CppName: get_CloudColor2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudColor2)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudColor2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudColor2
// Il2CppName: set_CloudColor2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_CloudColor2)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudColor2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudFadePosition
// Il2CppName: get_CloudFadePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudFadePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudFadePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudFadePosition
// Il2CppName: set_CloudFadePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_CloudFadePosition)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudFadePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_CloudFadeAmount
// Il2CppName: get_CloudFadeAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_CloudFadeAmount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_CloudFadeAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_CloudFadeAmount
// Il2CppName: set_CloudFadeAmount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_CloudFadeAmount)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_CloudFadeAmount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_FogColor
// Il2CppName: get_FogColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_FogColor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_FogColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_FogColor
// Il2CppName: set_FogColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(::UnityEngine::Color)>(&Funly::SkyStudio::SkyMaterialController::set_FogColor)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_FogColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_FogDensity
// Il2CppName: get_FogDensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_FogDensity)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_FogDensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_FogDensity
// Il2CppName: set_FogDensity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_FogDensity)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_FogDensity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::get_FogHeight
// Il2CppName: get_FogHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::get_FogHeight)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "get_FogHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::set_FogHeight
// Il2CppName: set_FogHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)(float)>(&Funly::SkyStudio::SkyMaterialController::set_FogHeight)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "set_FogHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::ApplyGradientValuesOnMaterial
// Il2CppName: ApplyGradientValuesOnMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::ApplyGradientValuesOnMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "ApplyGradientValuesOnMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::ApplyStarFadeValuesOnMaterial
// Il2CppName: ApplyStarFadeValuesOnMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyMaterialController::*)()>(&Funly::SkyStudio::SkyMaterialController::ApplyStarFadeValuesOnMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyMaterialController*), "ApplyStarFadeValuesOnMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyMaterialController::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
