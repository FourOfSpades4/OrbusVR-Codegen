// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Funly.SkyStudio.SpriteArtSet
#include "Funly/SkyStudio/SpriteArtSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: Funly::SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: LightningArtItem
  class LightningArtItem;
}
// Completed forward declares
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: LightningArtSet
  class LightningArtSet;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::LightningArtSet);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::LightningArtSet*, "Funly.SkyStudio", "LightningArtSet");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Funly.SkyStudio.LightningArtSet
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: AD24D0
  class LightningArtSet : public ::Funly::SkyStudio::SpriteArtSet {
    public:
    public:
    // [TooltipAttribute] Offset: 0xAE18E4
    // public System.Collections.Generic.List`1<Funly.SkyStudio.LightningArtItem> lightingStyleItems
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<::Funly::SkyStudio::LightningArtItem*>* lightingStyleItems;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::Funly::SkyStudio::LightningArtItem*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public System.Collections.Generic.List`1<Funly.SkyStudio.LightningArtItem> lightingStyleItems
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Funly::SkyStudio::LightningArtItem*>*& dyn_lightingStyleItems();
    // public System.Void .ctor()
    // Offset: 0x1510370
    // Implemented from: Funly.SkyStudio.SpriteArtSet
    // Base method: System.Void SpriteArtSet::.ctor()
    // Base method: System.Void BaseArtSet::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LightningArtSet* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::LightningArtSet::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LightningArtSet*, creationType>()));
    }
  }; // Funly.SkyStudio.LightningArtSet
  #pragma pack(pop)
  static check_size<sizeof(LightningArtSet), 24 + sizeof(::System::Collections::Generic::List_1<::Funly::SkyStudio::LightningArtItem*>*)> __Funly_SkyStudio_LightningArtSetSizeCheck;
  static_assert(sizeof(LightningArtSet) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::LightningArtSet::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
