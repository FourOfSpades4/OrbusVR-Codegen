// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Funly.SkyStudio.BaseShaderDefinition
#include "Funly/SkyStudio/BaseShaderDefinition.hpp"
// Including type: System.Single
#include "System/Single.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Funly::SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: ProfileFeatureSection
  class ProfileFeatureSection;
  // Forward declaring type: ProfileGroupSection
  class ProfileGroupSection;
}
// Completed forward declares
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: Standard3dShaderDefinition
  class Standard3dShaderDefinition;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::Standard3dShaderDefinition);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::Standard3dShaderDefinition*, "Funly.SkyStudio", "Standard3dShaderDefinition");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: Funly.SkyStudio.Standard3dShaderDefinition
  // [TokenAttribute] Offset: FFFFFFFF
  class Standard3dShaderDefinition : public ::Funly::SkyStudio::BaseShaderDefinition {
    public:
    // static field const value: static public System.Single MaxStarSize
    static constexpr const float MaxStarSize = 0.2;
    // Get static field: static public System.Single MaxStarSize
    static float _get_MaxStarSize();
    // Set static field: static public System.Single MaxStarSize
    static void _set_MaxStarSize(float value);
    // static field const value: static public System.Single MaxStarDensity
    static constexpr const float MaxStarDensity = 1;
    // Get static field: static public System.Single MaxStarDensity
    static float _get_MaxStarDensity();
    // Set static field: static public System.Single MaxStarDensity
    static void _set_MaxStarDensity(float value);
    // static field const value: static public System.Single MinEdgeFeathering
    static constexpr const float MinEdgeFeathering = 0.0001;
    // Get static field: static public System.Single MinEdgeFeathering
    static float _get_MinEdgeFeathering();
    // Set static field: static public System.Single MinEdgeFeathering
    static void _set_MinEdgeFeathering(float value);
    // static field const value: static public System.Single MinStarFadeBegin
    static constexpr const float MinStarFadeBegin = -0.999;
    // Get static field: static public System.Single MinStarFadeBegin
    static float _get_MinStarFadeBegin();
    // Set static field: static public System.Single MinStarFadeBegin
    static void _set_MinStarFadeBegin(float value);
    // static field const value: static public System.Single MaxSpriteItems
    static constexpr const float MaxSpriteItems = 100000;
    // Get static field: static public System.Single MaxSpriteItems
    static float _get_MaxSpriteItems();
    // Set static field: static public System.Single MaxSpriteItems
    static void _set_MaxSpriteItems(float value);
    // static field const value: static public System.Single MinRotationSpeed
    static constexpr const float MinRotationSpeed = -10;
    // Get static field: static public System.Single MinRotationSpeed
    static float _get_MinRotationSpeed();
    // Set static field: static public System.Single MinRotationSpeed
    static void _set_MinRotationSpeed(float value);
    // static field const value: static public System.Single MaxRotationSpeed
    static constexpr const float MaxRotationSpeed = 10;
    // Get static field: static public System.Single MaxRotationSpeed
    static float _get_MaxRotationSpeed();
    // Set static field: static public System.Single MaxRotationSpeed
    static void _set_MaxRotationSpeed(float value);
    // public System.Void .ctor()
    // Offset: 0x151A3A4
    // Implemented from: Funly.SkyStudio.BaseShaderDefinition
    // Base method: System.Void BaseShaderDefinition::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Standard3dShaderDefinition* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::Standard3dShaderDefinition::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Standard3dShaderDefinition*, creationType>()));
    }
    // protected override Funly.SkyStudio.ProfileFeatureSection[] ProfileFeatureSection()
    // Offset: 0x151C84C
    // Implemented from: Funly.SkyStudio.BaseShaderDefinition
    // Base method: Funly.SkyStudio.ProfileFeatureSection[] BaseShaderDefinition::ProfileFeatureSection()
    ::ArrayW<::Funly::SkyStudio::ProfileFeatureSection*> ProfileFeatureSection();
    // protected override Funly.SkyStudio.ProfileGroupSection[] ProfileDefinitionTable()
    // Offset: 0x151DC0C
    // Implemented from: Funly.SkyStudio.BaseShaderDefinition
    // Base method: Funly.SkyStudio.ProfileGroupSection[] BaseShaderDefinition::ProfileDefinitionTable()
    ::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> ProfileDefinitionTable();
  }; // Funly.SkyStudio.Standard3dShaderDefinition
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::Standard3dShaderDefinition::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Funly::SkyStudio::Standard3dShaderDefinition::ProfileFeatureSection
// Il2CppName: ProfileFeatureSection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Funly::SkyStudio::ProfileFeatureSection*> (Funly::SkyStudio::Standard3dShaderDefinition::*)()>(&Funly::SkyStudio::Standard3dShaderDefinition::ProfileFeatureSection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::Standard3dShaderDefinition*), "ProfileFeatureSection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::Standard3dShaderDefinition::ProfileDefinitionTable
// Il2CppName: ProfileDefinitionTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> (Funly::SkyStudio::Standard3dShaderDefinition::*)()>(&Funly::SkyStudio::Standard3dShaderDefinition::ProfileDefinitionTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::Standard3dShaderDefinition*), "ProfileDefinitionTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
