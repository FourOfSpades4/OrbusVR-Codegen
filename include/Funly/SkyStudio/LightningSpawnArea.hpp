// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: LightningSpawnArea
  class LightningSpawnArea;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::LightningSpawnArea);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::LightningSpawnArea*, "Funly.SkyStudio", "LightningSpawnArea");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: Funly.SkyStudio.LightningSpawnArea
  // [TokenAttribute] Offset: FFFFFFFF
  class LightningSpawnArea : public ::UnityEngine::MonoBehaviour {
    public:
    public:
    // [TooltipAttribute] Offset: 0xAE29E4
    // public UnityEngine.Vector3 lightningArea
    // Size: 0xC
    // Offset: 0x18
    ::UnityEngine::Vector3 lightningArea;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector3) == 0xC);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: public UnityEngine.Vector3 lightningArea
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& dyn_lightningArea();
    // public System.Void OnDrawGizmosSelected()
    // Offset: 0x1511FE8
    void OnDrawGizmosSelected();
    // private System.Void OnEnable()
    // Offset: 0x15121C4
    void OnEnable();
    // private System.Void OnDisable()
    // Offset: 0x1512228
    void OnDisable();
    // public System.Void .ctor()
    // Offset: 0x151228C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LightningSpawnArea* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::LightningSpawnArea::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LightningSpawnArea*, creationType>()));
    }
  }; // Funly.SkyStudio.LightningSpawnArea
  #pragma pack(pop)
  static check_size<sizeof(LightningSpawnArea), 24 + sizeof(::UnityEngine::Vector3)> __Funly_SkyStudio_LightningSpawnAreaSizeCheck;
  static_assert(sizeof(LightningSpawnArea) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::LightningSpawnArea::OnDrawGizmosSelected
// Il2CppName: OnDrawGizmosSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::LightningSpawnArea::*)()>(&Funly::SkyStudio::LightningSpawnArea::OnDrawGizmosSelected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::LightningSpawnArea*), "OnDrawGizmosSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::LightningSpawnArea::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::LightningSpawnArea::*)()>(&Funly::SkyStudio::LightningSpawnArea::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::LightningSpawnArea*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::LightningSpawnArea::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::LightningSpawnArea::*)()>(&Funly::SkyStudio::LightningSpawnArea::OnDisable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::LightningSpawnArea*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::LightningSpawnArea::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
