// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: IEnumerator`1<T>
  template<typename T>
  class IEnumerator_1;
}
// Forward declaring namespace: Funly::SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: IKeyframeGroup
  class IKeyframeGroup;
  // Forward declaring type: ColorGroupDictionary
  class ColorGroupDictionary;
  // Forward declaring type: NumberGroupDictionary
  class NumberGroupDictionary;
  // Forward declaring type: TextureGroupDictionary
  class TextureGroupDictionary;
  // Forward declaring type: SpherePointGroupDictionary
  class SpherePointGroupDictionary;
  // Forward declaring type: BoolGroupDictionary
  class BoolGroupDictionary;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: KeyframeGroupDictionary
  class KeyframeGroupDictionary;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::KeyframeGroupDictionary);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::KeyframeGroupDictionary*, "Funly.SkyStudio", "KeyframeGroupDictionary");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Size: 0x40
  #pragma pack(push, 1)
  // Autogenerated type: Funly.SkyStudio.KeyframeGroupDictionary
  // [TokenAttribute] Offset: FFFFFFFF
  // [DefaultMemberAttribute] Offset: AD26D4
  class KeyframeGroupDictionary : public ::Il2CppObject/*, public ::UnityEngine::ISerializationCallbackReceiver, public ::System::Collections::Generic::IEnumerable_1<::StringW>*/ {
    public:
    public:
    // private System.Collections.Generic.Dictionary`2<System.String,Funly.SkyStudio.IKeyframeGroup> m_Groups
    // Size: 0x8
    // Offset: 0x10
    ::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::IKeyframeGroup*>* m_Groups;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::IKeyframeGroup*>*) == 0x8);
    // private Funly.SkyStudio.ColorGroupDictionary m_ColorGroup
    // Size: 0x8
    // Offset: 0x18
    ::Funly::SkyStudio::ColorGroupDictionary* m_ColorGroup;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::ColorGroupDictionary*) == 0x8);
    // private Funly.SkyStudio.NumberGroupDictionary m_NumberGroup
    // Size: 0x8
    // Offset: 0x20
    ::Funly::SkyStudio::NumberGroupDictionary* m_NumberGroup;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::NumberGroupDictionary*) == 0x8);
    // private Funly.SkyStudio.TextureGroupDictionary m_TextureGroup
    // Size: 0x8
    // Offset: 0x28
    ::Funly::SkyStudio::TextureGroupDictionary* m_TextureGroup;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::TextureGroupDictionary*) == 0x8);
    // private Funly.SkyStudio.SpherePointGroupDictionary m_SpherePointGroup
    // Size: 0x8
    // Offset: 0x30
    ::Funly::SkyStudio::SpherePointGroupDictionary* m_SpherePointGroup;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::SpherePointGroupDictionary*) == 0x8);
    // private Funly.SkyStudio.BoolGroupDictionary m_BoolGroup
    // Size: 0x8
    // Offset: 0x38
    ::Funly::SkyStudio::BoolGroupDictionary* m_BoolGroup;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::BoolGroupDictionary*) == 0x8);
    public:
    // Creating interface conversion operator: operator ::UnityEngine::ISerializationCallbackReceiver
    operator ::UnityEngine::ISerializationCallbackReceiver() noexcept {
      return *reinterpret_cast<::UnityEngine::ISerializationCallbackReceiver*>(this);
    }
    // Creating interface conversion operator: operator ::System::Collections::Generic::IEnumerable_1<::StringW>
    operator ::System::Collections::Generic::IEnumerable_1<::StringW>() noexcept {
      return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>*>(this);
    }
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,Funly.SkyStudio.IKeyframeGroup> m_Groups
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::IKeyframeGroup*>*& dyn_m_Groups();
    // Get instance field reference: private Funly.SkyStudio.ColorGroupDictionary m_ColorGroup
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::ColorGroupDictionary*& dyn_m_ColorGroup();
    // Get instance field reference: private Funly.SkyStudio.NumberGroupDictionary m_NumberGroup
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::NumberGroupDictionary*& dyn_m_NumberGroup();
    // Get instance field reference: private Funly.SkyStudio.TextureGroupDictionary m_TextureGroup
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::TextureGroupDictionary*& dyn_m_TextureGroup();
    // Get instance field reference: private Funly.SkyStudio.SpherePointGroupDictionary m_SpherePointGroup
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::SpherePointGroupDictionary*& dyn_m_SpherePointGroup();
    // Get instance field reference: private Funly.SkyStudio.BoolGroupDictionary m_BoolGroup
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::BoolGroupDictionary*& dyn_m_BoolGroup();
    // public Funly.SkyStudio.IKeyframeGroup get_Item(System.String aKey)
    // Offset: 0x150F1F8
    ::Funly::SkyStudio::IKeyframeGroup* get_Item(::StringW aKey);
    // public System.Void set_Item(System.String aKey, Funly.SkyStudio.IKeyframeGroup value)
    // Offset: 0x150F268
    void set_Item(::StringW aKey, ::Funly::SkyStudio::IKeyframeGroup* value);
    // public System.Boolean ContainsKey(System.String key)
    // Offset: 0x150F2E0
    bool ContainsKey(::StringW key);
    // public System.Void Clear()
    // Offset: 0x150F350
    void Clear();
    // public T GetGroup(System.String propertyName)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T GetGroup(::StringW propertyName) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::KeyframeGroupDictionary::GetGroup");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroup", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method, propertyName);
    }
    // public System.Void OnBeforeSerialize()
    // Offset: 0x150F3B0
    void OnBeforeSerialize();
    // public System.Void OnAfterDeserialize()
    // Offset: 0x150F8D0
    void OnAfterDeserialize();
    // public System.Collections.Generic.IEnumerator`1<System.String> GetEnumerator()
    // Offset: 0x1510080
    ::System::Collections::Generic::IEnumerator_1<::StringW>* GetEnumerator();
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0x1510134
    ::System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator();
    // public System.Void .ctor()
    // Offset: 0x1510138
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static KeyframeGroupDictionary* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::KeyframeGroupDictionary::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<KeyframeGroupDictionary*, creationType>()));
    }
  }; // Funly.SkyStudio.KeyframeGroupDictionary
  #pragma pack(pop)
  static check_size<sizeof(KeyframeGroupDictionary), 56 + sizeof(::Funly::SkyStudio::BoolGroupDictionary*)> __Funly_SkyStudio_KeyframeGroupDictionarySizeCheck;
  static_assert(sizeof(KeyframeGroupDictionary) == 0x40);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::KeyframeGroupDictionary::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::IKeyframeGroup* (Funly::SkyStudio::KeyframeGroupDictionary::*)(::StringW)>(&Funly::SkyStudio::KeyframeGroupDictionary::get_Item)> {
  static const MethodInfo* get() {
    static auto* aKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::KeyframeGroupDictionary*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::KeyframeGroupDictionary::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::KeyframeGroupDictionary::*)(::StringW, ::Funly::SkyStudio::IKeyframeGroup*)>(&Funly::SkyStudio::KeyframeGroupDictionary::set_Item)> {
  static const MethodInfo* get() {
    static auto* aKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("Funly.SkyStudio", "IKeyframeGroup")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::KeyframeGroupDictionary*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{aKey, value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::KeyframeGroupDictionary::ContainsKey
// Il2CppName: ContainsKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Funly::SkyStudio::KeyframeGroupDictionary::*)(::StringW)>(&Funly::SkyStudio::KeyframeGroupDictionary::ContainsKey)> {
  static const MethodInfo* get() {
    static auto* key = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::KeyframeGroupDictionary*), "ContainsKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{key});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::KeyframeGroupDictionary::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::KeyframeGroupDictionary::*)()>(&Funly::SkyStudio::KeyframeGroupDictionary::Clear)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::KeyframeGroupDictionary*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::KeyframeGroupDictionary::GetGroup
// Il2CppName: GetGroup
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Funly::SkyStudio::KeyframeGroupDictionary::OnBeforeSerialize
// Il2CppName: OnBeforeSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::KeyframeGroupDictionary::*)()>(&Funly::SkyStudio::KeyframeGroupDictionary::OnBeforeSerialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::KeyframeGroupDictionary*), "OnBeforeSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::KeyframeGroupDictionary::OnAfterDeserialize
// Il2CppName: OnAfterDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::KeyframeGroupDictionary::*)()>(&Funly::SkyStudio::KeyframeGroupDictionary::OnAfterDeserialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::KeyframeGroupDictionary*), "OnAfterDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::KeyframeGroupDictionary::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::IEnumerator_1<::StringW>* (Funly::SkyStudio::KeyframeGroupDictionary::*)()>(&Funly::SkyStudio::KeyframeGroupDictionary::GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::KeyframeGroupDictionary*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::KeyframeGroupDictionary::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::IEnumerator* (Funly::SkyStudio::KeyframeGroupDictionary::*)()>(&Funly::SkyStudio::KeyframeGroupDictionary::System_Collections_IEnumerable_GetEnumerator)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::KeyframeGroupDictionary*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::KeyframeGroupDictionary::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
