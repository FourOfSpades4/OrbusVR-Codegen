// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Funly.SkyStudio.BaseSpriteItemData
#include "Funly/SkyStudio/BaseSpriteItemData.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: RainSplashData
  class RainSplashData;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::RainSplashData);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::RainSplashData*, "Funly.SkyStudio", "RainSplashData");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Size: 0x7C
  #pragma pack(push, 1)
  // Autogenerated type: Funly.SkyStudio.RainSplashData
  // [TokenAttribute] Offset: FFFFFFFF
  class RainSplashData : public ::Funly::SkyStudio::BaseSpriteItemData {
    public:
    public:
    // public UnityEngine.Vector2 depthTextureUV
    // Size: 0x8
    // Offset: 0x74
    ::UnityEngine::Vector2 depthTextureUV;
    // Field size check
    static_assert(sizeof(::UnityEngine::Vector2) == 0x8);
    public:
    // Creating conversion operator: operator ::UnityEngine::Vector2
    constexpr operator ::UnityEngine::Vector2() const noexcept {
      return depthTextureUV;
    }
    // Get instance field reference: public UnityEngine.Vector2 depthTextureUV
    [[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& dyn_depthTextureUV();
    // public System.Void .ctor()
    // Offset: 0x15153F0
    // Implemented from: Funly.SkyStudio.BaseSpriteItemData
    // Base method: System.Void BaseSpriteItemData::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static RainSplashData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::RainSplashData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<RainSplashData*, creationType>()));
    }
  }; // Funly.SkyStudio.RainSplashData
  #pragma pack(pop)
  static check_size<sizeof(RainSplashData), 116 + sizeof(::UnityEngine::Vector2)> __Funly_SkyStudio_RainSplashDataSizeCheck;
  static_assert(sizeof(RainSplashData) == 0x7C);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::RainSplashData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
