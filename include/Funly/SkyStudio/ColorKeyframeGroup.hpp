// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Funly.SkyStudio.KeyframeGroup`1
#include "Funly/SkyStudio/KeyframeGroup_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Funly::SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: ColorKeyframe
  class ColorKeyframe;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Color
  struct Color;
}
// Completed forward declares
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: ColorKeyframeGroup
  class ColorKeyframeGroup;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::ColorKeyframeGroup);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::ColorKeyframeGroup*, "Funly.SkyStudio", "ColorKeyframeGroup");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // WARNING Size may be invalid!
  // Autogenerated type: Funly.SkyStudio.ColorKeyframeGroup
  // [TokenAttribute] Offset: FFFFFFFF
  class ColorKeyframeGroup : public ::Funly::SkyStudio::KeyframeGroup_1<::Funly::SkyStudio::ColorKeyframe*> {
    public:
    // public System.Void .ctor(System.String name, Funly.SkyStudio.ColorKeyframe frame)
    // Offset: 0x150ED7C
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ColorKeyframeGroup* New_ctor(::StringW name, ::Funly::SkyStudio::ColorKeyframe* frame) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::ColorKeyframeGroup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ColorKeyframeGroup*, creationType>(name, frame)));
    }
    // public UnityEngine.Color ColorForTime(System.Single time)
    // Offset: 0x150EDF8
    ::UnityEngine::Color ColorForTime(float time);
    // public System.Void .ctor(System.String name)
    // Offset: 0x150ED1C
    // Implemented from: Funly.SkyStudio.KeyframeGroup`1
    // Base method: System.Void KeyframeGroup_1::.ctor(System.String name)
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ColorKeyframeGroup* New_ctor(::StringW name) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::ColorKeyframeGroup::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ColorKeyframeGroup*, creationType>(name)));
    }
  }; // Funly.SkyStudio.ColorKeyframeGroup
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::ColorKeyframeGroup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Funly::SkyStudio::ColorKeyframeGroup::ColorForTime
// Il2CppName: ColorForTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::ColorKeyframeGroup::*)(float)>(&Funly::SkyStudio::ColorKeyframeGroup::ColorForTime)> {
  static const MethodInfo* get() {
    static auto* time = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::ColorKeyframeGroup*), "ColorForTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{time});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::ColorKeyframeGroup::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
