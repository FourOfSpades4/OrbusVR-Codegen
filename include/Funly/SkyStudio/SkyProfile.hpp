// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: Texture2D
  class Texture2D;
  // Forward declaring type: Color
  struct Color;
  // Forward declaring type: Texture
  class Texture;
}
// Forward declaring namespace: Funly::SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: IProfileDefinition
  class IProfileDefinition;
  // Forward declaring type: KeyframeGroupDictionary
  class KeyframeGroupDictionary;
  // Forward declaring type: BoolDictionary
  class BoolDictionary;
  // Forward declaring type: LightningArtSet
  class LightningArtSet;
  // Forward declaring type: RainSplashArtSet
  class RainSplashArtSet;
  // Forward declaring type: ProfileGroupDefinition
  class ProfileGroupDefinition;
  // Forward declaring type: ProfileGroupSection
  class ProfileGroupSection;
  // Forward declaring type: ProfileFeatureSection
  class ProfileFeatureSection;
  // Forward declaring type: SpherePoint
  class SpherePoint;
  // Forward declaring type: IKeyframeGroup
  class IKeyframeGroup;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Completed forward declares
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Forward declaring type: SkyProfile
  class SkyProfile;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Funly::SkyStudio::SkyProfile);
DEFINE_IL2CPP_ARG_TYPE(::Funly::SkyStudio::SkyProfile*, "Funly.SkyStudio", "SkyProfile");
// Type namespace: Funly.SkyStudio
namespace Funly::SkyStudio {
  // Size: 0x80
  #pragma pack(push, 1)
  // Autogenerated type: Funly.SkyStudio.SkyProfile
  // [TokenAttribute] Offset: FFFFFFFF
  // [CreateAssetMenuAttribute] Offset: AD25F0
  class SkyProfile : public ::UnityEngine::ScriptableObject {
    public:
    public:
    // private UnityEngine.Material m_SkyboxMaterial
    // Size: 0x8
    // Offset: 0x18
    ::UnityEngine::Material* m_SkyboxMaterial;
    // Field size check
    static_assert(sizeof(::UnityEngine::Material*) == 0x8);
    // private System.String m_ShaderName
    // Size: 0x8
    // Offset: 0x20
    ::StringW m_ShaderName;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    // public Funly.SkyStudio.IProfileDefinition profileDefinition
    // Size: 0x8
    // Offset: 0x28
    ::Funly::SkyStudio::IProfileDefinition* profileDefinition;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::IProfileDefinition*) == 0x8);
    // public System.Collections.Generic.List`1<System.String> timelineManagedKeys
    // Size: 0x8
    // Offset: 0x30
    ::System::Collections::Generic::List_1<::StringW>* timelineManagedKeys;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<::StringW>*) == 0x8);
    // public Funly.SkyStudio.KeyframeGroupDictionary keyframeGroups
    // Size: 0x8
    // Offset: 0x38
    ::Funly::SkyStudio::KeyframeGroupDictionary* keyframeGroups;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::KeyframeGroupDictionary*) == 0x8);
    // public Funly.SkyStudio.BoolDictionary featureStatus
    // Size: 0x8
    // Offset: 0x40
    ::Funly::SkyStudio::BoolDictionary* featureStatus;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::BoolDictionary*) == 0x8);
    // public Funly.SkyStudio.LightningArtSet lightningArtSet
    // Size: 0x8
    // Offset: 0x48
    ::Funly::SkyStudio::LightningArtSet* lightningArtSet;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::LightningArtSet*) == 0x8);
    // public Funly.SkyStudio.RainSplashArtSet rainSplashArtSet
    // Size: 0x8
    // Offset: 0x50
    ::Funly::SkyStudio::RainSplashArtSet* rainSplashArtSet;
    // Field size check
    static_assert(sizeof(::Funly::SkyStudio::RainSplashArtSet*) == 0x8);
    // public UnityEngine.Texture2D starLayer1DataTexture
    // Size: 0x8
    // Offset: 0x58
    ::UnityEngine::Texture2D* starLayer1DataTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // public UnityEngine.Texture2D starLayer2DataTexture
    // Size: 0x8
    // Offset: 0x60
    ::UnityEngine::Texture2D* starLayer2DataTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // public UnityEngine.Texture2D starLayer3DataTexture
    // Size: 0x8
    // Offset: 0x68
    ::UnityEngine::Texture2D* starLayer3DataTexture;
    // Field size check
    static_assert(sizeof(::UnityEngine::Texture2D*) == 0x8);
    // private System.Int32 m_ProfileVersion
    // Size: 0x4
    // Offset: 0x70
    int m_ProfileVersion;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: m_ProfileVersion and: m_KeyToGroupInfo
    char __padding11[0x4] = {};
    // private System.Collections.Generic.Dictionary`2<System.String,Funly.SkyStudio.ProfileGroupDefinition> m_KeyToGroupInfo
    // Size: 0x8
    // Offset: 0x78
    ::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::ProfileGroupDefinition*>* m_KeyToGroupInfo;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::ProfileGroupDefinition*>*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static public System.String DefaultShaderName
    static constexpr const char* DefaultShaderName = "Funly/Sky Studio/Skybox/3D Standard";
    // Get static field: static public System.String DefaultShaderName
    static ::StringW _get_DefaultShaderName();
    // Set static field: static public System.String DefaultShaderName
    static void _set_DefaultShaderName(::StringW value);
    // Get instance field reference: private UnityEngine.Material m_SkyboxMaterial
    [[deprecated("Use field access instead!")]] ::UnityEngine::Material*& dyn_m_SkyboxMaterial();
    // Get instance field reference: private System.String m_ShaderName
    [[deprecated("Use field access instead!")]] ::StringW& dyn_m_ShaderName();
    // Get instance field reference: public Funly.SkyStudio.IProfileDefinition profileDefinition
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::IProfileDefinition*& dyn_profileDefinition();
    // Get instance field reference: public System.Collections.Generic.List`1<System.String> timelineManagedKeys
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& dyn_timelineManagedKeys();
    // Get instance field reference: public Funly.SkyStudio.KeyframeGroupDictionary keyframeGroups
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::KeyframeGroupDictionary*& dyn_keyframeGroups();
    // Get instance field reference: public Funly.SkyStudio.BoolDictionary featureStatus
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::BoolDictionary*& dyn_featureStatus();
    // Get instance field reference: public Funly.SkyStudio.LightningArtSet lightningArtSet
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::LightningArtSet*& dyn_lightningArtSet();
    // Get instance field reference: public Funly.SkyStudio.RainSplashArtSet rainSplashArtSet
    [[deprecated("Use field access instead!")]] ::Funly::SkyStudio::RainSplashArtSet*& dyn_rainSplashArtSet();
    // Get instance field reference: public UnityEngine.Texture2D starLayer1DataTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_starLayer1DataTexture();
    // Get instance field reference: public UnityEngine.Texture2D starLayer2DataTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_starLayer2DataTexture();
    // Get instance field reference: public UnityEngine.Texture2D starLayer3DataTexture
    [[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& dyn_starLayer3DataTexture();
    // Get instance field reference: private System.Int32 m_ProfileVersion
    [[deprecated("Use field access instead!")]] int& dyn_m_ProfileVersion();
    // Get instance field reference: private System.Collections.Generic.Dictionary`2<System.String,Funly.SkyStudio.ProfileGroupDefinition> m_KeyToGroupInfo
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::ProfileGroupDefinition*>*& dyn_m_KeyToGroupInfo();
    // public UnityEngine.Material get_skyboxMaterial()
    // Offset: 0x15193C8
    ::UnityEngine::Material* get_skyboxMaterial();
    // public System.Void set_skyboxMaterial(UnityEngine.Material value)
    // Offset: 0x15193D0
    void set_skyboxMaterial(::UnityEngine::Material* value);
    // public System.String get_shaderName()
    // Offset: 0x151956C
    ::StringW get_shaderName();
    // public Funly.SkyStudio.ProfileGroupSection[] get_groupDefinitions()
    // Offset: 0x1519574
    ::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> get_groupDefinitions();
    // public Funly.SkyStudio.ProfileFeatureSection[] get_featureDefinitions()
    // Offset: 0x1519634
    ::ArrayW<::Funly::SkyStudio::ProfileFeatureSection*> get_featureDefinitions();
    // public System.Single GetNumberPropertyValue(System.String propertyKey)
    // Offset: 0x15196F4
    float GetNumberPropertyValue(::StringW propertyKey);
    // public System.Single GetNumberPropertyValue(System.String propertyKey, System.Single timeOfDay)
    // Offset: 0x1511AAC
    float GetNumberPropertyValue(::StringW propertyKey, float timeOfDay);
    // public UnityEngine.Color GetColorPropertyValue(System.String propertyKey)
    // Offset: 0x15196FC
    ::UnityEngine::Color GetColorPropertyValue(::StringW propertyKey);
    // public UnityEngine.Color GetColorPropertyValue(System.String propertyKey, System.Single timeOfDay)
    // Offset: 0x1511B88
    ::UnityEngine::Color GetColorPropertyValue(::StringW propertyKey, float timeOfDay);
    // public UnityEngine.Texture GetTexturePropertyValue(System.String propertyKey)
    // Offset: 0x1519704
    ::UnityEngine::Texture* GetTexturePropertyValue(::StringW propertyKey);
    // public UnityEngine.Texture GetTexturePropertyValue(System.String propertyKey, System.Single timeOfDay)
    // Offset: 0x151970C
    ::UnityEngine::Texture* GetTexturePropertyValue(::StringW propertyKey, float timeOfDay);
    // public Funly.SkyStudio.SpherePoint GetSpherePointPropertyValue(System.String propertyKey)
    // Offset: 0x151992C
    ::Funly::SkyStudio::SpherePoint* GetSpherePointPropertyValue(::StringW propertyKey);
    // public Funly.SkyStudio.SpherePoint GetSpherePointPropertyValue(System.String propertyKey, System.Single timeOfDay)
    // Offset: 0x1519934
    ::Funly::SkyStudio::SpherePoint* GetSpherePointPropertyValue(::StringW propertyKey, float timeOfDay);
    // public System.Boolean GetBoolPropertyValue(System.String propertyKey)
    // Offset: 0x1519CFC
    bool GetBoolPropertyValue(::StringW propertyKey);
    // public System.Boolean GetBoolPropertyValue(System.String propertyKey, System.Single timeOfDay)
    // Offset: 0x1519D04
    bool GetBoolPropertyValue(::StringW propertyKey, float timeOfDay);
    // public System.Void .ctor()
    // Offset: 0x1519DE0
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SkyProfile* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SkyProfile::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SkyProfile*, creationType>()));
    }
    // private System.Void OnEnable()
    // Offset: 0x1519EE8
    void OnEnable();
    // private System.Void ReloadFullProfile()
    // Offset: 0x1519EA8
    void ReloadFullProfile();
    // private System.Void ReloadDefinitions()
    // Offset: 0x1519548
    void ReloadDefinitions();
    // private Funly.SkyStudio.IProfileDefinition GetShaderInfoForMaterial(System.String shaderName)
    // Offset: 0x151A34C
    ::Funly::SkyStudio::IProfileDefinition* GetShaderInfoForMaterial(::StringW shaderName);
    // public System.Void MergeProfileWithDefinitions()
    // Offset: 0x1519EEC
    void MergeProfileWithDefinitions();
    // public System.Void MergeGroupsWithDefinitions()
    // Offset: 0x151A400
    void MergeGroupsWithDefinitions();
    // public System.Collections.Generic.Dictionary`2<System.String,Funly.SkyStudio.ProfileGroupDefinition> GroupDefinitionDictionary()
    // Offset: 0x151AEEC
    ::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::ProfileGroupDefinition*>* GroupDefinitionDictionary();
    // public Funly.SkyStudio.ProfileGroupSection[] ProfileDefinitionTable()
    // Offset: 0x151B054
    ::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> ProfileDefinitionTable();
    // private System.Void AddNumericGroup(System.String propKey, System.String groupName, System.Single min, System.Single max, System.Single value)
    // Offset: 0x151ABE8
    void AddNumericGroup(::StringW propKey, ::StringW groupName, float min, float max, float value);
    // private System.Void AddColorGroup(System.String propKey, System.String groupName, UnityEngine.Color color)
    // Offset: 0x151AB08
    void AddColorGroup(::StringW propKey, ::StringW groupName, ::UnityEngine::Color color);
    // private System.Void AddTextureGroup(System.String propKey, System.String groupName, UnityEngine.Texture2D texture)
    // Offset: 0x151ACC0
    void AddTextureGroup(::StringW propKey, ::StringW groupName, ::UnityEngine::Texture2D* texture);
    // private System.Void AddSpherePointGroup(System.String propKey, System.String groupName, Funly.SkyStudio.SpherePoint point)
    // Offset: 0x151AD78
    void AddSpherePointGroup(::StringW propKey, ::StringW groupName, ::Funly::SkyStudio::SpherePoint* point);
    // private System.Void AddBooleanGroup(System.String propKey, System.String groupName, System.Boolean value)
    // Offset: 0x151AE30
    void AddBooleanGroup(::StringW propKey, ::StringW groupName, bool value);
    // public T GetGroup(System.String propertyKey)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    T GetGroup(::StringW propertyKey) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Funly::SkyStudio::SkyProfile::GetGroup");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroup", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyKey)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<T, false>(this, ___generic__method, propertyKey);
    }
    // public Funly.SkyStudio.IKeyframeGroup GetGroup(System.String propertyKey)
    // Offset: 0x151B23C
    ::Funly::SkyStudio::IKeyframeGroup* GetGroup(::StringW propertyKey);
    // public Funly.SkyStudio.IKeyframeGroup GetGroupWithId(System.String groupId)
    // Offset: 0x151B270
    ::Funly::SkyStudio::IKeyframeGroup* GetGroupWithId(::StringW groupId);
    // public Funly.SkyStudio.ProfileGroupSection[] GetProfileDefinitions()
    // Offset: 0x151B598
    ::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> GetProfileDefinitions();
    // public Funly.SkyStudio.ProfileGroupSection GetSectionInfo(System.String sectionKey)
    // Offset: 0x151B59C
    ::Funly::SkyStudio::ProfileGroupSection* GetSectionInfo(::StringW sectionKey);
    // public System.Boolean IsManagedByTimeline(System.String propertyKey)
    // Offset: 0x151B638
    bool IsManagedByTimeline(::StringW propertyKey);
    // public System.Void ValidateTimelineGroupKeys()
    // Offset: 0x151A080
    void ValidateTimelineGroupKeys();
    // public System.Collections.Generic.List`1<Funly.SkyStudio.ProfileGroupDefinition> GetGroupDefinitionsManagedByTimeline()
    // Offset: 0x151B6A8
    ::System::Collections::Generic::List_1<::Funly::SkyStudio::ProfileGroupDefinition*>* GetGroupDefinitionsManagedByTimeline();
    // public System.Collections.Generic.List`1<Funly.SkyStudio.ProfileGroupDefinition> GetGroupDefinitionsNotManagedByTimeline()
    // Offset: 0x151B8A8
    ::System::Collections::Generic::List_1<::Funly::SkyStudio::ProfileGroupDefinition*>* GetGroupDefinitionsNotManagedByTimeline();
    // public Funly.SkyStudio.ProfileGroupDefinition GetGroupDefinitionForKey(System.String propertyKey)
    // Offset: 0x151B820
    ::Funly::SkyStudio::ProfileGroupDefinition* GetGroupDefinitionForKey(::StringW propertyKey);
    // public System.Void RebuildKeyToGroupInfoMapping()
    // Offset: 0x1519F10
    void RebuildKeyToGroupInfoMapping();
    // public System.Void TrimGroupToSingleKeyframe(System.String propertyKey)
    // Offset: 0x151BB10
    void TrimGroupToSingleKeyframe(::StringW propertyKey);
    // public System.Boolean CanGroupBeOnTimeline(Funly.SkyStudio.ProfileGroupDefinition definition)
    // Offset: 0x151BA20
    bool CanGroupBeOnTimeline(::Funly::SkyStudio::ProfileGroupDefinition* definition);
    // protected System.Void MergeShaderKeywordsWithDefinitions()
    // Offset: 0x151A92C
    void MergeShaderKeywordsWithDefinitions();
    // public System.Boolean IsFeatureEnabled(System.String featureKey, System.Boolean recursive)
    // Offset: 0x1510838
    bool IsFeatureEnabled(::StringW featureKey, bool recursive);
    // public System.Void SetFeatureEnabled(System.String featureKey, System.Boolean value)
    // Offset: 0x151BBE8
    void SetFeatureEnabled(::StringW featureKey, bool value);
  }; // Funly.SkyStudio.SkyProfile
  #pragma pack(pop)
  static check_size<sizeof(SkyProfile), 120 + sizeof(::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::ProfileGroupDefinition*>*)> __Funly_SkyStudio_SkyProfileSizeCheck;
  static_assert(sizeof(SkyProfile) == 0x80);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::get_skyboxMaterial
// Il2CppName: get_skyboxMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Material* (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::get_skyboxMaterial)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "get_skyboxMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::set_skyboxMaterial
// Il2CppName: set_skyboxMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)(::UnityEngine::Material*)>(&Funly::SkyStudio::SkyProfile::set_skyboxMaterial)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("UnityEngine", "Material")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "set_skyboxMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::get_shaderName
// Il2CppName: get_shaderName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::get_shaderName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "get_shaderName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::get_groupDefinitions
// Il2CppName: get_groupDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::get_groupDefinitions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "get_groupDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::get_featureDefinitions
// Il2CppName: get_featureDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Funly::SkyStudio::ProfileFeatureSection*> (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::get_featureDefinitions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "get_featureDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetNumberPropertyValue
// Il2CppName: GetNumberPropertyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::GetNumberPropertyValue)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetNumberPropertyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetNumberPropertyValue
// Il2CppName: GetNumberPropertyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Funly::SkyStudio::SkyProfile::*)(::StringW, float)>(&Funly::SkyStudio::SkyProfile::GetNumberPropertyValue)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* timeOfDay = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetNumberPropertyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey, timeOfDay});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetColorPropertyValue
// Il2CppName: GetColorPropertyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::GetColorPropertyValue)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetColorPropertyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetColorPropertyValue
// Il2CppName: GetColorPropertyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Color (Funly::SkyStudio::SkyProfile::*)(::StringW, float)>(&Funly::SkyStudio::SkyProfile::GetColorPropertyValue)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* timeOfDay = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetColorPropertyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey, timeOfDay});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetTexturePropertyValue
// Il2CppName: GetTexturePropertyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::GetTexturePropertyValue)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetTexturePropertyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetTexturePropertyValue
// Il2CppName: GetTexturePropertyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::Texture* (Funly::SkyStudio::SkyProfile::*)(::StringW, float)>(&Funly::SkyStudio::SkyProfile::GetTexturePropertyValue)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* timeOfDay = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetTexturePropertyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey, timeOfDay});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetSpherePointPropertyValue
// Il2CppName: GetSpherePointPropertyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::SpherePoint* (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::GetSpherePointPropertyValue)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetSpherePointPropertyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetSpherePointPropertyValue
// Il2CppName: GetSpherePointPropertyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::SpherePoint* (Funly::SkyStudio::SkyProfile::*)(::StringW, float)>(&Funly::SkyStudio::SkyProfile::GetSpherePointPropertyValue)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* timeOfDay = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetSpherePointPropertyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey, timeOfDay});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetBoolPropertyValue
// Il2CppName: GetBoolPropertyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::GetBoolPropertyValue)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetBoolPropertyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetBoolPropertyValue
// Il2CppName: GetBoolPropertyValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Funly::SkyStudio::SkyProfile::*)(::StringW, float)>(&Funly::SkyStudio::SkyProfile::GetBoolPropertyValue)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* timeOfDay = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetBoolPropertyValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey, timeOfDay});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::OnEnable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::ReloadFullProfile
// Il2CppName: ReloadFullProfile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::ReloadFullProfile)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "ReloadFullProfile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::ReloadDefinitions
// Il2CppName: ReloadDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::ReloadDefinitions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "ReloadDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetShaderInfoForMaterial
// Il2CppName: GetShaderInfoForMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::IProfileDefinition* (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::GetShaderInfoForMaterial)> {
  static const MethodInfo* get() {
    static auto* shaderName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetShaderInfoForMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{shaderName});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::MergeProfileWithDefinitions
// Il2CppName: MergeProfileWithDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::MergeProfileWithDefinitions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "MergeProfileWithDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::MergeGroupsWithDefinitions
// Il2CppName: MergeGroupsWithDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::MergeGroupsWithDefinitions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "MergeGroupsWithDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GroupDefinitionDictionary
// Il2CppName: GroupDefinitionDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Funly::SkyStudio::ProfileGroupDefinition*>* (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::GroupDefinitionDictionary)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GroupDefinitionDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::ProfileDefinitionTable
// Il2CppName: ProfileDefinitionTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::ProfileDefinitionTable)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "ProfileDefinitionTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::AddNumericGroup
// Il2CppName: AddNumericGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)(::StringW, ::StringW, float, float, float)>(&Funly::SkyStudio::SkyProfile::AddNumericGroup)> {
  static const MethodInfo* get() {
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* min = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* max = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "AddNumericGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propKey, groupName, min, max, value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::AddColorGroup
// Il2CppName: AddColorGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)(::StringW, ::StringW, ::UnityEngine::Color)>(&Funly::SkyStudio::SkyProfile::AddColorGroup)> {
  static const MethodInfo* get() {
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* color = &::il2cpp_utils::GetClassFromName("UnityEngine", "Color")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "AddColorGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propKey, groupName, color});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::AddTextureGroup
// Il2CppName: AddTextureGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)(::StringW, ::StringW, ::UnityEngine::Texture2D*)>(&Funly::SkyStudio::SkyProfile::AddTextureGroup)> {
  static const MethodInfo* get() {
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* texture = &::il2cpp_utils::GetClassFromName("UnityEngine", "Texture2D")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "AddTextureGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propKey, groupName, texture});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::AddSpherePointGroup
// Il2CppName: AddSpherePointGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)(::StringW, ::StringW, ::Funly::SkyStudio::SpherePoint*)>(&Funly::SkyStudio::SkyProfile::AddSpherePointGroup)> {
  static const MethodInfo* get() {
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* point = &::il2cpp_utils::GetClassFromName("Funly.SkyStudio", "SpherePoint")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "AddSpherePointGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propKey, groupName, point});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::AddBooleanGroup
// Il2CppName: AddBooleanGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)(::StringW, ::StringW, bool)>(&Funly::SkyStudio::SkyProfile::AddBooleanGroup)> {
  static const MethodInfo* get() {
    static auto* propKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* groupName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "AddBooleanGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propKey, groupName, value});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetGroup
// Il2CppName: GetGroup
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetGroup
// Il2CppName: GetGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::IKeyframeGroup* (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::GetGroup)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetGroupWithId
// Il2CppName: GetGroupWithId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::IKeyframeGroup* (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::GetGroupWithId)> {
  static const MethodInfo* get() {
    static auto* groupId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetGroupWithId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{groupId});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetProfileDefinitions
// Il2CppName: GetProfileDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Funly::SkyStudio::ProfileGroupSection*> (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::GetProfileDefinitions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetProfileDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetSectionInfo
// Il2CppName: GetSectionInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupSection* (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::GetSectionInfo)> {
  static const MethodInfo* get() {
    static auto* sectionKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetSectionInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sectionKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::IsManagedByTimeline
// Il2CppName: IsManagedByTimeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::IsManagedByTimeline)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "IsManagedByTimeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::ValidateTimelineGroupKeys
// Il2CppName: ValidateTimelineGroupKeys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::ValidateTimelineGroupKeys)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "ValidateTimelineGroupKeys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetGroupDefinitionsManagedByTimeline
// Il2CppName: GetGroupDefinitionsManagedByTimeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Funly::SkyStudio::ProfileGroupDefinition*>* (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::GetGroupDefinitionsManagedByTimeline)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetGroupDefinitionsManagedByTimeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetGroupDefinitionsNotManagedByTimeline
// Il2CppName: GetGroupDefinitionsNotManagedByTimeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Funly::SkyStudio::ProfileGroupDefinition*>* (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::GetGroupDefinitionsNotManagedByTimeline)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetGroupDefinitionsNotManagedByTimeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::GetGroupDefinitionForKey
// Il2CppName: GetGroupDefinitionForKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Funly::SkyStudio::ProfileGroupDefinition* (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::GetGroupDefinitionForKey)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "GetGroupDefinitionForKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::RebuildKeyToGroupInfoMapping
// Il2CppName: RebuildKeyToGroupInfoMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::RebuildKeyToGroupInfoMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "RebuildKeyToGroupInfoMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::TrimGroupToSingleKeyframe
// Il2CppName: TrimGroupToSingleKeyframe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)(::StringW)>(&Funly::SkyStudio::SkyProfile::TrimGroupToSingleKeyframe)> {
  static const MethodInfo* get() {
    static auto* propertyKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "TrimGroupToSingleKeyframe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{propertyKey});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::CanGroupBeOnTimeline
// Il2CppName: CanGroupBeOnTimeline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Funly::SkyStudio::SkyProfile::*)(::Funly::SkyStudio::ProfileGroupDefinition*)>(&Funly::SkyStudio::SkyProfile::CanGroupBeOnTimeline)> {
  static const MethodInfo* get() {
    static auto* definition = &::il2cpp_utils::GetClassFromName("Funly.SkyStudio", "ProfileGroupDefinition")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "CanGroupBeOnTimeline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{definition});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::MergeShaderKeywordsWithDefinitions
// Il2CppName: MergeShaderKeywordsWithDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)()>(&Funly::SkyStudio::SkyProfile::MergeShaderKeywordsWithDefinitions)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "MergeShaderKeywordsWithDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::IsFeatureEnabled
// Il2CppName: IsFeatureEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Funly::SkyStudio::SkyProfile::*)(::StringW, bool)>(&Funly::SkyStudio::SkyProfile::IsFeatureEnabled)> {
  static const MethodInfo* get() {
    static auto* featureKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* recursive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "IsFeatureEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{featureKey, recursive});
  }
};
// Writing MetadataGetter for method: Funly::SkyStudio::SkyProfile::SetFeatureEnabled
// Il2CppName: SetFeatureEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Funly::SkyStudio::SkyProfile::*)(::StringW, bool)>(&Funly::SkyStudio::SkyProfile::SetFeatureEnabled)> {
  static const MethodInfo* get() {
    static auto* featureKey = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Funly::SkyStudio::SkyProfile*), "SetFeatureEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{featureKey, value});
  }
};
