// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Completed includes
// Type namespace: HighlightingSystem
namespace HighlightingSystem {
  // Forward declaring type: Easing
  struct Easing;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::HighlightingSystem::Easing, "HighlightingSystem", "Easing");
// Type namespace: HighlightingSystem
namespace HighlightingSystem {
  // Size: 0x4
  #pragma pack(push, 1)
  // Autogenerated type: HighlightingSystem.Easing
  // [TokenAttribute] Offset: FFFFFFFF
  struct Easing/*, public ::System::Enum*/ {
    public:
    public:
    // public System.Int32 value__
    // Size: 0x4
    // Offset: 0x0
    int value;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: Easing
    constexpr Easing(int value_ = {}) noexcept : value{value_} {}
    // Creating interface conversion operator: operator ::System::Enum
    operator ::System::Enum() noexcept {
      return *reinterpret_cast<::System::Enum*>(this);
    }
    // Creating conversion operator: operator int
    constexpr operator int() const noexcept {
      return value;
    }
    // static field const value: static public HighlightingSystem.Easing Linear
    static constexpr const int Linear = 0;
    // Get static field: static public HighlightingSystem.Easing Linear
    static ::HighlightingSystem::Easing _get_Linear();
    // Set static field: static public HighlightingSystem.Easing Linear
    static void _set_Linear(::HighlightingSystem::Easing value);
    // static field const value: static public HighlightingSystem.Easing QuadIn
    static constexpr const int QuadIn = 1;
    // Get static field: static public HighlightingSystem.Easing QuadIn
    static ::HighlightingSystem::Easing _get_QuadIn();
    // Set static field: static public HighlightingSystem.Easing QuadIn
    static void _set_QuadIn(::HighlightingSystem::Easing value);
    // static field const value: static public HighlightingSystem.Easing QuadOut
    static constexpr const int QuadOut = 2;
    // Get static field: static public HighlightingSystem.Easing QuadOut
    static ::HighlightingSystem::Easing _get_QuadOut();
    // Set static field: static public HighlightingSystem.Easing QuadOut
    static void _set_QuadOut(::HighlightingSystem::Easing value);
    // static field const value: static public HighlightingSystem.Easing QuadInOut
    static constexpr const int QuadInOut = 3;
    // Get static field: static public HighlightingSystem.Easing QuadInOut
    static ::HighlightingSystem::Easing _get_QuadInOut();
    // Set static field: static public HighlightingSystem.Easing QuadInOut
    static void _set_QuadInOut(::HighlightingSystem::Easing value);
    // static field const value: static public HighlightingSystem.Easing CubicIn
    static constexpr const int CubicIn = 4;
    // Get static field: static public HighlightingSystem.Easing CubicIn
    static ::HighlightingSystem::Easing _get_CubicIn();
    // Set static field: static public HighlightingSystem.Easing CubicIn
    static void _set_CubicIn(::HighlightingSystem::Easing value);
    // static field const value: static public HighlightingSystem.Easing CubicOut
    static constexpr const int CubicOut = 5;
    // Get static field: static public HighlightingSystem.Easing CubicOut
    static ::HighlightingSystem::Easing _get_CubicOut();
    // Set static field: static public HighlightingSystem.Easing CubicOut
    static void _set_CubicOut(::HighlightingSystem::Easing value);
    // static field const value: static public HighlightingSystem.Easing CubicInOut
    static constexpr const int CubicInOut = 6;
    // Get static field: static public HighlightingSystem.Easing CubicInOut
    static ::HighlightingSystem::Easing _get_CubicInOut();
    // Set static field: static public HighlightingSystem.Easing CubicInOut
    static void _set_CubicInOut(::HighlightingSystem::Easing value);
    // static field const value: static public HighlightingSystem.Easing SineIn
    static constexpr const int SineIn = 7;
    // Get static field: static public HighlightingSystem.Easing SineIn
    static ::HighlightingSystem::Easing _get_SineIn();
    // Set static field: static public HighlightingSystem.Easing SineIn
    static void _set_SineIn(::HighlightingSystem::Easing value);
    // static field const value: static public HighlightingSystem.Easing SineOut
    static constexpr const int SineOut = 8;
    // Get static field: static public HighlightingSystem.Easing SineOut
    static ::HighlightingSystem::Easing _get_SineOut();
    // Set static field: static public HighlightingSystem.Easing SineOut
    static void _set_SineOut(::HighlightingSystem::Easing value);
    // static field const value: static public HighlightingSystem.Easing SineInOut
    static constexpr const int SineInOut = 9;
    // Get static field: static public HighlightingSystem.Easing SineInOut
    static ::HighlightingSystem::Easing _get_SineInOut();
    // Set static field: static public HighlightingSystem.Easing SineInOut
    static void _set_SineInOut(::HighlightingSystem::Easing value);
    // Get instance field reference: public System.Int32 value__
    [[deprecated("Use field access instead!")]] int& dyn_value__();
  }; // HighlightingSystem.Easing
  #pragma pack(pop)
  static check_size<sizeof(Easing), 0 + sizeof(int)> __HighlightingSystem_EasingSizeCheck;
  static_assert(sizeof(Easing) == 0x4);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
