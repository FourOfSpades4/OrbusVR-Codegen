// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: HighlightingSystem.HighlighterCore
#include "HighlightingSystem/HighlighterCore.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Renderer
  class Renderer;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::HighlightingSystem::HighlighterCore::RendererData);
DEFINE_IL2CPP_ARG_TYPE(::HighlightingSystem::HighlighterCore::RendererData*, "HighlightingSystem", "HighlighterCore/RendererData");
// Type namespace: HighlightingSystem
namespace HighlightingSystem {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: HighlightingSystem.HighlighterCore/RendererData
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExcludeFromDocsAttribute] Offset: FFFFFFFF
  class HighlighterCore::RendererData : public ::Il2CppObject {
    public:
    public:
    // public UnityEngine.Renderer renderer
    // Size: 0x8
    // Offset: 0x10
    ::UnityEngine::Renderer* renderer;
    // Field size check
    static_assert(sizeof(::UnityEngine::Renderer*) == 0x8);
    // public System.Collections.Generic.List`1<System.Int32> submeshIndices
    // Size: 0x8
    // Offset: 0x18
    ::System::Collections::Generic::List_1<int>* submeshIndices;
    // Field size check
    static_assert(sizeof(::System::Collections::Generic::List_1<int>*) == 0x8);
    public:
    // Get instance field reference: public UnityEngine.Renderer renderer
    [[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& dyn_renderer();
    // Get instance field reference: public System.Collections.Generic.List`1<System.Int32> submeshIndices
    [[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& dyn_submeshIndices();
    // public System.Void .ctor()
    // Offset: 0x15E1C84
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HighlighterCore::RendererData* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::HighlightingSystem::HighlighterCore::RendererData::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HighlighterCore::RendererData*, creationType>()));
    }
  }; // HighlightingSystem.HighlighterCore/RendererData
  #pragma pack(pop)
  static check_size<sizeof(HighlighterCore::RendererData), 24 + sizeof(::System::Collections::Generic::List_1<int>*)> __HighlightingSystem_HighlighterCore_RendererDataSizeCheck;
  static_assert(sizeof(HighlighterCore::RendererData) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HighlightingSystem::HighlighterCore::RendererData::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
