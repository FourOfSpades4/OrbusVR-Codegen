// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: HighlightingSystem.HighlighterCore
#include "HighlightingSystem/HighlighterCore.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Renderer
  class Renderer;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::HighlightingSystem::HighlighterCore::RendererFilter);
DEFINE_IL2CPP_ARG_TYPE(::HighlightingSystem::HighlighterCore::RendererFilter*, "HighlightingSystem", "HighlighterCore/RendererFilter");
// Type namespace: HighlightingSystem
namespace HighlightingSystem {
  // Size: 0x70
  #pragma pack(push, 1)
  // Autogenerated type: HighlightingSystem.HighlighterCore/RendererFilter
  // [TokenAttribute] Offset: FFFFFFFF
  class HighlighterCore::RendererFilter : public ::System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x15DD960
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HighlighterCore::RendererFilter* New_ctor(::Il2CppObject* object, ::System::IntPtr method) {
      static auto ___internal__logger = ::Logger::get().WithContext("::HighlightingSystem::HighlighterCore::RendererFilter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HighlighterCore::RendererFilter*, creationType>(object, method)));
    }
    // public System.Boolean Invoke(UnityEngine.Renderer renderer, System.Collections.Generic.List`1<System.Int32> submeshIndices)
    // Offset: 0x15E0D3C
    bool Invoke(::UnityEngine::Renderer* renderer, ::System::Collections::Generic::List_1<int>* submeshIndices);
    // public System.IAsyncResult BeginInvoke(UnityEngine.Renderer renderer, System.Collections.Generic.List`1<System.Int32> submeshIndices, System.AsyncCallback callback, System.Object object)
    // Offset: 0x15E21C4
    ::System::IAsyncResult* BeginInvoke(::UnityEngine::Renderer* renderer, ::System::Collections::Generic::List_1<int>* submeshIndices, ::System::AsyncCallback* callback, ::Il2CppObject* object);
    // public System.Boolean EndInvoke(System.IAsyncResult result)
    // Offset: 0x15E21F4
    bool EndInvoke(::System::IAsyncResult* result);
  }; // HighlightingSystem.HighlighterCore/RendererFilter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: HighlightingSystem::HighlighterCore::RendererFilter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: HighlightingSystem::HighlighterCore::RendererFilter::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HighlightingSystem::HighlighterCore::RendererFilter::*)(::UnityEngine::Renderer*, ::System::Collections::Generic::List_1<int>*)>(&HighlightingSystem::HighlighterCore::RendererFilter::Invoke)> {
  static const MethodInfo* get() {
    static auto* renderer = &::il2cpp_utils::GetClassFromName("UnityEngine", "Renderer")->byval_arg;
    static auto* submeshIndices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HighlightingSystem::HighlighterCore::RendererFilter*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderer, submeshIndices});
  }
};
// Writing MetadataGetter for method: HighlightingSystem::HighlighterCore::RendererFilter::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::IAsyncResult* (HighlightingSystem::HighlighterCore::RendererFilter::*)(::UnityEngine::Renderer*, ::System::Collections::Generic::List_1<int>*, ::System::AsyncCallback*, ::Il2CppObject*)>(&HighlightingSystem::HighlighterCore::RendererFilter::BeginInvoke)> {
  static const MethodInfo* get() {
    static auto* renderer = &::il2cpp_utils::GetClassFromName("UnityEngine", "Renderer")->byval_arg;
    static auto* submeshIndices = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("System", "AsyncCallback")->byval_arg;
    static auto* object = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HighlightingSystem::HighlighterCore::RendererFilter*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{renderer, submeshIndices, callback, object});
  }
};
// Writing MetadataGetter for method: HighlightingSystem::HighlighterCore::RendererFilter::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HighlightingSystem::HighlighterCore::RendererFilter::*)(::System::IAsyncResult*)>(&HighlightingSystem::HighlighterCore::RendererFilter::EndInvoke)> {
  static const MethodInfo* get() {
    static auto* result = &::il2cpp_utils::GetClassFromName("System", "IAsyncResult")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(HighlightingSystem::HighlighterCore::RendererFilter*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{result});
  }
};
