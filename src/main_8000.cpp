// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_anySimpleType
#include "System/Xml/Schema/Datatype_anySimpleType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anySimpleType", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_anySimpleType::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anySimpleType", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anySimpleType", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_anySimpleType::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anySimpleType", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anySimpleType::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_anySimpleType::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_ValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anySimpleType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_anySimpleType::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_anySimpleType::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anySimpleType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.Compare
int System::Xml::Schema::Datatype_anySimpleType::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_anySimpleType::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_anySimpleType..cctor
void System::Xml::Schema::Datatype_anySimpleType::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anySimpleType::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_anySimpleType", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_anyAtomicType
#include "System/Xml/Schema/Datatype_anyAtomicType.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anyAtomicType::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyAtomicType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anyAtomicType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyAtomicType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyAtomicType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anyAtomicType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyAtomicType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_untypedAtomicType
#include "System/Xml/Schema/Datatype_untypedAtomicType.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_untypedAtomicType::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_untypedAtomicType::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anyAtomicType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_untypedAtomicType::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_untypedAtomicType::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anyAtomicType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_untypedAtomicType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_untypedAtomicType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_untypedAtomicType::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anyAtomicType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_string
#include "System/Xml/Schema/Datatype_string.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_string.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_string::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_string::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_string::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_string::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_string::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_string.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_string::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_string::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_boolean
#include "System/Xml/Schema/Datatype_boolean.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_boolean::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_boolean", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_boolean::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_boolean", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_boolean::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_boolean", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_boolean::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_boolean", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_boolean::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_boolean::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_boolean::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_ValueType
::System::Type* System::Xml::Schema::Datatype_boolean::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_boolean::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_boolean::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.Compare
int System::Xml::Schema::Datatype_boolean::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_boolean::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_boolean..cctor
void System::Xml::Schema::Datatype_boolean::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_boolean::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_boolean", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_float
#include "System/Xml/Schema/Datatype_float.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_float::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_float", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_float::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_float", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_float::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_float", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_float::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_float", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_float.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_float::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_float::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_float::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_ValueType
::System::Type* System::Xml::Schema::Datatype_float::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_float::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_float::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.Compare
int System::Xml::Schema::Datatype_float::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_float.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_float::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_float..cctor
void System::Xml::Schema::Datatype_float::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_float::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_float", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_double
#include "System/Xml/Schema/Datatype_double.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_double::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_double", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_double::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_double", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_double::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_double", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_double::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_double", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_double.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_double::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_double::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_double::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_ValueType
::System::Type* System::Xml::Schema::Datatype_double::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_double::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_double::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.Compare
int System::Xml::Schema::Datatype_double::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_double.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_double::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_double..cctor
void System::Xml::Schema::Datatype_double::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_double::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_double", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_decimal
#include "System/Xml/Schema/Datatype_decimal.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_decimal::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_decimal", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_decimal::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_decimal::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_decimal", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_decimal::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_decimal::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_decimal", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_decimal::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_decimal", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_decimal::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_decimal::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_decimal::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_ValueType
::System::Type* System::Xml::Schema::Datatype_decimal::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_decimal::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_decimal::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.Compare
int System::Xml::Schema::Datatype_decimal::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_decimal::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_decimal..cctor
void System::Xml::Schema::Datatype_decimal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_decimal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_decimal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_duration
#include "System/Xml/Schema/Datatype_duration.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_duration::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_duration", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_duration::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_duration", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_duration::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_duration", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_duration::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_duration", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_duration::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_duration::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_duration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_ValueType
::System::Type* System::Xml::Schema::Datatype_duration::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_duration::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_duration::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.Compare
int System::Xml::Schema::Datatype_duration::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_duration.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_duration::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_duration..cctor
void System::Xml::Schema::Datatype_duration::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_duration::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_duration", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_yearMonthDuration
#include "System/Xml/Schema/Datatype_yearMonthDuration.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_yearMonthDuration.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_yearMonthDuration::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_yearMonthDuration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_duration*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_yearMonthDuration.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_yearMonthDuration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_yearMonthDuration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_duration*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_dayTimeDuration
#include "System/Xml/Schema/Datatype_dayTimeDuration.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_dayTimeDuration.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_dayTimeDuration::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dayTimeDuration::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_duration*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_dayTimeDuration.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_dayTimeDuration::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dayTimeDuration::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_duration*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_dateTimeBase
#include "System/Xml/Schema/Datatype_dateTimeBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_dateTimeBase", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_dateTimeBase::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_dateTimeBase", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_dateTimeBase", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_dateTimeBase::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_dateTimeBase", "listValueType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XsdDateTimeFlags dateTimeFlags
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdDateTimeFlags& System::Xml::Schema::Datatype_dateTimeBase::dyn_dateTimeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::dyn_dateTimeFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTimeFlags"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdDateTimeFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_dateTimeBase::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_dateTimeBase::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_dateTimeBase::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_ValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_dateTimeBase::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_dateTimeBase::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.Compare
int System::Xml::Schema::Datatype_dateTimeBase::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_dateTimeBase::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_dateTimeBase..cctor
void System::Xml::Schema::Datatype_dateTimeBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_dateTimeBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_dateTimeBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTimeNoTimeZone
#include "System/Xml/Schema/Datatype_dateTimeNoTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTimeTimeZone
#include "System/Xml/Schema/Datatype_dateTimeTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_dateTime
#include "System/Xml/Schema/Datatype_dateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_timeNoTimeZone
#include "System/Xml/Schema/Datatype_timeNoTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_timeTimeZone
#include "System/Xml/Schema/Datatype_timeTimeZone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_time
#include "System/Xml/Schema/Datatype_time.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_time.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_time::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_time::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_dateTimeBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_date
#include "System/Xml/Schema/Datatype_date.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_date.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_date::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_date::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_dateTimeBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_yearMonth
#include "System/Xml/Schema/Datatype_yearMonth.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_yearMonth.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_yearMonth::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_yearMonth::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_dateTimeBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_year
#include "System/Xml/Schema/Datatype_year.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_year.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_year::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_year::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_dateTimeBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_monthDay
#include "System/Xml/Schema/Datatype_monthDay.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_monthDay.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_monthDay::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_monthDay::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_dateTimeBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_day
#include "System/Xml/Schema/Datatype_day.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_day.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_day::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_day::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_dateTimeBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_month
#include "System/Xml/Schema/Datatype_month.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_month.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_month::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_month::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_dateTimeBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_hexBinary
#include "System/Xml/Schema/Datatype_hexBinary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_hexBinary", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_hexBinary::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_hexBinary", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_hexBinary", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_hexBinary::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_hexBinary", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_hexBinary::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_hexBinary::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_hexBinary::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_hexBinary::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.Compare
int System::Xml::Schema::Datatype_hexBinary::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_hexBinary::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary..cctor
void System::Xml::Schema::Datatype_hexBinary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_hexBinary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_base64Binary
#include "System/Xml/Schema/Datatype_base64Binary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_base64Binary", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_base64Binary::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_base64Binary", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_base64Binary", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_base64Binary::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_base64Binary", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_base64Binary::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_base64Binary::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_base64Binary::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_base64Binary::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.Compare
int System::Xml::Schema::Datatype_base64Binary::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_base64Binary::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary..cctor
void System::Xml::Schema::Datatype_base64Binary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_base64Binary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_anyURI
#include "System/Xml/Schema/Datatype_anyURI.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anyURI", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_anyURI::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anyURI", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anyURI", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_anyURI::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anyURI", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anyURI::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_anyURI::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anyURI::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anyURI::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.Compare
int System::Xml::Schema::Datatype_anyURI::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_anyURI::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI..cctor
void System::Xml::Schema::Datatype_anyURI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_anyURI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_QName
#include "System/Xml/Schema/Datatype_QName.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_QName::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QName", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_QName::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QName", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_QName::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QName", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_QName::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QName", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_QName::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_QName::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_QName::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_QName::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ValueType
::System::Type* System::Xml::Schema::Datatype_QName::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_QName::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_QName::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_QName::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_QName..cctor
void System::Xml::Schema::Datatype_QName::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_QName", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_normalizedString
#include "System/Xml/Schema/Datatype_normalizedString.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_normalizedString::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedString::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_normalizedString::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedString::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_normalizedStringV1Compat
#include "System/Xml/Schema/Datatype_normalizedStringV1Compat.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_normalizedStringV1Compat.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_normalizedStringV1Compat::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedStringV1Compat::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_token
#include "System/Xml/Schema/Datatype_token.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_token.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_token::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_token::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_normalizedString*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_token.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_token::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_token::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_normalizedString*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_tokenV1Compat
#include "System/Xml/Schema/Datatype_tokenV1Compat.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_tokenV1Compat.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_tokenV1Compat::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_tokenV1Compat::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_normalizedStringV1Compat*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_language
#include "System/Xml/Schema/Datatype_language.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_language.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_language::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_language::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_token*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_NMTOKEN
#include "System/Xml/Schema/Datatype_NMTOKEN.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_NMTOKEN.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NMTOKEN::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NMTOKEN::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_token*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NMTOKEN.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_NMTOKEN::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NMTOKEN::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_Name
#include "System/Xml/Schema/Datatype_Name.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_Name.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_Name::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_Name::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_token*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_NCName
#include "System/Xml/Schema/Datatype_NCName.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_NCName.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NCName::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NCName::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_Name*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NCName.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_NCName::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NCName::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ID
#include "System/Xml/Schema/Datatype_ID.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ID.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_ID::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ID::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_NCName*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_ID.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ID::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ID::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_IDREF
#include "System/Xml/Schema/Datatype_IDREF.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_IDREF.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_IDREF::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_IDREF::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_NCName*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_IDREF.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_IDREF::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_IDREF::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ENTITY
#include "System/Xml/Schema/Datatype_ENTITY.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ENTITY.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_ENTITY::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ENTITY::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_NCName*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_ENTITY.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ENTITY::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ENTITY::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_NOTATION
#include "System/Xml/Schema/Datatype_NOTATION.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_NOTATION", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_NOTATION::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_NOTATION", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_NOTATION", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_NOTATION::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_NOTATION", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_NOTATION::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_NOTATION::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NOTATION::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_NOTATION::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_NOTATION::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_NOTATION::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION..cctor
void System::Xml::Schema::Datatype_NOTATION::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_NOTATION", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_integer
#include "System/Xml/Schema/Datatype_integer.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_integer.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_integer::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_integer::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_integer.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_integer::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_integer::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_nonPositiveInteger
#include "System/Xml/Schema/Datatype_nonPositiveInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonPositiveInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_nonPositiveInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_nonPositiveInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_nonPositiveInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonPositiveInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_nonPositiveInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_integer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger..cctor
void System::Xml::Schema::Datatype_nonPositiveInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_nonPositiveInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_negativeInteger
#include "System/Xml/Schema/Datatype_negativeInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_negativeInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_negativeInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_negativeInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_negativeInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_negativeInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonPositiveInteger*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_negativeInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonPositiveInteger*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger..cctor
void System::Xml::Schema::Datatype_negativeInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_negativeInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_long
#include "System/Xml/Schema/Datatype_long.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_long::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_long", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_long::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_long::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_long", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_long::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_long::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_long", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_long::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_long::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_long::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_integer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.Compare
int System::Xml::Schema::Datatype_long::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_ValueType
::System::Type* System::Xml::Schema::Datatype_long::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_long::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_long::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_integer*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_long..cctor
void System::Xml::Schema::Datatype_long::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_long", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_int
#include "System/Xml/Schema/Datatype_int.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_int::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_int", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_int::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_int::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_int", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_int::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_int::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_int", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_int::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_int::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_int::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.Compare
int System::Xml::Schema::Datatype_int::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_ValueType
::System::Type* System::Xml::Schema::Datatype_int::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_int::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_int::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_int..cctor
void System::Xml::Schema::Datatype_int::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_int", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_short
#include "System/Xml/Schema/Datatype_short.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_short::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_short", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_short::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_short::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_short", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_short::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_short::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_short", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_short::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_short::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_short::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.Compare
int System::Xml::Schema::Datatype_short::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_ValueType
::System::Type* System::Xml::Schema::Datatype_short::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_short::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_short::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_short..cctor
void System::Xml::Schema::Datatype_short::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_short", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_byte
#include "System/Xml/Schema/Datatype_byte.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_byte::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_byte", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_byte::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_byte::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_byte", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_byte::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_byte::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_byte", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_byte::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_byte::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_byte::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.Compare
int System::Xml::Schema::Datatype_byte::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_ValueType
::System::Type* System::Xml::Schema::Datatype_byte::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_byte::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_byte::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_byte..cctor
void System::Xml::Schema::Datatype_byte::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_byte", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_nonNegativeInteger
#include "System/Xml/Schema/Datatype_nonNegativeInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonNegativeInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_nonNegativeInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_nonNegativeInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_nonNegativeInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonNegativeInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_nonNegativeInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_integer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger..cctor
void System::Xml::Schema::Datatype_nonNegativeInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_nonNegativeInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedLong
#include "System/Xml/Schema/Datatype_unsignedLong.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedLong", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedLong::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedLong", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedLong::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedLong::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedLong", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedLong::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedLong::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonNegativeInteger*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedLong::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonNegativeInteger*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.Compare
int System::Xml::Schema::Datatype_unsignedLong::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedLong::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_integer*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong..cctor
void System::Xml::Schema::Datatype_unsignedLong::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedLong", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedInt
#include "System/Xml/Schema/Datatype_unsignedInt.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedInt", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedInt::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedInt", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedInt", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedInt::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedInt", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedInt::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedInt", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedInt::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedInt", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedInt::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedInt::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.Compare
int System::Xml::Schema::Datatype_unsignedInt::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedInt::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt..cctor
void System::Xml::Schema::Datatype_unsignedInt::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedInt", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedShort
#include "System/Xml/Schema/Datatype_unsignedShort.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedShort", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedShort::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedShort", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedShort", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedShort::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedShort", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedShort::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedShort", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedShort::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedShort", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedShort::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedShort::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.Compare
int System::Xml::Schema::Datatype_unsignedShort::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedShort::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort..cctor
void System::Xml::Schema::Datatype_unsignedShort::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedShort", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedByte
#include "System/Xml/Schema/Datatype_unsignedByte.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedByte", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedByte::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedByte", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedByte", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedByte::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedByte", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedByte::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedByte", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedByte::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedByte", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedByte::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedByte::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.Compare
int System::Xml::Schema::Datatype_unsignedByte::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedByte::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte..cctor
void System::Xml::Schema::Datatype_unsignedByte::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedByte", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_positiveInteger
#include "System/Xml/Schema/Datatype_positiveInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_positiveInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_positiveInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_positiveInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_positiveInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_positiveInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_positiveInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonNegativeInteger*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_positiveInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_positiveInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonNegativeInteger*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_positiveInteger..cctor
void System::Xml::Schema::Datatype_positiveInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_positiveInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_doubleXdr
#include "System/Xml/Schema/Datatype_doubleXdr.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_doubleXdr.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_doubleXdr::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_doubleXdr::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_floatXdr
#include "System/Xml/Schema/Datatype_floatXdr.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_floatXdr.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_floatXdr::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_floatXdr::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_QNameXdr
#include "System/Xml/Schema/Datatype_QNameXdr.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QNameXdr", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_QNameXdr::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QNameXdr", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QNameXdr", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_QNameXdr::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QNameXdr", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_QNameXdr::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_QNameXdr::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.get_ValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr..cctor
void System::Xml::Schema::Datatype_QNameXdr::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_QNameXdr", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ENUMERATION
#include "System/Xml/Schema/Datatype_ENUMERATION.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ENUMERATION.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ENUMERATION::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ENUMERATION::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_NMTOKEN*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_char
#include "System/Xml/Schema/Datatype_char.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_char::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_char", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_char::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_char", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_char::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_char", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_char::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_char", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_char.get_ValueType
::System::Type* System::Xml::Schema::Datatype_char::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_char::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.Compare
int System::Xml::Schema::Datatype_char::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_char::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_char::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_char..cctor
void System::Xml::Schema::Datatype_char::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_char", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_fixed
#include "System/Xml/Schema/Datatype_fixed.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_fixed.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_fixed::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_fixed::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Datatype_fixed.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_fixed::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_fixed::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_uuid
#include "System/Xml/Schema/Datatype_uuid.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_uuid::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_uuid", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_uuid::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_uuid", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_uuid::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_uuid", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_uuid::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_uuid", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.get_ValueType
::System::Type* System::Xml::Schema::Datatype_uuid::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_uuid::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.Compare
int System::Xml::Schema::Datatype_uuid::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_uuid::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_uuid::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid..cctor
void System::Xml::Schema::Datatype_uuid::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_uuid", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.DtdValidator
#include "System/Xml/Schema/DtdValidator.hpp"
// Including type: System.Xml.Schema.DtdValidator/NamespaceManager
#include "System/Xml/Schema/DtdValidator_NamespaceManager.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.IDtdParserAdapter
#include "System/Xml/IDtdParserAdapter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.DtdValidator/NamespaceManager namespaceManager
::System::Xml::Schema::DtdValidator::NamespaceManager* System::Xml::Schema::DtdValidator::_get_namespaceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::_get_namespaceManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DtdValidator::NamespaceManager*>("System.Xml.Schema", "DtdValidator", "namespaceManager"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.DtdValidator/NamespaceManager namespaceManager
void System::Xml::Schema::DtdValidator::_set_namespaceManager(::System::Xml::Schema::DtdValidator::NamespaceManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::_set_namespaceManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DtdValidator", "namespaceManager", value));
}
// Autogenerated method: System.Xml.Schema.DtdValidator.SetDefaultTypedValue
void System::Xml::Schema::DtdValidator::SetDefaultTypedValue(::System::Xml::Schema::SchemaAttDef* attdef, ::System::Xml::IDtdParserAdapter* readerAdapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::SetDefaultTypedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DtdValidator", "SetDefaultTypedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attdef), ::il2cpp_utils::ExtractType(readerAdapter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attdef, readerAdapter);
}
// Autogenerated method: System.Xml.Schema.DtdValidator..cctor
void System::Xml::Schema::DtdValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DtdValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.DtdValidator/NamespaceManager
#include "System/Xml/Schema/DtdValidator_NamespaceManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.DtdValidator/NamespaceManager.LookupNamespace
::StringW System::Xml::Schema::DtdValidator::NamespaceManager::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::NamespaceManager::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNamespaceManager*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.RestrictionFacets
#include "System/Xml/Schema/RestrictionFacets.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckLexicalFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckLexicalFacets(ByRef<::StringW> parseString, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckLexicalFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, byref(parseString), datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::Decimal value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(int64_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(int value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(int16_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::DateTime value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(double value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(float value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::StringW value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::ArrayW<uint8_t> value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::TimeSpan value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::Xml::XmlQualifiedName* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckWhitespaceFacets
void System::Xml::Schema::FacetsChecker::CheckWhitespaceFacets(ByRef<::StringW> s, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckWhitespaceFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckWhitespaceFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(datatype)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(s), datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckPatternFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckPatternFacets(::System::Xml::Schema::RestrictionFacets* restriction, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckPatternFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckPatternFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(restriction), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, restriction, value);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.MatchEnumeration
bool System::Xml::Schema::FacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.Power
::System::Decimal System::Xml::Schema::FacetsChecker::Power(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::Power");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "FacetsChecker", "Power", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Numeric10FacetsChecker
#include "System/Xml/Schema/Numeric10FacetsChecker.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] signs
::ArrayW<::Il2CppChar> System::Xml::Schema::Numeric10FacetsChecker::_get_signs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::_get_signs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Xml.Schema", "Numeric10FacetsChecker", "signs"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] signs
void System::Xml::Schema::Numeric10FacetsChecker::_set_signs(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::_set_signs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Numeric10FacetsChecker", "signs", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal maxValue
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::Numeric10FacetsChecker::dyn_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::dyn_maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxValue"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal minValue
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::Numeric10FacetsChecker::dyn_minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::dyn_minValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minValue"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration(::System::Decimal value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlValueConverter* valueConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(valueConverter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, valueConverter);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckTotalAndFractionDigits
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckTotalAndFractionDigits(::System::Decimal value, int totalDigits, int fractionDigits, bool checkTotal, bool checkFraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckTotalAndFractionDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTotalAndFractionDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(totalDigits), ::il2cpp_utils::ExtractType(fractionDigits), ::il2cpp_utils::ExtractType(checkTotal), ::il2cpp_utils::ExtractType(checkFraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, totalDigits, fractionDigits, checkTotal, checkFraction);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker..cctor
void System::Xml::Schema::Numeric10FacetsChecker::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Numeric10FacetsChecker", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(::System::Decimal value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(int64_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(int value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(int16_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Numeric2FacetsChecker
#include "System/Xml/Schema/Numeric2FacetsChecker.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration(double value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlValueConverter* valueConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(valueConverter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, valueConverter);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets(double value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets(float value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DurationFacetsChecker
#include "System/Xml/Schema/DurationFacetsChecker.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DurationFacetsChecker::MatchEnumeration(::System::TimeSpan value, ::System::Collections::ArrayList* enumeration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration);
}
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DurationFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DurationFacetsChecker::CheckValueFacets(::System::TimeSpan value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DurationFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DateTimeFacetsChecker
#include "System/Xml/Schema/DateTimeFacetsChecker.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration(::System::DateTime value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets(::System::DateTime value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.StringFacetsChecker
#include "System/Xml/Schema/StringFacetsChecker.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex languagePattern
::System::Text::RegularExpressions::Regex* System::Xml::Schema::StringFacetsChecker::_get_languagePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::_get_languagePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("System.Xml.Schema", "StringFacetsChecker", "languagePattern"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex languagePattern
void System::Xml::Schema::StringFacetsChecker::_set_languagePattern(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::_set_languagePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "StringFacetsChecker", "languagePattern", value));
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.get_LanguagePattern
::System::Text::RegularExpressions::Regex* System::Xml::Schema::StringFacetsChecker::get_LanguagePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::get_LanguagePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "StringFacetsChecker", "get_LanguagePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Regex*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckValueFacets(::StringW value, ::System::Xml::Schema::XmlSchemaDatatype* datatype, bool verifyUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckValueFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype), ::il2cpp_utils::ExtractType(verifyUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype, verifyUri);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.MatchEnumeration
bool System::Xml::Schema::StringFacetsChecker::MatchEnumeration(::StringW value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckBuiltInFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckBuiltInFacets(::StringW s, ::System::Xml::Schema::XmlTypeCode typeCode, bool verifyUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckBuiltInFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckBuiltInFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(typeCode), ::il2cpp_utils::ExtractType(verifyUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, typeCode, verifyUri);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckValueFacets(::StringW value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.MatchEnumeration
bool System::Xml::Schema::StringFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.QNameFacetsChecker
#include "System/Xml/Schema/QNameFacetsChecker.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.MatchEnumeration
bool System::Xml::Schema::QNameFacetsChecker::MatchEnumeration(::System::Xml::XmlQualifiedName* value, ::System::Collections::ArrayList* enumeration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration);
}
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::QNameFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::QNameFacetsChecker::CheckValueFacets(::System::Xml::XmlQualifiedName* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.MatchEnumeration
bool System::Xml::Schema::QNameFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.MiscFacetsChecker
#include "System/Xml/Schema/MiscFacetsChecker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.BinaryFacetsChecker
#include "System/Xml/Schema/BinaryFacetsChecker.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.MatchEnumeration
bool System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration(::ArrayW<uint8_t> value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets(::ArrayW<uint8_t> value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.MatchEnumeration
bool System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.ListFacetsChecker
#include "System/Xml/Schema/ListFacetsChecker.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.ListFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::ListFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ListFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.ListFacetsChecker.MatchEnumeration
bool System::Xml::Schema::ListFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ListFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.UnionFacetsChecker
#include "System/Xml/Schema/UnionFacetsChecker.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.UnionFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::UnionFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::UnionFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.UnionFacetsChecker.MatchEnumeration
bool System::Xml::Schema::UnionFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::UnionFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.IXmlSchemaInfo
#include "System/Xml/Schema/IXmlSchemaInfo.hpp"
// Including type: System.Xml.Schema.XmlSchemaValidity
#include "System/Xml/Schema/XmlSchemaValidity.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_Validity
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::IXmlSchemaInfo::get_Validity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_Validity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::IXmlSchemaInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaValidity, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_MemberType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::IXmlSchemaInfo::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_MemberType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::IXmlSchemaInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_SchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::IXmlSchemaInfo::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_SchemaType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::IXmlSchemaInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.NamespaceList/ListType type
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::NamespaceList::ListType& System::Xml::Schema::NamespaceList::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::NamespaceList::ListType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable set
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::NamespaceList::dyn_set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::dyn_set");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "set"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String targetNamespace
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::NamespaceList::dyn_targetNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::dyn_targetNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.get_Type
::System::Xml::Schema::NamespaceList::ListType System::Xml::Schema::NamespaceList::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::NamespaceList::ListType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.get_Excluded
::StringW System::Xml::Schema::NamespaceList::get_Excluded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::get_Excluded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Excluded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.get_Enumerate
::System::Collections::ICollection* System::Xml::Schema::NamespaceList::get_Enumerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::get_Enumerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Enumerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.Allows
bool System::Xml::Schema::NamespaceList::Allows(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::Allows");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::NamespaceList*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.Allows
bool System::Xml::Schema::NamespaceList::Allows(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::Allows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Allows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.ToString
::StringW System::Xml::Schema::NamespaceList::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.NamespaceList/ListType
#include "System/Xml/Schema/NamespaceList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.NamespaceList/ListType Any
::System::Xml::Schema::NamespaceList::ListType System::Xml::Schema::NamespaceList::ListType::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::NamespaceList::ListType>("System.Xml.Schema", "NamespaceList/ListType", "Any"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.NamespaceList/ListType Any
void System::Xml::Schema::NamespaceList::ListType::_set_Any(::System::Xml::Schema::NamespaceList::ListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "NamespaceList/ListType", "Any", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.NamespaceList/ListType Other
::System::Xml::Schema::NamespaceList::ListType System::Xml::Schema::NamespaceList::ListType::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::NamespaceList::ListType>("System.Xml.Schema", "NamespaceList/ListType", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.NamespaceList/ListType Other
void System::Xml::Schema::NamespaceList::ListType::_set_Other(::System::Xml::Schema::NamespaceList::ListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "NamespaceList/ListType", "Other", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.NamespaceList/ListType Set
::System::Xml::Schema::NamespaceList::ListType System::Xml::Schema::NamespaceList::ListType::_get_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_get_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::NamespaceList::ListType>("System.Xml.Schema", "NamespaceList/ListType", "Set"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.NamespaceList/ListType Set
void System::Xml::Schema::NamespaceList::ListType::_set_Set(::System::Xml::Schema::NamespaceList::ListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_set_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "NamespaceList/ListType", "Set", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::NamespaceList::ListType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.SchemaAttDef Empty
::System::Xml::Schema::SchemaAttDef* System::Xml::Schema::SchemaAttDef::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaAttDef*>("System.Xml.Schema", "SchemaAttDef", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.SchemaAttDef Empty
void System::Xml::Schema::SchemaAttDef::_set_Empty(::System::Xml::Schema::SchemaAttDef* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaAttDef", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String defExpanded
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::SchemaAttDef::dyn_defExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_defExpanded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defExpanded"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNum
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SchemaAttDef::dyn_lineNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_lineNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SchemaAttDef::dyn_linePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_linePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 valueLineNum
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SchemaAttDef::dyn_valueLineNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_valueLineNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueLineNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 valueLinePos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SchemaAttDef::dyn_valueLinePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_valueLinePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueLinePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaAttDef/Reserve reserved
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaAttDef::Reserve& System::Xml::Schema::SchemaAttDef::dyn_reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_reserved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reserved"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaAttDef::Reserve*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_Prefix
::StringW System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_LocalName
::StringW System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_LineNumber
int System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_LinePosition
int System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_IsNonCDataType
bool System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_IsNonCDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_IsNonCDataType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_IsDeclaredInExternal
bool System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_IsDeclaredInExternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_IsXmlAttribute
bool System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_IsXmlAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_IsXmlAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueExpanded
::StringW System::Xml::Schema::SchemaAttDef::System_Xml_IDtdDefaultAttributeInfo_get_DefaultValueExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueExpanded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueTyped
::Il2CppObject* System::Xml::Schema::SchemaAttDef::System_Xml_IDtdDefaultAttributeInfo_get_DefaultValueTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueTyped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdDefaultAttributeInfo.get_ValueLineNumber
int System::Xml::Schema::SchemaAttDef::System_Xml_IDtdDefaultAttributeInfo_get_ValueLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdDefaultAttributeInfo.get_ValueLineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdDefaultAttributeInfo.get_ValueLinePosition
int System::Xml::Schema::SchemaAttDef::System_Xml_IDtdDefaultAttributeInfo_get_ValueLinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdDefaultAttributeInfo.get_ValueLinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_LinePosition
int System::Xml::Schema::SchemaAttDef::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_LinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_LinePosition
void System::Xml::Schema::SchemaAttDef::set_LinePosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_LinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_LineNumber
int System::Xml::Schema::SchemaAttDef::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_LineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_LineNumber
void System::Xml::Schema::SchemaAttDef::set_LineNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_LineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_ValueLinePosition
int System::Xml::Schema::SchemaAttDef::get_ValueLinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_ValueLinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueLinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_ValueLinePosition
void System::Xml::Schema::SchemaAttDef::set_ValueLinePosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_ValueLinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ValueLinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_ValueLineNumber
int System::Xml::Schema::SchemaAttDef::get_ValueLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_ValueLineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueLineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_ValueLineNumber
void System::Xml::Schema::SchemaAttDef::set_ValueLineNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_ValueLineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ValueLineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_DefaultValueExpanded
::StringW System::Xml::Schema::SchemaAttDef::get_DefaultValueExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_DefaultValueExpanded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueExpanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_DefaultValueExpanded
void System::Xml::Schema::SchemaAttDef::set_DefaultValueExpanded(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_DefaultValueExpanded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultValueExpanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::SchemaAttDef::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_TokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_TokenizedType
void System::Xml::Schema::SchemaAttDef::set_TokenizedType(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_TokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_Reserved
::System::Xml::Schema::SchemaAttDef::Reserve System::Xml::Schema::SchemaAttDef::get_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_Reserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaAttDef::Reserve, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_Reserved
void System::Xml::Schema::SchemaAttDef::set_Reserved(::System::Xml::Schema::SchemaAttDef::Reserve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_Reserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Reserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.CheckXmlSpace
void System::Xml::Schema::SchemaAttDef::CheckXmlSpace(::System::Xml::IValidationEventHandling* validationEventHandling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::CheckXmlSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckXmlSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validationEventHandling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validationEventHandling);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef..cctor
void System::Xml::Schema::SchemaAttDef::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaAttDef", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaAttDef/Reserve
#include "System/Xml/Schema/SchemaAttDef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaAttDef/Reserve None
::System::Xml::Schema::SchemaAttDef::Reserve System::Xml::Schema::SchemaAttDef::Reserve::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaAttDef::Reserve>("System.Xml.Schema", "SchemaAttDef/Reserve", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaAttDef/Reserve None
void System::Xml::Schema::SchemaAttDef::Reserve::_set_None(::System::Xml::Schema::SchemaAttDef::Reserve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaAttDef/Reserve", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaAttDef/Reserve XmlSpace
::System::Xml::Schema::SchemaAttDef::Reserve System::Xml::Schema::SchemaAttDef::Reserve::_get_XmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_get_XmlSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaAttDef::Reserve>("System.Xml.Schema", "SchemaAttDef/Reserve", "XmlSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaAttDef/Reserve XmlSpace
void System::Xml::Schema::SchemaAttDef::Reserve::_set_XmlSpace(::System::Xml::Schema::SchemaAttDef::Reserve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_set_XmlSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaAttDef/Reserve", "XmlSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaAttDef/Reserve XmlLang
::System::Xml::Schema::SchemaAttDef::Reserve System::Xml::Schema::SchemaAttDef::Reserve::_get_XmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_get_XmlLang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaAttDef::Reserve>("System.Xml.Schema", "SchemaAttDef/Reserve", "XmlLang"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaAttDef/Reserve XmlLang
void System::Xml::Schema::SchemaAttDef::Reserve::_set_XmlLang(::System::Xml::Schema::SchemaAttDef::Reserve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_set_XmlLang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaAttDef/Reserve", "XmlLang", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SchemaAttDef::Reserve::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.SchemaDeclBase
#include "System/Xml/Schema/SchemaDeclBase.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlQualifiedName name
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaDeclBase::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::SchemaDeclBase::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean isDeclaredInExternal
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SchemaDeclBase::dyn_isDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_isDeclaredInExternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDeclaredInExternal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.SchemaDeclBase/Use presence
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaDeclBase::Use& System::Xml::Schema::SchemaDeclBase::dyn_presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_presence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "presence"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaDeclBase::Use*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.XmlSchemaType schemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::SchemaDeclBase::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.XmlSchemaDatatype datatype
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDatatype*& System::Xml::Schema::SchemaDeclBase::dyn_datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_datatype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "datatype"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDatatype**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Object defaultValueTyped
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::SchemaDeclBase::dyn_defaultValueTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_defaultValueTyped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultValueTyped"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int64 maxLength
[[deprecated("Use field access instead!")]] int64_t& System::Xml::Schema::SchemaDeclBase::dyn_maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLength"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int64 minLength
[[deprecated("Use field access instead!")]] int64_t& System::Xml::Schema::SchemaDeclBase::dyn_minLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_minLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minLength"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.String> values
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Xml::Schema::SchemaDeclBase::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_Name
::System::Xml::XmlQualifiedName* System::Xml::Schema::SchemaDeclBase::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_Prefix
::StringW System::Xml::Schema::SchemaDeclBase::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_IsDeclaredInExternal
bool System::Xml::Schema::SchemaDeclBase::get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_IsDeclaredInExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_IsDeclaredInExternal
void System::Xml::Schema::SchemaDeclBase::set_IsDeclaredInExternal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_IsDeclaredInExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_Presence
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::get_Presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_Presence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Presence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaDeclBase::Use, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_Presence
void System::Xml::Schema::SchemaDeclBase::set_Presence(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_Presence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Presence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_SchemaType
void System::Xml::Schema::SchemaDeclBase::set_SchemaType(::System::Xml::Schema::XmlSchemaType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_SchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_Datatype
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::SchemaDeclBase::get_Datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_Datatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Datatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_Datatype
void System::Xml::Schema::SchemaDeclBase::set_Datatype(::System::Xml::Schema::XmlSchemaDatatype* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_Datatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Datatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.AddValue
void System::Xml::Schema::SchemaDeclBase::AddValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_Values
::System::Collections::Generic::List_1<::StringW>* System::Xml::Schema::SchemaDeclBase::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_DefaultValueTyped
::Il2CppObject* System::Xml::Schema::SchemaDeclBase::get_DefaultValueTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_DefaultValueTyped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueTyped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_DefaultValueTyped
void System::Xml::Schema::SchemaDeclBase::set_DefaultValueTyped(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_DefaultValueTyped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultValueTyped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaDeclBase/Use
#include "System/Xml/Schema/SchemaDeclBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaDeclBase/Use Default
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::Use::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaDeclBase::Use>("System.Xml.Schema", "SchemaDeclBase/Use", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaDeclBase/Use Default
void System::Xml::Schema::SchemaDeclBase::Use::_set_Default(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaDeclBase/Use", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaDeclBase/Use Required
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::Use::_get_Required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_get_Required");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaDeclBase::Use>("System.Xml.Schema", "SchemaDeclBase/Use", "Required"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaDeclBase/Use Required
void System::Xml::Schema::SchemaDeclBase::Use::_set_Required(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_set_Required");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaDeclBase/Use", "Required", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaDeclBase/Use Implied
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::Use::_get_Implied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_get_Implied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaDeclBase::Use>("System.Xml.Schema", "SchemaDeclBase/Use", "Implied"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaDeclBase/Use Implied
void System::Xml::Schema::SchemaDeclBase::Use::_set_Implied(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_set_Implied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaDeclBase/Use", "Implied", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaDeclBase/Use Fixed
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::Use::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaDeclBase::Use>("System.Xml.Schema", "SchemaDeclBase/Use", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaDeclBase/Use Fixed
void System::Xml::Schema::SchemaDeclBase::Use::_set_Fixed(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaDeclBase/Use", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaDeclBase/Use RequiredFixed
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::Use::_get_RequiredFixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_get_RequiredFixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaDeclBase::Use>("System.Xml.Schema", "SchemaDeclBase/Use", "RequiredFixed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaDeclBase/Use RequiredFixed
void System::Xml::Schema::SchemaDeclBase::Use::_set_RequiredFixed(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_set_RequiredFixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaDeclBase/Use", "RequiredFixed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SchemaDeclBase::Use::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
// Including type: System.Xml.Schema.ContentValidator
#include "System/Xml/Schema/ContentValidator.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnyAttribute
#include "System/Xml/Schema/XmlSchemaAnyAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Xml.IDtdAttributeInfo
#include "System/Xml/IDtdAttributeInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.SchemaElementDecl Empty
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::SchemaElementDecl::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaElementDecl*>("System.Xml.Schema", "SchemaElementDecl", "Empty"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.SchemaElementDecl Empty
void System::Xml::Schema::SchemaElementDecl::_set_Empty(::System::Xml::Schema::SchemaElementDecl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaElementDecl", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaAttDef> attdefs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>*& System::Xml::Schema::SchemaElementDecl::dyn_attdefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_attdefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attdefs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Xml.IDtdDefaultAttributeInfo> defaultAttdefs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Xml::IDtdDefaultAttributeInfo*>*& System::Xml::Schema::SchemaElementDecl::dyn_defaultAttdefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_defaultAttdefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultAttdefs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Xml::IDtdDefaultAttributeInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isIdDeclared
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SchemaElementDecl::dyn_isIdDeclared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_isIdDeclared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isIdDeclared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasNonCDataAttribute
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SchemaElementDecl::dyn_hasNonCDataAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_hasNonCDataAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasNonCDataAttribute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasRequiredAttribute
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SchemaElementDecl::dyn_hasRequiredAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_hasRequiredAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasRequiredAttribute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isNotationDeclared
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SchemaElementDecl::dyn_isNotationDeclared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_isNotationDeclared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNotationDeclared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName> prohibitedAttributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::XmlQualifiedName*>*& System::Xml::Schema::SchemaElementDecl::dyn_prohibitedAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_prohibitedAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prohibitedAttributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::XmlQualifiedName*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ContentValidator contentValidator
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ContentValidator*& System::Xml::Schema::SchemaElementDecl::dyn_contentValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_contentValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentValidator"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ContentValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAnyAttribute anyAttribute
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAnyAttribute*& System::Xml::Schema::SchemaElementDecl::dyn_anyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_anyAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anyAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAnyAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.CreateAnyTypeElementDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::SchemaElementDecl::CreateAnyTypeElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::CreateAnyTypeElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaElementDecl", "CreateAnyTypeElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.System.Xml.IDtdAttributeListInfo.get_HasNonCDataAttributes
bool System::Xml::Schema::SchemaElementDecl::System_Xml_IDtdAttributeListInfo_get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::System.Xml.IDtdAttributeListInfo.get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaElementDecl*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.System.Xml.IDtdAttributeListInfo.LookupAttribute
::System::Xml::IDtdAttributeInfo* System::Xml::Schema::SchemaElementDecl::System_Xml_IDtdAttributeListInfo_LookupAttribute(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::System.Xml.IDtdAttributeListInfo.LookupAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaElementDecl*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.System.Xml.IDtdAttributeListInfo.LookupDefaultAttributes
::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>* System::Xml::Schema::SchemaElementDecl::System_Xml_IDtdAttributeListInfo_LookupDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::System.Xml.IDtdAttributeListInfo.LookupDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaElementDecl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_IsIdDeclared
bool System::Xml::Schema::SchemaElementDecl::get_IsIdDeclared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_IsIdDeclared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsIdDeclared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_IsIdDeclared
void System::Xml::Schema::SchemaElementDecl::set_IsIdDeclared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_IsIdDeclared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsIdDeclared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_HasNonCDataAttribute
bool System::Xml::Schema::SchemaElementDecl::get_HasNonCDataAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_HasNonCDataAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasNonCDataAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_HasNonCDataAttribute
void System::Xml::Schema::SchemaElementDecl::set_HasNonCDataAttribute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_HasNonCDataAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasNonCDataAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_IsNotationDeclared
bool System::Xml::Schema::SchemaElementDecl::get_IsNotationDeclared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_IsNotationDeclared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNotationDeclared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_IsNotationDeclared
void System::Xml::Schema::SchemaElementDecl::set_IsNotationDeclared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_IsNotationDeclared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNotationDeclared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_ContentValidator
::System::Xml::Schema::ContentValidator* System::Xml::Schema::SchemaElementDecl::get_ContentValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_ContentValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ContentValidator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_ContentValidator
void System::Xml::Schema::SchemaElementDecl::set_ContentValidator(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_ContentValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_AnyAttribute
void System::Xml::Schema::SchemaElementDecl::set_AnyAttribute(::System::Xml::Schema::XmlSchemaAnyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_AnyAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AnyAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.AddAttDef
void System::Xml::Schema::SchemaElementDecl::AddAttDef(::System::Xml::Schema::SchemaAttDef* attdef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::AddAttDef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttDef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attdef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attdef);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.GetAttDef
::System::Xml::Schema::SchemaAttDef* System::Xml::Schema::SchemaElementDecl::GetAttDef(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::GetAttDef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttDef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaAttDef*, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_DefaultAttDefs
::System::Collections::Generic::IList_1<::System::Xml::IDtdDefaultAttributeInfo*>* System::Xml::Schema::SchemaElementDecl::get_DefaultAttDefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_DefaultAttDefs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultAttDefs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::System::Xml::IDtdDefaultAttributeInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl..cctor
void System::Xml::Schema::SchemaElementDecl::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaElementDecl", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaEntity
#include "System/Xml/Schema/SchemaEntity.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName qname
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaEntity::dyn_qname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_qname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qname"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String url
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::SchemaEntity::dyn_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "url"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String pubid
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::SchemaEntity::dyn_pubid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_pubid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pubid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String text
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::SchemaEntity::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName ndata
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaEntity::dyn_ndata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_ndata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ndata"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumber
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SchemaEntity::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePosition
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SchemaEntity::dyn_linePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_linePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isParameter
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SchemaEntity::dyn_isParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_isParameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isParameter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isExternal
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SchemaEntity::dyn_isExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_isExternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isExternal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean parsingInProgress
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SchemaEntity::dyn_parsingInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_parsingInProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingInProgress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isDeclaredInExternal
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SchemaEntity::dyn_isDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_isDeclaredInExternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDeclaredInExternal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String baseURI
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::SchemaEntity::dyn_baseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_baseURI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseURI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String declaredURI
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::SchemaEntity::dyn_declaredURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_declaredURI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "declaredURI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_Name
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_IsExternal
bool System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_IsExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_IsExternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_IsDeclaredInExternal
bool System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_IsDeclaredInExternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_IsUnparsedEntity
bool System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_IsUnparsedEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_IsUnparsedEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_IsParameterEntity
bool System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_IsParameterEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_IsParameterEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_BaseUriString
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_BaseUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_BaseUriString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_DeclaredUriString
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_DeclaredUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_DeclaredUriString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_SystemId
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_SystemId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_PublicId
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_PublicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_PublicId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_Text
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_Text");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_LineNumber
int System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_LinePosition
int System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Name
::System::Xml::XmlQualifiedName* System::Xml::Schema::SchemaEntity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Url
::StringW System::Xml::Schema::SchemaEntity::get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_Url
void System::Xml::Schema::SchemaEntity::set_Url(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_Url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Pubid
::StringW System::Xml::Schema::SchemaEntity::get_Pubid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Pubid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pubid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_Pubid
void System::Xml::Schema::SchemaEntity::set_Pubid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_Pubid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pubid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_IsExternal
bool System::Xml::Schema::SchemaEntity::get_IsExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_IsExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_IsExternal
void System::Xml::Schema::SchemaEntity::set_IsExternal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_IsExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_DeclaredInExternal
bool System::Xml::Schema::SchemaEntity::get_DeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_DeclaredInExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_DeclaredInExternal
void System::Xml::Schema::SchemaEntity::set_DeclaredInExternal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_DeclaredInExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_NData
::System::Xml::XmlQualifiedName* System::Xml::Schema::SchemaEntity::get_NData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_NData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_NData
void System::Xml::Schema::SchemaEntity::set_NData(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_NData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Text
::StringW System::Xml::Schema::SchemaEntity::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_Text
void System::Xml::Schema::SchemaEntity::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Line
int System::Xml::Schema::SchemaEntity::get_Line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Line");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Line", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_Line
void System::Xml::Schema::SchemaEntity::set_Line(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_Line");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Line", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Pos
int System::Xml::Schema::SchemaEntity::get_Pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_Pos
void System::Xml::Schema::SchemaEntity::set_Pos(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_BaseURI
::StringW System::Xml::Schema::SchemaEntity::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_BaseURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_BaseURI
void System::Xml::Schema::SchemaEntity::set_BaseURI(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_BaseURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_ParsingInProgress
bool System::Xml::Schema::SchemaEntity::get_ParsingInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_ParsingInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParsingInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_ParsingInProgress
void System::Xml::Schema::SchemaEntity::set_ParsingInProgress(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_ParsingInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParsingInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_DeclaredURI
::StringW System::Xml::Schema::SchemaEntity::get_DeclaredURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_DeclaredURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaredURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_DeclaredURI
void System::Xml::Schema::SchemaEntity::set_DeclaredURI(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_DeclaredURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeclaredURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.Schema.SchemaEntity
#include "System/Xml/Schema/SchemaEntity.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.Schema.SchemaNotation
#include "System/Xml/Schema/SchemaNotation.hpp"
// Including type: System.Xml.IDtdAttributeListInfo
#include "System/Xml/IDtdAttributeListInfo.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaElementDecl> elementDecls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>*& System::Xml::Schema::SchemaInfo::dyn_elementDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_elementDecls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDecls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaElementDecl> undeclaredElementDecls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>*& System::Xml::Schema::SchemaInfo::dyn_undeclaredElementDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_undeclaredElementDecls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "undeclaredElementDecls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaEntity> generalEntities
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>*& System::Xml::Schema::SchemaInfo::dyn_generalEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_generalEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "generalEntities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaEntity> parameterEntities
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>*& System::Xml::Schema::SchemaInfo::dyn_parameterEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_parameterEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameterEntities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName docTypeName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaInfo::dyn_docTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_docTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docTypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String internalDtdSubset
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::SchemaInfo::dyn_internalDtdSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_internalDtdSubset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalDtdSubset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasNonCDataAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SchemaInfo::dyn_hasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_hasNonCDataAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasNonCDataAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasDefaultAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::SchemaInfo::dyn_hasDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_hasDefaultAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasDefaultAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Boolean> targetNamespaces
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, bool>*& System::Xml::Schema::SchemaInfo::dyn_targetNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_targetNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNamespaces"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaAttDef> attributeDecls
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>*& System::Xml::Schema::SchemaInfo::dyn_attributeDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_attributeDecls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeDecls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaType schemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaType& System::Xml::Schema::SchemaInfo::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaElementDecl> elementDeclsByType
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>*& System::Xml::Schema::SchemaInfo::dyn_elementDeclsByType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_elementDeclsByType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDeclsByType"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Xml.Schema.SchemaNotation> notations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::Schema::SchemaNotation*>*& System::Xml::Schema::SchemaInfo::dyn_notations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_notations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::Schema::SchemaNotation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.set_DocTypeName
void System::Xml::Schema::SchemaInfo::set_DocTypeName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::set_DocTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DocTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.set_InternalDtdSubset
void System::Xml::Schema::SchemaInfo::set_InternalDtdSubset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::set_InternalDtdSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InternalDtdSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_ElementDecls
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>* System::Xml::Schema::SchemaInfo::get_ElementDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_ElementDecls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementDecls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_UndeclaredElementDecls
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>* System::Xml::Schema::SchemaInfo::get_UndeclaredElementDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_UndeclaredElementDecls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UndeclaredElementDecls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_GeneralEntities
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>* System::Xml::Schema::SchemaInfo::get_GeneralEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_GeneralEntities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GeneralEntities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_ParameterEntities
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>* System::Xml::Schema::SchemaInfo::get_ParameterEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_ParameterEntities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterEntities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.set_SchemaType
void System::Xml::Schema::SchemaInfo::set_SchemaType(::System::Xml::Schema::SchemaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::set_SchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_Notations
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::Schema::SchemaNotation*>* System::Xml::Schema::SchemaInfo::get_Notations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_Notations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Notations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::Schema::SchemaNotation*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.Finish
void System::Xml::Schema::SchemaInfo::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.get_HasDefaultAttributes
bool System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_get_HasDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.get_HasDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.get_HasNonCDataAttributes
bool System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.LookupAttributeList
::System::Xml::IDtdAttributeListInfo* System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_LookupAttributeList(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.LookupAttributeList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeListInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.LookupEntity
::System::Xml::IDtdEntityInfo* System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_LookupEntity(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.LookupEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdEntityInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.get_Name
::System::Xml::XmlQualifiedName* System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.get_InternalDtdSubset
::StringW System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_get_InternalDtdSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.get_InternalDtdSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaNotation
#include "System/Xml/Schema/SchemaNotation.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName name
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNotation::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String systemLiteral
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::SchemaNotation::dyn_systemLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::dyn_systemLiteral");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "systemLiteral"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String pubid
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::SchemaNotation::dyn_pubid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::dyn_pubid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pubid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaNotation.get_Name
::System::Xml::XmlQualifiedName* System::Xml::Schema::SchemaNotation::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaNotation.set_SystemLiteral
void System::Xml::Schema::SchemaNotation::set_SystemLiteral(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::set_SystemLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SystemLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaNotation.set_Pubid
void System::Xml::Schema::SchemaNotation::set_Pubid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::set_Pubid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pubid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaType
#include "System/Xml/Schema/SchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaType None
::System::Xml::Schema::SchemaType System::Xml::Schema::SchemaType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaType>("System.Xml.Schema", "SchemaType", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaType None
void System::Xml::Schema::SchemaType::_set_None(::System::Xml::Schema::SchemaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaType DTD
::System::Xml::Schema::SchemaType System::Xml::Schema::SchemaType::_get_DTD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_get_DTD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaType>("System.Xml.Schema", "SchemaType", "DTD"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaType DTD
void System::Xml::Schema::SchemaType::_set_DTD(::System::Xml::Schema::SchemaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_set_DTD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaType", "DTD", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaType XDR
::System::Xml::Schema::SchemaType System::Xml::Schema::SchemaType::_get_XDR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_get_XDR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaType>("System.Xml.Schema", "SchemaType", "XDR"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaType XDR
void System::Xml::Schema::SchemaType::_set_XDR(::System::Xml::Schema::SchemaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_set_XDR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaType", "XDR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaType XSD
::System::Xml::Schema::SchemaType System::Xml::Schema::SchemaType::_get_XSD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_get_XSD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaType>("System.Xml.Schema", "SchemaType", "XSD"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaType XSD
void System::Xml::Schema::SchemaType::_set_XSD(::System::Xml::Schema::SchemaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_set_XSD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaType", "XSD", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::SchemaType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlAtomicValue
#include "System/Xml/Schema/XmlAtomicValue.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.Schema.XmlAtomicValue/NamespacePrefixForQName
#include "System/Xml/Schema/XmlAtomicValue_NamespacePrefixForQName.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType xmlType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::XmlAtomicValue::dyn_xmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::dyn_xmlType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object objVal
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::XmlAtomicValue::dyn_objVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::dyn_objVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objVal"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TypeCode clrType
[[deprecated("Use field access instead!")]] ::System::TypeCode& System::Xml::Schema::XmlAtomicValue::dyn_clrType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::dyn_clrType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clrType"))->offset;
  return *reinterpret_cast<::System::TypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlAtomicValue/Union unionVal
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlAtomicValue::Union& System::Xml::Schema::XmlAtomicValue::dyn_unionVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::dyn_unionVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unionVal"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlAtomicValue::Union*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlAtomicValue/NamespacePrefixForQName nsPrefix
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName*& System::Xml::Schema::XmlAtomicValue::dyn_nsPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::dyn_nsPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsPrefix"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.System.ICloneable.Clone
::Il2CppObject* System::Xml::Schema::XmlAtomicValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlAtomicValue*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.GetPrefixFromQName
::StringW System::Xml::Schema::XmlAtomicValue::GetPrefixFromQName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::GetPrefixFromQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixFromQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_XmlType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlAtomicValue::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_XmlType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueType
::System::Type* System::Xml::Schema::XmlAtomicValue::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_TypedValue
::Il2CppObject* System::Xml::Schema::XmlAtomicValue::get_TypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_TypedValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueAsBoolean
bool System::Xml::Schema::XmlAtomicValue::get_ValueAsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueAsBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueAsDateTime
::System::DateTime System::Xml::Schema::XmlAtomicValue::get_ValueAsDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueAsDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueAsDouble
double System::Xml::Schema::XmlAtomicValue::get_ValueAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueAsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 10));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueAsInt
int System::Xml::Schema::XmlAtomicValue::get_ValueAsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueAsInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueAsLong
int64_t System::Xml::Schema::XmlAtomicValue::get_ValueAsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueAsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.ValueAs
::Il2CppObject* System::Xml::Schema::XmlAtomicValue::ValueAs(::System::Type* type, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::ValueAs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_Value
::StringW System::Xml::Schema::XmlAtomicValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.ToString
::StringW System::Xml::Schema::XmlAtomicValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlAtomicValue/NamespacePrefixForQName
#include "System/Xml/Schema/XmlAtomicValue_NamespacePrefixForQName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue/NamespacePrefixForQName.LookupNamespace
::StringW System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue/NamespacePrefixForQName.LookupPrefix
::StringW System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaAnnotated
#include "System/Xml/Schema/XmlSchemaAnnotated.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaAny
#include "System/Xml/Schema/XmlSchemaAny.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaAny::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAny::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentProcessing processContents
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContentProcessing& System::Xml::Schema::XmlSchemaAny::dyn_processContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAny::dyn_processContents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processContents"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentProcessing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.NamespaceList namespaceList
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::NamespaceList*& System::Xml::Schema::XmlSchemaAny::dyn_namespaceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAny::dyn_namespaceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceList"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::NamespaceList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaAny.set_ProcessContents
void System::Xml::Schema::XmlSchemaAny::set_ProcessContents(::System::Xml::Schema::XmlSchemaContentProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAny::set_ProcessContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProcessContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaAny.get_NamespaceList
::System::Xml::Schema::NamespaceList* System::Xml::Schema::XmlSchemaAny::get_NamespaceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAny::get_NamespaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::NamespaceList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaAny.BuildNamespaceList
void System::Xml::Schema::XmlSchemaAny::BuildNamespaceList(::StringW targetNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAny::BuildNamespaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildNamespaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNamespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetNamespace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaAnyAttribute
#include "System/Xml/Schema/XmlSchemaAnyAttribute.hpp"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaAnyAttribute::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAnyAttribute::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentProcessing processContents
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContentProcessing& System::Xml::Schema::XmlSchemaAnyAttribute::dyn_processContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAnyAttribute::dyn_processContents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processContents"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentProcessing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.NamespaceList namespaceList
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::NamespaceList*& System::Xml::Schema::XmlSchemaAnyAttribute::dyn_namespaceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAnyAttribute::dyn_namespaceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceList"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::NamespaceList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaAnyAttribute.set_ProcessContents
void System::Xml::Schema::XmlSchemaAnyAttribute::set_ProcessContents(::System::Xml::Schema::XmlSchemaContentProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAnyAttribute::set_ProcessContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProcessContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaAnyAttribute.BuildNamespaceList
void System::Xml::Schema::XmlSchemaAnyAttribute::BuildNamespaceList(::StringW targetNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaAnyAttribute::BuildNamespaceList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildNamespaceList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNamespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetNamespace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaChoice
#include "System/Xml/Schema/XmlSchemaChoice.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection items
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaChoice::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaChoice::dyn_items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaChoice.get_Items
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaChoice::get_Items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaChoice::get_Items");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaGroupBase*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnyAttribute
#include "System/Xml/Schema/XmlSchemaAnyAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaContentProcessing
#include "System/Xml/Schema/XmlSchemaContentProcessing.hpp"
// Including type: System.Xml.Schema.ContentValidator
#include "System/Xml/Schema/ContentValidator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaComplexType anyTypeLax
::System::Xml::Schema::XmlSchemaComplexType* System::Xml::Schema::XmlSchemaComplexType::_get_anyTypeLax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::_get_anyTypeLax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaComplexType*>("System.Xml.Schema", "XmlSchemaComplexType", "anyTypeLax"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaComplexType anyTypeLax
void System::Xml::Schema::XmlSchemaComplexType::_set_anyTypeLax(::System::Xml::Schema::XmlSchemaComplexType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::_set_anyTypeLax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaComplexType", "anyTypeLax", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaComplexType anyTypeSkip
::System::Xml::Schema::XmlSchemaComplexType* System::Xml::Schema::XmlSchemaComplexType::_get_anyTypeSkip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::_get_anyTypeSkip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaComplexType*>("System.Xml.Schema", "XmlSchemaComplexType", "anyTypeSkip"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaComplexType anyTypeSkip
void System::Xml::Schema::XmlSchemaComplexType::_set_anyTypeSkip(::System::Xml::Schema::XmlSchemaComplexType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::_set_anyTypeSkip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaComplexType", "anyTypeSkip", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaComplexType untypedAnyType
::System::Xml::Schema::XmlSchemaComplexType* System::Xml::Schema::XmlSchemaComplexType::_get_untypedAnyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::_get_untypedAnyType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaComplexType*>("System.Xml.Schema", "XmlSchemaComplexType", "untypedAnyType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaComplexType untypedAnyType
void System::Xml::Schema::XmlSchemaComplexType::_set_untypedAnyType(::System::Xml::Schema::XmlSchemaComplexType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::_set_untypedAnyType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaComplexType", "untypedAnyType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod block
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::XmlSchemaComplexType::dyn_block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::dyn_block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "block"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaParticle contentTypeParticle
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaParticle*& System::Xml::Schema::XmlSchemaComplexType::dyn_contentTypeParticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::dyn_contentTypeParticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentTypeParticle"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaParticle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAnyAttribute attributeWildcard
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAnyAttribute*& System::Xml::Schema::XmlSchemaComplexType::dyn_attributeWildcard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::dyn_attributeWildcard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeWildcard"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAnyAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte pvFlags
[[deprecated("Use field access instead!")]] uint8_t& System::Xml::Schema::XmlSchemaComplexType::dyn_pvFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::dyn_pvFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pvFlags"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaComplexType..cctor
void System::Xml::Schema::XmlSchemaComplexType::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaComplexType", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaComplexType.CreateAnyType
::System::Xml::Schema::XmlSchemaComplexType* System::Xml::Schema::XmlSchemaComplexType::CreateAnyType(::System::Xml::Schema::XmlSchemaContentProcessing processContents) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::CreateAnyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaComplexType", "CreateAnyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processContents)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaComplexType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processContents);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaComplexType.get_AnyType
::System::Xml::Schema::XmlSchemaComplexType* System::Xml::Schema::XmlSchemaComplexType::get_AnyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::get_AnyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaComplexType", "get_AnyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaComplexType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaComplexType.get_AnyTypeContentValidator
::System::Xml::Schema::ContentValidator* System::Xml::Schema::XmlSchemaComplexType::get_AnyTypeContentValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::get_AnyTypeContentValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaComplexType", "get_AnyTypeContentValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ContentValidator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaComplexType.get_ContentTypeParticle
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::XmlSchemaComplexType::get_ContentTypeParticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::get_ContentTypeParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentTypeParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaComplexType.SetContentTypeParticle
void System::Xml::Schema::XmlSchemaComplexType::SetContentTypeParticle(::System::Xml::Schema::XmlSchemaParticle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::SetContentTypeParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContentTypeParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaComplexType.SetAttributeWildcard
void System::Xml::Schema::XmlSchemaComplexType::SetAttributeWildcard(::System::Xml::Schema::XmlSchemaAnyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::SetAttributeWildcard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributeWildcard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaComplexType.set_IsMixed
void System::Xml::Schema::XmlSchemaComplexType::set_IsMixed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaComplexType::set_IsMixed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaType*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaContentProcessing
#include "System/Xml/Schema/XmlSchemaContentProcessing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaContentProcessing None
::System::Xml::Schema::XmlSchemaContentProcessing System::Xml::Schema::XmlSchemaContentProcessing::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentProcessing::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaContentProcessing>("System.Xml.Schema", "XmlSchemaContentProcessing", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaContentProcessing None
void System::Xml::Schema::XmlSchemaContentProcessing::_set_None(::System::Xml::Schema::XmlSchemaContentProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentProcessing::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaContentProcessing", "None", value));
}
// [XmlEnumAttribute] Offset: 0xA699C4
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaContentProcessing Skip
::System::Xml::Schema::XmlSchemaContentProcessing System::Xml::Schema::XmlSchemaContentProcessing::_get_Skip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentProcessing::_get_Skip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaContentProcessing>("System.Xml.Schema", "XmlSchemaContentProcessing", "Skip"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaContentProcessing Skip
void System::Xml::Schema::XmlSchemaContentProcessing::_set_Skip(::System::Xml::Schema::XmlSchemaContentProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentProcessing::_set_Skip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaContentProcessing", "Skip", value));
}
// [XmlEnumAttribute] Offset: 0xA699FC
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaContentProcessing Lax
::System::Xml::Schema::XmlSchemaContentProcessing System::Xml::Schema::XmlSchemaContentProcessing::_get_Lax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentProcessing::_get_Lax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaContentProcessing>("System.Xml.Schema", "XmlSchemaContentProcessing", "Lax"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaContentProcessing Lax
void System::Xml::Schema::XmlSchemaContentProcessing::_set_Lax(::System::Xml::Schema::XmlSchemaContentProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentProcessing::_set_Lax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaContentProcessing", "Lax", value));
}
// [XmlEnumAttribute] Offset: 0xA69A34
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaContentProcessing Strict
::System::Xml::Schema::XmlSchemaContentProcessing System::Xml::Schema::XmlSchemaContentProcessing::_get_Strict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentProcessing::_get_Strict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaContentProcessing>("System.Xml.Schema", "XmlSchemaContentProcessing", "Strict"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaContentProcessing Strict
void System::Xml::Schema::XmlSchemaContentProcessing::_set_Strict(::System::Xml::Schema::XmlSchemaContentProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentProcessing::_set_Strict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaContentProcessing", "Strict", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaContentProcessing::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentProcessing::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaContentType
#include "System/Xml/Schema/XmlSchemaContentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaContentType TextOnly
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::XmlSchemaContentType::_get_TextOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentType::_get_TextOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaContentType>("System.Xml.Schema", "XmlSchemaContentType", "TextOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaContentType TextOnly
void System::Xml::Schema::XmlSchemaContentType::_set_TextOnly(::System::Xml::Schema::XmlSchemaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentType::_set_TextOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaContentType", "TextOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaContentType Empty
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::XmlSchemaContentType::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentType::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaContentType>("System.Xml.Schema", "XmlSchemaContentType", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaContentType Empty
void System::Xml::Schema::XmlSchemaContentType::_set_Empty(::System::Xml::Schema::XmlSchemaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentType::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaContentType", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaContentType ElementOnly
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::XmlSchemaContentType::_get_ElementOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentType::_get_ElementOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaContentType>("System.Xml.Schema", "XmlSchemaContentType", "ElementOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaContentType ElementOnly
void System::Xml::Schema::XmlSchemaContentType::_set_ElementOnly(::System::Xml::Schema::XmlSchemaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentType::_set_ElementOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaContentType", "ElementOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaContentType Mixed
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::XmlSchemaContentType::_get_Mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentType::_get_Mixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaContentType>("System.Xml.Schema", "XmlSchemaContentType", "Mixed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaContentType Mixed
void System::Xml::Schema::XmlSchemaContentType::_set_Mixed(::System::Xml::Schema::XmlSchemaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentType::_set_Mixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaContentType", "Mixed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaContentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaContentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatypeVariety
#include "System/Xml/Schema/XmlSchemaDatatypeVariety.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.RestrictionFacets
#include "System/Xml/Schema/RestrictionFacets.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.get_ValueType
::System::Type* System::Xml::Schema::XmlSchemaDatatype::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::XmlSchemaDatatype::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.ParseValue
::Il2CppObject* System::Xml::Schema::XmlSchemaDatatype::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.get_Variety
::System::Xml::Schema::XmlSchemaDatatypeVariety System::Xml::Schema::XmlSchemaDatatype::get_Variety() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::get_Variety");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatypeVariety, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlSchemaDatatype::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.get_ValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlSchemaDatatype::get_ValueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::get_ValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.get_Restriction
::System::Xml::Schema::RestrictionFacets* System::Xml::Schema::XmlSchemaDatatype::get_Restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::get_Restriction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFacets*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.Compare
int System::Xml::Schema::XmlSchemaDatatype::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.ParseValue
::Il2CppObject* System::Xml::Schema::XmlSchemaDatatype::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, bool createAtomicValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr, createAtomicValue);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.TryParseValue
::System::Exception* System::Xml::Schema::XmlSchemaDatatype::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::XmlSchemaDatatype::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::XmlSchemaDatatype::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.IsEqual
bool System::Xml::Schema::XmlSchemaDatatype::IsEqual(::Il2CppObject* o1, ::Il2CppObject* o2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::IsEqual");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaDatatype*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o1, o2);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.get_TypeCodeString
::StringW System::Xml::Schema::XmlSchemaDatatype::get_TypeCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::get_TypeCodeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.TypeCodeToString
::StringW System::Xml::Schema::XmlSchemaDatatype::TypeCodeToString(::System::Xml::Schema::XmlTypeCode typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::TypeCodeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TypeCodeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, typeCode);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaDatatype.FromXmlTokenizedType
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::XmlSchemaDatatype::FromXmlTokenizedType(::System::Xml::XmlTokenizedType token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDatatype::FromXmlTokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaDatatype", "FromXmlTokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatype*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaDerivationMethod
#include "System/Xml/Schema/XmlSchemaDerivationMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [XmlEnumAttribute] Offset: 0xA69A6C
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDerivationMethod Empty
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaDerivationMethod::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDerivationMethod>("System.Xml.Schema", "XmlSchemaDerivationMethod", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDerivationMethod Empty
void System::Xml::Schema::XmlSchemaDerivationMethod::_set_Empty(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDerivationMethod", "Empty", value));
}
// [XmlEnumAttribute] Offset: 0xA69AA4
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDerivationMethod Substitution
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaDerivationMethod::_get_Substitution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_get_Substitution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDerivationMethod>("System.Xml.Schema", "XmlSchemaDerivationMethod", "Substitution"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDerivationMethod Substitution
void System::Xml::Schema::XmlSchemaDerivationMethod::_set_Substitution(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_set_Substitution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDerivationMethod", "Substitution", value));
}
// [XmlEnumAttribute] Offset: 0xA69ADC
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDerivationMethod Extension
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaDerivationMethod::_get_Extension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_get_Extension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDerivationMethod>("System.Xml.Schema", "XmlSchemaDerivationMethod", "Extension"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDerivationMethod Extension
void System::Xml::Schema::XmlSchemaDerivationMethod::_set_Extension(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_set_Extension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDerivationMethod", "Extension", value));
}
// [XmlEnumAttribute] Offset: 0xA69B14
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDerivationMethod Restriction
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaDerivationMethod::_get_Restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_get_Restriction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDerivationMethod>("System.Xml.Schema", "XmlSchemaDerivationMethod", "Restriction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDerivationMethod Restriction
void System::Xml::Schema::XmlSchemaDerivationMethod::_set_Restriction(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_set_Restriction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDerivationMethod", "Restriction", value));
}
// [XmlEnumAttribute] Offset: 0xA69B4C
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDerivationMethod List
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaDerivationMethod::_get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_get_List");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDerivationMethod>("System.Xml.Schema", "XmlSchemaDerivationMethod", "List"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDerivationMethod List
void System::Xml::Schema::XmlSchemaDerivationMethod::_set_List(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_set_List");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDerivationMethod", "List", value));
}
// [XmlEnumAttribute] Offset: 0xA69B84
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDerivationMethod Union
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaDerivationMethod::_get_Union() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_get_Union");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDerivationMethod>("System.Xml.Schema", "XmlSchemaDerivationMethod", "Union"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDerivationMethod Union
void System::Xml::Schema::XmlSchemaDerivationMethod::_set_Union(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_set_Union");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDerivationMethod", "Union", value));
}
// [XmlEnumAttribute] Offset: 0xA69BBC
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDerivationMethod All
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaDerivationMethod::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDerivationMethod>("System.Xml.Schema", "XmlSchemaDerivationMethod", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDerivationMethod All
void System::Xml::Schema::XmlSchemaDerivationMethod::_set_All(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDerivationMethod", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaDerivationMethod None
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaDerivationMethod::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDerivationMethod>("System.Xml.Schema", "XmlSchemaDerivationMethod", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaDerivationMethod None
void System::Xml::Schema::XmlSchemaDerivationMethod::_set_None(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaDerivationMethod", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaDerivationMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaDerivationMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String res
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaException::dyn_res() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaException::dyn_res");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "res"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] args
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Xml::Schema::XmlSchemaException::dyn_args() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaException::dyn_args");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "args"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sourceUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaException::dyn_sourceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaException::dyn_sourceUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumber
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaException::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaException::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePosition
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaException::dyn_linePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaException::dyn_linePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObject sourceSchemaObject
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObject*& System::Xml::Schema::XmlSchemaException::dyn_sourceSchemaObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaException::dyn_sourceSchemaObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceSchemaObject"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String message
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaException::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaException::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaException.CreateMessage
::StringW System::Xml::Schema::XmlSchemaException::CreateMessage(::StringW res, ::ArrayW<::StringW> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaException::CreateMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaException", "CreateMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, res, args);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaException.GetObjectData
void System::Xml::Schema::XmlSchemaException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaException.get_Message
::StringW System::Xml::Schema::XmlSchemaException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaException::get_Message");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaGroupBase
#include "System/Xml/Schema/XmlSchemaGroupBase.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlSchemaGroupBase.get_Items
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaGroupBase::get_Items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupBase::get_Items");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaGroupBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.OnAdd
void System::Xml::Schema::XmlSchemaObject::OnAdd(::System::Xml::Schema::XmlSchemaObjectCollection* container, ::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::OnAdd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.OnRemove
void System::Xml::Schema::XmlSchemaObject::OnRemove(::System::Xml::Schema::XmlSchemaObjectCollection* container, ::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::OnRemove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.OnClear
void System::Xml::Schema::XmlSchemaObject::OnClear(::System::Xml::Schema::XmlSchemaObjectCollection* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::OnClear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObject parent
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObject*& System::Xml::Schema::XmlSchemaObjectCollection::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.Add
int System::Xml::Schema::XmlSchemaObjectCollection::Add(::System::Xml::Schema::XmlSchemaObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnInsert
void System::Xml::Schema::XmlSchemaObjectCollection::OnInsert(int index, ::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnInsert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnSet
void System::Xml::Schema::XmlSchemaObjectCollection::OnSet(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnSet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, oldValue, newValue);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnClear
void System::Xml::Schema::XmlSchemaObjectCollection::OnClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnClear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnRemove
void System::Xml::Schema::XmlSchemaObjectCollection::OnRemove(int index, ::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnRemove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle/EmptyParticle
#include "System/Xml/Schema/XmlSchemaParticle_EmptyParticle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.XmlSchemaParticle Empty
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::XmlSchemaParticle::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle*>("System.Xml.Schema", "XmlSchemaParticle", "Empty"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.XmlSchemaParticle Empty
void System::Xml::Schema::XmlSchemaParticle::_set_Empty(::System::Xml::Schema::XmlSchemaParticle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal minOccurs
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::XmlSchemaParticle::dyn_minOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::dyn_minOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minOccurs"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal maxOccurs
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::XmlSchemaParticle::dyn_maxOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::dyn_maxOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxOccurs"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaParticle/Occurs flags
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaParticle::Occurs& System::Xml::Schema::XmlSchemaParticle::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaParticle::Occurs*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.set_MinOccurs
void System::Xml::Schema::XmlSchemaParticle::set_MinOccurs(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::set_MinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.set_MaxOccurs
void System::Xml::Schema::XmlSchemaParticle::set_MaxOccurs(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::set_MaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle..cctor
void System::Xml::Schema::XmlSchemaParticle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaParticle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaParticle/Occurs
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaParticle/Occurs None
::System::Xml::Schema::XmlSchemaParticle::Occurs System::Xml::Schema::XmlSchemaParticle::Occurs::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle::Occurs>("System.Xml.Schema", "XmlSchemaParticle/Occurs", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaParticle/Occurs None
void System::Xml::Schema::XmlSchemaParticle::Occurs::_set_None(::System::Xml::Schema::XmlSchemaParticle::Occurs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle/Occurs", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaParticle/Occurs Min
::System::Xml::Schema::XmlSchemaParticle::Occurs System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle::Occurs>("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Min"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaParticle/Occurs Min
void System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Min(::System::Xml::Schema::XmlSchemaParticle::Occurs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Min", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaParticle/Occurs Max
::System::Xml::Schema::XmlSchemaParticle::Occurs System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle::Occurs>("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Max"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaParticle/Occurs Max
void System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Max(::System::Xml::Schema::XmlSchemaParticle::Occurs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaParticle::Occurs::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaParticle/EmptyParticle
#include "System/Xml/Schema/XmlSchemaParticle_EmptyParticle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSequence
#include "System/Xml/Schema/XmlSchemaSequence.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection items
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaSequence::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSequence::dyn_items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSequence.get_Items
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaSequence::get_Items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSequence::get_Items");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaGroupBase*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeContent
#include "System/Xml/Schema/XmlSchemaSimpleTypeContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleTypeContent content
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleTypeContent*& System::Xml::Schema::XmlSchemaSimpleType::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleType::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleTypeContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleType.get_Content
::System::Xml::Schema::XmlSchemaSimpleTypeContent* System::Xml::Schema::XmlSchemaSimpleType::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleType::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleTypeContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleType.set_Content
void System::Xml::Schema::XmlSchemaSimpleType::set_Content(::System::Xml::Schema::XmlSchemaSimpleTypeContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleType::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeContent
#include "System/Xml/Schema/XmlSchemaSimpleTypeContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeList
#include "System/Xml/Schema/XmlSchemaSimpleTypeList.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName itemTypeName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemTypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType itemType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType baseItemType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_baseItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_baseItemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseItemType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.set_ItemType
void System::Xml::Schema::XmlSchemaSimpleTypeList::set_ItemType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::set_ItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.get_BaseItemType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XmlSchemaSimpleTypeList::get_BaseItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::get_BaseItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.set_BaseItemType
void System::Xml::Schema::XmlSchemaSimpleTypeList::set_BaseItemType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::set_BaseItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeRestriction
#include "System/Xml/Schema/XmlSchemaSimpleTypeRestriction.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName baseTypeName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_baseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_baseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseTypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection facets
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_facets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_facets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facets"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeRestriction.set_BaseTypeName
void System::Xml::Schema::XmlSchemaSimpleTypeRestriction::set_BaseTypeName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::set_BaseTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeUnion
#include "System/Xml/Schema/XmlSchemaSimpleTypeUnion.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType[] baseMemberTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>& System::Xml::Schema::XmlSchemaSimpleTypeUnion::dyn_baseMemberTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeUnion::dyn_baseMemberTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMemberTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeUnion.get_BaseMemberTypes
::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> System::Xml::Schema::XmlSchemaSimpleTypeUnion::get_BaseMemberTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeUnion::get_BaseMemberTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseMemberTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod final
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::XmlSchemaType::dyn_final() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_final");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "final"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod derivedBy
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::XmlSchemaType::dyn_derivedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_derivedBy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "derivedBy"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType baseSchemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::XmlSchemaType::dyn_baseSchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_baseSchemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseSchemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDatatype datatype
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDatatype*& System::Xml::Schema::XmlSchemaType::dyn_datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_datatype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "datatype"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDatatype**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaElementDecl elementDecl
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaElementDecl*& System::Xml::Schema::XmlSchemaType::dyn_elementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_elementDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDecl"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaElementDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName qname
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaType::dyn_qname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_qname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qname"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentType contentType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContentType& System::Xml::Schema::XmlSchemaType::dyn_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_contentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XmlSchemaType::GetBuiltInSimpleType(::System::Xml::Schema::XmlTypeCode typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::GetBuiltInSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaType", "GetBuiltInSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_QualifiedName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaType::get_QualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_BaseXmlSchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlSchemaType::get_BaseXmlSchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_BaseXmlSchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseXmlSchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_DerivedBy
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaType::get_DerivedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_DerivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DerivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDerivationMethod, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_Datatype
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::XmlSchemaType::get_Datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_Datatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Datatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.set_IsMixed
void System::Xml::Schema::XmlSchemaType::set_IsMixed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::set_IsMixed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaType*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlSchemaType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_ValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlSchemaType::get_ValueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_ValueConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetQualifiedName
void System::Xml::Schema::XmlSchemaType::SetQualifiedName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetBaseSchemaType
void System::Xml::Schema::XmlSchemaType::SetBaseSchemaType(::System::Xml::Schema::XmlSchemaType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetBaseSchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBaseSchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetDerivedBy
void System::Xml::Schema::XmlSchemaType::SetDerivedBy(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetDerivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDerivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetDatatype
void System::Xml::Schema::XmlSchemaType::SetDatatype(::System::Xml::Schema::XmlSchemaDatatype* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetDatatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDatatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_ElementDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::XmlSchemaType::get_ElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_ElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.set_ElementDecl
void System::Xml::Schema::XmlSchemaType::set_ElementDecl(::System::Xml::Schema::SchemaElementDecl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::set_ElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetContentType
void System::Xml::Schema::XmlSchemaType::SetContentType(::System::Xml::Schema::XmlSchemaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaValidity
#include "System/Xml/Schema/XmlSchemaValidity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidity NotKnown
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::XmlSchemaValidity::_get_NotKnown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_get_NotKnown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidity>("System.Xml.Schema", "XmlSchemaValidity", "NotKnown"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidity NotKnown
void System::Xml::Schema::XmlSchemaValidity::_set_NotKnown(::System::Xml::Schema::XmlSchemaValidity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_set_NotKnown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidity", "NotKnown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidity Valid
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::XmlSchemaValidity::_get_Valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_get_Valid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidity>("System.Xml.Schema", "XmlSchemaValidity", "Valid"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidity Valid
void System::Xml::Schema::XmlSchemaValidity::_set_Valid(::System::Xml::Schema::XmlSchemaValidity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_set_Valid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidity", "Valid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidity Invalid
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::XmlSchemaValidity::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidity>("System.Xml.Schema", "XmlSchemaValidity", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidity Invalid
void System::Xml::Schema::XmlSchemaValidity::_set_Invalid(::System::Xml::Schema::XmlSchemaValidity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidity", "Invalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaValidity::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSeverityType Error
::System::Xml::Schema::XmlSeverityType System::Xml::Schema::XmlSeverityType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSeverityType>("System.Xml.Schema", "XmlSeverityType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSeverityType Error
void System::Xml::Schema::XmlSeverityType::_set_Error(::System::Xml::Schema::XmlSeverityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSeverityType", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSeverityType Warning
::System::Xml::Schema::XmlSeverityType System::Xml::Schema::XmlSeverityType::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSeverityType>("System.Xml.Schema", "XmlSeverityType", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSeverityType Warning
void System::Xml::Schema::XmlSeverityType::_set_Warning(::System::Xml::Schema::XmlSeverityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSeverityType", "Warning", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSeverityType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode None
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode None
void System::Xml::Schema::XmlTypeCode::_set_None(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Item
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Item");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Item"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Item
void System::Xml::Schema::XmlTypeCode::_set_Item(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Item");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Item", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Node
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Node");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Node"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Node
void System::Xml::Schema::XmlTypeCode::_set_Node(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Node");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Node", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Document
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Document
void System::Xml::Schema::XmlTypeCode::_set_Document(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Document", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Element
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Element
void System::Xml::Schema::XmlTypeCode::_set_Element(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Attribute
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Attribute
void System::Xml::Schema::XmlTypeCode::_set_Attribute(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Namespace
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Namespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Namespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Namespace
void System::Xml::Schema::XmlTypeCode::_set_Namespace(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Namespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Namespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode ProcessingInstruction
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_ProcessingInstruction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "ProcessingInstruction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode ProcessingInstruction
void System::Xml::Schema::XmlTypeCode::_set_ProcessingInstruction(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_ProcessingInstruction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "ProcessingInstruction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Comment
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Comment
void System::Xml::Schema::XmlTypeCode::_set_Comment(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Text
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Text
void System::Xml::Schema::XmlTypeCode::_set_Text(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode AnyAtomicType
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_AnyAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_AnyAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "AnyAtomicType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode AnyAtomicType
void System::Xml::Schema::XmlTypeCode::_set_AnyAtomicType(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_AnyAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "AnyAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UntypedAtomic
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UntypedAtomic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UntypedAtomic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UntypedAtomic"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UntypedAtomic
void System::Xml::Schema::XmlTypeCode::_set_UntypedAtomic(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UntypedAtomic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UntypedAtomic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode String
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode String
void System::Xml::Schema::XmlTypeCode::_set_String(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Boolean
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Boolean
void System::Xml::Schema::XmlTypeCode::_set_Boolean(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Decimal
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Decimal
void System::Xml::Schema::XmlTypeCode::_set_Decimal(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Float
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Float"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Float
void System::Xml::Schema::XmlTypeCode::_set_Float(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Double
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Double"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Double
void System::Xml::Schema::XmlTypeCode::_set_Double(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Duration
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Duration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Duration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Duration
void System::Xml::Schema::XmlTypeCode::_set_Duration(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Duration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Duration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode DateTime
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode DateTime
void System::Xml::Schema::XmlTypeCode::_set_DateTime(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Time
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Time"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Time
void System::Xml::Schema::XmlTypeCode::_set_Time(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Time", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Date
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Date"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Date
void System::Xml::Schema::XmlTypeCode::_set_Date(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GYearMonth
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GYearMonth
void System::Xml::Schema::XmlTypeCode::_set_GYearMonth(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GYear
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GYear
void System::Xml::Schema::XmlTypeCode::_set_GYear(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GYear", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GMonthDay
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GMonthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GMonthDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GMonthDay
void System::Xml::Schema::XmlTypeCode::_set_GMonthDay(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GMonthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GMonthDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GDay
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GDay
void System::Xml::Schema::XmlTypeCode::_set_GDay(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GMonth
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GMonth
void System::Xml::Schema::XmlTypeCode::_set_GMonth(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode HexBinary
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_HexBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_HexBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "HexBinary"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode HexBinary
void System::Xml::Schema::XmlTypeCode::_set_HexBinary(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_HexBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "HexBinary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Base64Binary
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Base64Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Base64Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Base64Binary"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Base64Binary
void System::Xml::Schema::XmlTypeCode::_set_Base64Binary(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Base64Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Base64Binary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode AnyUri
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_AnyUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_AnyUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "AnyUri"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode AnyUri
void System::Xml::Schema::XmlTypeCode::_set_AnyUri(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_AnyUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "AnyUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode QName
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "QName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode QName
void System::Xml::Schema::XmlTypeCode::_set_QName(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "QName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Notation
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Notation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Notation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Notation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Notation
void System::Xml::Schema::XmlTypeCode::_set_Notation(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Notation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Notation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NormalizedString
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NormalizedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NormalizedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NormalizedString"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NormalizedString
void System::Xml::Schema::XmlTypeCode::_set_NormalizedString(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NormalizedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NormalizedString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Token
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Token"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Token
void System::Xml::Schema::XmlTypeCode::_set_Token(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Token", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Language
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Language");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Language"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Language
void System::Xml::Schema::XmlTypeCode::_set_Language(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Language");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Language", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NmToken
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NmToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NmToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NmToken"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NmToken
void System::Xml::Schema::XmlTypeCode::_set_NmToken(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NmToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NmToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Name
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Name
void System::Xml::Schema::XmlTypeCode::_set_Name(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NCName
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NCName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NCName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NCName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NCName
void System::Xml::Schema::XmlTypeCode::_set_NCName(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NCName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NCName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Id
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Id");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Id"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Id
void System::Xml::Schema::XmlTypeCode::_set_Id(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Id");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Id", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Idref
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Idref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Idref");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Idref"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Idref
void System::Xml::Schema::XmlTypeCode::_set_Idref(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Idref");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Idref", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Entity
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Entity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Entity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Entity
void System::Xml::Schema::XmlTypeCode::_set_Entity(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Entity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Entity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Integer
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Integer
void System::Xml::Schema::XmlTypeCode::_set_Integer(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NonPositiveInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NonPositiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NonPositiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NonPositiveInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NonPositiveInteger
void System::Xml::Schema::XmlTypeCode::_set_NonPositiveInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NonPositiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NonPositiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NegativeInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NegativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NegativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NegativeInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NegativeInteger
void System::Xml::Schema::XmlTypeCode::_set_NegativeInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NegativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NegativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Long
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Long"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Long
void System::Xml::Schema::XmlTypeCode::_set_Long(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Long", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Int
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Int"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Int
void System::Xml::Schema::XmlTypeCode::_set_Int(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Short
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Short() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Short");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Short"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Short
void System::Xml::Schema::XmlTypeCode::_set_Short(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Short");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Short", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Byte
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Byte"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Byte
void System::Xml::Schema::XmlTypeCode::_set_Byte(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Byte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NonNegativeInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NonNegativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NonNegativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NonNegativeInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NonNegativeInteger
void System::Xml::Schema::XmlTypeCode::_set_NonNegativeInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NonNegativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NonNegativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedLong
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedLong"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedLong
void System::Xml::Schema::XmlTypeCode::_set_UnsignedLong(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedLong", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedInt
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedInt"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedInt
void System::Xml::Schema::XmlTypeCode::_set_UnsignedInt(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedInt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedShort
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedShort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedShort"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedShort
void System::Xml::Schema::XmlTypeCode::_set_UnsignedShort(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedShort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedShort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedByte
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedByte"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedByte
void System::Xml::Schema::XmlTypeCode::_set_UnsignedByte(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedByte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode PositiveInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_PositiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_PositiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "PositiveInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode PositiveInteger
void System::Xml::Schema::XmlTypeCode::_set_PositiveInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_PositiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "PositiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode YearMonthDuration
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_YearMonthDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_YearMonthDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "YearMonthDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode YearMonthDuration
void System::Xml::Schema::XmlTypeCode::_set_YearMonthDuration(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_YearMonthDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "YearMonthDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode DayTimeDuration
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_DayTimeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_DayTimeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "DayTimeDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode DayTimeDuration
void System::Xml::Schema::XmlTypeCode::_set_DayTimeDuration(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_DayTimeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "DayTimeDuration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlTypeCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlValueConverter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlValueConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToSingle
float System::Xml::Schema::XmlValueConverter::ToSingle(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToSingle
float System::Xml::Schema::XmlValueConverter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToSingle
float System::Xml::Schema::XmlValueConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlValueConverter::ToDateTimeOffset(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlValueConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlValueConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlBaseConverter
#include "System/Xml/Schema/XmlBaseConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ICollectionType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ICollectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ICollectionType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ICollectionType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ICollectionType
void System::Xml::Schema::XmlBaseConverter::_set_ICollectionType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ICollectionType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ICollectionType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type IEnumerableType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_IEnumerableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_IEnumerableType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "IEnumerableType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type IEnumerableType
void System::Xml::Schema::XmlBaseConverter::_set_IEnumerableType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_IEnumerableType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "IEnumerableType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type IListType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_IListType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_IListType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "IListType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type IListType
void System::Xml::Schema::XmlBaseConverter::_set_IListType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_IListType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "IListType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ObjectArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ObjectArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ObjectArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ObjectArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ObjectArrayType
void System::Xml::Schema::XmlBaseConverter::_set_ObjectArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ObjectArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ObjectArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type StringArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_StringArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_StringArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "StringArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type StringArrayType
void System::Xml::Schema::XmlBaseConverter::_set_StringArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_StringArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "StringArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XmlAtomicValueArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XmlAtomicValueArrayType
void System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DecimalType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DecimalType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DecimalType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DecimalType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DecimalType
void System::Xml::Schema::XmlBaseConverter::_set_DecimalType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DecimalType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DecimalType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type Int32Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_Int32Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_Int32Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "Int32Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type Int32Type
void System::Xml::Schema::XmlBaseConverter::_set_Int32Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_Int32Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "Int32Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type Int64Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_Int64Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_Int64Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "Int64Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type Int64Type
void System::Xml::Schema::XmlBaseConverter::_set_Int64Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_Int64Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "Int64Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type StringType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_StringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_StringType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "StringType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type StringType
void System::Xml::Schema::XmlBaseConverter::_set_StringType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_StringType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "StringType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XmlAtomicValueType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XmlAtomicValueType
void System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ObjectType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ObjectType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ObjectType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ObjectType
void System::Xml::Schema::XmlBaseConverter::_set_ObjectType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ObjectType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ObjectType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ByteType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ByteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ByteType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ByteType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ByteType
void System::Xml::Schema::XmlBaseConverter::_set_ByteType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ByteType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ByteType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type Int16Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_Int16Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_Int16Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "Int16Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type Int16Type
void System::Xml::Schema::XmlBaseConverter::_set_Int16Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_Int16Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "Int16Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type SByteType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_SByteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_SByteType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "SByteType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type SByteType
void System::Xml::Schema::XmlBaseConverter::_set_SByteType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_SByteType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "SByteType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UInt16Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UInt16Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UInt16Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UInt16Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UInt16Type
void System::Xml::Schema::XmlBaseConverter::_set_UInt16Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UInt16Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UInt16Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UInt32Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UInt32Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UInt32Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UInt32Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UInt32Type
void System::Xml::Schema::XmlBaseConverter::_set_UInt32Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UInt32Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UInt32Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UInt64Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UInt64Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UInt64Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UInt64Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UInt64Type
void System::Xml::Schema::XmlBaseConverter::_set_UInt64Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UInt64Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UInt64Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XPathItemType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XPathItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XPathItemType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XPathItemType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XPathItemType
void System::Xml::Schema::XmlBaseConverter::_set_XPathItemType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XPathItemType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XPathItemType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DoubleType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DoubleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DoubleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DoubleType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DoubleType
void System::Xml::Schema::XmlBaseConverter::_set_DoubleType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DoubleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DoubleType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type SingleType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_SingleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_SingleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "SingleType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type SingleType
void System::Xml::Schema::XmlBaseConverter::_set_SingleType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_SingleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "SingleType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DateTimeType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DateTimeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DateTimeType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DateTimeType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DateTimeType
void System::Xml::Schema::XmlBaseConverter::_set_DateTimeType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DateTimeType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DateTimeType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DateTimeOffsetType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DateTimeOffsetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DateTimeOffsetType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DateTimeOffsetType
void System::Xml::Schema::XmlBaseConverter::_set_DateTimeOffsetType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DateTimeOffsetType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type BooleanType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_BooleanType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_BooleanType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "BooleanType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type BooleanType
void System::Xml::Schema::XmlBaseConverter::_set_BooleanType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_BooleanType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "BooleanType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ByteArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ByteArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ByteArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ByteArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ByteArrayType
void System::Xml::Schema::XmlBaseConverter::_set_ByteArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ByteArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ByteArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XmlQualifiedNameType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XmlQualifiedNameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XmlQualifiedNameType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XmlQualifiedNameType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XmlQualifiedNameType
void System::Xml::Schema::XmlBaseConverter::_set_XmlQualifiedNameType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XmlQualifiedNameType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XmlQualifiedNameType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UriType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UriType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UriType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UriType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UriType
void System::Xml::Schema::XmlBaseConverter::_set_UriType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UriType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UriType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type TimeSpanType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_TimeSpanType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_TimeSpanType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "TimeSpanType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type TimeSpanType
void System::Xml::Schema::XmlBaseConverter::_set_TimeSpanType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_TimeSpanType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "TimeSpanType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XPathNavigatorType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XPathNavigatorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XPathNavigatorType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XPathNavigatorType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XPathNavigatorType
void System::Xml::Schema::XmlBaseConverter::_set_XPathNavigatorType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XPathNavigatorType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XPathNavigatorType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType schemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::XmlBaseConverter::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlTypeCode typeCode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlTypeCode& System::Xml::Schema::XmlBaseConverter::dyn_typeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::dyn_typeCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeCode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlTypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type clrTypeDefault
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Schema::XmlBaseConverter::dyn_clrTypeDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::dyn_clrTypeDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clrTypeDefault"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_SchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlBaseConverter::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_SchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlBaseConverter::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_XmlTypeName
::StringW System::Xml::Schema::XmlBaseConverter::get_XmlTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_XmlTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_DefaultClrType
::System::Type* System::Xml::Schema::XmlBaseConverter::get_DefaultClrType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_DefaultClrType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultClrType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.IsDerivedFrom
bool System::Xml::Schema::XmlBaseConverter::IsDerivedFrom(::System::Type* derivedType, ::System::Type* baseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::IsDerivedFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "IsDerivedFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedType), ::il2cpp_utils::ExtractType(baseType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, derivedType, baseType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.CreateInvalidClrMappingException
::System::Exception* System::Xml::Schema::XmlBaseConverter::CreateInvalidClrMappingException(::System::Type* sourceType, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::CreateInvalidClrMappingException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInvalidClrMappingException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, sourceType, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.QNameToString
::StringW System::Xml::Schema::XmlBaseConverter::QNameToString(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::QNameToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "QNameToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeListType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeListType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeListType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToBase64Binary
::ArrayW<uint8_t> System::Xml::Schema::XmlBaseConverter::StringToBase64Binary(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToBase64Binary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToBase64Binary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDate
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToDate(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDayTimeDuration
::System::TimeSpan System::Xml::Schema::XmlBaseConverter::StringToDayTimeDuration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDayTimeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDayTimeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDuration
::System::TimeSpan System::Xml::Schema::XmlBaseConverter::StringToDuration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGDay
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGDay(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonth
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGMonth(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonthDay
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGMonthDay(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonthDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonthDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYear
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGYear(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYearMonth
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGYearMonth(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYearMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYearMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDateOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToDateOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDateOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDateOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGDayOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGDayOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGDayOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGDayOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonthOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGMonthOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonthOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonthOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonthDayOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGMonthDayOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonthDayOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonthDayOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYearOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGYearOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYearOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYearOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYearMonthOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGYearMonthOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYearMonthOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYearMonthOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToHexBinary
::ArrayW<uint8_t> System::Xml::Schema::XmlBaseConverter::StringToHexBinary(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToHexBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToHexBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToQName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlBaseConverter::StringToQName(::StringW value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToYearMonthDuration
::System::TimeSpan System::Xml::Schema::XmlBaseConverter::StringToYearMonthDuration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToYearMonthDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToYearMonthDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.AnyUriToString
::StringW System::Xml::Schema::XmlBaseConverter::AnyUriToString(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::AnyUriToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "AnyUriToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Base64BinaryToString
::StringW System::Xml::Schema::XmlBaseConverter::Base64BinaryToString(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Base64BinaryToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Base64BinaryToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateToString
::StringW System::Xml::Schema::XmlBaseConverter::DateToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateTimeToString
::StringW System::Xml::Schema::XmlBaseConverter::DateTimeToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DayTimeDurationToString
::StringW System::Xml::Schema::XmlBaseConverter::DayTimeDurationToString(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DayTimeDurationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DayTimeDurationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DurationToString
::StringW System::Xml::Schema::XmlBaseConverter::DurationToString(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DurationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DurationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GDayToString
::StringW System::Xml::Schema::XmlBaseConverter::GDayToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GDayToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GDayToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthDayToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthDayToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthDayToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthDayToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearMonthToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearMonthToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearMonthToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearMonthToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::DateOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateTimeOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GDayOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GDayOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GDayOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GDayOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthDayOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthDayOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthDayOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthDayOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearMonthOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearMonthOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearMonthOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearMonthOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.QNameToString
::StringW System::Xml::Schema::XmlBaseConverter::QNameToString(::System::Xml::XmlQualifiedName* qname, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::QNameToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "QNameToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qname, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.TimeToString
::StringW System::Xml::Schema::XmlBaseConverter::TimeToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::TimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "TimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.TimeOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::TimeOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::TimeOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "TimeOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.YearMonthDurationToString
::StringW System::Xml::Schema::XmlBaseConverter::YearMonthDurationToString(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::YearMonthDurationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "YearMonthDurationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateTimeOffsetToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DecimalToInt32
int System::Xml::Schema::XmlBaseConverter::DecimalToInt32(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DecimalToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DecimalToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DecimalToInt64
int64_t System::Xml::Schema::XmlBaseConverter::DecimalToInt64(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DecimalToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DecimalToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DecimalToUInt64
uint64_t System::Xml::Schema::XmlBaseConverter::DecimalToUInt64(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DecimalToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DecimalToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToByte
uint8_t System::Xml::Schema::XmlBaseConverter::Int32ToByte(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToInt16
int16_t System::Xml::Schema::XmlBaseConverter::Int32ToInt16(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToSByte
int8_t System::Xml::Schema::XmlBaseConverter::Int32ToSByte(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToUInt16
uint16_t System::Xml::Schema::XmlBaseConverter::Int32ToUInt16(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int64ToInt32
int System::Xml::Schema::XmlBaseConverter::Int64ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int64ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int64ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int64ToUInt32
uint System::Xml::Schema::XmlBaseConverter::Int64ToUInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int64ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int64ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.UntypedAtomicToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "UntypedAtomicToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.UntypedAtomicToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "UntypedAtomicToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter..cctor
void System::Xml::Schema::XmlBaseConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlBaseConverter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlBaseConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 24));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 27));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 25));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 26));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 28));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToSingle
float System::Xml::Schema::XmlBaseConverter::ToSingle(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 30));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToSingle
float System::Xml::Schema::XmlBaseConverter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 31));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToSingle
float System::Xml::Schema::XmlBaseConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 50));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 51));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 60));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlNumeric10Converter
#include "System/Xml/Schema/XmlNumeric10Converter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlNumeric10Converter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlNumeric10Converter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToDecimal
::System::Decimal System::Xml::Schema::XmlNumeric10Converter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToDecimal
::System::Decimal System::Xml::Schema::XmlNumeric10Converter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt32
int System::Xml::Schema::XmlNumeric10Converter::ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt32
int System::Xml::Schema::XmlNumeric10Converter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt32
int System::Xml::Schema::XmlNumeric10Converter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt64
int64_t System::Xml::Schema::XmlNumeric10Converter::ToInt64(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt64
int64_t System::Xml::Schema::XmlNumeric10Converter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt64
int64_t System::Xml::Schema::XmlNumeric10Converter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlNumeric2Converter
#include "System/Xml/Schema/XmlNumeric2Converter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlNumeric2Converter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlNumeric2Converter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToDouble
double System::Xml::Schema::XmlNumeric2Converter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 28));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToDouble
double System::Xml::Schema::XmlNumeric2Converter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToSingle
float System::Xml::Schema::XmlNumeric2Converter::ToSingle(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 30));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToSingle
float System::Xml::Schema::XmlNumeric2Converter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 31));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToSingle
float System::Xml::Schema::XmlNumeric2Converter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToString
::StringW System::Xml::Schema::XmlNumeric2Converter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToString
::StringW System::Xml::Schema::XmlNumeric2Converter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToString
::StringW System::Xml::Schema::XmlNumeric2Converter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric2Converter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric2Converter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric2Converter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlDateTimeConverter
#include "System/Xml/Schema/XmlDateTimeConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlDateTimeConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlDateTimeConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlDateTimeConverter::ToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlDateTimeConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlDateTimeConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToString
::StringW System::Xml::Schema::XmlDateTimeConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToString
::StringW System::Xml::Schema::XmlDateTimeConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 50));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToString
::StringW System::Xml::Schema::XmlDateTimeConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlDateTimeConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlDateTimeConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlDateTimeConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlBooleanConverter
#include "System/Xml/Schema/XmlBooleanConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlBooleanConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBooleanConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToBoolean
bool System::Xml::Schema::XmlBooleanConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToBoolean
bool System::Xml::Schema::XmlBooleanConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToString
::StringW System::Xml::Schema::XmlBooleanConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToString
::StringW System::Xml::Schema::XmlBooleanConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBooleanConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBooleanConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBooleanConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlMiscConverter
#include "System/Xml/Schema/XmlMiscConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlMiscConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlMiscConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ToString
::StringW System::Xml::Schema::XmlMiscConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlStringConverter
#include "System/Xml/Schema/XmlStringConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlStringConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlStringConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlStringConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlStringConverter.ToString
::StringW System::Xml::Schema::XmlStringConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlStringConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlStringConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlStringConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlStringConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlUntypedConverter
#include "System/Xml/Schema/XmlUntypedConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter Untyped
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlUntypedConverter::_get_Untyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_get_Untyped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlUntypedConverter", "Untyped"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter Untyped
void System::Xml::Schema::XmlUntypedConverter::_set_Untyped(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_set_Untyped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlUntypedConverter", "Untyped", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter UntypedList
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlUntypedConverter::_get_UntypedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_get_UntypedList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlUntypedConverter", "UntypedList"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter UntypedList
void System::Xml::Schema::XmlUntypedConverter::_set_UntypedList(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_set_UntypedList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlUntypedConverter", "UntypedList", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowListToList
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlUntypedConverter::dyn_allowListToList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::dyn_allowListToList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowListToList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.SupportsType
bool System::Xml::Schema::XmlUntypedConverter::SupportsType(::System::Type* clrType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::SupportsType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportsType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clrType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clrType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToBoolean
bool System::Xml::Schema::XmlUntypedConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToBoolean
bool System::Xml::Schema::XmlUntypedConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlUntypedConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlUntypedConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlUntypedConverter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlUntypedConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDouble
double System::Xml::Schema::XmlUntypedConverter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 28));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDouble
double System::Xml::Schema::XmlUntypedConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt32
int System::Xml::Schema::XmlUntypedConverter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt32
int System::Xml::Schema::XmlUntypedConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt64
int64_t System::Xml::Schema::XmlUntypedConverter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt64
int64_t System::Xml::Schema::XmlUntypedConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToSingle
float System::Xml::Schema::XmlUntypedConverter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 31));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToSingle
float System::Xml::Schema::XmlUntypedConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 50));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlListConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeListType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeListType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeListType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlListConverter*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter..cctor
void System::Xml::Schema::XmlUntypedConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlUntypedConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlAnyConverter
#include "System/Xml/Schema/XmlAnyConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XPath.XPathNavigator
#include "System/Xml/XPath/XPathNavigator.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter Item
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyConverter::_get_Item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_get_Item");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyConverter", "Item"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter Item
void System::Xml::Schema::XmlAnyConverter::_set_Item(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_set_Item");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyConverter", "Item", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomic
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyConverter::_get_AnyAtomic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_get_AnyAtomic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyConverter", "AnyAtomic"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomic
void System::Xml::Schema::XmlAnyConverter::_set_AnyAtomic(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_set_AnyAtomic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyConverter", "AnyAtomic", value));
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToNavigator
::System::Xml::XPath::XPathNavigator* System::Xml::Schema::XmlAnyConverter::ToNavigator(::System::Xml::XPath::XPathNavigator* nav) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToNavigator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToNavigator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nav)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNavigator*, false>(this, ___internal__method, nav);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToBoolean
bool System::Xml::Schema::XmlAnyConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlAnyConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlAnyConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlAnyConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDouble
double System::Xml::Schema::XmlAnyConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToInt32
int System::Xml::Schema::XmlAnyConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToInt64
int64_t System::Xml::Schema::XmlAnyConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToSingle
float System::Xml::Schema::XmlAnyConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter..cctor
void System::Xml::Schema::XmlAnyConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlAnyConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlAnyListConverter
#include "System/Xml/Schema/XmlAnyListConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter ItemList
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyListConverter::_get_ItemList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_get_ItemList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyListConverter", "ItemList"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter ItemList
void System::Xml::Schema::XmlAnyListConverter::_set_ItemList(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_set_ItemList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyListConverter", "ItemList", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomicList
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyListConverter::_get_AnyAtomicList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_get_AnyAtomicList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyListConverter", "AnyAtomicList"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomicList
void System::Xml::Schema::XmlAnyListConverter::_set_AnyAtomicList(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_set_AnyAtomicList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyListConverter", "AnyAtomicList", value));
}
// Autogenerated method: System.Xml.Schema.XmlAnyListConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyListConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlListConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAnyListConverter..cctor
void System::Xml::Schema::XmlAnyListConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlAnyListConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlListConverter
#include "System/Xml/Schema/XmlListConverter.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.XmlValueConverter atomicConverter
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlValueConverter*& System::Xml::Schema::XmlListConverter::dyn_atomicConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::dyn_atomicConverter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atomicConverter"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlValueConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlListConverter::Create(::System::Xml::Schema::XmlValueConverter* atomicConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlListConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(atomicConverter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, atomicConverter);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.IsListType
bool System::Xml::Schema::XmlListConverter::IsListType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::IsListType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsListType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ToList
::System::Collections::IList* System::Xml::Schema::XmlListConverter::ToList(::Il2CppObject* list, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ToList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method, list, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.StringAsList
::System::Collections::Generic::List_1<::StringW>* System::Xml::Schema::XmlListConverter::StringAsList(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::StringAsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StringAsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ListAsString
::StringW System::Xml::Schema::XmlListConverter::ListAsString(::System::Collections::IEnumerable* list, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ListAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, list, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlListConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ChangeListType
::Il2CppObject* System::Xml::Schema::XmlListConverter::ChangeListType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ChangeListType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.CreateInvalidClrMappingException
::System::Exception* System::Xml::Schema::XmlListConverter::CreateInvalidClrMappingException(::System::Type* sourceType, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::CreateInvalidClrMappingException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInvalidClrMappingException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, sourceType, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlUnionConverter
#include "System/Xml/Schema/XmlUnionConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlValueConverter[] converters
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::XmlValueConverter*>& System::Xml::Schema::XmlUnionConverter::dyn_converters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUnionConverter::dyn_converters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "converters"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::XmlValueConverter*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasAtomicMember
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlUnionConverter::dyn_hasAtomicMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUnionConverter::dyn_hasAtomicMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasAtomicMember"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasListMember
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlUnionConverter::dyn_hasListMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUnionConverter::dyn_hasListMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasListMember"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlUnionConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlUnionConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUnionConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlUnionConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlUnionConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUnionConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUnionConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTimeFlags
#include "System/Xml/Schema/XsdDateTimeFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags DateTime
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags DateTime
void System::Xml::Schema::XsdDateTimeFlags::_set_DateTime(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags Time
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_Time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "Time"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags Time
void System::Xml::Schema::XsdDateTimeFlags::_set_Time(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_Time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "Time", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags Date
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "Date"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags Date
void System::Xml::Schema::XsdDateTimeFlags::_set_Date(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GYearMonth
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GYearMonth
void System::Xml::Schema::XsdDateTimeFlags::_set_GYearMonth(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GYear
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GYear
void System::Xml::Schema::XsdDateTimeFlags::_set_GYear(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GYear", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GMonthDay
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GMonthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GMonthDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GMonthDay
void System::Xml::Schema::XsdDateTimeFlags::_set_GMonthDay(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GMonthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GMonthDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GDay
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GDay
void System::Xml::Schema::XsdDateTimeFlags::_set_GDay(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GMonth
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GMonth
void System::Xml::Schema::XsdDateTimeFlags::_set_GMonth(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTimeNoTz
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTimeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTimeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTimeNoTz"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTimeNoTz
void System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTimeNoTz(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTimeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTimeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTime
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTime
void System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTime(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrTimeNoTz
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_XdrTimeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_XdrTimeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "XdrTimeNoTz"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrTimeNoTz
void System::Xml::Schema::XsdDateTimeFlags::_set_XdrTimeNoTz(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_XdrTimeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "XdrTimeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags AllXsd
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_AllXsd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_AllXsd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "AllXsd"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags AllXsd
void System::Xml::Schema::XsdDateTimeFlags::_set_AllXsd(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_AllXsd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "AllXsd", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTimeFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime
#include "System/Xml/Schema/XsdDateTime.hpp"
// Including type: System.Xml.Schema.XsdDateTime/DateTimeTypeCode
#include "System/Xml/Schema/XsdDateTime_DateTimeTypeCode.hpp"
// Including type: System.Xml.Schema.XsdDateTime/XsdDateTimeKind
#include "System/Xml/Schema/XsdDateTime_XsdDateTimeKind.hpp"
// Including type: System.Xml.Schema.XsdDateTime/Parser
#include "System/Xml/Schema/XsdDateTime_Parser.hpp"
// Including type: System.Xml.Schema.XsdDateTimeFlags
#include "System/Xml/Schema/XsdDateTimeFlags.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_dd
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_dd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_dd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_dd
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_dd(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_dd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_dd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_ddT
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_ddT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_ddT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_ddT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_ddT
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_ddT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_ddT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_ddT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH
int System::Xml::Schema::XsdDateTime::_get_LzHH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH
void System::Xml::Schema::XsdDateTime::_set_LzHH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_
int System::Xml::Schema::XsdDateTime::_get_LzHH_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_
void System::Xml::Schema::XsdDateTime::_set_LzHH_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm
int System::Xml::Schema::XsdDateTime::_get_LzHH_mm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_mm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_mm"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm
void System::Xml::Schema::XsdDateTime::_set_LzHH_mm(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_mm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_mm", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm_
int System::Xml::Schema::XsdDateTime::_get_LzHH_mm_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_mm_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_mm_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm_
void System::Xml::Schema::XsdDateTime::_set_LzHH_mm_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_mm_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_mm_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm_ss
int System::Xml::Schema::XsdDateTime::_get_LzHH_mm_ss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_mm_ss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_mm_ss"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm_ss
void System::Xml::Schema::XsdDateTime::_set_LzHH_mm_ss(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_mm_ss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_mm_ss", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_
int System::Xml::Schema::XsdDateTime::_get_Lz_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_
void System::Xml::Schema::XsdDateTime::_set_Lz_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_zz
int System::Xml::Schema::XsdDateTime::_get_Lz_zz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_zz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_zz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_zz
void System::Xml::Schema::XsdDateTime::_set_Lz_zz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_zz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_zz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_zz_
int System::Xml::Schema::XsdDateTime::_get_Lz_zz_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_zz_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_zz_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_zz_
void System::Xml::Schema::XsdDateTime::_set_Lz_zz_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_zz_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_zz_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_zz_zz
int System::Xml::Schema::XsdDateTime::_get_Lz_zz_zz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_zz_zz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_zz_zz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_zz_zz
void System::Xml::Schema::XsdDateTime::_set_Lz_zz_zz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_zz_zz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_zz_zz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__
int System::Xml::Schema::XsdDateTime::_get_Lz__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__
void System::Xml::Schema::XsdDateTime::_set_Lz__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm
int System::Xml::Schema::XsdDateTime::_get_Lz__mm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm
void System::Xml::Schema::XsdDateTime::_set_Lz__mm(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm_
int System::Xml::Schema::XsdDateTime::_get_Lz__mm_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm_
void System::Xml::Schema::XsdDateTime::_set_Lz__mm_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm__
int System::Xml::Schema::XsdDateTime::_get_Lz__mm__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm__");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm__"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm__
void System::Xml::Schema::XsdDateTime::_set_Lz__mm__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm__");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm__", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm_dd
int System::Xml::Schema::XsdDateTime::_get_Lz__mm_dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm_dd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm_dd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm_dd
void System::Xml::Schema::XsdDateTime::_set_Lz__mm_dd(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm_dd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm_dd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz___
int System::Xml::Schema::XsdDateTime::_get_Lz___() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz___");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz___"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz___
void System::Xml::Schema::XsdDateTime::_set_Lz___(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz___");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz___", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz___dd
int System::Xml::Schema::XsdDateTime::_get_Lz___dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz___dd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz___dd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz___dd
void System::Xml::Schema::XsdDateTime::_set_Lz___dd(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz___dd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz___dd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XmlTypeCode[] typeCodes
::ArrayW<::System::Xml::Schema::XmlTypeCode> System::Xml::Schema::XsdDateTime::_get_typeCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_typeCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XmlTypeCode>>("System.Xml.Schema", "XsdDateTime", "typeCodes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XmlTypeCode[] typeCodes
void System::Xml::Schema::XsdDateTime::_set_typeCodes(::ArrayW<::System::Xml::Schema::XmlTypeCode> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_typeCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "typeCodes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime dt
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Xml::Schema::XsdDateTime::dyn_dt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::dyn_dt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dt"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 extra
[[deprecated("Use field access instead!")]] uint& System::Xml::Schema::XsdDateTime::dyn_extra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::dyn_extra");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extra"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::StringW text, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(kinds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::System::Xml::Schema::XsdDateTime::Parser parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.InitiateXsdDateTime
void System::Xml::Schema::XsdDateTime::InitiateXsdDateTime(::System::Xml::Schema::XsdDateTime::Parser parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::InitiateXsdDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitiateXsdDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.TryParse
bool System::Xml::Schema::XsdDateTime::TryParse(::StringW text, ::System::Xml::Schema::XsdDateTimeFlags kinds, ByRef<::System::Xml::Schema::XsdDateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(kinds), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XsdDateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, kinds, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::System::DateTime dateTime, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(kinds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dateTime, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::System::DateTimeOffset dateTimeOffset, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTimeOffset), ::il2cpp_utils::ExtractType(kinds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dateTimeOffset, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_InternalTypeCode
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::get_InternalTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_InternalTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_InternalKind
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::get_InternalKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_InternalKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Year
int System::Xml::Schema::XsdDateTime::get_Year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Year");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Year", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Month
int System::Xml::Schema::XsdDateTime::get_Month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Month");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Month", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Day
int System::Xml::Schema::XsdDateTime::get_Day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Day");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Day", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Hour
int System::Xml::Schema::XsdDateTime::get_Hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Hour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Hour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Minute
int System::Xml::Schema::XsdDateTime::get_Minute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Minute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Minute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Second
int System::Xml::Schema::XsdDateTime::get_Second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Second");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Second", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Fraction
int System::Xml::Schema::XsdDateTime::get_Fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Fraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Fraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_ZoneHour
int System::Xml::Schema::XsdDateTime::get_ZoneHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_ZoneHour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ZoneHour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_ZoneMinute
int System::Xml::Schema::XsdDateTime::get_ZoneMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_ZoneMinute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ZoneMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.PrintDate
void System::Xml::Schema::XsdDateTime::PrintDate(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::PrintDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PrintDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.PrintTime
void System::Xml::Schema::XsdDateTime::PrintTime(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::PrintTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PrintTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.PrintZone
void System::Xml::Schema::XsdDateTime::PrintZone(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::PrintZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PrintZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.IntToCharArray
void System::Xml::Schema::XsdDateTime::IntToCharArray(::ArrayW<::Il2CppChar> text, int start, int value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::IntToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, start, value, digits);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.ShortToCharArray
void System::Xml::Schema::XsdDateTime::ShortToCharArray(::ArrayW<::Il2CppChar> text, int start, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::ShortToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ShortToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, start, value);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..cctor
void System::Xml::Schema::XsdDateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.ToString
::StringW System::Xml::Schema::XsdDateTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime/DateTimeTypeCode
#include "System/Xml/Schema/XsdDateTime_DateTimeTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode DateTime
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode DateTime
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_DateTime(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode Time
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Time"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode Time
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Time(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Time", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode Date
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Date"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode Date
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Date(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode GYearMonth
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode GYearMonth
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYearMonth(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode GYear
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode GYear
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYear(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYear", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode GMonthDay
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonthDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode GMonthDay
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonthDay(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonthDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode GDay
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode GDay
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GDay(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode GMonth
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode GMonth
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonth(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode XdrDateTime
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_XdrDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_XdrDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "XdrDateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/DateTimeTypeCode XdrDateTime
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_XdrDateTime(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_XdrDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "XdrDateTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::DateTimeTypeCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime/XsdDateTimeKind
#include "System/Xml/Schema/XsdDateTime_XsdDateTimeKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/XsdDateTimeKind Unspecified
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/XsdDateTimeKind Unspecified
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Unspecified(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/XsdDateTimeKind Zulu
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Zulu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Zulu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Zulu"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/XsdDateTimeKind Zulu
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Zulu(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Zulu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Zulu", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/XsdDateTimeKind LocalWestOfZulu
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalWestOfZulu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalWestOfZulu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalWestOfZulu"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/XsdDateTimeKind LocalWestOfZulu
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalWestOfZulu(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalWestOfZulu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalWestOfZulu", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/XsdDateTimeKind LocalEastOfZulu
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalEastOfZulu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalEastOfZulu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalEastOfZulu"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/XsdDateTimeKind LocalEastOfZulu
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalEastOfZulu(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalEastOfZulu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalEastOfZulu", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::XsdDateTimeKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime/Parser
#include "System/Xml/Schema/XsdDateTime_Parser.hpp"
// Including type: System.Xml.Schema.XsdDateTimeFlags
#include "System/Xml/Schema/XsdDateTimeFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32[] Power10
::ArrayW<int> System::Xml::Schema::XsdDateTime::Parser::_get_Power10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::_get_Power10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml.Schema", "XsdDateTime/Parser", "Power10"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32[] Power10
void System::Xml::Schema::XsdDateTime::Parser::_set_Power10(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::_set_Power10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/Parser", "Power10", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdDateTime/DateTimeTypeCode typeCode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdDateTime::DateTimeTypeCode& System::Xml::Schema::XsdDateTime::Parser::dyn_typeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_typeCode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeCode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 year
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_year");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "year"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 month
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_month");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "month"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 day
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_day");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "day"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 hour
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_hour");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hour"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 minute
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_minute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_minute");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minute"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 second
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_second");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "second"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 fraction
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_fraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fraction"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdDateTime/XsdDateTimeKind kind
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdDateTime::XsdDateTimeKind& System::Xml::Schema::XsdDateTime::Parser::dyn_kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_kind");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kind"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 zoneHour
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_zoneHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_zoneHour");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zoneHour"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 zoneMinute
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_zoneMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_zoneMinute");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zoneMinute"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String text
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XsdDateTime::Parser::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_text");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 length
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/Parser.Parse
bool System::Xml::Schema::XsdDateTime::Parser::Parse(::StringW text, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(kinds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/Parser.ParseDate
bool System::Xml::Schema::XsdDateTime::Parser::ParseDate(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/Parser.ParseTimeAndZoneAndWhitespace
bool System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndZoneAndWhitespace(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndZoneAndWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTimeAndZoneAndWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/Parser.ParseTimeAndWhitespace
bool System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndWhitespace(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTimeAndWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/Parser.ParseTime
bool System::Xml::Schema::XsdDateTime::Parser::ParseTime(ByRef<int> start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(start));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/Parser.ParseZoneAndWhitespace
bool System::Xml::Schema::XsdDateTime::Parser::ParseZoneAndWhitespace(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseZoneAndWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseZoneAndWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/Parser.Parse4Dig
bool System::Xml::Schema::XsdDateTime::Parser::Parse4Dig(int start, ByRef<int> num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Parse4Dig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse4Dig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(num));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/Parser.Parse2Dig
bool System::Xml::Schema::XsdDateTime::Parser::Parse2Dig(int start, ByRef<int> num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Parse2Dig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse2Dig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(num));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/Parser.ParseChar
bool System::Xml::Schema::XsdDateTime::Parser::ParseChar(int start, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, ch);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/Parser.Test
bool System::Xml::Schema::XsdDateTime::Parser::Test(::System::Xml::Schema::XsdDateTimeFlags left, ::System::Xml::Schema::XsdDateTimeFlags right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime/Parser", "Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/Parser..cctor
void System::Xml::Schema::XsdDateTime::Parser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime/Parser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDuration
#include "System/Xml/Schema/XsdDuration.hpp"
// Including type: System.Xml.Schema.XsdDuration/Parts
#include "System/Xml/Schema/XsdDuration_Parts.hpp"
// Including type: System.Xml.Schema.XsdDuration/DurationType
#include "System/Xml/Schema/XsdDuration_DurationType.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 years
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_years");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "years"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 months
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_months() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_months");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "months"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 days
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_days() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_days");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "days"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hours
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_hours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_hours");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hours"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minutes
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_minutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_minutes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minutes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 seconds
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_seconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 nanoseconds
[[deprecated("Use field access instead!")]] uint& System::Xml::Schema::XsdDuration::dyn_nanoseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_nanoseconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nanoseconds"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(bool isNegative, int years, int months, int days, int hours, int minutes, int seconds, int nanoseconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isNegative), ::il2cpp_utils::ExtractType(years), ::il2cpp_utils::ExtractType(months), ::il2cpp_utils::ExtractType(days), ::il2cpp_utils::ExtractType(hours), ::il2cpp_utils::ExtractType(minutes), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(nanoseconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isNegative, years, months, days, hours, minutes, seconds, nanoseconds);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(::System::TimeSpan timeSpan, ::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeSpan), ::il2cpp_utils::ExtractType(durationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeSpan, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(::StringW s, ::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(durationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_IsNegative
bool System::Xml::Schema::XsdDuration::get_IsNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_IsNegative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsNegative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Years
int System::Xml::Schema::XsdDuration::get_Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Years");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Years", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Months
int System::Xml::Schema::XsdDuration::get_Months() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Months");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Months", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Days
int System::Xml::Schema::XsdDuration::get_Days() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Days");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Days", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Hours
int System::Xml::Schema::XsdDuration::get_Hours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Hours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Hours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Minutes
int System::Xml::Schema::XsdDuration::get_Minutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Minutes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Minutes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Seconds
int System::Xml::Schema::XsdDuration::get_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Seconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Seconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Nanoseconds
int System::Xml::Schema::XsdDuration::get_Nanoseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Nanoseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Nanoseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.ToTimeSpan
::System::TimeSpan System::Xml::Schema::XsdDuration::ToTimeSpan(::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::ToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryToTimeSpan
::System::Exception* System::Xml::Schema::XsdDuration::TryToTimeSpan(ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryToTimeSpan
::System::Exception* System::Xml::Schema::XsdDuration::TryToTimeSpan(::System::Xml::Schema::XsdDuration::DurationType durationType, ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationType), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, durationType, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.ToString
::StringW System::Xml::Schema::XsdDuration::ToString(::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryParse
::System::Exception* System::Xml::Schema::XsdDuration::TryParse(::StringW s, ByRef<::System::Xml::Schema::XsdDuration> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDuration", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XsdDuration&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryParse
::System::Exception* System::Xml::Schema::XsdDuration::TryParse(::StringW s, ::System::Xml::Schema::XsdDuration::DurationType durationType, ByRef<::System::Xml::Schema::XsdDuration> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDuration", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(durationType), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XsdDuration&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, durationType, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryParseDigits
::StringW System::Xml::Schema::XsdDuration::TryParseDigits(::StringW s, ByRef<int> offset, bool eatDigits, ByRef<int> result, ByRef<int> numDigits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryParseDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDuration", "TryParseDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(eatDigits), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(offset), eatDigits, byref(result), byref(numDigits));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.ToString
::StringW System::Xml::Schema::XsdDuration::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDuration/Parts
#include "System/Xml/Schema/XsdDuration_Parts.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/Parts HasNone
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasNone"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/Parts HasNone
void System::Xml::Schema::XsdDuration::Parts::_set_HasNone(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasNone", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/Parts HasYears
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasYears() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasYears");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasYears"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/Parts HasYears
void System::Xml::Schema::XsdDuration::Parts::_set_HasYears(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasYears");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasYears", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/Parts HasMonths
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasMonths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasMonths");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasMonths"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/Parts HasMonths
void System::Xml::Schema::XsdDuration::Parts::_set_HasMonths(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasMonths");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasMonths", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/Parts HasDays
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasDays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasDays"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/Parts HasDays
void System::Xml::Schema::XsdDuration::Parts::_set_HasDays(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasDays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasDays", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/Parts HasHours
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasHours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasHours");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasHours"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/Parts HasHours
void System::Xml::Schema::XsdDuration::Parts::_set_HasHours(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasHours");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasHours", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/Parts HasMinutes
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasMinutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasMinutes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasMinutes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/Parts HasMinutes
void System::Xml::Schema::XsdDuration::Parts::_set_HasMinutes(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasMinutes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasMinutes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/Parts HasSeconds
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasSeconds"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/Parts HasSeconds
void System::Xml::Schema::XsdDuration::Parts::_set_HasSeconds(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::Parts::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDuration/DurationType
#include "System/Xml/Schema/XsdDuration_DurationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/DurationType Duration
::System::Xml::Schema::XsdDuration::DurationType System::Xml::Schema::XsdDuration::DurationType::_get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_get_Duration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::DurationType>("System.Xml.Schema", "XsdDuration/DurationType", "Duration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/DurationType Duration
void System::Xml::Schema::XsdDuration::DurationType::_set_Duration(::System::Xml::Schema::XsdDuration::DurationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_set_Duration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/DurationType", "Duration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/DurationType YearMonthDuration
::System::Xml::Schema::XsdDuration::DurationType System::Xml::Schema::XsdDuration::DurationType::_get_YearMonthDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_get_YearMonthDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::DurationType>("System.Xml.Schema", "XsdDuration/DurationType", "YearMonthDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/DurationType YearMonthDuration
void System::Xml::Schema::XsdDuration::DurationType::_set_YearMonthDuration(::System::Xml::Schema::XsdDuration::DurationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_set_YearMonthDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/DurationType", "YearMonthDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/DurationType DayTimeDuration
::System::Xml::Schema::XsdDuration::DurationType System::Xml::Schema::XsdDuration::DurationType::_get_DayTimeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_get_DayTimeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::DurationType>("System.Xml.Schema", "XsdDuration/DurationType", "DayTimeDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/DurationType DayTimeDuration
void System::Xml::Schema::XsdDuration::DurationType::_set_DayTimeDuration(::System::Xml::Schema::XsdDuration::DurationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_set_DayTimeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/DurationType", "DayTimeDuration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::DurationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlConfiguration.XmlReaderSection
#include "System/Xml/XmlConfiguration/XmlReaderSection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlConfiguration.XmlReaderSection.get_ProhibitDefaultUrlResolver
bool System::Xml::XmlConfiguration::XmlReaderSection::get_ProhibitDefaultUrlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConfiguration::XmlReaderSection::get_ProhibitDefaultUrlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.XmlConfiguration", "XmlReaderSection", "get_ProhibitDefaultUrlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlConfiguration.XmlReaderSection.get_CollapseWhiteSpaceIntoEmptyString
bool System::Xml::XmlConfiguration::XmlReaderSection::get_CollapseWhiteSpaceIntoEmptyString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConfiguration::XmlReaderSection::get_CollapseWhiteSpaceIntoEmptyString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.XmlConfiguration", "XmlReaderSection", "get_CollapseWhiteSpaceIntoEmptyString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Analytics.DataPrivacy
#include "UnityEngine/Analytics/DataPrivacy.hpp"
// Including type: UnityEngine.Analytics.DataPrivacy/UserPostData
#include "UnityEngine/Analytics/DataPrivacy_UserPostData.hpp"
// Including type: UnityEngine.Analytics.DataPrivacy/TokenData
#include "UnityEngine/Analytics/DataPrivacy_TokenData.hpp"
// Including type: UnityEngine.Analytics.DataPrivacy/<>c__DisplayClass9_0
#include "UnityEngine/Analytics/DataPrivacy_--c__DisplayClass9_0.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Analytics.DataPrivacy.GetUserData
::UnityEngine::Analytics::DataPrivacy::UserPostData UnityEngine::Analytics::DataPrivacy::GetUserData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::DataPrivacy::GetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "DataPrivacy", "GetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Analytics::DataPrivacy::UserPostData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Analytics.DataPrivacy.GetUserAgent
::StringW UnityEngine::Analytics::DataPrivacy::GetUserAgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::DataPrivacy::GetUserAgent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "DataPrivacy", "GetUserAgent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Analytics.DataPrivacy.getErrorString
::StringW UnityEngine::Analytics::DataPrivacy::getErrorString(::UnityEngine::Networking::UnityWebRequest* www) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::DataPrivacy::getErrorString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "DataPrivacy", "getErrorString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(www)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, www);
}
// Autogenerated method: UnityEngine.Analytics.DataPrivacy.FetchPrivacyUrl
void UnityEngine::Analytics::DataPrivacy::FetchPrivacyUrl(::System::Action_1<::StringW>* success, ::System::Action_1<::StringW>* failure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::DataPrivacy::FetchPrivacyUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "DataPrivacy", "FetchPrivacyUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(failure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, success, failure);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Analytics.DataPrivacy/<>c__DisplayClass9_0
#include "UnityEngine/Analytics/DataPrivacy_--c__DisplayClass9_0.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Networking.UnityWebRequest www
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::dyn_www() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::dyn_www");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "www"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> failure
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::dyn_failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::dyn_failure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failure"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> success
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::dyn_success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::dyn_success");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "success"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Analytics.DataPrivacy/<>c__DisplayClass9_0.<FetchPrivacyUrl>b__0
void UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::$FetchPrivacyUrl$b__0(::UnityEngine::AsyncOperation* async2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::DataPrivacy::$$c__DisplayClass9_0::<FetchPrivacyUrl>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FetchPrivacyUrl>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(async2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, async2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AI.NavMesh
#include "UnityEngine/AI/NavMesh.hpp"
// Including type: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate
#include "UnityEngine/AI/NavMesh_OnNavMeshPreUpdate.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.AI.NavMeshHit
#include "UnityEngine/AI/NavMeshHit.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
// Including type: UnityEngine.AI.NavMeshTriangulation
#include "UnityEngine/AI/NavMeshTriangulation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMesh/OnNavMeshPreUpdate onPreUpdate
::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* UnityEngine::AI::NavMesh::_get_onPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::_get_onPreUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate*>("UnityEngine.AI", "NavMesh", "onPreUpdate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMesh/OnNavMeshPreUpdate onPreUpdate
void UnityEngine::AI::NavMesh::_set_onPreUpdate(::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::_set_onPreUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMesh", "onPreUpdate", value));
}
// Autogenerated method: UnityEngine.AI.NavMesh.Internal_CallOnNavMeshPreUpdate
void UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "Internal_CallOnNavMeshPreUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMesh.Raycast
bool UnityEngine::AI::NavMesh::Raycast(::UnityEngine::Vector3 sourcePosition, ::UnityEngine::Vector3 targetPosition, ByRef<::UnityEngine::AI::NavMeshHit> hit, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::AI::NavMeshHit&>(), ::il2cpp_utils::ExtractType(areaMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourcePosition, targetPosition, byref(hit), areaMask);
}
// Autogenerated method: UnityEngine.AI.NavMesh.INTERNAL_CALL_Raycast
bool UnityEngine::AI::NavMesh::INTERNAL_CALL_Raycast(ByRef<::UnityEngine::Vector3> sourcePosition, ByRef<::UnityEngine::Vector3> targetPosition, ByRef<::UnityEngine::AI::NavMeshHit> hit, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::INTERNAL_CALL_Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "INTERNAL_CALL_Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::AI::NavMeshHit&>(), ::il2cpp_utils::ExtractType(areaMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sourcePosition), byref(targetPosition), byref(hit), areaMask);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePath
bool UnityEngine::AI::NavMesh::CalculatePath(::UnityEngine::Vector3 sourcePosition, ::UnityEngine::Vector3 targetPosition, int areaMask, ::UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::CalculatePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePathInternal
bool UnityEngine::AI::NavMesh::CalculatePathInternal(::UnityEngine::Vector3 sourcePosition, ::UnityEngine::Vector3 targetPosition, int areaMask, ::UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::CalculatePathInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePathInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.INTERNAL_CALL_CalculatePathInternal
bool UnityEngine::AI::NavMesh::INTERNAL_CALL_CalculatePathInternal(ByRef<::UnityEngine::Vector3> sourcePosition, ByRef<::UnityEngine::Vector3> targetPosition, int areaMask, ::UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::INTERNAL_CALL_CalculatePathInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "INTERNAL_CALL_CalculatePathInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sourcePosition), byref(targetPosition), areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.SamplePosition
bool UnityEngine::AI::NavMesh::SamplePosition(::UnityEngine::Vector3 sourcePosition, ByRef<::UnityEngine::AI::NavMeshHit> hit, float maxDistance, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::SamplePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "SamplePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::AI::NavMeshHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(areaMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourcePosition, byref(hit), maxDistance, areaMask);
}
// Autogenerated method: UnityEngine.AI.NavMesh.INTERNAL_CALL_SamplePosition
bool UnityEngine::AI::NavMesh::INTERNAL_CALL_SamplePosition(ByRef<::UnityEngine::Vector3> sourcePosition, ByRef<::UnityEngine::AI::NavMeshHit> hit, float maxDistance, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::INTERNAL_CALL_SamplePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "INTERNAL_CALL_SamplePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::AI::NavMeshHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(areaMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sourcePosition), byref(hit), maxDistance, areaMask);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculateTriangulation
::UnityEngine::AI::NavMeshTriangulation UnityEngine::AI::NavMesh::CalculateTriangulation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::CalculateTriangulation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculateTriangulation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AI::NavMeshTriangulation, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMesh.TriangulateInternal
::Il2CppObject* UnityEngine::AI::NavMesh::TriangulateInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::TriangulateInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "TriangulateInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate
#include "UnityEngine/AI/NavMesh_OnNavMeshPreUpdate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.Invoke
void UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.BeginInvoke
::System::IAsyncResult* UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.EndInvoke
void UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AI::NavMesh::OnNavMeshPreUpdate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshPathStatus
#include "UnityEngine/AI/NavMeshPathStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathComplete
::UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPathStatus::_get_PathComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathComplete"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathComplete
void UnityEngine::AI::NavMeshPathStatus::_set_PathComplete(::UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPathStatus::_set_PathComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathComplete", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathPartial
::UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathPartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPathStatus::_get_PathPartial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathPartial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathPartial
void UnityEngine::AI::NavMeshPathStatus::_set_PathPartial(::UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPathStatus::_set_PathPartial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathPartial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathInvalid
::UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPathStatus::_get_PathInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathInvalid"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathInvalid
void UnityEngine::AI::NavMeshPathStatus::_set_PathInvalid(::UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPathStatus::_set_PathInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathInvalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::NavMeshPathStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPathStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
// Including type: UnityEngine.AI.NavMeshPathStatus
#include "UnityEngine/AI/NavMeshPathStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::AI::NavMeshPath::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPath::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3[] m_corners
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& UnityEngine::AI::NavMeshPath::dyn_m_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPath::dyn_m_corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_corners"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.DestroyNavMeshPath
void UnityEngine::AI::NavMeshPath::DestroyNavMeshPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPath::DestroyNavMeshPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyNavMeshPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.CalculateCornersInternal
::ArrayW<::UnityEngine::Vector3> UnityEngine::AI::NavMeshPath::CalculateCornersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPath::CalculateCornersInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCornersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.ClearCornersInternal
void UnityEngine::AI::NavMeshPath::ClearCornersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPath::ClearCornersInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCornersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.ClearCorners
void UnityEngine::AI::NavMeshPath::ClearCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPath::ClearCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.CalculateCorners
void UnityEngine::AI::NavMeshPath::CalculateCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPath::CalculateCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.get_corners
::ArrayW<::UnityEngine::Vector3> UnityEngine::AI::NavMeshPath::get_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPath::get_corners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_corners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.get_status
::UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPath::get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPath::get_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AI::NavMeshPathStatus, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.Finalize
void UnityEngine::AI::NavMeshPath::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshPath::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshHit
#include "UnityEngine/AI/NavMeshHit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::AI::NavMeshHit::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshHit::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::AI::NavMeshHit::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshHit::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& UnityEngine::AI::NavMeshHit::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshHit::dyn_m_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Mask
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::NavMeshHit::dyn_m_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshHit::dyn_m_Mask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Hit
[[deprecated("Use field access instead!")]] int& UnityEngine::AI::NavMeshHit::dyn_m_Hit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshHit::dyn_m_Hit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Hit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AI.NavMeshHit.get_position
::UnityEngine::Vector3 UnityEngine::AI::NavMeshHit::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AI::NavMeshHit::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPlayableBinding
#include "UnityEngine/Animations/AnimationPlayableBinding.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.PlayableBinding/CreateOutputMethod
#include "UnityEngine/Playables/PlayableBinding_CreateOutputMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xA933C4
// Autogenerated static field getter
// Get static field: static private UnityEngine.Playables.PlayableBinding/CreateOutputMethod <>f__mg$cache0
::UnityEngine::Playables::PlayableBinding::CreateOutputMethod* UnityEngine::Animations::AnimationPlayableBinding::_get_$$f__mg$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableBinding::_get_$$f__mg$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Playables::PlayableBinding::CreateOutputMethod*>("UnityEngine.Animations", "AnimationPlayableBinding", "<>f__mg$cache0")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Playables.PlayableBinding/CreateOutputMethod <>f__mg$cache0
void UnityEngine::Animations::AnimationPlayableBinding::_set_$$f__mg$cache0(::UnityEngine::Playables::PlayableBinding::CreateOutputMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableBinding::_set_$$f__mg$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationPlayableBinding", "<>f__mg$cache0", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableBinding.Create
::UnityEngine::Playables::PlayableBinding UnityEngine::Animations::AnimationPlayableBinding::Create(::StringW name, ::UnityEngine::Object* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableBinding::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableBinding", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableBinding, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, key);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableBinding.CreateAnimationOutput
::UnityEngine::Playables::PlayableOutput UnityEngine::Animations::AnimationPlayableBinding::CreateAnimationOutput(::UnityEngine::Playables::PlayableGraph graph, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableBinding::CreateAnimationOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableBinding", "CreateAnimationOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.StateMachineBehaviour
#include "UnityEngine/StateMachineBehaviour.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
// Including type: UnityEngine.Animations.AnimatorControllerPlayable
#include "UnityEngine/Animations/AnimatorControllerPlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateEnter
void UnityEngine::StateMachineBehaviour::OnStateEnter(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateUpdate
void UnityEngine::StateMachineBehaviour::OnStateUpdate(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateExit
void UnityEngine::StateMachineBehaviour::OnStateExit(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMove
void UnityEngine::StateMachineBehaviour::OnStateMove(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateIK
void UnityEngine::StateMachineBehaviour::OnStateIK(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateIK");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineEnter
void UnityEngine::StateMachineBehaviour::OnStateMachineEnter(::UnityEngine::Animator* animator, int stateMachinePathHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMachineEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateMachinePathHash);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineExit
void UnityEngine::StateMachineBehaviour::OnStateMachineExit(::UnityEngine::Animator* animator, int stateMachinePathHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMachineExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateMachinePathHash);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateEnter
void UnityEngine::StateMachineBehaviour::OnStateEnter(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateUpdate
void UnityEngine::StateMachineBehaviour::OnStateUpdate(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateExit
void UnityEngine::StateMachineBehaviour::OnStateExit(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMove
void UnityEngine::StateMachineBehaviour::OnStateMove(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateIK
void UnityEngine::StateMachineBehaviour::OnStateIK(::UnityEngine::Animator* animator, ::UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateIK");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineEnter
void UnityEngine::StateMachineBehaviour::OnStateMachineEnter(::UnityEngine::Animator* animator, int stateMachinePathHash, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMachineEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateMachinePathHash, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineExit
void UnityEngine::StateMachineBehaviour::OnStateMachineExit(::UnityEngine::Animator* animator, int stateMachinePathHash, ::UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateMachineBehaviour::OnStateMachineExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::StateMachineBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animator, stateMachinePathHash, controller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimationClip.Internal_CreateAnimationClip
void UnityEngine::AnimationClip::Internal_CreateAnimationClip(::UnityEngine::AnimationClip* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::Internal_CreateAnimationClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimationClip", "Internal_CreateAnimationClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.AnimationClip.get_length
float UnityEngine::AnimationClip::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_frameRate
float UnityEngine::AnimationClip::get_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_frameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_legacy
bool UnityEngine::AnimationClip::get_legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_legacy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_legacy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_empty
bool UnityEngine::AnimationClip::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasGenericRootTransform
bool UnityEngine::AnimationClip::get_hasGenericRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_hasGenericRootTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasGenericRootTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasMotionCurves
bool UnityEngine::AnimationClip::get_hasMotionCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_hasMotionCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasMotionCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasRootCurves
bool UnityEngine::AnimationClip::get_hasRootCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_hasRootCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRootCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasRootMotion
bool UnityEngine::AnimationClip::get_hasRootMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationClip::get_hasRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationClipPlayable
#include "UnityEngine/Animations/AnimationClipPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationClipPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationClipPlayable::AnimationClipPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.Create
::UnityEngine::Animations::AnimationClipPlayable UnityEngine::Animations::AnimationClipPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationClipPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, clip);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationClipPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, clip);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationClipPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationClipPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.Equals
bool UnityEngine::Animations::AnimationClipPlayable::Equals(::UnityEngine::Animations::AnimationClipPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationClipPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetApplyFootIK
void UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIK(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetApplyFootIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetRemoveStartOffset
void UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetRemoveStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::AnimationClip* clip, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, clip, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetApplyFootIKInternal
void UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIKInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIKInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetApplyFootIKInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetRemoveStartOffsetInternal
void UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffsetInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffsetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetRemoveStartOffsetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ::UnityEngine::AnimationClip* clip, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), clip, byref(handle));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationLayerMixerPlayable
#include "UnityEngine/Animations/AnimationLayerMixerPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.AvatarMask
#include "UnityEngine/AvatarMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationLayerMixerPlayable m_NullPlayable
::UnityEngine::Animations::AnimationLayerMixerPlayable UnityEngine::Animations::AnimationLayerMixerPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationLayerMixerPlayable>("UnityEngine.Animations", "AnimationLayerMixerPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationLayerMixerPlayable m_NullPlayable
void UnityEngine::Animations::AnimationLayerMixerPlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationLayerMixerPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationLayerMixerPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationLayerMixerPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationLayerMixerPlayable::AnimationLayerMixerPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.get_Null
::UnityEngine::Animations::AnimationLayerMixerPlayable UnityEngine::Animations::AnimationLayerMixerPlayable::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationLayerMixerPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.Create
::UnityEngine::Animations::AnimationLayerMixerPlayable UnityEngine::Animations::AnimationLayerMixerPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationLayerMixerPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationLayerMixerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationLayerMixerPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.op_Explicit
UnityEngine::Animations::AnimationLayerMixerPlayable::AnimationLayerMixerPlayable(::UnityEngine::Playables::Playable& playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationLayerMixerPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.Equals
bool UnityEngine::Animations::AnimationLayerMixerPlayable::Equals(::UnityEngine::Animations::AnimationLayerMixerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationLayerMixerPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.SetLayerMaskFromAvatarMask
void UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMask(uint layerIndex, ::UnityEngine::AvatarMask* mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLayerMaskFromAvatarMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, mask);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.SetLayerMaskFromAvatarMaskInternal
void UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMaskInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle, uint layerIndex, ::UnityEngine::AvatarMask* mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMaskInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "SetLayerMaskFromAvatarMaskInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), layerIndex, mask);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable..cctor
void UnityEngine::Animations::AnimationLayerMixerPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), byref(handle));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationMixerPlayable
#include "UnityEngine/Animations/AnimationMixerPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationMixerPlayable m_NullPlayable
::UnityEngine::Animations::AnimationMixerPlayable UnityEngine::Animations::AnimationMixerPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationMixerPlayable>("UnityEngine.Animations", "AnimationMixerPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationMixerPlayable m_NullPlayable
void UnityEngine::Animations::AnimationMixerPlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationMixerPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationMixerPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationMixerPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationMixerPlayable::AnimationMixerPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.get_Null
::UnityEngine::Animations::AnimationMixerPlayable UnityEngine::Animations::AnimationMixerPlayable::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationMixerPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.Create
::UnityEngine::Animations::AnimationMixerPlayable UnityEngine::Animations::AnimationMixerPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, int inputCount, bool normalizeWeights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(normalizeWeights)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationMixerPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount, normalizeWeights);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMixerPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, int inputCount, bool normalizeWeights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(normalizeWeights)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount, normalizeWeights);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMixerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationMixerPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.op_Explicit
UnityEngine::Animations::AnimationMixerPlayable::AnimationMixerPlayable(::UnityEngine::Playables::Playable& playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationMixerPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.Equals
bool UnityEngine::Animations::AnimationMixerPlayable::Equals(::UnityEngine::Animations::AnimationMixerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationMixerPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, int inputCount, bool normalizeWeights, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(normalizeWeights), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount, normalizeWeights, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable..cctor
void UnityEngine::Animations::AnimationMixerPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, int inputCount, bool normalizeWeights, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(normalizeWeights), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), inputCount, normalizeWeights, byref(handle));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationMotionXToDeltaPlayable
#include "UnityEngine/Animations/AnimationMotionXToDeltaPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationMotionXToDeltaPlayable m_NullPlayable
::UnityEngine::Animations::AnimationMotionXToDeltaPlayable UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationMotionXToDeltaPlayable>("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationMotionXToDeltaPlayable m_NullPlayable
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationMotionXToDeltaPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationMotionXToDeltaPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationMotionXToDeltaPlayable::AnimationMotionXToDeltaPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.get_Null
::UnityEngine::Animations::AnimationMotionXToDeltaPlayable UnityEngine::Animations::AnimationMotionXToDeltaPlayable::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationMotionXToDeltaPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.Create
::UnityEngine::Animations::AnimationMotionXToDeltaPlayable UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Create(::UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationMotionXToDeltaPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMotionXToDeltaPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationMotionXToDeltaPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.op_Explicit
UnityEngine::Animations::AnimationMotionXToDeltaPlayable::AnimationMotionXToDeltaPlayable(::UnityEngine::Playables::Playable& playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationMotionXToDeltaPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.Equals
bool UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Equals(::UnityEngine::Animations::AnimationMotionXToDeltaPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationMotionXToDeltaPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.IsAbsoluteMotion
bool UnityEngine::Animations::AnimationMotionXToDeltaPlayable::IsAbsoluteMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::IsAbsoluteMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsAbsoluteMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.SetAbsoluteMotion
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetAbsoluteMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.IsAbsoluteMotionInternal
bool UnityEngine::Animations::AnimationMotionXToDeltaPlayable::IsAbsoluteMotionInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::IsAbsoluteMotionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "IsAbsoluteMotionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.SetAbsoluteMotionInternal
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotionInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "SetAbsoluteMotionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), value);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable..cctor
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), byref(handle));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationOffsetPlayable
#include "UnityEngine/Animations/AnimationOffsetPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationOffsetPlayable m_NullPlayable
::UnityEngine::Animations::AnimationOffsetPlayable UnityEngine::Animations::AnimationOffsetPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationOffsetPlayable>("UnityEngine.Animations", "AnimationOffsetPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationOffsetPlayable m_NullPlayable
void UnityEngine::Animations::AnimationOffsetPlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationOffsetPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationOffsetPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationOffsetPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationOffsetPlayable::AnimationOffsetPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.Create
::UnityEngine::Animations::AnimationOffsetPlayable UnityEngine::Animations::AnimationOffsetPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationOffsetPlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, position, rotation, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationOffsetPlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, position, rotation, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationOffsetPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationOffsetPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.Equals
bool UnityEngine::Animations::AnimationOffsetPlayable::Equals(::UnityEngine::Animations::AnimationOffsetPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationOffsetPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.GetPosition
::UnityEngine::Vector3 UnityEngine::Animations::AnimationOffsetPlayable::GetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.GetRotation
::UnityEngine::Quaternion UnityEngine::Animations::AnimationOffsetPlayable::GetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, position, rotation, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.GetPositionInternal
::UnityEngine::Vector3 UnityEngine::Animations::AnimationOffsetPlayable::GetPositionInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::GetPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "GetPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.GetRotationInternal
::UnityEngine::Quaternion UnityEngine::Animations::AnimationOffsetPlayable::GetRotationInternal(ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::GetRotationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "GetRotationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable..cctor
void UnityEngine::Animations::AnimationOffsetPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), byref(position), byref(rotation), byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.GetPositionInternal_Injected
void UnityEngine::Animations::AnimationOffsetPlayable::GetPositionInternal_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> handle, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::GetPositionInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "GetPositionInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), byref(ret));
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.GetRotationInternal_Injected
void UnityEngine::Animations::AnimationOffsetPlayable::GetRotationInternal_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> handle, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationOffsetPlayable::GetRotationInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "GetRotationInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPlayableExtensions
#include "UnityEngine/Animations/AnimationPlayableExtensions.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Playables.IPlayable
#include "UnityEngine/Playables/IPlayable.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Playables.PlayableHandle
#include "UnityEngine/Playables/PlayableHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationPlayableExtensions.SetAnimatedPropertiesInternal
void UnityEngine::Animations::AnimationPlayableExtensions::SetAnimatedPropertiesInternal(ByRef<::UnityEngine::Playables::PlayableHandle> playable, ::UnityEngine::AnimationClip* animatedProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableExtensions::SetAnimatedPropertiesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableExtensions", "SetAnimatedPropertiesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(animatedProperties)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(playable), animatedProperties);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPlayableGraphExtensions
#include "UnityEngine/Animations/AnimationPlayableGraphExtensions.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.PlayableOutputHandle
#include "UnityEngine/Playables/PlayableOutputHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationPlayableGraphExtensions.InternalCreateAnimationOutput
bool UnityEngine::Animations::AnimationPlayableGraphExtensions::InternalCreateAnimationOutput(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ::StringW name, ByRef<::UnityEngine::Playables::PlayableOutputHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableGraphExtensions::InternalCreateAnimationOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableGraphExtensions", "InternalCreateAnimationOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Playables::PlayableOutputHandle&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), name, byref(handle));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPlayableOutput
#include "UnityEngine/Animations/AnimationPlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableOutputHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableOutputHandle& UnityEngine::Animations::AnimationPlayableOutput::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableOutputHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationPlayableOutput::AnimationPlayableOutput(::UnityEngine::Playables::PlayableOutputHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.Create
::UnityEngine::Animations::AnimationPlayableOutput UnityEngine::Animations::AnimationPlayableOutput::Create(::UnityEngine::Playables::PlayableGraph graph, ::StringW name, ::UnityEngine::Animator* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationPlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, name, target);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.get_Null
::UnityEngine::Animations::AnimationPlayableOutput UnityEngine::Animations::AnimationPlayableOutput::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationPlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.GetHandle
::UnityEngine::Playables::PlayableOutputHandle UnityEngine::Animations::AnimationPlayableOutput::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationPlayableOutput), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutputHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.op_Explicit
UnityEngine::Animations::AnimationPlayableOutput::AnimationPlayableOutput(::UnityEngine::Playables::PlayableOutput& output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationPlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, output);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.GetTarget
::UnityEngine::Animator* UnityEngine::Animations::AnimationPlayableOutput::GetTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.SetTarget
void UnityEngine::Animations::AnimationPlayableOutput::SetTarget(::UnityEngine::Animator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::SetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.InternalGetTarget
::UnityEngine::Animator* UnityEngine::Animations::AnimationPlayableOutput::InternalGetTarget(ByRef<::UnityEngine::Playables::PlayableOutputHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::InternalGetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "InternalGetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.InternalSetTarget
void UnityEngine::Animations::AnimationPlayableOutput::InternalSetTarget(ByRef<::UnityEngine::Playables::PlayableOutputHandle> handle, ::UnityEngine::Animator* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPlayableOutput::InternalSetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "InternalSetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(handle), target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPosePlayable
#include "UnityEngine/Animations/AnimationPosePlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationPosePlayable m_NullPlayable
::UnityEngine::Animations::AnimationPosePlayable UnityEngine::Animations::AnimationPosePlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationPosePlayable>("UnityEngine.Animations", "AnimationPosePlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationPosePlayable m_NullPlayable
void UnityEngine::Animations::AnimationPosePlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationPosePlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationPosePlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationPosePlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationPosePlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationPosePlayable::AnimationPosePlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationPosePlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationPosePlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationPosePlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPosePlayable.Equals
bool UnityEngine::Animations::AnimationPosePlayable::Equals(::UnityEngine::Animations::AnimationPosePlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationPosePlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationPosePlayable..cctor
void UnityEngine::Animations::AnimationPosePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationPosePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPosePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationRemoveScalePlayable
#include "UnityEngine/Animations/AnimationRemoveScalePlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationRemoveScalePlayable m_NullPlayable
::UnityEngine::Animations::AnimationRemoveScalePlayable UnityEngine::Animations::AnimationRemoveScalePlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimationRemoveScalePlayable>("UnityEngine.Animations", "AnimationRemoveScalePlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationRemoveScalePlayable m_NullPlayable
void UnityEngine::Animations::AnimationRemoveScalePlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimationRemoveScalePlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationRemoveScalePlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimationRemoveScalePlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationRemoveScalePlayable::AnimationRemoveScalePlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.Create
::UnityEngine::Animations::AnimationRemoveScalePlayable UnityEngine::Animations::AnimationRemoveScalePlayable::Create(::UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::AnimationRemoveScalePlayable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.CreateHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandle(::UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationRemoveScalePlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationRemoveScalePlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.Equals
bool UnityEngine::Animations::AnimationRemoveScalePlayable::Equals(::UnityEngine::Animations::AnimationRemoveScalePlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimationRemoveScalePlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal(::UnityEngine::Playables::PlayableGraph graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, byref(handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable..cctor
void UnityEngine::Animations::AnimationRemoveScalePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> graph, ByRef<::UnityEngine::Playables::PlayableHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(graph), byref(handle));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.Animations.AnimationScriptPlayable
#include "UnityEngine/Experimental/Animations/AnimationScriptPlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Experimental.Animations.AnimationScriptPlayable m_NullPlayable
::UnityEngine::Experimental::Animations::AnimationScriptPlayable UnityEngine::Experimental::Animations::AnimationScriptPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationScriptPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::Animations::AnimationScriptPlayable>("UnityEngine.Experimental.Animations", "AnimationScriptPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Experimental.Animations.AnimationScriptPlayable m_NullPlayable
void UnityEngine::Experimental::Animations::AnimationScriptPlayable::_set_m_NullPlayable(::UnityEngine::Experimental::Animations::AnimationScriptPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationScriptPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.Animations", "AnimationScriptPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Experimental::Animations::AnimationScriptPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationScriptPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.Animations.AnimationScriptPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Experimental::Animations::AnimationScriptPlayable::AnimationScriptPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Experimental.Animations.AnimationScriptPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Experimental::Animations::AnimationScriptPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationScriptPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Experimental::Animations::AnimationScriptPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.Animations.AnimationScriptPlayable.Equals
bool UnityEngine::Experimental::Animations::AnimationScriptPlayable::Equals(::UnityEngine::Experimental::Animations::AnimationScriptPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationScriptPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Experimental::Animations::AnimationScriptPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Experimental.Animations.AnimationScriptPlayable..cctor
void UnityEngine::Experimental::Animations::AnimationScriptPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::Animations::AnimationScriptPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.Animations", "AnimationScriptPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AvatarIKGoal
#include "UnityEngine/AvatarIKGoal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal LeftFoot
::UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal LeftFoot
void UnityEngine::AvatarIKGoal::_set_LeftFoot(::UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal RightFoot
::UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal RightFoot
void UnityEngine::AvatarIKGoal::_set_RightFoot(::UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal LeftHand
::UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal LeftHand
void UnityEngine::AvatarIKGoal::_set_LeftHand(::UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal RightHand
::UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal RightHand
void UnityEngine::AvatarIKGoal::_set_RightHand(::UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "RightHand", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AvatarIKGoal::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AvatarIKGoal::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.StateInfoIndex
#include "UnityEngine/StateInfoIndex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex CurrentState
::UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_get_CurrentState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "CurrentState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex CurrentState
void UnityEngine::StateInfoIndex::_set_CurrentState(::UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_set_CurrentState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "CurrentState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex NextState
::UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_NextState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_get_NextState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "NextState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex NextState
void UnityEngine::StateInfoIndex::_set_NextState(::UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_set_NextState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "NextState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex ExitState
::UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_ExitState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_get_ExitState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "ExitState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex ExitState
void UnityEngine::StateInfoIndex::_set_ExitState(::UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_set_ExitState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "ExitState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex InterruptedState
::UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_InterruptedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_get_InterruptedState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "InterruptedState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex InterruptedState
void UnityEngine::StateInfoIndex::_set_InterruptedState(::UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::_set_InterruptedState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "InterruptedState", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::StateInfoIndex::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StateInfoIndex::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorUpdateMode
#include "UnityEngine/AnimatorUpdateMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode Normal
::UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode Normal
void UnityEngine::AnimatorUpdateMode::_set_Normal(::UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode AnimatePhysics
::UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_AnimatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_get_AnimatePhysics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "AnimatePhysics"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode AnimatePhysics
void UnityEngine::AnimatorUpdateMode::_set_AnimatePhysics(::UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_set_AnimatePhysics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "AnimatePhysics", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode UnscaledTime
::UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_UnscaledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_get_UnscaledTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "UnscaledTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode UnscaledTime
void UnityEngine::AnimatorUpdateMode::_set_UnscaledTime(::UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::_set_UnscaledTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "UnscaledTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorUpdateMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorUpdateMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Name
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorStateInfo::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Path
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorStateInfo::dyn_m_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Path");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Path"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_FullPath
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorStateInfo::dyn_m_FullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_FullPath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FullPath"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_NormalizedTime
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimatorStateInfo::dyn_m_NormalizedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_NormalizedTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NormalizedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Length
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimatorStateInfo::dyn_m_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Speed
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimatorStateInfo::dyn_m_Speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Speed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_SpeedMultiplier
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimatorStateInfo::dyn_m_SpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_SpeedMultiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Tag
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorStateInfo::dyn_m_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Tag");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Loop
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimatorStateInfo::dyn_m_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::dyn_m_Loop");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Loop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AnimatorStateInfo.IsName
bool UnityEngine::AnimatorStateInfo::IsName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorStateInfo::IsName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.AnimatorUpdateMode
#include "UnityEngine/AnimatorUpdateMode.hpp"
// Including type: UnityEngine.StateInfoIndex
#include "UnityEngine/StateInfoIndex.hpp"
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.HumanBodyBones
#include "UnityEngine/HumanBodyBones.hpp"
// Including type: UnityEngine.RuntimeAnimatorController
#include "UnityEngine/RuntimeAnimatorController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animator.get_isHuman
bool UnityEngine::Animator::get_isHuman() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_isHuman");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHuman", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_hasRootMotion
bool UnityEngine::Animator::get_hasRootMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_hasRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.SetFloat
void UnityEngine::Animator::SetFloat(::StringW name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetFloat
void UnityEngine::Animator::SetFloat(int id, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.SetBool
void UnityEngine::Animator::SetBool(::StringW name, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.GetInteger
int UnityEngine::Animator::GetInteger(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetInteger
void UnityEngine::Animator::SetInteger(::StringW name, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetInteger
void UnityEngine::Animator::SetInteger(int id, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.SetTrigger
void UnityEngine::Animator::SetTrigger(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.SetTrigger
void UnityEngine::Animator::SetTrigger(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.ResetTrigger
void UnityEngine::Animator::ResetTrigger(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::ResetTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.set_applyRootMotion
void UnityEngine::Animator::set_applyRootMotion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_applyRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_applyRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_updateMode
::UnityEngine::AnimatorUpdateMode UnityEngine::Animator::get_updateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_updateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimatorUpdateMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_updateMode
void UnityEngine::Animator::set_updateMode(::UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_updateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.GetLayerIndex
int UnityEngine::Animator::GetLayerIndex(::StringW layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetLayerIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayerIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, layerName);
}
// Autogenerated method: UnityEngine.Animator.SetLayerWeight
void UnityEngine::Animator::SetLayerWeight(int layerIndex, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetLayerWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayerWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, weight);
}
// Autogenerated method: UnityEngine.Animator.GetAnimatorStateInfo
void UnityEngine::Animator::GetAnimatorStateInfo(int layerIndex, ::UnityEngine::StateInfoIndex stateInfoIndex, ByRef<::UnityEngine::AnimatorStateInfo> info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetAnimatorStateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnimatorStateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(stateInfoIndex), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::AnimatorStateInfo&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerIndex, stateInfoIndex, byref(info));
}
// Autogenerated method: UnityEngine.Animator.GetCurrentAnimatorStateInfo
::UnityEngine::AnimatorStateInfo UnityEngine::Animator::GetCurrentAnimatorStateInfo(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetCurrentAnimatorStateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentAnimatorStateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimatorStateInfo, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.set_speed
void UnityEngine::Animator::set_speed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::StringW stateName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer, normalizedTimeOffset);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::StringW stateName, float normalizedTransitionDuration, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::StringW stateName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset, float normalizedTransitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTimeOffset), ::il2cpp_utils::ExtractType(normalizedTransitionTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(int stateHashName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset, float normalizedTransitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateHashName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTimeOffset), ::il2cpp_utils::ExtractType(normalizedTransitionTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateHashName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(::StringW stateName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(::StringW stateName, int layer, float normalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateName, layer, normalizedTime);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(int stateNameHash, int layer, float normalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateNameHash), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateNameHash, layer, normalizedTime);
}
// Autogenerated method: UnityEngine.Animator.GetBoneTransform
::UnityEngine::Transform* UnityEngine::Animator::GetBoneTransform(::UnityEngine::HumanBodyBones humanBoneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetBoneTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanBoneId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, humanBoneId);
}
// Autogenerated method: UnityEngine.Animator.GetBoneTransformInternal
::UnityEngine::Transform* UnityEngine::Animator::GetBoneTransformInternal(int humanBoneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetBoneTransformInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneTransformInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanBoneId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, humanBoneId);
}
// Autogenerated method: UnityEngine.Animator.get_runtimeAnimatorController
::UnityEngine::RuntimeAnimatorController* UnityEngine::Animator::get_runtimeAnimatorController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_runtimeAnimatorController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_runtimeAnimatorController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RuntimeAnimatorController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_runtimeAnimatorController
void UnityEngine::Animator::set_runtimeAnimatorController(::UnityEngine::RuntimeAnimatorController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::set_runtimeAnimatorController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_runtimeAnimatorController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_hasBoundPlayables
bool UnityEngine::Animator::get_hasBoundPlayables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::get_hasBoundPlayables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasBoundPlayables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.StringToHash
int UnityEngine::Animator::StringToHash(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::StringToHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Animator", "StringToHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.SetFloatString
void UnityEngine::Animator::SetFloatString(::StringW name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetFloatID
void UnityEngine::Animator::SetFloatID(int id, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetFloatID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloatID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.SetBoolString
void UnityEngine::Animator::SetBoolString(::StringW name, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetBoolString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoolString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetIntegerString
void UnityEngine::Animator::SetIntegerString(::StringW name, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetIntegerString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIntegerString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetIntegerID
void UnityEngine::Animator::SetIntegerID(int id, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetIntegerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIntegerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.GetIntegerID
int UnityEngine::Animator::GetIntegerID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::GetIntegerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIntegerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetTriggerString
void UnityEngine::Animator::SetTriggerString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetTriggerString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriggerString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.SetTriggerID
void UnityEngine::Animator::SetTriggerID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::SetTriggerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriggerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.ResetTriggerString
void UnityEngine::Animator::ResetTriggerString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::ResetTriggerString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTriggerString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.WriteDefaultPose
void UnityEngine::Animator::WriteDefaultPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animator::WriteDefaultPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDefaultPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimatorControllerPlayable
#include "UnityEngine/Animations/AnimatorControllerPlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimatorControllerPlayable m_NullPlayable
::UnityEngine::Animations::AnimatorControllerPlayable UnityEngine::Animations::AnimatorControllerPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::AnimatorControllerPlayable>("UnityEngine.Animations", "AnimatorControllerPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimatorControllerPlayable m_NullPlayable
void UnityEngine::Animations::AnimatorControllerPlayable::_set_m_NullPlayable(::UnityEngine::Animations::AnimatorControllerPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimatorControllerPlayable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableHandle& UnityEngine::Animations::AnimatorControllerPlayable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimatorControllerPlayable::AnimatorControllerPlayable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimatorControllerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimatorControllerPlayable), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.SetHandle
void UnityEngine::Animations::AnimatorControllerPlayable::SetHandle(::UnityEngine::Playables::PlayableHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::SetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.Equals
bool UnityEngine::Animations::AnimatorControllerPlayable::Equals(::UnityEngine::Animations::AnimatorControllerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::AnimatorControllerPlayable), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable..cctor
void UnityEngine::Animations::AnimatorControllerPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::AnimatorControllerPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorControllerPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorOverrideController
#include "UnityEngine/AnimatorOverrideController.hpp"
// Including type: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback
#include "UnityEngine/AnimatorOverrideController_OnOverrideControllerDirtyCallback.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback OnOverrideControllerDirty
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback*& UnityEngine::AnimatorOverrideController::dyn_OnOverrideControllerDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::dyn_OnOverrideControllerDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnOverrideControllerDirty"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.Internal_Create
void UnityEngine::AnimatorOverrideController::Internal_Create(::UnityEngine::AnimatorOverrideController* self, ::UnityEngine::RuntimeAnimatorController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimatorOverrideController", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, controller);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.set_runtimeAnimatorController
void UnityEngine::AnimatorOverrideController::set_runtimeAnimatorController(::UnityEngine::RuntimeAnimatorController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::set_runtimeAnimatorController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_runtimeAnimatorController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.set_Item
void UnityEngine::AnimatorOverrideController::set_Item(::StringW name, ::UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.Internal_SetClipByName
void UnityEngine::AnimatorOverrideController::Internal_SetClipByName(::StringW name, ::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::Internal_SetClipByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_SetClipByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, clip);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.OnInvalidateOverrideController
void UnityEngine::AnimatorOverrideController::OnInvalidateOverrideController(::UnityEngine::AnimatorOverrideController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::OnInvalidateOverrideController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimatorOverrideController", "OnInvalidateOverrideController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback
#include "UnityEngine/AnimatorOverrideController_OnOverrideControllerDirtyCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback.Invoke
void UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback.EndInvoke
void UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HumanBodyBones
#include "UnityEngine/HumanBodyBones.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Hips
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Hips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Hips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Hips"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Hips
void UnityEngine::HumanBodyBones::_set_Hips(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Hips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Hips", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftUpperLeg
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftUpperLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftUpperLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftUpperLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftUpperLeg
void UnityEngine::HumanBodyBones::_set_LeftUpperLeg(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftUpperLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftUpperLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightUpperLeg
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightUpperLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightUpperLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightUpperLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightUpperLeg
void UnityEngine::HumanBodyBones::_set_RightUpperLeg(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightUpperLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightUpperLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLowerLeg
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLowerLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftLowerLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLowerLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLowerLeg
void UnityEngine::HumanBodyBones::_set_LeftLowerLeg(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftLowerLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLowerLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLowerLeg
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLowerLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightLowerLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLowerLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLowerLeg
void UnityEngine::HumanBodyBones::_set_RightLowerLeg(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightLowerLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLowerLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftFoot
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftFoot
void UnityEngine::HumanBodyBones::_set_LeftFoot(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightFoot
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightFoot
void UnityEngine::HumanBodyBones::_set_RightFoot(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Spine
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Spine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Spine"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Spine
void UnityEngine::HumanBodyBones::_set_Spine(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Spine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Spine", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Chest
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Chest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Chest"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Chest
void UnityEngine::HumanBodyBones::_set_Chest(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Chest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Chest", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones UpperChest
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_UpperChest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_UpperChest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "UpperChest"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones UpperChest
void UnityEngine::HumanBodyBones::_set_UpperChest(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_UpperChest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "UpperChest", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Neck
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Neck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Neck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Neck"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Neck
void UnityEngine::HumanBodyBones::_set_Neck(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Neck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Neck", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Head
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Head
void UnityEngine::HumanBodyBones::_set_Head(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftShoulder
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftShoulder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftShoulder
void UnityEngine::HumanBodyBones::_set_LeftShoulder(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightShoulder
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightShoulder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightShoulder
void UnityEngine::HumanBodyBones::_set_RightShoulder(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftUpperArm
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftUpperArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftUpperArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftUpperArm
void UnityEngine::HumanBodyBones::_set_LeftUpperArm(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftUpperArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftUpperArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightUpperArm
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightUpperArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightUpperArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightUpperArm
void UnityEngine::HumanBodyBones::_set_RightUpperArm(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightUpperArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightUpperArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLowerArm
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLowerArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftLowerArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLowerArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLowerArm
void UnityEngine::HumanBodyBones::_set_LeftLowerArm(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftLowerArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLowerArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLowerArm
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLowerArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightLowerArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLowerArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLowerArm
void UnityEngine::HumanBodyBones::_set_RightLowerArm(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightLowerArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLowerArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftHand
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftHand
void UnityEngine::HumanBodyBones::_set_LeftHand(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightHand
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightHand
void UnityEngine::HumanBodyBones::_set_RightHand(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftToes
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftToes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftToes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftToes
void UnityEngine::HumanBodyBones::_set_LeftToes(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftToes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftToes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightToes
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightToes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightToes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightToes
void UnityEngine::HumanBodyBones::_set_RightToes(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightToes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightToes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftEye
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftEye
void UnityEngine::HumanBodyBones::_set_LeftEye(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightEye
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightEye
void UnityEngine::HumanBodyBones::_set_RightEye(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Jaw
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Jaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_Jaw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Jaw"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Jaw
void UnityEngine::HumanBodyBones::_set_Jaw(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_Jaw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Jaw", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftThumbProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbProximal
void UnityEngine::HumanBodyBones::_set_LeftThumbProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftThumbProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftThumbIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbIntermediate
void UnityEngine::HumanBodyBones::_set_LeftThumbIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftThumbIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftThumbDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbDistal
void UnityEngine::HumanBodyBones::_set_LeftThumbDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftThumbDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftIndexProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexProximal
void UnityEngine::HumanBodyBones::_set_LeftIndexProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftIndexProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftIndexIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexIntermediate
void UnityEngine::HumanBodyBones::_set_LeftIndexIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftIndexIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftIndexDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexDistal
void UnityEngine::HumanBodyBones::_set_LeftIndexDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftIndexDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftMiddleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleProximal
void UnityEngine::HumanBodyBones::_set_LeftMiddleProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftMiddleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftMiddleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleIntermediate
void UnityEngine::HumanBodyBones::_set_LeftMiddleIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftMiddleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftMiddleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleDistal
void UnityEngine::HumanBodyBones::_set_LeftMiddleDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftMiddleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftRingProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingProximal
void UnityEngine::HumanBodyBones::_set_LeftRingProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftRingProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftRingIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingIntermediate
void UnityEngine::HumanBodyBones::_set_LeftRingIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftRingIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftRingDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingDistal
void UnityEngine::HumanBodyBones::_set_LeftRingDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftRingDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftLittleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleProximal
void UnityEngine::HumanBodyBones::_set_LeftLittleProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftLittleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftLittleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleIntermediate
void UnityEngine::HumanBodyBones::_set_LeftLittleIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftLittleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LeftLittleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleDistal
void UnityEngine::HumanBodyBones::_set_LeftLittleDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LeftLittleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightThumbProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbProximal
void UnityEngine::HumanBodyBones::_set_RightThumbProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightThumbProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightThumbIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbIntermediate
void UnityEngine::HumanBodyBones::_set_RightThumbIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightThumbIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightThumbDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbDistal
void UnityEngine::HumanBodyBones::_set_RightThumbDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightThumbDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightIndexProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexProximal
void UnityEngine::HumanBodyBones::_set_RightIndexProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightIndexProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightIndexIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexIntermediate
void UnityEngine::HumanBodyBones::_set_RightIndexIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightIndexIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightIndexDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexDistal
void UnityEngine::HumanBodyBones::_set_RightIndexDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightIndexDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightMiddleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleProximal
void UnityEngine::HumanBodyBones::_set_RightMiddleProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightMiddleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightMiddleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleIntermediate
void UnityEngine::HumanBodyBones::_set_RightMiddleIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightMiddleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightMiddleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleDistal
void UnityEngine::HumanBodyBones::_set_RightMiddleDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightMiddleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightRingProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingProximal
void UnityEngine::HumanBodyBones::_set_RightRingProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightRingProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightRingIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingIntermediate
void UnityEngine::HumanBodyBones::_set_RightRingIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightRingIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightRingDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingDistal
void UnityEngine::HumanBodyBones::_set_RightRingDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightRingDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleProximal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightLittleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleProximal
void UnityEngine::HumanBodyBones::_set_RightLittleProximal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightLittleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleIntermediate
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightLittleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleIntermediate
void UnityEngine::HumanBodyBones::_set_RightLittleIntermediate(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightLittleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleDistal
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_RightLittleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleDistal
void UnityEngine::HumanBodyBones::_set_RightLittleDistal(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_RightLittleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LastBone
::UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LastBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_get_LastBone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LastBone"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LastBone
void UnityEngine::HumanBodyBones::_set_LastBone(::UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::_set_LastBone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LastBone", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::HumanBodyBones::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanBodyBones::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HumanTrait
#include "UnityEngine/HumanTrait.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.HumanTrait.GetBoneIndexFromMono
int UnityEngine::HumanTrait::GetBoneIndexFromMono(int humanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HumanTrait::GetBoneIndexFromMono");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "HumanTrait", "GetBoneIndexFromMono", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, humanId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Motion
#include "UnityEngine/Motion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <isAnimatorMotion>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Motion::dyn_$isAnimatorMotion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Motion::dyn_$isAnimatorMotion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isAnimatorMotion>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Motion.get_isLooping
bool UnityEngine::Motion::get_isLooping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Motion::get_isLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RuntimeAnimatorController
#include "UnityEngine/RuntimeAnimatorController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimationEventSource
#include "UnityEngine/AnimationEventSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationEventSource NoSource
::UnityEngine::AnimationEventSource UnityEngine::AnimationEventSource::_get_NoSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_get_NoSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationEventSource>("UnityEngine", "AnimationEventSource", "NoSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationEventSource NoSource
void UnityEngine::AnimationEventSource::_set_NoSource(::UnityEngine::AnimationEventSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_set_NoSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationEventSource", "NoSource", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationEventSource Legacy
::UnityEngine::AnimationEventSource UnityEngine::AnimationEventSource::_get_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_get_Legacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationEventSource>("UnityEngine", "AnimationEventSource", "Legacy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationEventSource Legacy
void UnityEngine::AnimationEventSource::_set_Legacy(::UnityEngine::AnimationEventSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_set_Legacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationEventSource", "Legacy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationEventSource Animator
::UnityEngine::AnimationEventSource UnityEngine::AnimationEventSource::_get_Animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_get_Animator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationEventSource>("UnityEngine", "AnimationEventSource", "Animator"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationEventSource Animator
void UnityEngine::AnimationEventSource::_set_Animator(::UnityEngine::AnimationEventSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::_set_Animator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationEventSource", "Animator", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimationEventSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEventSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimationEvent
#include "UnityEngine/AnimationEvent.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.AnimationState
#include "UnityEngine/AnimationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Single m_Time
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimationEvent::dyn_m_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_Time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_FunctionName
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AnimationEvent::dyn_m_FunctionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_FunctionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FunctionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_StringParameter
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AnimationEvent::dyn_m_StringParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_StringParameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StringParameter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Object m_ObjectReferenceParameter
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& UnityEngine::AnimationEvent::dyn_m_ObjectReferenceParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_ObjectReferenceParameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectReferenceParameter"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_FloatParameter
[[deprecated("Use field access instead!")]] float& UnityEngine::AnimationEvent::dyn_m_FloatParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_FloatParameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FloatParameter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_IntParameter
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimationEvent::dyn_m_IntParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_IntParameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntParameter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_MessageOptions
[[deprecated("Use field access instead!")]] int& UnityEngine::AnimationEvent::dyn_m_MessageOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_MessageOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MessageOptions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimationEventSource m_Source
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationEventSource& UnityEngine::AnimationEvent::dyn_m_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_Source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Source"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationEventSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimationState m_StateSender
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationState*& UnityEngine::AnimationEvent::dyn_m_StateSender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_StateSender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StateSender"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimatorStateInfo m_AnimatorStateInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimatorStateInfo& UnityEngine::AnimationEvent::dyn_m_AnimatorStateInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_AnimatorStateInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimatorStateInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimatorStateInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AnimatorClipInfo m_AnimatorClipInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimatorClipInfo& UnityEngine::AnimationEvent::dyn_m_AnimatorClipInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationEvent::dyn_m_AnimatorClipInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimatorClipInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimatorClipInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PlayMode
#include "UnityEngine/PlayMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.PlayMode StopSameLayer
::UnityEngine::PlayMode UnityEngine::PlayMode::_get_StopSameLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayMode::_get_StopSameLayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PlayMode>("UnityEngine", "PlayMode", "StopSameLayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PlayMode StopSameLayer
void UnityEngine::PlayMode::_set_StopSameLayer(::UnityEngine::PlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayMode::_set_StopSameLayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PlayMode", "StopSameLayer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PlayMode StopAll
::UnityEngine::PlayMode UnityEngine::PlayMode::_get_StopAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayMode::_get_StopAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PlayMode>("UnityEngine", "PlayMode", "StopAll"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PlayMode StopAll
void UnityEngine::PlayMode::_set_StopAll(::UnityEngine::PlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayMode::_set_StopAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PlayMode", "StopAll", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::PlayMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: UnityEngine.Animation/Enumerator
#include "UnityEngine/Animation_Enumerator.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.AnimationState
#include "UnityEngine/AnimationState.hpp"
// Including type: UnityEngine.PlayMode
#include "UnityEngine/PlayMode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animation.get_clip
::UnityEngine::AnimationClip* UnityEngine::Animation::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.set_clip
void UnityEngine::Animation::set_clip(::UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animation.set_playAutomatically
void UnityEngine::Animation::set_playAutomatically(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::set_playAutomatically");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playAutomatically", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animation.Stop
void UnityEngine::Animation::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.INTERNAL_CALL_Stop
void UnityEngine::Animation::INTERNAL_CALL_Stop(::UnityEngine::Animation* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::INTERNAL_CALL_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Animation", "INTERNAL_CALL_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.Animation.Rewind
void UnityEngine::Animation::Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Rewind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.INTERNAL_CALL_Rewind
void UnityEngine::Animation::INTERNAL_CALL_Rewind(::UnityEngine::Animation* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::INTERNAL_CALL_Rewind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Animation", "INTERNAL_CALL_Rewind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.Animation.Sample
void UnityEngine::Animation::Sample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Sample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.INTERNAL_CALL_Sample
void UnityEngine::Animation::INTERNAL_CALL_Sample(::UnityEngine::Animation* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::INTERNAL_CALL_Sample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Animation", "INTERNAL_CALL_Sample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.Animation.get_isPlaying
bool UnityEngine::Animation::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.get_Item
::UnityEngine::AnimationState* UnityEngine::Animation::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play(::UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play(::StringW animation, ::UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, animation, mode);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play(::StringW animation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, animation);
}
// Autogenerated method: UnityEngine.Animation.CrossFade
void UnityEngine::Animation::CrossFade(::StringW animation, float fadeLength, ::UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(fadeLength), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation, fadeLength, mode);
}
// Autogenerated method: UnityEngine.Animation.CrossFade
void UnityEngine::Animation::CrossFade(::StringW animation, float fadeLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(fadeLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation, fadeLength);
}
// Autogenerated method: UnityEngine.Animation.Blend
void UnityEngine::Animation::Blend(::StringW animation, float targetWeight, float fadeLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Blend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(targetWeight), ::il2cpp_utils::ExtractType(fadeLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation, targetWeight, fadeLength);
}
// Autogenerated method: UnityEngine.Animation.AddClip
void UnityEngine::Animation::AddClip(::UnityEngine::AnimationClip* clip, ::StringW newName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::AddClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(newName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, newName);
}
// Autogenerated method: UnityEngine.Animation.AddClip
void UnityEngine::Animation::AddClip(::UnityEngine::AnimationClip* clip, ::StringW newName, int firstFrame, int lastFrame, bool addLoopFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::AddClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(newName), ::il2cpp_utils::ExtractType(firstFrame), ::il2cpp_utils::ExtractType(lastFrame), ::il2cpp_utils::ExtractType(addLoopFrame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, newName, firstFrame, lastFrame, addLoopFrame);
}
// Autogenerated method: UnityEngine.Animation.AddClip
void UnityEngine::Animation::AddClip(::UnityEngine::AnimationClip* clip, ::StringW newName, int firstFrame, int lastFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::AddClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(newName), ::il2cpp_utils::ExtractType(firstFrame), ::il2cpp_utils::ExtractType(lastFrame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, newName, firstFrame, lastFrame);
}
// Autogenerated method: UnityEngine.Animation.PlayDefaultAnimation
bool UnityEngine::Animation::PlayDefaultAnimation(::UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::PlayDefaultAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayDefaultAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Animation.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Animation::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animation*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.GetState
::UnityEngine::AnimationState* UnityEngine::Animation::GetState(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.GetStateAtIndex
::UnityEngine::AnimationState* UnityEngine::Animation::GetStateAtIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::GetStateAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStateAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationState*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animation.GetStateCount
int UnityEngine::Animation::GetStateCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::GetStateCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStateCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.GetClip
::UnityEngine::AnimationClip* UnityEngine::Animation::GetClip(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.get_animatePhysics
bool UnityEngine::Animation::get_animatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::get_animatePhysics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animatePhysics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animation/Enumerator
#include "UnityEngine/Animation_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animation m_Outer
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& UnityEngine::Animation::Enumerator::dyn_m_Outer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Enumerator::dyn_m_Outer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Outer"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CurrentIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::Animation::Enumerator::dyn_m_CurrentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Enumerator::dyn_m_CurrentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animation/Enumerator.get_Current
::Il2CppObject* UnityEngine::Animation::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Enumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animation::Enumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation/Enumerator.MoveNext
bool UnityEngine::Animation::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Enumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animation::Enumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation/Enumerator.Reset
void UnityEngine::Animation::Enumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animation::Enumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animation::Enumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimationState
#include "UnityEngine/AnimationState.hpp"
// Including type: UnityEngine.WrapMode
#include "UnityEngine/WrapMode.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimationState.set_enabled
void UnityEngine::AnimationState::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.set_weight
void UnityEngine::AnimationState::set_weight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::set_weight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_weight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.set_wrapMode
void UnityEngine::AnimationState::set_wrapMode(::UnityEngine::WrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::set_wrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.set_time
void UnityEngine::AnimationState::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.set_normalizedTime
void UnityEngine::AnimationState::set_normalizedTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::set_normalizedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalizedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.get_speed
float UnityEngine::AnimationState::get_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::get_speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationState.set_speed
void UnityEngine::AnimationState::set_speed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::set_speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.get_length
float UnityEngine::AnimationState::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationState.set_layer
void UnityEngine::AnimationState::set_layer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::set_layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.get_clip
::UnityEngine::AnimationClip* UnityEngine::AnimationState::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AnimationState::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AssetBundle.LoadFromFile_Internal
::UnityEngine::AssetBundle* UnityEngine::AssetBundle::LoadFromFile_Internal(::StringW path, uint crc, uint64_t offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadFromFile_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "LoadFromFile_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(crc), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundle*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, crc, offset);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadFromFile
::UnityEngine::AssetBundle* UnityEngine::AssetBundle::LoadFromFile(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "LoadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AssetBundle*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAsset
::UnityEngine::Object* UnityEngine::AssetBundle::LoadAsset(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAsset
::UnityEngine::Object* UnityEngine::AssetBundle::LoadAsset(::StringW name, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAsset_Internal
::UnityEngine::Object* UnityEngine::AssetBundle::LoadAsset_Internal(::StringW name, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::LoadAsset_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAsset_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: UnityEngine.AssetBundle.Unload
void UnityEngine::AssetBundle::Unload(bool unloadAllLoadedObjects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unloadAllLoadedObjects)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unloadAllLoadedObjects);
}
// Autogenerated method: UnityEngine.AssetBundle.GetAllAssetNames
::ArrayW<::StringW> UnityEngine::AssetBundle::GetAllAssetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::GetAllAssetNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllAssetNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AssetBundle.GetAllScenePaths
::ArrayW<::StringW> UnityEngine::AssetBundle::GetAllScenePaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetBundle::GetAllScenePaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllScenePaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioExtensionDefinition
#include "UnityEngine/AudioExtensionDefinition.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String assemblyName
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AudioExtensionDefinition::dyn_assemblyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionDefinition::dyn_assemblyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assemblyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String extensionNamespace
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AudioExtensionDefinition::dyn_extensionNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionDefinition::dyn_extensionNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extensionNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String extensionTypeName
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AudioExtensionDefinition::dyn_extensionTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionDefinition::dyn_extensionTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extensionTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type extensionType
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::AudioExtensionDefinition::dyn_extensionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionDefinition::dyn_extensionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extensionType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AudioExtensionDefinition.GetExtensionType
::System::Type* UnityEngine::AudioExtensionDefinition::GetExtensionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionDefinition::GetExtensionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtensionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioListenerExtension
#include "UnityEngine/AudioListenerExtension.hpp"
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioListener m_audioListener
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioListener*& UnityEngine::AudioListenerExtension::dyn_m_audioListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioListenerExtension::dyn_m_audioListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioListener"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AudioListenerExtension.get_audioListener
::UnityEngine::AudioListener* UnityEngine::AudioListenerExtension::get_audioListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioListenerExtension::get_audioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioListener*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioListenerExtension.set_audioListener
void UnityEngine::AudioListenerExtension::set_audioListener(::UnityEngine::AudioListener* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioListenerExtension::set_audioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioListenerExtension.ReadExtensionProperty
float UnityEngine::AudioListenerExtension::ReadExtensionProperty(::UnityEngine::PropertyName propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioListenerExtension::ReadExtensionProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AudioListenerExtension*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: UnityEngine.AudioListenerExtension.WriteExtensionProperty
void UnityEngine::AudioListenerExtension::WriteExtensionProperty(::UnityEngine::PropertyName propertyName, float propertyValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioListenerExtension::WriteExtensionProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AudioListenerExtension*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyName, propertyValue);
}
// Autogenerated method: UnityEngine.AudioListenerExtension.ExtensionUpdate
void UnityEngine::AudioListenerExtension::ExtensionUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioListenerExtension::ExtensionUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AudioListenerExtension*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioSourceExtension
#include "UnityEngine/AudioSourceExtension.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource m_audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& UnityEngine::AudioSourceExtension::dyn_m_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceExtension::dyn_m_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_ExtensionManagerUpdateIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::AudioSourceExtension::dyn_m_ExtensionManagerUpdateIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceExtension::dyn_m_ExtensionManagerUpdateIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExtensionManagerUpdateIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AudioSourceExtension.get_audioSource
::UnityEngine::AudioSource* UnityEngine::AudioSourceExtension::get_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceExtension::get_audioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_audioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioSource*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSourceExtension.set_audioSource
void UnityEngine::AudioSourceExtension::set_audioSource(::UnityEngine::AudioSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceExtension::set_audioSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_audioSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSourceExtension.ReadExtensionProperty
float UnityEngine::AudioSourceExtension::ReadExtensionProperty(::UnityEngine::PropertyName propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceExtension::ReadExtensionProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AudioSourceExtension*), 4));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: UnityEngine.AudioSourceExtension.WriteExtensionProperty
void UnityEngine::AudioSourceExtension::WriteExtensionProperty(::UnityEngine::PropertyName propertyName, float propertyValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceExtension::WriteExtensionProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AudioSourceExtension*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyName, propertyValue);
}
// Autogenerated method: UnityEngine.AudioSourceExtension.Play
void UnityEngine::AudioSourceExtension::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceExtension::Play");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AudioSourceExtension*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSourceExtension.Stop
void UnityEngine::AudioSourceExtension::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceExtension::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AudioSourceExtension*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSourceExtension.ExtensionUpdate
void UnityEngine::AudioSourceExtension::ExtensionUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceExtension::ExtensionUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::AudioSourceExtension*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSourceExtension.OnDestroy
void UnityEngine::AudioSourceExtension::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioSourceExtension::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioExtensionManager
#include "UnityEngine/AudioExtensionManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AudioSpatializerExtensionDefinition
#include "UnityEngine/AudioSpatializerExtensionDefinition.hpp"
// Including type: UnityEngine.AudioAmbisonicExtensionDefinition
#include "UnityEngine/AudioAmbisonicExtensionDefinition.hpp"
// Including type: UnityEngine.AudioSourceExtension
#include "UnityEngine/AudioSourceExtension.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioListenerExtension
#include "UnityEngine/AudioListenerExtension.hpp"
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.AudioSpatializerExtensionDefinition> m_ListenerSpatializerExtensionDefinitions
::System::Collections::Generic::List_1<::UnityEngine::AudioSpatializerExtensionDefinition*>* UnityEngine::AudioExtensionManager::_get_m_ListenerSpatializerExtensionDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_get_m_ListenerSpatializerExtensionDefinitions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::AudioSpatializerExtensionDefinition*>*>("UnityEngine", "AudioExtensionManager", "m_ListenerSpatializerExtensionDefinitions"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.AudioSpatializerExtensionDefinition> m_ListenerSpatializerExtensionDefinitions
void UnityEngine::AudioExtensionManager::_set_m_ListenerSpatializerExtensionDefinitions(::System::Collections::Generic::List_1<::UnityEngine::AudioSpatializerExtensionDefinition*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_set_m_ListenerSpatializerExtensionDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioExtensionManager", "m_ListenerSpatializerExtensionDefinitions", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.AudioSpatializerExtensionDefinition> m_SourceSpatializerExtensionDefinitions
::System::Collections::Generic::List_1<::UnityEngine::AudioSpatializerExtensionDefinition*>* UnityEngine::AudioExtensionManager::_get_m_SourceSpatializerExtensionDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_get_m_SourceSpatializerExtensionDefinitions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::AudioSpatializerExtensionDefinition*>*>("UnityEngine", "AudioExtensionManager", "m_SourceSpatializerExtensionDefinitions"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.AudioSpatializerExtensionDefinition> m_SourceSpatializerExtensionDefinitions
void UnityEngine::AudioExtensionManager::_set_m_SourceSpatializerExtensionDefinitions(::System::Collections::Generic::List_1<::UnityEngine::AudioSpatializerExtensionDefinition*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_set_m_SourceSpatializerExtensionDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioExtensionManager", "m_SourceSpatializerExtensionDefinitions", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.AudioAmbisonicExtensionDefinition> m_SourceAmbisonicDecoderExtensionDefinitions
::System::Collections::Generic::List_1<::UnityEngine::AudioAmbisonicExtensionDefinition*>* UnityEngine::AudioExtensionManager::_get_m_SourceAmbisonicDecoderExtensionDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_get_m_SourceAmbisonicDecoderExtensionDefinitions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::AudioAmbisonicExtensionDefinition*>*>("UnityEngine", "AudioExtensionManager", "m_SourceAmbisonicDecoderExtensionDefinitions"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.AudioAmbisonicExtensionDefinition> m_SourceAmbisonicDecoderExtensionDefinitions
void UnityEngine::AudioExtensionManager::_set_m_SourceAmbisonicDecoderExtensionDefinitions(::System::Collections::Generic::List_1<::UnityEngine::AudioAmbisonicExtensionDefinition*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_set_m_SourceAmbisonicDecoderExtensionDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioExtensionManager", "m_SourceAmbisonicDecoderExtensionDefinitions", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.AudioSourceExtension> m_SourceExtensionsToUpdate
::System::Collections::Generic::List_1<::UnityEngine::AudioSourceExtension*>* UnityEngine::AudioExtensionManager::_get_m_SourceExtensionsToUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_get_m_SourceExtensionsToUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::AudioSourceExtension*>*>("UnityEngine", "AudioExtensionManager", "m_SourceExtensionsToUpdate"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.AudioSourceExtension> m_SourceExtensionsToUpdate
void UnityEngine::AudioExtensionManager::_set_m_SourceExtensionsToUpdate(::System::Collections::Generic::List_1<::UnityEngine::AudioSourceExtension*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_set_m_SourceExtensionsToUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioExtensionManager", "m_SourceExtensionsToUpdate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 m_NextStopIndex
int UnityEngine::AudioExtensionManager::_get_m_NextStopIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_get_m_NextStopIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "AudioExtensionManager", "m_NextStopIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 m_NextStopIndex
void UnityEngine::AudioExtensionManager::_set_m_NextStopIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_set_m_NextStopIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioExtensionManager", "m_NextStopIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean m_BuiltinDefinitionsRegistered
bool UnityEngine::AudioExtensionManager::_get_m_BuiltinDefinitionsRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_get_m_BuiltinDefinitionsRegistered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine", "AudioExtensionManager", "m_BuiltinDefinitionsRegistered"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean m_BuiltinDefinitionsRegistered
void UnityEngine::AudioExtensionManager::_set_m_BuiltinDefinitionsRegistered(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_set_m_BuiltinDefinitionsRegistered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioExtensionManager", "m_BuiltinDefinitionsRegistered", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.PropertyName m_SpatializerName
::UnityEngine::PropertyName UnityEngine::AudioExtensionManager::_get_m_SpatializerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_get_m_SpatializerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PropertyName>("UnityEngine", "AudioExtensionManager", "m_SpatializerName"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.PropertyName m_SpatializerName
void UnityEngine::AudioExtensionManager::_set_m_SpatializerName(::UnityEngine::PropertyName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_set_m_SpatializerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioExtensionManager", "m_SpatializerName", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.PropertyName m_SpatializerExtensionName
::UnityEngine::PropertyName UnityEngine::AudioExtensionManager::_get_m_SpatializerExtensionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_get_m_SpatializerExtensionName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PropertyName>("UnityEngine", "AudioExtensionManager", "m_SpatializerExtensionName"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.PropertyName m_SpatializerExtensionName
void UnityEngine::AudioExtensionManager::_set_m_SpatializerExtensionName(::UnityEngine::PropertyName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_set_m_SpatializerExtensionName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioExtensionManager", "m_SpatializerExtensionName", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.PropertyName m_ListenerSpatializerExtensionName
::UnityEngine::PropertyName UnityEngine::AudioExtensionManager::_get_m_ListenerSpatializerExtensionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_get_m_ListenerSpatializerExtensionName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::PropertyName>("UnityEngine", "AudioExtensionManager", "m_ListenerSpatializerExtensionName"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.PropertyName m_ListenerSpatializerExtensionName
void UnityEngine::AudioExtensionManager::_set_m_ListenerSpatializerExtensionName(::UnityEngine::PropertyName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::_set_m_ListenerSpatializerExtensionName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioExtensionManager", "m_ListenerSpatializerExtensionName", value));
}
// Autogenerated method: UnityEngine.AudioExtensionManager.AddSpatializerExtension
::UnityEngine::AudioSourceExtension* UnityEngine::AudioExtensionManager::AddSpatializerExtension(::UnityEngine::AudioSource* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::AddSpatializerExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", "AddSpatializerExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioSourceExtension*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.AudioExtensionManager.AddAmbisonicDecoderExtension
::UnityEngine::AudioSourceExtension* UnityEngine::AudioExtensionManager::AddAmbisonicDecoderExtension(::UnityEngine::AudioSource* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::AddAmbisonicDecoderExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", "AddAmbisonicDecoderExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioSourceExtension*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.AudioExtensionManager.WriteExtensionProperties
void UnityEngine::AudioExtensionManager::WriteExtensionProperties(::UnityEngine::AudioSourceExtension* extension, ::StringW extensionName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::WriteExtensionProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", "WriteExtensionProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension), ::il2cpp_utils::ExtractType(extensionName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extension, extensionName);
}
// Autogenerated method: UnityEngine.AudioExtensionManager.AddSpatializerExtension
::UnityEngine::AudioListenerExtension* UnityEngine::AudioExtensionManager::AddSpatializerExtension(::UnityEngine::AudioListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::AddSpatializerExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", "AddSpatializerExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioListenerExtension*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener);
}
// Autogenerated method: UnityEngine.AudioExtensionManager.WriteExtensionProperties
void UnityEngine::AudioExtensionManager::WriteExtensionProperties(::UnityEngine::AudioListenerExtension* extension, ::StringW extensionName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::WriteExtensionProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", "WriteExtensionProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension), ::il2cpp_utils::ExtractType(extensionName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extension, extensionName);
}
// Autogenerated method: UnityEngine.AudioExtensionManager.AddExtensionToManager
void UnityEngine::AudioExtensionManager::AddExtensionToManager(::UnityEngine::AudioSourceExtension* extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::AddExtensionToManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", "AddExtensionToManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extension);
}
// Autogenerated method: UnityEngine.AudioExtensionManager.RemoveExtensionFromManager
void UnityEngine::AudioExtensionManager::RemoveExtensionFromManager(::UnityEngine::AudioSourceExtension* extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::RemoveExtensionFromManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", "RemoveExtensionFromManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extension);
}
// Autogenerated method: UnityEngine.AudioExtensionManager.Update
void UnityEngine::AudioExtensionManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioExtensionManager.GetReadyToPlay
void UnityEngine::AudioExtensionManager::GetReadyToPlay(::UnityEngine::AudioSourceExtension* extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::GetReadyToPlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", "GetReadyToPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extension);
}
// Autogenerated method: UnityEngine.AudioExtensionManager.RegisterBuiltinDefinitions
void UnityEngine::AudioExtensionManager::RegisterBuiltinDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::RegisterBuiltinDefinitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", "RegisterBuiltinDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioExtensionManager.GetAudioListener
::UnityEngine::Object* UnityEngine::AudioExtensionManager::GetAudioListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::GetAudioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", "GetAudioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioExtensionManager..cctor
void UnityEngine::AudioExtensionManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AudioExtensionManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioExtensionManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
