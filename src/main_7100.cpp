// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.BlockState
#include "Pathfinding/Ionic/Zlib/BlockState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.BlockState NeedMore
::Pathfinding::Ionic::Zlib::BlockState Pathfinding::Ionic::Zlib::BlockState::_get_NeedMore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::BlockState::_get_NeedMore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::BlockState>("Pathfinding.Ionic.Zlib", "BlockState", "NeedMore"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.BlockState NeedMore
void Pathfinding::Ionic::Zlib::BlockState::_set_NeedMore(::Pathfinding::Ionic::Zlib::BlockState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::BlockState::_set_NeedMore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "BlockState", "NeedMore", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.BlockState BlockDone
::Pathfinding::Ionic::Zlib::BlockState Pathfinding::Ionic::Zlib::BlockState::_get_BlockDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::BlockState::_get_BlockDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::BlockState>("Pathfinding.Ionic.Zlib", "BlockState", "BlockDone"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.BlockState BlockDone
void Pathfinding::Ionic::Zlib::BlockState::_set_BlockDone(::Pathfinding::Ionic::Zlib::BlockState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::BlockState::_set_BlockDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "BlockState", "BlockDone", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.BlockState FinishStarted
::Pathfinding::Ionic::Zlib::BlockState Pathfinding::Ionic::Zlib::BlockState::_get_FinishStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::BlockState::_get_FinishStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::BlockState>("Pathfinding.Ionic.Zlib", "BlockState", "FinishStarted"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.BlockState FinishStarted
void Pathfinding::Ionic::Zlib::BlockState::_set_FinishStarted(::Pathfinding::Ionic::Zlib::BlockState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::BlockState::_set_FinishStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "BlockState", "FinishStarted", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.BlockState FinishDone
::Pathfinding::Ionic::Zlib::BlockState Pathfinding::Ionic::Zlib::BlockState::_get_FinishDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::BlockState::_get_FinishDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::BlockState>("Pathfinding.Ionic.Zlib", "BlockState", "FinishDone"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.BlockState FinishDone
void Pathfinding::Ionic::Zlib::BlockState::_set_FinishDone(::Pathfinding::Ionic::Zlib::BlockState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::BlockState::_set_FinishDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "BlockState", "FinishDone", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::BlockState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::BlockState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.DeflateFlavor
#include "Pathfinding/Ionic/Zlib/DeflateFlavor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.DeflateFlavor Store
::Pathfinding::Ionic::Zlib::DeflateFlavor Pathfinding::Ionic::Zlib::DeflateFlavor::_get_Store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateFlavor::_get_Store");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::DeflateFlavor>("Pathfinding.Ionic.Zlib", "DeflateFlavor", "Store"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.DeflateFlavor Store
void Pathfinding::Ionic::Zlib::DeflateFlavor::_set_Store(::Pathfinding::Ionic::Zlib::DeflateFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateFlavor::_set_Store");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateFlavor", "Store", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.DeflateFlavor Fast
::Pathfinding::Ionic::Zlib::DeflateFlavor Pathfinding::Ionic::Zlib::DeflateFlavor::_get_Fast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateFlavor::_get_Fast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::DeflateFlavor>("Pathfinding.Ionic.Zlib", "DeflateFlavor", "Fast"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.DeflateFlavor Fast
void Pathfinding::Ionic::Zlib::DeflateFlavor::_set_Fast(::Pathfinding::Ionic::Zlib::DeflateFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateFlavor::_set_Fast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateFlavor", "Fast", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.DeflateFlavor Slow
::Pathfinding::Ionic::Zlib::DeflateFlavor Pathfinding::Ionic::Zlib::DeflateFlavor::_get_Slow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateFlavor::_get_Slow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::DeflateFlavor>("Pathfinding.Ionic.Zlib", "DeflateFlavor", "Slow"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.DeflateFlavor Slow
void Pathfinding::Ionic::Zlib::DeflateFlavor::_set_Slow(::Pathfinding::Ionic::Zlib::DeflateFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateFlavor::_set_Slow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateFlavor", "Slow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateFlavor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateFlavor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.DeflateManager
#include "Pathfinding/Ionic/Zlib/DeflateManager.hpp"
// Including type: Pathfinding.Ionic.Zlib.DeflateManager/CompressFunc
#include "Pathfinding/Ionic/Zlib/DeflateManager_CompressFunc.hpp"
// Including type: Pathfinding.Ionic.Zlib.DeflateManager/Config
#include "Pathfinding/Ionic/Zlib/DeflateManager_Config.hpp"
// Including type: Pathfinding.Ionic.Zlib.ZlibCodec
#include "Pathfinding/Ionic/Zlib/ZlibCodec.hpp"
// Including type: Pathfinding.Ionic.Zlib.Tree
#include "Pathfinding/Ionic/Zlib/Tree.hpp"
// Including type: Pathfinding.Ionic.Zlib.BlockState
#include "Pathfinding/Ionic/Zlib/BlockState.hpp"
// Including type: Pathfinding.Ionic.Zlib.FlushType
#include "Pathfinding/Ionic/Zlib/FlushType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MEM_LEVEL_MAX
int Pathfinding::Ionic::Zlib::DeflateManager::_get_MEM_LEVEL_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_MEM_LEVEL_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "MEM_LEVEL_MAX"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MEM_LEVEL_MAX
void Pathfinding::Ionic::Zlib::DeflateManager::_set_MEM_LEVEL_MAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_MEM_LEVEL_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "MEM_LEVEL_MAX", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MEM_LEVEL_DEFAULT
int Pathfinding::Ionic::Zlib::DeflateManager::_get_MEM_LEVEL_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_MEM_LEVEL_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "MEM_LEVEL_DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MEM_LEVEL_DEFAULT
void Pathfinding::Ionic::Zlib::DeflateManager::_set_MEM_LEVEL_DEFAULT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_MEM_LEVEL_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "MEM_LEVEL_DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] _ErrorMessage
::ArrayW<::StringW> Pathfinding::Ionic::Zlib::DeflateManager::_get__ErrorMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get__ErrorMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Pathfinding.Ionic.Zlib", "DeflateManager", "_ErrorMessage"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] _ErrorMessage
void Pathfinding::Ionic::Zlib::DeflateManager::_set__ErrorMessage(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set__ErrorMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "_ErrorMessage", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 PRESET_DICT
int Pathfinding::Ionic::Zlib::DeflateManager::_get_PRESET_DICT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_PRESET_DICT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "PRESET_DICT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 PRESET_DICT
void Pathfinding::Ionic::Zlib::DeflateManager::_set_PRESET_DICT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_PRESET_DICT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "PRESET_DICT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 INIT_STATE
int Pathfinding::Ionic::Zlib::DeflateManager::_get_INIT_STATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_INIT_STATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "INIT_STATE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 INIT_STATE
void Pathfinding::Ionic::Zlib::DeflateManager::_set_INIT_STATE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_INIT_STATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "INIT_STATE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 BUSY_STATE
int Pathfinding::Ionic::Zlib::DeflateManager::_get_BUSY_STATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_BUSY_STATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "BUSY_STATE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 BUSY_STATE
void Pathfinding::Ionic::Zlib::DeflateManager::_set_BUSY_STATE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_BUSY_STATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "BUSY_STATE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 FINISH_STATE
int Pathfinding::Ionic::Zlib::DeflateManager::_get_FINISH_STATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_FINISH_STATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "FINISH_STATE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 FINISH_STATE
void Pathfinding::Ionic::Zlib::DeflateManager::_set_FINISH_STATE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_FINISH_STATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "FINISH_STATE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Z_DEFLATED
int Pathfinding::Ionic::Zlib::DeflateManager::_get_Z_DEFLATED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_Z_DEFLATED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "Z_DEFLATED"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Z_DEFLATED
void Pathfinding::Ionic::Zlib::DeflateManager::_set_Z_DEFLATED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_Z_DEFLATED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "Z_DEFLATED", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 STORED_BLOCK
int Pathfinding::Ionic::Zlib::DeflateManager::_get_STORED_BLOCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_STORED_BLOCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "STORED_BLOCK"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 STORED_BLOCK
void Pathfinding::Ionic::Zlib::DeflateManager::_set_STORED_BLOCK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_STORED_BLOCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "STORED_BLOCK", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 STATIC_TREES
int Pathfinding::Ionic::Zlib::DeflateManager::_get_STATIC_TREES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_STATIC_TREES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "STATIC_TREES"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 STATIC_TREES
void Pathfinding::Ionic::Zlib::DeflateManager::_set_STATIC_TREES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_STATIC_TREES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "STATIC_TREES", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 DYN_TREES
int Pathfinding::Ionic::Zlib::DeflateManager::_get_DYN_TREES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_DYN_TREES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "DYN_TREES"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 DYN_TREES
void Pathfinding::Ionic::Zlib::DeflateManager::_set_DYN_TREES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_DYN_TREES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "DYN_TREES", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Z_BINARY
int Pathfinding::Ionic::Zlib::DeflateManager::_get_Z_BINARY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_Z_BINARY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "Z_BINARY"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Z_BINARY
void Pathfinding::Ionic::Zlib::DeflateManager::_set_Z_BINARY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_Z_BINARY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "Z_BINARY", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Z_ASCII
int Pathfinding::Ionic::Zlib::DeflateManager::_get_Z_ASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_Z_ASCII");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "Z_ASCII"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Z_ASCII
void Pathfinding::Ionic::Zlib::DeflateManager::_set_Z_ASCII(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_Z_ASCII");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "Z_ASCII", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Z_UNKNOWN
int Pathfinding::Ionic::Zlib::DeflateManager::_get_Z_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_Z_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "Z_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Z_UNKNOWN
void Pathfinding::Ionic::Zlib::DeflateManager::_set_Z_UNKNOWN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_Z_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "Z_UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Buf_size
int Pathfinding::Ionic::Zlib::DeflateManager::_get_Buf_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_Buf_size");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "Buf_size"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Buf_size
void Pathfinding::Ionic::Zlib::DeflateManager::_set_Buf_size(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_Buf_size");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "Buf_size", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MIN_MATCH
int Pathfinding::Ionic::Zlib::DeflateManager::_get_MIN_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_MIN_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "MIN_MATCH"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MIN_MATCH
void Pathfinding::Ionic::Zlib::DeflateManager::_set_MIN_MATCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_MIN_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "MIN_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MAX_MATCH
int Pathfinding::Ionic::Zlib::DeflateManager::_get_MAX_MATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_MAX_MATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "MAX_MATCH"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MAX_MATCH
void Pathfinding::Ionic::Zlib::DeflateManager::_set_MAX_MATCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_MAX_MATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "MAX_MATCH", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 MIN_LOOKAHEAD
int Pathfinding::Ionic::Zlib::DeflateManager::_get_MIN_LOOKAHEAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_MIN_LOOKAHEAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "MIN_LOOKAHEAD"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 MIN_LOOKAHEAD
void Pathfinding::Ionic::Zlib::DeflateManager::_set_MIN_LOOKAHEAD(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_MIN_LOOKAHEAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "MIN_LOOKAHEAD", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 HEAP_SIZE
int Pathfinding::Ionic::Zlib::DeflateManager::_get_HEAP_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_HEAP_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "HEAP_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 HEAP_SIZE
void Pathfinding::Ionic::Zlib::DeflateManager::_set_HEAP_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_HEAP_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "HEAP_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 END_BLOCK
int Pathfinding::Ionic::Zlib::DeflateManager::_get_END_BLOCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_get_END_BLOCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "DeflateManager", "END_BLOCK"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 END_BLOCK
void Pathfinding::Ionic::Zlib::DeflateManager::_set_END_BLOCK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_set_END_BLOCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager", "END_BLOCK", value));
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zlib.DeflateManager/CompressFunc DeflateFunction
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::DeflateManager::CompressFunc*& Pathfinding::Ionic::Zlib::DeflateManager::dyn_DeflateFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_DeflateFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeflateFunction"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::DeflateManager::CompressFunc**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.ZlibCodec _codec
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::ZlibCodec*& Pathfinding::Ionic::Zlib::DeflateManager::dyn__codec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn__codec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codec"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::ZlibCodec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 status
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] pending
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::Ionic::Zlib::DeflateManager::dyn_pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_pending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pending"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 nextPending
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_nextPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_nextPending");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPending"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 pendingCount
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_pendingCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_pendingCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pendingCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.SByte data_type
[[deprecated("Use field access instead!")]] int8_t& Pathfinding::Ionic::Zlib::DeflateManager::dyn_data_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_data_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data_type"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 last_flush
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_last_flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_last_flush");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last_flush"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 w_size
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_w_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_w_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 w_bits
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_w_bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_w_bits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w_bits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 w_mask
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_w_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_w_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w_mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] window
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::Ionic::Zlib::DeflateManager::dyn_window() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_window");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "window"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 window_size
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_window_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_window_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "window_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] prev
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Pathfinding::Ionic::Zlib::DeflateManager::dyn_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] head
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Pathfinding::Ionic::Zlib::DeflateManager::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ins_h
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_ins_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_ins_h");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ins_h"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hash_size
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_hash_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_hash_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hash_bits
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_hash_bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_hash_bits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash_bits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hash_mask
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_hash_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_hash_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash_mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hash_shift
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_hash_shift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_hash_shift");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash_shift"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 block_start
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_block_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_block_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "block_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zlib.DeflateManager/Config config
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::DeflateManager::Config*& Pathfinding::Ionic::Zlib::DeflateManager::dyn_config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_config");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "config"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::DeflateManager::Config**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 match_length
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_match_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_match_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "match_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 prev_match
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_prev_match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_prev_match");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev_match"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 match_available
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_match_available() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_match_available");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "match_available"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 strstart
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_strstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_strstart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strstart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 match_start
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_match_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_match_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "match_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lookahead
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_lookahead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_lookahead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookahead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 prev_length
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_prev_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_prev_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.CompressionLevel compressionLevel
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::CompressionLevel& Pathfinding::Ionic::Zlib::DeflateManager::dyn_compressionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_compressionLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressionLevel"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::CompressionLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.CompressionStrategy compressionStrategy
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::CompressionStrategy& Pathfinding::Ionic::Zlib::DeflateManager::dyn_compressionStrategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_compressionStrategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressionStrategy"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::CompressionStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] dyn_ltree
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Pathfinding::Ionic::Zlib::DeflateManager::dyn_dyn_ltree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_dyn_ltree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dyn_ltree"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] dyn_dtree
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Pathfinding::Ionic::Zlib::DeflateManager::dyn_dyn_dtree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_dyn_dtree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dyn_dtree"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] bl_tree
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Pathfinding::Ionic::Zlib::DeflateManager::dyn_bl_tree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_bl_tree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bl_tree"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.Tree treeLiterals
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::Tree*& Pathfinding::Ionic::Zlib::DeflateManager::dyn_treeLiterals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_treeLiterals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "treeLiterals"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::Tree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.Tree treeDistances
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::Tree*& Pathfinding::Ionic::Zlib::DeflateManager::dyn_treeDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_treeDistances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "treeDistances"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::Tree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.Tree treeBitLengths
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::Tree*& Pathfinding::Ionic::Zlib::DeflateManager::dyn_treeBitLengths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_treeBitLengths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "treeBitLengths"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::Tree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] bl_count
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Pathfinding::Ionic::Zlib::DeflateManager::dyn_bl_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_bl_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bl_count"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] heap
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::DeflateManager::dyn_heap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_heap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heap"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 heap_len
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_heap_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_heap_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heap_len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 heap_max
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_heap_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_heap_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heap_max"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.SByte[] depth
[[deprecated("Use field access instead!")]] ::ArrayW<int8_t>& Pathfinding::Ionic::Zlib::DeflateManager::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<::ArrayW<int8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _lengthOffset
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn__lengthOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn__lengthOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lit_bufsize
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_lit_bufsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_lit_bufsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lit_bufsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 last_lit
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_last_lit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_last_lit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last_lit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _distanceOffset
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn__distanceOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn__distanceOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 opt_len
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_opt_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_opt_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opt_len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 static_len
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_static_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_static_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "static_len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 matches
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_matches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_matches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matches"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 last_eob_len
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_last_eob_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_last_eob_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last_eob_len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int16 bi_buf
[[deprecated("Use field access instead!")]] int16_t& Pathfinding::Ionic::Zlib::DeflateManager::dyn_bi_buf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_bi_buf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bi_buf"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bi_valid
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::dyn_bi_valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_bi_valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bi_valid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean Rfc1950BytesEmitted
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::DeflateManager::dyn_Rfc1950BytesEmitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn_Rfc1950BytesEmitted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rfc1950BytesEmitted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _WantRfc1950HeaderBytes
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::DeflateManager::dyn__WantRfc1950HeaderBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::dyn__WantRfc1950HeaderBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_WantRfc1950HeaderBytes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager..cctor
void Pathfinding::Ionic::Zlib::DeflateManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "DeflateManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager._InitializeLazyMatch
void Pathfinding::Ionic::Zlib::DeflateManager::_InitializeLazyMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_InitializeLazyMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InitializeLazyMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager._InitializeTreeData
void Pathfinding::Ionic::Zlib::DeflateManager::_InitializeTreeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_InitializeTreeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InitializeTreeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager._InitializeBlocks
void Pathfinding::Ionic::Zlib::DeflateManager::_InitializeBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_InitializeBlocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InitializeBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.pqdownheap
void Pathfinding::Ionic::Zlib::DeflateManager::pqdownheap(::ArrayW<int16_t> tree, int k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::pqdownheap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "pqdownheap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(k)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tree, k);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager._IsSmaller
bool Pathfinding::Ionic::Zlib::DeflateManager::_IsSmaller(::ArrayW<int16_t> tree, int n, int m, ::ArrayW<int8_t> depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_IsSmaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "DeflateManager", "_IsSmaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tree, n, m, depth);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.scan_tree
void Pathfinding::Ionic::Zlib::DeflateManager::scan_tree(::ArrayW<int16_t> tree, int max_code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::scan_tree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "scan_tree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(max_code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tree, max_code);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.build_bl_tree
int Pathfinding::Ionic::Zlib::DeflateManager::build_bl_tree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::build_bl_tree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "build_bl_tree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.send_all_trees
void Pathfinding::Ionic::Zlib::DeflateManager::send_all_trees(int lcodes, int dcodes, int blcodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::send_all_trees");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send_all_trees", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lcodes), ::il2cpp_utils::ExtractType(dcodes), ::il2cpp_utils::ExtractType(blcodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lcodes, dcodes, blcodes);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.send_tree
void Pathfinding::Ionic::Zlib::DeflateManager::send_tree(::ArrayW<int16_t> tree, int max_code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::send_tree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send_tree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(max_code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tree, max_code);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.put_bytes
void Pathfinding::Ionic::Zlib::DeflateManager::put_bytes(::ArrayW<uint8_t> p, int start, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::put_bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "put_bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p, start, len);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.send_code
void Pathfinding::Ionic::Zlib::DeflateManager::send_code(int c, ::ArrayW<int16_t> tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::send_code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(tree)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c, tree);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.send_bits
void Pathfinding::Ionic::Zlib::DeflateManager::send_bits(int value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::send_bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send_bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, length);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager._tr_align
void Pathfinding::Ionic::Zlib::DeflateManager::_tr_align() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_tr_align");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_tr_align", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager._tr_tally
bool Pathfinding::Ionic::Zlib::DeflateManager::_tr_tally(int dist, int lc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_tr_tally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_tr_tally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dist), ::il2cpp_utils::ExtractType(lc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dist, lc);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.send_compressed_block
void Pathfinding::Ionic::Zlib::DeflateManager::send_compressed_block(::ArrayW<int16_t> ltree, ::ArrayW<int16_t> dtree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::send_compressed_block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "send_compressed_block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ltree), ::il2cpp_utils::ExtractType(dtree)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ltree, dtree);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.set_data_type
void Pathfinding::Ionic::Zlib::DeflateManager::set_data_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::set_data_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_data_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.bi_flush
void Pathfinding::Ionic::Zlib::DeflateManager::bi_flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::bi_flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "bi_flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.bi_windup
void Pathfinding::Ionic::Zlib::DeflateManager::bi_windup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::bi_windup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "bi_windup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.copy_block
void Pathfinding::Ionic::Zlib::DeflateManager::copy_block(int buf, int len, bool header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::copy_block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "copy_block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(header)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buf, len, header);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.flush_block_only
void Pathfinding::Ionic::Zlib::DeflateManager::flush_block_only(bool eof) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::flush_block_only");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "flush_block_only", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eof)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eof);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.DeflateNone
::Pathfinding::Ionic::Zlib::BlockState Pathfinding::Ionic::Zlib::DeflateManager::DeflateNone(::Pathfinding::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::DeflateNone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeflateNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zlib::BlockState, false>(this, ___internal__method, flush);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager._tr_stored_block
void Pathfinding::Ionic::Zlib::DeflateManager::_tr_stored_block(int buf, int stored_len, bool eof) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_tr_stored_block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_tr_stored_block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(stored_len), ::il2cpp_utils::ExtractType(eof)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buf, stored_len, eof);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager._tr_flush_block
void Pathfinding::Ionic::Zlib::DeflateManager::_tr_flush_block(int buf, int stored_len, bool eof) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_tr_flush_block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_tr_flush_block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(stored_len), ::il2cpp_utils::ExtractType(eof)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buf, stored_len, eof);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager._fillWindow
void Pathfinding::Ionic::Zlib::DeflateManager::_fillWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::_fillWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_fillWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.DeflateFast
::Pathfinding::Ionic::Zlib::BlockState Pathfinding::Ionic::Zlib::DeflateManager::DeflateFast(::Pathfinding::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::DeflateFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeflateFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zlib::BlockState, false>(this, ___internal__method, flush);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.DeflateSlow
::Pathfinding::Ionic::Zlib::BlockState Pathfinding::Ionic::Zlib::DeflateManager::DeflateSlow(::Pathfinding::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::DeflateSlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeflateSlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zlib::BlockState, false>(this, ___internal__method, flush);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.longest_match
int Pathfinding::Ionic::Zlib::DeflateManager::longest_match(int cur_match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::longest_match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "longest_match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cur_match)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cur_match);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.get_WantRfc1950HeaderBytes
bool Pathfinding::Ionic::Zlib::DeflateManager::get_WantRfc1950HeaderBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::get_WantRfc1950HeaderBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WantRfc1950HeaderBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.set_WantRfc1950HeaderBytes
void Pathfinding::Ionic::Zlib::DeflateManager::set_WantRfc1950HeaderBytes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::set_WantRfc1950HeaderBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WantRfc1950HeaderBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.Initialize
int Pathfinding::Ionic::Zlib::DeflateManager::Initialize(::Pathfinding::Ionic::Zlib::ZlibCodec* codec, ::Pathfinding::Ionic::Zlib::CompressionLevel level, int bits, ::Pathfinding::Ionic::Zlib::CompressionStrategy compressionStrategy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codec), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(compressionStrategy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, codec, level, bits, compressionStrategy);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.Initialize
int Pathfinding::Ionic::Zlib::DeflateManager::Initialize(::Pathfinding::Ionic::Zlib::ZlibCodec* codec, ::Pathfinding::Ionic::Zlib::CompressionLevel level, int windowBits, int memLevel, ::Pathfinding::Ionic::Zlib::CompressionStrategy strategy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codec), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(windowBits), ::il2cpp_utils::ExtractType(memLevel), ::il2cpp_utils::ExtractType(strategy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, codec, level, windowBits, memLevel, strategy);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.Reset
void Pathfinding::Ionic::Zlib::DeflateManager::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.SetDeflater
void Pathfinding::Ionic::Zlib::DeflateManager::SetDeflater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::SetDeflater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeflater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager.Deflate
int Pathfinding::Ionic::Zlib::DeflateManager::Deflate(::Pathfinding::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Deflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, flush);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Ionic.Zlib.DeflateManager/CompressFunc
#include "Pathfinding/Ionic/Zlib/DeflateManager_CompressFunc.hpp"
// Including type: Pathfinding.Ionic.Zlib.BlockState
#include "Pathfinding/Ionic/Zlib/BlockState.hpp"
// Including type: Pathfinding.Ionic.Zlib.FlushType
#include "Pathfinding/Ionic/Zlib/FlushType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager/CompressFunc.Invoke
::Pathfinding::Ionic::Zlib::BlockState Pathfinding::Ionic::Zlib::DeflateManager::CompressFunc::Invoke(::Pathfinding::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::CompressFunc::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Ionic::Zlib::DeflateManager::CompressFunc*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zlib::BlockState, false>(this, ___internal__method, flush);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager/CompressFunc.BeginInvoke
::System::IAsyncResult* Pathfinding::Ionic::Zlib::DeflateManager::CompressFunc::BeginInvoke(::Pathfinding::Ionic::Zlib::FlushType flush, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::CompressFunc::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Ionic::Zlib::DeflateManager::CompressFunc*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, flush, callback, object);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager/CompressFunc.EndInvoke
::Pathfinding::Ionic::Zlib::BlockState Pathfinding::Ionic::Zlib::DeflateManager::CompressFunc::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::CompressFunc::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Ionic::Zlib::DeflateManager::CompressFunc*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zlib::BlockState, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.DeflateManager/Config
#include "Pathfinding/Ionic/Zlib/DeflateManager_Config.hpp"
// Including type: Pathfinding.Ionic.Zlib.CompressionLevel
#include "Pathfinding/Ionic/Zlib/CompressionLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Pathfinding.Ionic.Zlib.DeflateManager/Config[] Table
::ArrayW<::Pathfinding::Ionic::Zlib::DeflateManager::Config*> Pathfinding::Ionic::Zlib::DeflateManager::Config::_get_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Config::_get_Table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Pathfinding::Ionic::Zlib::DeflateManager::Config*>>("Pathfinding.Ionic.Zlib", "DeflateManager/Config", "Table"));
}
// Autogenerated static field setter
// Set static field: static private readonly Pathfinding.Ionic.Zlib.DeflateManager/Config[] Table
void Pathfinding::Ionic::Zlib::DeflateManager::Config::_set_Table(::ArrayW<::Pathfinding::Ionic::Zlib::DeflateManager::Config*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Config::_set_Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "DeflateManager/Config", "Table", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 GoodLength
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::Config::dyn_GoodLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Config::dyn_GoodLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GoodLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 MaxLazy
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::Config::dyn_MaxLazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Config::dyn_MaxLazy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxLazy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 NiceLength
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::Config::dyn_NiceLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Config::dyn_NiceLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NiceLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 MaxChainLength
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::DeflateManager::Config::dyn_MaxChainLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Config::dyn_MaxChainLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxChainLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.DeflateFlavor Flavor
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::DeflateFlavor& Pathfinding::Ionic::Zlib::DeflateManager::Config::dyn_Flavor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Config::dyn_Flavor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flavor"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::DeflateFlavor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager/Config..cctor
void Pathfinding::Ionic::Zlib::DeflateManager::Config::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Config::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "DeflateManager/Config", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateManager/Config.Lookup
::Pathfinding::Ionic::Zlib::DeflateManager::Config* Pathfinding::Ionic::Zlib::DeflateManager::Config::Lookup(::Pathfinding::Ionic::Zlib::CompressionLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateManager::Config::Lookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "DeflateManager/Config", "Lookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zlib::DeflateManager::Config*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.DeflateStream
#include "Pathfinding/Ionic/Zlib/DeflateStream.hpp"
// Including type: Pathfinding.Ionic.Zlib.ZlibBaseStream
#include "Pathfinding/Ionic/Zlib/ZlibBaseStream.hpp"
// Including type: Pathfinding.Ionic.Zlib.CompressionStrategy
#include "Pathfinding/Ionic/Zlib/CompressionStrategy.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.ZlibBaseStream _baseStream
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::ZlibBaseStream*& Pathfinding::Ionic::Zlib::DeflateStream::dyn__baseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::dyn__baseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseStream"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::ZlibBaseStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream _innerStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Pathfinding::Ionic::Zlib::DeflateStream::dyn__innerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::dyn__innerStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::DeflateStream::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.set_BufferSize
void Pathfinding::Ionic::Zlib::DeflateStream::set_BufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::set_BufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.set_Strategy
void Pathfinding::Ionic::Zlib::DeflateStream::set_Strategy(::Pathfinding::Ionic::Zlib::CompressionStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::set_Strategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Strategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.Dispose
void Pathfinding::Ionic::Zlib::DeflateStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.get_CanRead
bool Pathfinding::Ionic::Zlib::DeflateStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.get_CanSeek
bool Pathfinding::Ionic::Zlib::DeflateStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.get_CanWrite
bool Pathfinding::Ionic::Zlib::DeflateStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.Flush
void Pathfinding::Ionic::Zlib::DeflateStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.get_Length
int64_t Pathfinding::Ionic::Zlib::DeflateStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.get_Position
int64_t Pathfinding::Ionic::Zlib::DeflateStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.set_Position
void Pathfinding::Ionic::Zlib::DeflateStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.Read
int Pathfinding::Ionic::Zlib::DeflateStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.Seek
int64_t Pathfinding::Ionic::Zlib::DeflateStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.SetLength
void Pathfinding::Ionic::Zlib::DeflateStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.DeflateStream.Write
void Pathfinding::Ionic::Zlib::DeflateStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::DeflateStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.GZipStream
#include "Pathfinding/Ionic/Zlib/GZipStream.hpp"
// Including type: Pathfinding.Ionic.Zlib.ZlibBaseStream
#include "Pathfinding/Ionic/Zlib/ZlibBaseStream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.DateTime _unixEpoch
::System::DateTime Pathfinding::Ionic::Zlib::GZipStream::_get__unixEpoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::_get__unixEpoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("Pathfinding.Ionic.Zlib", "GZipStream", "_unixEpoch"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime _unixEpoch
void Pathfinding::Ionic::Zlib::GZipStream::_set__unixEpoch(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::_set__unixEpoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "GZipStream", "_unixEpoch", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Text.Encoding iso8859dash1
::System::Text::Encoding* Pathfinding::Ionic::Zlib::GZipStream::_get_iso8859dash1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::_get_iso8859dash1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("Pathfinding.Ionic.Zlib", "GZipStream", "iso8859dash1"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Text.Encoding iso8859dash1
void Pathfinding::Ionic::Zlib::GZipStream::_set_iso8859dash1(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::_set_iso8859dash1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "GZipStream", "iso8859dash1", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> LastModified
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& Pathfinding::Ionic::Zlib::GZipStream::dyn_LastModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::dyn_LastModified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastModified"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _headerByteCount
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::GZipStream::dyn__headerByteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::dyn__headerByteCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerByteCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.ZlibBaseStream _baseStream
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::ZlibBaseStream*& Pathfinding::Ionic::Zlib::GZipStream::dyn__baseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::dyn__baseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseStream"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::ZlibBaseStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::GZipStream::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _firstReadDone
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::GZipStream::dyn__firstReadDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::dyn__firstReadDone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstReadDone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _FileName
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Ionic::Zlib::GZipStream::dyn__FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::dyn__FileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_FileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _Comment
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Ionic::Zlib::GZipStream::dyn__Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::dyn__Comment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Comment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _Crc32
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::GZipStream::dyn__Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::dyn__Crc32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Crc32"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream..cctor
void Pathfinding::Ionic::Zlib::GZipStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "GZipStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.get_Comment
::StringW Pathfinding::Ionic::Zlib::GZipStream::get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::get_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.set_Comment
void Pathfinding::Ionic::Zlib::GZipStream::set_Comment(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::set_Comment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Comment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.get_FileName
::StringW Pathfinding::Ionic::Zlib::GZipStream::get_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::get_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.set_FileName
void Pathfinding::Ionic::Zlib::GZipStream::set_FileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::set_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.EmitHeader
int Pathfinding::Ionic::Zlib::GZipStream::EmitHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::EmitHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmitHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.Dispose
void Pathfinding::Ionic::Zlib::GZipStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.get_CanRead
bool Pathfinding::Ionic::Zlib::GZipStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.get_CanSeek
bool Pathfinding::Ionic::Zlib::GZipStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.get_CanWrite
bool Pathfinding::Ionic::Zlib::GZipStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.Flush
void Pathfinding::Ionic::Zlib::GZipStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.get_Length
int64_t Pathfinding::Ionic::Zlib::GZipStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.get_Position
int64_t Pathfinding::Ionic::Zlib::GZipStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.set_Position
void Pathfinding::Ionic::Zlib::GZipStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.Read
int Pathfinding::Ionic::Zlib::GZipStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.Seek
int64_t Pathfinding::Ionic::Zlib::GZipStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.SetLength
void Pathfinding::Ionic::Zlib::GZipStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.GZipStream.Write
void Pathfinding::Ionic::Zlib::GZipStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::GZipStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.InfTree
#include "Pathfinding/Ionic/Zlib/InfTree.hpp"
// Including type: Pathfinding.Ionic.Zlib.ZlibCodec
#include "Pathfinding/Ionic/Zlib/ZlibCodec.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] fixed_tl
::ArrayW<int> Pathfinding::Ionic::Zlib::InfTree::_get_fixed_tl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_get_fixed_tl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "InfTree", "fixed_tl"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] fixed_tl
void Pathfinding::Ionic::Zlib::InfTree::_set_fixed_tl(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_set_fixed_tl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InfTree", "fixed_tl", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] fixed_td
::ArrayW<int> Pathfinding::Ionic::Zlib::InfTree::_get_fixed_td() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_get_fixed_td");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "InfTree", "fixed_td"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] fixed_td
void Pathfinding::Ionic::Zlib::InfTree::_set_fixed_td(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_set_fixed_td");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InfTree", "fixed_td", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] cplens
::ArrayW<int> Pathfinding::Ionic::Zlib::InfTree::_get_cplens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_get_cplens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "InfTree", "cplens"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] cplens
void Pathfinding::Ionic::Zlib::InfTree::_set_cplens(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_set_cplens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InfTree", "cplens", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] cplext
::ArrayW<int> Pathfinding::Ionic::Zlib::InfTree::_get_cplext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_get_cplext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "InfTree", "cplext"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] cplext
void Pathfinding::Ionic::Zlib::InfTree::_set_cplext(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_set_cplext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InfTree", "cplext", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] cpdist
::ArrayW<int> Pathfinding::Ionic::Zlib::InfTree::_get_cpdist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_get_cpdist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "InfTree", "cpdist"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] cpdist
void Pathfinding::Ionic::Zlib::InfTree::_set_cpdist(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_set_cpdist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InfTree", "cpdist", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] cpdext
::ArrayW<int> Pathfinding::Ionic::Zlib::InfTree::_get_cpdext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_get_cpdext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "InfTree", "cpdext"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] cpdext
void Pathfinding::Ionic::Zlib::InfTree::_set_cpdext(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::_set_cpdext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InfTree", "cpdext", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] hn
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InfTree::dyn_hn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::dyn_hn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hn"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] v
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InfTree::dyn_v() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::dyn_v");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] c
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InfTree::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] r
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InfTree::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] u
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InfTree::dyn_u() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::dyn_u");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "u"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] x
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InfTree::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InfTree..cctor
void Pathfinding::Ionic::Zlib::InfTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "InfTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InfTree.huft_build
int Pathfinding::Ionic::Zlib::InfTree::huft_build(::ArrayW<int> b, int bindex, int n, int s, ::ArrayW<int> d, ::ArrayW<int> e, ::ArrayW<int> t, ::ArrayW<int> m, ::ArrayW<int> hp, ::ArrayW<int> hn, ::ArrayW<int> v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::huft_build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "huft_build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(bindex), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(hp), ::il2cpp_utils::ExtractType(hn), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b, bindex, n, s, d, e, t, m, hp, hn, v);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InfTree.inflate_trees_bits
int Pathfinding::Ionic::Zlib::InfTree::inflate_trees_bits(::ArrayW<int> c, ::ArrayW<int> bb, ::ArrayW<int> tb, ::ArrayW<int> hp, ::Pathfinding::Ionic::Zlib::ZlibCodec* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::inflate_trees_bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inflate_trees_bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(bb), ::il2cpp_utils::ExtractType(tb), ::il2cpp_utils::ExtractType(hp), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, c, bb, tb, hp, z);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InfTree.inflate_trees_dynamic
int Pathfinding::Ionic::Zlib::InfTree::inflate_trees_dynamic(int nl, int nd, ::ArrayW<int> c, ::ArrayW<int> bl, ::ArrayW<int> bd, ::ArrayW<int> tl, ::ArrayW<int> td, ::ArrayW<int> hp, ::Pathfinding::Ionic::Zlib::ZlibCodec* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::inflate_trees_dynamic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inflate_trees_dynamic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nl), ::il2cpp_utils::ExtractType(nd), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(bl), ::il2cpp_utils::ExtractType(bd), ::il2cpp_utils::ExtractType(tl), ::il2cpp_utils::ExtractType(td), ::il2cpp_utils::ExtractType(hp), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, nl, nd, c, bl, bd, tl, td, hp, z);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InfTree.inflate_trees_fixed
int Pathfinding::Ionic::Zlib::InfTree::inflate_trees_fixed(::ArrayW<int> bl, ::ArrayW<int> bd, ::ArrayW<::ArrayW<int>> tl, ::ArrayW<::ArrayW<int>> td, ::Pathfinding::Ionic::Zlib::ZlibCodec* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::inflate_trees_fixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "InfTree", "inflate_trees_fixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bl), ::il2cpp_utils::ExtractType(bd), ::il2cpp_utils::ExtractType(tl), ::il2cpp_utils::ExtractType(td), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bl, bd, tl, td, z);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InfTree.initWorkArea
void Pathfinding::Ionic::Zlib::InfTree::initWorkArea(int vsize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InfTree::initWorkArea");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "initWorkArea", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vsize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vsize);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Ionic.Zlib.InflateBlocks
#include "Pathfinding/Ionic/Zlib/InflateBlocks.hpp"
// Including type: Pathfinding.Ionic.Zlib.InflateCodes
#include "Pathfinding/Ionic/Zlib/InflateCodes.hpp"
// Including type: Pathfinding.Ionic.Zlib.ZlibCodec
#include "Pathfinding/Ionic/Zlib/ZlibCodec.hpp"
// Including type: Pathfinding.Ionic.Zlib.InfTree
#include "Pathfinding/Ionic/Zlib/InfTree.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] border
::ArrayW<int> Pathfinding::Ionic::Zlib::InflateBlocks::_get_border() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::_get_border");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "InflateBlocks", "border"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] border
void Pathfinding::Ionic::Zlib::InflateBlocks::_set_border(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::_set_border");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateBlocks", "border", value));
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode mode
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 left
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_left");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "left"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 table
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "table"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 index
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] blens
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_blens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_blens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blens"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] bb
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_bb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_bb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bb"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] tb
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_tb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_tb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tb"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.InflateCodes codes
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::InflateCodes*& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_codes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_codes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "codes"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::InflateCodes**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 last
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_last");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "last"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.ZlibCodec _codec
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::ZlibCodec*& Pathfinding::Ionic::Zlib::InflateBlocks::dyn__codec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn__codec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codec"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::ZlibCodec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bitk
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_bitk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_bitk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitk"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bitb
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_bitb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_bitb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitb"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] hufts
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_hufts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_hufts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hufts"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] window
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_window() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_window");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "window"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 end
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 readAt
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_readAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_readAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readAt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 writeAt
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_writeAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_writeAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeAt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object checkfn
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_checkfn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_checkfn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkfn"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 check
[[deprecated("Use field access instead!")]] uint& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_check() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_check");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "check"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.InfTree inftree
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::InfTree*& Pathfinding::Ionic::Zlib::InflateBlocks::dyn_inftree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::dyn_inftree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inftree"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::InfTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateBlocks..cctor
void Pathfinding::Ionic::Zlib::InflateBlocks::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "InflateBlocks", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateBlocks.Reset
uint Pathfinding::Ionic::Zlib::InflateBlocks::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateBlocks.Process
int Pathfinding::Ionic::Zlib::InflateBlocks::Process(int r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateBlocks.Free
void Pathfinding::Ionic::Zlib::InflateBlocks::Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateBlocks.Flush
int Pathfinding::Ionic::Zlib::InflateBlocks::Flush(int r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode
#include "Pathfinding/Ionic/Zlib/InflateBlocks.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode TYPE
::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_TYPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_TYPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "TYPE"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode TYPE
void Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_TYPE(::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_TYPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "TYPE", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode LENS
::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_LENS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_LENS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "LENS"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode LENS
void Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_LENS(::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_LENS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "LENS", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode STORED
::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_STORED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_STORED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "STORED"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode STORED
void Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_STORED(::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_STORED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "STORED", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode TABLE
::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_TABLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_TABLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "TABLE"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode TABLE
void Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_TABLE(::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_TABLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "TABLE", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode BTREE
::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_BTREE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_BTREE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "BTREE"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode BTREE
void Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_BTREE(::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_BTREE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "BTREE", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode DTREE
::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DTREE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DTREE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DTREE"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode DTREE
void Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DTREE(::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DTREE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DTREE", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode CODES
::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_CODES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_CODES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "CODES"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode CODES
void Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_CODES(::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_CODES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "CODES", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode DRY
::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DRY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DRY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DRY"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode DRY
void Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DRY(::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DRY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DRY", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode DONE
::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_DONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DONE"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode DONE
void Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DONE(::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_DONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "DONE", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode BAD
::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_BAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_get_BAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode>("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "BAD"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateBlocks/InflateBlockMode BAD
void Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_BAD(::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::_set_BAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateBlocks/InflateBlockMode", "BAD", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateBlocks::InflateBlockMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.InternalInflateConstants
#include "Pathfinding/Ionic/Zlib/InternalInflateConstants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] InflateMask
::ArrayW<int> Pathfinding::Ionic::Zlib::InternalInflateConstants::_get_InflateMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalInflateConstants::_get_InflateMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "InternalInflateConstants", "InflateMask"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] InflateMask
void Pathfinding::Ionic::Zlib::InternalInflateConstants::_set_InflateMask(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalInflateConstants::_set_InflateMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InternalInflateConstants", "InflateMask", value));
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InternalInflateConstants..cctor
void Pathfinding::Ionic::Zlib::InternalInflateConstants::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalInflateConstants::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "InternalInflateConstants", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.InflateCodes
#include "Pathfinding/Ionic/Zlib/InflateCodes.hpp"
// Including type: Pathfinding.Ionic.Zlib.InflateBlocks
#include "Pathfinding/Ionic/Zlib/InflateBlocks.hpp"
// Including type: Pathfinding.Ionic.Zlib.ZlibCodec
#include "Pathfinding/Ionic/Zlib/ZlibCodec.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 mode
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateCodes::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 len
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateCodes::dyn_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] tree
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InflateCodes::dyn_tree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_tree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tree"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 tree_index
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateCodes::dyn_tree_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_tree_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tree_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 need
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateCodes::dyn_need() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_need");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "need"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lit
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateCodes::dyn_lit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_lit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bitsToGet
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateCodes::dyn_bitsToGet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_bitsToGet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitsToGet"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 dist
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateCodes::dyn_dist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_dist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dist"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte lbits
[[deprecated("Use field access instead!")]] uint8_t& Pathfinding::Ionic::Zlib::InflateCodes::dyn_lbits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_lbits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lbits"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte dbits
[[deprecated("Use field access instead!")]] uint8_t& Pathfinding::Ionic::Zlib::InflateCodes::dyn_dbits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_dbits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dbits"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] ltree
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InflateCodes::dyn_ltree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_ltree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ltree"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 ltree_index
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateCodes::dyn_ltree_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_ltree_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ltree_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] dtree
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::InflateCodes::dyn_dtree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_dtree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtree"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 dtree_index
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateCodes::dyn_dtree_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::dyn_dtree_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtree_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateCodes.Init
void Pathfinding::Ionic::Zlib::InflateCodes::Init(int bl, int bd, ::ArrayW<int> tl, int tl_index, ::ArrayW<int> td, int td_index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bl), ::il2cpp_utils::ExtractType(bd), ::il2cpp_utils::ExtractType(tl), ::il2cpp_utils::ExtractType(tl_index), ::il2cpp_utils::ExtractType(td), ::il2cpp_utils::ExtractType(td_index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bl, bd, tl, tl_index, td, td_index);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateCodes.Process
int Pathfinding::Ionic::Zlib::InflateCodes::Process(::Pathfinding::Ionic::Zlib::InflateBlocks* blocks, int r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blocks), ::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, blocks, r);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateCodes.InflateFast
int Pathfinding::Ionic::Zlib::InflateCodes::InflateFast(int bl, int bd, ::ArrayW<int> tl, int tl_index, ::ArrayW<int> td, int td_index, ::Pathfinding::Ionic::Zlib::InflateBlocks* s, ::Pathfinding::Ionic::Zlib::ZlibCodec* z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateCodes::InflateFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InflateFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bl), ::il2cpp_utils::ExtractType(bd), ::il2cpp_utils::ExtractType(tl), ::il2cpp_utils::ExtractType(tl_index), ::il2cpp_utils::ExtractType(td), ::il2cpp_utils::ExtractType(td_index), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bl, bd, tl, tl_index, td, td_index, s, z);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.InflateManager
#include "Pathfinding/Ionic/Zlib/InflateManager.hpp"
// Including type: Pathfinding.Ionic.Zlib.ZlibCodec
#include "Pathfinding/Ionic/Zlib/ZlibCodec.hpp"
// Including type: Pathfinding.Ionic.Zlib.InflateBlocks
#include "Pathfinding/Ionic/Zlib/InflateBlocks.hpp"
// Including type: Pathfinding.Ionic.Zlib.FlushType
#include "Pathfinding/Ionic/Zlib/FlushType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] mark
::ArrayW<uint8_t> Pathfinding::Ionic::Zlib::InflateManager::_get_mark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::_get_mark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Pathfinding.Ionic.Zlib", "InflateManager", "mark"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] mark
void Pathfinding::Ionic::Zlib::InflateManager::_set_mark(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::_set_mark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager", "mark", value));
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode mode
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode& Pathfinding::Ionic::Zlib::InflateManager::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.ZlibCodec _codec
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::ZlibCodec*& Pathfinding::Ionic::Zlib::InflateManager::dyn__codec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::dyn__codec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codec"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::ZlibCodec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 method
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateManager::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 computedCheck
[[deprecated("Use field access instead!")]] uint& Pathfinding::Ionic::Zlib::InflateManager::dyn_computedCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::dyn_computedCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "computedCheck"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 expectedCheck
[[deprecated("Use field access instead!")]] uint& Pathfinding::Ionic::Zlib::InflateManager::dyn_expectedCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::dyn_expectedCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectedCheck"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 marker
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateManager::dyn_marker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::dyn_marker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "marker"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handleRfc1950HeaderBytes
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::InflateManager::dyn__handleRfc1950HeaderBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::dyn__handleRfc1950HeaderBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handleRfc1950HeaderBytes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 wbits
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateManager::dyn_wbits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::dyn_wbits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wbits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.InflateBlocks blocks
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::InflateBlocks*& Pathfinding::Ionic::Zlib::InflateManager::dyn_blocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::dyn_blocks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocks"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::InflateBlocks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateManager..cctor
void Pathfinding::Ionic::Zlib::InflateManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "InflateManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateManager.get_HandleRfc1950HeaderBytes
bool Pathfinding::Ionic::Zlib::InflateManager::get_HandleRfc1950HeaderBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::get_HandleRfc1950HeaderBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HandleRfc1950HeaderBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateManager.Reset
int Pathfinding::Ionic::Zlib::InflateManager::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateManager.End
int Pathfinding::Ionic::Zlib::InflateManager::End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateManager.Initialize
int Pathfinding::Ionic::Zlib::InflateManager::Initialize(::Pathfinding::Ionic::Zlib::ZlibCodec* codec, int w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codec), ::il2cpp_utils::ExtractType(w)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, codec, w);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InflateManager.Inflate
int Pathfinding::Ionic::Zlib::InflateManager::Inflate(::Pathfinding::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::Inflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Inflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, flush);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode
#include "Pathfinding/Ionic/Zlib/InflateManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode METHOD
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_METHOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_METHOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "METHOD"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode METHOD
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_METHOD(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_METHOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "METHOD", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode FLAG
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_FLAG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_FLAG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "FLAG"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode FLAG
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_FLAG(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_FLAG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "FLAG", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DICT4
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT4"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DICT4
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT4(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT4", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DICT3
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT3"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DICT3
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT3(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT3", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DICT2
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT2"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DICT2
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT2(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT2", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DICT1
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT1"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DICT1
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT1(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT1", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DICT0
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DICT0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT0"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DICT0
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT0(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DICT0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DICT0", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode BLOCKS
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_BLOCKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_BLOCKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "BLOCKS"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode BLOCKS
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_BLOCKS(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_BLOCKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "BLOCKS", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode CHECK4
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK4"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode CHECK4
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK4(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK4", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode CHECK3
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK3"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode CHECK3
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK3(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK3", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode CHECK2
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK2"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode CHECK2
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK2(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK2", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode CHECK1
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_CHECK1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK1"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode CHECK1
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK1(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_CHECK1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "CHECK1", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DONE
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_DONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DONE"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode DONE
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DONE(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_DONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "DONE", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode BAD
::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_BAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_get_BAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode>("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "BAD"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.InflateManager/InflateManagerMode BAD
void Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_BAD(::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::_set_BAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InflateManager/InflateManagerMode", "BAD", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InflateManager::InflateManagerMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.WorkItem
#include "Pathfinding/Ionic/Zlib/WorkItem.hpp"
// Including type: Pathfinding.Ionic.Zlib.ZlibCodec
#include "Pathfinding/Ionic/Zlib/ZlibCodec.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::Ionic::Zlib::WorkItem::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::WorkItem::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] compressed
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::Ionic::Zlib::WorkItem::dyn_compressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::WorkItem::dyn_compressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressed"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 crc
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::WorkItem::dyn_crc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::WorkItem::dyn_crc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crc"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 index
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::WorkItem::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::WorkItem::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 ordinal
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::WorkItem::dyn_ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::WorkItem::dyn_ordinal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ordinal"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 inputBytesAvailable
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::WorkItem::dyn_inputBytesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::WorkItem::dyn_inputBytesAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputBytesAvailable"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 compressedBytesAvailable
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::WorkItem::dyn_compressedBytesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::WorkItem::dyn_compressedBytesAvailable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressedBytesAvailable"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Ionic.Zlib.ZlibCodec compressor
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::ZlibCodec*& Pathfinding::Ionic::Zlib::WorkItem::dyn_compressor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::WorkItem::dyn_compressor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressor"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::ZlibCodec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream
#include "Pathfinding/Ionic/Zlib/ParallelDeflateOutputStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Pathfinding.Ionic.Zlib.WorkItem
#include "Pathfinding/Ionic/Zlib/WorkItem.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: Pathfinding.Ionic.Crc.CRC32
#include "Pathfinding/Ionic/Crc/CRC32.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 IO_BUFFER_SIZE_DEFAULT
int Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_get_IO_BUFFER_SIZE_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_get_IO_BUFFER_SIZE_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream", "IO_BUFFER_SIZE_DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 IO_BUFFER_SIZE_DEFAULT
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_set_IO_BUFFER_SIZE_DEFAULT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_set_IO_BUFFER_SIZE_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream", "IO_BUFFER_SIZE_DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 BufferPairsPerCore
int Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_get_BufferPairsPerCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_get_BufferPairsPerCore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream", "BufferPairsPerCore"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 BufferPairsPerCore
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_set_BufferPairsPerCore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_set_BufferPairsPerCore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream", "BufferPairsPerCore", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Pathfinding.Ionic.Zlib.WorkItem> _pool
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Pathfinding::Ionic::Zlib::WorkItem*>*& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Pathfinding::Ionic::Zlib::WorkItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leaveOpen
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emitting
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn_emitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn_emitting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emitting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _outStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__outStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__outStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxBufferPairs
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__maxBufferPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__maxBufferPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxBufferPairs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bufferSize
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__bufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.AutoResetEvent _newlyCompressedBlob
[[deprecated("Use field access instead!")]] ::System::Threading::AutoResetEvent*& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__newlyCompressedBlob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__newlyCompressedBlob");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newlyCompressedBlob"))->offset;
  return *reinterpret_cast<::System::Threading::AutoResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _outputLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__outputLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__outputLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outputLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isClosed
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__isClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__isClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isClosed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _firstWriteDone
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__firstWriteDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__firstWriteDone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstWriteDone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentlyFilling
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__currentlyFilling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__currentlyFilling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentlyFilling"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFilled
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__lastFilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__lastFilled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFilled"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastWritten
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__lastWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__lastWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastWritten"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _latestCompressed
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__latestCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__latestCompressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_latestCompressed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _Crc32
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__Crc32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Crc32"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Crc.CRC32 _runningCrc
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Crc::CRC32*& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__runningCrc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__runningCrc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_runningCrc"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Crc::CRC32**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _latestLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__latestLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__latestLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_latestLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Int32> _toWrite
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<int>*& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__toWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__toWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toWrite"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Int32> _toFill
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<int>*& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__toFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__toFill");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toFill"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _totalBytesProcessed
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__totalBytesProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__totalBytesProcessed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalBytesProcessed"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zlib.CompressionLevel _compressLevel
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::CompressionLevel& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__compressLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__compressLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressLevel"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::CompressionLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception _pendingException
[[deprecated("Use field access instead!")]] ::System::Exception*& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__pendingException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__pendingException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handlingException
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__handlingException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__handlingException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handlingException"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _eLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__eLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__eLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits _DesiredTrace
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__DesiredTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn__DesiredTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_DesiredTrace"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Zlib.CompressionStrategy <Strategy>k__BackingField
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::CompressionStrategy& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn_$Strategy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::dyn_$Strategy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Strategy>k__BackingField"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::CompressionStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream..cctor
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.get_Strategy
::Pathfinding::Ionic::Zlib::CompressionStrategy Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_Strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_Strategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Strategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zlib::CompressionStrategy, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.set_Strategy
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::set_Strategy(::Pathfinding::Ionic::Zlib::CompressionStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::set_Strategy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Strategy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.set_MaxBufferPairs
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::set_MaxBufferPairs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::set_MaxBufferPairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxBufferPairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.set_BufferSize
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::set_BufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::set_BufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream._InitializePoolOfWorkItems
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_InitializePoolOfWorkItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_InitializePoolOfWorkItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InitializePoolOfWorkItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream._FlushFinish
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_FlushFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_FlushFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_FlushFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream._Flush
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_Flush(bool lastInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastInput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lastInput);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.Dispose
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.Reset
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Reset(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.EmitPendingBuffers
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::EmitPendingBuffers(bool doAll, bool mustWait) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::EmitPendingBuffers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmitPendingBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doAll), ::il2cpp_utils::ExtractType(mustWait)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, doAll, mustWait);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream._DeflateOne
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_DeflateOne(::Il2CppObject* wi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::_DeflateOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_DeflateOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, wi);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.DeflateOneSegment
bool Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::DeflateOneSegment(::Pathfinding::Ionic::Zlib::WorkItem* workitem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::DeflateOneSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeflateOneSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(workitem)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, workitem);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.Write
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.Flush
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.Close
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.Dispose
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.get_CanSeek
bool Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.get_CanRead
bool Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.get_CanWrite
bool Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.get_Length
int64_t Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.get_Position
int64_t Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.set_Position
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.Read
int Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.Seek
int64_t Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream.SetLength
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits
#include "Pathfinding/Ionic/Zlib/ParallelDeflateOutputStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits None
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits None
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_None(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits NotUsed1
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_NotUsed1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_NotUsed1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "NotUsed1"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits NotUsed1
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_NotUsed1(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_NotUsed1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "NotUsed1", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitLock
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitLock"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitLock
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitLock(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitLock", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitEnter
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitEnter"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitEnter
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitEnter(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitEnter", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitBegin
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitBegin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitBegin"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitBegin
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitBegin(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitBegin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitBegin", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitDone
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitDone"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitDone
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitDone(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitDone", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitSkip
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitSkip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitSkip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitSkip"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitSkip
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitSkip(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitSkip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitSkip", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitAll
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_EmitAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitAll"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits EmitAll
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitAll(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_EmitAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "EmitAll", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Flush
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Flush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Flush"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Flush
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Flush(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Flush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Flush", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Lifecycle
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Lifecycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Lifecycle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Lifecycle"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Lifecycle
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Lifecycle(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Lifecycle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Lifecycle", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Session
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Session() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Session");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Session"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Session
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Session(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Session");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Session", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Synch
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Synch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Synch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Synch"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Synch
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Synch(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Synch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Synch", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Instance
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Instance
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Instance(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Instance", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Compress
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Compress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Compress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Compress"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Compress
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Compress(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Compress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Compress", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Write
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Write"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits Write
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Write(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits WriteEnter
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_WriteEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_WriteEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "WriteEnter"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits WriteEnter
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_WriteEnter(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_WriteEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "WriteEnter", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits WriteTake
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_WriteTake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_WriteTake");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "WriteTake"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits WriteTake
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_WriteTake(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_WriteTake");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "WriteTake", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits All
::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits>("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "All"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ParallelDeflateOutputStream/TraceBits All
void Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_All(::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ParallelDeflateOutputStream/TraceBits", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ParallelDeflateOutputStream::TraceBits::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.Tree
#include "Pathfinding/Ionic/Zlib/Tree.hpp"
// Including type: Pathfinding.Ionic.Zlib.StaticTree
#include "Pathfinding/Ionic/Zlib/StaticTree.hpp"
// Including type: Pathfinding.Ionic.Zlib.DeflateManager
#include "Pathfinding/Ionic/Zlib/DeflateManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 HEAP_SIZE
int Pathfinding::Ionic::Zlib::Tree::_get_HEAP_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_get_HEAP_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "Tree", "HEAP_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 HEAP_SIZE
void Pathfinding::Ionic::Zlib::Tree::_set_HEAP_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_set_HEAP_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "Tree", "HEAP_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] ExtraLengthBits
::ArrayW<int> Pathfinding::Ionic::Zlib::Tree::_get_ExtraLengthBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_get_ExtraLengthBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "Tree", "ExtraLengthBits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] ExtraLengthBits
void Pathfinding::Ionic::Zlib::Tree::_set_ExtraLengthBits(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_set_ExtraLengthBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "Tree", "ExtraLengthBits", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] ExtraDistanceBits
::ArrayW<int> Pathfinding::Ionic::Zlib::Tree::_get_ExtraDistanceBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_get_ExtraDistanceBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "Tree", "ExtraDistanceBits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] ExtraDistanceBits
void Pathfinding::Ionic::Zlib::Tree::_set_ExtraDistanceBits(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_set_ExtraDistanceBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "Tree", "ExtraDistanceBits", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] extra_blbits
::ArrayW<int> Pathfinding::Ionic::Zlib::Tree::_get_extra_blbits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_get_extra_blbits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "Tree", "extra_blbits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] extra_blbits
void Pathfinding::Ionic::Zlib::Tree::_set_extra_blbits(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_set_extra_blbits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "Tree", "extra_blbits", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.SByte[] bl_order
::ArrayW<int8_t> Pathfinding::Ionic::Zlib::Tree::_get_bl_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_get_bl_order");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int8_t>>("Pathfinding.Ionic.Zlib", "Tree", "bl_order"));
}
// Autogenerated static field setter
// Set static field: static readonly System.SByte[] bl_order
void Pathfinding::Ionic::Zlib::Tree::_set_bl_order(::ArrayW<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_set_bl_order");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "Tree", "bl_order", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.SByte[] _dist_code
::ArrayW<int8_t> Pathfinding::Ionic::Zlib::Tree::_get__dist_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_get__dist_code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int8_t>>("Pathfinding.Ionic.Zlib", "Tree", "_dist_code"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.SByte[] _dist_code
void Pathfinding::Ionic::Zlib::Tree::_set__dist_code(::ArrayW<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_set__dist_code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "Tree", "_dist_code", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.SByte[] LengthCode
::ArrayW<int8_t> Pathfinding::Ionic::Zlib::Tree::_get_LengthCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_get_LengthCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int8_t>>("Pathfinding.Ionic.Zlib", "Tree", "LengthCode"));
}
// Autogenerated static field setter
// Set static field: static readonly System.SByte[] LengthCode
void Pathfinding::Ionic::Zlib::Tree::_set_LengthCode(::ArrayW<int8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_set_LengthCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "Tree", "LengthCode", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] LengthBase
::ArrayW<int> Pathfinding::Ionic::Zlib::Tree::_get_LengthBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_get_LengthBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "Tree", "LengthBase"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] LengthBase
void Pathfinding::Ionic::Zlib::Tree::_set_LengthBase(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_set_LengthBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "Tree", "LengthBase", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DistanceBase
::ArrayW<int> Pathfinding::Ionic::Zlib::Tree::_get_DistanceBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_get_DistanceBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Pathfinding.Ionic.Zlib", "Tree", "DistanceBase"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DistanceBase
void Pathfinding::Ionic::Zlib::Tree::_set_DistanceBase(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::_set_DistanceBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "Tree", "DistanceBase", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] dyn_tree
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Pathfinding::Ionic::Zlib::Tree::dyn_dyn_tree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::dyn_dyn_tree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dyn_tree"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 max_code
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::Tree::dyn_max_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::dyn_max_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max_code"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.StaticTree staticTree
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::StaticTree*& Pathfinding::Ionic::Zlib::Tree::dyn_staticTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::dyn_staticTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticTree"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::StaticTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.Tree..cctor
void Pathfinding::Ionic::Zlib::Tree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "Tree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.Tree.DistanceCode
int Pathfinding::Ionic::Zlib::Tree::DistanceCode(int dist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::DistanceCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "Tree", "DistanceCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dist)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dist);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.Tree.gen_bitlen
void Pathfinding::Ionic::Zlib::Tree::gen_bitlen(::Pathfinding::Ionic::Zlib::DeflateManager* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::gen_bitlen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "gen_bitlen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.Tree.build_tree
void Pathfinding::Ionic::Zlib::Tree::build_tree(::Pathfinding::Ionic::Zlib::DeflateManager* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::build_tree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "build_tree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.Tree.gen_codes
void Pathfinding::Ionic::Zlib::Tree::gen_codes(::ArrayW<int16_t> tree, int max_code, ::ArrayW<int16_t> bl_count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::gen_codes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "Tree", "gen_codes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(max_code), ::il2cpp_utils::ExtractType(bl_count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tree, max_code, bl_count);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.Tree.bi_reverse
int Pathfinding::Ionic::Zlib::Tree::bi_reverse(int code, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Tree::bi_reverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "Tree", "bi_reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.FlushType
#include "Pathfinding/Ionic/Zlib/FlushType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.FlushType None
::Pathfinding::Ionic::Zlib::FlushType Pathfinding::Ionic::Zlib::FlushType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::FlushType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::FlushType>("Pathfinding.Ionic.Zlib", "FlushType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.FlushType None
void Pathfinding::Ionic::Zlib::FlushType::_set_None(::Pathfinding::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::FlushType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "FlushType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.FlushType Partial
::Pathfinding::Ionic::Zlib::FlushType Pathfinding::Ionic::Zlib::FlushType::_get_Partial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::FlushType::_get_Partial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::FlushType>("Pathfinding.Ionic.Zlib", "FlushType", "Partial"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.FlushType Partial
void Pathfinding::Ionic::Zlib::FlushType::_set_Partial(::Pathfinding::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::FlushType::_set_Partial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "FlushType", "Partial", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.FlushType Sync
::Pathfinding::Ionic::Zlib::FlushType Pathfinding::Ionic::Zlib::FlushType::_get_Sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::FlushType::_get_Sync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::FlushType>("Pathfinding.Ionic.Zlib", "FlushType", "Sync"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.FlushType Sync
void Pathfinding::Ionic::Zlib::FlushType::_set_Sync(::Pathfinding::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::FlushType::_set_Sync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "FlushType", "Sync", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.FlushType Full
::Pathfinding::Ionic::Zlib::FlushType Pathfinding::Ionic::Zlib::FlushType::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::FlushType::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::FlushType>("Pathfinding.Ionic.Zlib", "FlushType", "Full"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.FlushType Full
void Pathfinding::Ionic::Zlib::FlushType::_set_Full(::Pathfinding::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::FlushType::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "FlushType", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.FlushType Finish
::Pathfinding::Ionic::Zlib::FlushType Pathfinding::Ionic::Zlib::FlushType::_get_Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::FlushType::_get_Finish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::FlushType>("Pathfinding.Ionic.Zlib", "FlushType", "Finish"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.FlushType Finish
void Pathfinding::Ionic::Zlib::FlushType::_set_Finish(::Pathfinding::Ionic::Zlib::FlushType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::FlushType::_set_Finish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "FlushType", "Finish", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::FlushType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::FlushType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.CompressionLevel
#include "Pathfinding/Ionic/Zlib/CompressionLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel None
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "None"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel None
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_None(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level0
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level0"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level0
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level0(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level0", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel BestSpeed
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_BestSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_BestSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "BestSpeed"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel BestSpeed
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_BestSpeed(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_BestSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "BestSpeed", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level1
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level1"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level1
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level1(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level1", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level2
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level2"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level2
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level2(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level2", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level3
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level3"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level3
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level3(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level3", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level4
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level4"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level4
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level4(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level4", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level5
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level5"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level5
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level5(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level5", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Default
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Default
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_Default(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level6
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level6"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level6
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level6(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level6", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level7
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level7"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level7
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level7(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level7", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level8
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level8"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level8
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level8(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level8", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel BestCompression
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_BestCompression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_BestCompression");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "BestCompression"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel BestCompression
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_BestCompression(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_BestCompression");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "BestCompression", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level9
::Pathfinding::Ionic::Zlib::CompressionLevel Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_get_Level9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionLevel>("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level9"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionLevel Level9
void Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level9(::Pathfinding::Ionic::Zlib::CompressionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::_set_Level9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionLevel", "Level9", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::CompressionLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.CompressionStrategy
#include "Pathfinding/Ionic/Zlib/CompressionStrategy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionStrategy Default
::Pathfinding::Ionic::Zlib::CompressionStrategy Pathfinding::Ionic::Zlib::CompressionStrategy::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionStrategy::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionStrategy>("Pathfinding.Ionic.Zlib", "CompressionStrategy", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionStrategy Default
void Pathfinding::Ionic::Zlib::CompressionStrategy::_set_Default(::Pathfinding::Ionic::Zlib::CompressionStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionStrategy::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionStrategy", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionStrategy Filtered
::Pathfinding::Ionic::Zlib::CompressionStrategy Pathfinding::Ionic::Zlib::CompressionStrategy::_get_Filtered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionStrategy::_get_Filtered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionStrategy>("Pathfinding.Ionic.Zlib", "CompressionStrategy", "Filtered"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionStrategy Filtered
void Pathfinding::Ionic::Zlib::CompressionStrategy::_set_Filtered(::Pathfinding::Ionic::Zlib::CompressionStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionStrategy::_set_Filtered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionStrategy", "Filtered", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionStrategy HuffmanOnly
::Pathfinding::Ionic::Zlib::CompressionStrategy Pathfinding::Ionic::Zlib::CompressionStrategy::_get_HuffmanOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionStrategy::_get_HuffmanOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionStrategy>("Pathfinding.Ionic.Zlib", "CompressionStrategy", "HuffmanOnly"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionStrategy HuffmanOnly
void Pathfinding::Ionic::Zlib::CompressionStrategy::_set_HuffmanOnly(::Pathfinding::Ionic::Zlib::CompressionStrategy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionStrategy::_set_HuffmanOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionStrategy", "HuffmanOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::CompressionStrategy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionStrategy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.CompressionMode
#include "Pathfinding/Ionic/Zlib/CompressionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionMode Compress
::Pathfinding::Ionic::Zlib::CompressionMode Pathfinding::Ionic::Zlib::CompressionMode::_get_Compress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionMode::_get_Compress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionMode>("Pathfinding.Ionic.Zlib", "CompressionMode", "Compress"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionMode Compress
void Pathfinding::Ionic::Zlib::CompressionMode::_set_Compress(::Pathfinding::Ionic::Zlib::CompressionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionMode::_set_Compress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionMode", "Compress", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.CompressionMode Decompress
::Pathfinding::Ionic::Zlib::CompressionMode Pathfinding::Ionic::Zlib::CompressionMode::_get_Decompress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionMode::_get_Decompress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::CompressionMode>("Pathfinding.Ionic.Zlib", "CompressionMode", "Decompress"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.CompressionMode Decompress
void Pathfinding::Ionic::Zlib::CompressionMode::_set_Decompress(::Pathfinding::Ionic::Zlib::CompressionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionMode::_set_Decompress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "CompressionMode", "Decompress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::CompressionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::CompressionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.ZlibException
#include "Pathfinding/Ionic/Zlib/ZlibException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.SharedUtils
#include "Pathfinding/Ionic/Zlib/SharedUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Pathfinding.Ionic.Zlib.SharedUtils.URShift
int Pathfinding::Ionic::Zlib::SharedUtils::URShift(int number, int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::SharedUtils::URShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "SharedUtils", "URShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, number, bits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.InternalConstants
#include "Pathfinding/Ionic/Zlib/InternalConstants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32 MAX_BITS
int Pathfinding::Ionic::Zlib::InternalConstants::_get_MAX_BITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_get_MAX_BITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "InternalConstants", "MAX_BITS"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 MAX_BITS
void Pathfinding::Ionic::Zlib::InternalConstants::_set_MAX_BITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_set_MAX_BITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InternalConstants", "MAX_BITS", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 BL_CODES
int Pathfinding::Ionic::Zlib::InternalConstants::_get_BL_CODES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_get_BL_CODES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "InternalConstants", "BL_CODES"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 BL_CODES
void Pathfinding::Ionic::Zlib::InternalConstants::_set_BL_CODES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_set_BL_CODES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InternalConstants", "BL_CODES", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 D_CODES
int Pathfinding::Ionic::Zlib::InternalConstants::_get_D_CODES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_get_D_CODES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "InternalConstants", "D_CODES"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 D_CODES
void Pathfinding::Ionic::Zlib::InternalConstants::_set_D_CODES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_set_D_CODES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InternalConstants", "D_CODES", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 LITERALS
int Pathfinding::Ionic::Zlib::InternalConstants::_get_LITERALS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_get_LITERALS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "InternalConstants", "LITERALS"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 LITERALS
void Pathfinding::Ionic::Zlib::InternalConstants::_set_LITERALS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_set_LITERALS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InternalConstants", "LITERALS", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 LENGTH_CODES
int Pathfinding::Ionic::Zlib::InternalConstants::_get_LENGTH_CODES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_get_LENGTH_CODES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "InternalConstants", "LENGTH_CODES"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 LENGTH_CODES
void Pathfinding::Ionic::Zlib::InternalConstants::_set_LENGTH_CODES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_set_LENGTH_CODES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InternalConstants", "LENGTH_CODES", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 L_CODES
int Pathfinding::Ionic::Zlib::InternalConstants::_get_L_CODES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_get_L_CODES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "InternalConstants", "L_CODES"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 L_CODES
void Pathfinding::Ionic::Zlib::InternalConstants::_set_L_CODES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_set_L_CODES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InternalConstants", "L_CODES", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 MAX_BL_BITS
int Pathfinding::Ionic::Zlib::InternalConstants::_get_MAX_BL_BITS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_get_MAX_BL_BITS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "InternalConstants", "MAX_BL_BITS"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 MAX_BL_BITS
void Pathfinding::Ionic::Zlib::InternalConstants::_set_MAX_BL_BITS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_set_MAX_BL_BITS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InternalConstants", "MAX_BL_BITS", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 REP_3_6
int Pathfinding::Ionic::Zlib::InternalConstants::_get_REP_3_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_get_REP_3_6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "InternalConstants", "REP_3_6"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 REP_3_6
void Pathfinding::Ionic::Zlib::InternalConstants::_set_REP_3_6(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_set_REP_3_6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InternalConstants", "REP_3_6", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 REPZ_3_10
int Pathfinding::Ionic::Zlib::InternalConstants::_get_REPZ_3_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_get_REPZ_3_10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "InternalConstants", "REPZ_3_10"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 REPZ_3_10
void Pathfinding::Ionic::Zlib::InternalConstants::_set_REPZ_3_10(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_set_REPZ_3_10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InternalConstants", "REPZ_3_10", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 REPZ_11_138
int Pathfinding::Ionic::Zlib::InternalConstants::_get_REPZ_11_138() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_get_REPZ_11_138");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "InternalConstants", "REPZ_11_138"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 REPZ_11_138
void Pathfinding::Ionic::Zlib::InternalConstants::_set_REPZ_11_138(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::_set_REPZ_11_138");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "InternalConstants", "REPZ_11_138", value));
}
// Autogenerated method: Pathfinding.Ionic.Zlib.InternalConstants..cctor
void Pathfinding::Ionic::Zlib::InternalConstants::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::InternalConstants::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "InternalConstants", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.StaticTree
#include "Pathfinding/Ionic/Zlib/StaticTree.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int16[] lengthAndLiteralsTreeCodes
::ArrayW<int16_t> Pathfinding::Ionic::Zlib::StaticTree::_get_lengthAndLiteralsTreeCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::_get_lengthAndLiteralsTreeCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int16_t>>("Pathfinding.Ionic.Zlib", "StaticTree", "lengthAndLiteralsTreeCodes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int16[] lengthAndLiteralsTreeCodes
void Pathfinding::Ionic::Zlib::StaticTree::_set_lengthAndLiteralsTreeCodes(::ArrayW<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::_set_lengthAndLiteralsTreeCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "StaticTree", "lengthAndLiteralsTreeCodes", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int16[] distTreeCodes
::ArrayW<int16_t> Pathfinding::Ionic::Zlib::StaticTree::_get_distTreeCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::_get_distTreeCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int16_t>>("Pathfinding.Ionic.Zlib", "StaticTree", "distTreeCodes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int16[] distTreeCodes
void Pathfinding::Ionic::Zlib::StaticTree::_set_distTreeCodes(::ArrayW<int16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::_set_distTreeCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "StaticTree", "distTreeCodes", value));
}
// Autogenerated static field getter
// Get static field: static readonly Pathfinding.Ionic.Zlib.StaticTree Literals
::Pathfinding::Ionic::Zlib::StaticTree* Pathfinding::Ionic::Zlib::StaticTree::_get_Literals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::_get_Literals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::StaticTree*>("Pathfinding.Ionic.Zlib", "StaticTree", "Literals"));
}
// Autogenerated static field setter
// Set static field: static readonly Pathfinding.Ionic.Zlib.StaticTree Literals
void Pathfinding::Ionic::Zlib::StaticTree::_set_Literals(::Pathfinding::Ionic::Zlib::StaticTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::_set_Literals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "StaticTree", "Literals", value));
}
// Autogenerated static field getter
// Get static field: static readonly Pathfinding.Ionic.Zlib.StaticTree Distances
::Pathfinding::Ionic::Zlib::StaticTree* Pathfinding::Ionic::Zlib::StaticTree::_get_Distances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::_get_Distances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::StaticTree*>("Pathfinding.Ionic.Zlib", "StaticTree", "Distances"));
}
// Autogenerated static field setter
// Set static field: static readonly Pathfinding.Ionic.Zlib.StaticTree Distances
void Pathfinding::Ionic::Zlib::StaticTree::_set_Distances(::Pathfinding::Ionic::Zlib::StaticTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::_set_Distances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "StaticTree", "Distances", value));
}
// Autogenerated static field getter
// Get static field: static readonly Pathfinding.Ionic.Zlib.StaticTree BitLengths
::Pathfinding::Ionic::Zlib::StaticTree* Pathfinding::Ionic::Zlib::StaticTree::_get_BitLengths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::_get_BitLengths");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::StaticTree*>("Pathfinding.Ionic.Zlib", "StaticTree", "BitLengths"));
}
// Autogenerated static field setter
// Set static field: static readonly Pathfinding.Ionic.Zlib.StaticTree BitLengths
void Pathfinding::Ionic::Zlib::StaticTree::_set_BitLengths(::Pathfinding::Ionic::Zlib::StaticTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::_set_BitLengths");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "StaticTree", "BitLengths", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int16[] treeCodes
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Pathfinding::Ionic::Zlib::StaticTree::dyn_treeCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::dyn_treeCodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "treeCodes"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] extraBits
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Pathfinding::Ionic::Zlib::StaticTree::dyn_extraBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::dyn_extraBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extraBits"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 extraBase
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::StaticTree::dyn_extraBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::dyn_extraBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extraBase"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 elems
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::StaticTree::dyn_elems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::dyn_elems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elems"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 maxLength
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::StaticTree::dyn_maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::dyn_maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.StaticTree..cctor
void Pathfinding::Ionic::Zlib::StaticTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::StaticTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "StaticTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.Adler
#include "Pathfinding/Ionic/Zlib/Adler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 BASE
uint Pathfinding::Ionic::Zlib::Adler::_get_BASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Adler::_get_BASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Pathfinding.Ionic.Zlib", "Adler", "BASE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 BASE
void Pathfinding::Ionic::Zlib::Adler::_set_BASE(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Adler::_set_BASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "Adler", "BASE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 NMAX
int Pathfinding::Ionic::Zlib::Adler::_get_NMAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Adler::_get_NMAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Pathfinding.Ionic.Zlib", "Adler", "NMAX"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 NMAX
void Pathfinding::Ionic::Zlib::Adler::_set_NMAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Adler::_set_NMAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "Adler", "NMAX", value));
}
// Autogenerated method: Pathfinding.Ionic.Zlib.Adler..cctor
void Pathfinding::Ionic::Zlib::Adler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Adler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "Adler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.Adler.Adler32
uint Pathfinding::Ionic::Zlib::Adler::Adler32(uint adler, ::ArrayW<uint8_t> buf, int index, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::Adler::Adler32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Zlib", "Adler", "Adler32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adler), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, adler, buf, index, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.ZlibStreamFlavor
#include "Pathfinding/Ionic/Zlib/ZlibStreamFlavor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ZlibStreamFlavor ZLIB
::Pathfinding::Ionic::Zlib::ZlibStreamFlavor Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_get_ZLIB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_get_ZLIB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ZlibStreamFlavor>("Pathfinding.Ionic.Zlib", "ZlibStreamFlavor", "ZLIB"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ZlibStreamFlavor ZLIB
void Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_set_ZLIB(::Pathfinding::Ionic::Zlib::ZlibStreamFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_set_ZLIB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ZlibStreamFlavor", "ZLIB", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ZlibStreamFlavor DEFLATE
::Pathfinding::Ionic::Zlib::ZlibStreamFlavor Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_get_DEFLATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_get_DEFLATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ZlibStreamFlavor>("Pathfinding.Ionic.Zlib", "ZlibStreamFlavor", "DEFLATE"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ZlibStreamFlavor DEFLATE
void Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_set_DEFLATE(::Pathfinding::Ionic::Zlib::ZlibStreamFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_set_DEFLATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ZlibStreamFlavor", "DEFLATE", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ZlibStreamFlavor GZIP
::Pathfinding::Ionic::Zlib::ZlibStreamFlavor Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_get_GZIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_get_GZIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ZlibStreamFlavor>("Pathfinding.Ionic.Zlib", "ZlibStreamFlavor", "GZIP"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ZlibStreamFlavor GZIP
void Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_set_GZIP(::Pathfinding::Ionic::Zlib::ZlibStreamFlavor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibStreamFlavor::_set_GZIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ZlibStreamFlavor", "GZIP", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ZlibStreamFlavor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibStreamFlavor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.ZlibBaseStream
#include "Pathfinding/Ionic/Zlib/ZlibBaseStream.hpp"
// Including type: Pathfinding.Ionic.Crc.CRC32
#include "Pathfinding/Ionic/Crc/CRC32.hpp"
// Including type: Pathfinding.Ionic.Zlib.ZlibCodec
#include "Pathfinding/Ionic/Zlib/ZlibCodec.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected internal Pathfinding.Ionic.Zlib.ZlibCodec _z
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::ZlibCodec*& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__z");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_z"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::ZlibCodec**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Pathfinding.Ionic.Zlib.ZlibBaseStream/StreamMode _streamMode
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__streamMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__streamMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_streamMode"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Pathfinding.Ionic.Zlib.FlushType _flushMode
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::FlushType& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__flushMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__flushMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flushMode"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::FlushType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Pathfinding.Ionic.Zlib.ZlibStreamFlavor _flavor
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::ZlibStreamFlavor& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__flavor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__flavor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flavor"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::ZlibStreamFlavor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Pathfinding.Ionic.Zlib.CompressionMode _compressionMode
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::CompressionMode& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__compressionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__compressionMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressionMode"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::CompressionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Pathfinding.Ionic.Zlib.CompressionLevel _level
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::CompressionLevel& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::CompressionLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Boolean _leaveOpen
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Byte[] _workingBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__workingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__workingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_workingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 _bufferSize
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__bufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Byte[] _buf1
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__buf1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__buf1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buf1"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal Pathfinding.Ionic.Zlib.CompressionStrategy Strategy
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::CompressionStrategy& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn_Strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn_Strategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Strategy"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::CompressionStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Crc.CRC32 crc
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Crc::CRC32*& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn_crc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn_crc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crc"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Crc::CRC32**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String _GzipFileName
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__GzipFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__GzipFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GzipFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String _GzipComment
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__GzipComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__GzipComment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GzipComment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.DateTime _GzipMtime
[[deprecated("Use field access instead!")]] ::System::DateTime& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__GzipMtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__GzipMtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GzipMtime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 _gzipHeaderByteCount
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__gzipHeaderByteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn__gzipHeaderByteCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gzipHeaderByteCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean nomoreinput
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn_nomoreinput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::dyn_nomoreinput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nomoreinput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.get_Crc32
int Pathfinding::Ionic::Zlib::ZlibBaseStream::get_Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::get_Crc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Crc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.get__wantCompress
bool Pathfinding::Ionic::Zlib::ZlibBaseStream::get__wantCompress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::get__wantCompress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__wantCompress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.get_z
::Pathfinding::Ionic::Zlib::ZlibCodec* Pathfinding::Ionic::Zlib::ZlibBaseStream::get_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::get_z");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_z", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Pathfinding::Ionic::Zlib::ZlibCodec*, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.get_workingBuffer
::ArrayW<uint8_t> Pathfinding::Ionic::Zlib::ZlibBaseStream::get_workingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::get_workingBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_workingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.finish
void Pathfinding::Ionic::Zlib::ZlibBaseStream::finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.end
void Pathfinding::Ionic::Zlib::ZlibBaseStream::end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::end");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "end", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.ReadZeroTerminatedString
::StringW Pathfinding::Ionic::Zlib::ZlibBaseStream::ReadZeroTerminatedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::ReadZeroTerminatedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadZeroTerminatedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream._ReadAndValidateGzipHeader
int Pathfinding::Ionic::Zlib::ZlibBaseStream::_ReadAndValidateGzipHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::_ReadAndValidateGzipHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_ReadAndValidateGzipHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.Write
void Pathfinding::Ionic::Zlib::ZlibBaseStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.Close
void Pathfinding::Ionic::Zlib::ZlibBaseStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.Flush
void Pathfinding::Ionic::Zlib::ZlibBaseStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.Seek
int64_t Pathfinding::Ionic::Zlib::ZlibBaseStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.SetLength
void Pathfinding::Ionic::Zlib::ZlibBaseStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.Read
int Pathfinding::Ionic::Zlib::ZlibBaseStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.get_CanRead
bool Pathfinding::Ionic::Zlib::ZlibBaseStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.get_CanSeek
bool Pathfinding::Ionic::Zlib::ZlibBaseStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.get_CanWrite
bool Pathfinding::Ionic::Zlib::ZlibBaseStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.get_Length
int64_t Pathfinding::Ionic::Zlib::ZlibBaseStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.get_Position
int64_t Pathfinding::Ionic::Zlib::ZlibBaseStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibBaseStream.set_Position
void Pathfinding::Ionic::Zlib::ZlibBaseStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.ZlibBaseStream/StreamMode
#include "Pathfinding/Ionic/Zlib/ZlibBaseStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ZlibBaseStream/StreamMode Writer
::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Writer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode>("Pathfinding.Ionic.Zlib", "ZlibBaseStream/StreamMode", "Writer"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ZlibBaseStream/StreamMode Writer
void Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Writer(::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Writer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ZlibBaseStream/StreamMode", "Writer", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ZlibBaseStream/StreamMode Reader
::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Reader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode>("Pathfinding.Ionic.Zlib", "ZlibBaseStream/StreamMode", "Reader"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ZlibBaseStream/StreamMode Reader
void Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Reader(::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Reader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ZlibBaseStream/StreamMode", "Reader", value));
}
// Autogenerated static field getter
// Get static field: static public Pathfinding.Ionic.Zlib.ZlibBaseStream/StreamMode Undefined
::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode>("Pathfinding.Ionic.Zlib", "ZlibBaseStream/StreamMode", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Pathfinding.Ionic.Zlib.ZlibBaseStream/StreamMode Undefined
void Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Undefined(::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Zlib", "ZlibBaseStream/StreamMode", "Undefined", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibBaseStream::StreamMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Zlib.ZlibCodec
#include "Pathfinding/Ionic/Zlib/ZlibCodec.hpp"
// Including type: Pathfinding.Ionic.Zlib.DeflateManager
#include "Pathfinding/Ionic/Zlib/DeflateManager.hpp"
// Including type: Pathfinding.Ionic.Zlib.InflateManager
#include "Pathfinding/Ionic/Zlib/InflateManager.hpp"
// Including type: Pathfinding.Ionic.Zlib.FlushType
#include "Pathfinding/Ionic/Zlib/FlushType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] InputBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_InputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_InputBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InputBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NextIn
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_NextIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_NextIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextIn"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 AvailableBytesIn
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_AvailableBytesIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_AvailableBytesIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AvailableBytesIn"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 TotalBytesIn
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_TotalBytesIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_TotalBytesIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalBytesIn"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] OutputBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_OutputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_OutputBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutputBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NextOut
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_NextOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_NextOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextOut"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 AvailableBytesOut
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_AvailableBytesOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_AvailableBytesOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AvailableBytesOut"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 TotalBytesOut
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_TotalBytesOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_TotalBytesOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalBytesOut"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Message
[[deprecated("Use field access instead!")]] ::StringW& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_Message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.DeflateManager dstate
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::DeflateManager*& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_dstate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_dstate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dstate"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::DeflateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Pathfinding.Ionic.Zlib.InflateManager istate
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::InflateManager*& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_istate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_istate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "istate"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::InflateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _Adler32
[[deprecated("Use field access instead!")]] uint& Pathfinding::Ionic::Zlib::ZlibCodec::dyn__Adler32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn__Adler32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Adler32"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Ionic.Zlib.CompressionLevel CompressLevel
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::CompressionLevel& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_CompressLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_CompressLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompressLevel"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::CompressionLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 WindowBits
[[deprecated("Use field access instead!")]] int& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_WindowBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_WindowBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WindowBits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Pathfinding.Ionic.Zlib.CompressionStrategy Strategy
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Zlib::CompressionStrategy& Pathfinding::Ionic::Zlib::ZlibCodec::dyn_Strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::dyn_Strategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Strategy"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Zlib::CompressionStrategy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibCodec.InitializeInflate
int Pathfinding::Ionic::Zlib::ZlibCodec::InitializeInflate(bool expectRfc1950Header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::InitializeInflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectRfc1950Header)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expectRfc1950Header);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibCodec.InitializeInflate
int Pathfinding::Ionic::Zlib::ZlibCodec::InitializeInflate(int windowBits, bool expectRfc1950Header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::InitializeInflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(windowBits), ::il2cpp_utils::ExtractType(expectRfc1950Header)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, windowBits, expectRfc1950Header);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibCodec.Inflate
int Pathfinding::Ionic::Zlib::ZlibCodec::Inflate(::Pathfinding::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::Inflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Inflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, flush);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibCodec.EndInflate
int Pathfinding::Ionic::Zlib::ZlibCodec::EndInflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::EndInflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibCodec.InitializeDeflate
int Pathfinding::Ionic::Zlib::ZlibCodec::InitializeDeflate(::Pathfinding::Ionic::Zlib::CompressionLevel level, bool wantRfc1950Header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::InitializeDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(wantRfc1950Header)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, level, wantRfc1950Header);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibCodec._InternalInitializeDeflate
int Pathfinding::Ionic::Zlib::ZlibCodec::_InternalInitializeDeflate(bool wantRfc1950Header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::_InternalInitializeDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InternalInitializeDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wantRfc1950Header)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, wantRfc1950Header);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibCodec.Deflate
int Pathfinding::Ionic::Zlib::ZlibCodec::Deflate(::Pathfinding::Ionic::Zlib::FlushType flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::Deflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, flush);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibCodec.EndDeflate
int Pathfinding::Ionic::Zlib::ZlibCodec::EndDeflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::EndDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibCodec.ResetDeflate
void Pathfinding::Ionic::Zlib::ZlibCodec::ResetDeflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::ResetDeflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetDeflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibCodec.flush_pending
void Pathfinding::Ionic::Zlib::ZlibCodec::flush_pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::flush_pending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "flush_pending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Zlib.ZlibCodec.read_buf
int Pathfinding::Ionic::Zlib::ZlibCodec::read_buf(::ArrayW<uint8_t> buf, int start, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Zlib::ZlibCodec::read_buf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "read_buf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buf, start, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Crc.CRC32
#include "Pathfinding/Ionic/Crc/CRC32.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 dwPolynomial
[[deprecated("Use field access instead!")]] uint& Pathfinding::Ionic::Crc::CRC32::dyn_dwPolynomial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::dyn_dwPolynomial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dwPolynomial"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _TotalBytesRead
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Ionic::Crc::CRC32::dyn__TotalBytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::dyn__TotalBytesRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_TotalBytesRead"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean reverseBits
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Crc::CRC32::dyn_reverseBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::dyn_reverseBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseBits"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] crc32Table
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Pathfinding::Ionic::Crc::CRC32::dyn_crc32Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::dyn_crc32Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crc32Table"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _register
[[deprecated("Use field access instead!")]] uint& Pathfinding::Ionic::Crc::CRC32::dyn__register() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::dyn__register");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_register"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.get_TotalBytesRead
int64_t Pathfinding::Ionic::Crc::CRC32::get_TotalBytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::get_TotalBytesRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalBytesRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.get_Crc32Result
int Pathfinding::Ionic::Crc::CRC32::get_Crc32Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::get_Crc32Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Crc32Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.GetCrc32
int Pathfinding::Ionic::Crc::CRC32::GetCrc32(::System::IO::Stream* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::GetCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, input);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.GetCrc32AndCopy
int Pathfinding::Ionic::Crc::CRC32::GetCrc32AndCopy(::System::IO::Stream* input, ::System::IO::Stream* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::GetCrc32AndCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCrc32AndCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, input, output);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.ComputeCrc32
int Pathfinding::Ionic::Crc::CRC32::ComputeCrc32(int W, uint8_t B) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::ComputeCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(W), ::il2cpp_utils::ExtractType(B)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, W, B);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32._InternalComputeCrc32
int Pathfinding::Ionic::Crc::CRC32::_InternalComputeCrc32(uint W, uint8_t B) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::_InternalComputeCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_InternalComputeCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(W), ::il2cpp_utils::ExtractType(B)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, W, B);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.SlurpBlock
void Pathfinding::Ionic::Crc::CRC32::SlurpBlock(::ArrayW<uint8_t> block, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::SlurpBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SlurpBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, block, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.ReverseBits
uint Pathfinding::Ionic::Crc::CRC32::ReverseBits(uint data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::ReverseBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Crc", "CRC32", "ReverseBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.ReverseBits
uint8_t Pathfinding::Ionic::Crc::CRC32::ReverseBits(uint8_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::ReverseBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Crc", "CRC32", "ReverseBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.GenerateLookupTable
void Pathfinding::Ionic::Crc::CRC32::GenerateLookupTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::GenerateLookupTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateLookupTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.gf2_matrix_times
uint Pathfinding::Ionic::Crc::CRC32::gf2_matrix_times(::ArrayW<uint> matrix, uint vec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::gf2_matrix_times");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "gf2_matrix_times", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(vec)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, matrix, vec);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.gf2_matrix_square
void Pathfinding::Ionic::Crc::CRC32::gf2_matrix_square(::ArrayW<uint> square, ::ArrayW<uint> mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::gf2_matrix_square");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "gf2_matrix_square", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(square), ::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, square, mat);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CRC32.Combine
void Pathfinding::Ionic::Crc::CRC32::Combine(int crc, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CRC32::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crc), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, crc, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Pathfinding.Ionic.Crc.CrcCalculatorStream
#include "Pathfinding/Ionic/Crc/CrcCalculatorStream.hpp"
// Including type: Pathfinding.Ionic.Crc.CRC32
#include "Pathfinding/Ionic/Crc/CRC32.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 UnsetLengthLimit
int64_t Pathfinding::Ionic::Crc::CrcCalculatorStream::_get_UnsetLengthLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::_get_UnsetLengthLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Pathfinding.Ionic.Crc", "CrcCalculatorStream", "UnsetLengthLimit"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 UnsetLengthLimit
void Pathfinding::Ionic::Crc::CrcCalculatorStream::_set_UnsetLengthLimit(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::_set_UnsetLengthLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Pathfinding.Ionic.Crc", "CrcCalculatorStream", "UnsetLengthLimit", value));
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream _innerStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& Pathfinding::Ionic::Crc::CrcCalculatorStream::dyn__innerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::dyn__innerStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Pathfinding.Ionic.Crc.CRC32 _Crc32
[[deprecated("Use field access instead!")]] ::Pathfinding::Ionic::Crc::CRC32*& Pathfinding::Ionic::Crc::CrcCalculatorStream::dyn__Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::dyn__Crc32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Crc32"))->offset;
  return *reinterpret_cast<::Pathfinding::Ionic::Crc::CRC32**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lengthLimit
[[deprecated("Use field access instead!")]] int64_t& Pathfinding::Ionic::Crc::CrcCalculatorStream::dyn__lengthLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::dyn__lengthLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthLimit"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leaveOpen
[[deprecated("Use field access instead!")]] bool& Pathfinding::Ionic::Crc::CrcCalculatorStream::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream..cctor
void Pathfinding::Ionic::Crc::CrcCalculatorStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Pathfinding.Ionic.Crc", "CrcCalculatorStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.System.IDisposable.Dispose
void Pathfinding::Ionic::Crc::CrcCalculatorStream::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Pathfinding::Ionic::Crc::CrcCalculatorStream*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.get_TotalBytesSlurped
int64_t Pathfinding::Ionic::Crc::CrcCalculatorStream::get_TotalBytesSlurped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::get_TotalBytesSlurped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalBytesSlurped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.get_Crc
int Pathfinding::Ionic::Crc::CrcCalculatorStream::get_Crc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::get_Crc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Crc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.Read
int Pathfinding::Ionic::Crc::CrcCalculatorStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.Write
void Pathfinding::Ionic::Crc::CrcCalculatorStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.get_CanRead
bool Pathfinding::Ionic::Crc::CrcCalculatorStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.get_CanSeek
bool Pathfinding::Ionic::Crc::CrcCalculatorStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.get_CanWrite
bool Pathfinding::Ionic::Crc::CrcCalculatorStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.Flush
void Pathfinding::Ionic::Crc::CrcCalculatorStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.get_Length
int64_t Pathfinding::Ionic::Crc::CrcCalculatorStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.get_Position
int64_t Pathfinding::Ionic::Crc::CrcCalculatorStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.set_Position
void Pathfinding::Ionic::Crc::CrcCalculatorStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.Seek
int64_t Pathfinding::Ionic::Crc::CrcCalculatorStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.SetLength
void Pathfinding::Ionic::Crc::CrcCalculatorStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Pathfinding.Ionic.Crc.CrcCalculatorStream.Close
void Pathfinding::Ionic::Crc::CrcCalculatorStream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Pathfinding::Ionic::Crc::CrcCalculatorStream::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RSG.IRejectable
#include "RSG/IRejectable.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RSG.IRejectable.Reject
void RSG::IRejectable::Reject(::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::IRejectable::Reject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::IRejectable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RSG.PromiseState
#include "RSG/PromiseState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RSG.PromiseState Pending
::RSG::PromiseState RSG::PromiseState::_get_Pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseState::_get_Pending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RSG::PromiseState>("RSG", "PromiseState", "Pending"));
}
// Autogenerated static field setter
// Set static field: static public RSG.PromiseState Pending
void RSG::PromiseState::_set_Pending(::RSG::PromiseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseState::_set_Pending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RSG", "PromiseState", "Pending", value));
}
// Autogenerated static field getter
// Get static field: static public RSG.PromiseState Rejected
::RSG::PromiseState RSG::PromiseState::_get_Rejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseState::_get_Rejected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RSG::PromiseState>("RSG", "PromiseState", "Rejected"));
}
// Autogenerated static field setter
// Set static field: static public RSG.PromiseState Rejected
void RSG::PromiseState::_set_Rejected(::RSG::PromiseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseState::_set_Rejected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RSG", "PromiseState", "Rejected", value));
}
// Autogenerated static field getter
// Get static field: static public RSG.PromiseState Resolved
::RSG::PromiseState RSG::PromiseState::_get_Resolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseState::_get_Resolved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::RSG::PromiseState>("RSG", "PromiseState", "Resolved"));
}
// Autogenerated static field setter
// Set static field: static public RSG.PromiseState Resolved
void RSG::PromiseState::_set_Resolved(::RSG::PromiseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseState::_set_Resolved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RSG", "PromiseState", "Resolved", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& RSG::PromiseState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RSG.Promise
#include "RSG/Promise.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: RSG.Promise/<>c__DisplayClass34_0
#include "RSG/Promise_--c__DisplayClass34_0.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean EnablePromiseTracking
bool RSG::Promise::_get_EnablePromiseTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::_get_EnablePromiseTracking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("RSG", "Promise", "EnablePromiseTracking"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean EnablePromiseTracking
void RSG::Promise::_set_EnablePromiseTracking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::_set_EnablePromiseTracking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RSG", "Promise", "EnablePromiseTracking", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 nextPromiseId
int RSG::Promise::_get_nextPromiseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::_get_nextPromiseId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("RSG", "Promise", "nextPromiseId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 nextPromiseId
void RSG::Promise::_set_nextPromiseId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::_set_nextPromiseId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RSG", "Promise", "nextPromiseId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.HashSet`1<RSG.IPromiseInfo> PendingPromises
::System::Collections::Generic::HashSet_1<::RSG::IPromiseInfo*>* RSG::Promise::_get_PendingPromises() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::_get_PendingPromises");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::RSG::IPromiseInfo*>*>("RSG", "Promise", "PendingPromises"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.HashSet`1<RSG.IPromiseInfo> PendingPromises
void RSG::Promise::_set_PendingPromises(::System::Collections::Generic::HashSet_1<::RSG::IPromiseInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::_set_PendingPromises");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RSG", "Promise", "PendingPromises", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Exception rejectionException
[[deprecated("Use field access instead!")]] ::System::Exception*& RSG::Promise::dyn_rejectionException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::dyn_rejectionException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rejectionException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<RSG.RejectHandler> rejectHandlers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::RSG::RejectHandler>*& RSG::Promise::dyn_rejectHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::dyn_rejectHandlers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rejectHandlers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::RSG::RejectHandler>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<RSG.Promise/ResolveHandler> resolveHandlers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::RSG::Promise::ResolveHandler>*& RSG::Promise::dyn_resolveHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::dyn_resolveHandlers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolveHandlers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::RSG::Promise::ResolveHandler>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<RSG.ProgressHandler> progressHandlers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::RSG::ProgressHandler>*& RSG::Promise::dyn_progressHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::dyn_progressHandlers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressHandlers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::RSG::ProgressHandler>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RSG.PromiseState <CurState>k__BackingField
[[deprecated("Use field access instead!")]] ::RSG::PromiseState& RSG::Promise::dyn_$CurState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::dyn_$CurState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurState>k__BackingField"))->offset;
  return *reinterpret_cast<::RSG::PromiseState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RSG.Promise.get_CurState
::RSG::PromiseState RSG::Promise::get_CurState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::get_CurState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::RSG::PromiseState, false>(this, ___internal__method);
}
// Autogenerated method: RSG.Promise.set_CurState
void RSG::Promise::set_CurState(::RSG::PromiseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::set_CurState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RSG.Promise.NextId
int RSG::Promise::NextId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::NextId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RSG", "Promise", "NextId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RSG.Promise.InvokeRejectHandler
void RSG::Promise::InvokeRejectHandler(::System::Action_1<::System::Exception*>* callback, ::RSG::IRejectable* rejectable, ::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::InvokeRejectHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRejectHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(rejectable), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, rejectable, value);
}
// Autogenerated method: RSG.Promise.ClearHandlers
void RSG::Promise::ClearHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::ClearHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RSG.Promise.InvokeRejectHandlers
void RSG::Promise::InvokeRejectHandlers(::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::InvokeRejectHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRejectHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated method: RSG.Promise.Reject
void RSG::Promise::Reject(::System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::Reject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::RSG::Promise*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated method: RSG.Promise..cctor
void RSG::Promise::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RSG", "Promise", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RSG.Promise/<>c__DisplayClass34_0
#include "RSG/Promise_--c__DisplayClass34_0.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: RSG.RejectHandler
#include "RSG/RejectHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public RSG.Promise <>4__this
[[deprecated("Use field access instead!")]] ::RSG::Promise*& RSG::Promise::$$c__DisplayClass34_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::$$c__DisplayClass34_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::RSG::Promise**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Exception ex
[[deprecated("Use field access instead!")]] ::System::Exception*& RSG::Promise::$$c__DisplayClass34_0::dyn_ex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::$$c__DisplayClass34_0::dyn_ex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ex"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RSG.Promise/<>c__DisplayClass34_0.<InvokeRejectHandlers>b__0
void RSG::Promise::$$c__DisplayClass34_0::$InvokeRejectHandlers$b__0(::RSG::RejectHandler handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::RSG::Promise::$$c__DisplayClass34_0::<InvokeRejectHandlers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InvokeRejectHandlers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RSG.Exceptions.PromiseException
#include "RSG/Exceptions/PromiseException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RSG.Exceptions.PromiseStateException
#include "RSG/Exceptions/PromiseStateException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RSG.Promises.EnumerableExt
#include "RSG/Promises/EnumerableExt.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationSection
#include "System/Configuration/ConfigurationSection.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationSection.DeserializeSection
void System::Configuration::ConfigurationSection::DeserializeSection(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::DeserializeSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Configuration.ConfigurationSection.SerializeSection
::StringW System::Configuration::ConfigurationSection::SerializeSection(::System::Configuration::ConfigurationElement* parentElement, ::StringW name, ::System::Configuration::ConfigurationSaveMode saveMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::SerializeSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parentElement, name, saveMode);
}
// Autogenerated method: System.Configuration.ConfigurationSection.IsModified
bool System::Configuration::ConfigurationSection::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::IsModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationSection.ResetModified
void System::Configuration::ConfigurationSection::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSection::ResetModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationElement
#include "System/Configuration/ConfigurationElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Configuration::ConfigurationElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElement.IsModified
bool System::Configuration::ConfigurationElement::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::IsModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElement.Reset
void System::Configuration::ConfigurationElement::Reset(::System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentElement);
}
// Autogenerated method: System.Configuration.ConfigurationElement.ResetModified
void System::Configuration::ConfigurationElement::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElement::ResetModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Configuration.ConfigurationElementCollection
#include "System/Configuration/ConfigurationElementCollection.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationElementCollection.get_Count
int System::Configuration::ConfigurationElementCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElementCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElementCollection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElementCollection.get_IsSynchronized
bool System::Configuration::ConfigurationElementCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElementCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElementCollection*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElementCollection.get_SyncRoot
::Il2CppObject* System::Configuration::ConfigurationElementCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElementCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElementCollection*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElementCollection.GetEnumerator
::System::Collections::IEnumerator* System::Configuration::ConfigurationElementCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElementCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElementCollection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElementCollection.System.Collections.ICollection.CopyTo
void System::Configuration::ConfigurationElementCollection::System_Collections_ICollection_CopyTo(::System::Array* arr, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElementCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElementCollection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arr, index);
}
// Autogenerated method: System.Configuration.ConfigurationElementCollection.IsModified
bool System::Configuration::ConfigurationElementCollection::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElementCollection::IsModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElementCollection.Reset
void System::Configuration::ConfigurationElementCollection::Reset(::System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElementCollection::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentElement);
}
// Autogenerated method: System.Configuration.ConfigurationElementCollection.ResetModified
void System::Configuration::ConfigurationElementCollection::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationElementCollection::ResetModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Full
::System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Full
void System::Configuration::ConfigurationSaveMode::_set_Full(::System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Minimal
::System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Minimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_get_Minimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Minimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Minimal
void System::Configuration::ConfigurationSaveMode::_set_Minimal(::System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_set_Minimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Minimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Modified
::System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Modified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_get_Modified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Modified"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Modified
void System::Configuration::ConfigurationSaveMode::_set_Modified(::System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::_set_Modified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Modified", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Configuration::ConfigurationSaveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationSaveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationPropertyCollection.get_Count
int System::Configuration::ConfigurationPropertyCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationPropertyCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationPropertyCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationPropertyCollection.get_IsSynchronized
bool System::Configuration::ConfigurationPropertyCollection::get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationPropertyCollection::get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationPropertyCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationPropertyCollection.get_SyncRoot
::Il2CppObject* System::Configuration::ConfigurationPropertyCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationPropertyCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationPropertyCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationPropertyCollection.GetEnumerator
::System::Collections::IEnumerator* System::Configuration::ConfigurationPropertyCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationPropertyCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationPropertyCollection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationPropertyCollection.System.Collections.ICollection.CopyTo
void System::Configuration::ConfigurationPropertyCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::ConfigurationPropertyCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationPropertyCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationCollectionAttribute
#include "System/Configuration/ConfigurationCollectionAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.IgnoreSection
#include "System/Configuration/IgnoreSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.IgnoreSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Configuration::IgnoreSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.DeserializeSection
void System::Configuration::IgnoreSection::DeserializeSection(::System::Xml::XmlReader* xmlReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::DeserializeSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlReader);
}
// Autogenerated method: System.Configuration.IgnoreSection.IsModified
bool System::Configuration::IgnoreSection::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::IsModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.Reset
void System::Configuration::IgnoreSection::Reset(::System::Configuration::ConfigurationElement* parentSection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentSection);
}
// Autogenerated method: System.Configuration.IgnoreSection.ResetModified
void System::Configuration::IgnoreSection::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::ResetModified");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.SerializeSection
::StringW System::Configuration::IgnoreSection::SerializeSection(::System::Configuration::ConfigurationElement* parentSection, ::StringW name, ::System::Configuration::ConfigurationSaveMode saveMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Configuration::IgnoreSection::SerializeSection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationSection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parentSection, name, saveMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub_::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::ThrowStub_::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SR
#include "GlobalNamespace/SR_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR_::GetString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR_::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesManaged
#include "System/Security/Cryptography/AesManaged.hpp"
// Including type: System.Security.Cryptography.RijndaelManaged
#include "System/Security/Cryptography/RijndaelManaged.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RijndaelManaged m_rijndael
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RijndaelManaged*& System::Security::Cryptography::AesManaged::dyn_m_rijndael() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::dyn_m_rijndael");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rijndael"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RijndaelManaged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_FeedbackSize
int System::Security::Cryptography::AesManaged::get_FeedbackSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_FeedbackSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_IV
::ArrayW<uint8_t> System::Security::Cryptography::AesManaged::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_IV
void System::Security::Cryptography::AesManaged::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::set_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::AesManaged::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Key
void System::Security::Cryptography::AesManaged::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::set_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_KeySize
int System::Security::Cryptography::AesManaged::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_KeySize
void System::Security::Cryptography::AesManaged::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::set_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Mode
::System::Security::Cryptography::CipherMode System::Security::Cryptography::AesManaged::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_Mode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Mode
void System::Security::Cryptography::AesManaged::set_Mode(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::set_Mode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Padding
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::AesManaged::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::get_Padding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Padding
void System::Security::Cryptography::AesManaged::set_Padding(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::set_Padding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateDecryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateDecryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateEncryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateEncryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.Dispose
void System::Security::Cryptography::AesManaged::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.GenerateIV
void System::Security::Cryptography::AesManaged::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::GenerateIV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.GenerateKey
void System::Security::Cryptography::AesManaged::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesManaged::GenerateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesCryptoServiceProvider
#include "System/Security/Cryptography/AesCryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV
void System::Security::Cryptography::AesCryptoServiceProvider::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::GenerateIV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey
void System::Security::Cryptography::AesCryptoServiceProvider::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::GenerateKey");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_IV
::ArrayW<uint8_t> System::Security::Cryptography::AesCryptoServiceProvider::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_IV
void System::Security::Cryptography::AesCryptoServiceProvider::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::set_IV");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::AesCryptoServiceProvider::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Key
void System::Security::Cryptography::AesCryptoServiceProvider::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::set_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_KeySize
int System::Security::Cryptography::AesCryptoServiceProvider::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_KeySize
void System::Security::Cryptography::AesCryptoServiceProvider::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::set_KeySize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_FeedbackSize
int System::Security::Cryptography::AesCryptoServiceProvider::get_FeedbackSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_FeedbackSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Mode
::System::Security::Cryptography::CipherMode System::Security::Cryptography::AesCryptoServiceProvider::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_Mode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Mode
void System::Security::Cryptography::AesCryptoServiceProvider::set_Mode(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::set_Mode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Padding
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::AesCryptoServiceProvider::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::get_Padding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Padding
void System::Security::Cryptography::AesCryptoServiceProvider::set_Padding(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::set_Padding");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.Dispose
void System::Security::Cryptography::AesCryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesCryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::SymmetricAlgorithm*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesTransform
#include "System/Security/Cryptography/AesTransform.hpp"
// Including type: System.Security.Cryptography.Aes
#include "System/Security/Cryptography/Aes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] Rcon
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_Rcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_Rcon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "Rcon"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] Rcon
void System::Security::Cryptography::AesTransform::_set_Rcon(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_Rcon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "Rcon", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SBox
::ArrayW<uint8_t> System::Security::Cryptography::AesTransform::_get_SBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_SBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "AesTransform", "SBox"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SBox
void System::Security::Cryptography::AesTransform::_set_SBox(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_SBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "SBox", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] iSBox
::ArrayW<uint8_t> System::Security::Cryptography::AesTransform::_get_iSBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_iSBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "AesTransform", "iSBox"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] iSBox
void System::Security::Cryptography::AesTransform::_set_iSBox(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_iSBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iSBox", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T0
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_T0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T0
void System::Security::Cryptography::AesTransform::_set_T0(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_T0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T1
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_T1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T1
void System::Security::Cryptography::AesTransform::_set_T1(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_T1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T2
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_T2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T2
void System::Security::Cryptography::AesTransform::_set_T2(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_T2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T3
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_T3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T3
void System::Security::Cryptography::AesTransform::_set_T3(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_T3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT0
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_iT0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT0
void System::Security::Cryptography::AesTransform::_set_iT0(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_iT0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT1
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_iT1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT1
void System::Security::Cryptography::AesTransform::_set_iT1(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_iT1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT2
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_iT2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT2
void System::Security::Cryptography::AesTransform::_set_iT2(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_iT2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT3
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_get_iT3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT3
void System::Security::Cryptography::AesTransform::_set_iT3(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::_set_iT3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT3", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] expandedKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Security::Cryptography::AesTransform::dyn_expandedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::dyn_expandedKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expandedKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 Nk
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::AesTransform::dyn_Nk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::dyn_Nk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Nk"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 Nr
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::AesTransform::dyn_Nr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::dyn_Nr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Nr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.SubByte
uint System::Security::Cryptography::AesTransform::SubByte(uint a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::SubByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.Encrypt128
void System::Security::Cryptography::AesTransform::Encrypt128(::ArrayW<uint8_t> indata, ::ArrayW<uint8_t> outdata, ::ArrayW<uint> ekey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::Encrypt128");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt128", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indata), ::il2cpp_utils::ExtractType(outdata), ::il2cpp_utils::ExtractType(ekey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, indata, outdata, ekey);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.Decrypt128
void System::Security::Cryptography::AesTransform::Decrypt128(::ArrayW<uint8_t> indata, ::ArrayW<uint8_t> outdata, ::ArrayW<uint> ekey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::Decrypt128");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt128", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indata), ::il2cpp_utils::ExtractType(outdata), ::il2cpp_utils::ExtractType(ekey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, indata, outdata, ekey);
}
// Autogenerated method: System.Security.Cryptography.AesTransform..cctor
void System::Security::Cryptography::AesTransform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "AesTransform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.ECB
void System::Security::Cryptography::AesTransform::ECB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AesTransform::ECB");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Cryptography::SymmetricTransform*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Error
#include "System/Linq/Error.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Error.ArgumentNull
::System::Exception* System::Linq::Error::ArgumentNull(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::ArgumentNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "ArgumentNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Linq.Error.ArgumentOutOfRange
::System::Exception* System::Linq::Error::ArgumentOutOfRange(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::ArgumentOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "ArgumentOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Linq.Error.MoreThanOneMatch
::System::Exception* System::Linq::Error::MoreThanOneMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::MoreThanOneMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "MoreThanOneMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NoElements
::System::Exception* System::Linq::Error::NoElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::NoElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NoElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NoMatch
::System::Exception* System::Linq::Error::NoMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Error::NoMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NoMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Enumerable
#include "System/Linq/Enumerable.hpp"
// Including type: System.Linq.Enumerable/Iterator`1
#include "System/Linq/Enumerable_Iterator_1.hpp"
// Including type: System.Linq.Enumerable/WhereEnumerableIterator`1
#include "System/Linq/Enumerable_WhereEnumerableIterator_1.hpp"
// Including type: System.Linq.Enumerable/WhereArrayIterator`1
#include "System/Linq/Enumerable_WhereArrayIterator_1.hpp"
// Including type: System.Linq.Enumerable/WhereListIterator`1
#include "System/Linq/Enumerable_WhereListIterator_1.hpp"
// Including type: System.Linq.Enumerable/WhereSelectEnumerableIterator`2
#include "System/Linq/Enumerable_WhereSelectEnumerableIterator_2.hpp"
// Including type: System.Linq.Enumerable/WhereSelectArrayIterator`2
#include "System/Linq/Enumerable_WhereSelectArrayIterator_2.hpp"
// Including type: System.Linq.Enumerable/WhereSelectListIterator`2
#include "System/Linq/Enumerable_WhereSelectListIterator_2.hpp"
// Including type: System.Linq.Enumerable/<SelectIterator>d__5`2
#include "System/Linq/Enumerable_-SelectIterator-d__5_2.hpp"
// Including type: System.Linq.Enumerable/<>c__DisplayClass6_0`1
#include "System/Linq/Enumerable_--c__DisplayClass6_0_1.hpp"
// Including type: System.Linq.Enumerable/<>c__DisplayClass7_0`3
#include "System/Linq/Enumerable_--c__DisplayClass7_0_3.hpp"
// Including type: System.Linq.Enumerable/<DistinctIterator>d__68`1
#include "System/Linq/Enumerable_-DistinctIterator-d__68_1.hpp"
// Including type: System.Linq.Enumerable/<RangeIterator>d__115
#include "System/Linq/Enumerable_-RangeIterator-d__115.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Linq.IOrderedEnumerable`1
#include "System/Linq/IOrderedEnumerable_1.hpp"
// Including type: System.Collections.Generic.IEqualityComparer`1
#include "System/Collections/Generic/IEqualityComparer_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Enumerable.Range
::System::Collections::Generic::IEnumerable_1<int>* System::Linq::Enumerable::Range(int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::Range");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Range", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, count);
}
// Autogenerated method: System.Linq.Enumerable.RangeIterator
::System::Collections::Generic::IEnumerable_1<int>* System::Linq::Enumerable::RangeIterator(int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::RangeIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "RangeIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Enumerable/<RangeIterator>d__115
#include "System/Linq/Enumerable_-RangeIterator-d__115.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>2__current
[[deprecated("Use field access instead!")]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 start
[[deprecated("Use field access instead!")]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>3__start
[[deprecated("Use field access instead!")]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__1
[[deprecated("Use field access instead!")]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$i$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$i$5__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>3__count
[[deprecated("Use field access instead!")]] int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Enumerable/<RangeIterator>d__115.System.IDisposable.Dispose
void System::Linq::Enumerable::$RangeIterator$d__115::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/<RangeIterator>d__115.MoveNext
bool System::Linq::Enumerable::$RangeIterator$d__115::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/<RangeIterator>d__115.System.Collections.Generic.IEnumerator<System.Int32>.get_Current
int System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_Generic_IEnumerator$System_Int32$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.Generic.IEnumerator<System.Int32>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/<RangeIterator>d__115.System.Collections.IEnumerator.Reset
void System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/<RangeIterator>d__115.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/<RangeIterator>d__115.System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<int>* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_Generic_IEnumerable$System_Int32$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/<RangeIterator>d__115.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Linq::Enumerable::$RangeIterator$d__115*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.BitHelper
#include "System/Collections/Generic/BitHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _length
[[deprecated("Use field access instead!")]] int& System::Collections::Generic::BitHelper::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32* _arrayPtr
[[deprecated("Use field access instead!")]] int*& System::Collections::Generic::BitHelper::dyn__arrayPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper::dyn__arrayPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrayPtr"))->offset;
  return *reinterpret_cast<int**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] _array
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Collections::Generic::BitHelper::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _useStackAlloc
[[deprecated("Use field access instead!")]] bool& System::Collections::Generic::BitHelper::dyn__useStackAlloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper::dyn__useStackAlloc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useStackAlloc"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Generic.BitHelper.MarkBit
void System::Collections::Generic::BitHelper::MarkBit(int bitPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper::MarkBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitPosition);
}
// Autogenerated method: System.Collections.Generic.BitHelper.IsMarked
bool System::Collections::Generic::BitHelper::IsMarked(int bitPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper::IsMarked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMarked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bitPosition);
}
// Autogenerated method: System.Collections.Generic.BitHelper.ToIntArrayLength
int System::Collections::Generic::BitHelper::ToIntArrayLength(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper::ToIntArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "BitHelper", "ToIntArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR__.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR__::GetString(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR__::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR__::GetString(::System::Globalization::CultureInfo* culture, ::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR__::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, name, args);
}
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR__::GetString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR__::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR__::Format(::StringW resourceFormat, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR__::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, p1);
}
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR__::Format(::StringW resourceFormat, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR__::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, p1, p2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Util.MonoPInvokeCallbackAttribute
#include "Mono/Util/MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.CertHelper
#include "Mono/Unity/CertHelper.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.CertHelper.AddCertificatesToNativeChain
void Mono::Unity::CertHelper::AddCertificatesToNativeChain(::Mono::Unity::UnityTls::unitytls_x509list* nativeCertificateChain, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::CertHelper::AddCertificatesToNativeChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "CertHelper", "AddCertificatesToNativeChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeCertificateChain), ::il2cpp_utils::ExtractType(certificates), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nativeCertificateChain, certificates, errorState);
}
// Autogenerated method: Mono.Unity.CertHelper.AddCertificateToNativeChain
void Mono::Unity::CertHelper::AddCertificateToNativeChain(::Mono::Unity::UnityTls::unitytls_x509list* nativeCertificateChain, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::CertHelper::AddCertificateToNativeChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "CertHelper", "AddCertificateToNativeChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeCertificateChain), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nativeCertificateChain, certificate, errorState);
}
// Autogenerated method: Mono.Unity.CertHelper.NativeChainToManagedCollection
::System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Unity::CertHelper::NativeChainToManagedCollection(::Mono::Unity::UnityTls::unitytls_x509list_ref nativeCertificateChain, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::CertHelper::NativeChainToManagedCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "CertHelper", "NativeChainToManagedCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeCertificateChain), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nativeCertificateChain, errorState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.Debug
#include "Mono/Unity/Debug.hpp"
// Including type: Mono.Security.Interface.AlertDescription
#include "Mono/Security/Interface/AlertDescription.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.Debug.CheckAndThrow
void Mono::Unity::Debug::CheckAndThrow(::Mono::Unity::UnityTls::unitytls_errorstate errorState, ::StringW context, ::Mono::Security::Interface::AlertDescription defaultAlert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::Debug::CheckAndThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "Debug", "CheckAndThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(defaultAlert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorState, context, defaultAlert);
}
// Autogenerated method: Mono.Unity.Debug.CheckAndThrow
void Mono::Unity::Debug::CheckAndThrow(::Mono::Unity::UnityTls::unitytls_errorstate errorState, ::Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult, ::StringW context, ::Mono::Security::Interface::AlertDescription defaultAlert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::Debug::CheckAndThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "Debug", "CheckAndThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(verifyResult), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(defaultAlert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorState, verifyResult, context, defaultAlert);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls
#include "Mono/Unity/UnityTls.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_error_code
#include "Mono/Unity/UnityTls_unitytls_error_code.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509name
#include "Mono/Unity/UnityTls_unitytls_x509name.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_protocolrange
#include "Mono/Unity/UnityTls_unitytls_tlsctx_protocolrange.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_write_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_write_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_read_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_read_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_trace_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_trace_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_callbacks
#include "Mono/Unity/UnityTls_unitytls_tlsctx_callbacks.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct
#include "Mono/Unity/UnityTls_unitytls_interface_struct.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Mono.Unity.UnityTls/unitytls_interface_struct marshalledInterface
::Mono::Unity::UnityTls::unitytls_interface_struct* Mono::Unity::UnityTls::_get_marshalledInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::_get_marshalledInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_interface_struct*>("Mono.Unity", "UnityTls", "marshalledInterface"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Unity.UnityTls/unitytls_interface_struct marshalledInterface
void Mono::Unity::UnityTls::_set_marshalledInterface(::Mono::Unity::UnityTls::unitytls_interface_struct* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::_set_marshalledInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls", "marshalledInterface", value));
}
// Autogenerated method: Mono.Unity.UnityTls.GetUnityTlsInterface
::System::IntPtr Mono::Unity::UnityTls::GetUnityTlsInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::GetUnityTlsInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTls", "GetUnityTlsInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTls.get_IsSupported
bool Mono::Unity::UnityTls::get_IsSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::get_IsSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTls", "get_IsSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTls.get_NativeInterface
::Mono::Unity::UnityTls::unitytls_interface_struct* Mono::Unity::UnityTls::get_NativeInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::get_NativeInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTls", "get_NativeInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_interface_struct*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTls..cctor
void Mono::Unity::UnityTls::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTls", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/unitytls_error_code
#include "Mono/Unity/UnityTls_unitytls_error_code.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_SUCCESS
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_SUCCESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_SUCCESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_SUCCESS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_SUCCESS
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_SUCCESS(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_SUCCESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_SUCCESS", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_INVALID_ARGUMENT
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_ARGUMENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_ARGUMENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_ARGUMENT"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_INVALID_ARGUMENT
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_ARGUMENT(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_ARGUMENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_ARGUMENT", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_INVALID_FORMAT
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_FORMAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_FORMAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_FORMAT"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_INVALID_FORMAT
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_FORMAT(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_FORMAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_FORMAT", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_INVALID_PASSWORD
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_PASSWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_PASSWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_PASSWORD"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_INVALID_PASSWORD
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_PASSWORD(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_PASSWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_PASSWORD", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_INVALID_STATE
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_STATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_STATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_STATE"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_INVALID_STATE
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_STATE(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_STATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_STATE", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_BUFFER_OVERFLOW
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_BUFFER_OVERFLOW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_BUFFER_OVERFLOW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_BUFFER_OVERFLOW"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_BUFFER_OVERFLOW
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_BUFFER_OVERFLOW(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_BUFFER_OVERFLOW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_BUFFER_OVERFLOW", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_OUT_OF_MEMORY
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_OUT_OF_MEMORY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_OUT_OF_MEMORY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_OUT_OF_MEMORY"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_OUT_OF_MEMORY
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_OUT_OF_MEMORY(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_OUT_OF_MEMORY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_OUT_OF_MEMORY", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_INTERNAL_ERROR
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INTERNAL_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INTERNAL_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INTERNAL_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_INTERNAL_ERROR
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INTERNAL_ERROR(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INTERNAL_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INTERNAL_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_NOT_SUPPORTED
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_NOT_SUPPORTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_NOT_SUPPORTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_NOT_SUPPORTED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_NOT_SUPPORTED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_NOT_SUPPORTED(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_NOT_SUPPORTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_NOT_SUPPORTED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_ENTROPY_SOURCE_FAILED
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_ENTROPY_SOURCE_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_ENTROPY_SOURCE_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_ENTROPY_SOURCE_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_ENTROPY_SOURCE_FAILED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_ENTROPY_SOURCE_FAILED(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_ENTROPY_SOURCE_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_ENTROPY_SOURCE_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_STREAM_CLOSED
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_STREAM_CLOSED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_STREAM_CLOSED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_STREAM_CLOSED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_STREAM_CLOSED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_STREAM_CLOSED(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_STREAM_CLOSED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_STREAM_CLOSED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_START
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_START() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_START");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_START"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_START
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_START(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_START");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_START", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_WOULD_BLOCK
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WOULD_BLOCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WOULD_BLOCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WOULD_BLOCK"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_WOULD_BLOCK
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WOULD_BLOCK(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WOULD_BLOCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WOULD_BLOCK", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_READ_FAILED
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_READ_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_READ_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_READ_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_READ_FAILED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_READ_FAILED(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_READ_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_READ_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_WRITE_FAILED
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WRITE_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WRITE_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WRITE_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_WRITE_FAILED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WRITE_FAILED(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WRITE_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WRITE_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_UNKNOWN_ERROR
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_UNKNOWN_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_UNKNOWN_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_UNKNOWN_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_UNKNOWN_ERROR
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_UNKNOWN_ERROR(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_UNKNOWN_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_UNKNOWN_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_END
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_END"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_END
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_END(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_END", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Mono::Unity::UnityTls::unitytls_error_code::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_SUCCESS
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_SUCCESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_SUCCESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_SUCCESS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_SUCCESS
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_SUCCESS(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_SUCCESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_SUCCESS", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_NOT_DONE
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_NOT_DONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_NOT_DONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_NOT_DONE"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_NOT_DONE
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_NOT_DONE(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_NOT_DONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_NOT_DONE", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FATAL_ERROR
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FATAL_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FATAL_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FATAL_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FATAL_ERROR
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FATAL_ERROR(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FATAL_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FATAL_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_EXPIRED
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_EXPIRED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_EXPIRED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_EXPIRED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_EXPIRED
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_EXPIRED(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_EXPIRED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_EXPIRED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_REVOKED
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_REVOKED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_REVOKED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_REVOKED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_REVOKED
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_REVOKED(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_REVOKED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_REVOKED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR1
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR1
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR2
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR2"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR2
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR2", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR3
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR3"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR3
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR3", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR4
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR4"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR4
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR4", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR5
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR5"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR5
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR5", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR6
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR6"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR6
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR6", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR7
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR7"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR7
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR7", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR8
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR8"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR8
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR8", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Mono::Unity::UnityTls::unitytls_x509verify_result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_x509verify_callback.Invoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_callback::Invoke(void* userData, ::Mono::Unity::UnityTls::unitytls_x509_ref cert, ::Mono::Unity::UnityTls::unitytls_x509verify_result result, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_x509verify_callback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, userData, cert, result, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_x509verify_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_x509verify_callback::BeginInvoke(void* userData, ::Mono::Unity::UnityTls::unitytls_x509_ref cert, ::Mono::Unity::UnityTls::unitytls_x509verify_result result, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_x509verify_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, cert, result, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_x509verify_callback.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_x509verify_callback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_ciphersuite UNITYTLS_CIPHERSUITE_INVALID
::Mono::Unity::UnityTls::unitytls_ciphersuite Mono::Unity::UnityTls::unitytls_ciphersuite::_get_UNITYTLS_CIPHERSUITE_INVALID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_ciphersuite::_get_UNITYTLS_CIPHERSUITE_INVALID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_ciphersuite>("Mono.Unity", "UnityTls/unitytls_ciphersuite", "UNITYTLS_CIPHERSUITE_INVALID"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_ciphersuite UNITYTLS_CIPHERSUITE_INVALID
void Mono::Unity::UnityTls::unitytls_ciphersuite::_set_UNITYTLS_CIPHERSUITE_INVALID(::Mono::Unity::UnityTls::unitytls_ciphersuite value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_ciphersuite::_set_UNITYTLS_CIPHERSUITE_INVALID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_ciphersuite", "UNITYTLS_CIPHERSUITE_INVALID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Mono::Unity::UnityTls::unitytls_ciphersuite::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_ciphersuite::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_0
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_0"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_0
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_0(::Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_0", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_1
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_1
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_1(::Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_2
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_2"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_2
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_2(::Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_2", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/unitytls_protocol UNITYTLS_PROTOCOL_INVALID
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_INVALID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_INVALID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_INVALID"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/unitytls_protocol UNITYTLS_PROTOCOL_INVALID
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_INVALID(::Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_INVALID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_INVALID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Mono::Unity::UnityTls::unitytls_protocol::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_write_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_write_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_write_callback.Invoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::Invoke(void* userData, uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, userData, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_write_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::BeginInvoke(void* userData, uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, data, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_write_callback.EndInvoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_read_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_read_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_read_callback.Invoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::Invoke(void* userData, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, userData, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_read_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::BeginInvoke(void* userData, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_read_callback.EndInvoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_trace_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_trace_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_trace_callback.Invoke
void Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::Invoke(void* userData, ::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* traceMessage, ::System::IntPtr traceMessageLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userData, ctx, traceMessage, traceMessageLen);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_trace_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::BeginInvoke(void* userData, ::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* traceMessage, ::System::IntPtr traceMessageLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, ctx, traceMessage, traceMessageLen, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_trace_callback.EndInvoke
void Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509name
#include "Mono/Unity/UnityTls_unitytls_x509name.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_certificate_callback.Invoke
void Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::Invoke(void* userData, ::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509name* caList, ::System::IntPtr caListLen, ::Mono::Unity::UnityTls::unitytls_x509list_ref* chain, ::Mono::Unity::UnityTls::unitytls_key_ref* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userData, ctx, cn, cnLen, caList, caListLen, chain, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_certificate_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::BeginInvoke(void* userData, ::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509name* caList, ::System::IntPtr caListLen, ::Mono::Unity::UnityTls::unitytls_x509list_ref* chain, ::Mono::Unity::UnityTls::unitytls_key_ref* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, ctx, cn, cnLen, caList, caListLen, chain, key, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_certificate_callback.EndInvoke
void Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_x509verify_callback.Invoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::Invoke(void* userData, ::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, userData, chain, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_x509verify_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::BeginInvoke(void* userData, ::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, chain, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_tlsctx_x509verify_callback.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct
#include "Mono/Unity/UnityTls_unitytls_interface_struct.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_raise_error_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_pem_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_free_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509_export_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_x509_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_create_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_free_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_default_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_explicit_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_server_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_client_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_server_require_client_authentication_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_certificate_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_trace_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_x509verify_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_supported_ciphersuites_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_ciphersuite_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_protocol_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_process_handshake_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_read_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_write_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_notify_close_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_random_generate_bytes_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UNITYTLS_INVALID_HANDLE
[[deprecated("Use field access instead!")]] uint64_t& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_INVALID_HANDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_INVALID_HANDLE");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UNITYTLS_INVALID_HANDLE"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Mono.Unity.UnityTls/unitytls_tlsctx_protocolrange UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_create_t unitytls_errorstate_create
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_create");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_errorstate_create"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_raise_error_t unitytls_errorstate_raise_error
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_raise_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_raise_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_errorstate_raise_error"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_get_ref_t unitytls_key_get_ref
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_get_ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_get_ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_get_ref"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_der_t unitytls_key_parse_der
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_der() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_der");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_parse_der"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_pem_t unitytls_key_parse_pem
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_pem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_pem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_parse_pem"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_free_t unitytls_key_free
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_free");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_free"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509_export_der_t unitytls_x509_export_der
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509_export_der() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509_export_der");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509_export_der"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_ref_t unitytls_x509list_get_ref
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_get_ref"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_x509_t unitytls_x509list_get_x509
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_x509() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_x509");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_get_x509"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_create_t unitytls_x509list_create
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_create");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_create"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_t unitytls_x509list_append
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_append"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_der_t unitytls_x509list_append_der
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_der() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_der");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_append_der"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_der_t unitytls_x509list_append_pem
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_pem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_pem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_append_pem"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_free_t unitytls_x509list_free
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_free");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_free"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_default_ca_t unitytls_x509verify_default_ca
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_default_ca() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_default_ca");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509verify_default_ca"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_explicit_ca_t unitytls_x509verify_explicit_ca
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_explicit_ca() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_explicit_ca");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509verify_explicit_ca"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_server_t unitytls_tlsctx_create_server
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_server");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_create_server"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_client_t unitytls_tlsctx_create_client
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_create_client"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_server_require_client_authentication_t unitytls_tlsctx_server_require_client_authentication
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_server_require_client_authentication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_server_require_client_authentication");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_server_require_client_authentication"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_certificate_callback_t unitytls_tlsctx_set_certificate_callback
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_certificate_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_certificate_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_certificate_callback"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_trace_callback_t unitytls_tlsctx_set_trace_callback
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_trace_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_trace_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_trace_callback"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_x509verify_callback_t unitytls_tlsctx_set_x509verify_callback
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_x509verify_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_x509verify_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_x509verify_callback"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_supported_ciphersuites_t unitytls_tlsctx_set_supported_ciphersuites
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_supported_ciphersuites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_supported_ciphersuites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_supported_ciphersuites"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_ciphersuite_t unitytls_tlsctx_get_ciphersuite
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_ciphersuite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_ciphersuite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_get_ciphersuite"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_protocol_t unitytls_tlsctx_get_protocol
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_get_protocol"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_process_handshake_t unitytls_tlsctx_process_handshake
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_process_handshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_process_handshake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_process_handshake"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_read_t unitytls_tlsctx_read
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_read");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_read"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_write_t unitytls_tlsctx_write
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_write");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_write"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_notify_close_t unitytls_tlsctx_notify_close
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_notify_close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_notify_close");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_notify_close"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_free_t unitytls_tlsctx_free
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_free");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_free"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_random_generate_bytes_t unitytls_random_generate_bytes
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_random_generate_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_random_generate_bytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_random_generate_bytes"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_create_t.Invoke
::Mono::Unity::UnityTls::unitytls_errorstate Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_errorstate, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_create_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_create_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_errorstate Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_errorstate, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_raise_error_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_error_code
#include "Mono/Unity/UnityTls_unitytls_error_code.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_raise_error_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::Invoke(::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::Mono::Unity::UnityTls::unitytls_error_code errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorState, errorCode);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_raise_error_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::Mono::Unity::UnityTls::unitytls_error_code errorCode, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, errorState, errorCode, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_errorstate_raise_error_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_get_ref_t.Invoke
::Mono::Unity::UnityTls::unitytls_key_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::Invoke(::Mono::Unity::UnityTls::unitytls_key* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key_ref, false>(this, ___internal__method, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_get_ref_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_key* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, key, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_get_ref_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_key_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key_ref, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_der_t.Invoke
::Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::Invoke(uint8_t* buffer, ::System::IntPtr bufferLen, uint8_t* password, ::System::IntPtr passwordLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_der_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::BeginInvoke(uint8_t* buffer, ::System::IntPtr bufferLen, uint8_t* password, ::System::IntPtr passwordLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_der_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_pem_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_pem_t.Invoke
::Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::Invoke(uint8_t* buffer, ::System::IntPtr bufferLen, uint8_t* password, ::System::IntPtr passwordLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_pem_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::BeginInvoke(uint8_t* buffer, ::System::IntPtr bufferLen, uint8_t* password, ::System::IntPtr passwordLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_parse_pem_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_free_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_free_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::Invoke(::Mono::Unity::UnityTls::unitytls_key* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_free_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_key* key, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, key, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_key_free_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509_export_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509_export_der_t.Invoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509_ref cert, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, cert, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509_export_der_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509_ref cert, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, cert, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509_export_der_t.EndInvoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_ref_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509list_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list* list, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509list_ref, false>(this, ___internal__method, list, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_ref_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list* list, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, list, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_ref_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509list_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509list_ref, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_x509_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_x509_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list_ref list, ::System::IntPtr index, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509_ref, false>(this, ___internal__method, list, index, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_x509_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list_ref list, ::System::IntPtr index, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, list, index, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_x509_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509_ref, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_create_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_create_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509list* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::Invoke(::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509list*, false>(this, ___internal__method, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_create_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_create_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509list* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509list*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list* list, ::Mono::Unity::UnityTls::unitytls_x509_ref cert, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, cert, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list* list, ::Mono::Unity::UnityTls::unitytls_x509_ref cert, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, list, cert, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_der_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list* list, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_der_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list* list, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, list, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_der_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_free_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_free_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_free_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list* list, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, list, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_free_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_default_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_default_ca_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list_ref chain, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, cn, cnLen, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_default_ca_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list_ref chain, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, chain, cn, cnLen, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_default_ca_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_explicit_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_explicit_ca_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_x509list_ref trustCA, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, trustCA, cn, cnLen, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_explicit_ca_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_x509list_ref trustCA, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, chain, trustCA, cn, cnLen, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_explicit_ca_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_server_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_protocolrange
#include "Mono/Unity/UnityTls_unitytls_tlsctx_protocolrange.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_callbacks
#include "Mono/Unity/UnityTls_unitytls_tlsctx_callbacks.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_server_t.Invoke
::Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, ::Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint64_t certChain, uint64_t leafCertificateKey, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, supportedProtocols, callbacks, certChain, leafCertificateKey, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_server_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, ::Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint64_t certChain, uint64_t leafCertificateKey, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, supportedProtocols, callbacks, certChain, leafCertificateKey, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_server_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_client_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_protocolrange
#include "Mono/Unity/UnityTls_unitytls_tlsctx_protocolrange.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_callbacks
#include "Mono/Unity/UnityTls_unitytls_tlsctx_callbacks.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_client_t.Invoke
::Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, ::Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, supportedProtocols, callbacks, cn, cnLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_client_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, ::Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, supportedProtocols, callbacks, cn, cnLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_client_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_server_require_client_authentication_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_server_require_client_authentication_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_x509list_ref clientAuthCAList, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, clientAuthCAList, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_server_require_client_authentication_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_x509list_ref clientAuthCAList, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, clientAuthCAList, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_server_require_client_authentication_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_certificate_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_certificate_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_certificate_callback_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_certificate_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_trace_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_trace_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_trace_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_trace_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_trace_callback_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_trace_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_x509verify_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_x509verify_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_x509verify_callback_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_x509verify_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_supported_ciphersuites_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_supported_ciphersuites_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_ciphersuite* supportedCiphersuites, ::System::IntPtr supportedCiphersuitesLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, supportedCiphersuites, supportedCiphersuitesLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_supported_ciphersuites_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_ciphersuite* supportedCiphersuites, ::System::IntPtr supportedCiphersuitesLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, supportedCiphersuites, supportedCiphersuitesLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_supported_ciphersuites_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_ciphersuite_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_ciphersuite_t.Invoke
::Mono::Unity::UnityTls::unitytls_ciphersuite Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_ciphersuite, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_ciphersuite_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_ciphersuite_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_ciphersuite Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_ciphersuite, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_protocol_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_protocol_t.Invoke
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_protocol, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_protocol_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_protocol_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_protocol, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_process_handshake_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_process_handshake_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_process_handshake_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_process_handshake_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_read_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_read_t.Invoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, ctx, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_read_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_read_t.EndInvoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_write_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_write_t.Invoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, ctx, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_write_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, data, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_write_t.EndInvoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_notify_close_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_notify_close_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_notify_close_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_notify_close_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_free_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_free_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_free_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_random_generate_bytes_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_random_generate_bytes_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::Invoke(uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_random_generate_bytes_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::BeginInvoke(uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_random_generate_bytes_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsContext
#include "Mono/Unity/UnityTlsContext.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Security.Interface.MonoTlsConnectionInfo
#include "Mono/Security/Interface/MonoTlsConnectionInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509name
#include "Mono/Unity/UnityTls_unitytls_x509name.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/unitytls_tlsctx* tlsContext
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_tlsctx*& Mono::Unity::UnityTlsContext::dyn_tlsContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_tlsContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tlsContext"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_tlsctx**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/unitytls_x509list* requestedClientCertChain
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_x509list*& Mono::Unity::UnityTlsContext::dyn_requestedClientCertChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_requestedClientCertChain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedClientCertChain"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_x509list**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/unitytls_key* requestedClientKey
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_key*& Mono::Unity::UnityTlsContext::dyn_requestedClientKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_requestedClientKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedClientKey"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_key**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate localClientCertificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Unity::UnityTlsContext::dyn_localClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_localClientCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localClientCertificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate remoteCertificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Unity::UnityTlsContext::dyn_remoteCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_remoteCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteCertificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.MonoTlsConnectionInfo connectioninfo
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsConnectionInfo*& Mono::Unity::UnityTlsContext::dyn_connectioninfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_connectioninfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectioninfo"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsConnectionInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isAuthenticated
[[deprecated("Use field access instead!")]] bool& Mono::Unity::UnityTlsContext::dyn_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_isAuthenticated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAuthenticated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasContext
[[deprecated("Use field access instead!")]] bool& Mono::Unity::UnityTlsContext::dyn_hasContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_hasContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasContext"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closedGraceful
[[deprecated("Use field access instead!")]] bool& Mono::Unity::UnityTlsContext::dyn_closedGraceful() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_closedGraceful");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedGraceful"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] writeBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Unity::UnityTlsContext::dyn_writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_writeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] readBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Unity::UnityTlsContext::dyn_readBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_readBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle handle
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& Mono::Unity::UnityTlsContext::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception lastException
[[deprecated("Use field access instead!")]] ::System::Exception*& Mono::Unity::UnityTlsContext::dyn_lastException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_lastException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ExtractNativeKeyAndChainFromManagedCertificate
void Mono::Unity::UnityTlsContext::ExtractNativeKeyAndChainFromManagedCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate* cert, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ByRef<::Mono::Unity::UnityTls::unitytls_x509list*> nativeCertChain, ByRef<::Mono::Unity::UnityTls::unitytls_key*> nativeKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::ExtractNativeKeyAndChainFromManagedCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "ExtractNativeKeyAndChainFromManagedCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractIndependentType<::Mono::Unity::UnityTls::unitytls_x509list*&>(), ::il2cpp_utils::ExtractIndependentType<::Mono::Unity::UnityTls::unitytls_key*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cert, errorState, byref(nativeCertChain), byref(nativeKey));
}
// Autogenerated method: Mono.Unity.UnityTlsContext.WriteCallback
::System::IntPtr Mono::Unity::UnityTlsContext::WriteCallback(void* userData, uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::WriteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "WriteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.WriteCallback
::System::IntPtr Mono::Unity::UnityTlsContext::WriteCallback(uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::WriteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ReadCallback
::System::IntPtr Mono::Unity::UnityTlsContext::ReadCallback(void* userData, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::ReadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "ReadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ReadCallback
::System::IntPtr Mono::Unity::UnityTlsContext::ReadCallback(uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::ReadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.VerifyCallback
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTlsContext::VerifyCallback(void* userData, ::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::VerifyCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "VerifyCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, chain, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.VerifyCallback
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTlsContext::VerifyCallback(::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::VerifyCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.CertificateCallback
void Mono::Unity::UnityTlsContext::CertificateCallback(void* userData, ::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509name* caList, ::System::IntPtr caListLen, ::Mono::Unity::UnityTls::unitytls_x509list_ref* chain, ::Mono::Unity::UnityTls::unitytls_key_ref* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::CertificateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "CertificateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(caList), ::il2cpp_utils::ExtractType(caListLen), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, ctx, cn, cnLen, caList, caListLen, chain, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.CertificateCallback
void Mono::Unity::UnityTlsContext::CertificateCallback(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509name* caList, ::System::IntPtr caListLen, ::Mono::Unity::UnityTls::unitytls_x509list_ref* chain, ::Mono::Unity::UnityTls::unitytls_key_ref* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::CertificateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CertificateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(caList), ::il2cpp_utils::ExtractType(caListLen), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cn, cnLen, caList, caListLen, chain, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.get_IsAuthenticated
bool Mono::Unity::UnityTlsContext::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.get_LocalClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Unity::UnityTlsContext::get_LocalClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::get_LocalClientCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Read
::System::ValueTuple_2<int, bool> Mono::Unity::UnityTlsContext::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Write
::System::ValueTuple_2<int, bool> Mono::Unity::UnityTlsContext::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Shutdown
void Mono::Unity::UnityTlsContext::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::Shutdown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Dispose
void Mono::Unity::UnityTlsContext::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.StartHandshake
void Mono::Unity::UnityTlsContext::StartHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::StartHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ProcessHandshake
bool Mono::Unity::UnityTlsContext::ProcessHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::ProcessHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.FinishHandshake
void Mono::Unity::UnityTlsContext::FinishHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::FinishHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsConversions
#include "Mono/Unity/UnityTlsConversions.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: Mono.Security.Interface.TlsProtocols
#include "Mono/Security/Interface/TlsProtocols.hpp"
// Including type: Mono.Security.Interface.AlertDescription
#include "Mono/Security/Interface/AlertDescription.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsConversions.GetMinProtocol
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTlsConversions::GetMinProtocol(::System::Security::Authentication::SslProtocols protocols) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsConversions::GetMinProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "GetMinProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocols)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_protocol, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocols);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.GetMaxProtocol
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTlsConversions::GetMaxProtocol(::System::Security::Authentication::SslProtocols protocols) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsConversions::GetMaxProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "GetMaxProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocols)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_protocol, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocols);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.ConvertProtocolVersion
::Mono::Security::Interface::TlsProtocols Mono::Unity::UnityTlsConversions::ConvertProtocolVersion(::Mono::Unity::UnityTls::unitytls_protocol protocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsConversions::ConvertProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "ConvertProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocol)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::TlsProtocols, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocol);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.VerifyResultToAlertDescription
::Mono::Security::Interface::AlertDescription Mono::Unity::UnityTlsConversions::VerifyResultToAlertDescription(::Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult, ::Mono::Security::Interface::AlertDescription defaultAlert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsConversions::VerifyResultToAlertDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "VerifyResultToAlertDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verifyResult), ::il2cpp_utils::ExtractType(defaultAlert)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::AlertDescription, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verifyResult, defaultAlert);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.VerifyResultToPolicyErrror
::Mono::Security::Interface::MonoSslPolicyErrors Mono::Unity::UnityTlsConversions::VerifyResultToPolicyErrror(::Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsConversions::VerifyResultToPolicyErrror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "VerifyResultToPolicyErrror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verifyResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoSslPolicyErrors, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verifyResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsProvider
#include "Mono/Unity/UnityTlsProvider.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_Name
::StringW Mono::Unity::UnityTlsProvider::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_ID
::System::Guid Mono::Unity::UnityTlsProvider::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsSslStream
bool Mono::Unity::UnityTlsProvider::get_SupportsSslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_SupportsSslStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsMonoExtensions
bool Mono::Unity::UnityTlsProvider::get_SupportsMonoExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_SupportsMonoExtensions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsConnectionInfo
bool Mono::Unity::UnityTlsProvider::get_SupportsConnectionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_SupportsConnectionInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsCleanShutdown
bool Mono::Unity::UnityTlsProvider::get_SupportsCleanShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_SupportsCleanShutdown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportedProtocols
::System::Security::Authentication::SslProtocols Mono::Unity::UnityTlsProvider::get_SupportedProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_SupportedProtocols");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::SslProtocols, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.CreateSslStream
::Mono::Security::Interface::IMonoSslStream* Mono::Unity::UnityTlsProvider::CreateSslStream(::System::IO::Stream* innerStream, bool leaveInnerStreamOpen, ::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::CreateSslStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.CreateSslStreamInternal
::Mono::Security::Interface::IMonoSslStream* Mono::Unity::UnityTlsProvider::CreateSslStreamInternal(::System::Net::Security::SslStream* sslStream, ::System::IO::Stream* innerStream, bool leaveInnerStreamOpen, ::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::CreateSslStreamInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, sslStream, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.ValidateCertificate
bool Mono::Unity::UnityTlsProvider::ValidateCertificate(::Mono::Security::Interface::ICertificateValidator2* validator, ::StringW targetHost, bool serverMode, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates, bool wantsChain, ByRef<::System::Security::Cryptography::X509Certificates::X509Chain*> chain, ByRef<::Mono::Security::Interface::MonoSslPolicyErrors> errors, ByRef<int> status11) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, validator, targetHost, serverMode, certificates, wantsChain, byref(chain), byref(errors), byref(status11));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsStream
#include "Mono/Unity/UnityTlsStream.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsStream.CreateContext
::Mono::Net::Security::MobileTlsContext* Mono::Unity::UnityTlsStream::CreateContext(bool serverMode, ::StringW targetHost, ::System::Security::Authentication::SslProtocols enabledProtocols, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool askForClientCert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsStream::CreateContext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::MobileTlsContext*, false>(this, ___internal__method, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFObject
#include "Mono/Net/CFObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr <Handle>k__BackingField
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFObject::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::dyn_$Handle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFObject.dlopen
::System::IntPtr Mono::Net::CFObject::dlopen(::StringW path, int mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::dlopen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlopen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, mode);
}
// Autogenerated method: Mono.Net.CFObject.dlsym
::System::IntPtr Mono::Net::CFObject::dlsym(::System::IntPtr handle, ::StringW symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::dlsym");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlsym", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.dlclose
void Mono::Net::CFObject::dlclose(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::dlclose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlclose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.GetIndirect
::System::IntPtr Mono::Net::CFObject::GetIndirect(::System::IntPtr handle, ::StringW symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::GetIndirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "GetIndirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.GetCFObjectHandle
::System::IntPtr Mono::Net::CFObject::GetCFObjectHandle(::System::IntPtr handle, ::StringW symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::GetCFObjectHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "GetCFObjectHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.get_Handle
::System::IntPtr Mono::Net::CFObject::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::get_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFObject*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.set_Handle
void Mono::Net::CFObject::set_Handle(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::set_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.CFObject.CFRetain
::System::IntPtr Mono::Net::CFObject::CFRetain(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::CFRetain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "CFRetain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.Retain
void Mono::Net::CFObject::Retain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::Retain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Retain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.CFRelease
void Mono::Net::CFObject::CFRelease(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::CFRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "CFRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.Release
void Mono::Net::CFObject::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.Dispose
void Mono::Net::CFObject::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFObject*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.CFObject.Dispose
void Mono::Net::CFObject::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFObject*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.Finalize
void Mono::Net::CFObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFArray
#include "Mono/Net/CFArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr kCFTypeArrayCallbacks
::System::IntPtr Mono::Net::CFArray::_get_kCFTypeArrayCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::_get_kCFTypeArrayCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFArray", "kCFTypeArrayCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr kCFTypeArrayCallbacks
void Mono::Net::CFArray::_set_kCFTypeArrayCallbacks(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::_set_kCFTypeArrayCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFArray", "kCFTypeArrayCallbacks", value));
}
// Autogenerated method: Mono.Net.CFArray..cctor
void Mono::Net::CFArray::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFArray", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFArray.CFArrayGetCount
::System::IntPtr Mono::Net::CFArray::CFArrayGetCount(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::CFArrayGetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFArray", "CFArrayGetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFArray.get_Count
int Mono::Net::CFArray::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFArray.CFArrayGetValueAtIndex
::System::IntPtr Mono::Net::CFArray::CFArrayGetValueAtIndex(::System::IntPtr handle, ::System::IntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::CFArrayGetValueAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFArray", "CFArrayGetValueAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, index);
}
// Autogenerated method: Mono.Net.CFArray.get_Item
::System::IntPtr Mono::Net::CFArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNumber
#include "Mono/Net/CFNumber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNumber.CFNumberGetValue
bool Mono::Net::CFNumber::CFNumberGetValue(::System::IntPtr handle, ::System::IntPtr type, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNumber::CFNumberGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNumber", "CFNumberGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, type, byref(value));
}
// Autogenerated method: Mono.Net.CFNumber.AsInt32
int Mono::Net::CFNumber::AsInt32(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNumber::AsInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNumber", "AsInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFRange
#include "Mono/Net/CFRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr Location
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFRange::dyn_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRange::dyn_Location");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Location"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr Length
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFRange::dyn_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRange::dyn_Length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Length"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFRange..ctor
Mono::Net::CFRange::CFRange(int loc, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRange::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loc), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loc, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFString
#include "Mono/Net/CFString.hpp"
// Including type: Mono.Net.CFRange
#include "Mono/Net/CFRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String str
[[deprecated("Use field access instead!")]] ::StringW& Mono::Net::CFString::dyn_str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::dyn_str");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "str"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFString.CFStringCreateWithCharacters
::System::IntPtr Mono::Net::CFString::CFStringCreateWithCharacters(::System::IntPtr alloc, ::System::IntPtr chars, ::System::IntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::CFStringCreateWithCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringCreateWithCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alloc), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, alloc, chars, length);
}
// Autogenerated method: Mono.Net.CFString.Create
::Mono::Net::CFString* Mono::Net::CFString::Create(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFString*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetLength
::System::IntPtr Mono::Net::CFString::CFStringGetLength(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::CFStringGetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetCharactersPtr
::System::IntPtr Mono::Net::CFString::CFStringGetCharactersPtr(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::CFStringGetCharactersPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetCharactersPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetCharacters
::System::IntPtr Mono::Net::CFString::CFStringGetCharacters(::System::IntPtr handle, ::Mono::Net::CFRange range, ::System::IntPtr buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::CFStringGetCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(range), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, range, buffer);
}
// Autogenerated method: Mono.Net.CFString.AsString
::StringW Mono::Net::CFString::AsString(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::AsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "AsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.ToString
::StringW Mono::Net::CFString::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr KeyCallbacks
::System::IntPtr Mono::Net::CFDictionary::_get_KeyCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::_get_KeyCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFDictionary", "KeyCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr KeyCallbacks
void Mono::Net::CFDictionary::_set_KeyCallbacks(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::_set_KeyCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFDictionary", "KeyCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr ValueCallbacks
::System::IntPtr Mono::Net::CFDictionary::_get_ValueCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::_get_ValueCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFDictionary", "ValueCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr ValueCallbacks
void Mono::Net::CFDictionary::_set_ValueCallbacks(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::_set_ValueCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFDictionary", "ValueCallbacks", value));
}
// Autogenerated method: Mono.Net.CFDictionary..cctor
void Mono::Net::CFDictionary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFDictionary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFDictionary.CFDictionaryGetValue
::System::IntPtr Mono::Net::CFDictionary::CFDictionaryGetValue(::System::IntPtr handle, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::CFDictionaryGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFDictionary", "CFDictionaryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key);
}
// Autogenerated method: Mono.Net.CFDictionary.GetValue
::System::IntPtr Mono::Net::CFDictionary::GetValue(::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated method: Mono.Net.CFDictionary.get_Item
::System::IntPtr Mono::Net::CFDictionary::get_Item(::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFUrl
#include "Mono/Net/CFUrl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFUrl.CFURLCreateWithString
::System::IntPtr Mono::Net::CFUrl::CFURLCreateWithString(::System::IntPtr allocator, ::System::IntPtr str, ::System::IntPtr baseURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFUrl::CFURLCreateWithString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFUrl", "CFURLCreateWithString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allocator), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(baseURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allocator, str, baseURL);
}
// Autogenerated method: Mono.Net.CFUrl.Create
::Mono::Net::CFUrl* Mono::Net::CFUrl::Create(::StringW absolute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFUrl::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFUrl", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(absolute)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFUrl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, absolute);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFRunLoop
#include "Mono/Net/CFRunLoop.hpp"
// Including type: Mono.Net.CFString
#include "Mono/Net/CFString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopAddSource
void Mono::Net::CFRunLoop::CFRunLoopAddSource(::System::IntPtr rl, ::System::IntPtr source, ::System::IntPtr mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::CFRunLoopAddSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopAddSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rl), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rl, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopRemoveSource
void Mono::Net::CFRunLoop::CFRunLoopRemoveSource(::System::IntPtr rl, ::System::IntPtr source, ::System::IntPtr mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::CFRunLoopRemoveSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopRemoveSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rl), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rl, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopRunInMode
int Mono::Net::CFRunLoop::CFRunLoopRunInMode(::System::IntPtr mode, double seconds, bool returnAfterSourceHandled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::CFRunLoopRunInMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopRunInMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(returnAfterSourceHandled)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode, seconds, returnAfterSourceHandled);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopGetCurrent
::System::IntPtr Mono::Net::CFRunLoop::CFRunLoopGetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::CFRunLoopGetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopGetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopStop
void Mono::Net::CFRunLoop::CFRunLoopStop(::System::IntPtr rl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::CFRunLoopStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rl);
}
// Autogenerated method: Mono.Net.CFRunLoop.get_CurrentRunLoop
::Mono::Net::CFRunLoop* Mono::Net::CFRunLoop::get_CurrentRunLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::get_CurrentRunLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "get_CurrentRunLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFRunLoop*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFRunLoop.AddSource
void Mono::Net::CFRunLoop::AddSource(::System::IntPtr source, ::Mono::Net::CFString* mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::AddSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.RemoveSource
void Mono::Net::CFRunLoop::RemoveSource(::System::IntPtr source, ::Mono::Net::CFString* mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::RemoveSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.RunInMode
int Mono::Net::CFRunLoop::RunInMode(::Mono::Net::CFString* mode, double seconds, bool returnAfterSourceHandled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::RunInMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunInMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(returnAfterSourceHandled)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, mode, seconds, returnAfterSourceHandled);
}
// Autogenerated method: Mono.Net.CFRunLoop.Stop
void Mono::Net::CFRunLoop::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFProxyType
#include "Mono/Net/CFProxyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType None
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType None
void Mono::Net::CFProxyType::_set_None(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType AutoConfigurationUrl
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_AutoConfigurationUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_AutoConfigurationUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "AutoConfigurationUrl"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType AutoConfigurationUrl
void Mono::Net::CFProxyType::_set_AutoConfigurationUrl(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_AutoConfigurationUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "AutoConfigurationUrl", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType AutoConfigurationJavaScript
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_AutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_AutoConfigurationJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "AutoConfigurationJavaScript"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType AutoConfigurationJavaScript
void Mono::Net::CFProxyType::_set_AutoConfigurationJavaScript(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_AutoConfigurationJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "AutoConfigurationJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType FTP
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_FTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_FTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "FTP"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType FTP
void Mono::Net::CFProxyType::_set_FTP(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_FTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "FTP", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType HTTP
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_HTTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_HTTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "HTTP"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType HTTP
void Mono::Net::CFProxyType::_set_HTTP(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_HTTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "HTTP", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType HTTPS
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_HTTPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_HTTPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "HTTPS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType HTTPS
void Mono::Net::CFProxyType::_set_HTTPS(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_HTTPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "HTTPS", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType SOCKS
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_SOCKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_SOCKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "SOCKS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType SOCKS
void Mono::Net::CFProxyType::_set_SOCKS(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_SOCKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "SOCKS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Net::CFProxyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
// Including type: Mono.Net.CFProxyType
#include "Mono/Net/CFProxyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyAutoConfigurationJavaScriptKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationJavaScriptKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationJavaScriptKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationJavaScriptKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyAutoConfigurationJavaScriptKey
void Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationJavaScriptKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationJavaScriptKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationJavaScriptKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyAutoConfigurationURLKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationURLKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationURLKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationURLKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyAutoConfigurationURLKey
void Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationURLKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationURLKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationURLKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyHostNameKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyHostNameKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyHostNameKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyHostNameKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyHostNameKey
void Mono::Net::CFProxy::_set_kCFProxyHostNameKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyHostNameKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyHostNameKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyPasswordKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyPasswordKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyPasswordKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyPasswordKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyPasswordKey
void Mono::Net::CFProxy::_set_kCFProxyPasswordKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyPasswordKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyPasswordKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyPortNumberKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyPortNumberKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyPortNumberKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyPortNumberKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyPortNumberKey
void Mono::Net::CFProxy::_set_kCFProxyPortNumberKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyPortNumberKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyPortNumberKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeKey
void Mono::Net::CFProxy::_set_kCFProxyTypeKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyUsernameKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyUsernameKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyUsernameKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyUsernameKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyUsernameKey
void Mono::Net::CFProxy::_set_kCFProxyUsernameKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyUsernameKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyUsernameKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeAutoConfigurationURL
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationURL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationURL"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeAutoConfigurationURL
void Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationURL(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationURL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationURL", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeAutoConfigurationJavaScript
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationJavaScript"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeAutoConfigurationJavaScript
void Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationJavaScript(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeFTP
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeFTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeFTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeFTP"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeFTP
void Mono::Net::CFProxy::_set_kCFProxyTypeFTP(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeFTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeFTP", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeHTTP
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeHTTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeHTTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeHTTP"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeHTTP
void Mono::Net::CFProxy::_set_kCFProxyTypeHTTP(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeHTTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeHTTP", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeHTTPS
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeHTTPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeHTTPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeHTTPS"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeHTTPS
void Mono::Net::CFProxy::_set_kCFProxyTypeHTTPS(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeHTTPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeHTTPS", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeSOCKS
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeSOCKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeSOCKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeSOCKS"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeSOCKS
void Mono::Net::CFProxy::_set_kCFProxyTypeSOCKS(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeSOCKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeSOCKS", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.CFDictionary settings
[[deprecated("Use field access instead!")]] ::Mono::Net::CFDictionary*& Mono::Net::CFProxy::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Mono::Net::CFDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFProxy..cctor
void Mono::Net::CFProxy::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFProxy", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.CFProxyTypeToEnum
::Mono::Net::CFProxyType Mono::Net::CFProxy::CFProxyTypeToEnum(::System::IntPtr type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::CFProxyTypeToEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFProxy", "CFProxyTypeToEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFProxyType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Mono.Net.CFProxy.get_AutoConfigurationJavaScript
::System::IntPtr Mono::Net::CFProxy::get_AutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_AutoConfigurationJavaScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoConfigurationJavaScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_AutoConfigurationUrl
::System::IntPtr Mono::Net::CFProxy::get_AutoConfigurationUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_AutoConfigurationUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoConfigurationUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_HostName
::StringW Mono::Net::CFProxy::get_HostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_HostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Password
::StringW Mono::Net::CFProxy::get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Port
int Mono::Net::CFProxy::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_ProxyType
::Mono::Net::CFProxyType Mono::Net::CFProxy::get_ProxyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_ProxyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProxyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFProxyType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Username
::StringW Mono::Net::CFProxy::get_Username() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_Username");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Username", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFProxySettings
#include "Mono/Net/CFProxySettings.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPEnable
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPEnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPEnable"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPEnable
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPEnable(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPEnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPEnable", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPPort
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPPort"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPPort
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPPort(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPPort", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPProxy
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPProxy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPProxy"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPProxy
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPProxy(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPProxy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPProxy", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigEnable
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigEnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigEnable"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigEnable
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigEnable(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigEnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigEnable", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigJavaScript
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigJavaScript"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigJavaScript
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigJavaScript(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigURLString
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigURLString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigURLString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigURLString"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigURLString
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigURLString(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigURLString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigURLString", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.CFDictionary settings
[[deprecated("Use field access instead!")]] ::Mono::Net::CFDictionary*& Mono::Net::CFProxySettings::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Mono::Net::CFDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFProxySettings..cctor
void Mono::Net::CFProxySettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFProxySettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxySettings.get_Dictionary
::Mono::Net::CFDictionary* Mono::Net::CFProxySettings::get_Dictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::get_Dictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFDictionary*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFNetwork
#include "Mono/Net/CFNetwork.hpp"
// Including type: Mono.Net.CFNetwork/GetProxyData
#include "Mono/Net/CFNetwork_GetProxyData.hpp"
// Including type: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback
#include "Mono/Net/CFNetwork_CFProxyAutoConfigurationResultCallback.hpp"
// Including type: Mono.Net.CFNetwork/CFWebProxy
#include "Mono/Net/CFNetwork_CFWebProxy.hpp"
// Including type: Mono.Net.CFNetwork/<>c__DisplayClass13_0
#include "Mono/Net/CFNetwork_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.Net.CFStreamClientContext
#include "Mono/Net/CFStreamClientContext.hpp"
// Including type: Mono.Net.CFArray
#include "Mono/Net/CFArray.hpp"
// Including type: Mono.Net.CFUrl
#include "Mono/Net/CFUrl.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
// Including type: Mono.Net.CFProxySettings
#include "Mono/Net/CFProxySettings.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object lock_obj
::Il2CppObject* Mono::Net::CFNetwork::_get_lock_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_get_lock_obj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Net", "CFNetwork", "lock_obj"));
}
// Autogenerated static field setter
// Set static field: static private System.Object lock_obj
void Mono::Net::CFNetwork::_set_lock_obj(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_set_lock_obj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "lock_obj", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Queue`1<Mono.Net.CFNetwork/GetProxyData> get_proxy_queue
::System::Collections::Generic::Queue_1<::Mono::Net::CFNetwork::GetProxyData*>* Mono::Net::CFNetwork::_get_get_proxy_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_get_get_proxy_queue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Queue_1<::Mono::Net::CFNetwork::GetProxyData*>*>("Mono.Net", "CFNetwork", "get_proxy_queue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Queue`1<Mono.Net.CFNetwork/GetProxyData> get_proxy_queue
void Mono::Net::CFNetwork::_set_get_proxy_queue(::System::Collections::Generic::Queue_1<::Mono::Net::CFNetwork::GetProxyData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_set_get_proxy_queue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "get_proxy_queue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.AutoResetEvent proxy_event
::System::Threading::AutoResetEvent* Mono::Net::CFNetwork::_get_proxy_event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_get_proxy_event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::AutoResetEvent*>("Mono.Net", "CFNetwork", "proxy_event"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.AutoResetEvent proxy_event
void Mono::Net::CFNetwork::_set_proxy_event(::System::Threading::AutoResetEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_set_proxy_event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "proxy_event", value));
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScriptSequential
::System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptSequential(::System::IntPtr proxyAutoConfigurationScript, ::System::IntPtr targetURL, ByRef<::System::IntPtr> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptSequential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScriptSequential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL, byref(error));
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkExecuteProxyAutoConfigurationURL
::System::IntPtr Mono::Net::CFNetwork::CFNetworkExecuteProxyAutoConfigurationURL(::System::IntPtr proxyAutoConfigURL, ::System::IntPtr targetURL, ::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback* cb, ByRef<::Mono::Net::CFStreamClientContext> clientContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigURL), ::il2cpp_utils::ExtractType(targetURL), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(clientContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigURL, targetURL, cb, byref(clientContext));
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScriptThread
void Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScriptThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScript
::System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScript(::System::IntPtr proxyAutoConfigurationScript, ::System::IntPtr targetURL, ByRef<::System::IntPtr> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL, byref(error));
}
// Autogenerated method: Mono.Net.CFNetwork.CopyProxiesForAutoConfigurationScript
::Mono::Net::CFArray* Mono::Net::CFNetwork::CopyProxiesForAutoConfigurationScript(::System::IntPtr proxyAutoConfigurationScript, ::Mono::Net::CFUrl* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CopyProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CopyProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFArray*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForAutoConfigurationScript
::ArrayW<::Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript(::System::IntPtr proxyAutoConfigurationScript, ::Mono::Net::CFUrl* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForAutoConfigurationScript
::ArrayW<::Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript(::System::IntPtr proxyAutoConfigurationScript, ::System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetUri);
}
// Autogenerated method: Mono.Net.CFNetwork.ExecuteProxyAutoConfigurationURL
::ArrayW<::Mono::Net::CFProxy*> Mono::Net::CFNetwork::ExecuteProxyAutoConfigurationURL(::System::IntPtr proxyAutoConfigURL, ::System::Uri* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::ExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "ExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigURL), ::il2cpp_utils::ExtractType(targetURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigURL, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForURL
::System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForURL(::System::IntPtr url, ::System::IntPtr proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkCopyProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.CopyProxiesForURL
::Mono::Net::CFArray* Mono::Net::CFNetwork::CopyProxiesForURL(::Mono::Net::CFUrl* url, ::Mono::Net::CFDictionary* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CopyProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CopyProxiesForURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFArray*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForURL
::ArrayW<::Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForURL(::Mono::Net::CFUrl* url, ::Mono::Net::CFProxySettings* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForUri
::ArrayW<::Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForUri(::System::Uri* uri, ::Mono::Net::CFProxySettings* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxiesForUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopySystemProxySettings
::System::IntPtr Mono::Net::CFNetwork::CFNetworkCopySystemProxySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkCopySystemProxySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopySystemProxySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.GetSystemProxySettings
::Mono::Net::CFProxySettings* Mono::Net::CFNetwork::GetSystemProxySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetSystemProxySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetSystemProxySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFProxySettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.GetDefaultProxy
::System::Net::IWebProxy* Mono::Net::CFNetwork::GetDefaultProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetDefaultProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetDefaultProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork..cctor
void Mono::Net::CFNetwork::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNetwork/GetProxyData
#include "Mono/Net/CFNetwork_GetProxyData.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr script
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_script() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::dyn_script");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "script"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr targetUri
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_targetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::dyn_targetUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetUri"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr error
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr result
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.ManualResetEvent evt
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Mono::Net::CFNetwork::GetProxyData::dyn_evt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::dyn_evt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "evt"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFNetwork/GetProxyData.Dispose
void Mono::Net::CFNetwork::GetProxyData::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::GetProxyData*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback
#include "Mono/Net/CFNetwork_CFProxyAutoConfigurationResultCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback.Invoke
void Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::Invoke(::System::IntPtr client, ::System::IntPtr proxyList, ::System::IntPtr error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, proxyList, error);
}
// Autogenerated method: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback.BeginInvoke
::System::IAsyncResult* Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::BeginInvoke(::System::IntPtr client, ::System::IntPtr proxyList, ::System::IntPtr error, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, client, proxyList, error, callback, object);
}
// Autogenerated method: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback.EndInvoke
void Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNetwork/CFWebProxy
#include "Mono/Net/CFNetwork_CFWebProxy.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: System.Net.NetworkCredential
#include "System/Net/NetworkCredential.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& Mono::Net::CFNetwork::CFWebProxy::dyn_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::dyn_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean userSpecified
[[deprecated("Use field access instead!")]] bool& Mono::Net::CFNetwork::CFWebProxy::dyn_userSpecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::dyn_userSpecified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userSpecified"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.get_Credentials
::System::Net::ICredentials* Mono::Net::CFNetwork::CFWebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFWebProxy*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.GetProxyUri
::System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxyUri(::Mono::Net::CFProxy* proxy, ByRef<::System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::GetProxyUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "GetProxyUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractIndependentType<::System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxy, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.GetProxyUriFromScript
::System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxyUriFromScript(::System::IntPtr script, ::System::Uri* targetUri, ByRef<::System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::GetProxyUriFromScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "GetProxyUriFromScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(script), ::il2cpp_utils::ExtractType(targetUri), ::il2cpp_utils::ExtractIndependentType<::System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, script, targetUri, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.ExecuteProxyAutoConfigurationURL
::System::Uri* Mono::Net::CFNetwork::CFWebProxy::ExecuteProxyAutoConfigurationURL(::System::IntPtr proxyAutoConfigURL, ::System::Uri* targetUri, ByRef<::System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::ExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "ExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigURL), ::il2cpp_utils::ExtractType(targetUri), ::il2cpp_utils::ExtractIndependentType<::System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigURL, targetUri, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.SelectProxy
::System::Uri* Mono::Net::CFNetwork::CFWebProxy::SelectProxy(::ArrayW<::Mono::Net::CFProxy*> proxies, ::System::Uri* targetUri, ByRef<::System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::SelectProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "SelectProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxies), ::il2cpp_utils::ExtractType(targetUri), ::il2cpp_utils::ExtractIndependentType<::System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxies, targetUri, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.GetProxy
::System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxy(::System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFWebProxy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, targetUri);
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.IsBypassed
bool Mono::Net::CFNetwork::CFWebProxy::IsBypassed(::System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFWebProxy*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNetwork/<>c__DisplayClass13_0
#include "Mono/Net/CFNetwork_--c__DisplayClass13_0.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: Mono.Net.CFRunLoop
#include "Mono/Net/CFRunLoop.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Net.CFProxy[] proxies
[[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Net::CFProxy*>& Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_proxies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_proxies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxies"))->offset;
  return *reinterpret_cast<::ArrayW<::Mono::Net::CFProxy*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.CFRunLoop runLoop
[[deprecated("Use field access instead!")]] ::Mono::Net::CFRunLoop*& Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_runLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_runLoop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runLoop"))->offset;
  return *reinterpret_cast<::Mono::Net::CFRunLoop**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFNetwork/<>c__DisplayClass13_0.<ExecuteProxyAutoConfigurationURL>b__0
void Mono::Net::CFNetwork::$$c__DisplayClass13_0::$ExecuteProxyAutoConfigurationURL$b__0(::System::IntPtr client, ::System::IntPtr proxyList, ::System::IntPtr error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::$$c__DisplayClass13_0::<ExecuteProxyAutoConfigurationURL>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ExecuteProxyAutoConfigurationURL>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(proxyList), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, proxyList, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] Buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Net::Security::BufferOffsetSize::dyn_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::dyn_Buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Offset
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::BufferOffsetSize::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Size
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::BufferOffsetSize::dyn_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::dyn_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 TotalBytes
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::BufferOffsetSize::dyn_TotalBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::dyn_TotalBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Complete
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::BufferOffsetSize::dyn_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::dyn_Complete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Complete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.get_EndOffset
int Mono::Net::Security::BufferOffsetSize::get_EndOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::get_EndOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.get_Remaining
int Mono::Net::Security::BufferOffsetSize::get_Remaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::get_Remaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Remaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.ToString
::StringW Mono::Net::Security::BufferOffsetSize::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.BufferOffsetSize2
#include "Mono/Net/Security/BufferOffsetSize2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 InitialSize
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::BufferOffsetSize2::dyn_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize2::dyn_InitialSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitialSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.Reset
void Mono::Net::Security::BufferOffsetSize2::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize2::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.MakeRoom
void Mono::Net::Security::BufferOffsetSize2::MakeRoom(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize2::MakeRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.AppendData
void Mono::Net::Security::BufferOffsetSize2::AppendData(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize2::AppendData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Initialize
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_get_Initialize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Initialize"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Initialize
void Mono::Net::Security::AsyncOperationStatus::_set_Initialize(::Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_set_Initialize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Initialize", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Continue
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_get_Continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Continue"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Continue
void Mono::Net::Security::AsyncOperationStatus::_set_Continue(::Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_set_Continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Continue", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus ReadDone
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_ReadDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_get_ReadDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "ReadDone"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus ReadDone
void Mono::Net::Security::AsyncOperationStatus::_set_ReadDone(::Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_set_ReadDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "ReadDone", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Complete
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_get_Complete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Complete"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Complete
void Mono::Net::Security::AsyncOperationStatus::_set_Complete(::Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_set_Complete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Complete", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncOperationStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <UserResult>k__BackingField
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolResult::dyn_$UserResult$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolResult::dyn_$UserResult$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserResult>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Runtime.ExceptionServices.ExceptionDispatchInfo <Error>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Runtime::ExceptionServices::ExceptionDispatchInfo*& Mono::Net::Security::AsyncProtocolResult::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolResult::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolResult.get_UserResult
int Mono::Net::Security::AsyncProtocolResult::get_UserResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolResult::get_UserResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolResult.get_Error
::System::Runtime::ExceptionServices::ExceptionDispatchInfo* Mono::Net::Security::AsyncProtocolResult::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolResult::get_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/<StartOperation>d__23
#include "Mono/Net/Security/AsyncProtocolRequest_-StartOperation-d__23.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/<ProcessOperation>d__24
#include "Mono/Net/Security/AsyncProtocolRequest_-ProcessOperation-d__24.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/<InnerRead>d__25
#include "Mono/Net/Security/AsyncProtocolRequest_-InnerRead-d__25.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.MobileAuthenticatedStream <Parent>k__BackingField
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::AsyncProtocolRequest::dyn_$Parent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_$Parent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parent>k__BackingField"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <RunSynchronously>k__BackingField
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::AsyncProtocolRequest::dyn_$RunSynchronously$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_$RunSynchronously$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RunSynchronously>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <UserResult>k__BackingField
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::dyn_$UserResult$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_$UserResult$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserResult>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 Started
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::dyn_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_Started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Started"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 RequestedSize
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::dyn_RequestedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_RequestedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestedSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 WriteRequested
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::dyn_WriteRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_WriteRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WriteRequested"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object locker
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Net::Security::AsyncProtocolRequest::dyn_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_locker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locker"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_Parent
::Mono::Net::Security::MobileAuthenticatedStream* Mono::Net::Security::AsyncProtocolRequest::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::MobileAuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_RunSynchronously
bool Mono::Net::Security::AsyncProtocolRequest::get_RunSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::get_RunSynchronously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RunSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_Name
::StringW Mono::Net::Security::AsyncProtocolRequest::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_UserResult
int Mono::Net::Security::AsyncProtocolRequest::get_UserResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::get_UserResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.set_UserResult
void Mono::Net::Security::AsyncProtocolRequest::set_UserResult(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::set_UserResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.RequestRead
void Mono::Net::Security::AsyncProtocolRequest::RequestRead(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::RequestRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.RequestWrite
void Mono::Net::Security::AsyncProtocolRequest::RequestWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::RequestWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.StartOperation
::System::Threading::Tasks::Task_1<::Mono::Net::Security::AsyncProtocolResult*>* Mono::Net::Security::AsyncProtocolRequest::StartOperation(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::StartOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Mono::Net::Security::AsyncProtocolResult*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.ProcessOperation
::System::Threading::Tasks::Task* Mono::Net::Security::AsyncProtocolRequest::ProcessOperation(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::ProcessOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.InnerRead
::System::Threading::Tasks::Task_1<::System::Nullable_1<int>>* Mono::Net::Security::AsyncProtocolRequest::InnerRead(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::InnerRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Nullable_1<int>>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.Run
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncProtocolRequest::Run(::Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::Run");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::AsyncProtocolRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.ToString
::StringW Mono::Net::Security::AsyncProtocolRequest::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/<StartOperation>d__23
#include "Mono/Net/Security/AsyncProtocolRequest_-StartOperation-d__23.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<Mono.Net.Security.AsyncProtocolResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Mono::Net::Security::AsyncProtocolResult*>& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Mono::Net::Security::AsyncProtocolResult*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<StartOperation>d__23.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<StartOperation>d__23.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/<ProcessOperation>d__24
#include "Mono/Net/Security/AsyncProtocolRequest_-ProcessOperation-d__24.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncOperationStatus <status>5__1
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncOperationStatus& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$status$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$status$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<status>5__1"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncOperationStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncOperationStatus <newStatus>5__2
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncOperationStatus& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$newStatus$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$newStatus$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<newStatus>5__2"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncOperationStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.Nullable`1<System.Int32>> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Nullable_1<int>>::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Nullable_1<int>>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<ProcessOperation>d__24.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<ProcessOperation>d__24.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/<InnerRead>d__25
#include "Mono/Net/Security/AsyncProtocolRequest_-InnerRead-d__25.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Nullable`1<System.Int32>> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Nullable_1<int>>& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Nullable_1<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <requestedSize>5__1
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$requestedSize$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$requestedSize$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<requestedSize>5__1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> <totalRead>5__2
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$totalRead$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$totalRead$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalRead>5__2"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.Int32> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<InnerRead>d__25.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<InnerRead>d__25.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncHandshakeRequest
#include "Mono/Net/Security/AsyncHandshakeRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncHandshakeRequest.Run
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncHandshakeRequest::Run(::Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncHandshakeRequest::Run");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::AsyncProtocolRequest*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncReadOrWriteRequest
#include "Mono/Net/Security/AsyncReadOrWriteRequest.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.BufferOffsetSize <UserBuffer>k__BackingField
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::BufferOffsetSize*& Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$UserBuffer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$UserBuffer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserBuffer>k__BackingField"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::BufferOffsetSize**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <CurrentSize>k__BackingField
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$CurrentSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$CurrentSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentSize>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.get_UserBuffer
::Mono::Net::Security::BufferOffsetSize* Mono::Net::Security::AsyncReadOrWriteRequest::get_UserBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::get_UserBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::BufferOffsetSize*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.get_CurrentSize
int Mono::Net::Security::AsyncReadOrWriteRequest::get_CurrentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::get_CurrentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.set_CurrentSize
void Mono::Net::Security::AsyncReadOrWriteRequest::set_CurrentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::set_CurrentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.ToString
::StringW Mono::Net::Security::AsyncReadOrWriteRequest::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::AsyncProtocolRequest*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncReadRequest
#include "Mono/Net/Security/AsyncReadRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncReadRequest.Run
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncReadRequest::Run(::Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadRequest::Run");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::AsyncProtocolRequest*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncWriteRequest
#include "Mono/Net/Security/AsyncWriteRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncWriteRequest.Run
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncWriteRequest::Run(::Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncWriteRequest::Run");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::AsyncProtocolRequest*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.ServerCertValidationCallbackWrapper
#include "Mono/Net/Security/ServerCertValidationCallbackWrapper.hpp"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.Invoke
bool Mono::Net::Security::ServerCertValidationCallbackWrapper::Invoke(::System::Net::ServerCertValidationCallback* callback, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ServerCertValidationCallbackWrapper::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ServerCertValidationCallbackWrapper*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, callback, certificate, chain, sslPolicyErrors);
}
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.BeginInvoke
::System::IAsyncResult* Mono::Net::Security::ServerCertValidationCallbackWrapper::BeginInvoke(::System::Net::ServerCertValidationCallback* callback, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors, ::System::AsyncCallback* __callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ServerCertValidationCallbackWrapper::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ServerCertValidationCallbackWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, certificate, chain, sslPolicyErrors, __callback, object);
}
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.EndInvoke
bool Mono::Net::Security::ServerCertValidationCallbackWrapper::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ServerCertValidationCallbackWrapper::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ServerCertValidationCallbackWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.ChainValidationHelper
#include "Mono/Net/Security/ChainValidationHelper.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: Mono.Net.Security.ServerCertValidationCallbackWrapper
#include "Mono/Net/Security/ServerCertValidationCallbackWrapper.hpp"
// Including type: Mono.Net.Security.MonoTlsStream
#include "Mono/Net/Security/MonoTlsStream.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ValidationResult
#include "Mono/Security/Interface/ValidationResult.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object sender
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Net::Security::ChainValidationHelper::dyn_sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_sender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sender"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsSettings settings
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsSettings*& Mono::Net::Security::ChainValidationHelper::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsProvider provider
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsProvider*& Mono::Net::Security::ChainValidationHelper::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.ServerCertValidationCallback certValidationCallback
[[deprecated("Use field access instead!")]] ::System::Net::ServerCertValidationCallback*& Mono::Net::Security::ChainValidationHelper::dyn_certValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_certValidationCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certValidationCallback"))->offset;
  return *reinterpret_cast<::System::Net::ServerCertValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Security.LocalCertSelectionCallback certSelectionCallback
[[deprecated("Use field access instead!")]] ::System::Net::Security::LocalCertSelectionCallback*& Mono::Net::Security::ChainValidationHelper::dyn_certSelectionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_certSelectionCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certSelectionCallback"))->offset;
  return *reinterpret_cast<::System::Net::Security::LocalCertSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.ServerCertValidationCallbackWrapper callbackWrapper
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::ServerCertValidationCallbackWrapper*& Mono::Net::Security::ChainValidationHelper::dyn_callbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_callbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackWrapper"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::ServerCertValidationCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.MonoTlsStream tlsStream
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MonoTlsStream*& Mono::Net::Security::ChainValidationHelper::dyn_tlsStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_tlsStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tlsStream"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MonoTlsStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.HttpWebRequest request
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest*& Mono::Net::Security::ChainValidationHelper::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.GetInternalValidator
::Mono::Security::Interface::ICertificateValidator* Mono::Net::Security::ChainValidationHelper::GetInternalValidator(::Mono::Security::Interface::MonoTlsProvider* provider, ::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::GetInternalValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "GetInternalValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ICertificateValidator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, settings);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.Create
::Mono::Net::Security::ChainValidationHelper* Mono::Net::Security::ChainValidationHelper::Create(::Mono::Security::Interface::MonoTlsProvider* provider, ByRef<::Mono::Security::Interface::MonoTlsSettings*> settings, ::Mono::Net::Security::MonoTlsStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::ChainValidationHelper*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, byref(settings), stream);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.DefaultSelectionCallback
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::ChainValidationHelper::DefaultSelectionCallback(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::DefaultSelectionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "DefaultSelectionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.get_Settings
::Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::ChainValidationHelper::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::get_Settings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ChainValidationHelper*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.SelectClientCertificate
bool Mono::Net::Security::ChainValidationHelper::SelectClientCertificate(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers, ByRef<::System::Security::Cryptography::X509Certificates::X509Certificate*> clientCertificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::SelectClientCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ChainValidationHelper*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers, byref(clientCertificate));
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateCertificate
::Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateCertificate(::StringW host, bool serverMode, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ChainValidationHelper*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, serverMode, certs);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateCertificate
::Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateCertificate(::StringW host, bool serverMode, ::System::Security::Cryptography::X509Certificates::X509Certificate* leaf, ::System::Security::Cryptography::X509Certificates::X509Chain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ChainValidationHelper*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, serverMode, leaf, chain);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateChain
::Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateChain(::StringW host, bool server, ::System::Security::Cryptography::X509Certificates::X509Certificate* leaf, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs, ::System::Net::Security::SslPolicyErrors errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::ValidateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(leaf), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(certs), ::il2cpp_utils::ExtractType(errors)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, server, leaf, chain, certs, errors);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateChain
::Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateChain_(::StringW host, bool server, ::System::Security::Cryptography::X509Certificates::X509Certificate* leaf, ByRef<::System::Security::Cryptography::X509Certificates::X509Chain*> chain, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs, ::System::Net::Security::SslPolicyErrors errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::ValidateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(leaf), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(certs), ::il2cpp_utils::ExtractType(errors)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, server, leaf, byref(chain), certs, errors);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/OperationType
#include "Mono/Net/Security/MobileAuthenticatedStream_OperationType.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<ProcessAuthentication>d__47
#include "Mono/Net/Security/MobileAuthenticatedStream_-ProcessAuthentication-d__47.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<StartOperation>d__58
#include "Mono/Net/Security/MobileAuthenticatedStream_-StartOperation-d__58.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<>c__DisplayClass66_0
#include "Mono/Net/Security/MobileAuthenticatedStream_--c__DisplayClass66_0.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<InnerRead>d__66
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerRead-d__66.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<InnerWrite>d__67
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerWrite-d__67.hpp"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize2
#include "Mono/Net/Security/BufferOffsetSize2.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 uniqueNameInteger
int Mono::Net::Security::MobileAuthenticatedStream::_get_uniqueNameInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::_get_uniqueNameInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Net.Security", "MobileAuthenticatedStream", "uniqueNameInteger"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 uniqueNameInteger
void Mono::Net::Security::MobileAuthenticatedStream::_set_uniqueNameInteger(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::_set_uniqueNameInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream", "uniqueNameInteger", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 nextId
int Mono::Net::Security::MobileAuthenticatedStream::_get_nextId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::_get_nextId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Net.Security", "MobileAuthenticatedStream", "nextId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 nextId
void Mono::Net::Security::MobileAuthenticatedStream::_set_nextId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::_set_nextId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream", "nextId", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.MobileTlsContext xobileTlsContext
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileTlsContext*& Mono::Net::Security::MobileAuthenticatedStream::dyn_xobileTlsContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_xobileTlsContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xobileTlsContext"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileTlsContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.ExceptionServices.ExceptionDispatchInfo lastException
[[deprecated("Use field access instead!")]] ::System::Runtime::ExceptionServices::ExceptionDispatchInfo*& Mono::Net::Security::MobileAuthenticatedStream::dyn_lastException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_lastException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastException"))->offset;
  return *reinterpret_cast<::System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncProtocolRequest asyncHandshakeRequest
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncHandshakeRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncHandshakeRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncHandshakeRequest"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncProtocolRequest asyncReadRequest
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncReadRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncReadRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncReadRequest"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncProtocolRequest asyncWriteRequest
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncWriteRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncWriteRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncWriteRequest"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.BufferOffsetSize2 readBuffer
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::BufferOffsetSize2*& Mono::Net::Security::MobileAuthenticatedStream::dyn_readBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_readBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readBuffer"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::BufferOffsetSize2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.BufferOffsetSize2 writeBuffer
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::BufferOffsetSize2*& Mono::Net::Security::MobileAuthenticatedStream::dyn_writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_writeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeBuffer"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::BufferOffsetSize2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object ioLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Net::Security::MobileAuthenticatedStream::dyn_ioLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_ioLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ioLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 closeRequested
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::dyn_closeRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_closeRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeRequested"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean shutdown
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::dyn_shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_shutdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shutdown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Security.SslStream <SslStream>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Security::SslStream*& Mono::Net::Security::MobileAuthenticatedStream::dyn_$SslStream$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_$SslStream$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SslStream>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Security::SslStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsSettings <Settings>k__BackingField
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsSettings*& Mono::Net::Security::MobileAuthenticatedStream::dyn_$Settings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_$Settings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Settings>k__BackingField"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsProvider <Provider>k__BackingField
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsProvider*& Mono::Net::Security::MobileAuthenticatedStream::dyn_$Provider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_$Provider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Provider>k__BackingField"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 ID
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Settings
::Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::MobileAuthenticatedStream::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Provider
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MobileAuthenticatedStream::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_Provider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.CheckThrow
void Mono::Net::Security::MobileAuthenticatedStream::CheckThrow(bool authSuccessCheck, bool shutdownCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::CheckThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(authSuccessCheck), ::il2cpp_utils::ExtractType(shutdownCheck)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, authSuccessCheck, shutdownCheck);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.GetSSPIException
::System::Exception* Mono::Net::Security::MobileAuthenticatedStream::GetSSPIException(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::GetSSPIException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", "GetSSPIException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.GetIOException
::System::Exception* Mono::Net::Security::MobileAuthenticatedStream::GetIOException(::System::Exception* e, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::GetIOException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", "GetIOException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, message);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.SetException
::System::Runtime::ExceptionServices::ExceptionDispatchInfo* Mono::Net::Security::MobileAuthenticatedStream::SetException(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::SetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method, e);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.AuthenticateAsClient
void Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsClient(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsClient");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_AuthenticatedStream
::System::Net::Security::AuthenticatedStream* Mono::Net::Security::MobileAuthenticatedStream::get_AuthenticatedStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_AuthenticatedStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::AuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessAuthentication
::System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::ProcessAuthentication(bool runSynchronously, bool serverMode, ::StringW targetHost, ::System::Security::Authentication::SslProtocols enabledProtocols, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool clientCertRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::ProcessAuthentication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAuthentication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runSynchronously), ::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(enabledProtocols), ::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(clientCertificates), ::il2cpp_utils::ExtractType(clientCertRequired)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, runSynchronously, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, clientCertRequired);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.CreateContext
::Mono::Net::Security::MobileTlsContext* Mono::Net::Security::MobileAuthenticatedStream::CreateContext(bool serverMode, ::StringW targetHost, ::System::Security::Authentication::SslProtocols enabledProtocols, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool askForClientCert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::CreateContext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::MobileTlsContext*, false>(this, ___internal__method, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.StartOperation
::System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::StartOperation(::Mono::Net::Security::MobileAuthenticatedStream::OperationType type, ::Mono::Net::Security::AsyncProtocolRequest* asyncRequest, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::StartOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, type, asyncRequest, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalRead
int Mono::Net::Security::MobileAuthenticatedStream::InternalRead(::ArrayW<uint8_t> buffer, int offset, int size, ByRef<bool> outWantMore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InternalRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, size, byref(outWantMore));
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalRead
::System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::InternalRead(::Mono::Net::Security::AsyncProtocolRequest* asyncRequest, ::Mono::Net::Security::BufferOffsetSize* internalBuffer, ::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InternalRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(internalBuffer), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, asyncRequest, internalBuffer, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalWrite
bool Mono::Net::Security::MobileAuthenticatedStream::InternalWrite(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InternalWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalWrite
bool Mono::Net::Security::MobileAuthenticatedStream::InternalWrite(::Mono::Net::Security::AsyncProtocolRequest* asyncRequest, ::Mono::Net::Security::BufferOffsetSize2* internalBuffer, ::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InternalWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(internalBuffer), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, asyncRequest, internalBuffer, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InnerRead
::System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::InnerRead(bool sync, int requestedSize, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InnerRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sync), ::il2cpp_utils::ExtractType(requestedSize), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, sync, requestedSize, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InnerWrite
::System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::InnerWrite(bool sync, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InnerWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sync), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, sync, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessHandshake
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::MobileAuthenticatedStream::ProcessHandshake(::Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::ProcessHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessRead
::System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::ProcessRead(::Mono::Net::Security::BufferOffsetSize* userBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::ProcessRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, userBuffer);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessWrite
::System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::ProcessWrite(::Mono::Net::Security::BufferOffsetSize* userBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::ProcessWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, userBuffer);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_InternalLocalCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileAuthenticatedStream::get_InternalLocalCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_InternalLocalCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream..cctor
void Mono::Net::Security::MobileAuthenticatedStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.<InnerWrite>b__67_0
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$b__67_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::<InnerWrite>b__67_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InnerWrite>b__67_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.BeginRead
::System::IAsyncResult* Mono::Net::Security::MobileAuthenticatedStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.EndRead
int Mono::Net::Security::MobileAuthenticatedStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.BeginWrite
::System::IAsyncResult* Mono::Net::Security::MobileAuthenticatedStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.EndWrite
void Mono::Net::Security::MobileAuthenticatedStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Read
int Mono::Net::Security::MobileAuthenticatedStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Write
void Mono::Net::Security::MobileAuthenticatedStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.WriteAsync
::System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_IsAuthenticated
bool Mono::Net::Security::MobileAuthenticatedStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::AuthenticatedStream*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Dispose
void Mono::Net::Security::MobileAuthenticatedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::AuthenticatedStream*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Flush
void Mono::Net::Security::MobileAuthenticatedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Seek
int64_t Mono::Net::Security::MobileAuthenticatedStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.SetLength
void Mono::Net::Security::MobileAuthenticatedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanRead
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanWrite
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanSeek
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Length
int64_t Mono::Net::Security::MobileAuthenticatedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Position
int64_t Mono::Net::Security::MobileAuthenticatedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.set_Position
void Mono::Net::Security::MobileAuthenticatedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_ReadTimeout
int Mono::Net::Security::MobileAuthenticatedStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_WriteTimeout
int Mono::Net::Security::MobileAuthenticatedStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/OperationType
#include "Mono/Net/Security/MobileAuthenticatedStream_OperationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Read
::Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Read"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Read
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Read(::Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Write
::Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Write"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Write
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Write(::Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Shutdown
::Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Shutdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Shutdown"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Shutdown
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Shutdown(::Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Shutdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Shutdown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::OperationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<ProcessAuthentication>d__47
#include "Mono/Net/Security/MobileAuthenticatedStream_-ProcessAuthentication-d__47.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean serverMode
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverCertificate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverCertificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String targetHost
[[deprecated("Use field access instead!")]] ::StringW& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_targetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_targetHost");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean runSynchronously
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_runSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_runSynchronously");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runSynchronously"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Authentication.SslProtocols enabledProtocols
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::SslProtocols& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_enabledProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_enabledProtocols");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledProtocols"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::SslProtocols*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertificates");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertificates"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean clientCertRequired
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertRequired");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<Mono.Net.Security.AsyncProtocolResult> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<ProcessAuthentication>d__47.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<ProcessAuthentication>d__47.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<StartOperation>d__58
#include "Mono/Net/Security/MobileAuthenticatedStream_-StartOperation-d__58.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream/OperationType type
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream::OperationType& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream::OperationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest asyncRequest
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_asyncRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_asyncRequest");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncRequest"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<Mono.Net.Security.AsyncProtocolResult> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<StartOperation>d__58.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<StartOperation>d__58.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<>c__DisplayClass66_0
#include "Mono/Net/Security/MobileAuthenticatedStream_--c__DisplayClass66_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 len
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<>c__DisplayClass66_0.<InnerRead>b__0
int Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::$InnerRead$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::<InnerRead>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InnerRead>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<InnerRead>d__66
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerRead-d__66.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 requestedSize
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_requestedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_requestedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sync
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_sync");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter<System.Int32> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<InnerRead>d__66.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<InnerRead>d__66.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<InnerWrite>d__67
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerWrite-d__67.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sync
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_sync");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<InnerWrite>d__67.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<InnerWrite>d__67.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.MobileAuthenticatedStream parent
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileTlsContext::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean serverMode
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileTlsContext::dyn_serverMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_serverMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String targetHost
[[deprecated("Use field access instead!")]] ::StringW& Mono::Net::Security::MobileTlsContext::dyn_targetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_targetHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String serverName
[[deprecated("Use field access instead!")]] ::StringW& Mono::Net::Security::MobileTlsContext::dyn_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_serverName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.SslProtocols enabledProtocols
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::SslProtocols& Mono::Net::Security::MobileTlsContext::dyn_enabledProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_enabledProtocols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledProtocols"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::SslProtocols*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Net::Security::MobileTlsContext::dyn_serverCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_serverCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverCertificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& Mono::Net::Security::MobileTlsContext::dyn_clientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_clientCertificates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertificates"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean askForClientCert
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileTlsContext::dyn_askForClientCert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_askForClientCert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "askForClientCert"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.ICertificateValidator2 certificateValidator
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::ICertificateValidator2*& Mono::Net::Security::MobileTlsContext::dyn_certificateValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_certificateValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateValidator"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::ICertificateValidator2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_Parent
::Mono::Net::Security::MobileAuthenticatedStream* Mono::Net::Security::MobileTlsContext::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::MobileAuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_Settings
::Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::MobileTlsContext::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_IsAuthenticated
bool Mono::Net::Security::MobileTlsContext::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_IsServer
bool Mono::Net::Security::MobileTlsContext::get_IsServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_IsServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_TargetHost
::StringW Mono::Net::Security::MobileTlsContext::get_TargetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_TargetHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_ServerName
::StringW Mono::Net::Security::MobileTlsContext::get_ServerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_ServerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_ClientCertificates
::System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Net::Security::MobileTlsContext::get_ClientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_ClientCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.StartHandshake
void Mono::Net::Security::MobileTlsContext::StartHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::StartHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ProcessHandshake
bool Mono::Net::Security::MobileTlsContext::ProcessHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::ProcessHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.FinishHandshake
void Mono::Net::Security::MobileTlsContext::FinishHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::FinishHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_LocalServerCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::get_LocalServerCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_LocalServerCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalServerCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_LocalClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::get_LocalClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_LocalClientCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Read
::System::ValueTuple_2<int, bool> Mono::Net::Security::MobileTlsContext::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Write
::System::ValueTuple_2<int, bool> Mono::Net::Security::MobileTlsContext::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Shutdown
void Mono::Net::Security::MobileTlsContext::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Shutdown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ValidateCertificate
bool Mono::Net::Security::MobileTlsContext::ValidateCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate* leaf, ::System::Security::Cryptography::X509Certificates::X509Chain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::ValidateCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaf), ::il2cpp_utils::ExtractType(chain)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, leaf, chain);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ValidateCertificate
bool Mono::Net::Security::MobileTlsContext::ValidateCertificate(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::ValidateCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificates)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificates);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.SelectClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::SelectClientCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::SelectClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, serverCertificate, acceptableIssuers);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Dispose
void Mono::Net::Security::MobileTlsContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Dispose
void Mono::Net::Security::MobileTlsContext::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Finalize
void Mono::Net::Security::MobileTlsContext::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MonoTlsProviderFactory
#include "Mono/Net/Security/MonoTlsProviderFactory.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object locker
::Il2CppObject* Mono::Net::Security::MonoTlsProviderFactory::_get_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_locker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Net.Security", "MonoTlsProviderFactory", "locker"));
}
// Autogenerated static field setter
// Set static field: static private System.Object locker
void Mono::Net::Security::MonoTlsProviderFactory::_set_locker(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_locker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "locker", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean initialized
bool Mono::Net::Security::MonoTlsProviderFactory::_get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Net.Security", "MonoTlsProviderFactory", "initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean initialized
void Mono::Net::Security::MonoTlsProviderFactory::_set_initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "initialized", value));
}
// Autogenerated static field getter
// Get static field: static private Mono.Security.Interface.MonoTlsProvider defaultProvider
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::_get_defaultProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_defaultProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::MonoTlsProvider*>("Mono.Net.Security", "MonoTlsProviderFactory", "defaultProvider"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Security.Interface.MonoTlsProvider defaultProvider
void Mono::Net::Security::MonoTlsProviderFactory::_set_defaultProvider(::Mono::Security::Interface::MonoTlsProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_defaultProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "defaultProvider", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Tuple`2<System.Guid,System.String>> providerRegistration
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Tuple_2<::System::Guid, ::StringW>*>* Mono::Net::Security::MonoTlsProviderFactory::_get_providerRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_providerRegistration");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Tuple_2<::System::Guid, ::StringW>*>*>("Mono.Net.Security", "MonoTlsProviderFactory", "providerRegistration")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Tuple`2<System.Guid,System.String>> providerRegistration
void Mono::Net::Security::MonoTlsProviderFactory::_set_providerRegistration(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Tuple_2<::System::Guid, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_providerRegistration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "providerRegistration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Guid,Mono.Security.Interface.MonoTlsProvider> providerCache
::System::Collections::Generic::Dictionary_2<::System::Guid, ::Mono::Security::Interface::MonoTlsProvider*>* Mono::Net::Security::MonoTlsProviderFactory::_get_providerCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_providerCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, ::Mono::Security::Interface::MonoTlsProvider*>*>("Mono.Net.Security", "MonoTlsProviderFactory", "providerCache")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Guid,Mono.Security.Interface.MonoTlsProvider> providerCache
void Mono::Net::Security::MonoTlsProviderFactory::_set_providerCache(::System::Collections::Generic::Dictionary_2<::System::Guid, ::Mono::Security::Interface::MonoTlsProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_providerCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "providerCache", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid UnityTlsId
::System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_UnityTlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_UnityTlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "UnityTlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid UnityTlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_UnityTlsId(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_UnityTlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "UnityTlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid AppleTlsId
::System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_AppleTlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_AppleTlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "AppleTlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid AppleTlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_AppleTlsId(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_AppleTlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "AppleTlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid BtlsId
::System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_BtlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_BtlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "BtlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid BtlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_BtlsId(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_BtlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "BtlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid LegacyId
::System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_LegacyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_LegacyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "LegacyId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid LegacyId
void Mono::Net::Security::MonoTlsProviderFactory::_set_LegacyId(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_LegacyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "LegacyId", value));
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.GetProviderInternal
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::GetProviderInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::GetProviderInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "GetProviderInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.InitializeInternal
void Mono::Net::Security::MonoTlsProviderFactory::InitializeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::InitializeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "InitializeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.LookupProvider
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::LookupProvider(::StringW name, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::LookupProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "LookupProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(throwOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, throwOnError);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.InitializeProviderRegistration
void Mono::Net::Security::MonoTlsProviderFactory::InitializeProviderRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::InitializeProviderRegistration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "InitializeProviderRegistration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.CreateDefaultProviderImpl
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::CreateDefaultProviderImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::CreateDefaultProviderImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "CreateDefaultProviderImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.GetProvider
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::GetProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::GetProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "GetProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory..cctor
void Mono::Net::Security::MonoTlsProviderFactory::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MonoTlsStream
#include "Mono/Net/Security/MonoTlsStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Net.Sockets.NetworkStream
#include "System/Net/Sockets/NetworkStream.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsProvider provider
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsProvider*& Mono::Net::Security::MonoTlsStream::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Sockets.NetworkStream networkStream
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::NetworkStream*& Mono::Net::Security::MonoTlsStream::dyn_networkStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_networkStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "networkStream"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::NetworkStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.HttpWebRequest request
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest*& Mono::Net::Security::MonoTlsStream::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsSettings settings
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsSettings*& Mono::Net::Security::MonoTlsStream::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.IMonoSslStream sslStream
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::IMonoSslStream*& Mono::Net::Security::MonoTlsStream::dyn_sslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_sslStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sslStream"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::IMonoSslStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebExceptionStatus status
[[deprecated("Use field access instead!")]] ::System::Net::WebExceptionStatus& Mono::Net::Security::MonoTlsStream::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::System::Net::WebExceptionStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <CertificateValidationFailed>k__BackingField
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MonoTlsStream::dyn_$CertificateValidationFailed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_$CertificateValidationFailed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CertificateValidationFailed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_Request
::System::Net::HttpWebRequest* Mono::Net::Security::MonoTlsStream::get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::get_Request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpWebRequest*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_ExceptionStatus
::System::Net::WebExceptionStatus Mono::Net::Security::MonoTlsStream::get_ExceptionStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::get_ExceptionStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExceptionStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebExceptionStatus, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_CertificateValidationFailed
bool Mono::Net::Security::MonoTlsStream::get_CertificateValidationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::get_CertificateValidationFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateValidationFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.set_CertificateValidationFailed
void Mono::Net::Security::MonoTlsStream::set_CertificateValidationFailed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::set_CertificateValidationFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CertificateValidationFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.CreateStream
::System::IO::Stream* Mono::Net::Security::MonoTlsStream::CreateStream(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::CreateStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.NoReflectionHelper
#include "Mono/Net/Security/NoReflectionHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.NoReflectionHelper.GetInternalValidator
::Il2CppObject* Mono::Net::Security::NoReflectionHelper::GetInternalValidator(::Il2CppObject* provider, ::Il2CppObject* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::NoReflectionHelper::GetInternalValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "NoReflectionHelper", "GetInternalValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, settings);
}
// Autogenerated method: Mono.Net.Security.NoReflectionHelper.GetProvider
::Il2CppObject* Mono::Net::Security::NoReflectionHelper::GetProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::NoReflectionHelper::GetProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "NoReflectionHelper", "GetProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.SystemCertificateValidator
#include "Mono/Net/Security/SystemCertificateValidator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean is_macosx
bool Mono::Net::Security::SystemCertificateValidator::_get_is_macosx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::_get_is_macosx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Net.Security", "SystemCertificateValidator", "is_macosx"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean is_macosx
void Mono::Net::Security::SystemCertificateValidator::_set_is_macosx(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::_set_is_macosx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "SystemCertificateValidator", "is_macosx", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags s_flags
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags Mono::Net::Security::SystemCertificateValidator::_get_s_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::_get_s_flags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("Mono.Net.Security", "SystemCertificateValidator", "s_flags"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags s_flags
void Mono::Net::Security::SystemCertificateValidator::_set_s_flags(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::_set_s_flags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "SystemCertificateValidator", "s_flags", value));
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator..cctor
void Mono::Net::Security::SystemCertificateValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator.CreateX509Chain
::System::Security::Cryptography::X509Certificates::X509Chain* Mono::Net::Security::SystemCertificateValidator::CreateX509Chain(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::CreateX509Chain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", "CreateX509Chain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certs)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Chain*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certs);
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator.NeedsChain
bool Mono::Net::Security::SystemCertificateValidator::NeedsChain(::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::NeedsChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", "NeedsChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers
#include "Mono/Net/Security/Private/CallbackHelpers.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass0_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass0_0.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass1_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass1_0.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass5_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass5_0.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass8_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass8_0.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
// Including type: System.Net.Security.LocalCertificateSelectionCallback
#include "System/Net/Security/LocalCertificateSelectionCallback.hpp"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.PublicToMono
::Mono::Security::Interface::MonoRemoteCertificateValidationCallback* Mono::Net::Security::Private::CallbackHelpers::PublicToMono(::System::Net::Security::RemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::PublicToMono");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "PublicToMono", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoRemoteCertificateValidationCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.PublicToMono
::Mono::Security::Interface::MonoLocalCertificateSelectionCallback* Mono::Net::Security::Private::CallbackHelpers::PublicToMono(::System::Net::Security::LocalCertificateSelectionCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::PublicToMono");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "PublicToMono", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoLocalCertificateSelectionCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.MonoToPublic
::System::Net::Security::RemoteCertificateValidationCallback* Mono::Net::Security::Private::CallbackHelpers::MonoToPublic(::Mono::Security::Interface::MonoRemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::MonoToPublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "MonoToPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::RemoteCertificateValidationCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.MonoToInternal
::System::Net::Security::LocalCertSelectionCallback* Mono::Net::Security::Private::CallbackHelpers::MonoToInternal(::Mono::Security::Interface::MonoLocalCertificateSelectionCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::MonoToInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "MonoToInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::LocalCertSelectionCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass0_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass0_0.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Net.Security.RemoteCertificateValidationCallback callback
[[deprecated("Use field access instead!")]] ::System::Net::Security::RemoteCertificateValidationCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Net::Security::RemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass0_0.<PublicToMono>b__0
bool Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::$PublicToMono$b__0(::StringW h, ::System::Security::Cryptography::X509Certificates::X509Certificate* c, ::System::Security::Cryptography::X509Certificates::X509Chain* ch, ::Mono::Security::Interface::MonoSslPolicyErrors e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::<PublicToMono>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PublicToMono>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, h, c, ch, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass1_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass1_0.hpp"
// Including type: System.Net.Security.LocalCertificateSelectionCallback
#include "System/Net/Security/LocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Net.Security.LocalCertificateSelectionCallback callback
[[deprecated("Use field access instead!")]] ::System::Net::Security::LocalCertificateSelectionCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass1_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass1_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Net::Security::LocalCertificateSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass1_0.<PublicToMono>b__0
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass1_0::$PublicToMono$b__0(::StringW t, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* lc, ::System::Security::Cryptography::X509Certificates::X509Certificate* rc, ::ArrayW<::StringW> ai) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass1_0::<PublicToMono>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PublicToMono>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(lc), ::il2cpp_utils::ExtractType(rc), ::il2cpp_utils::ExtractType(ai)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, t, lc, rc, ai);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass5_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass5_0.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Security.Interface.MonoRemoteCertificateValidationCallback callback
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoRemoteCertificateValidationCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoRemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass5_0.<MonoToPublic>b__0
bool Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::$MonoToPublic$b__0(::Il2CppObject* t, ::System::Security::Cryptography::X509Certificates::X509Certificate* c, ::System::Security::Cryptography::X509Certificates::X509Chain* ch, ::System::Net::Security::SslPolicyErrors e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::<MonoToPublic>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MonoToPublic>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t, c, ch, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass8_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass8_0.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Security.Interface.MonoLocalCertificateSelectionCallback callback
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoLocalCertificateSelectionCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoLocalCertificateSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass8_0.<MonoToInternal>b__0
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::$MonoToInternal$b__0(::StringW t, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* lc, ::System::Security::Cryptography::X509Certificates::X509Certificate* rc, ::ArrayW<::StringW> ai) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::<MonoToInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MonoToInternal>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(lc), ::il2cpp_utils::ExtractType(rc), ::il2cpp_utils::ExtractType(ai)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, t, lc, rc, ai);
}
